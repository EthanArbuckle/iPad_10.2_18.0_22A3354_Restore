void sub_10019BB24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  os_unfair_lock_s *v32;
  _BOOL4 v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  os_unfair_lock_s *v45;
  uint64_t v46;
  os_unfair_lock_s *v47;
  uint64_t v48;
  os_unfair_lock_s *v49;
  uint64_t v50;
  os_unfair_lock_s *v51;
  os_unfair_lock_s *v52;
  os_unfair_lock_s *v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  os_unfair_lock_s *v60;
  uint64_t v61;
  os_unfair_lock_s *v62;
  uint64_t v63;
  os_unfair_lock_s *v64;
  os_unfair_lock_s *v65;
  os_unfair_lock_s *v66;
  uint64_t v67;
  id v68;
  NSURL *v69;
  void *v70;
  void *v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  char *v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  NSObject *v83;
  os_log_type_t v84;
  uint8_t *v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint8_t *v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, uint64_t);
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  char *v100;
  void (*v101)(char *, uint64_t);
  char *v102;
  uint64_t v103;
  os_unfair_lock_s *v104;
  uint64_t v105;
  _QWORD v106[3];
  uint64_t v107;
  _OWORD v108[4];
  uint64_t v109;
  char v110[24];

  v103 = type metadata accessor for Logger(0);
  v101 = *(void (**)(char *, uint64_t))(v103 - 8);
  v1 = __chkstk_darwin(v103);
  v98 = (char *)&v93 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v93 - v4;
  v6 = __chkstk_darwin(v3);
  v102 = (char *)&v93 - v7;
  __chkstk_darwin(v6);
  v100 = (char *)&v93 - v8;
  v9 = sub_100004828(&qword_100630A48);
  v10 = __chkstk_darwin(v9);
  v99 = (char *)&v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v13 = (char *)&v93 - v12;
  v14 = type metadata accessor for URL(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v93 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v20 = (char *)&v93 - v19;
  v21 = v0 + OBJC_IVAR____TtC8coreidvd11UploadAsset_assetFileURL;
  swift_beginAccess(v21, v110, 0, 0);
  sub_100038B24(v21, (uint64_t)v13, &qword_100630A48);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
  {
    v94 = v21;
    v27 = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v20, v13, v14);
    defaultLogger()(v27);
    v28 = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 16))(v18, v20, v14);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.debug.getter(v29);
    v31 = v15;
    v32 = (os_unfair_lock_s *)v30;
    v33 = os_log_type_enabled(v29, v30);
    v96 = v14;
    v97 = v31;
    v95 = v20;
    if (v33)
    {
      v34 = (uint8_t *)swift_slowAlloc(12, -1);
      v35 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v108[0] = v35;
      *(_DWORD *)v34 = 136315138;
      v93 = (void (*)(char *, uint64_t))(v34 + 4);
      v36 = URL.absoluteString.getter();
      v38 = v37;
      v105 = sub_1000E3AC8(v36, v37, (uint64_t *)v108);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v105, v106, v93);
      swift_bridgeObjectRelease(v38);
      v93 = *(void (**)(char *, uint64_t))(v97 + 8);
      v93(v18, v14);
      _os_log_impl((void *)&_mh_execute_header, v29, (os_log_type_t)v32, "Deleting asset file at %s", v34, 0xCu);
      swift_arrayDestroy(v35, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v35, -1, -1);
      v39 = v34;
      v20 = v95;
      v40 = v103;
      swift_slowDealloc(v39, -1, -1);

      v41 = v40;
      v42 = v100;
      v43 = (void (*)(char *, uint64_t))*((_QWORD *)v101 + 1);
      v44 = v40;
    }
    else
    {
      v93 = *(void (**)(char *, uint64_t))(v31 + 8);
      v93(v18, v14);

      v42 = v100;
      v43 = (void (*)(char *, uint64_t))*((_QWORD *)v101 + 1);
      v41 = v103;
      v44 = v103;
    }
    v101 = v43;
    v43(v42, v44);
    v45 = v104;
    if (qword_10062F490 != -1)
      swift_once(&qword_10062F490, sub_100139C84);
    v46 = qword_1006702A0;
    v47 = *(os_unfair_lock_s **)(qword_1006702A0 + 16);
    v48 = (uint64_t)&v47[4];
    v49 = v47 + 52;
    os_unfair_lock_lock(v47 + 52);
    sub_100139D14(v48, v46, v108);
    if (v45)
    {
      os_unfair_lock_unlock(v49);
      __break(1u);
      os_unfair_lock_unlock(v45);
      __break(1u);
      os_unfair_lock_unlock(v32);
      __break(1u);
      return;
    }
    os_unfair_lock_unlock(v49);
    v50 = v109;
    swift_retain(v109);
    sub_10001D410(v108);
    v51 = *(os_unfair_lock_s **)(v50 + 16);
    v52 = v51 + 4;
    v53 = v51 + 6;
    os_unfair_lock_lock(v51 + 6);
    sub_1001DC9E4(v52);
    os_unfair_lock_unlock(v53);
    v54 = swift_release(v50);
    v55 = defaultLogger()(v54);
    v56 = Logger.logObject.getter(v55);
    v57 = static os_log_type_t.debug.getter(v56);
    if (os_log_type_enabled(v56, v57))
    {
      v58 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v58 = 134217984;
      v59 = qword_1006702A0;
      v60 = *(os_unfair_lock_s **)(qword_1006702A0 + 16);
      v61 = (uint64_t)&v60[4];
      v62 = v60 + 52;
      os_unfair_lock_lock(v60 + 52);
      sub_100139D14(v61, v59, v108);
      os_unfair_lock_unlock(v62);
      v63 = v109;
      swift_retain(v109);
      sub_10001D410(v108);
      v64 = *(os_unfair_lock_s **)(v63 + 16);
      v65 = v64 + 4;
      v66 = v64 + 6;
      os_unfair_lock_lock(v64 + 6);
      sub_100003C14(v65, &v105);
      v104 = 0;
      os_unfair_lock_unlock(v66);
      v67 = v105;
      swift_release(v63);
      *(_QWORD *)&v108[0] = v67;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v108, (char *)v108 + 8, v58 + 4);
      _os_log_impl((void *)&_mh_execute_header, v56, v57, "Current upload count: %ld", v58, 0xCu);
      swift_slowDealloc(v58, -1, -1);
      v41 = v103;
      v20 = v95;
    }

    v101(v102, v41);
    v68 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
    URL._bridgeToObjectiveC()(v69);
    v71 = v70;
    *(_QWORD *)&v108[0] = 0;
    v72 = objc_msgSend(v68, "removeItemAtURL:error:", v70, v108);

    v73 = *(_QWORD *)&v108[0];
    v74 = v96;
    if (v72)
    {
      v75 = *(id *)&v108[0];
      v76 = v20;
    }
    else
    {
      v77 = *(id *)&v108[0];
      v78 = _convertNSErrorToError(_:)(v73);

      v80 = swift_willThrow(v79);
      v81 = v98;
      defaultLogger()(v80);
      swift_errorRetain(v78);
      v82 = swift_errorRetain(v78);
      v83 = Logger.logObject.getter(v82);
      v84 = static os_log_type_t.debug.getter(v83);
      if (!os_log_type_enabled(v83, v84))
      {

        swift_errorRelease(v78);
        swift_errorRelease(v78);
        swift_errorRelease(v78);
        v101(v81, v103);
        v93(v20, v74);
        goto LABEL_19;
      }
      v85 = (uint8_t *)swift_slowAlloc(12, -1);
      v86 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v108[0] = v86;
      *(_DWORD *)v85 = 136315138;
      v104 = 0;
      swift_getErrorValue(v78, &v107, v106);
      v87 = Error.localizedDescription.getter(v106[1], v106[2]);
      v89 = v88;
      v105 = sub_1000E3AC8(v87, v88, (uint64_t *)v108);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v105, v106, v85 + 4);
      swift_bridgeObjectRelease(v89);
      swift_errorRelease(v78);
      swift_errorRelease(v78);
      _os_log_impl((void *)&_mh_execute_header, v83, v84, "error occurred during removal of stored document %s. Not a fatal error as the proofing flow can continue.", v85, 0xCu);
      swift_arrayDestroy(v86, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v86, -1, -1);
      v90 = v85;
      v74 = v96;
      swift_slowDealloc(v90, -1, -1);

      swift_errorRelease(v78);
      v101(v98, v103);
      v76 = v95;
    }
    v93(v76, v74);
LABEL_19:
    v91 = (uint64_t)v99;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v97 + 56))(v99, 1, 1, v74);
    v92 = v94;
    swift_beginAccess(v94, v108, 33, 0);
    sub_1000494F8(v91, v92);
    swift_endAccess(v108);
    return;
  }
  v22 = sub_100008030((uint64_t)v13, &qword_100630A48);
  v23 = defaultLogger()(v22);
  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.debug.getter(v24);
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v26 = 0;
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Asset is not on disk so there is nothing to delete", v26, 2u);
    swift_slowDealloc(v26, -1, -1);
  }

  (*((void (**)(char *, uint64_t))v101 + 1))(v5, v103);
}

uint64_t sub_10019C43C()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  sub_100007F78(v0[4], v0[5]);
  sub_100008030((uint64_t)v0 + OBJC_IVAR____TtC8coreidvd11UploadAsset_assetFileURL, &qword_100630A48);
  sub_100007F78(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8coreidvd11UploadAsset_systemData), *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8coreidvd11UploadAsset_systemData + 8));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_10019C498()
{
  return type metadata accessor for UploadAsset(0);
}

uint64_t type metadata accessor for UploadAsset(uint64_t a1)
{
  return sub_100038B7C(a1, qword_100636D28, (uint64_t)&nominal type descriptor for UploadAsset);
}

void sub_10019C4B4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_100525488;
  v4[1] = &unk_1005254A0;
  v4[2] = &unk_1005254B8;
  sub_1000494A4(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    v4[4] = &unk_1005254A0;
    swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
  }
}

_QWORD *sub_10019C540()
{
  uint64_t v0;
  _QWORD *result;

  v0 = type metadata accessor for UploadsCloudContainer(0);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  result = sub_10019C5BC();
  qword_1006702B0 = (uint64_t)result;
  return result;
}

uint64_t sub_10019C57C()
{
  uint64_t v0;
  uint64_t result;

  v0 = sub_100004828(&qword_100637200);
  result = swift_allocObject(v0, 28, 7);
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 16) = &_swiftEmptyDictionarySingleton;
  qword_100636CF8 = result;
  return result;
}

_QWORD *sub_10019C5BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;
  void *v10;
  id v11;
  Swift::String v12;
  Swift::Bool v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t *)(v0 + OBJC_IVAR____TtC8coreidvd21UploadsCloudContainer_name);
  *v6 = 0x7364616F6C7075;
  v6[1] = 0xE700000000000000;
  v7 = (uint64_t *)(v0 + OBJC_IVAR____TtC8coreidvd21UploadsCloudContainer_containerIDProd);
  *v7 = 0xD000000000000019;
  v7[1] = 0x8000000100551000;
  v8 = (uint64_t *)(v0 + OBJC_IVAR____TtC8coreidvd21UploadsCloudContainer_containerIDNonProd);
  *v8 = 0xD000000000000021;
  v8[1] = 0x8000000100551020;
  v9 = (uint64_t *)(v0 + OBJC_IVAR____TtC8coreidvd21UploadsCloudContainer_networkAttributionBundleID);
  *v9 = 0xD000000000000012;
  v9[1] = 0x8000000100551050;
  v10 = (void *)objc_opt_self(NSUserDefaults);
  swift_retain(v1);
  v11 = objc_msgSend(v10, "standardUserDefaults");
  v12._object = (void *)0x8000000100551070;
  v12._countAndFlagsBits = 0xD000000000000019;
  v13 = NSUserDefaults.internalBool(forKey:)(v12);

  if (v13)
  {
    v15 = defaultLogger()(v14);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.debug.getter(v16);
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Using nonprod uploads CloudKit container due to user defaults setting", v18, 2u);
      swift_slowDealloc(v18, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v19 = *v8;
    v20 = v8[1];
  }
  else
  {
    v19 = *v7;
    v20 = v7[1];
  }
  swift_bridgeObjectRetain(v20);
  swift_release(v1);
  v21 = *v6;
  v22 = v6[1];
  v23 = *v9;
  v24 = v9[1];
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRetain(v24);
  return sub_10018544C(v21, v22, v19, v20, v23, v24);
}

_QWORD *sub_10019C800(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  _QWORD *v11;
  _QWORD *v12;
  unint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  Swift::String v19;
  Swift::Bool v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  char *v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45[3];
  unint64_t v46;
  unint64_t v47;

  v2 = v1;
  v4 = 0xD000000000000021;
  v5 = type metadata accessor for Logger(0);
  v43 = *(_QWORD *)(v5 - 8);
  v6 = __chkstk_darwin(v5);
  v42 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v9 = (char *)&v40 - v8;
  v10 = (uint64_t *)(v2 + OBJC_IVAR____TtC8coreidvd21UploadsCloudContainer_name);
  *v10 = 0x7364616F6C7075;
  v10[1] = 0xE700000000000000;
  v41 = v10;
  v11 = (_QWORD *)(v2 + OBJC_IVAR____TtC8coreidvd21UploadsCloudContainer_containerIDProd);
  *v11 = 0xD000000000000019;
  v11[1] = 0x8000000100551000;
  v12 = (_QWORD *)(v2 + OBJC_IVAR____TtC8coreidvd21UploadsCloudContainer_containerIDNonProd);
  v13 = 0x8000000100551020;
  *v12 = 0xD000000000000021;
  v12[1] = 0x8000000100551020;
  v14 = (uint64_t *)(v2 + OBJC_IVAR____TtC8coreidvd21UploadsCloudContainer_networkAttributionBundleID);
  *v14 = 0xD000000000000012;
  v14[1] = 0x8000000100551050;
  v15 = 0xD000000000000010;
  if (a1 == 1)
    v15 = 0xD000000000000021;
  else
    v13 = 0x8000000100551580;
  if (a1)
    v16 = v15;
  else
    v16 = 0xD000000000000019;
  if (a1)
    v17 = v13;
  else
    v17 = 0x8000000100551000;
  v46 = v16;
  v47 = v17;
  v18 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v19._object = (void *)0x8000000100551070;
  v19._countAndFlagsBits = 0xD000000000000019;
  v20 = NSUserDefaults.internalBool(forKey:)(v19);

  if (v20)
  {
    v22 = swift_bridgeObjectRelease(v17);
    v23 = defaultLogger()(v22);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.debug.getter(v24);
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Internal setting for non-prod container enabled, using certification Uploads Container", v26, 2u);
      swift_slowDealloc(v26, -1, -1);
    }

    v21 = (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v9, v5);
    v17 = 0x8000000100551020;
    v46 = 0xD000000000000021;
    v47 = 0x8000000100551020;
  }
  else
  {
    v4 = v16;
  }
  v27 = v42;
  defaultLogger()(v21);
  v28 = swift_bridgeObjectRetain_n(v17, 2);
  v29 = Logger.logObject.getter(v28);
  v30 = static os_log_type_t.debug.getter(v29);
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc(12, -1);
    v32 = swift_slowAlloc(32, -1);
    v45[0] = v32;
    v40 = v5;
    *(_DWORD *)v31 = 136315138;
    swift_bridgeObjectRetain(v17);
    v44 = sub_1000E3AC8(v4, v17, v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, v45, v31 + 4);
    swift_bridgeObjectRelease_n(v17, 3);
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "Initializing UploadsCloudContainer with Container ID: %s", v31, 0xCu);
    swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v32, -1, -1);
    swift_slowDealloc(v31, -1, -1);

    (*(void (**)(char *, uint64_t))(v43 + 8))(v42, v40);
  }
  else
  {

    swift_bridgeObjectRelease_n(v17, 2);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v27, v5);
  }
  v33 = *v41;
  v34 = v41[1];
  swift_beginAccess(&v46, v45, 0, 0);
  v35 = v46;
  v36 = v47;
  v37 = *v14;
  v38 = v14[1];
  swift_bridgeObjectRetain(v34);
  swift_bridgeObjectRetain(v38);
  return sub_10018544C(v33, v34, v35, v36, v37, v38);
}

uint64_t sub_10019CC04@<X0>(_QWORD *a1@<X0>, Swift::UInt a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  _QWORD *v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v6 = type metadata accessor for UploadsCloudContainer(0);
  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  v7 = sub_10019C800(a2);
  swift_retain(v7);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  v11 = *a1;
  *a1 = 0x8000000000000000;
  sub_100481FA8((uint64_t)v7, a2, isUniquelyReferenced_nonNull_native);
  v9 = *a1;
  *a1 = v11;
  result = swift_bridgeObjectRelease(v9);
  *a3 = v7;
  return result;
}

uint64_t sub_10019CCB0@<X0>(uint64_t *a1@<X0>, Swift::UInt a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t result;

  v4 = *a1;
  if (*(_QWORD *)(*a1 + 16) && (v5 = sub_1004A8CE4(a2), (v6 & 1) != 0))
    result = swift_retain(*(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v5));
  else
    result = 0;
  *a3 = result;
  return result;
}

unint64_t sub_10019CD0C()
{
  id v0;
  Swift::String v1;
  Swift::Bool v2;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v1._countAndFlagsBits = 0xD000000000000019;
  v1._object = (void *)0x8000000100551070;
  v2 = NSUserDefaults.internalBool(forKey:)(v1);

  if (v2)
    return 0xD00000000000001BLL;
  else
    return 0xD000000000000013;
}

unint64_t sub_10019CDA8()
{
  id v0;
  Swift::String v1;
  Swift::Bool v2;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v1._object = (void *)0x8000000100551070;
  v1._countAndFlagsBits = 0xD000000000000019;
  v2 = NSUserDefaults.internalBool(forKey:)(v1);

  if (v2)
    return 0xD000000000000023;
  else
    return 0xD00000000000001BLL;
}

unint64_t sub_10019CE4C()
{
  id v0;
  Swift::String v1;
  Swift::Bool v2;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v1._object = (void *)0x8000000100551070;
  v1._countAndFlagsBits = 0xD000000000000019;
  v2 = NSUserDefaults.internalBool(forKey:)(v1);

  if (v2)
    return 0xD000000000000023;
  else
    return 0xD00000000000001BLL;
}

uint64_t sub_10019CEF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD aBlock[5];
  uint64_t v32;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v29 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchTime(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v27 - v15;
  v27 = *(_QWORD *)(v1 + 40);
  static DispatchTime.now()(v14);
  if (qword_10062F498 != -1)
    swift_once(&qword_10062F498, sub_10019A450);
  v17 = type metadata accessor for DispatchTimeInterval(0);
  v18 = sub_1000352C0(v17, (uint64_t)qword_100636CE0);
  + infix(_:_:)(v13, v18);
  v19 = *(void (**)(char *, uint64_t))(v10 + 8);
  v19(v13, v9);
  v20 = swift_allocObject(&unk_10060A200, 32, 7);
  *(_QWORD *)(v20 + 16) = v1;
  *(_QWORD *)(v20 + 24) = a1;
  aBlock[4] = sub_1001A0DB4;
  v32 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1004AB190;
  aBlock[3] = &unk_10060A218;
  v21 = _Block_copy(aBlock);
  v22 = swift_retain(v1);
  static DispatchQoS.unspecified.getter(v22);
  v30 = _swiftEmptyArrayStorage;
  v23 = sub_100004790((unint64_t *)&unk_100632380, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v24 = sub_100004828((uint64_t *)&unk_1006308D0);
  v25 = sub_100107078();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v30, v24, v25, v3, v23);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v16, v8, v5, v21);
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v28);
  v19(v16, v9);
  return swift_release(v32);
}

uint64_t sub_10019D18C(uint64_t (*a1)(_QWORD))
{
  return a1(0);
}

uint64_t sub_10019D1B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  _QWORD v19[3];
  _BYTE v20[8];
  uint64_t v21;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  result = __chkstk_darwin(v2);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v7 = swift_errorRetain(a1);
    defaultLogger()(v7);
    swift_errorRetain(a1);
    v8 = swift_errorRetain(a1);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.error.getter(v9);
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(12, -1);
      v12 = swift_slowAlloc(32, -1);
      v21 = v12;
      *(_DWORD *)v11 = 136446210;
      v17 = v11 + 4;
      swift_getErrorValue(a1, v20, v19);
      v13 = Error.localizedDescription.getter(v19[1], v19[2]);
      v15 = v14;
      v18 = sub_1000E3AC8(v13, v14, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, v19, v17);
      swift_bridgeObjectRelease(v15);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Unable to warm up uploads CloudKit container due to error %{public}s", v11, 0xCu);
      swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v12, -1, -1);
      swift_slowDealloc(v11, -1, -1);

      swift_errorRelease(a1);
    }
    else
    {
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      swift_errorRelease(a1);

    }
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return result;
}

uint64_t sub_10019D3AC(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, int a6, char a7, int a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  os_unfair_lock_s *v51;
  os_unfair_lock_s *v52;
  os_unfair_lock_s *v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  void *v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  char *v83;
  __n128 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  NSObject *v95;
  os_log_type_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  int v106;
  char *v107;
  uint64_t v108;
  NSObject *v109;
  os_log_type_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  NSString v120;
  char *v121;
  id v122;
  void *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  id v128;
  NSString *v129;
  uint64_t v130;
  char v131;
  char *v132;
  id v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  NSObject *v139;
  os_log_type_t v140;
  int v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  unint64_t v148;
  void (*v149)(char *, uint64_t);
  void (*v150)(char *, uint64_t);
  uint64_t v151;
  unint64_t v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  int v158;
  uint64_t v159;
  unsigned int (*v160)(char *, uint64_t, uint64_t);
  NSString *v161;
  uint64_t v162;
  char v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  NSObject *v167;
  os_log_type_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  unint64_t v173;
  uint64_t v174;
  void (*v175)(char *, uint64_t);
  uint64_t v176;
  uint64_t v177;
  id v178;
  id v179;
  BOOL v180;
  id v181;
  uint64_t v182;
  uint64_t v183;
  _BYTE *v184;
  uint64_t v185;
  unint64_t v186;
  char isUniquelyReferenced_nonNull_native;
  char *v188;
  uint64_t v189;
  NSObject *v190;
  os_log_type_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  unint64_t v195;
  unint64_t v196;
  uint64_t v197;
  uint64_t v198;
  id v199;
  Swift::String v200;
  Swift::Bool v201;
  uint64_t v202;
  uint64_t v203;
  NSObject *v204;
  os_log_type_t v205;
  uint8_t *v206;
  uint64_t (*v207)(char *, uint64_t);
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  NSObject *v212;
  os_log_type_t v213;
  uint8_t *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  unint64_t v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  void (*v230)(char *, char *, uint64_t);
  uint64_t v231;
  char *v232;
  char *v233;
  uint64_t v234;
  void *v235;
  uint64_t v236;
  NSFileAttributeKey v237;
  __n128 v238;
  int v239;
  unint64_t v240;
  uint64_t v241;
  void *v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  unint64_t v247;
  NSFileAttributeKey v248;
  char *v249;
  char *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  int v256;
  uint64_t v257;
  char *v258;
  char *v259;
  uint64_t v260;
  char *v261;
  char *v262;
  int v263;
  void (*v264)(uint64_t);
  uint64_t v265;
  char *v266;
  uint64_t v267;
  char *v268;
  char *v269;
  char *v270;
  id v271;
  char *v272;
  char *v273;
  uint64_t v274;
  uint64_t v275;
  __n128 v276;
  uint64_t v277;
  char *v278;
  uint64_t v279;
  uint64_t v280;
  unint64_t v281;
  uint64_t v282;
  char *v283;
  uint64_t v284;
  uint64_t i;
  unint64_t v286;
  uint64_t v287;
  id v288;
  _QWORD v289[3];
  char v290[8];
  __int128 v291;
  uint64_t v292;
  __int128 v293;
  __int128 v294;

  v256 = a8;
  v263 = a6;
  v257 = a5;
  v286 = a4;
  v265 = a2;
  v264 = a1;
  v10 = 0;
  v245 = type metadata accessor for UploadsCloudContainer.AnalyticsMetadata(0);
  v11 = __chkstk_darwin(v245);
  v244 = (uint64_t)&v236 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v243 = (char *)&v236 - v13;
  v14 = sub_100004828(&qword_100633990);
  __chkstk_darwin(v14);
  v273 = (char *)&v236 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100004828((uint64_t *)&unk_1006371D0);
  v252 = *(_QWORD *)(v16 - 8);
  v17 = __chkstk_darwin(v16);
  v254 = (uint64_t)&v236 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v253 = v18;
  __chkstk_darwin(v17);
  v267 = (uint64_t)&v236 - v19;
  v275 = type metadata accessor for Date(0);
  v274 = *(_QWORD *)(v275 - 8);
  v20 = __chkstk_darwin(v275);
  v262 = (char *)&v236 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v20);
  v259 = (char *)&v236 - v23;
  v251 = v24;
  __chkstk_darwin(v22);
  v266 = (char *)&v236 - v25;
  v26 = sub_100004828(&qword_100630A48);
  __chkstk_darwin(v26);
  v287 = (uint64_t)&v236 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v279 = type metadata accessor for URL(0);
  v280 = *(_QWORD *)(v279 - 8);
  v28 = __chkstk_darwin(v279);
  v261 = (char *)&v236 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v283 = (char *)&v236 - v30;
  v31 = type metadata accessor for DIPError.Code(0);
  v32 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v34 = (char *)&v236 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v284 = type metadata accessor for Logger(0);
  v282 = *(_QWORD *)(v284 - 8);
  v35 = __chkstk_darwin(v284);
  v269 = (char *)&v236 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __chkstk_darwin(v35);
  v249 = (char *)&v236 - v38;
  v39 = __chkstk_darwin(v37);
  v258 = (char *)&v236 - v40;
  v41 = __chkstk_darwin(v39);
  v250 = (char *)&v236 - v42;
  v43 = __chkstk_darwin(v41);
  v270 = (char *)&v236 - v44;
  v45 = __chkstk_darwin(v43);
  v272 = (char *)&v236 - v46;
  v47 = __chkstk_darwin(v45);
  v278 = (char *)&v236 - v48;
  __chkstk_darwin(v47);
  v50 = (char *)&v236 - v49;
  v255 = a3;
  sub_100038B24(a3, (uint64_t)&v291, (uint64_t *)&unk_1006371C0);
  if (!v292)
  {
    sub_100008030((uint64_t)&v291, (uint64_t *)&unk_1006371C0);
    goto LABEL_8;
  }
  sub_100008018(&v291, (uint64_t)&v293);
  v51 = *(os_unfair_lock_s **)(*sub_10000806C(&v293, *((uint64_t *)&v294 + 1)) + 16);
  v52 = v51 + 4;
  v53 = v51 + 5;
  os_unfair_lock_lock(v51 + 5);
  sub_10001EB18(v52, &v291);
  os_unfair_lock_unlock(v53);
  if (v291 != 1)
  {
    _s8coreidvd24DigitalPresentmentHelperVwxx_0(&v293);
LABEL_8:
    v64 = swift_allocObject(&unk_10060A2C8, 24, 7);
    v260 = v64;
    *(_QWORD *)(v64 + 16) = _swiftEmptyArrayStorage;
    v65 = (_QWORD *)(v64 + 16);
    v66 = v286;
    v240 = v286 >> 62;
    if (v286 >> 62)
      goto LABEL_21;
    v67 = *(_QWORD *)((v286 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v286);
    for (i = v67; i; i = _CocoaArrayWrapper.endIndex.getter(v77))
    {
      v68 = v66 & 0xC000000000000001;
      v69 = 4;
      while (1)
      {
        v70 = v69 - 4;
        if (!v68)
          break;
        v71 = specialized _ArrayBuffer._getElementSlowPath(_:)(v69 - 4, v66);
        v72 = v69 - 3;
        if (__OFADD__(v70, 1))
          goto LABEL_20;
LABEL_16:
        v73 = sub_1001A1D08(v71);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v73);
        v75 = *(_QWORD *)((*v65 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v74 = *(_QWORD *)((*v65 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v75 >= v74 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v74 > 1, v75 + 1, 1);
        v76 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v75, v73);
        specialized Array._endMutation()(v76);
        swift_release(v71);

        ++v69;
        v66 = v286;
        if (v72 == i)
          goto LABEL_25;
      }
      v71 = *(_QWORD *)(v66 + 8 * v69);
      swift_retain(v71);
      v72 = v69 - 3;
      if (!__OFADD__(v70, 1))
        goto LABEL_16;
LABEL_20:
      __break(1u);
LABEL_21:
      if (v66 < 0)
        v77 = v66;
      else
        v77 = v66 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v66);
    }
LABEL_25:
    swift_bridgeObjectRelease(v66);
    v78 = objc_msgSend(objc_allocWithZone((Class)CKOperationConfiguration), "init");
    v79 = v78;
    if ((v263 & 1) != 0)
      v80 = 25;
    else
      v80 = 17;
    objc_msgSend(v78, "setQualityOfService:", v80);
    v242 = v79;
    objc_msgSend(v79, "setAllowsCellularAccess:", a7 & 1);
    v241 = os_transaction_create("UploadsCloudContainer::saveAssets");
    v247 = sub_10011EB84((uint64_t)_swiftEmptyArrayStorage);
    v81 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
    v271 = v81;
    v82 = i;
    v83 = v283;
    if (i)
    {
      if (i >= 1)
      {
        v281 = v66 & 0xC000000000000001;
        v248 = NSFileCreationDate;
        v237 = NSFileSize;
        v84 = swift_bridgeObjectRetain(v66);
        v246 = 0;
        v85 = 0;
        v84.n128_u64[0] = 136315138;
        v276 = v84;
        v268 = (char *)&type metadata for Any + 8;
        v84.n128_u64[0] = 136315650;
        v238 = v84;
        v86 = v279;
        v87 = v280;
        while (1)
        {
          if (v281)
          {
            v88 = specialized _ArrayBuffer._getElementSlowPath(_:)(v85, v66);
          }
          else
          {
            v88 = *(_QWORD *)(v66 + 8 * v85 + 32);
            swift_retain(v88);
          }
          v89 = v88 + OBJC_IVAR____TtC8coreidvd11UploadAsset_assetFileURL;
          swift_beginAccess(v88 + OBJC_IVAR____TtC8coreidvd11UploadAsset_assetFileURL, &v291, 0, 0);
          v90 = v89;
          v91 = v287;
          sub_100038B24(v90, v287, &qword_100630A48);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v87 + 48))(v91, 1, v86) == 1)
          {
            v92 = sub_100008030(v287, &qword_100630A48);
            v93 = v278;
            defaultLogger()(v92);
            v94 = swift_retain(v88);
            v95 = Logger.logObject.getter(v94);
            v96 = static os_log_type_t.debug.getter(v95);
            if (os_log_type_enabled(v95, v96))
            {
              v97 = swift_slowAlloc(12, -1);
              v98 = swift_slowAlloc(32, -1);
              *(_QWORD *)&v293 = v98;
              *(_DWORD *)v97 = v276.n128_u32[0];
              v99 = *(_QWORD *)(v88 + 16);
              v100 = *(_QWORD *)(v88 + 24);
              swift_bridgeObjectRetain(v100);
              v101 = v99;
              v87 = v280;
              *(_QWORD *)(v97 + 4) = sub_1000E3AC8(v101, v100, (uint64_t *)&v293);
              swift_release(v88);
              v102 = v100;
              v82 = i;
              swift_bridgeObjectRelease(v102);
              _os_log_impl((void *)&_mh_execute_header, v95, v96, "No file url is available for asset %s", (uint8_t *)v97, 0xCu);
              swift_arrayDestroy(v98, 1, v268);
              v103 = v98;
              v66 = v286;
              swift_slowDealloc(v103, -1, -1);
              v104 = v97;
              v86 = v279;
              swift_slowDealloc(v104, -1, -1);
              swift_release(v88);

            }
            else
            {

              swift_release_n(v88, 2);
            }
            (*(void (**)(char *, uint64_t))(v282 + 8))(v93, v284);
            v83 = v283;
            goto LABEL_33;
          }
          v105 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v87 + 32))(v83, v287, v86);
          v106 = *(unsigned __int8 *)(v88 + 48);
          if (v106 == 5)
          {
            v277 = v10;
            v107 = v272;
            defaultLogger()(v105);
            v108 = swift_retain_n(v88, 2);
            v109 = Logger.logObject.getter(v108);
            v110 = static os_log_type_t.debug.getter(v109);
            if (os_log_type_enabled(v109, v110))
            {
              v111 = swift_slowAlloc(12, -1);
              v112 = swift_slowAlloc(32, -1);
              *(_QWORD *)&v293 = v112;
              *(_DWORD *)v111 = v276.n128_u32[0];
              v113 = *(_QWORD *)(v88 + 16);
              v114 = *(_QWORD *)(v88 + 24);
              swift_bridgeObjectRetain(v114);
              *(_QWORD *)(v111 + 4) = sub_1000E3AC8(v113, v114, (uint64_t *)&v293);
              swift_release_n(v88, 2);
              v115 = v114;
              v82 = i;
              swift_bridgeObjectRelease(v115);
              _os_log_impl((void *)&_mh_execute_header, v109, v110, "No asset type is available for asset %s", (uint8_t *)v111, 0xCu);
              swift_arrayDestroy(v112, 1, (char *)&type metadata for Any + 8);
              v116 = v112;
              v66 = v286;
              swift_slowDealloc(v116, -1, -1);
              v117 = v111;
              v86 = v279;
              swift_slowDealloc(v117, -1, -1);
              swift_release(v88);
            }
            else
            {
              swift_release_n(v88, 3);
            }

            (*(void (**)(char *, uint64_t))(v282 + 8))(v107, v284);
            v87 = v280;
            v83 = v283;
            (*(void (**)(char *, uint64_t))(v280 + 8))(v283, v86);
            v10 = v277;
            goto LABEL_33;
          }
          URL.path.getter(v105);
          v119 = v118;
          v120 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v119);
          *(_QWORD *)&v293 = 0;
          v121 = v83;
          v122 = objc_msgSend(v271, "attributesOfItemAtPath:error:", v120, &v293);

          v123 = (void *)v293;
          if (!v122)
          {
            v132 = v121;
            v133 = (id)v293;
            v134 = _convertNSErrorToError(_:)(v123);

            v136 = swift_willThrow(v135);
            v10 = 0;
            defaultLogger()(v136);
            v87 = v280;
            v137 = v261;
            v86 = v279;
            (*(void (**)(char *, char *, uint64_t))(v280 + 16))(v261, v132, v279);
            swift_retain(v88);
            swift_errorRetain(v134);
            swift_retain(v88);
            v138 = swift_errorRetain(v134);
            v139 = Logger.logObject.getter(v138);
            v140 = static os_log_type_t.debug.getter(v139);
            v141 = v140;
            if (os_log_type_enabled(v139, v140))
            {
              v142 = swift_slowAlloc(32, -1);
              v277 = swift_slowAlloc(96, -1);
              *(_QWORD *)&v293 = v277;
              *(_DWORD *)v142 = v238.n128_u32[0];
              v239 = v141;
              v143 = *(_QWORD *)(v88 + 16);
              v144 = *(_QWORD *)(v88 + 24);
              swift_bridgeObjectRetain(v144);
              *(_QWORD *)(v142 + 4) = sub_1000E3AC8(v143, v144, (uint64_t *)&v293);
              swift_release_n(v88, 2);
              v145 = swift_bridgeObjectRelease(v144);
              *(_WORD *)(v142 + 12) = 2080;
              v146 = URL.path.getter(v145);
              v148 = v147;
              *(_QWORD *)(v142 + 14) = sub_1000E3AC8(v146, v147, (uint64_t *)&v293);
              swift_bridgeObjectRelease(v148);
              v149 = *(void (**)(char *, uint64_t))(v280 + 8);
              v149(v137, v279);
              v150 = v149;
              *(_WORD *)(v142 + 22) = 2080;
              swift_getErrorValue(v134, v290, v289);
              v151 = Error.localizedDescription.getter(v289[1], v289[2]);
              v153 = v152;
              *(_QWORD *)(v142 + 24) = sub_1000E3AC8(v151, v152, (uint64_t *)&v293);
              swift_bridgeObjectRelease(v153);
              swift_errorRelease(v134);
              swift_errorRelease(v134);
              _os_log_impl((void *)&_mh_execute_header, v139, (os_log_type_t)v239, "Skipping analytics because no attributes are available for %s at url %s, error %s", (uint8_t *)v142, 0x20u);
              v154 = v277;
              swift_arrayDestroy(v277, 3, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v154, -1, -1);
              v155 = v142;
              v87 = v280;
              swift_slowDealloc(v155, -1, -1);

              swift_errorRelease(v134);
              swift_release(v88);
              (*(void (**)(char *, uint64_t))(v282 + 8))(v269, v284);
              v83 = v283;
              v150(v283, v279);
              v86 = v279;
            }
            else
            {

              swift_errorRelease(v134);
              swift_errorRelease(v134);
              v175 = *(void (**)(char *, uint64_t))(v87 + 8);
              v175(v137, v86);
              swift_release_n(v88, 2);
              swift_errorRelease(v134);
              swift_release(v88);
              (*(void (**)(char *, uint64_t))(v282 + 8))(v269, v284);
              v83 = v283;
              v175(v283, v86);
            }
LABEL_64:
            v82 = i;
            v66 = v286;
            goto LABEL_33;
          }
          type metadata accessor for FileAttributeKey(0);
          v125 = v124;
          v126 = sub_100004790(&qword_10062F9E0, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_10051FE8C);
          v127 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v122, v125, (char *)&type metadata for Any + 8, v126);
          v128 = v123;

          if (!*(_QWORD *)(v127 + 16))
            break;
          v129 = v248;
          v130 = sub_1004A8A40();
          if ((v131 & 1) != 0)
          {
            sub_10002EDBC(*(_QWORD *)(v127 + 56) + 32 * v130, (uint64_t)&v293);
          }
          else
          {
            v293 = 0u;
            v294 = 0u;
          }
          v156 = (uint64_t)v273;

          if (!*((_QWORD *)&v294 + 1))
            goto LABEL_58;
          v157 = v275;
          v158 = swift_dynamicCast(v156, &v293, (char *)&type metadata for Any + 8, v275, 6);
          v159 = v274;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v274 + 56))(v273, v158 ^ 1u, 1, v157);
          v160 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v159 + 48);
          v156 = (uint64_t)v273;
          if (v160(v273, 1, v157) == 1)
            goto LABEL_59;
          (*(void (**)(char *, uint64_t, uint64_t))(v274 + 32))(v259, v156, v275);
          if (*(_QWORD *)(v127 + 16))
          {
            v161 = v237;
            v162 = sub_1004A8A40();
            if ((v163 & 1) != 0)
            {
              sub_10002EDBC(*(_QWORD *)(v127 + 56) + 32 * v162, (uint64_t)&v293);
            }
            else
            {
              v293 = 0u;
              v294 = 0u;
            }

          }
          else
          {
            v293 = 0u;
            v294 = 0u;
          }
          swift_bridgeObjectRelease(v127);
          if (*((_QWORD *)&v294 + 1))
          {
            v176 = sub_10001CFF8(0, &qword_100636CA8, NSNumber_ptr);
            v177 = swift_dynamicCast(&v288, &v293, (char *)&type metadata for Any + 8, v176, 6);
            if ((v177 & 1) != 0)
            {
              v178 = v288;
              v179 = objc_msgSend(v288, "unsignedLongLongValue");
              v180 = __CFADD__(v246, v179);
              v246 += (uint64_t)v179;
              if (v180)
                goto LABEL_99;
              v181 = v179;
              v182 = *(_QWORD *)(v88 + 24);
              v277 = *(_QWORD *)(v88 + 16);
              v183 = v245;
              v184 = v243;
              (*(void (**)(char *, char *, uint64_t))(v274 + 16))(&v243[*(int *)(v245 + 20)], v259, v275);
              *v184 = v106;
              *(_QWORD *)&v184[*(int *)(v183 + 24)] = v181;
              v185 = v244;
              sub_1001A25F0((uint64_t)v184, v244);
              swift_bridgeObjectRetain(v182);
              v186 = v247;
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v247);
              *(_QWORD *)&v293 = v186;
              sub_1004820E0(v185, v277, v182, isUniquelyReferenced_nonNull_native);
              v247 = v293;
              swift_release(v88);

              swift_bridgeObjectRelease(v182);
              swift_bridgeObjectRelease(0x8000000000000000);
              (*(void (**)(char *, uint64_t))(v274 + 8))(v259, v275);
              v87 = v280;
              v83 = v283;
              v86 = v279;
              (*(void (**)(char *, uint64_t))(v280 + 8))(v283, v279);
              goto LABEL_64;
            }
          }
          else
          {
            v177 = sub_100008030((uint64_t)&v293, (uint64_t *)&unk_1006371E0);
          }
          v188 = v250;
          defaultLogger()(v177);
          v189 = swift_retain_n(v88, 2);
          v190 = Logger.logObject.getter(v189);
          v191 = static os_log_type_t.debug.getter(v190);
          if (os_log_type_enabled(v190, v191))
          {
            v192 = swift_slowAlloc(12, -1);
            v193 = swift_slowAlloc(32, -1);
            *(_QWORD *)&v293 = v193;
            *(_DWORD *)v192 = v276.n128_u32[0];
            v194 = *(_QWORD *)(v88 + 16);
            v195 = *(_QWORD *)(v88 + 24);
            swift_bridgeObjectRetain(v195);
            *(_QWORD *)(v192 + 4) = sub_1000E3AC8(v194, v195, (uint64_t *)&v293);
            swift_release_n(v88, 2);
            v196 = v195;
            v82 = i;
            swift_bridgeObjectRelease(v196);
            _os_log_impl((void *)&_mh_execute_header, v190, v191, "No file size available for asset %s", (uint8_t *)v192, 0xCu);
            swift_arrayDestroy(v193, 1, (char *)&type metadata for Any + 8);
            v197 = v193;
            v66 = v286;
            swift_slowDealloc(v197, -1, -1);
            swift_slowDealloc(v192, -1, -1);
            swift_release(v88);

            (*(void (**)(char *, uint64_t))(v282 + 8))(v250, v284);
          }
          else
          {
            swift_release_n(v88, 3);

            (*(void (**)(char *, uint64_t))(v282 + 8))(v188, v284);
          }
          (*(void (**)(char *, uint64_t))(v274 + 8))(v259, v275);
LABEL_62:
          v87 = v280;
          v83 = v283;
          v86 = v279;
          (*(void (**)(char *, uint64_t))(v280 + 8))(v283, v279);
LABEL_33:
          if (v82 == ++v85)
          {
            v81 = (id)swift_bridgeObjectRelease(v66);
            goto LABEL_79;
          }
        }
        v293 = 0u;
        v294 = 0u;
        v156 = (uint64_t)v273;
LABEL_58:
        sub_100008030((uint64_t)&v293, (uint64_t *)&unk_1006371E0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v274 + 56))(v156, 1, 1, v275);
LABEL_59:
        swift_bridgeObjectRelease(v127);
        v164 = sub_100008030(v156, &qword_100633990);
        v165 = v270;
        defaultLogger()(v164);
        v166 = swift_retain_n(v88, 2);
        v167 = Logger.logObject.getter(v166);
        v168 = static os_log_type_t.debug.getter(v167);
        if (os_log_type_enabled(v167, v168))
        {
          v169 = swift_slowAlloc(12, -1);
          v170 = swift_slowAlloc(32, -1);
          *(_QWORD *)&v293 = v170;
          *(_DWORD *)v169 = v276.n128_u32[0];
          v171 = *(_QWORD *)(v88 + 16);
          v172 = *(_QWORD *)(v88 + 24);
          swift_bridgeObjectRetain(v172);
          *(_QWORD *)(v169 + 4) = sub_1000E3AC8(v171, v172, (uint64_t *)&v293);
          swift_release_n(v88, 2);
          v173 = v172;
          v82 = i;
          swift_bridgeObjectRelease(v173);
          _os_log_impl((void *)&_mh_execute_header, v167, v168, "No attributes available for asset %s", (uint8_t *)v169, 0xCu);
          swift_arrayDestroy(v170, 1, (char *)&type metadata for Any + 8);
          v174 = v170;
          v66 = v286;
          swift_slowDealloc(v174, -1, -1);
          swift_slowDealloc(v169, -1, -1);
          swift_release(v88);

          (*(void (**)(char *, uint64_t))(v282 + 8))(v270, v284);
        }
        else
        {
          swift_release_n(v88, 3);

          (*(void (**)(char *, uint64_t))(v282 + 8))(v165, v284);
        }
        goto LABEL_62;
      }
      __break(1u);
LABEL_99:
      __break(1u);
    }
    else
    {
      v246 = 0;
LABEL_79:
      Date.init()(v81);
      type metadata accessor for NetworkMonitor(0);
      v198 = static NetworkMonitor.shared.getter();
      dispatch thunk of NetworkMonitor.currentPath.getter();
      swift_release(v198);
      v199 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
      v200._countAndFlagsBits = 0xD00000000000002CLL;
      v200._object = (void *)0x80000001005512E0;
      v201 = NSUserDefaults.internalBool(forKey:)(v200);

      if (!v201)
        goto LABEL_97;
      v203 = defaultLogger()(v202);
      v204 = Logger.logObject.getter(v203);
      v205 = static os_log_type_t.debug.getter(v204);
      if (os_log_type_enabled(v204, v205))
      {
        v206 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v206 = 0;
        _os_log_impl((void *)&_mh_execute_header, v204, v205, "forceCloudkitPartialRecordsFailure internal setting enabled", v206, 2u);
        swift_slowDealloc(v206, -1, -1);
      }

      v207 = *(uint64_t (**)(char *, uint64_t))(v282 + 8);
      v208 = v207(v258, v284);
      if (v240)
      {
        if (v66 < 0)
          v209 = v66;
        else
          v209 = v66 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v66);
        v210 = _CocoaArrayWrapper.endIndex.getter(v209);
        v208 = swift_bridgeObjectRelease(v66);
        if (v210 < 2)
          goto LABEL_97;
      }
      else if (*(uint64_t *)((v66 & 0xFFFFFFFFFFFFF8) + 0x10) < 2)
      {
        goto LABEL_97;
      }
      v211 = defaultLogger()(v208);
      v212 = Logger.logObject.getter(v211);
      v213 = static os_log_type_t.debug.getter(v212);
      if (os_log_type_enabled(v212, v213))
      {
        v214 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v214 = 0;
        _os_log_impl((void *)&_mh_execute_header, v212, v213, "Number of assets are greater than 1, will remove the first item from the disk to simulate partial failure.", v214, 2u);
        swift_slowDealloc(v214, -1, -1);
      }

      v207(v249, v284);
      if (!v82)
        goto LABEL_97;
      if ((v66 & 0xC000000000000001) == 0)
      {
        if (!*(_QWORD *)((v66 & 0xFFFFFFFFFFFFF8) + 0x10))
          __break(1u);
        v215 = *(_QWORD *)(v66 + 32);
        swift_retain(v215);
        sub_10019BB24();
        if (!v10)
          goto LABEL_96;
LABEL_95:
        swift_errorRelease(v10);
LABEL_96:
        swift_release(v215);
LABEL_97:
        v287 = *(_QWORD *)(v260 + 16);
        sub_100038B24(v255, (uint64_t)&v293, (uint64_t *)&unk_1006371C0);
        v216 = v254;
        sub_100038B24(v267, v254, (uint64_t *)&unk_1006371D0);
        v217 = v274;
        (*(void (**)(char *, char *, uint64_t))(v274 + 16))(v262, v266, v275);
        v218 = *(unsigned __int8 *)(v252 + 80);
        v219 = (v218 + 104) & ~v218;
        v220 = *(unsigned __int8 *)(v217 + 80);
        v221 = v66;
        v222 = (v253 + v220 + v219) & ~v220;
        v286 = (v222 + v251 + 7) & 0xFFFFFFFFFFFFFFF8;
        v223 = (v222 + v251 + 23) & 0xFFFFFFFFFFFFFFF8;
        v224 = (char *)swift_allocObject(&unk_10060A2F0, v223 + 9, v218 | v220 | 7);
        v225 = v241;
        *((_QWORD *)v224 + 2) = v241;
        sub_1000A1F54((uint64_t)&v293, (uint64_t)(v224 + 24), (uint64_t *)&unk_1006371C0);
        v226 = v265;
        *((_QWORD *)v224 + 8) = v264;
        *((_QWORD *)v224 + 9) = v226;
        v227 = v257;
        *((_QWORD *)v224 + 10) = v257;
        *((_QWORD *)v224 + 11) = v221;
        v228 = (uint64_t)&v224[v219];
        v229 = v260;
        *((_QWORD *)v224 + 12) = v260;
        sub_1000A1F54(v216, v228, (uint64_t *)&unk_1006371D0);
        v230 = *(void (**)(char *, char *, uint64_t))(v217 + 32);
        v231 = v275;
        v230(&v224[v222], v262, v275);
        v232 = &v224[v286];
        *(_QWORD *)v232 = v247;
        v232[8] = v263 & 1;
        v233 = &v224[v223];
        *(_QWORD *)v233 = v246;
        v233[8] = v256 & 1;
        swift_bridgeObjectRetain(v221);
        v234 = v287;
        swift_bridgeObjectRetain(v287);
        swift_unknownObjectRetain(v225);
        swift_retain(v226);
        swift_retain(v227);
        swift_retain(v229);
        v235 = v242;
        sub_100192978(v234, 5, (uint64_t)v242, (void (*)(uint64_t, _QWORD))sub_1001A2510, (uint64_t)v224);
        swift_unknownObjectRelease(v225);

        swift_bridgeObjectRelease(v234);
        swift_release(v224);
        sub_100008030(v267, (uint64_t *)&unk_1006371D0);
        (*(void (**)(char *, uint64_t))(v274 + 8))(v266, v231);
        return swift_release(v229);
      }
    }
    swift_bridgeObjectRetain(v66);
    v215 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v66);
    swift_bridgeObjectRelease(v66);
    sub_10019BB24();
    if (!v10)
      goto LABEL_96;
    goto LABEL_95;
  }
  v55 = defaultLogger()(v54);
  v56 = Logger.logObject.getter(v55);
  v57 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v56, v57))
  {
    v58 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v58 = 0;
    _os_log_impl((void *)&_mh_execute_header, v56, v57, "saveAssets: cancelToken.isCanceled is true, completing with canceled error code.", v58, 2u);
    swift_slowDealloc(v58, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v282 + 8))(v50, v284);
  (*(void (**)(char *, _QWORD, uint64_t))(v32 + 104))(v34, enum case for DIPError.Code.cloudkitCancelRequestedByClient(_:), v31);
  v59 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
  v60 = type metadata accessor for DIPError(0);
  v61 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
  v62 = swift_allocError(v60, v61, 0, 0);
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001DLL, 0x8000000100551310, 0, v34, 0, v59, 0xD00000000000005BLL, 0x8000000100551190, 0xD00000000000005CLL, 0x8000000100551250, 300);
  v264(v62);
  swift_errorRelease(v62);
  return _s8coreidvd24DigitalPresentmentHelperVwxx_0(&v293);
}

uint64_t sub_10019EF70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), _QWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, char a15)
{
  uint64_t v15;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  BOOL v47;
  NSObject *v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  os_log_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t);
  uint64_t v62;
  _BYTE *v63;
  os_unfair_lock_s *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  uint8_t *v70;
  char *v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint8_t *v76;
  uint8_t *v77;
  unint64_t v78;
  uint64_t v79;
  NSObject *v80;
  __n128 v81;
  uint64_t v82;
  id v83;
  void *v84;
  uint64_t v85;
  id v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  char v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  NSObject *v97;
  os_log_type_t v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  id v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  char *v122;
  uint64_t v123;
  char *v124;
  Swift::String v125;
  Swift::String v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  BOOL v139;
  char *v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD v151[6];
  void (*v152)(uint64_t);
  uint64_t v153;
  uint64_t v154;
  NSObject *v155;
  __n128 v156;
  char *v157;
  int v158;
  int v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t *v163;
  uint8_t *v164;
  uint8_t *v165;
  char *v166;
  char *v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  os_log_t v177;
  unint64_t v178;
  _QWORD *v179;
  uint64_t v180;
  uint64_t v181;
  unint64_t v182;
  uint64_t v183;
  uint64_t v184;
  __int128 v185;
  uint64_t v186;
  uint64_t v187[4];
  char v188[8];
  uint64_t v189;

  v175 = a8;
  v179 = (_QWORD *)a2;
  v21 = sub_100004828(&qword_1006371F0);
  __chkstk_darwin(v21);
  v157 = (char *)v151 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v184 = type metadata accessor for UploadsCloudContainer.AnalyticsMetadata(0);
  v182 = *(_QWORD *)(v184 - 8);
  __chkstk_darwin(v184);
  v183 = (uint64_t)v151 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_100004828((uint64_t *)&unk_1006371D0);
  __chkstk_darwin(v24);
  v26 = (char *)v151 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v173 = type metadata accessor for DIPError(0);
  v168 = *(_QWORD *)(v173 - 8);
  __chkstk_darwin(v173);
  v167 = (char *)v151 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v171 = type metadata accessor for DIPError.Code(0);
  v170 = *(_QWORD *)(v171 - 8);
  __chkstk_darwin(v171);
  v172 = (char *)v151 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v181 = type metadata accessor for Logger(0);
  v180 = *(_QWORD *)(v181 - 8);
  v29 = __chkstk_darwin(v181);
  v176 = (char *)v151 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __chkstk_darwin(v29);
  v166 = (char *)v151 - v32;
  v33 = __chkstk_darwin(v31);
  v35 = (char *)v151 - v34;
  __chkstk_darwin(v33);
  v37 = (char *)v151 - v36;
  v38 = type metadata accessor for Date(0);
  v153 = *(_QWORD *)(v38 - 8);
  v39 = __chkstk_darwin(v38);
  v169 = (char *)v151 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = Date.init()(v39);
  v154 = v38;
  if ((~a1 & 0xF000000000000007) == 0)
  {
    v151[0] = a6;
    v42 = a10;
    v43 = (uint64_t *)(a9 + 16);
    defaultLogger()(v41);
    v44 = swift_retain_n(a9, 2);
    v45 = Logger.logObject.getter(v44);
    v46 = static os_log_type_t.debug.getter(v45);
    LODWORD(v179) = v46;
    v47 = os_log_type_enabled(v45, v46);
    a6 = &unk_10051F000;
    v48 = &type metadata for Any;
    v152 = a5;
    if (v47)
    {
      v177 = v45;
      v49 = (uint8_t *)swift_slowAlloc(12, -1);
      v174 = swift_slowAlloc(32, -1);
      v187[0] = v174;
      v178 = a10;
      v165 = v49;
      *(_DWORD *)v49 = 136315138;
      v164 = v49 + 4;
      swift_beginAccess(a9 + 16, v188, 0, 0);
      v50 = *(_QWORD *)(a9 + 16);
      v51 = sub_10001CFF8(0, &qword_1006371F8, CKRecord_ptr);
      v52 = swift_bridgeObjectRetain(v50);
      v53 = Array.description.getter(v52, v51);
      v55 = v54;
      swift_bridgeObjectRelease(v50);
      v56 = v53;
      v43 = (uint64_t *)(a9 + 16);
      v48 = &type metadata for Any;
      a6 = (_QWORD *)&unk_10051F000;
      *(_QWORD *)&v185 = sub_1000E3AC8(v56, v55, v187);
      v42 = v178;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v185, (char *)&v185 + 8, v164);
      swift_release_n(a9, 2);
      swift_bridgeObjectRelease(v55);
      v57 = v177;
      v58 = v165;
      _os_log_impl((void *)&_mh_execute_header, v177, (os_log_type_t)v179, "Successfully saved asset records %s to CloudKit", v165, 0xCu);
      v59 = v174;
      swift_arrayDestroy(v174, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v59, -1, -1);
      swift_slowDealloc(v58, -1, -1);

    }
    else
    {

      swift_release_n(a9, 2);
    }
    v180 = *(_QWORD *)(v180 + 8);
    ((void (*)(char *, uint64_t))v180)(v37, v181);
    sub_100038B24(v42, (uint64_t)v26, (uint64_t *)&unk_1006371D0);
    v162 = sub_1004FF5E8((uint64_t)v26);
    v164 = v76;
    v161 = sub_1004FF83C((uint64_t)v26);
    v165 = v77;
    sub_100008030((uint64_t)v26, (uint64_t *)&unk_1006371D0);
    Date.timeIntervalSince(_:)(a11);
    swift_beginAccess(v43, v187, 0, 0);
    a1 = *v43;
    v78 = (unint64_t)*v43 >> 62;
    v15 = (uint64_t)v157;
    v79 = (uint64_t)v176;
    v163 = v43;
    if (v78)
      goto LABEL_45;
    v80 = *(NSObject **)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    for (; v80; v80 = _CocoaArrayWrapper.endIndex.getter(v146))
    {
      v160 = a14;
      v179 = (_QWORD *)a12;
      v178 = a1 & 0xC000000000000001;
      v81 = swift_beginAccess(v163, &v185, 0, 0);
      v82 = 4;
      v81.n128_u64[0] = a6[482];
      v156 = v81;
      v155 = v48 + 1;
      v151[5] = 0x8000000100551450;
      v159 = a15 & 1;
      v158 = a13 & 1;
      v151[4] = 0x8000000100551470;
      v151[3] = 0x8000000100551430;
      v151[2] = 0x8000000100551400;
      v151[1] = 0x8000000100551380;
      v174 = a1;
      v177 = v80;
      while (1)
      {
        v83 = v178
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v82 - 4, a1)
            : *(id *)(a1 + 8 * v82);
        v84 = v83;
        v85 = (uint64_t)v179;
        v48 = (v82 - 3);
        if (__OFADD__(v82 - 4, 1))
          break;
        v86 = objc_msgSend(v83, "recordID");
        v87 = objc_msgSend(v86, "recordName");

        a6 = (_QWORD *)static String._unconditionallyBridgeFromObjectiveC(_:)(v87);
        v89 = v88;

        if (*(_QWORD *)(v85 + 16) && (v90 = sub_1004A8604((uint64_t)a6, v89), (v91 & 1) != 0))
        {
          sub_1001A2670(*(_QWORD *)(v85 + 56) + *(_QWORD *)(v182 + 72) * v90, v15);
          v92 = 0;
        }
        else
        {
          v92 = 1;
        }
        v93 = v182;
        v94 = v184;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v182 + 56))(v15, v92, 1, v184);
        swift_bridgeObjectRelease(v89);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v93 + 48))(v15, 1, v94) != 1)
        {
          v107 = v183;
          sub_1001A25F0(v15, v183);
          __asm { BR              X9 }
        }
        v95 = sub_100008030(v15, &qword_1006371F0);
        defaultLogger()(v95);
        v96 = v84;
        v97 = Logger.logObject.getter(v96);
        v98 = static os_log_type_t.debug.getter(v97);
        if (os_log_type_enabled(v97, v98))
        {
          v99 = swift_slowAlloc(12, -1);
          v100 = swift_slowAlloc(32, -1);
          v189 = v100;
          *(_DWORD *)v99 = v156.n128_u32[0];
          v101 = objc_msgSend(v96, "recordID");
          v102 = objc_msgSend(v101, "recordName");

          v103 = static String._unconditionallyBridgeFromObjectiveC(_:)(v102);
          a6 = v104;

          v15 = (uint64_t)v157;
          v105 = v103;
          v79 = (uint64_t)v176;
          *(_QWORD *)(v99 + 4) = sub_1000E3AC8(v105, (unint64_t)a6, &v189);

          swift_bridgeObjectRelease(a6);
          _os_log_impl((void *)&_mh_execute_header, v97, v98, "Not recording analytics for %s because no metadat is available", (uint8_t *)v99, 0xCu);
          swift_arrayDestroy(v100, 1, v155);
          v106 = v100;
          a1 = v174;
          swift_slowDealloc(v106, -1, -1);
          swift_slowDealloc(v99, -1, -1);

        }
        else
        {

        }
        ((void (*)(uint64_t, uint64_t))v180)(v79, v181);
        ++v82;
        if (v48 == v177)
          goto LABEL_49;
      }
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      if (a1 < 0)
        v146 = a1;
      else
        v146 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
    }
LABEL_49:
    swift_bridgeObjectRelease(v164);
    swift_bridgeObjectRelease(a1);
    swift_bridgeObjectRelease(v165);
    v135 = v175;
    if ((unint64_t)v175 >> 62)
    {
      if (v175 < 0)
        v149 = v175;
      else
        v149 = v175 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v175);
      v132 = _CocoaArrayWrapper.endIndex.getter(v149);
      if (v132)
        goto LABEL_51;
    }
    else
    {
      v132 = *(_QWORD *)((v175 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v175);
      if (v132)
      {
LABEL_51:
        if (v132 >= 1)
        {
          v147 = 0;
          LODWORD(v184) = enum case for DIPError.Code.internalError(_:);
          v182 = 0x8000000100551190;
          v183 = 0x8000000100551250;
          v179 = (_QWORD *)0xD000000000000040;
          v178 = 0x8000000100551330;
          do
          {
            if ((v135 & 0xC000000000000001) != 0)
            {
              v148 = specialized _ArrayBuffer._getElementSlowPath(_:)(v147, v135);
            }
            else
            {
              v148 = *(_QWORD *)(v135 + 8 * v147 + 32);
              swift_retain(v148);
            }
            sub_10019BB24();
            swift_release(v148);
            ++v147;
          }
          while (v132 != v147);
          goto LABEL_62;
        }
        __break(1u);
        goto LABEL_64;
      }
    }
LABEL_62:
    swift_bridgeObjectRelease(v135);
    v152(0);
    return (*(uint64_t (**)(char *, uint64_t))(v153 + 8))(v169, v154);
  }
  sub_100038B24(a4, (uint64_t)&v185, (uint64_t *)&unk_1006371C0);
  if (!v186)
  {
    v65 = v179;
    sub_1001A26B4(a1, (uint64_t)v179);
    sub_100008030((uint64_t)&v185, (uint64_t *)&unk_1006371C0);
    v48 = 0;
    goto LABEL_29;
  }
  v60 = a1;
  v61 = a5;
  sub_100008018(&v185, (uint64_t)v187);
  v62 = *(_QWORD *)(*sub_10000806C(v187, v187[3]) + 16);
  v63 = (_BYTE *)(v62 + 16);
  v64 = (os_unfair_lock_s *)(v62 + 20);
  v184 = v60;
  v65 = v179;
  sub_1001A26B4(v60, (uint64_t)v179);
  os_unfair_lock_lock(v64);
  v48 = 0;
  sub_10001EB18(v63, &v185);
  os_unfair_lock_unlock(v64);
  if ((v185 & 1) == 0)
  {
    _s8coreidvd24DigitalPresentmentHelperVwxx_0(v187);
    a5 = v61;
    a1 = v184;
LABEL_29:
    v152 = a5;
    if ((a1 & 0x8000000000000000) == 0)
    {
      v108 = sub_100004828((uint64_t *)&unk_1006325A0);
      v109 = sub_100004828((uint64_t *)&unk_100633440);
      v110 = *(_QWORD *)(v109 - 8);
      v111 = *(_QWORD *)(v110 + 72);
      v112 = *(unsigned __int8 *)(v110 + 80);
      v113 = (v112 + 32) & ~v112;
      v114 = swift_allocObject(v108, v113 + v111, v112 | 7);
      *(_OWORD *)(v114 + 16) = xmmword_10051FFB0;
      v115 = v114 + v113;
      v116 = (_QWORD *)(v115 + *(int *)(v109 + 48));
      v117 = enum case for DIPError.PropertyKey.cloudContainerName(_:);
      v118 = type metadata accessor for DIPError.PropertyKey(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 104))(v115, v117, v118);
      v119 = *(_QWORD *)(a7 + OBJC_IVAR____TtC8coreidvd21UploadsCloudContainer_name);
      v120 = *(_QWORD *)(a7 + OBJC_IVAR____TtC8coreidvd21UploadsCloudContainer_name + 8);
      v116[3] = &type metadata for String;
      *v116 = v119;
      v116[1] = v120;
      sub_1001A2728(a1, (uint64_t)v65);
      swift_bridgeObjectRetain(v120);
      v121 = sub_10011D314(v114);
      v122 = v172;
      (*(void (**)(char *, _QWORD, uint64_t))(v170 + 104))(v172, enum case for DIPError.Code.internalError(_:), v171);
      sub_1001A26B4(a1, (uint64_t)v65);
      v123 = (uint64_t)v65;
      v124 = v167;
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000021, 0x8000000100551490, a1, v122, 0, v121, 0xD00000000000005BLL, 0x8000000100551190, 0xD00000000000005CLL, 0x8000000100551250, 404);
      v125._countAndFlagsBits = 0xD000000000000015;
      v125._object = (void *)0x80000001005514C0;
      v126._countAndFlagsBits = 0x3031323638313933;
      v126._object = (void *)0xE800000000000000;
      logMilestone(tag:description:)(v126, v125);
      v127 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
      v128 = v173;
      v129 = swift_allocError(v173, v127, 0, 0);
      v130 = v168;
      (*(void (**)(uint64_t, char *, uint64_t))(v168 + 16))(v131, v124, v128);
      v152(v129);
      swift_errorRelease(v129);
      sub_1001A26E4(a1, v123);
      sub_1001A26E4(a1, v123);
      (*(void (**)(char *, uint64_t))(v130 + 8))(v124, v128);
      return (*(uint64_t (**)(char *, uint64_t))(v153 + 8))(v169, v154);
    }
    v132 = a1 & 0x7FFFFFFFFFFFFFFFLL;
    swift_bridgeObjectRetain(v65);
    swift_errorRetain(a1 & 0x7FFFFFFFFFFFFFFFLL);
    v133 = v175;
    v134 = swift_bridgeObjectRetain(v175);
    v135 = (uint64_t)sub_1001A1A6C(v134, v65);
    swift_bridgeObjectRelease(v133);
    swift_bridgeObjectRelease(v65);
    if (!((unint64_t)v135 >> 62))
    {
      v136 = *(_QWORD *)((v135 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v135);
      if (!v136)
      {
LABEL_68:
        swift_bridgeObjectRelease_n(v135, 2);
LABEL_69:
        swift_errorRetain(v132);
        v152(v132);
        swift_errorRelease(v132);
        sub_1001A26E4(a1, (uint64_t)v179);
        swift_errorRelease(v132);
        return (*(uint64_t (**)(char *, uint64_t))(v153 + 8))(v169, v154);
      }
LABEL_33:
      v151[0] = a6;
      v79 = 4;
      while (1)
      {
        v137 = v79 - 4;
        if ((v135 & 0xC000000000000001) != 0)
        {
          v138 = specialized _ArrayBuffer._getElementSlowPath(_:)(v79 - 4, v135);
          v139 = __OFADD__(v137, 1);
          a6 = (_QWORD *)(v79 - 3);
          if (v139)
            goto LABEL_44;
        }
        else
        {
          v138 = *(_QWORD *)(v135 + 8 * v79);
          swift_retain(v138);
          v139 = __OFADD__(v137, 1);
          a6 = (_QWORD *)(v79 - 3);
          if (v139)
            goto LABEL_44;
        }
        sub_10019BB24();
        if (v48)
          break;
        swift_release(v138);
        ++v79;
        if (a6 == (_QWORD *)v136)
          goto LABEL_68;
      }
      swift_bridgeObjectRelease_n(v135, 2);
      swift_release(v138);
      v140 = v172;
      (*(void (**)(char *, _QWORD, uint64_t))(v170 + 104))(v172, enum case for DIPError.Code.internalError(_:), v171);
      swift_errorRetain(v48);
      v141 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
      v142 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
      v143 = swift_allocError(v173, v142, 0, 0);
      v144 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, v48, v140, 0, v141, 0xD00000000000005BLL, 0x8000000100551190, 0xD00000000000005CLL, 0x8000000100551250, 413);
      v145 = v166;
      defaultLogger()(v144);
      DIPRecordError(_:message:log:)(v143, 0xD000000000000040, 0x8000000100551330, v145);
      swift_errorRelease(v48);
      (*(void (**)(char *, uint64_t))(v180 + 8))(v145, v181);
      swift_errorRelease(v143);
      goto LABEL_69;
    }
LABEL_64:
    if (v135 < 0)
      v150 = v135;
    else
      v150 = v135 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v135);
    v136 = _CocoaArrayWrapper.endIndex.getter(v150);
    if (!v136)
      goto LABEL_68;
    goto LABEL_33;
  }
  v67 = defaultLogger()(v66);
  v68 = Logger.logObject.getter(v67);
  v69 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v68, v69))
  {
    v70 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v70 = 0;
    _os_log_impl((void *)&_mh_execute_header, v68, v69, "saveAssets: Save failed but cancelToken.isCanceled is true, completing with canceled error code.", v70, 2u);
    swift_slowDealloc(v70, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v180 + 8))(v35, v181);
  v71 = v172;
  (*(void (**)(char *, _QWORD, uint64_t))(v170 + 104))(v172, enum case for DIPError.Code.cloudkitCancelRequestedByClient(_:), v171);
  v72 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
  v73 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
  v74 = swift_allocError(v173, v73, 0, 0);
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001DLL, 0x8000000100551310, 0, v71, 0, v72, 0xD00000000000005BLL, 0x8000000100551190, 0xD00000000000005CLL, 0x8000000100551250, 397);
  v61(v74);
  swift_errorRelease(v74);
  sub_1001A26E4(v184, (uint64_t)v65);
  (*(void (**)(char *, uint64_t))(v153 + 8))(v169, v154);
  return _s8coreidvd24DigitalPresentmentHelperVwxx_0(v187);
}

uint64_t sub_1001A0644(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v4 = type metadata accessor for DIPError.Code(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DIPError(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    return a2(0);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DIPError.Code.internalError(_:), v4);
  swift_errorRetain(a1);
  v12 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001ELL, 0x8000000100551230, a1, v7, 0, v12, 0xD00000000000005BLL, 0x8000000100551190, 0xD00000000000005CLL, 0x8000000100551250, 478);
  v13 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
  v14 = swift_allocError(v8, v13, 0, 0);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 16))(v15, v11, v8);
  a2(v14);
  swift_errorRelease(v14);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1001A0818(uint64_t a1, uint64_t a2, uint64_t a3, char a4, int a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[4];
  int v21;
  _BYTE v22[40];

  v21 = a5;
  v11 = sub_100004828(&qword_10062FF10);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16))(&v20[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, v11);
  v14 = *(unsigned __int8 *)(v12 + 80);
  v15 = (v14 + 16) & ~v14;
  v16 = swift_allocObject(&unk_10060A250, v15 + v13, v14 | 7);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v12 + 32))(v16 + v15, &v20[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)], v11);
  sub_100038B24(a6, (uint64_t)v22, (uint64_t *)&unk_1006371C0);
  v17 = swift_allocObject(&unk_10060A278, 75, 7);
  sub_1000A1F54((uint64_t)v22, v17 + 16, (uint64_t *)&unk_1006371C0);
  *(_QWORD *)(v17 + 56) = a3;
  *(_QWORD *)(v17 + 64) = a2;
  *(_BYTE *)(v17 + 72) = a4;
  *(_WORD *)(v17 + 73) = v21;
  v18 = swift_allocObject(&unk_10060A2A0, 32, 7);
  *(_QWORD *)(v18 + 16) = sub_1001A0E6C;
  *(_QWORD *)(v18 + 24) = v16;
  swift_bridgeObjectRetain(a3);
  swift_retain(a2);
  swift_retain(v16);
  sub_100185E58(3, (uint64_t)sub_100025984, v17, (uint64_t)sub_1000259C0, v18);
  swift_release(v16);
  swift_release(v17);
  return swift_release(v18);
}

uint64_t sub_1001A09C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  if (a1)
  {
    v4 = a1;
    swift_errorRetain(a1);
    v1 = sub_100004828(&qword_10062FF10);
    return CheckedContinuation.resume(throwing:)(&v4, v1);
  }
  else
  {
    v3 = sub_100004828(&qword_10062FF10);
    return CheckedContinuation.resume(returning:)(v3, v3);
  }
}

uint64_t sub_1001A0A20()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8coreidvd21UploadsCloudContainer_name + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8coreidvd21UploadsCloudContainer_containerIDProd + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8coreidvd21UploadsCloudContainer_containerIDNonProd + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(v0
                                             + OBJC_IVAR____TtC8coreidvd21UploadsCloudContainer_networkAttributionBundleID
                                             + 8));
}

uint64_t sub_1001A0A7C()
{
  uint64_t v0;

  v0 = sub_100195C00();
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8coreidvd21UploadsCloudContainer_name + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8coreidvd21UploadsCloudContainer_containerIDProd + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8coreidvd21UploadsCloudContainer_containerIDNonProd + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC8coreidvd21UploadsCloudContainer_networkAttributionBundleID
                                      + 8));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1001A0AFC()
{
  return type metadata accessor for UploadsCloudContainer(0);
}

uint64_t type metadata accessor for UploadsCloudContainer(uint64_t a1)
{
  return sub_100038B7C(a1, qword_100636E68, (uint64_t)&nominal type descriptor for UploadsCloudContainer);
}

uint64_t sub_1001A0B18(uint64_t a1)
{
  _QWORD v2[4];

  v2[0] = &unk_100525488;
  v2[1] = &unk_100525488;
  v2[2] = &unk_100525488;
  v2[3] = &unk_100525488;
  return swift_updateClassMetadata2(a1, 256, 4, v2, a1 + 672);
}

uint64_t storeEnumTagSinglePayload for UploadAsset.AssetType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1001A0BA8 + 4 * byte_100525449[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1001A0BDC + 4 * byte_100525444[v4]))();
}

uint64_t sub_1001A0BDC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001A0BE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001A0BECLL);
  return result;
}

uint64_t sub_1001A0BF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001A0C00);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1001A0C04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001A0C0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UploadAsset.AssetType()
{
  return &type metadata for UploadAsset.AssetType;
}

unint64_t sub_1001A0C2C()
{
  unint64_t result;

  result = qword_1006371B8;
  if (!qword_1006371B8)
  {
    result = swift_getWitnessTable(&unk_100525568, &type metadata for UploadAsset.AssetType);
    atomic_store(result, (unint64_t *)&qword_1006371B8);
  }
  return result;
}

uint64_t sub_1001A0C70(Swift::UInt a1)
{
  uint64_t *v2;
  os_unfair_lock_s *v3;
  uint64_t result;
  _QWORD *v5;
  os_unfair_lock_s *v6;
  uint64_t v7;

  if (qword_10062F4A8 != -1)
    swift_once(&qword_10062F4A8, sub_10019C57C);
  v2 = (uint64_t *)(qword_100636CF8 + 16);
  v3 = (os_unfair_lock_s *)(qword_100636CF8 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(qword_100636CF8 + 24));
  sub_10019CCB0(v2, a1, &v7);
  os_unfair_lock_unlock(v3);
  result = v7;
  if (!v7)
  {
    v5 = (_QWORD *)(qword_100636CF8 + 16);
    v6 = (os_unfair_lock_s *)(qword_100636CF8 + 24);
    os_unfair_lock_lock((os_unfair_lock_t)(qword_100636CF8 + 24));
    sub_10019CC04(v5, a1, &v7);
    os_unfair_lock_unlock(v6);
    return v7;
  }
  return result;
}

unint64_t sub_1001A0D48(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1005FFEC0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 5)
    return 5;
  else
    return v3;
}

uint64_t sub_1001A0D90()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001A0DB4()
{
  uint64_t v0;

  return sub_100185E58(*(_QWORD *)(v0 + 24), (uint64_t)sub_10019D18C, 0, (uint64_t)sub_10019D1B4, 0);
}

uint64_t sub_1001A0DF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001A0E00(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1001A0E08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_100004828(&qword_10062FF10);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1001A0E6C(uint64_t a1)
{
  sub_100004828(&qword_10062FF10);
  return sub_1001A09C0(a1);
}

uint64_t sub_1001A0EAC()
{
  _QWORD *v0;

  if (v0[5])
    _s8coreidvd24DigitalPresentmentHelperVwxx_0(v0 + 2);
  swift_bridgeObjectRelease(v0[7]);
  swift_release(v0[8]);
  return swift_deallocObject(v0, 75, 7);
}

uint64_t sub_1001A0EE8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t type metadata accessor for UploadsCloudContainer.AnalyticsMetadata(uint64_t a1)
{
  return sub_100038B7C(a1, qword_100637260, (uint64_t)&nominal type descriptor for UploadsCloudContainer.AnalyticsMetadata);
}

uint64_t sub_1001A0F20()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_1001A0F44(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  __n128 v35;
  uint64_t v36;
  id v37;
  void *v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  id v49;
  void *v50;
  uint64_t v51;
  void *v52;
  void *v53;
  Swift::String v54;
  unint64_t v55;
  id v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  id v76;
  NSObject *v77;
  os_log_type_t v78;
  _BOOL4 v79;
  _DWORD *v80;
  uint64_t v81;
  id v82;
  void *v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  id v87;
  NSObject *v88;
  char *v89;
  os_log_type_t v90;
  uint64_t v91;
  uint64_t v92;
  id v93;
  void *v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  char *v98;
  id v99;
  NSObject *v100;
  os_log_type_t v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  void *v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t v109;
  NSObject *v110;
  os_log_type_t v111;
  uint8_t *v112;
  uint64_t v113;
  uint8_t *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  char *v121;
  __int128 v122;
  char *v123;
  char *v124;
  uint64_t v125;
  __n128 v126;
  char *v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136[3];
  unint64_t v137;

  v2 = type metadata accessor for Logger(0);
  v133 = *(_QWORD *)(v2 - 8);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v116 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v3);
  v8 = (char *)&v116 - v7;
  v9 = __chkstk_darwin(v6);
  v121 = (char *)&v116 - v10;
  __chkstk_darwin(v9);
  v12 = (char *)&v116 - v11;
  v13 = sub_100004828(&qword_100630A48);
  v14 = __chkstk_darwin(v13);
  v120 = (char *)&v116 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v130 = (char *)&v116 - v16;
  v17 = type metadata accessor for URL(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v116 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v115 = a1;
    else
      v115 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v21 = _CocoaArrayWrapper.endIndex.getter(v115);
    if (v21)
      goto LABEL_3;
LABEL_59:
    swift_bridgeObjectRelease(a1);
    return;
  }
  v21 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (!v21)
    goto LABEL_59;
LABEL_3:
  v134 = v21;
  if (v21 >= 1)
  {
    v127 = v20;
    v131 = v18;
    v132 = v17;
    v119 = v12;
    v123 = v8;
    v22 = 0;
    v135 = a1 & 0xC000000000000001;
    v23 = _swiftEmptyArrayStorage;
    v24 = v134;
    do
    {
      if (v135)
        v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v22, a1);
      else
        v25 = *(id *)(a1 + 8 * v22 + 32);
      v26 = v25;
      v27 = objc_msgSend(v25, "recordUUID");
      if (v27)
      {
        v28 = v27;
        v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
        v31 = v30;

        if ((swift_isUniquelyReferenced_nonNull_native(v23) & 1) == 0)
          v23 = sub_1000E2358(0, v23[2] + 1, 1, v23);
        v33 = v23[2];
        v32 = v23[3];
        if (v33 >= v32 >> 1)
          v23 = sub_1000E2358((_QWORD *)(v32 > 1), v33 + 1, 1, v23);
        v23[2] = v33 + 1;
        v34 = &v23[2 * v33];
        v34[4] = v29;
        v34[5] = v31;
        v24 = v134;
      }
      else
      {

      }
      ++v22;
    }
    while (v24 != v22);
    swift_bridgeObjectRelease(a1);
    v35 = swift_bridgeObjectRetain(a1);
    v36 = 0;
    v35.n128_u64[0] = 136315138;
    v126 = v35;
    v124 = (char *)&type metadata for Any + 8;
    v122 = xmmword_100520790;
    v125 = a1;
    v128 = v2;
    v129 = v5;
    while (1)
    {
      if (v135)
        v37 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v36, a1);
      else
        v37 = *(id *)(a1 + 8 * v36 + 32);
      v38 = v37;
      v39 = objc_msgSend(v37, "assetFileURL");
      if (!v39)
        goto LABEL_35;
      v40 = v39;
      v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
      v43 = v42;

      v44 = (uint64_t)v130;
      URL.init(string:)(v41, v43);
      swift_bridgeObjectRelease(v43);
      v46 = v131;
      v45 = v132;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v131 + 48))(v44, 1, v132) == 1)
        break;
      v47 = v127;
      v48 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 32))(v127, v44, v45);
      if ((URL.isFileOnDisk.getter(v48) & 1) == 0)
      {
        v39 = (id)(*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v47, v45);
LABEL_35:
        defaultLogger()(v39);
        v87 = v38;
        v88 = Logger.logObject.getter(v87);
        v89 = v5;
        v90 = static os_log_type_t.debug.getter(v88);
        if (os_log_type_enabled(v88, v90))
        {
          v91 = swift_slowAlloc(12, -1);
          v92 = swift_slowAlloc(32, -1);
          v136[0] = v92;
          *(_DWORD *)v91 = v126.n128_u32[0];
          v93 = objc_msgSend(v87, "recordUUID");
          if (v93)
          {
            v94 = v93;
            v95 = static String._unconditionallyBridgeFromObjectiveC(_:)(v93);
            v97 = v96;

          }
          else
          {
            v95 = 0;
            v97 = 0xE000000000000000;
          }
          *(_QWORD *)(v91 + 4) = sub_1000E3AC8(v95, v97, v136);

          swift_bridgeObjectRelease(v97);
          _os_log_impl((void *)&_mh_execute_header, v88, v90, "assetURL of the upload asset with recordUUID %s doesn't exist skipping the upload asset", (uint8_t *)v91, 0xCu);
          swift_arrayDestroy(v92, 1, v124);
          swift_slowDealloc(v92, -1, -1);
          swift_slowDealloc(v91, -1, -1);

          v2 = v128;
          v5 = v129;
          (*(void (**)(char *, uint64_t))(v133 + 8))(v129, v128);
          a1 = v125;
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v133 + 8))(v89, v2);
          v5 = v89;
        }
        goto LABEL_18;
      }
      v49 = objc_msgSend(v38, "assetType");
      if (!v49)
        goto LABEL_40;
      v50 = v49;
      v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
      v53 = v52;

      v54._countAndFlagsBits = v51;
      v54._object = v53;
      v55 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1005FFEC0, v54);
      v49 = (id)swift_bridgeObjectRelease(v53);
      if (v55 > 4)
      {
LABEL_40:
        v98 = v123;
        defaultLogger()(v49);
        v99 = v38;
        v100 = Logger.logObject.getter(v99);
        v101 = static os_log_type_t.debug.getter(v100);
        if (os_log_type_enabled(v100, v101))
        {
          v102 = swift_slowAlloc(12, -1);
          v103 = swift_slowAlloc(32, -1);
          v136[0] = v103;
          *(_DWORD *)v102 = v126.n128_u32[0];
          v104 = objc_msgSend(v99, "recordUUID");
          if (v104)
          {
            v105 = v104;
            v106 = static String._unconditionallyBridgeFromObjectiveC(_:)(v104);
            v108 = v107;

          }
          else
          {
            v106 = 0;
            v108 = 0xE000000000000000;
          }
          a1 = v125;
          *(_QWORD *)(v102 + 4) = sub_1000E3AC8(v106, v108, v136);

          swift_bridgeObjectRelease(v108);
          _os_log_impl((void *)&_mh_execute_header, v100, v101, "assetType of the upload asset with recordUUID %s doesn't exist skipping the upload asset", (uint8_t *)v102, 0xCu);
          swift_arrayDestroy(v103, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v103, -1, -1);
          swift_slowDealloc(v102, -1, -1);

          v2 = v128;
          (*(void (**)(char *, uint64_t))(v133 + 8))(v123, v128);
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v133 + 8))(v98, v2);
        }
        (*(void (**)(char *, uint64_t))(v131 + 8))(v127, v132);
        v5 = v129;
        goto LABEL_18;
      }
      v56 = objc_msgSend(v38, "recordUUID");
      if (v56)
      {
        v57 = v56;
        v118 = static String._unconditionallyBridgeFromObjectiveC(_:)(v56);
        v117 = v58;

        v59 = v131;
        v60 = v132;
        v61 = (uint64_t)v120;
        (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v120, v127, v132);
        v62 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 56);
        v62(v61, 0, 1, v60);
        v63 = type metadata accessor for UploadAsset(0);
        v64 = swift_allocObject(v63, *(unsigned int *)(v63 + 48), *(unsigned __int16 *)(v63 + 52));
        *(_OWORD *)(v64 + 32) = v122;
        v62(v64 + OBJC_IVAR____TtC8coreidvd11UploadAsset_assetFileURL, 1, 1, v60);
        v65 = v122;
        *(_OWORD *)(v64 + OBJC_IVAR____TtC8coreidvd11UploadAsset_systemData) = v122;
        v66 = v117;
        *(_QWORD *)(v64 + 16) = v118;
        *(_QWORD *)(v64 + 24) = v66;
        v67 = *(_QWORD *)(v64 + 32);
        v68 = *(_QWORD *)(v64 + 40);
        *(_OWORD *)(v64 + 32) = v65;
        sub_100007F78(v67, v68);
        *(_BYTE *)(v64 + 48) = v55;
        v69 = v64 + OBJC_IVAR____TtC8coreidvd11UploadAsset_assetFileURL;
        swift_beginAccess(v64 + OBJC_IVAR____TtC8coreidvd11UploadAsset_assetFileURL, v136, 33, 0);
        sub_1000494F8(v61, v69);
        swift_endAccess(v136);
        v70 = swift_retain(v64);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v70);
        v72 = *(_QWORD *)((v137 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v71 = *(_QWORD *)((v137 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v72 >= v71 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v71 > 1, v72 + 1, 1);
        v73 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v72, v64);
        v74 = specialized Array._endMutation()(v73);
        v75 = v119;
        defaultLogger()(v74);
        v76 = v38;
        v77 = Logger.logObject.getter(v76);
        v78 = static os_log_type_t.debug.getter(v77);
        v79 = os_log_type_enabled(v77, v78);
        v2 = v128;
        if (v79)
        {
          v80 = (_DWORD *)swift_slowAlloc(12, -1);
          v81 = swift_slowAlloc(32, -1);
          v136[0] = v81;
          v118 = (uint64_t)v80;
          *v80 = v126.n128_u32[0];
          v82 = objc_msgSend(v76, "recordUUID");
          if (v82)
          {
            v83 = v82;
            v84 = static String._unconditionallyBridgeFromObjectiveC(_:)(v82);
            v86 = v85;

          }
          else
          {
            v84 = 0;
            v86 = 0xE000000000000000;
          }
          v113 = sub_1000E3AC8(v84, v86, v136);
          v114 = (uint8_t *)v118;
          *(_QWORD *)(v118 + 4) = v113;

          swift_bridgeObjectRelease(v86);
          _os_log_impl((void *)&_mh_execute_header, v77, v78, "Created the StoredUploadAsset with recordUUID %s", v114, 0xCu);
          swift_arrayDestroy(v81, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v81, -1, -1);
          swift_slowDealloc(v114, -1, -1);

          swift_release(v64);
          v2 = v128;
          (*(void (**)(char *, uint64_t))(v133 + 8))(v119, v128);
          (*(void (**)(char *, uint64_t))(v131 + 8))(v127, v132);
          a1 = v125;
          v5 = v129;
          goto LABEL_18;
        }
        swift_release(v64);

        (*(void (**)(char *, uint64_t))(v133 + 8))(v75, v2);
      }
      else
      {
        v109 = defaultLogger()(0);
        v110 = Logger.logObject.getter(v109);
        v111 = static os_log_type_t.debug.getter(v110);
        if (os_log_type_enabled(v110, v111))
        {
          v112 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v112 = 0;
          _os_log_impl((void *)&_mh_execute_header, v110, v111, "recordUUID of the upload asset doesn't exist skipping the upload asset", v112, 2u);
          swift_slowDealloc(v112, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v133 + 8))(v121, v2);
      }
      (*(void (**)(char *, uint64_t))(v131 + 8))(v127, v132);
LABEL_18:
      if (v134 == ++v36)
        goto LABEL_59;
    }
    v39 = (id)sub_100008030(v44, &qword_100630A48);
    goto LABEL_35;
  }
  __break(1u);
}

_QWORD *sub_1001A1A6C(unint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t i;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD *v27;

  v2 = a1;
  v27 = &_swiftEmptyArrayStorage;
  if (a1 >> 62)
    goto LABEL_31;
  for (i = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10); i; i = _CocoaArrayWrapper.endIndex.getter(v21))
  {
    v22 = v2;
    v4 = 0;
    v24 = v2 & 0xFFFFFFFFFFFFFF8;
    v25 = v2 & 0xC000000000000001;
    v23 = v2 + 32;
    while (1)
    {
      if (v25)
      {
        v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v22);
        v6 = __OFADD__(v4++, 1);
        if (v6)
        {
LABEL_27:
          __break(1u);
          return v27;
        }
      }
      else
      {
        if (v4 >= *(_QWORD *)(v24 + 16))
        {
          __break(1u);
          goto LABEL_30;
        }
        v5 = *(_QWORD *)(v23 + 8 * v4);
        swift_retain(v5);
        v6 = __OFADD__(v4++, 1);
        if (v6)
          goto LABEL_27;
      }
      v7 = a2[2];
      if (!v7)
        goto LABEL_24;
      v2 = *(_QWORD *)(v5 + 16);
      v8 = *(_QWORD *)(v5 + 24);
      v9 = a2[4];
      v10 = a2[5];
      v11 = v9 == v2 && v10 == v8;
      if (!v11
        && (_stringCompareWithSmolCheck(_:_:expecting:)(v9, v10, *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), 0) & 1) == 0)
      {
        break;
      }
LABEL_4:
      swift_release(v5);
LABEL_5:
      if (v4 == i)
        return v27;
    }
    if (v7 == 1)
    {
LABEL_24:
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      v18 = v27[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v18);
      v19 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v5);
      v2 = (uint64_t)&v27;
      specialized ContiguousArray._endMutation()(v19);
      goto LABEL_5;
    }
    v12 = a2 + 7;
    v13 = 1;
    while (1)
    {
      v14 = v13 + 1;
      if (__OFADD__(v13, 1))
        break;
      v15 = *(v12 - 1);
      v16 = *v12;
      v17 = v15 == v2 && v16 == v8;
      if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)(v15, v16, v2, v8, 0) & 1) != 0)
        goto LABEL_4;
      v12 += 2;
      ++v13;
      if (v14 == v7)
        goto LABEL_24;
    }
LABEL_30:
    __break(1u);
LABEL_31:
    if (v2 < 0)
      v21 = v2;
    else
      v21 = v2 & 0xFFFFFFFFFFFFFF8;
  }
  return &_swiftEmptyArrayStorage;
}

id sub_1001A1C4C()
{
  void *v0;
  Class isa;
  id v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  id v8;

  isa = Data._bridgeToObjectiveC()().super.isa;
  v8 = 0;
  v2 = objc_msgSend(v0, "initForReadingFromData:error:", isa, &v8);

  v3 = v8;
  if (v2)
  {
    v4 = v8;
  }
  else
  {
    v5 = v8;
    _convertNSErrorToError(_:)(v3);

    swift_willThrow(v6);
  }
  return v2;
}

id sub_1001A1D08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  NSString v17;
  void *v18;
  uint64_t v19;
  id v20;
  Swift::String v21;
  CKRecord v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t, uint64_t);
  id v25;
  int v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  Class isa;
  id v35;
  NSURL *v36;
  void *v37;
  void *v38;
  id v39;
  id v40;
  uint64_t v41;
  objc_class *v42;
  objc_class *v43;
  char *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char v56[24];
  char *v57;

  v3 = sub_100004828(&qword_100630A48);
  v4 = __chkstk_darwin(v3);
  v57 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v7 = (char *)&v50 - v6;
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DIPError.Code(0);
  v53 = *(_QWORD *)(v12 - 8);
  v54 = v12;
  __chkstk_darwin(v12);
  v55 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8coreidvd11UploadAsset_systemData + 8);
  if (v14 >> 60 == 15)
  {
    v52 = v11;
    sub_10001CFF8(0, &qword_1006371F8, CKRecord_ptr);
    v15 = *(_QWORD *)(a1 + 24);
    v16 = objc_allocWithZone((Class)CKRecordID);
    swift_bridgeObjectRetain(v15);
    v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v15);
    v18 = v16;
    v19 = v1;
    v20 = objc_msgSend(v18, "initWithRecordName:", v17);

    v21._countAndFlagsBits = 0x315F7465737341;
    v21._object = (void *)0xE700000000000000;
    v22.super.isa = CKRecord.init(recordType:recordID:)(v21, (CKRecordID)v20).super.isa;
    goto LABEL_3;
  }
  v32 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8coreidvd11UploadAsset_systemData);
  v25 = objc_allocWithZone((Class)NSKeyedUnarchiver);
  sub_100022948(v32, v14);
  v33 = sub_1001A1C4C();
  if (v1)
  {
LABEL_9:
    sub_100007F78(v32, v14);
    return v25;
  }
  v25 = v33;
  v51 = 0;
  v42 = (objc_class *)objc_msgSend(objc_allocWithZone((Class)CKRecord), "initWithCoder:", v33);
  if (!v42)
  {
    v44 = v55;
    (*(void (**)(char *, _QWORD, uint64_t))(v53 + 104))(v55, enum case for DIPError.Code.invalidStoredData(_:), v54);
    v45 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v46 = type metadata accessor for DIPError(0);
    v47 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    swift_allocError(v46, v47, 0, 0);
    v48 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000033, 0x8000000100551540, 0, v44, 0, v45, 0xD00000000000005BLL, 0x8000000100551190, 0xD000000000000019, 0x8000000100551520, 585);
    swift_willThrow(v48);

    goto LABEL_9;
  }
  v43 = v42;
  v52 = v11;

  sub_100007F78(v32, v14);
  v22.super.isa = v43;
  v19 = v51;
LABEL_3:
  v23 = a1 + OBJC_IVAR____TtC8coreidvd11UploadAsset_assetFileURL;
  swift_beginAccess(a1 + OBJC_IVAR____TtC8coreidvd11UploadAsset_assetFileURL, v56, 0, 0);
  sub_100038B24(v23, (uint64_t)v7, &qword_100630A48);
  v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v24(v7, 1, v8) == 1)
  {
    sub_100008030((uint64_t)v7, &qword_100630A48);
    v7 = v57;
    v25 = (id)a1;
    sub_10019A864((uint64_t)v57);
    if (v19)
    {
LABEL_7:

      return v25;
    }
    v26 = v24(v7, 1, v8);
    v27 = v52;
    if (v26 == 1)
    {
      sub_100008030((uint64_t)v7, &qword_100630A48);
      v28 = v55;
      (*(void (**)(char *, _QWORD, uint64_t))(v53 + 104))(v55, enum case for DIPError.Code.unexpectedDaemonState(_:), v54);
      v25 = (id)sub_100004544((uint64_t)_swiftEmptyArrayStorage);
      v29 = type metadata accessor for DIPError(0);
      v30 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
      swift_allocError(v29, v30, 0, 0);
      v31 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000031, 0x80000001005514E0, 0, v28, 0, v25, 0xD00000000000005BLL, 0x8000000100551190, 0xD000000000000019, 0x8000000100551520, 599);
      swift_willThrow(v31);
      goto LABEL_7;
    }
    v51 = 0;
    isa = v22.super.isa;
  }
  else
  {
    v51 = v19;
    isa = v22.super.isa;
    v27 = v52;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v27, v7, v8);
  v35 = objc_allocWithZone((Class)CKAsset);
  URL._bridgeToObjectiveC()(v36);
  v38 = v37;
  v39 = objc_msgSend(v35, "initWithFileURL:", v37);

  v40 = v39;
  v25 = isa;
  CKRecord.subscript.setter(v39, 0x7465737361, 0xE500000000000000);
  v41 = *(unsigned __int8 *)(a1 + 48);
  if ((_DWORD)v41 != 5)
    __asm { BR              X12 }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v27, v8);

  return v25;
}

uint64_t sub_1001A23CC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(_QWORD *)(sub_100004828((uint64_t *)&unk_1006371D0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 104) & ~v2;
  v14 = *(_QWORD *)(v1 + 64);
  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  swift_unknownObjectRelease(*((_QWORD *)v0 + 2));
  if (*((_QWORD *)v0 + 6))
    _s8coreidvd24DigitalPresentmentHelperVwxx_0((_QWORD *)v0 + 3);
  swift_release(*((_QWORD *)v0 + 9));
  swift_release(*((_QWORD *)v0 + 10));
  swift_bridgeObjectRelease(*((_QWORD *)v0 + 11));
  swift_release(*((_QWORD *)v0 + 12));
  v8 = type metadata accessor for NWPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(&v0[v3], 1, v8))
    (*(void (**)(char *, uint64_t))(v9 + 8))(&v0[v3], v8);
  v10 = (v3 + v14 + v6) & ~v6;
  v11 = ((v10 + v7 + 23) & 0xFFFFFFFFFFFFFFF8) + 9;
  v12 = (v10 + v7 + 7) & 0xFFFFFFFFFFFFF8;
  (*(void (**)(char *, uint64_t))(v5 + 8))(&v0[v10], v4);
  swift_bridgeObjectRelease(*(_QWORD *)&v0[v12]);
  return swift_deallocObject(v0, v11, v2 | v6 | 7);
}

uint64_t sub_1001A2510(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v5 = *(_QWORD *)(sub_100004828((uint64_t *)&unk_1006371D0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(_QWORD *)(type metadata accessor for Date(0) - 8);
  v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = v9 + *(_QWORD *)(v8 + 64);
  return sub_10019EF70(a1, a2, *(_QWORD *)(v2 + 16), v2 + 24, *(void (**)(uint64_t))(v2 + 64), *(_QWORD **)(v2 + 72), *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88), *(_QWORD *)(v2 + 96), v2 + v6, v2 + v9, *(_QWORD *)(v2 + ((v10 + 7) & 0xFFFFFFFFFFFFFFF8)), *(_BYTE *)(v2 + ((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v2 + ((v10 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_BYTE *)(v2 + ((v10 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1001A25F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UploadsCloudContainer.AnalyticsMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001A2634(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UploadsCloudContainer.AnalyticsMetadata(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001A2670(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UploadsCloudContainer.AnalyticsMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001A26B4(uint64_t a1, uint64_t a2)
{
  if ((a1 & 0x8000000000000000) == 0)
    return swift_errorRetain(a1);
  swift_errorRetain(a1 & 0x7FFFFFFFFFFFFFFFLL);
  return swift_bridgeObjectRetain(a2);
}

uint64_t sub_1001A26E4(uint64_t a1, uint64_t a2)
{
  if ((~a1 & 0xF000000000000007) != 0)
    return sub_1001A26F8(a1, a2);
  return a1;
}

uint64_t sub_1001A26F8(uint64_t a1, uint64_t a2)
{
  if ((a1 & 0x8000000000000000) == 0)
    return swift_errorRelease(a1);
  swift_errorRelease(a1 & 0x7FFFFFFFFFFFFFFFLL);
  return swift_bridgeObjectRelease(a2);
}

uint64_t sub_1001A2728(uint64_t a1, uint64_t a2)
{
  if ((~a1 & 0xF000000000000007) != 0)
    return sub_1001A26B4(a1, a2);
  return a1;
}

uint64_t *sub_1001A273C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v11);
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for Date(0);
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  }
  return v4;
}

uint64_t sub_1001A27E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_BYTE *sub_1001A2818(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for Date(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

_BYTE *sub_1001A2890(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for Date(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

_BYTE *sub_1001A2908(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for Date(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

_BYTE *sub_1001A2980(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for Date(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t sub_1001A29F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001A2A04);
}

uint64_t sub_1001A2A04(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 251)
  {
    v4 = *a1;
    if (v4 >= 5)
      return v4 - 4;
    else
      return 0;
  }
  else
  {
    v8 = type metadata accessor for Date(0);
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_1001A2A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001A2A84);
}

_BYTE *sub_1001A2A84(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 251)
  {
    *result = a2 + 4;
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1001A2AF4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_1005255A8;
  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1001A2B74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6[15] = a5;
  v6[16] = v5;
  v6[13] = a3;
  v6[14] = a4;
  v6[11] = a1;
  v6[12] = a2;
  v7 = type metadata accessor for Logger(0);
  v6[17] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[18] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[19] = swift_task_alloc(v9);
  v6[20] = swift_task_alloc(v9);
  v6[21] = swift_task_alloc(v9);
  v10 = sub_100004828(&qword_100637388);
  v6[22] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v6[23] = v11;
  v6[24] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UUID(0);
  v6[25] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v6[26] = v13;
  v6[27] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Locale(0);
  v6[28] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v6[29] = v15;
  v6[30] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100004828(&qword_1006308F0);
  v6[31] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for DIPError.Code(0);
  v6[32] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v6[33] = v18;
  v6[34] = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001A2CC0, 0, 0);
}

uint64_t sub_1001A2CC0()
{
  uint64_t v0;
  id v1;
  Swift::String v2;
  Swift::Bool v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  objc_class *v46;
  char *v47;
  char *v48;
  id v49;
  void *v50;
  void *v51;
  _UNKNOWN **v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  void (*v78)(void);
  _QWORD *v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;

  v1 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v2._countAndFlagsBits = 0xD000000000000027;
  v2._object = (void *)0x80000001005515E0;
  v3 = NSUserDefaults.internalBool(forKey:)(v2);

  if (v3)
  {
    v5 = *(_QWORD *)(v0 + 272);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 264) + 104))(v5, enum case for DIPError.Code.internalError(_:), *(_QWORD *)(v0 + 256));
    v6 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v7 = type metadata accessor for DIPError(0);
    v8 = sub_100007F30();
    swift_allocError(v7, v8, 0, 0);
    v9 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000002DLL, 0x8000000100551790, 0, v5, 0, v6, 0xD00000000000008BLL, 0x8000000100551630, 0xD000000000000044, 0x80000001005516C0, 33);
    swift_willThrow(v9);
LABEL_17:
    v85 = *(_QWORD *)(v0 + 240);
    v84 = *(_QWORD *)(v0 + 248);
    v86 = *(_QWORD *)(v0 + 216);
    v87 = *(_QWORD *)(v0 + 192);
    v89 = *(_QWORD *)(v0 + 160);
    v88 = *(_QWORD *)(v0 + 168);
    v90 = *(_QWORD *)(v0 + 152);
    swift_task_dealloc(*(_QWORD *)(v0 + 272));
    swift_task_dealloc(v84);
    swift_task_dealloc(v85);
    swift_task_dealloc(v86);
    swift_task_dealloc(v87);
    swift_task_dealloc(v88);
    swift_task_dealloc(v89);
    swift_task_dealloc(v90);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v10 = *(_QWORD *)(v0 + 104);
  if (!v10)
  {
    v22 = *(_QWORD *)(v0 + 272);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 264) + 104))(v22, enum case for DIPError.Code.workflowIdDoesNotExist(_:), *(_QWORD *)(v0 + 256));
    v23 = sub_100004828((uint64_t *)&unk_1006325A0);
    v24 = sub_100004828((uint64_t *)&unk_100633440);
    v25 = *(_QWORD *)(v24 - 8);
    v26 = *(_QWORD *)(v25 + 72);
    v27 = *(unsigned __int8 *)(v25 + 80);
    v28 = (v27 + 32) & ~v27;
    v29 = swift_allocObject(v23, v28 + v26, v27 | 7);
    *(_OWORD *)(v29 + 16) = xmmword_10051FFB0;
    v30 = v29 + v28;
    v31 = (_QWORD *)(v29 + v28 + *(int *)(v24 + 48));
    v32 = enum case for DIPError.PropertyKey.inoProviderID(_:);
    v33 = type metadata accessor for DIPError.PropertyKey(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v30, v32, v33);
    v31[3] = &type metadata for String;
    *v31 = 0x61746E6567616DLL;
    v31[1] = 0xE700000000000000;
    v34 = sub_10011D314(v29);
    v35 = type metadata accessor for DIPError(0);
    v36 = sub_100007F30();
    v95 = v35;
    v37 = swift_allocError(v35, v36, 0, 0);
    v38 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000017, 0x8000000100551610, 0, v22, 0, v34, 0xD00000000000008BLL, 0x8000000100551630, 0xD000000000000044, 0x80000001005516C0, 38);
    v97 = v37;
    v39 = v32;
    swift_willThrow(v38);
    v94 = 0;
LABEL_14:
    v91 = *(_QWORD *)(v0 + 264);
    v92 = *(_QWORD *)(v0 + 272);
    v93 = *(_QWORD *)(v0 + 256);
    v67 = *(_QWORD *)(v0 + 104);
    v68 = sub_100004828((uint64_t *)&unk_1006325A0);
    v69 = sub_100004828((uint64_t *)&unk_100633440);
    v70 = *(_QWORD *)(v69 - 8);
    v71 = *(_QWORD *)(v70 + 72);
    v72 = *(unsigned __int8 *)(v70 + 80);
    v73 = (v72 + 32) & ~v72;
    v74 = swift_allocObject(v68, v73 + 2 * v71, v72 | 7);
    *(_OWORD *)(v74 + 16) = xmmword_1005208D0;
    v75 = v74 + v73;
    v76 = (_QWORD *)(v74 + v73 + *(int *)(v69 + 48));
    v77 = type metadata accessor for DIPError.PropertyKey(0);
    v78 = *(void (**)(void))(*(_QWORD *)(v77 - 8) + 104);
    ((void (*)(uint64_t, uint64_t, uint64_t))v78)(v75, v39, v77);
    v76[3] = &type metadata for String;
    *v76 = 0x61746E6567616DLL;
    v76[1] = 0xE700000000000000;
    v79 = (_QWORD *)(v75 + v71 + *(int *)(v69 + 48));
    v78();
    v79[3] = &type metadata for String;
    v80 = 0xE000000000000000;
    if (v67)
      v80 = v67;
    *v79 = v94;
    v79[1] = v80;
    swift_bridgeObjectRetain(v67);
    v81 = sub_10011D314(v74);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v91 + 104))(v92, enum case for DIPError.Code.internalError(_:), v93);
    type metadata accessor for DIPError(0);
    v82 = sub_100007F30();
    swift_allocError(v95, v82, 0, 0);
    swift_errorRetain(v97);
    v83 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, v97, v92, 0, v81, 0xD00000000000008BLL, 0x8000000100551630, 0xD000000000000044, 0x80000001005516C0, 83);
    swift_willThrow(v83);
    swift_errorRelease(v97);
    goto LABEL_17;
  }
  v11 = *(_QWORD *)(v0 + 240);
  v12 = *(_QWORD *)(v0 + 248);
  v13 = *(_QWORD *)(v0 + 224);
  v14 = *(_QWORD *)(v0 + 232);
  v15 = static Locale.current.getter(v4);
  Locale.region.getter(v15);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v11, v13);
  v16 = type metadata accessor for Locale.Region(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v12, 1, v16);
  v19 = *(_QWORD *)(v0 + 248);
  if (v18 == 1)
  {
    sub_1001A49A0(*(_QWORD *)(v0 + 248));
    v20 = 0xE700000000000000;
    v21 = 0x6E776F6E6B6E55;
  }
  else
  {
    v21 = Locale.Region.identifier.getter();
    v20 = v40;
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v19, v16);
  }
  *(_QWORD *)(v0 + 280) = v20;
  v41 = *(_QWORD *)(v0 + 120);
  if (!v41)
  {
    v59 = *(_QWORD *)(v0 + 264);
    v60 = *(_QWORD *)(v0 + 272);
    v61 = *(_QWORD *)(v0 + 256);
    swift_bridgeObjectRelease(v20);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v59 + 104))(v60, enum case for DIPError.Code.proofingSessionIDUnavailable(_:), v61);
    v62 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v63 = type metadata accessor for DIPError(0);
    v64 = sub_100007F30();
    v95 = v63;
    v65 = swift_allocError(v63, v64, 0, 0);
    v66 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001DLL, 0x8000000100551710, 0, v60, 0, v62, 0xD00000000000008BLL, 0x8000000100551630, 0xD000000000000044, 0x80000001005516C0, 44);
    v97 = v65;
    swift_willThrow(v66);
    v94 = *(_QWORD *)(v0 + 96);
    v39 = enum case for DIPError.PropertyKey.inoProviderID(_:);
    goto LABEL_14;
  }
  v43 = *(_QWORD *)(v0 + 208);
  v42 = *(_QWORD *)(v0 + 216);
  v96 = *(_QWORD *)(v0 + 200);
  v44 = *(_QWORD *)(v0 + 128);
  v45 = *(_QWORD *)(v0 + 112);
  v98 = v21;
  v46 = (objc_class *)type metadata accessor for IdentitySelfHealer();
  v47 = (char *)objc_allocWithZone(v46);
  v48 = &v47[OBJC_IVAR____TtC8coreidvd18IdentitySelfHealer_proofingSessionID];
  *(_QWORD *)v48 = v45;
  *((_QWORD *)v48 + 1) = v41;
  *(_QWORD *)(v0 + 64) = v47;
  *(_QWORD *)(v0 + 72) = v46;
  swift_bridgeObjectRetain_n(v41, 2);
  v49 = objc_msgSendSuper2((objc_super *)(v0 + 64), "init");
  v50 = *(void **)(v44 + 16);
  *(_QWORD *)(v44 + 16) = v49;

  v51 = *(void **)(v44 + 16);
  if (v51)
    v52 = &off_100618670;
  else
    v52 = 0;
  v53 = v51;
  v54 = UUID.init()(v53);
  UUID.uuidString.getter(v54);
  v56 = v55;
  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v42, v96);
  *(_QWORD *)(v0 + 288) = sub_100254DE8((uint64_t)v51, (uint64_t)v52, 0, 0);
  swift_bridgeObjectRelease(v56);

  v57 = (_QWORD *)swift_task_alloc(dword_1006372D4);
  *(_QWORD *)(v0 + 296) = v57;
  *v57 = v0;
  v57[1] = sub_1001A3488;
  return sub_1001A4168(*(_QWORD *)(v0 + 192), v98, v20, *(_QWORD *)(v0 + 96), v10, *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 112), v41);
}

uint64_t sub_1001A3488()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v7;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 296);
  v3 = *(_QWORD **)v1;
  v3[38] = v0;
  swift_task_dealloc(v2);
  v4 = v3[35];
  if (v0)
  {
    v5 = v3[15];
    swift_bridgeObjectRelease(v4);
    swift_bridgeObjectRelease(v5);
    return swift_task_switch(sub_1001A3B80, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease(v4);
    v7 = (_QWORD *)swift_task_alloc(dword_100639B1C);
    v3[39] = v7;
    *v7 = v3;
    v7[1] = sub_1001A3534;
    return sub_1002487CC(v3[24]);
  }
}

uint64_t sub_1001A3534()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 312);
  *(_QWORD *)(*v1 + 320) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 120));
    v4 = sub_1001A3E08;
  }
  else
  {
    v4 = sub_1001A35A0;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1001A35A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  _BOOL4 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t);
  uint64_t v63;

  v2 = defaultLogger()(a1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.debug.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Action Notification successfully acknowledged by the server", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = *(_QWORD *)(v1 + 320);
  v7 = *(_QWORD *)(v1 + 168);
  v8 = *(_QWORD *)(v1 + 136);
  v9 = *(_QWORD *)(v1 + 144);

  v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v10(v7, v8);
  v11._object = (void *)0x8000000100551770;
  v12._countAndFlagsBits = 0x3536626261333430;
  v12._object = (void *)0xE800000000000000;
  v11._countAndFlagsBits = 0xD000000000000018;
  logMilestone(tag:description:)(v12, v11);
  v13 = type metadata accessor for IdentityProofingDataContext();
  swift_allocObject(v13, 24, 7);
  sub_1000D6044();
  v62 = v10;
  if (v6)
  {
    v17 = swift_bridgeObjectRelease(*(_QWORD *)(v1 + 120));
    v18 = *(void **)(v1 + 288);
    v20 = *(_QWORD *)(v1 + 184);
    v19 = *(_QWORD *)(v1 + 192);
    v21 = *(_QWORD *)(v1 + 176);
    v22 = *(_QWORD *)(v1 + 152);
    v23 = *(_QWORD *)(v1 + 136);
    defaultLogger()(v17);
    DIPRecordError(_:message:log:)(v6, 0, 0xE000000000000000, v22);

    swift_errorRelease(v6);
    v62(v22, v23);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
LABEL_7:
    v24 = *(_QWORD *)(v1 + 240);
    v25 = *(_QWORD *)(v1 + 248);
    v26 = *(_QWORD *)(v1 + 216);
    v27 = *(_QWORD *)(v1 + 192);
    v29 = *(_QWORD *)(v1 + 160);
    v28 = *(_QWORD *)(v1 + 168);
    v30 = *(_QWORD *)(v1 + 152);
    swift_task_dealloc(*(_QWORD *)(v1 + 272));
    swift_task_dealloc(v25);
    swift_task_dealloc(v24);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  v15 = v14;
  sub_1000D69B0(*(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 120));
  v32 = v16;
  if (!v16)
  {
LABEL_21:
    v42 = *(_QWORD *)(v1 + 120);
    defaultLogger()(v16);
    swift_bridgeObjectRetain(v42);
    v44 = Logger.logObject.getter(v43);
    v45 = static os_log_type_t.debug.getter(v44);
    v46 = os_log_type_enabled(v44, v45);
    v48 = *(_QWORD *)(v1 + 184);
    v47 = *(_QWORD *)(v1 + 192);
    v49 = *(_QWORD *)(v1 + 176);
    v50 = *(_QWORD *)(v1 + 160);
    v61 = *(_QWORD *)(v1 + 136);
    v51 = *(_QWORD *)(v1 + 120);
    if (v46)
    {
      v59 = *(_QWORD *)(v1 + 192);
      v52 = *(_QWORD *)(v1 + 112);
      v57 = *(void **)(v1 + 288);
      v53 = (uint8_t *)swift_slowAlloc(12, -1);
      v58 = v48;
      v54 = swift_slowAlloc(32, -1);
      v63 = v54;
      *(_DWORD *)v53 = 136315138;
      swift_bridgeObjectRetain(v51);
      *(_QWORD *)(v1 + 80) = sub_1000E3AC8(v52, v51, &v63);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 80, v1 + 88, v53 + 4);
      swift_bridgeObjectRelease_n(v51, 3);
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "no proofing session exists with proofingSessionID: %s", v53, 0xCu);
      swift_arrayDestroy(v54, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v54, -1, -1);
      swift_slowDealloc(v53, -1, -1);

      swift_release(v15);
      v62(v50, v61);
      (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v59, v49);
    }
    else
    {

      swift_release(v15);
      swift_bridgeObjectRelease_n(v51, 2);
      v10(v50, v61);
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v49);
    }
    goto LABEL_7;
  }
  result = swift_bridgeObjectRelease(*(_QWORD *)(v1 + 120));
  v60 = v15;
  if ((unint64_t)v32 >> 62)
  {
    if (v32 >= 0)
      v55 = v32 & 0xFFFFFFFFFFFFFF8;
    else
      v55 = v32;
    swift_bridgeObjectRetain(v32);
    v33 = _CocoaArrayWrapper.endIndex.getter(v55);
    result = swift_bridgeObjectRelease(v32);
    if (v33)
      goto LABEL_11;
LABEL_28:
    swift_bridgeObjectRelease(v32);
    sub_1000D6288();
    v56 = *(void **)(v1 + 288);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 184) + 8))(*(_QWORD *)(v1 + 192), *(_QWORD *)(v1 + 176));

    swift_release(v60);
    goto LABEL_7;
  }
  v33 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v33)
    goto LABEL_28;
LABEL_11:
  if (v33 >= 1)
  {
    v34 = 0;
    while (1)
    {
      if ((v32 & 0xC000000000000001) != 0)
        v35 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v34, v32);
      else
        v35 = *(id *)(v32 + 8 * v34 + 32);
      v36 = v35;
      v37 = objc_msgSend(v35, "managedObjectContext");
      if (v37)
      {
        v38 = v37;
        v39 = swift_allocObject(&unk_10060A3D0, 25, 7);
        *(_QWORD *)(v39 + 16) = v36;
        *(_BYTE *)(v39 + 24) = 1;
        v40 = swift_allocObject(&unk_10060A3F8, 32, 7);
        *(_QWORD *)(v40 + 16) = sub_1001A4A04;
        *(_QWORD *)(v40 + 24) = v39;
        *(_QWORD *)(v1 + 48) = sub_1000C00CC;
        *(_QWORD *)(v1 + 56) = v40;
        *(_QWORD *)(v1 + 16) = _NSConcreteStackBlock;
        *(_QWORD *)(v1 + 24) = 1107296256;
        *(_QWORD *)(v1 + 32) = sub_100026DC8;
        *(_QWORD *)(v1 + 40) = &unk_10060A410;
        v41 = _Block_copy((const void *)(v1 + 16));
        v10 = *(void (**)(uint64_t, uint64_t))(v1 + 56);
        v15 = v36;
        swift_retain(v40);
        swift_release(v10);
        objc_msgSend(v38, "performBlockAndWait:", v41);

        _Block_release(v41);
        LOBYTE(v41) = swift_isEscapingClosureAtFileLocation(v40, "", 93, 187, 51, 1);
        swift_release(v40);
        swift_release(v39);

        if ((v41 & 1) != 0)
        {
          __break(1u);
          goto LABEL_21;
        }
      }
      else
      {

      }
      if (v33 == ++v34)
        goto LABEL_28;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1001A3B80()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(void);
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v29 = *(_QWORD *)(v0 + 264);
  v30 = *(_QWORD *)(v0 + 272);
  v31 = *(_QWORD *)(v0 + 256);
  v32 = *(_QWORD *)(v0 + 304);
  v1 = *(_QWORD *)(v0 + 104);
  v28 = *(_QWORD *)(v0 + 96);
  v2 = sub_100004828((uint64_t *)&unk_1006325A0);
  v3 = sub_100004828((uint64_t *)&unk_100633440);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 72);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = (v6 + 32) & ~v6;
  v8 = swift_allocObject(v2, v7 + 2 * v5, v6 | 7);
  *(_OWORD *)(v8 + 16) = xmmword_1005208D0;
  v9 = v8 + v7;
  v10 = (_QWORD *)(v9 + *(int *)(v3 + 48));
  v11 = enum case for DIPError.PropertyKey.inoProviderID(_:);
  v12 = type metadata accessor for DIPError.PropertyKey(0);
  v13 = *(void (**)(void))(*(_QWORD *)(v12 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v13)(v9, v11, v12);
  v10[3] = &type metadata for String;
  *v10 = 0x61746E6567616DLL;
  v10[1] = 0xE700000000000000;
  v14 = (_QWORD *)(v9 + v5 + *(int *)(v3 + 48));
  v13();
  v14[3] = &type metadata for String;
  v15 = 0xE000000000000000;
  if (v1)
    v15 = v1;
  *v14 = v28;
  v14[1] = v15;
  swift_bridgeObjectRetain(v1);
  v16 = sub_10011D314(v8);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v29 + 104))(v30, enum case for DIPError.Code.internalError(_:), v31);
  v17 = type metadata accessor for DIPError(0);
  v18 = sub_100007F30();
  swift_allocError(v17, v18, 0, 0);
  swift_errorRetain(v32);
  v19 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, v32, v30, 0, v16, 0xD00000000000008BLL, 0x8000000100551630, 0xD000000000000044, 0x80000001005516C0, 83);
  swift_willThrow(v19);
  swift_errorRelease(v32);
  v20 = *(_QWORD *)(v0 + 240);
  v21 = *(_QWORD *)(v0 + 248);
  v22 = *(_QWORD *)(v0 + 216);
  v23 = *(_QWORD *)(v0 + 192);
  v25 = *(_QWORD *)(v0 + 160);
  v24 = *(_QWORD *)(v0 + 168);
  v26 = *(_QWORD *)(v0 + 152);
  swift_task_dealloc(*(_QWORD *)(v0 + 272));
  swift_task_dealloc(v21);
  swift_task_dealloc(v20);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001A3E08()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(void);
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unsigned int v41;

  v1 = *(_QWORD *)(v0 + 320);
  v2 = *(void **)(v0 + 288);
  v3 = *(_QWORD *)(v0 + 272);
  v4 = *(_QWORD *)(v0 + 184);
  v5 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 176);
  v41 = enum case for DIPError.Code.internalError(_:);
  (*(void (**)(uint64_t))(*(_QWORD *)(v0 + 264) + 104))(v3);
  swift_errorRetain(v1);
  v7 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
  v40 = type metadata accessor for DIPError(0);
  v39 = sub_100007F30();
  v38 = swift_allocError(v40, v39, 0, 0);
  v8 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000038, 0x8000000100551730, v1, v3, 0, v7, 0xD00000000000008BLL, 0x8000000100551630, 0xD000000000000044, 0x80000001005516C0, 62);
  swift_willThrow(v8);

  swift_errorRelease(v1);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v6);
  v35 = *(_QWORD *)(v0 + 264);
  v36 = *(_QWORD *)(v0 + 272);
  v37 = *(_QWORD *)(v0 + 256);
  v9 = *(_QWORD *)(v0 + 104);
  v34 = *(_QWORD *)(v0 + 96);
  v10 = sub_100004828((uint64_t *)&unk_1006325A0);
  v11 = sub_100004828((uint64_t *)&unk_100633440);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 72);
  v14 = *(unsigned __int8 *)(v12 + 80);
  v15 = (v14 + 32) & ~v14;
  v16 = swift_allocObject(v10, v15 + 2 * v13, v14 | 7);
  *(_OWORD *)(v16 + 16) = xmmword_1005208D0;
  v17 = v16 + v15;
  v18 = (_QWORD *)(v17 + *(int *)(v11 + 48));
  v19 = enum case for DIPError.PropertyKey.inoProviderID(_:);
  v20 = type metadata accessor for DIPError.PropertyKey(0);
  v21 = *(void (**)(void))(*(_QWORD *)(v20 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v21)(v17, v19, v20);
  v18[3] = &type metadata for String;
  *v18 = 0x61746E6567616DLL;
  v18[1] = 0xE700000000000000;
  v22 = (_QWORD *)(v17 + v13 + *(int *)(v11 + 48));
  v21();
  v22[3] = &type metadata for String;
  v23 = 0xE000000000000000;
  if (v9)
    v23 = v9;
  *v22 = v34;
  v22[1] = v23;
  swift_bridgeObjectRetain(v9);
  v24 = sub_10011D314(v16);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v35 + 104))(v36, v41, v37);
  swift_allocError(v40, v39, 0, 0);
  swift_errorRetain(v38);
  v25 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, v38, v36, 0, v24, 0xD00000000000008BLL, 0x8000000100551630, 0xD000000000000044, 0x80000001005516C0, 83);
  swift_willThrow(v25);
  swift_errorRelease(v38);
  v27 = *(_QWORD *)(v0 + 240);
  v26 = *(_QWORD *)(v0 + 248);
  v28 = *(_QWORD *)(v0 + 216);
  v29 = *(_QWORD *)(v0 + 192);
  v31 = *(_QWORD *)(v0 + 160);
  v30 = *(_QWORD *)(v0 + 168);
  v32 = *(_QWORD *)(v0 + 152);
  swift_task_dealloc(*(_QWORD *)(v0 + 272));
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001A4168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v8[41] = a8;
  v8[42] = v16;
  v8[39] = a6;
  v8[40] = a7;
  v8[37] = a4;
  v8[38] = a5;
  v8[35] = a2;
  v8[36] = a3;
  v8[34] = a1;
  v9 = type metadata accessor for DeviceInformationProvider(0);
  v8[43] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v8[44] = v10;
  v8[45] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for UUID(0);
  v8[46] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v8[47] = v12;
  v8[48] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = ((uint64_t (*)(_QWORD))type metadata accessor for KeystoreKeyType)(0);
  v8[49] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v8[50] = v14;
  v8[51] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001A422C, 0, 0);
}

uint64_t sub_1001A422C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v2 = v0[50];
  v1 = v0[51];
  v3 = v0[49];
  v4 = type metadata accessor for DIPKeystoreManager();
  inited = swift_initStackObject(v4, v0 + 30);
  v0[52] = inited;
  *(_QWORD *)(inited + 16) = sub_10011DABC((uint64_t)_swiftEmptyArrayStorage);
  *(_BYTE *)(inited + 24) = 2;
  v6 = sub_100004828(&qword_100632570);
  v7 = type metadata accessor for HardwareAttestationType(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v9 + 32) & ~v9;
  v11 = swift_allocObject(v6, v10 + *(_QWORD *)(v8 + 72), v9 | 7);
  v0[53] = v11;
  *(_OWORD *)(v11 + 16) = xmmword_10051FFB0;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 104))(v11 + v10, enum case for HardwareAttestationType.SEP(_:), v7);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, enum case for KeystoreKeyType.temporary(_:), v3);
  v12 = (_QWORD *)swift_task_alloc(dword_10063486C);
  v0[54] = v12;
  *v12 = v0;
  v12[1] = sub_1001A4384;
  return sub_1000F38B0((uint64_t)(v0 + 19), 0x61746E6567616DLL, 0xE700000000000000, v11, v0[51]);
}

uint64_t sub_1001A4384()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 432);
  *(_QWORD *)(*(_QWORD *)v1 + 440) = v0;
  swift_task_dealloc(v3);
  v5 = v2[52];
  v4 = v2[53];
  (*(void (**)(_QWORD, _QWORD))(v2[50] + 8))(v2[51], v2[49]);
  swift_bridgeObjectRelease(v4);
  swift_release(v5);
  if (v0)
    v6 = sub_1001A47FC;
  else
    v6 = sub_1001A4414;
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_1001A4414()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  Swift::OpaquePointer v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;

  v48 = (_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 376);
  v1 = *(_QWORD *)(v0 + 384);
  v4 = *(_QWORD *)(v0 + 360);
  v3 = *(_QWORD *)(v0 + 368);
  v42 = *(_QWORD *)(v0 + 352);
  v5 = *(_QWORD *)(v0 + 336);
  v44 = *(_QWORD *)(v0 + 344);
  v6 = *(_QWORD *)(v0 + 328);
  v8 = *(_QWORD *)(v0 + 304);
  v7 = *(_QWORD *)(v0 + 312);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 288));
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v6);
  v10 = UUID.init()(v9);
  v11 = UUID.uuidString.getter(v10);
  v46 = v12;
  v47 = v11;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v13 = *(_QWORD *)(v5 + OBJC_IVAR____TtC8coreidvd13DIPWebService_conversation + 8);
  v45 = *(_QWORD *)(v5 + OBJC_IVAR____TtC8coreidvd13DIPWebService_conversation);
  type metadata accessor for DIPAccountManager(0);
  swift_bridgeObjectRetain(v13);
  static DIPAccountManager.sharedInstance.getter((_QWORD *)(v0 + 200), v14);
  v15 = *(_QWORD *)(v0 + 224);
  v16 = *(_QWORD *)(v0 + 232);
  sub_10000806C((_QWORD *)(v0 + 200), v15);
  v17 = dispatch thunk of DIPAccountManagerProtocol.appleAuthHeader(_:)(0, 0, v15, v16);
  v40 = v18;
  v41 = v17;
  v19 = _s8coreidvd24DigitalPresentmentHelperVwxx_0((_QWORD *)(v0 + 200));
  v20 = DeviceInformationProvider.init()(v19);
  v21 = DeviceInformationProvider.uniqueDeviceID.getter(v20);
  v23 = v22;
  (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v4, v44);
  if (qword_10062F5D8 != -1)
    swift_once(&qword_10062F5D8, sub_1004E424C);
  v24 = *(_QWORD *)(v0 + 320);
  v25 = *(_QWORD *)(v0 + 328);
  v26 = *(_QWORD *)(v0 + 296);
  v43 = *(_OWORD *)(v0 + 280);
  v27 = qword_100670878;
  v28 = unk_100670880;
  swift_bridgeObjectRetain(unk_100670880);
  v39 = *(_OWORD *)(v0 + 304);
  sub_10008EF5C(0, 0, 0, 0, 0, 0);
  *(_QWORD *)(v0 + 16) = v45;
  *(_QWORD *)(v0 + 24) = v13;
  *(_QWORD *)(v0 + 32) = v47;
  *(_QWORD *)(v0 + 40) = v46;
  *(_QWORD *)(v0 + 48) = v41;
  *(_QWORD *)(v0 + 56) = v40;
  *(_QWORD *)(v0 + 64) = v21;
  *(_QWORD *)(v0 + 72) = v23;
  *(_QWORD *)(v0 + 80) = v27;
  *(_QWORD *)(v0 + 88) = v28;
  *(_OWORD *)(v0 + 96) = v43;
  *(_QWORD *)(v0 + 112) = v26;
  *(_OWORD *)(v0 + 120) = v39;
  *(_QWORD *)(v0 + 136) = v24;
  *(_QWORD *)(v0 + 144) = v25;
  v29 = sub_1001A48E4();
  v30 = sub_1001A4928();
  JWSSignedJSON.init(payload:)(v0 + 16, &type metadata for IdentityProofingActionNotificationRequest, v29, v30);
  v31._rawValue = *(void **)(v0 + 192);
  swift_bridgeObjectRetain(v31._rawValue);
  v32 = sub_100004828(&qword_100637388);
  *(_QWORD *)(v0 + 448) = v32;
  JWSSignedJSON.setCertificateChain(_:)(v31);
  v33 = *(_QWORD *)(v0 + 272);
  swift_bridgeObjectRelease(v31._rawValue);
  if (v34)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v33, v32);
    sub_1001A496C(v48);
    v35 = *(_QWORD *)(v0 + 384);
    v36 = *(_QWORD *)(v0 + 360);
    swift_task_dealloc(*(_QWORD *)(v0 + 408));
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    JWSSignedJSON.setKid(_:)(v48, v32);
    v37 = (_QWORD *)swift_task_alloc(async function pointer to JWSSignedJSON.sign(_:)[1]);
    *(_QWORD *)(v0 + 456) = v37;
    *v37 = v0;
    v37[1] = sub_1001A4738;
    return JWSSignedJSON.sign(_:)(v48, v32);
  }
}

uint64_t sub_1001A4738()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 456);
  *(_QWORD *)(*(_QWORD *)v1 + 464) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1001A4850;
  else
    v3 = sub_1001A479C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001A479C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 408);
  v2 = *(_QWORD *)(v0 + 384);
  v3 = *(_QWORD *)(v0 + 360);
  sub_1001A496C((_QWORD *)(v0 + 152));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001A47FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 384);
  v2 = *(_QWORD *)(v0 + 360);
  swift_task_dealloc(*(_QWORD *)(v0 + 408));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001A4850()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)(v0 + 448) - 8) + 8))(*(_QWORD *)(v0 + 272));
  sub_1001A496C((_QWORD *)(v0 + 152));
  v1 = *(_QWORD *)(v0 + 384);
  v2 = *(_QWORD *)(v0 + 360);
  swift_task_dealloc(*(_QWORD *)(v0 + 408));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for IdentityProofingActionNotificationFlow()
{
  return objc_opt_self(_TtC8coreidvd38IdentityProofingActionNotificationFlow);
}

unint64_t sub_1001A48E4()
{
  unint64_t result;

  result = qword_100637378;
  if (!qword_100637378)
  {
    result = swift_getWitnessTable(&unk_10052B77C, &type metadata for IdentityProofingActionNotificationRequest);
    atomic_store(result, (unint64_t *)&qword_100637378);
  }
  return result;
}

unint64_t sub_1001A4928()
{
  unint64_t result;

  result = qword_100637380;
  if (!qword_100637380)
  {
    result = swift_getWitnessTable(&unk_10052B754, &type metadata for IdentityProofingActionNotificationRequest);
    atomic_store(result, (unint64_t *)&qword_100637380);
  }
  return result;
}

_QWORD *sub_1001A496C(_QWORD *a1)
{
  destroy for IdentityKeyPair(a1);
  return a1;
}

uint64_t sub_1001A49A0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100004828(&qword_1006308F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001A49E0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

id sub_1001A4A04()
{
  uint64_t v0;

  return sub_1000290A4(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_1001A4A10()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001A4A20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001A4A30(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t type metadata accessor for PassManager()
{
  return objc_opt_self(_TtC8coreidvd11PassManager);
}

void sub_1001A4A58(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  void *v4;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  id v18;
  char v19;
  id v20;
  uint64_t v21;
  void *v22;

  v7 = a1;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        goto LABEL_20;
      __break(1u);
LABEL_13:
      if (__CocoaSet.Index.age.getter(a1, a2) == *(_DWORD *)(a4 + 36))
      {
        v11 = __CocoaSet.Index.element.getter(v7, a2);
        v21 = v11;
        v12 = sub_10001CFF8(0, &qword_100637450, PKAppletSubcredential_ptr);
        swift_unknownObjectRetain(v11);
        swift_dynamicCast(&v22, &v21, (char *)&type metadata for Swift.AnyObject + 8, v12, 7);
        v4 = v22;
        swift_unknownObjectRelease(v11);
        v13 = NSObject._rawHashValue(seed:)(*(_QWORD *)(a4 + 40));
        v14 = -1 << *(_BYTE *)(a4 + 32);
        v7 = v13 & ~v14;
        if (((*(_QWORD *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
        {
          v15 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
          v16 = static NSObject.== infix(_:_:)(v15);

          if ((v16 & 1) == 0)
          {
            v17 = ~v14;
            do
            {
              v7 = (v7 + 1) & v17;
              if (((*(_QWORD *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
                goto LABEL_24;
              v18 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
              v19 = static NSObject.== infix(_:_:)(v18);

            }
            while ((v19 & 1) == 0);
          }

LABEL_20:
          v20 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
          return;
        }
LABEL_24:

        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }
  if (a4 < 0)
    v8 = a4;
  else
    v8 = a4 & 0xFFFFFFFFFFFFFF8;
  v9 = __CocoaSet.element(at:)(a1, a2, v8);
  v21 = v9;
  v10 = sub_10001CFF8(0, &qword_100637450, PKAppletSubcredential_ptr);
  swift_unknownObjectRetain(v9);
  swift_dynamicCast(&v22, &v21, (char *)&type metadata for Swift.AnyObject + 8, v10, 7);
  swift_unknownObjectRelease(v9);
}

id sub_1001A4CC0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char **v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _UNKNOWN **v13;
  char **v14;
  void *v15;
  id v16;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  id result;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char v55;
  unint64_t v56;
  uint64_t v57;
  void *v58;
  void *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  char v64;
  id v65;
  unsigned int v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  void *v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  char **v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  _BOOL4 v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char v89;
  id v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  NSObject *v103;
  os_log_type_t v104;
  uint8_t *v105;
  uint64_t v106;
  uint64_t v107;
  char **v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  id v120;
  unint64_t v121;
  void *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  id v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  void *v134;
  _QWORD v135[5];

  v121 = a2;
  v119 = a1;
  v110 = type metadata accessor for Logger(0);
  v109 = *(_QWORD *)(v110 - 8);
  v2 = __chkstk_darwin(v110);
  v4 = (char *)&v107 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v6 = (char **)((char *)&v107 - v5);
  v111 = objc_msgSend(objc_allocWithZone((Class)PKPassLibrary), "init");
  v7 = objc_msgSend(v111, "passesOfType:", 1);
  v8 = sub_10001CFF8(0, &qword_100637438, PKPass_ptr);
  v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

  if ((unint64_t)v9 >> 62)
  {
LABEL_97:
    if (v9 < 0)
      v99 = v9;
    else
      v99 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v10 = _CocoaArrayWrapper.endIndex.getter(v99);
    swift_bridgeObjectRelease(v9);
    if (v10)
      goto LABEL_3;
LABEL_101:
    v100 = swift_bridgeObjectRelease(v9);
    defaultLogger()(v100);
    v101 = v121;
    v102 = swift_bridgeObjectRetain_n(v121, 2);
    v103 = Logger.logObject.getter(v102);
    v104 = static os_log_type_t.debug.getter(v103);
    if (os_log_type_enabled(v103, v104))
    {
      v105 = (uint8_t *)swift_slowAlloc(12, -1);
      v106 = swift_slowAlloc(32, -1);
      v134 = (void *)v106;
      *(_DWORD *)v105 = 136315138;
      swift_bridgeObjectRetain(v101);
      v133 = sub_1000E3AC8(v119, v101, (uint64_t *)&v134);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v133, &v134, v105 + 4);
      swift_bridgeObjectRelease_n(v101, 3);
      _os_log_impl((void *)&_mh_execute_header, v103, v104, "Did not find pass for credential %s", v105, 0xCu);
      swift_arrayDestroy(v106, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v106, -1, -1);
      swift_slowDealloc(v105, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v101, 2);
    }

    (*(void (**)(char *, uint64_t))(v109 + 8))(v4, v110);
    return 0;
  }
  v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v10)
    goto LABEL_101;
LABEL_3:
  v11 = 0;
  v12 = v9 & 0xC000000000000001;
  v116 = v9 & 0xFFFFFFFFFFFFFF8;
  v115 = v9 + 32;
  v13 = IDSPhoneCertificateVendor_ptr;
  v14 = &selRef_passiveGestureAssessment;
  v123 = (char *)&type metadata for Swift.AnyObject + 8;
  v128 = (uint64_t)v4;
  v108 = v6;
  v114 = v9;
  v113 = v10;
  v112 = v9 & 0xC000000000000001;
  while (1)
  {
    if (v12)
    {
      v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v9);
    }
    else
    {
      if (v11 >= *(_QWORD *)(v116 + 16))
        goto LABEL_96;
      v16 = *(id *)(v115 + 8 * v11);
    }
    v15 = v16;
    if (__OFADD__(v11++, 1))
    {
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
      goto LABEL_97;
    }
    v18 = objc_opt_self(v13[71]);
    v19 = swift_dynamicCastObjCClass(v15, v18);
    if (v19)
      break;
LABEL_6:

    if (v11 == v10)
      goto LABEL_101;
  }
  v20 = (void *)v19;
  v122 = v15;
  v21 = v15;
  if (!objc_msgSend(v20, "isIdentityPass"))
  {
LABEL_5:

    v15 = v122;
    goto LABEL_6;
  }
  v120 = v20;
  result = objc_msgSend(v20, "devicePaymentApplications");
  if (result)
  {
    v23 = result;
    v117 = v11;
    v9 = (uint64_t)PKPaymentApplication_ptr;
    v24 = sub_10001CFF8(0, &qword_100637440, PKPaymentApplication_ptr);
    v6 = (char **)sub_1001A58C8(&qword_100637448, &qword_100637440, PKPaymentApplication_ptr);
    v25 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v23, v24, v6);

    v124 = v24;
    if ((v25 & 0xC000000000000001) != 0)
    {
      if (v25 < 0)
        v27 = v25;
      else
        v27 = v25 & 0xFFFFFFFFFFFFFF8;
      v28 = __CocoaSet.makeIterator()(v27);
      v26 = Set.Iterator.init(_cocoa:)(v135, v28, v24, v6);
      v25 = v135[0];
      v131 = v135[1];
      v29 = v135[2];
      v30 = v135[3];
      v31 = v135[4];
    }
    else
    {
      v30 = 0;
      v32 = -1 << *(_BYTE *)(v25 + 32);
      v33 = *(_QWORD *)(v25 + 56);
      v131 = v25 + 56;
      v34 = ~v32;
      v35 = -v32;
      if (v35 < 64)
        v36 = ~(-1 << v35);
      else
        v36 = -1;
      v31 = v36 & v33;
      v29 = v34;
    }
    v125 = v25 & 0x7FFFFFFFFFFFFFFFLL;
    v118 = v29;
    v129 = (unint64_t)(v29 + 64) >> 6;
    v130 = v21;
    while (1)
    {
LABEL_26:
      if (v25 < 0)
      {
        v6 = (char **)v125;
        v39 = __CocoaSet.Iterator.next()(v26);
        if (!v39)
          goto LABEL_4;
        v9 = v39;
        v133 = v39;
        swift_unknownObjectRetain(v39);
        swift_dynamicCast(&v134, &v133, v123, v124, 7);
        v40 = v134;
        swift_unknownObjectRelease(v9);
        v38 = v30;
        v6 = (char **)v31;
        if (!v40)
          goto LABEL_4;
      }
      else
      {
        if (v31)
        {
          v6 = (char **)((v31 - 1) & v31);
          v37 = __clz(__rbit64(v31)) | (v30 << 6);
          v38 = v30;
        }
        else
        {
          v41 = v30 + 1;
          if (__OFADD__(v30, 1))
          {
            __break(1u);
            goto LABEL_95;
          }
          if (v41 >= v129)
            goto LABEL_4;
          v42 = *(_QWORD *)(v131 + 8 * v41);
          v38 = v30 + 1;
          if (!v42)
          {
            v38 = v30 + 2;
            if (v30 + 2 >= v129)
              goto LABEL_4;
            v42 = *(_QWORD *)(v131 + 8 * v38);
            if (!v42)
            {
              v38 = v30 + 3;
              if (v30 + 3 >= v129)
                goto LABEL_4;
              v42 = *(_QWORD *)(v131 + 8 * v38);
              if (!v42)
              {
                v38 = v30 + 4;
                if (v30 + 4 >= v129)
                  goto LABEL_4;
                v42 = *(_QWORD *)(v131 + 8 * v38);
                if (!v42)
                {
                  v43 = v30 + 5;
                  while (v129 != v43)
                  {
                    v42 = *(_QWORD *)(v131 + 8 * v43++);
                    if (v42)
                    {
                      v38 = v43 - 1;
                      goto LABEL_45;
                    }
                  }
LABEL_4:
                  sub_1000FBE78(v25);
                  v9 = v114;
                  v10 = v113;
                  v11 = v117;
                  v12 = v112;
                  v13 = IDSPhoneCertificateVendor_ptr;
                  goto LABEL_5;
                }
              }
            }
          }
LABEL_45:
          v6 = (char **)((v42 - 1) & v42);
          v37 = __clz(__rbit64(v42)) + (v38 << 6);
        }
        v40 = *(id *)(*(_QWORD *)(v25 + 48) + 8 * v37);
        if (!v40)
          goto LABEL_4;
      }
      if (objc_msgSend(v40, v14[161]) == (id)1)
        break;

      v30 = v38;
      v31 = (unint64_t)v6;
    }
    v132 = (char *)v6;
    v6 = v14;
    v127 = v31;
    result = objc_msgSend(v40, "subcredentials");
    if (!result)
    {
      __break(1u);
      goto LABEL_107;
    }
    v9 = (uint64_t)result;
    v44 = sub_10001CFF8(0, &qword_100637450, PKAppletSubcredential_ptr);
    v45 = sub_1001A58C8((unint64_t *)&qword_100637458, &qword_100637450, PKAppletSubcredential_ptr);
    v46 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v9, v44, v45);

    v47 = v46 & 0xC000000000000001;
    v126 = v30;
    if ((v46 & 0xC000000000000001) != 0)
    {
      if (v46 < 0)
        v48 = v46;
      else
        v48 = v46 & 0xFFFFFFFFFFFFFF8;
      v49 = __CocoaSet.startIndex.getter(v48);
      v51 = v50;
      v52 = __CocoaSet.endIndex.getter(v48);
      v54 = static __CocoaSet.Index.== infix(_:_:)(v49, v51, v52, v53);
      swift_bridgeObjectRelease(v52);
      v9 = v49;
      if ((v54 & 1) != 0)
      {
LABEL_82:
        sub_1000E6D18(v49, v51, v47 != 0);

        v26 = (_QWORD *)swift_bridgeObjectRelease(v46);
LABEL_83:
        v30 = v38;
        v31 = (unint64_t)v132;
        v4 = (char *)v128;
        v21 = v130;
        v14 = v6;
        goto LABEL_26;
      }
LABEL_58:
      sub_1001A4A58(v9, v51, v47 != 0, v46);
      v59 = v58;
      sub_1000E6D18(v9, v51, v47 != 0);
      swift_bridgeObjectRelease(v46);
      v60 = objc_msgSend(v59, "identifier");

      if (v60)
      {
        v61 = static String._unconditionallyBridgeFromObjectiveC(_:)(v60);
        v9 = v62;

        v63 = v61 == v119 && v9 == v121;
        v4 = (char *)v128;
        v14 = v6;
        if (v63)
        {
          swift_bridgeObjectRelease(v121);
        }
        else
        {
          v64 = _stringCompareWithSmolCheck(_:_:expecting:)(v61, v9, v119, v121, 0);
          swift_bridgeObjectRelease(v9);
          if ((v64 & 1) == 0)
          {
LABEL_68:

            v30 = v38;
            v31 = (unint64_t)v132;
            v21 = v130;
            goto LABEL_26;
          }
        }
        v65 = objc_msgSend(v120, "uniqueID");
        if (v65)
        {
          v70 = v65;
          v71 = static String._unconditionallyBridgeFromObjectiveC(_:)(v65);
          v73 = v72;
          swift_bridgeObjectRelease(v114);

          v74 = v108;
          defaultLogger()(v75);
          swift_bridgeObjectRetain_n(v73, 2);
          v76 = v121;
          v77 = swift_bridgeObjectRetain_n(v121, 2);
          v78 = Logger.logObject.getter(v77);
          v79 = static os_log_type_t.debug.getter(v78);
          v80 = os_log_type_enabled(v78, v79);
          v132 = (char *)v71;
          v129 = v73;
          if (v80)
          {
            v81 = swift_slowAlloc(22, -1);
            v128 = swift_slowAlloc(64, -1);
            v134 = (void *)v128;
            *(_DWORD *)v81 = 136315394;
            swift_bridgeObjectRetain(v73);
            v133 = sub_1000E3AC8(v71, v73, (uint64_t *)&v134);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v133, &v134, v81 + 4);
            swift_bridgeObjectRelease_n(v73, 3);
            *(_WORD *)(v81 + 12) = 2080;
            swift_bridgeObjectRetain(v76);
            v133 = sub_1000E3AC8(v119, v76, (uint64_t *)&v134);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v133, &v134, v81 + 14);
            swift_bridgeObjectRelease_n(v76, 3);
            _os_log_impl((void *)&_mh_execute_header, v78, v79, "Found pass %s for credential %s", (uint8_t *)v81, 0x16u);
            v82 = v128;
            swift_arrayDestroy(v128, 2, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v82, -1, -1);
            swift_slowDealloc(v81, -1, -1);

          }
          else
          {

            swift_bridgeObjectRelease_n(v76, 2);
            swift_bridgeObjectRelease_n(v73, 2);
          }
          (*(void (**)(char **, uint64_t))(v109 + 8))(v74, v110);
          v83 = v120;
          v84 = objc_msgSend(v120, "localizedDescription");
          v85 = static String._unconditionallyBridgeFromObjectiveC(_:)(v84);
          v87 = v86;

          v88 = (unint64_t)objc_msgSend(v83, "identityType");
          if (v88 >= 4)
            v89 = 2;
          else
            v89 = 0x3000102u >> (8 * v88);
          v90 = objc_msgSend(v83, "issuerAdministrativeAreaCode");
          if (v90)
          {
            v91 = v90;
            v92 = static String._unconditionallyBridgeFromObjectiveC(_:)(v90);
            v94 = v93;

          }
          else
          {
            v92 = 0;
            v94 = 0;
          }
          v95 = type metadata accessor for Pass();
          swift_allocObject(v95, 88, 7);
          sub_100133510((uint64_t)v132, v129, v40, v85, v87, v89, v92, v94);
          v97 = v96;
          v98 = v130;

          sub_1000FBE78(v25);
          return (id)v97;
        }
        goto LABEL_68;
      }

      goto LABEL_83;
    }
    v55 = *(_BYTE *)(v46 + 32);
    v49 = 1 << v55;
    v56 = *(_QWORD *)(v46 + 56);
    if (v56)
    {
      v57 = 0;
      goto LABEL_57;
    }
    v66 = v55 & 0x3F;
    if (v66 >= 7)
    {
      v56 = *(_QWORD *)(v46 + 64);
      if (v56)
      {
        v57 = 1;
        goto LABEL_57;
      }
      if (v66 >= 8)
      {
        v56 = *(_QWORD *)(v46 + 72);
        if (v56)
        {
          v57 = 2;
LABEL_57:
          v9 = __clz(__rbit64(v56)) + (v57 << 6);
          v51 = *(unsigned int *)(v46 + 36);
          if (v9 == v49)
            goto LABEL_82;
          goto LABEL_58;
        }
        v67 = 0;
        v68 = (unint64_t)(v49 + 63) >> 6;
        if (v68 <= 3)
          v68 = 3;
        v69 = v68 - 3;
        while (v69 != v67)
        {
          v56 = *(_QWORD *)(v46 + 80 + 8 * v67++);
          if (v56)
          {
            v57 = v67 + 2;
            goto LABEL_57;
          }
        }
      }
    }
    v51 = *(unsigned int *)(v46 + 36);
    goto LABEL_82;
  }
LABEL_107:
  __break(1u);
  return result;
}

uint64_t sub_1001A58C8(unint64_t *a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_10001CFF8(255, a2, a3);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001A5908@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint8_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v53 = a3;
  v54 = a2;
  v4 = type metadata accessor for DIPError.Code(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AugmentedProfile(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Logger(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = Data.init(base64Encoded:options:)(a1, v54, 1);
  if (v16 >> 60 == 15)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DIPError.Code.assessmentProfileDecodingFailed(_:), v4);
    v17 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v18 = type metadata accessor for DIPError(0);
    v19 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    swift_allocError(v18, v19, 0, 0);
    v20 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001CLL, 0x80000001005518C0, 0, v7, 0, v17, 0xD00000000000004ELL, 0x80000001005518E0, 0xD000000000000017, 0x8000000100551930, 457);
    return swift_willThrow(v20);
  }
  else
  {
    v22 = v16;
    v54 = v5;
    v48 = v10;
    v49 = v12;
    v50 = v11;
    v51 = v14;
    v23 = v15;
    v24 = type metadata accessor for JSONDecoder(0);
    v25 = swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
    v26 = JSONDecoder.init()(v25);
    v27 = sub_100004790(&qword_1006375D8, type metadata accessor for AugmentedProfile, (uint64_t)&unk_100527BB4);
    v28 = v52;
    v29 = (uint64_t)v53;
    dispatch thunk of JSONDecoder.decode<A>(_:from:)(v8, v23, v22, v8, v27);
    if (v28)
    {
      swift_release(v26);
      (*(void (**)(char *, _QWORD, uint64_t))(v54 + 104))(v7, enum case for DIPError.Code.invalidAssessmentProfile(_:), v4);
      swift_errorRetain(v28);
      v30 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
      v31 = type metadata accessor for DIPError(0);
      v32 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
      swift_allocError(v31, v32, 0, 0);
      v33 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001BLL, 0x8000000100551950, v28, v7, 0, v30, 0xD00000000000004ELL, 0x80000001005518E0, 0xD000000000000017, 0x8000000100551930, 465);
      swift_willThrow(v33);
      swift_errorRelease(v28);
      return sub_100007F78(v23, v22);
    }
    else
    {
      v34 = v8;
      v54 = v23;
      v35 = swift_release(v26);
      v36 = v51;
      defaultLogger()(v35);
      v37 = (uint64_t)v48;
      v38 = sub_1001AD36C(v29, (uint64_t)v48);
      v39 = Logger.logObject.getter(v38);
      v40 = static os_log_type_t.debug.getter(v39);
      if (os_log_type_enabled(v39, v40))
      {
        v41 = (uint8_t *)swift_slowAlloc(12, -1);
        v42 = swift_slowAlloc(32, -1);
        v43 = v34;
        v44 = v42;
        *(_DWORD *)v41 = 136446210;
        v57 = v42;
        v53 = v41 + 4;
        v45 = (uint64_t *)(v37 + *(int *)(v43 + 28));
        v46 = *v45;
        v47 = v45[1];
        swift_bridgeObjectRetain(v47);
        v55 = sub_1000E3AC8(v46, v47, &v57);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56, v53);
        swift_bridgeObjectRelease(v47);
        sub_1001AD3B0(v37);
        _os_log_impl((void *)&_mh_execute_header, v39, v40, "Decoded profile %{public}s", v41, 0xCu);
        swift_arrayDestroy(v44, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v44, -1, -1);
        swift_slowDealloc(v41, -1, -1);
        sub_100007F78(v54, v22);

        return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v51, v50);
      }
      else
      {
        sub_1001AD3B0(v37);
        sub_100007F78(v54, v22);

        return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v36, v50);
      }
    }
  }
}

uint64_t sub_1001A5E1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v0 = type metadata accessor for DIPODNHelper();
  v1 = swift_allocObject(v0, 88, 7);
  result = sub_1001ABE04();
  qword_1006702E0 = v1;
  return result;
}

uint64_t sub_1001A5E54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  _QWORD *v15;
  _QWORD aBlock[6];

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v0 + 16);
  aBlock[4] = sub_1001A600C;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1004AB190;
  aBlock[3] = &unk_10060A7B0;
  v9 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter(v9);
  v15 = _swiftEmptyArrayStorage;
  v10 = sub_100004790((unint64_t *)&unk_100632380, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v11 = sub_100004828((uint64_t *)&unk_1006308D0);
  v12 = sub_100025D68(&qword_100632390, (uint64_t *)&unk_1006308D0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v15, v11, v12, v1, v10);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v9);
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1001A600C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  id v9;
  id v10;
  void *v11;
  _QWORD aBlock[6];

  v0 = type metadata accessor for Logger(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = defaultLogger()(v2);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.debug.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Waking up odn", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  v9 = objc_msgSend(objc_allocWithZone((Class)OZRXp7MLSzffIeLD), "init");
  v10 = objc_msgSend(objc_allocWithZone((Class)cSPXWY2zzg2zwzaR), "initWithQAy7FB3BSYJUwsIc:Zwvxi3fDtAHqlF0d:KufCqgU8RstLzBzT:BGiN5h2SLMRO6B9R:Jf7L4ypvXegQqMcE:zeXRCfLmM5cdkEtz:", 0, 0, 1, 0, 0, 0);
  aBlock[4] = nullsub_7;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001A61B8;
  aBlock[3] = &unk_10060A7D8;
  v11 = _Block_copy(aBlock);
  objc_msgSend(v9, "MypqGKKWznx4xnYa:l8OCYbP9LFIvnTwG:ygOPXTiKN0J02x0j:", v10, 0, v11);
  _Block_release(v11);

}

uint64_t sub_1001A61B8(uint64_t a1, void *a2, void *a3, void *a4, unsigned int a5, void *a6)
{
  void *v9;
  uint64_t v10;
  void (*v11)(void *, unint64_t, void *, unint64_t, void *, unint64_t, _QWORD, void *);
  id v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  unint64_t v19;
  unint64_t v20;
  id v21;

  v9 = a2;
  v11 = *(void (**)(void *, unint64_t, void *, unint64_t, void *, unint64_t, _QWORD, void *))(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    swift_retain(v10);
    v12 = v9;
    v9 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v14 = v13;

    if (a3)
      goto LABEL_3;
LABEL_6:
    v17 = 0xF000000000000000;
    if (a4)
      goto LABEL_4;
LABEL_7:
    v20 = 0xF000000000000000;
    goto LABEL_8;
  }
  swift_retain(v10);
  v14 = 0xF000000000000000;
  if (!a3)
    goto LABEL_6;
LABEL_3:
  v15 = a3;
  a3 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v17 = v16;

  if (!a4)
    goto LABEL_7;
LABEL_4:
  v18 = a4;
  a4 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v20 = v19;

LABEL_8:
  v21 = a6;
  v11(v9, v14, a3, v17, a4, v20, a5, a6);

  sub_100007F78((uint64_t)a4, v20);
  sub_100007F78((uint64_t)a3, v17);
  sub_100007F78((uint64_t)v9, v14);
  return swift_release(v10);
}

uint64_t sub_1001A62EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, __int128 *a9@<X8>, uint64_t a10, uint64_t a11, unsigned __int8 a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  NSObject *v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  id v32;
  Swift::String v33;
  Swift::Bool v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  NSObject *v38;
  uint64_t v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t ObjectType;
  __int128 v45;
  __int128 v46;
  int v47;
  unint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 *v51;
  __int128 *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  __int128 *v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD aBlock[5];
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  int v72;
  unint64_t v73;
  uint64_t v74;

  v13 = v12;
  v63 = a8;
  v64 = a4;
  v61 = a7;
  v62 = a3;
  v65 = a5;
  v66 = a6;
  v60 = a2;
  v59 = a1;
  v57 = a9;
  v56 = type metadata accessor for Logger(0);
  v55 = *(_QWORD *)(v56 - 8);
  __chkstk_darwin(v56);
  v54 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = xmmword_100520790;
  v70 = xmmword_100524AF0;
  v71 = xmmword_100520790;
  v72 = 0;
  v73 = 0xBFF0000000000000;
  v15 = *(void **)(v12 + 32);
  v16 = swift_allocObject(&unk_10060A590, 41, 7);
  *(_QWORD *)(v16 + 16) = v13;
  *(_QWORD *)(v16 + 24) = a10;
  *(_QWORD *)(v16 + 32) = a11;
  v58 = a12;
  *(_BYTE *)(v16 + 40) = a12;
  v17 = swift_allocObject(&unk_10060A5B8, 32, 7);
  *(_QWORD *)(v17 + 16) = sub_1001AE174;
  *(_QWORD *)(v17 + 24) = v16;
  aBlock[4] = sub_1000C00CC;
  v68 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100026DC8;
  aBlock[3] = &unk_10060A5D0;
  v18 = _Block_copy(aBlock);
  v19 = v68;
  v20 = v15;
  swift_retain(v13);
  swift_bridgeObjectRetain(a11);
  swift_retain(v17);
  swift_release(v19);
  dispatch_sync(v20, v18);

  _Block_release(v18);
  LOBYTE(v18) = swift_isEscapingClosureAtFileLocation(v17, "", 78, 434, 48, 1);
  swift_release(v16);
  result = swift_release(v17);
  if ((v18 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    __chkstk_darwin(result);
    *(&v53 - 18) = v13;
    *(&v53 - 17) = a10;
    *(&v53 - 16) = a11;
    *((_BYTE *)&v53 - 120) = v58;
    v22 = v63;
    *(&v53 - 14) = v61;
    *(&v53 - 13) = v22;
    v23 = v60;
    *(&v53 - 12) = v59;
    *(&v53 - 11) = v23;
    v24 = v64;
    *(&v53 - 10) = v62;
    *(&v53 - 9) = v24;
    v25 = v66;
    *(&v53 - 8) = v65;
    *(&v53 - 7) = v25;
    *(&v53 - 6) = v26;
    *((_BYTE *)&v53 - 40) = v27 & 1;
    *(&v53 - 4) = v29;
    *(&v53 - 3) = v28;
    v52 = &v69;
    v30 = v74;
    result = OS_dispatch_queue.sync<A>(execute:)(sub_1001AE194, &v53 - 20, (char *)&type metadata for () + 8, v31);
    if (v30)
    {
      v32 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
      v33._object = (void *)0x8000000100551BE0;
      v33._countAndFlagsBits = 0xD000000000000021;
      v34 = NSUserDefaults.internalBool(forKey:)(v33);

      if (v34)
      {
        v36 = v54;
        v37 = defaultLogger()(v35);
        v38 = Logger.logObject.getter(v37);
        v40 = static os_log_type_t.info.getter(v38, v39);
        if (os_log_type_enabled(v38, v40))
        {
          v41 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v41 = 0;
          _os_log_impl((void *)&_mh_execute_header, v38, v40, "Triggering tap-to-radar for ODN mypg due to user defaults setting", v41, 2u);
          swift_slowDealloc(v41, -1, -1);
        }

        v42 = (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v36, v56);
        v35 = static DIPFeatures.sharedInstance.getter(v42);
        if (v35)
        {
          v43 = v35;
          ObjectType = swift_getObjectType(v35);
          swift_errorRetain(v30);
          DIPFeaturesProtocol.triggerTapToRadar(forContext:title:error:attachmentFilePaths:deleteOnAttach:description:)(0x6770796D204E444FLL, 0xE800000000000000, 0, 0xE000000000000000, v30, _swiftEmptyArrayStorage, 0, 0, 0, ObjectType);
          swift_unknownObjectRelease(v43);
          v35 = swift_errorRelease(v30);
        }
      }
      swift_willThrow(v35);
      v45 = v70;
      v46 = v71;
      sub_100007F78(v69, *((unint64_t *)&v69 + 1));
      sub_100007F8C(v45, *((unint64_t *)&v45 + 1));
      return sub_100007F78(v46, *((unint64_t *)&v46 + 1));
    }
    else
    {
      v47 = v72;
      v48 = v73;
      v49 = v70;
      v50 = v71;
      v51 = v57;
      *v57 = v69;
      v51[1] = v49;
      v51[2] = v50;
      *((_DWORD *)v51 + 12) = v47;
      *((_QWORD *)v51 + 7) = v48;
    }
  }
  return result;
}

void sub_1001A6758(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned __int8 a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(void);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD v73[17];
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  __int128 v118;
  int v119;

  v92 = a8;
  v91 = a7;
  v105 = a6;
  v113 = a5;
  v119 = a4;
  v108 = a2;
  v114 = a1;
  v73[10] = a17;
  v94 = a16;
  v93 = a15;
  v84 = a14;
  v85 = a13;
  v90 = a12;
  v87 = a11;
  v89 = a10;
  v88 = a9;
  v74 = type metadata accessor for Date(0);
  v73[16] = *(_QWORD *)(v74 - 8);
  __chkstk_darwin(v74);
  v73[15] = (char *)v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = type metadata accessor for DispatchTime(0);
  v100 = *(_QWORD *)(v95 - 8);
  v19 = __chkstk_darwin(v95);
  v96 = (char *)v73 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v19);
  v78 = (char *)v73 - v22;
  v82 = v23;
  __chkstk_darwin(v21);
  v99 = (char *)v73 - v24;
  v102 = type metadata accessor for DIPError.Code(0);
  v101 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v103 = (char *)v73 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = type metadata accessor for Logger(0);
  v106 = *(_QWORD *)(v115 - 8);
  v26 = __chkstk_darwin(v115);
  v98 = (char *)v73 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __chkstk_darwin(v26);
  v73[9] = (char *)v73 - v29;
  v30 = __chkstk_darwin(v28);
  v73[5] = (char *)v73 - v31;
  v32 = __chkstk_darwin(v30);
  v73[14] = (char *)v73 - v33;
  v34 = __chkstk_darwin(v32);
  v77 = (char *)v73 - v35;
  v36 = __chkstk_darwin(v34);
  v76 = (char *)v73 - v37;
  v38 = __chkstk_darwin(v36);
  v75 = (char *)v73 - v39;
  __chkstk_darwin(v38);
  v86 = (char *)v73 - v40;
  v41 = type metadata accessor for DIPSignpost.Config(0);
  __chkstk_darwin(v41);
  v43 = (char *)v73 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = type metadata accessor for DIPSignpost(0);
  v109 = *(_QWORD *)(v110 - 8);
  v44 = __chkstk_darwin(v110);
  v81 = (char *)v73 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __chkstk_darwin(v44);
  v97 = (char *)v73 - v47;
  v80 = v48;
  v49 = __chkstk_darwin(v46);
  v51 = (char *)v73 - v50;
  static DaemonSignposts.fetchAssessment.getter(v49);
  v104 = v51;
  v79 = v43;
  DIPSignpost.init(_:)(v43);
  v52 = swift_allocObject(&unk_10060A608, 32, 7);
  v118 = xmmword_100520790;
  v112 = v52;
  *(_OWORD *)(v52 + 16) = xmmword_100520790;
  v73[8] = v52 + 16;
  v53 = swift_allocObject(&unk_10060A608, 32, 7);
  v117 = v53;
  *(_OWORD *)(v53 + 16) = v118;
  v73[11] = v53 + 16;
  v54 = swift_allocObject(&unk_10060A630, 24, 7);
  v107 = v54;
  *(_QWORD *)(v54 + 16) = 0;
  v73[13] = v54 + 16;
  v55 = swift_allocObject(&unk_10060A658, 20, 7);
  v116 = v55;
  *(_DWORD *)(v55 + 16) = 0;
  v73[7] = v55 + 16;
  v56 = swift_allocObject(&unk_10060A608, 32, 7);
  v111 = v56;
  *(_OWORD *)(v56 + 16) = v118;
  v73[12] = v56 + 16;
  v57 = swift_allocObject(&unk_10060A680, 24, 7);
  *(_QWORD *)&v118 = v57;
  *(_QWORD *)(v57 + 16) = 0xBFF0000000000000;
  v73[6] = v57 + 16;
  v58 = sub_100004828((uint64_t *)&unk_1006325A0);
  v59 = sub_100004828((uint64_t *)&unk_100633440);
  v60 = *(_QWORD *)(v59 - 8);
  v61 = *(_QWORD *)(v60 + 72);
  v62 = *(unsigned __int8 *)(v60 + 80);
  v63 = (v62 + 32) & ~v62;
  v64 = swift_allocObject(v58, v63 + 2 * v61, v62 | 7);
  *(_OWORD *)(v64 + 16) = xmmword_1005208D0;
  v65 = v64 + v63;
  v66 = (_QWORD *)(v64 + v63 + *(int *)(v59 + 48));
  v67 = enum case for DIPError.PropertyKey.spWorkflowID(_:);
  v68 = type metadata accessor for DIPError.PropertyKey(0);
  v69 = *(void (**)(void))(*(_QWORD *)(v68 - 8) + 104);
  v70 = v67;
  v71 = v105;
  ((void (*)(uint64_t, uint64_t, uint64_t))v69)(v65, v70, v68);
  v66[3] = &type metadata for String;
  *v66 = v108;
  v66[1] = a3;
  v72 = v65 + v61 + *(int *)(v59 + 48);
  v69();
  *(_QWORD *)(v72 + 24) = &type metadata for DIPState;
  *(_BYTE *)v72 = v119;
  v83 = a3;
  swift_bridgeObjectRetain(a3);
  sub_10011D314(v64);
  __asm { BR              X10 }
}

uint64_t sub_1001A6DC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  Swift::String v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  void *v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  NSString v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  _BOOL4 v63;
  uint8_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  uint8_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint8_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void *v123;
  uint64_t v124;
  id v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  id v131;
  void *v132;
  const void *v133;
  void *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _BYTE *v138;
  uint64_t v139;
  _BYTE *v140;
  uint64_t *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  NSObject *v147;
  os_log_type_t v148;
  _BOOL4 v149;
  uint64_t v150;
  uint8_t *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  Swift::String v156;
  void *object;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  _QWORD *v164;
  void *v165;
  void *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  NSObject *v176;
  os_log_type_t v177;
  _BOOL4 v178;
  uint8_t *v179;
  uint8_t *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  unint64_t v187;
  uint64_t v188;
  uint64_t v189;
  NSObject *v190;
  os_log_type_t v191;
  BOOL v192;
  uint8_t *v193;
  uint8_t *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  void (*v199)(uint64_t, _QWORD);
  uint64_t v200;
  uint64_t v201;
  unint64_t v202;
  uint64_t v203;
  unint64_t v204;
  int v205;
  uint64_t v206;
  uint64_t v207;
  _QWORD *v208;
  void *v209;
  void *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;

  if (BYTE6(v4) != 16)
  {
    v13 = *(_QWORD *)(v5 - 512);
    v14 = defaultLogger()(a1);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "invalid nonce size", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }

    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 448) + 8))(v13, *(_QWORD *)(v5 - 376));
    v18 = *(_QWORD *)(v5 - 472);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v5 - 488) + 104))(v18, enum case for DIPError.Code.invalidAssessmentGUID(_:), *(_QWORD *)(v5 - 480));
    v19 = type metadata accessor for DIPError(0);
    v20 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    swift_allocError(v19, v20, 0, 0);
    v21 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, 0, v18, 0, v2, 0xD00000000000004ELL, 0x80000001005518E0, 0xD000000000000079, 0x8000000100551C10, 145);
    swift_willThrow(v21);
    v22 = *(_QWORD *)(v5 - 408);
    goto LABEL_7;
  }
  *(_QWORD *)(v5 - 512) = v2;
  v6 = *(_QWORD *)(v5 - 608);
  defaultLogger()(a1);
  sub_100022948(v1, v4);
  v7 = sub_100022948(v1, v4);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.debug.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    *(_QWORD *)(v5 - 136) = v11;
    *(_DWORD *)v10 = 136446210;
    v12 = Data.base64EncodedString(options:)(0);
    *(_QWORD *)(v5 - 160) = sub_1000E3AC8(v12._countAndFlagsBits, (unint64_t)v12._object, (uint64_t *)(v5 - 136));
    v1 = *(_QWORD *)(v5 - 392);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v5 - 160, v5 - 152, v10 + 4);
    swift_bridgeObjectRelease(v12._object);
    sub_100007F8C(v1, v4);
    sub_100007F8C(v1, v4);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "odn nonce %{public}s", v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }
  else
  {
    sub_100007F8C(v1, v4);
    sub_100007F8C(v1, v4);
  }

  v27 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 448) + 8);
  v28 = *(_QWORD *)(v5 - 376);
  *(_QWORD *)(v5 - 608) = v27;
  v27(v6, v28);
  v29 = 1;
  if (*(_DWORD *)(v5 - 72) == 9)
    v29 = 2;
  *(_QWORD *)(v5 - 392) = v29;
  v30 = *(_QWORD *)(v5 - 592);
  v31 = *(_QWORD *)(v5 - 584);
  sub_100028034(v30, v31);
  v32 = sub_10044AFCC(*(_QWORD *)(v5 - 600));
  objc_allocWithZone((Class)cSPXWY2zzg2zwzaR);
  sub_100022948(v1, v4);
  v33 = *(_QWORD *)(v5 - 576);
  swift_bridgeObjectRetain(v33);
  v34 = v4;
  v35 = *(_QWORD *)(v5 - 568);
  v36 = *(_QWORD *)(v5 - 560);
  sub_100022948(v35, v36);
  v37 = sub_1001AD1DC(v35, v36, v30, v31, *(_QWORD *)(v5 - 392), v32, v33, v1, v34);
  if (!v37)
  {
    v67 = *(_QWORD *)(v5 - 472);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v5 - 488) + 104))(v67, enum case for DIPError.Code.odnInitialize(_:), *(_QWORD *)(v5 - 480));
    v68 = type metadata accessor for DIPError(0);
    v69 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    swift_allocError(v68, v69, 0, 0);
    v70 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001ALL, 0x8000000100551C90, 0, v67, 0, *(_QWORD *)(v5 - 512), 0xD00000000000004ELL, 0x80000001005518E0, 0xD000000000000079, 0x8000000100551C10, 153);
    swift_willThrow(v70);
    v22 = *(_QWORD *)(v5 - 408);
    v3 = *(_QWORD *)(v5 - 352);
LABEL_7:
    v23 = *(_QWORD *)(v5 - 416);
    v24 = *(_QWORD *)(v5 - 424);
    v25 = *(_QWORD *)(v5 - 440);
    v26 = *(_QWORD *)(v5 - 400);
LABEL_38:
    swift_release(v26);
    swift_release(*(_QWORD *)(v5 - 360));
    swift_release(v25);
    swift_release(*(_QWORD *)(v5 - 368));
    swift_release(v22);
    swift_release(v3);
    v164 = *(_QWORD **)(v5 - 384);
    v165 = (void *)v164[7];
    v166 = (void *)v164[8];
    v167 = v164[9];
    v168 = v164[10];
    *(_OWORD *)(v164 + 7) = 0u;
    *(_OWORD *)(v164 + 9) = 0u;
    sub_1001AE05C(v165, v166, v167, v168);
    return (*(uint64_t (**)(_QWORD, uint64_t))(v24 + 8))(*(_QWORD *)(v5 - 464), v23);
  }
  v38 = v37;
  v39 = *(_QWORD *)(v5 - 384);
  v40 = *(id *)(v39 + 24);
  v41 = *(_QWORD *)(v5 - 680);
  static DispatchTime.now()(v40);
  v42 = *(_QWORD *)(v5 - 504);
  + infix(_:_:)(v41, 1.0);
  v43 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 496) + 8);
  v44 = *(_QWORD *)(v5 - 536);
  v43(v41, v44);
  LOBYTE(v41) = OS_dispatch_semaphore.wait(timeout:)(v42);

  *(_QWORD *)(v5 - 824) = v43;
  v43(v42, v44);
  v45 = static DispatchTimeoutResult.== infix(_:_:)(v41 & 1, 0);
  if ((v45 & 1) != 0 && (v46 = *(void **)(v39 + 56)) != 0)
  {
    v47 = *(_QWORD *)(v39 + 80);
    v48 = *(void **)(v39 + 64);
    v49 = v46;
    v50 = v48;
    swift_bridgeObjectRetain(v47);
    v51 = *(_QWORD *)(v5 - 704);
    v53 = defaultLogger()(v52);
    v54 = Logger.logObject.getter(v53);
    v55 = static os_log_type_t.debug.getter(v54);
    if (os_log_type_enabled(v54, v55))
    {
      v56 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v56 = 0;
      _os_log_impl((void *)&_mh_execute_header, v54, v55, "using collected NF data", v56, 2u);
      swift_slowDealloc(v56, -1, -1);
    }

    (*(void (**)(uint64_t, _QWORD))(v5 - 608))(v51, *(_QWORD *)(v5 - 376));
    objc_msgSend(v38, "setHostChallenge:", v49);
    objc_msgSend(v38, "setChallengeResponse:", v50);
    swift_bridgeObjectRetain(v47);
    v57 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v47);
    objc_msgSend(v38, "setSeid:", v57);
    swift_bridgeObjectRelease(v47);

    v44 = *(_QWORD *)(v5 - 536);
    v58 = *(void **)(v5 - 616);
  }
  else
  {
    v59 = *(_QWORD *)(v5 - 696);
    v60 = defaultLogger()(v45);
    v61 = Logger.logObject.getter(v60);
    v62 = static os_log_type_t.debug.getter(v61);
    v63 = os_log_type_enabled(v61, v62);
    v58 = *(void **)(v5 - 616);
    if (v63)
    {
      v64 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v64 = 0;
      _os_log_impl((void *)&_mh_execute_header, v61, v62, "passing nil as NF data", v64, 2u);
      swift_slowDealloc(v64, -1, -1);
    }

    (*(void (**)(uint64_t, _QWORD))(v5 - 608))(v59, *(_QWORD *)(v5 - 376));
  }
  v65 = *(_QWORD *)(v5 - 688);
  v66 = *(_QWORD *)(v5 - 528);
  if (v58)
    *(_QWORD *)(v5 - 560) = v58;
  else
    *(_QWORD *)(v5 - 560) = dispatch_semaphore_create(0);
  *(_QWORD *)(v5 - 576) = v38;
  v71 = objc_allocWithZone((Class)OZRXp7MLSzffIeLD);
  v72 = v58;
  *(_QWORD *)(v5 - 568) = objc_msgSend(v71, "init");
  v73 = *(_QWORD *)(v5 - 672);
  ((void (*)(void))static DaemonSignposts.odnMypg.getter)();
  v74 = *(_QWORD *)(v5 - 520);
  v75 = DIPSignpost.init(_:)(v73);
  static DispatchTime.now()(v75);
  v76 = swift_allocObject(&unk_10060A6A8, 17, 7);
  *(_QWORD *)(v5 - 392) = v76;
  *(_BYTE *)(v76 + 16) = 0;
  *(_QWORD *)(v5 - 840) = v76 + 16;
  v77 = swift_allocObject(&unk_10060A6A8, 17, 7);
  *(_QWORD *)(v5 - 456) = v77;
  *(_BYTE *)(v77 + 16) = 0;
  v77 += 16;
  *(_QWORD *)(v5 - 832) = v77;
  v78 = *(_QWORD *)(v5 - 624);
  *(_QWORD *)(v5 - 584) = v78 & 1;
  v79 = defaultLogger()(v77);
  v80 = Logger.logObject.getter(v79);
  v81 = static os_log_type_t.debug.getter(v80);
  if (os_log_type_enabled(v80, v81))
  {
    v82 = (uint8_t *)swift_slowAlloc(12, -1);
    v83 = swift_slowAlloc(32, -1);
    *(_DWORD *)v82 = 136315138;
    *(_QWORD *)(v5 - 136) = v83;
    if ((v78 & 1) != 0)
      v84 = 49;
    else
      v84 = 48;
    *(_QWORD *)(v5 - 160) = sub_1000E3AC8(v84, 0xE100000000000000, (uint64_t *)(v5 - 136));
    v66 = *(_QWORD *)(v5 - 528);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v5 - 160, v5 - 152, v82 + 4);
    swift_bridgeObjectRelease(0xE100000000000000);
    _os_log_impl((void *)&_mh_execute_header, v80, v81, "Calling with option = %s", v82, 0xCu);
    swift_arrayDestroy(v83, 1, (char *)&type metadata for Any + 8);
    v85 = v83;
    v74 = *(_QWORD *)(v5 - 520);
    swift_slowDealloc(v85, -1, -1);
    v86 = v82;
    v58 = *(void **)(v5 - 616);
    swift_slowDealloc(v86, -1, -1);
  }

  (*(void (**)(uint64_t, _QWORD))(v5 - 608))(v65, *(_QWORD *)(v5 - 376));
  v87 = *(_QWORD *)(v5 - 416);
  *(_DWORD *)(v5 - 592) = v58 != 0;
  v88 = *(_QWORD *)(v5 - 424);
  v89 = *(_QWORD *)(v5 - 656);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v88 + 16))(v89, v74, v87);
  v90 = *(_QWORD *)(v5 - 496);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v90 + 16))(*(_QWORD *)(v5 - 504), v66, v44);
  v91 = *(unsigned __int8 *)(v88 + 80);
  v92 = (v91 + 16) & ~v91;
  v93 = v92 + *(_QWORD *)(v5 - 664);
  *(_QWORD *)(v5 - 608) = (v93 + 7) & 0xFFFFFFFFFFFFFFF8;
  v94 = (v93 + 31) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v5 - 600) = v94;
  v95 = (v94 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v5 - 616) = v95;
  v96 = (v95 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v5 - 664) = v96;
  v97 = (v96 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v5 - 672) = v97;
  v98 = *(unsigned __int8 *)(v90 + 80);
  v99 = (v98 + v97 + 8) & ~v98;
  *(_QWORD *)(v5 - 696) = v99;
  v100 = v91 | v98 | 7;
  v101 = (*(_QWORD *)(v5 - 648) + v99 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v5 - 648) = v101;
  v102 = (v101 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v5 - 680) = v102;
  v103 = (v102 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v5 - 704) = v103;
  v104 = (v103 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v5 - 688) = v104;
  v105 = (v104 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v5 - 816) = v105;
  v106 = (v105 + 15) & 0xFFFFFFFFFFFFFFF8;
  v107 = (v106 + 23) & 0xFFFFFFFFFFFFFFF8;
  v108 = (v107 + 15) & 0xFFFFFFFFFFFFFFF8;
  v109 = swift_allocObject(&unk_10060A6D0, v108 + 8, v100);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v88 + 32))(v109 + v92, v89, v87);
  v110 = v109 + *(_QWORD *)(v5 - 608);
  v111 = *(_QWORD *)(v5 - 640);
  *(_QWORD *)v110 = *(_QWORD *)(v5 - 432);
  *(_QWORD *)(v110 + 8) = v111;
  *(_BYTE *)(v110 + 16) = *(_DWORD *)(v5 - 72);
  *(_QWORD *)(v109 + *(_QWORD *)(v5 - 600)) = *(_QWORD *)(v5 - 456);
  *(_QWORD *)(v109 + *(_QWORD *)(v5 - 616)) = *(_QWORD *)(v5 - 560);
  v112 = *(_QWORD *)(v5 - 384);
  *(_QWORD *)(v109 + *(_QWORD *)(v5 - 664)) = v112;
  v113 = *(_QWORD *)(v5 - 352);
  *(_QWORD *)(v109 + *(_QWORD *)(v5 - 672)) = v113;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v5 - 496) + 32))(v109 + *(_QWORD *)(v5 - 696), *(_QWORD *)(v5 - 504), v44);
  v114 = *(_QWORD *)(v5 - 440);
  *(_QWORD *)(v109 + *(_QWORD *)(v5 - 648)) = v114;
  v115 = *(_QWORD *)(v5 - 368);
  *(_QWORD *)(v109 + *(_QWORD *)(v5 - 680)) = v115;
  *(_QWORD *)(v109 + *(_QWORD *)(v5 - 704)) = *(_QWORD *)(v5 - 400);
  v116 = *(_QWORD *)(v5 - 360);
  *(_QWORD *)(v109 + *(_QWORD *)(v5 - 688)) = v116;
  v117 = v112;
  v118 = *(_QWORD *)(v5 - 408);
  *(_QWORD *)(v109 + *(_QWORD *)(v5 - 816)) = v118;
  v119 = (_QWORD *)(v109 + v106);
  v120 = *(_QWORD *)(v5 - 544);
  *v119 = *(_QWORD *)(v5 - 552);
  v119[1] = v120;
  *(_QWORD *)(v109 + v107) = *(_QWORD *)(v5 - 512);
  v121 = v117;
  v122 = v115;
  *(_QWORD *)(v109 + v108) = *(_QWORD *)(v5 - 392);
  *(_QWORD *)(v5 - 104) = sub_1001AE44C;
  *(_QWORD *)(v5 - 96) = v109;
  *(_QWORD *)(v5 - 136) = _NSConcreteStackBlock;
  *(_QWORD *)(v5 - 128) = 1107296256;
  *(_QWORD *)(v5 - 120) = sub_1001A61B8;
  *(_QWORD *)(v5 - 112) = &unk_10060A6E8;
  v123 = _Block_copy((const void *)(v5 - 136));
  v124 = *(_QWORD *)(v5 - 96);
  swift_bridgeObjectRetain(v111);
  swift_retain(*(_QWORD *)(v5 - 456));
  v125 = *(id *)(v5 - 560);
  swift_retain(v121);
  swift_retain(v113);
  v126 = v114;
  swift_retain(v114);
  v127 = v122;
  v128 = *(_QWORD *)(v5 - 400);
  swift_retain(v127);
  swift_retain(v128);
  swift_retain(v116);
  swift_retain(v118);
  v129 = *(_QWORD *)(v5 - 512);
  swift_bridgeObjectRetain(v129);
  v130 = v125;
  swift_retain(*(_QWORD *)(v5 - 392));
  v131 = *(id *)(v5 - 576);
  sub_10002EF2C(*(_QWORD *)(v5 - 552), *(_QWORD *)(v5 - 544));
  swift_release(v124);
  v132 = *(void **)(v5 - 568);
  objc_msgSend(v132, "MypqGKKWznx4xnYa:l8OCYbP9LFIvnTwG:ygOPXTiKN0J02x0j:", v131, *(_QWORD *)(v5 - 584), v123);
  v133 = v123;
  v134 = v131;
  _Block_release(v133);

  v135 = (uint64_t)v125;
  v136 = *(_QWORD *)(v5 - 632);
  sub_1001AD7F0(v135, *(_DWORD *)(v5 - 72), v129, *(_DWORD *)(v5 - 592));
  if (v136)
  {

    swift_bridgeObjectRelease(v129);
    (*(void (**)(_QWORD, _QWORD))(v5 - 824))(*(_QWORD *)(v5 - 528), *(_QWORD *)(v5 - 536));
    v24 = *(_QWORD *)(v5 - 424);
    v23 = *(_QWORD *)(v5 - 416);
    (*(void (**)(_QWORD, uint64_t))(v24 + 8))(*(_QWORD *)(v5 - 520), v23);
    swift_release(v128);
    swift_release(*(_QWORD *)(v5 - 360));
    v26 = v126;
LABEL_37:
    *(_QWORD *)(v5 - 360) = *(_QWORD *)(v5 - 368);
    v25 = *(_QWORD *)(v5 - 408);
    *(_QWORD *)(v5 - 368) = *(_QWORD *)(v5 - 352);
    v22 = *(_QWORD *)(v5 - 392);
    v3 = *(_QWORD *)(v5 - 456);
    goto LABEL_38;
  }
  v137 = v126;
  v138 = *(_BYTE **)(v5 - 832);
  swift_beginAccess(v138, v5 - 136, 0, 0);
  if ((*v138 & 1) == 0)
  {
    *(_QWORD *)(v5 - 72) = v130;
    v145 = *(_QWORD *)(v5 - 736);
    v146 = defaultLogger()(v139);
    v147 = Logger.logObject.getter(v146);
    v148 = static os_log_type_t.error.getter();
    v149 = os_log_type_enabled(v147, v148);
    v150 = *(_QWORD *)(v5 - 528);
    if (v149)
    {
      v151 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v151 = 0;
      _os_log_impl((void *)&_mh_execute_header, v147, v148, "Timed out waiting for ODN data with semaphoreSignaledByODN = false", v151, 2u);
      swift_slowDealloc(v151, -1, -1);
    }

    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 448) + 8))(v145, *(_QWORD *)(v5 - 376));
    *(_QWORD *)(v5 - 160) = 0;
    *(_QWORD *)(v5 - 152) = 0xE000000000000000;
    _StringGuts.grow(_:)(36);
    v152 = swift_bridgeObjectRelease(*(_QWORD *)(v5 - 152));
    *(_QWORD *)(v5 - 160) = 0xD000000000000022;
    *(_QWORD *)(v5 - 152) = 0x80000001005519F0;
    v153 = *(_QWORD *)(v5 - 728);
    static Date.now.getter(v152);
    v154 = sub_100004790((unint64_t *)&qword_100633310, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    v155 = *(_QWORD *)(v5 - 712);
    v156._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v155, v154);
    object = v156._object;
    String.append(_:)(v156);
    swift_bridgeObjectRelease(object);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 720) + 8))(v153, v155);
    v158 = *(_QWORD *)(v5 - 160);
    v159 = *(_QWORD *)(v5 - 152);
    v160 = *(_QWORD *)(v5 - 472);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v5 - 488) + 104))(v160, enum case for DIPError.Code.odnTimeoutWithPrecompute(_:), *(_QWORD *)(v5 - 480));
    v161 = type metadata accessor for DIPError(0);
    v162 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    swift_allocError(v161, v162, 0, 0);
    v163 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v158, v159, 0, v160, 0, *(_QWORD *)(v5 - 512), 0xD00000000000004ELL, 0x80000001005518E0, 0xD000000000000079, 0x8000000100551C10, 238);
    swift_willThrow(v163);

    (*(void (**)(uint64_t, _QWORD))(v5 - 824))(v150, *(_QWORD *)(v5 - 536));
    v24 = *(_QWORD *)(v5 - 424);
    v23 = *(_QWORD *)(v5 - 416);
    (*(void (**)(_QWORD, uint64_t))(v24 + 8))(*(_QWORD *)(v5 - 520), v23);
    swift_release(*(_QWORD *)(v5 - 400));
    swift_release(*(_QWORD *)(v5 - 360));
    v26 = *(_QWORD *)(v5 - 440);
    goto LABEL_37;
  }
  v140 = *(_BYTE **)(v5 - 840);
  swift_beginAccess(v140, v5 - 160, 1, 0);
  *v140 = 1;
  v141 = *(uint64_t **)(v5 - 744);
  swift_beginAccess(v141, v5 - 184, 0, 0);
  v142 = *v141;
  v143 = *(_QWORD *)(v5 - 528);
  if (v142)
  {
    swift_errorRetain(v142);
    sub_1001AE5E4(v142, v129);
    v144 = swift_bridgeObjectRelease(v129);
    swift_willThrow(v144);

    swift_errorRelease(v142);
    (*(void (**)(uint64_t, _QWORD))(v5 - 824))(v143, *(_QWORD *)(v5 - 536));
    v24 = *(_QWORD *)(v5 - 424);
    v23 = *(_QWORD *)(v5 - 416);
    (*(void (**)(_QWORD, uint64_t))(v24 + 8))(*(_QWORD *)(v5 - 520), v23);
    swift_release(*(_QWORD *)(v5 - 400));
    swift_release(*(_QWORD *)(v5 - 360));
    v26 = v137;
    goto LABEL_37;
  }
  v170 = *(_QWORD *)(v5 - 528);
  *(_QWORD *)(v5 - 72) = v130;
  v24 = *(_QWORD *)(v5 - 424);
  v171 = *(_QWORD *)(v5 - 408);
  v172 = *(_QWORD *)(v5 - 520);
  if ((*(_QWORD *)(v5 - 624) & 1) != 0)
  {
    swift_beginAccess(*(_QWORD *)(v5 - 752), v5 - 328, 0, 0);
    if (*(_QWORD *)(v171 + 24) >> 60 == 15)
    {
      v174 = *(_QWORD *)(v5 - 808);
      v175 = defaultLogger()(v173);
      v176 = Logger.logObject.getter(v175);
      v177 = static os_log_type_t.error.getter();
      v178 = os_log_type_enabled(v176, v177);
      v3 = *(_QWORD *)(v5 - 456);
      if (v178)
      {
        v179 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v179 = 0;
        _os_log_impl((void *)&_mh_execute_header, v176, v177, "ODN no error and no cbor assessments", v179, 2u);
        v180 = v179;
        v24 = *(_QWORD *)(v5 - 424);
        swift_slowDealloc(v180, -1, -1);
      }

      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 448) + 8))(v174, *(_QWORD *)(v5 - 376));
      v181 = *(_QWORD *)(v5 - 472);
      (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v5 - 488) + 104))(v181, enum case for DIPError.Code.odnNoCBORAssessmentData(_:), *(_QWORD *)(v5 - 480));
      v182 = type metadata accessor for DIPError(0);
      v183 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
      swift_allocError(v182, v183, 0, 0);
      v184 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000027, 0x8000000100551D20, 0, v181, 0, *(_QWORD *)(v5 - 512), 0xD00000000000004ELL, 0x80000001005518E0, 0xD000000000000079, 0x8000000100551C10, 249);
LABEL_48:
      swift_willThrow(v184);

      (*(void (**)(uint64_t, _QWORD))(v5 - 824))(v170, *(_QWORD *)(v5 - 536));
      v23 = *(_QWORD *)(v5 - 416);
      (*(void (**)(_QWORD, uint64_t))(v24 + 8))(*(_QWORD *)(v5 - 520), v23);
      swift_release(*(_QWORD *)(v5 - 400));
      swift_release(*(_QWORD *)(v5 - 360));
      v26 = *(_QWORD *)(v5 - 440);
      *(_QWORD *)(v5 - 360) = *(_QWORD *)(v5 - 368);
      v25 = *(_QWORD *)(v5 - 408);
      *(_QWORD *)(v5 - 368) = *(_QWORD *)(v5 - 352);
      v22 = *(_QWORD *)(v5 - 392);
      goto LABEL_38;
    }
  }
  swift_beginAccess(*(_QWORD *)(v5 - 760), v5 - 208, 0, 0);
  v186 = *(_QWORD *)(v5 - 360);
  v187 = *(_QWORD *)(v186 + 24);
  if (v187 >> 60 == 15)
  {
    v188 = *(_QWORD *)(v5 - 776);
    v189 = defaultLogger()(v185);
    v190 = Logger.logObject.getter(v189);
    v191 = static os_log_type_t.error.getter();
    v192 = os_log_type_enabled(v190, v191);
    v3 = *(_QWORD *)(v5 - 456);
    if (v192)
    {
      v193 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v193 = 0;
      _os_log_impl((void *)&_mh_execute_header, v190, v191, "ODN no error and no assessments", v193, 2u);
      v194 = v193;
      v24 = *(_QWORD *)(v5 - 424);
      swift_slowDealloc(v194, -1, -1);
    }

    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 448) + 8))(v188, *(_QWORD *)(v5 - 376));
    v195 = *(_QWORD *)(v5 - 472);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v5 - 488) + 104))(v195, enum case for DIPError.Code.odnNoAssessmentData(_:), *(_QWORD *)(v5 - 480));
    v196 = type metadata accessor for DIPError(0);
    v197 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    swift_allocError(v196, v197, 0, 0);
    v184 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000022, 0x8000000100551CF0, 0, v195, 0, *(_QWORD *)(v5 - 512), 0xD00000000000004ELL, 0x80000001005518E0, 0xD000000000000079, 0x8000000100551C10, 253);
    goto LABEL_48;
  }
  v198 = *(_QWORD *)(v186 + 16);
  *(_QWORD *)(v5 - 376) = v198;
  sub_100022948(v198, v187);

  swift_bridgeObjectRelease(*(_QWORD *)(v5 - 512));
  (*(void (**)(uint64_t, _QWORD))(v5 - 824))(v170, *(_QWORD *)(v5 - 536));
  v199 = *(void (**)(uint64_t, _QWORD))(v24 + 8);
  *(_QWORD *)(v5 - 72) = v199;
  v199(v172, *(_QWORD *)(v5 - 416));
  swift_beginAccess(*(_QWORD *)(v5 - 784), v5 - 232, 0, 0);
  v200 = *(_QWORD *)(v5 - 400);
  v201 = *(_QWORD *)(v200 + 16);
  v202 = *(_QWORD *)(v200 + 24);
  swift_beginAccess(*(_QWORD *)(v5 - 752), v5 - 256, 0, 0);
  v203 = *(_QWORD *)(v171 + 16);
  v204 = *(_QWORD *)(v171 + 24);
  swift_beginAccess(*(_QWORD *)(v5 - 792), v5 - 280, 0, 0);
  v205 = *(_DWORD *)(*(_QWORD *)(v5 - 368) + 16);
  swift_beginAccess(*(_QWORD *)(v5 - 800), v5 - 304, 0, 0);
  v206 = *(_QWORD *)(*(_QWORD *)(v5 - 352) + 16);
  v207 = *(_QWORD *)(v5 - 768);
  *(_QWORD *)(v5 - 480) = *(_QWORD *)v207;
  v208 = *(_QWORD **)(v5 - 384);
  *(_QWORD *)(v5 - 488) = *(_QWORD *)(v207 + 8);
  *(_QWORD *)(v5 - 448) = *(_QWORD *)(v207 + 16);
  *(_QWORD *)(v5 - 472) = *(_QWORD *)(v207 + 24);
  *(_QWORD *)(v5 - 424) = *(_QWORD *)(v207 + 32);
  *(_QWORD *)(v5 - 432) = *(_QWORD *)(v207 + 40);
  *(_QWORD *)v207 = v201;
  *(_QWORD *)(v207 + 8) = v202;
  *(_QWORD *)(v207 + 16) = *(_QWORD *)(v5 - 376);
  *(_QWORD *)(v207 + 24) = v187;
  *(_QWORD *)(v207 + 32) = v203;
  *(_QWORD *)(v207 + 40) = v204;
  *(_DWORD *)(v207 + 48) = v205;
  *(_QWORD *)(v207 + 56) = v206;
  sub_100028034(v201, v202);
  sub_100028034(v203, v204);
  sub_100007F78(*(_QWORD *)(v5 - 480), *(_QWORD *)(v5 - 488));
  sub_100007F8C(*(_QWORD *)(v5 - 448), *(_QWORD *)(v5 - 472));
  sub_100007F78(*(_QWORD *)(v5 - 424), *(_QWORD *)(v5 - 432));
  swift_release(v200);
  swift_release(*(_QWORD *)(v5 - 360));
  swift_release(*(_QWORD *)(v5 - 440));
  swift_release(*(_QWORD *)(v5 - 368));
  swift_release(*(_QWORD *)(v5 - 408));
  swift_release(*(_QWORD *)(v5 - 352));
  swift_release(*(_QWORD *)(v5 - 392));
  swift_release(*(_QWORD *)(v5 - 456));
  v209 = (void *)v208[7];
  v210 = (void *)v208[8];
  v211 = v208[9];
  v212 = v208[10];
  *(_OWORD *)(v208 + 7) = 0u;
  *(_OWORD *)(v208 + 9) = 0u;
  sub_1001AE05C(v209, v210, v211, v212);
  v213 = *(_QWORD *)(v5 - 464);
  DIPSignpost.end(workflowID:isBackground:)((Swift::String_optional)0, (Swift::Bool_optional)2);
  return (*(uint64_t (**)(uint64_t, _QWORD))(v5 - 72))(v213, *(_QWORD *)(v5 - 416));
}

unint64_t sub_1001A8734(uint64_t a1, uint64_t *a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t *a25,uint64_t a26)
{
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  Swift::String_optional v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  NSObject *v48;
  unint64_t result;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  double v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint64_t v62;
  void **v63;
  void *v64;
  void *v65;
  id v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  NSObject *v86;
  os_log_type_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  void (**v104)(char *, uint64_t);
  uint64_t v105;
  uint64_t v106;
  void (**v107)(char *, uint64_t);
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  NSObject *v112;
  os_log_type_t v113;
  _BOOL4 v114;
  uint8_t *v115;
  void **v116;
  uint64_t *v117;
  unint64_t v118;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v121;
  uint64_t v122;
  void (**v123)(char *, uint64_t);
  uint64_t v124;
  Swift::String v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  NSObject *v130;
  os_log_type_t v131;
  uint64_t v132;
  uint8_t *v133;
  void **v134;
  uint64_t *v135;
  unint64_t v136;
  void *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t *v140;
  void (**v141)(char *, uint64_t);
  uint64_t v142;
  Swift::String v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  NSObject *v147;
  os_log_type_t v148;
  uint8_t *v149;
  void **v150;
  unint64_t v151;
  void *v152;
  uint64_t v153;
  uint64_t v154;
  Swift::String v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t *v160;
  uint64_t v161;
  uint64_t *v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t v165;
  unint64_t v166;
  char *v167;
  char *v168;
  char *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t *v179;
  uint64_t v180;
  uint64_t v181;
  void (**v182)(char *, uint64_t);
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  _QWORD v189[3];
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  _BYTE v196[16];
  _QWORD *v197;
  _BYTE v198[24];
  char v199[24];
  uint64_t v200;
  _BYTE v201[16];
  _BYTE v202[24];
  char v203[24];
  void **aBlock;
  uint64_t v205;
  uint64_t (*v206)(uint64_t);
  void *v207;
  uint64_t (*v208)();
  _QWORD *v209;

  v188 = a8;
  LODWORD(v160) = a7;
  v165 = a5;
  v166 = a6;
  v163 = a3;
  v164 = a4;
  v161 = a1;
  v162 = a2;
  v26 = type metadata accessor for DispatchWorkItemFlags(0);
  v177 = *(_QWORD *)(v26 - 8);
  v178 = v26;
  __chkstk_darwin(v26);
  v176 = (char *)&v157 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for DispatchQoS(0);
  v174 = *(_QWORD *)(v28 - 8);
  v175 = v28;
  __chkstk_darwin(v28);
  v173 = (char *)&v157 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v185 = type metadata accessor for Logger(0);
  v182 = *(void (***)(char *, uint64_t))(v185 - 8);
  v30 = __chkstk_darwin(v185);
  v170 = (char *)&v157 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __chkstk_darwin(v30);
  v169 = (char *)&v157 - v33;
  v34 = __chkstk_darwin(v32);
  v168 = (char *)&v157 - v35;
  v36 = __chkstk_darwin(v34);
  v179 = (uint64_t *)((char *)&v157 - v37);
  __chkstk_darwin(v36);
  v167 = (char *)&v157 - v38;
  v39 = type metadata accessor for DispatchTime(0);
  v40 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v42 = (char *)&v157 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43.value._countAndFlagsBits = a10;
  v43.value._object = a11;
  DIPSignpost.end(workflowID:isBackground:)(v43, (Swift::Bool_optional)(a12 == 9));
  v44 = *(void **)(a15 + 32);
  v45 = swift_allocObject(&unk_10060A720, 32, 7);
  *(_QWORD *)(v45 + 16) = sub_1001AEABC;
  *(_QWORD *)(v45 + 24) = a15;
  v208 = sub_1001AEFEC;
  v209 = (_QWORD *)v45;
  aBlock = _NSConcreteStackBlock;
  v205 = 1107296256;
  v206 = sub_100026DC8;
  v207 = &unk_10060A738;
  v46 = _Block_copy(&aBlock);
  v47 = v209;
  v48 = v44;
  swift_retain(a15);
  swift_retain(v45);
  swift_release(v47);
  dispatch_sync(v48, v46);

  _Block_release(v46);
  LOBYTE(v46) = swift_isEscapingClosureAtFileLocation(v45, "", 78, 447, 48, 1);
  v172 = a15;
  swift_release(a15);
  result = swift_release(v45);
  if ((v46 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v50 = static DispatchTime.now()(result);
    v51 = DispatchTime.uptimeNanoseconds.getter(v50);
    v52 = (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v42, v39);
    result = DispatchTime.uptimeNanoseconds.getter(v52);
    if (v51 >= result)
    {
      v53 = a23;
      v187 = a22;
      v181 = a14;
      v180 = a13;
      v184 = a16;
      v54 = (double)(v51 - result) / 1000000000.0;
      swift_beginAccess(a16 + 16, v203, 1, 0);
      *(double *)(a16 + 16) = v54;
      v55 = v188;
      v186 = a21;
      v183 = a20;
      v171 = a19;
      if (v188)
      {
        swift_beginAccess(a18 + 16, v202, 1, 0);
        v56 = *(_QWORD *)(a18 + 16);
        *(_QWORD *)(a18 + 16) = v55;
        swift_errorRetain(v55);
        swift_errorRetain(v55);
        v57 = swift_errorRelease(v56);
        v58 = v179;
        defaultLogger()(v57);
        swift_errorRetain(v55);
        swift_errorRetain(v55);
        swift_errorRetain(v55);
        v59 = swift_errorRetain(v55);
        v60 = Logger.logObject.getter(v59);
        v61 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v60, v61))
        {
          v62 = swift_slowAlloc(22, -1);
          v63 = (void **)swift_slowAlloc(32, -1);
          aBlock = v63;
          *(_DWORD *)v62 = 134349314;
          v64 = (void *)_convertErrorToNSError(_:)(v55);
          v159 = a23;
          v65 = v64;
          v66 = objc_msgSend(v64, "code");

          swift_errorRelease(v188);
          v200 = (uint64_t)v66;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v200, v201, v62 + 4);
          swift_errorRelease(v188);
          *(_WORD *)(v62 + 12) = 2082;
          swift_getErrorValue(v188, &v190, v189);
          v67 = Error.localizedDescription.getter(v189[1], v189[2]);
          v69 = v68;
          v200 = sub_1000E3AC8(v67, v68, (uint64_t *)&aBlock);
          v53 = v159;
          v55 = v188;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v200, v201, v62 + 14);
          swift_bridgeObjectRelease(v69);
          swift_errorRelease(v55);
          swift_errorRelease(v55);
          _os_log_impl((void *)&_mh_execute_header, v60, v61, "error retrieving ODIN data. %{public}ld - %{public}s", (uint8_t *)v62, 0x16u);
          swift_arrayDestroy(v63, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v63, -1, -1);
          swift_slowDealloc(v62, -1, -1);

          swift_errorRelease(v55);
          v182[1]((char *)v179, v185);
        }
        else
        {
          swift_errorRelease(v55);
          swift_errorRelease(v55);
          swift_errorRelease(v55);
          swift_errorRelease(v55);
          swift_errorRelease(v55);

          v182[1]((char *)v58, v185);
        }
        if (!v53)
          goto LABEL_11;
      }
      else
      {
        v159 = a23;
        v70 = v187;
        v158 = a19 + 16;
        swift_beginAccess(a19 + 16, v202, 1, 0);
        *(_DWORD *)(a19 + 16) = (_DWORD)v160;
        v160 = (uint64_t *)(a20 + 16);
        swift_beginAccess(a20 + 16, &v200, 1, 0);
        v71 = *(_QWORD *)(a20 + 16);
        v72 = *(_QWORD *)(a20 + 24);
        v73 = v161;
        v74 = (unint64_t)v162;
        *(_QWORD *)(a20 + 16) = v161;
        *(_QWORD *)(a20 + 24) = v74;
        sub_100028034(v73, v74);
        sub_100007F78(v71, v72);
        v162 = (uint64_t *)(a21 + 16);
        swift_beginAccess(a21 + 16, v199, 1, 0);
        v75 = *(_QWORD *)(a21 + 16);
        v76 = *(_QWORD *)(a21 + 24);
        v77 = v163;
        v78 = v164;
        *(_QWORD *)(a21 + 16) = v163;
        *(_QWORD *)(a21 + 24) = v78;
        sub_100028034(v77, v78);
        sub_100007F78(v75, v76);
        v179 = (uint64_t *)(v70 + 16);
        swift_beginAccess(v70 + 16, v198, 1, 0);
        v79 = *(_QWORD *)(v70 + 16);
        v80 = *(_QWORD *)(v70 + 24);
        v81 = v165;
        v82 = v166;
        *(_QWORD *)(v70 + 16) = v165;
        *(_QWORD *)(v70 + 24) = v82;
        sub_100028034(v81, v82);
        v83 = sub_100007F78(v79, v80);
        v84 = v167;
        defaultLogger()(v83);
        swift_retain(a19);
        swift_retain(v184);
        sub_100022E8C();
        v85 = sub_100022E8C();
        v86 = Logger.logObject.getter(v85);
        v87 = static os_log_type_t.debug.getter(v86);
        if (os_log_type_enabled(v86, v87))
        {
          v88 = swift_slowAlloc(24, -1);
          *(_DWORD *)v88 = 67109632;
          swift_beginAccess(v158, &v192, 0, 0);
          LODWORD(aBlock) = *(_DWORD *)(a19 + 16);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 4, v88 + 4);
          swift_release(a19);
          *(_WORD *)(v88 + 8) = 1040;
          LODWORD(aBlock) = 3;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 4, v88 + 10);
          *(_WORD *)(v88 + 14) = 2048;
          swift_beginAccess(a16 + 16, &v191, 0, 0);
          v89 = v184;
          aBlock = *(void ***)(v184 + 16);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v205, v88 + 16);
          swift_release(v89);
          _os_log_impl((void *)&_mh_execute_header, v86, v87, " ODIN returned index %u, after %.*f seconds", (uint8_t *)v88, 0x18u);
          swift_slowDealloc(v88, -1, -1);

        }
        else
        {

          swift_release(v184);
          swift_release(a19);
        }
        v106 = v185;
        v107 = (void (**)(char *, uint64_t))v182[1];
        v108 = ((uint64_t (*)(char *, uint64_t))v107)(v84, v185);
        v109 = v168;
        defaultLogger()(v108);
        v110 = v183;
        v111 = swift_retain_n(v183, 2);
        v112 = Logger.logObject.getter(v111);
        v113 = static os_log_type_t.debug.getter(v112);
        v114 = os_log_type_enabled(v112, v113);
        v55 = v188;
        v182 = v107;
        if (v114)
        {
          v115 = (uint8_t *)swift_slowAlloc(12, -1);
          v116 = (void **)swift_slowAlloc(32, -1);
          aBlock = v116;
          *(_DWORD *)v115 = 136315138;
          v117 = v160;
          swift_beginAccess(v160, &v193, 0, 0);
          v118 = *(_QWORD *)(v110 + 24);
          if (v118 >> 60 == 15)
          {
            object = (void *)0xE300000000000000;
            countAndFlagsBits = 7104878;
          }
          else
          {
            v124 = *v117;
            sub_100022948(*v117, *(_QWORD *)(v110 + 24));
            v125 = Data.base16EncodedString()();
            countAndFlagsBits = v125._countAndFlagsBits;
            object = v125._object;
            v126 = v124;
            v109 = v168;
            v55 = v188;
            sub_100007F78(v126, v118);
          }
          v195 = sub_1000E3AC8(countAndFlagsBits, (unint64_t)object, (uint64_t *)&aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v195, v196, v115 + 4);
          swift_release_n(v183, 2);
          swift_bridgeObjectRelease(object);
          _os_log_impl((void *)&_mh_execute_header, v112, v113, " tdata   %s", v115, 0xCu);
          swift_arrayDestroy(v116, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v116, -1, -1);
          swift_slowDealloc(v115, -1, -1);

          v127 = v109;
          v106 = v185;
          v123 = v182;
          v121 = ((uint64_t (*)(char *, uint64_t))v182)(v127, v185);
          v122 = v186;
        }
        else
        {

          swift_release_n(v110, 2);
          v121 = ((uint64_t (*)(char *, uint64_t))v107)(v109, v106);
          v122 = v186;
          v123 = v107;
        }
        v128 = v169;
        defaultLogger()(v121);
        v129 = swift_retain_n(v122, 2);
        v130 = Logger.logObject.getter(v129);
        v131 = static os_log_type_t.debug.getter(v130);
        if (os_log_type_enabled(v130, v131))
        {
          v132 = v122;
          v133 = (uint8_t *)swift_slowAlloc(12, -1);
          v134 = (void **)swift_slowAlloc(32, -1);
          aBlock = v134;
          *(_DWORD *)v133 = 136315138;
          v135 = v162;
          swift_beginAccess(v162, &v194, 0, 0);
          v136 = *(_QWORD *)(v132 + 24);
          if (v136 >> 60 == 15)
          {
            v137 = (void *)0xE300000000000000;
            v138 = 7104878;
          }
          else
          {
            v141 = v123;
            v142 = *v135;
            sub_100022948(*v135, *(_QWORD *)(v132 + 24));
            v143 = Data.base16EncodedString()();
            v138 = v143._countAndFlagsBits;
            v137 = v143._object;
            v144 = v142;
            v123 = v141;
            v55 = v188;
            sub_100007F78(v144, v136);
          }
          v195 = sub_1000E3AC8(v138, (unint64_t)v137, (uint64_t *)&aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v195, v196, v133 + 4);
          swift_release_n(v186, 2);
          swift_bridgeObjectRelease(v137);
          _os_log_impl((void *)&_mh_execute_header, v130, v131, " assessment %s", v133, 0xCu);
          swift_arrayDestroy(v134, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v134, -1, -1);
          swift_slowDealloc(v133, -1, -1);

          v106 = v185;
          v139 = ((uint64_t (*)(char *, uint64_t))v123)(v169, v185);
          v140 = v179;
        }
        else
        {

          swift_release_n(v122, 2);
          v139 = ((uint64_t (*)(char *, uint64_t))v123)(v128, v106);
          v140 = v179;
        }
        v145 = v170;
        defaultLogger()(v139);
        v146 = swift_retain_n(v187, 2);
        v147 = Logger.logObject.getter(v146);
        v148 = static os_log_type_t.debug.getter(v147);
        if (os_log_type_enabled(v147, v148))
        {
          v149 = (uint8_t *)swift_slowAlloc(12, -1);
          v150 = (void **)swift_slowAlloc(32, -1);
          aBlock = v150;
          *(_DWORD *)v149 = 136315138;
          swift_beginAccess(v140, &v195, 0, 0);
          v151 = *(_QWORD *)(v187 + 24);
          if (v151 >> 60 == 15)
          {
            v152 = (void *)0xE300000000000000;
            v153 = 7104878;
          }
          else
          {
            v154 = *v140;
            sub_100022948(*v140, *(_QWORD *)(v187 + 24));
            v155 = Data.base16EncodedString()();
            v153 = v155._countAndFlagsBits;
            v152 = v155._object;
            v156 = v154;
            v106 = v185;
            sub_100007F78(v156, v151);
          }
          v197 = (_QWORD *)sub_1000E3AC8(v153, (unint64_t)v152, (uint64_t *)&aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v197, v198, v149 + 4);
          swift_release_n(v187, 2);
          swift_bridgeObjectRelease(v152);
          _os_log_impl((void *)&_mh_execute_header, v147, v148, " cdata   %s", v149, 0xCu);
          swift_arrayDestroy(v150, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v150, -1, -1);
          swift_slowDealloc(v149, -1, -1);

          ((void (*)(char *, uint64_t))v182)(v170, v106);
        }
        else
        {

          swift_release_n(v187, 2);
          ((void (*)(char *, uint64_t))v123)(v145, v106);
        }
        v53 = v159;
        if (!v159)
          goto LABEL_11;
      }
      v179 = a25;
      v90 = v172;
      v185 = *(_QWORD *)(v172 + 16);
      v91 = (_QWORD *)swift_allocObject(&unk_10060A770, 104, 7);
      v92 = v183;
      v93 = v184;
      v91[2] = v186;
      v91[3] = v92;
      v94 = v171;
      v91[4] = v187;
      v91[5] = v94;
      v91[6] = v93;
      v91[7] = v55;
      v91[8] = v90;
      v91[9] = a25;
      v91[10] = v53;
      v91[11] = a24;
      v91[12] = a26;
      v208 = sub_1001AEB40;
      v209 = v91;
      aBlock = _NSConcreteStackBlock;
      v205 = 1107296256;
      v206 = sub_1004AB190;
      v207 = &unk_10060A788;
      v182 = (void (**)(char *, uint64_t))_Block_copy(&aBlock);
      sub_10002EF2C(v53, a24);
      swift_retain(v90);
      swift_retain(v94);
      swift_retain(v93);
      swift_errorRetain(v55);
      swift_retain(v92);
      swift_retain(v186);
      swift_retain(v187);
      sub_10002EF2C(v53, a24);
      swift_bridgeObjectRetain(v179);
      v95 = swift_retain(a26);
      v96 = v53;
      v97 = v173;
      static DispatchQoS.unspecified.getter(v95);
      v197 = _swiftEmptyArrayStorage;
      v98 = sub_100004790((unint64_t *)&unk_100632380, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v99 = sub_100004828((uint64_t *)&unk_1006308D0);
      v100 = sub_100025D68(&qword_100632390, (uint64_t *)&unk_1006308D0);
      v101 = v176;
      v102 = v99;
      v103 = v178;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v197, v102, v100, v178, v98);
      v104 = v182;
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v97, v101, v182);
      _Block_release(v104);
      sub_10002F034(v96, a24);
      (*(void (**)(char *, uint64_t))(v177 + 8))(v101, v103);
      (*(void (**)(char *, uint64_t))(v174 + 8))(v97, v175);
      swift_release(v209);
LABEL_11:
      v105 = v180;
      swift_beginAccess(v180 + 16, &aBlock, 1, 0);
      *(_BYTE *)(v105 + 16) = 1;
      return OS_dispatch_semaphore.signal()();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1001A9688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(_QWORD *, _QWORD, uint64_t, __n128), uint64_t a10, uint64_t a11)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t *v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint8_t *v26;
  uint64_t *v27;
  uint64_t v28;
  unsigned int *v29;
  uint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  Swift::String v43;
  Swift::String v44;
  unint64_t v45;
  uint64_t v46;
  unsigned int v47;
  uint64_t *v48;
  uint64_t v49;
  Swift::String v50;
  Swift::String v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v60[2];
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE v66[24];
  _BYTE v67[24];
  _BYTE v68[24];
  char v69[24];
  _BYTE v70[24];
  char v71[24];
  _QWORD v72[8];

  v60[0] = a8;
  v64 = a6;
  v65 = a5;
  v15 = type metadata accessor for Logger(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (uint64_t *)(a1 + 16);
  v62 = a2;
  v61 = a2 + 16;
  v21 = defaultLogger()(v17);
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.debug.getter(v22);
  if (os_log_type_enabled(v22, v23))
  {
    v24 = a1;
    v25 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v25 = 0;
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "Preparing to call odn completion function", v25, 2u);
    v26 = v25;
    a1 = v24;
    swift_slowDealloc(v26, -1, -1);
  }
  v63 = a11;
  v60[1] = a10;
  v27 = (uint64_t *)(a3 + 16);
  v28 = a3;
  v29 = (unsigned int *)(a4 + 16);
  v30 = (uint64_t *)(v65 + 16);

  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  swift_beginAccess(v20, v71, 0, 0);
  v31 = *(_QWORD *)(a1 + 24);
  if (v31 >> 60 == 15)
  {
    swift_beginAccess(v27, v70, 0, 0);
    v32 = *(_QWORD *)(v28 + 24);
    if (v32 >> 60 == 15)
    {
      v65 = 0;
      v33 = 0;
      v34 = 0;
      v35 = 0;
      v32 = 0;
      v36 = 0;
      v37 = 0;
      v31 = 0xF000000000000000;
    }
    else
    {
      v35 = *v27;
      swift_beginAccess(v61, v68, 0, 0);
      v46 = *(_QWORD *)(v62 + 16);
      v45 = *(_QWORD *)(v62 + 24);
      swift_beginAccess(v29, v67, 0, 0);
      v47 = *v29;
      v48 = v30;
      v33 = v45;
      swift_beginAccess(v48, v66, 0, 0);
      v37 = *v48;
      sub_100028034(v35, v32);
      sub_100028034(v35, v32);
      v65 = v46;
      v49 = v46;
      v36 = v47;
      sub_100028034(v49, v45);
      v50._countAndFlagsBits = 0xD000000000000016;
      v50._object = (void *)0x8000000100551D90;
      v51._countAndFlagsBits = 0x3632636634373131;
      v51._object = (void *)0xE800000000000000;
      logMilestone(tag:description:)(v51, v50);
      sub_100007F78(v35, v32);
      v34 = 0;
      v31 = 0xC000000000000000;
    }
  }
  else
  {
    v34 = *v20;
    swift_beginAccess(v61, v70, 0, 0);
    v38 = *(_QWORD *)(v62 + 24);
    v39 = v27;
    v40 = *(_QWORD *)(v62 + 16);
    swift_beginAccess(v39, v68, 0, 0);
    v41 = *(_QWORD *)(v28 + 16);
    v32 = *(_QWORD *)(v28 + 24);
    swift_beginAccess(v29, v67, 0, 0);
    v36 = *v29;
    swift_beginAccess(v30, v66, 0, 0);
    v37 = *v30;
    v33 = v38;
    sub_100028034(v34, v31);
    sub_100028034(v34, v31);
    v65 = v40;
    v42 = v40;
    v35 = v41;
    sub_100028034(v42, v38);
    sub_100028034(v41, v32);
    v43._object = (void *)0x8000000100551DB0;
    v44._countAndFlagsBits = 0x3962363931376166;
    v44._object = (void *)0xE800000000000000;
    v43._countAndFlagsBits = 0xD000000000000011;
    logMilestone(tag:description:)(v44, v43);
    sub_100007F78(v34, v31);
  }
  v72[0] = v65;
  v72[1] = v33;
  v72[2] = v34;
  v72[3] = v31;
  v72[4] = v35;
  v72[5] = v32;
  v72[6] = v36;
  v72[7] = v37;
  v52 = v64;
  v62 = v37;
  v61 = v32;
  v53 = v35;
  v54 = v33;
  v55 = v65;
  if (v64)
  {
    swift_errorRetain(v64);
    v56 = sub_1001AE5E4(v52, v60[0]);
    swift_errorRelease(v52);
  }
  else
  {
    v56 = 0;
  }
  v57 = v63;
  v58 = swift_beginAccess(v63 + 16, v69, 0, 0);
  a9(v72, *(unsigned __int8 *)(v57 + 16), v56, v58);
  sub_1001AEB7C(v55, v54, v34, v31, v53, v61);
  return swift_errorRelease(v56);
}

uint64_t sub_1001A9B1C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];
  uint64_t v22;
  _QWORD *v23;
  _QWORD aBlock[5];
  uint64_t v25;

  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v22 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[1] = *(_QWORD *)(v3 + 16);
  v14 = swift_allocObject(&unk_10060A4F0, 40, 7);
  *(_BYTE *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  *(_QWORD *)(v14 + 32) = a3;
  aBlock[4] = sub_1001AE110;
  v25 = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1004AB190;
  aBlock[3] = &unk_10060A508;
  v15 = _Block_copy(aBlock);
  v16 = swift_retain(a3);
  static DispatchQoS.unspecified.getter(v16);
  v23 = _swiftEmptyArrayStorage;
  v17 = sub_100004790((unint64_t *)&unk_100632380, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v18 = sub_100004828((uint64_t *)&unk_1006308D0);
  v19 = sub_100025D68(&qword_100632390, (uint64_t *)&unk_1006308D0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v23, v18, v19, v7, v17);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release(v25);
}

void sub_1001A9D14(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  id v17;
  uint64_t v18;
  Class isa;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  _QWORD aBlock[5];
  uint64_t v24;

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = &_swiftEmptyDictionarySingleton;
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    aBlock[0] = &_swiftEmptyDictionarySingleton;
    sub_100481050(49, 0xE100000000000000, 7105633, 0xE300000000000000, isUniquelyReferenced_nonNull_native);
    v11 = (_QWORD *)aBlock[0];
    v8 = swift_bridgeObjectRelease(0x8000000000000000);
  }
  v13 = defaultLogger()(v8);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.debug.getter(v14);
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Starting to clean ODN cache", v16, 2u);
    swift_slowDealloc(v16, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  v17 = objc_msgSend(objc_allocWithZone((Class)OZRXp7MLSzffIeLD), "init");
  v18 = sub_10044BB60((uint64_t)v11);
  swift_bridgeObjectRelease(v11);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v18);
  v20 = swift_allocObject(&unk_10060A540, 32, 7);
  *(_QWORD *)(v20 + 16) = a2;
  *(_QWORD *)(v20 + 24) = a3;
  aBlock[4] = sub_1001AE140;
  v24 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001AA374;
  aBlock[3] = &unk_10060A558;
  v21 = _Block_copy(aBlock);
  v22 = v24;
  swift_retain(a3);
  swift_release(v22);
  objc_msgSend(v17, "t5yVezCKaX2Zrwrw:uXxcS3vcKdsH38zZ:", isa, v21);
  _Block_release(v21);

}

uint64_t sub_1001A9F5C(int a1, unint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  void (*v40)(char *, uint64_t);
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(_QWORD);
  uint64_t v47;
  _QWORD v48[3];
  char v49[8];
  uint64_t v50;
  uint64_t v51;

  v10 = type metadata accessor for Logger(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v42 - v16;
  if (a3)
  {
    v18 = swift_errorRetain(a3);
    defaultLogger()(v18);
    swift_errorRetain(a3);
    v19 = swift_errorRetain(a3);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.debug.getter(v20);
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc(12, -1);
      v46 = a4;
      v23 = (uint8_t *)v22;
      v24 = swift_slowAlloc(32, -1);
      v47 = v11;
      v25 = v24;
      v51 = v24;
      *(_DWORD *)v23 = 136446210;
      v45 = v10;
      swift_getErrorValue(a3, v49, v48);
      v26 = Error.localizedDescription.getter(v48[1], v48[2]);
      v28 = v27;
      v50 = sub_1000E3AC8(v26, v27, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51, v23 + 4);
      swift_bridgeObjectRelease(v28);
      swift_errorRelease(a3);
      swift_errorRelease(a3);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Error cleaning ODN cache: = %{public}s", v23, 0xCu);
      swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1, -1);
      v29 = v23;
      a4 = v46;
      swift_slowDealloc(v29, -1, -1);

      swift_errorRelease(a3);
      (*(void (**)(char *, uint64_t))(v47 + 8))(v14, v45);
      return a4(a3);
    }
    swift_errorRelease(a3);
    swift_errorRelease(a3);
    swift_errorRelease(a3);

    v40 = *(void (**)(char *, uint64_t))(v11 + 8);
    v41 = v14;
LABEL_10:
    v40(v41, v10);
    return a4(a3);
  }
  v47 = v11;
  defaultLogger()(v15);
  v30 = swift_bridgeObjectRetain_n(a2, 2);
  v31 = Logger.logObject.getter(v30);
  v32 = static os_log_type_t.debug.getter(v31);
  if (!os_log_type_enabled(v31, v32))
  {

    swift_bridgeObjectRelease_n(a2, 2);
    v40 = *(void (**)(char *, uint64_t))(v47 + 8);
    v41 = v17;
    goto LABEL_10;
  }
  v45 = a5;
  v46 = a4;
  v33 = swift_slowAlloc(18, -1);
  v44 = swift_slowAlloc(32, -1);
  v51 = v44;
  *(_DWORD *)v33 = 67240450;
  LODWORD(v50) = a1;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, (char *)&v50 + 4, v33 + 4);
  *(_WORD *)(v33 + 8) = 2080;
  v34 = a2;
  if (!a2)
    v34 = sub_10011ED38((uint64_t)_swiftEmptyArrayStorage);
  v42 = v33 + 10;
  swift_bridgeObjectRetain(a2);
  v43 = (char *)&type metadata for Any + 8;
  v35 = Dictionary.description.getter(v34, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
  v37 = v36;
  swift_bridgeObjectRelease(v34);
  v50 = sub_1000E3AC8(v35, v37, &v51);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51, v42);
  swift_bridgeObjectRelease_n(a2, 2);
  swift_bridgeObjectRelease(v37);
  _os_log_impl((void *)&_mh_execute_header, v31, v32, "Successfully finished cleaning ODN cache. Records purged = %{public}u, metadata = %s", (uint8_t *)v33, 0x12u);
  v38 = v44;
  swift_arrayDestroy(v44, 1, v43);
  swift_slowDealloc(v38, -1, -1);
  swift_slowDealloc(v33, -1, -1);

  (*(void (**)(char *, uint64_t))(v47 + 8))(v17, v10);
  return v46(0);
}

uint64_t sub_1001AA374(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, void *);
  uint64_t v8;
  id v9;

  v7 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  if (a3)
    v8 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(a3, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
  else
    v8 = 0;
  swift_retain(v6);
  v9 = a4;
  v7(a2, v8, a4);
  swift_release(v6);

  return swift_bridgeObjectRelease(v8);
}

uint64_t sub_1001AA410(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v5 = sub_100004828(&qword_10062FF10);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = (v8 + 16) & ~v8;
  v10 = swift_allocObject(&unk_10060A450, v9 + v7, v8 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v10 + v9, (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  sub_1001A9B1C(a3, (uint64_t)sub_1001A0E6C, v10);
  return swift_release(v10);
}

uint64_t sub_1001AA4F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _QWORD *v16;
  _QWORD aBlock[5];
  uint64_t v18;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(v0 + 16);
  aBlock[4] = sub_1001AE03C;
  v18 = v0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1004AB190;
  aBlock[3] = &unk_10060A468;
  v9 = _Block_copy(aBlock);
  v10 = swift_retain(v0);
  static DispatchQoS.unspecified.getter(v10);
  v16 = _swiftEmptyArrayStorage;
  v11 = sub_100004790((unint64_t *)&unk_100632380, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v12 = sub_100004828((uint64_t *)&unk_1006308D0);
  v13 = sub_100025D68(&qword_100632390, (uint64_t *)&unk_1006308D0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v16, v12, v13, v1, v11);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v9);
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_release(v18);
}

void sub_1001AA6C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  void *v34;
  id v35;
  NSObject *v36;
  void *v37;
  uint64_t v38;
  NSObject *v39;
  NSObject *v40;
  NSObject *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  NSObject **v49;
  NSObject *v50;
  uint64_t v51;
  NSObject *v52;
  NSObject *v53;
  unsigned __int8 v54;
  id v55;
  NSObject *v56;
  NSObject *v57;
  NSObject *v58;
  id v59;
  uint64_t v60;
  NSObject *v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  NSObject *v68;
  uint64_t v69;
  os_log_type_t v70;
  uint8_t *v71;
  NSObject *v72;
  void (*v73)(char *, uint64_t);
  uint64_t v74;
  uint64_t v75;
  NSObject *v76;
  os_log_type_t v77;
  uint8_t *v78;
  uint8_t *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  NSObject *v83;
  os_log_type_t v84;
  uint8_t *v85;
  NSObject *v86;
  uint64_t v87;
  NSObject *v88;
  os_log_type_t v89;
  uint8_t *v90;
  id v91;
  void (*v92)(char *, uint64_t);
  void *v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  void (*v108)(char *, uint64_t);
  char *v109;
  uint64_t v110;
  uint64_t v111;
  id v112;
  NSObject *v113;
  uint64_t v114;

  v110 = a1;
  v1 = type metadata accessor for TimeoutError(0);
  v99 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v108 = (_QWORD *)type metadata accessor for DIPError(0);
  v101 = *(v108 - 1);
  __chkstk_darwin((void (*)(char *, uint64_t))v108);
  v100 = (char *)&v97 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for DIPError.Code(0);
  v104 = *(_QWORD *)(v3 - 8);
  v105 = v3;
  __chkstk_darwin(v3);
  v106 = (char *)&v97 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v111 - 8);
  v6 = __chkstk_darwin(v111);
  v103 = (char *)&v97 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v107 = (char *)&v97 - v9;
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v97 - v11;
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v97 - v14;
  v16 = __chkstk_darwin(v13);
  v109 = (char *)&v97 - v17;
  v18 = __chkstk_darwin(v16);
  v102 = (char *)&v97 - v19;
  v20 = __chkstk_darwin(v18);
  v98 = (char *)&v97 - v21;
  v22 = __chkstk_darwin(v20);
  v24 = (char *)&v97 - v23;
  v25 = __chkstk_darwin(v22);
  v27 = (char *)&v97 - v26;
  v28 = defaultLogger()(v25);
  v29 = Logger.logObject.getter(v28);
  v30 = static os_log_type_t.debug.getter(v29);
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v31 = 0;
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "START getting NF data", v31, 2u);
    swift_slowDealloc(v31, -1, -1);
  }

  v32 = *(void (**)(char *, uint64_t))(v5 + 8);
  v33 = v111;
  v32(v27, v111);
  v34 = (void *)objc_opt_self(NFSecureElement);
  v113 = 0;
  v35 = objc_msgSend(v34, "embeddedSecureElementWithError:", &v113);
  v36 = v113;
  if (!v35)
  {
    v108 = v32;
    v41 = v113;
    v42 = _convertNSErrorToError(_:)(v36);

    v44 = swift_willThrow(v43);
    defaultLogger()(v44);
    swift_errorRetain(v42);
    v45 = swift_errorRetain(v42);
    v46 = Logger.logObject.getter(v45);
    v47 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc(12, -1);
      v49 = (NSObject **)swift_slowAlloc(8, -1);
      *(_DWORD *)v48 = 138412290;
      swift_errorRetain(v42);
      v50 = _swift_stdlib_bridgeErrorToNSError(v42);
      v113 = v50;
      v33 = v111;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v113, &v114, v48 + 4);
      *v49 = v50;
      swift_errorRelease(v42);
      swift_errorRelease(v42);
      _os_log_impl((void *)&_mh_execute_header, v46, v47, "No Embedded SE with error: %@", v48, 0xCu);
      v51 = sub_100004828(&qword_1006308B0);
      swift_arrayDestroy(v49, 1, v51);
      swift_slowDealloc(v49, -1, -1);
      swift_slowDealloc(v48, -1, -1);

      swift_errorRelease(v42);
    }
    else
    {
      swift_errorRelease(v42);
      swift_errorRelease(v42);
      swift_errorRelease(v42);

    }
    v60 = v110;
    v73 = (void (*)(char *, uint64_t))v108;
    v74 = ((uint64_t (*)(char *, uint64_t))v108)(v12, v33);
    goto LABEL_26;
  }
  v37 = v35;
  v38 = sub_10001CFF8(0, &qword_1006375F0, NFSecureElementManagerSession_ptr);
  v39 = v36;
  v40 = v37;
  runAsyncAndBlock<A>(timeout:file:function:line:_:)(0x4000000000000000, 0, 0xD00000000000001BLL, 0x8000000100551AD0, 0x657250636E797361, 0xEE0029286D726157, 371, &unk_1006375E8, 0, v38);
  v52 = v40;
  v108 = v32;
  v53 = v113;
  v113 = 0;
  v112 = 0;
  v54 = -[NSObject getCryptogram:challengeResponse:](v53, "getCryptogram:challengeResponse:", &v113, &v112);
  v55 = v112;
  v56 = v113;
  v57 = v112;
  v58 = v56;
  v59 = -[NSObject endSession](v53, "endSession");
  if ((v54 & 1) == 0)
  {
    v75 = defaultLogger()(v59);
    v76 = Logger.logObject.getter(v75);
    v77 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v76, v77))
    {
      v78 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v78 = 0;
      _os_log_impl((void *)&_mh_execute_header, v76, v77, " error getting NF challenge / cryptogram, resetting everything", v78, 2u);
      v79 = v78;
      v33 = v111;
      swift_slowDealloc(v79, -1, -1);
    }

    ((void (*)(char *, uint64_t))v108)(v24, v33);
    v55 = 0;
    v56 = 0;
    v60 = v110;
    goto LABEL_18;
  }
  if (!v58)
  {
    v56 = 0;
    v58 = v52;
    v60 = v110;
    goto LABEL_21;
  }
  v60 = v110;
  if (!v57)
  {
    v55 = 0;
    v58 = v52;
    goto LABEL_21;
  }
  v61 = v58;
  v58 = v57;
  v62 = -[NSObject serialNumber](v52, "serialNumber");

  if (!v62)
  {
    v57 = v61;
    v33 = v111;
LABEL_18:

LABEL_21:
    v80 = v102;
    v82 = defaultLogger()(v81);
    v83 = Logger.logObject.getter(v82);
    v84 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v83, v84))
    {
      v85 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v85 = 0;
      _os_log_impl((void *)&_mh_execute_header, v83, v84, "No NF data available", v85, 2u);
      swift_slowDealloc(v85, -1, -1);
      v86 = v53;
    }
    else
    {
      v86 = v83;
      v83 = v53;
    }
    v73 = (void (*)(char *, uint64_t))v108;

    v73(v80, v33);
    goto LABEL_25;
  }
  v63 = static String._unconditionallyBridgeFromObjectiveC(_:)(v62);
  v65 = v64;

  v67 = defaultLogger()(v66);
  v68 = Logger.logObject.getter(v67);
  v70 = static os_log_type_t.info.getter(v68, v69);
  if (os_log_type_enabled(v68, v70))
  {
    v71 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v71 = 0;
    _os_log_impl((void *)&_mh_execute_header, v68, v70, "Retrieved NF seid and challenge/response", v71, 2u);
    swift_slowDealloc(v71, -1, -1);
    v72 = v53;
  }
  else
  {
    v72 = v68;
    v68 = v53;
  }

  v33 = v111;
  v92 = v108;
  ((void (*)(char *, uint64_t))v108)(v98, v111);
  v93 = *(void **)(v60 + 56);
  v94 = *(void **)(v60 + 64);
  v95 = *(_QWORD *)(v60 + 72);
  v96 = *(_QWORD *)(v60 + 80);
  *(_QWORD *)(v60 + 56) = v56;
  *(_QWORD *)(v60 + 64) = v55;
  *(_QWORD *)(v60 + 72) = v63;
  *(_QWORD *)(v60 + 80) = v65;
  v73 = (void (*)(char *, uint64_t))v92;
  sub_1001AE05C(v93, v94, v95, v96);
LABEL_25:

  v15 = v109;
LABEL_26:
  v87 = defaultLogger()(v74);
  v88 = Logger.logObject.getter(v87);
  v89 = static os_log_type_t.debug.getter(v88);
  if (os_log_type_enabled(v88, v89))
  {
    v90 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v90 = 0;
    _os_log_impl((void *)&_mh_execute_header, v88, v89, "END getting NF data", v90, 2u);
    swift_slowDealloc(v90, -1, -1);
  }

  v73(v15, v33);
  v91 = *(id *)(v60 + 24);
  OS_dispatch_semaphore.signal()();

}

uint64_t sub_1001AB3D8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v1 + 16) = v3;
  v4 = sub_10001CFF8(0, &qword_1006375F0, NFSecureElementManagerSession_ptr);
  *v3 = v1;
  v3[1] = sub_100007EE8;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(a1, 0, 0, 0x657250636E797361, 0xEE0029286D726157, sub_1001AB47C, 0, v4);
}

void sub_1001AB47C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  _QWORD aBlock[5];
  uint64_t v13;

  v2 = sub_100004828(&qword_1006375F8);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v5 = objc_msgSend((id)objc_opt_self(NFHardwareManager), "sharedHardwareManager");
  if (v5)
  {
    v6 = v5;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
    v7 = *(unsigned __int8 *)(v3 + 80);
    v8 = (v7 + 16) & ~v7;
    v9 = swift_allocObject(&unk_10060A4A0, v8 + v4, v7 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v9 + v8, (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
    aBlock[4] = sub_1001AE09C;
    v13 = v9;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10011C518;
    aBlock[3] = &unk_10060A4B8;
    v10 = _Block_copy(aBlock);
    swift_release(v13);
    v11 = objc_msgSend(v6, "startSecureElementManagerSessionWithPriority:", v10);
    _Block_release(v10);
    swift_unknownObjectRelease(v11);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1001AB5EC(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = type metadata accessor for DIPError.Code(0);
  __chkstk_darwin(v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v17 = a2;
    swift_errorRetain(a2);
LABEL_3:
    v8 = sub_100004828(&qword_1006375F8);
    return CheckedContinuation.resume(throwing:)(&v17, v8);
  }
  if (!a1)
  {
    (*(void (**)(char *, _QWORD))(v5 + 104))(v7, enum case for DIPError.Code.nearfieldInconsistentCallbackError(_:));
    v12 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v13 = type metadata accessor for DIPError(0);
    v14 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    v15 = swift_allocError(v13, v14, 0, 0);
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000002CLL, 0x8000000100551B80, 0, v7, 0, v12, 0xD00000000000004ELL, 0x80000001005518E0, 0x657250636E797361, 0xEE0029286D726157, 379);
    v17 = v15;
    goto LABEL_3;
  }
  v17 = (uint64_t)a1;
  v10 = a1;
  v11 = sub_100004828(&qword_1006375F8);
  return CheckedContinuation.resume(returning:)(&v17, v11);
}

uint64_t sub_1001AB79C(uint64_t a1, uint64_t a2, unint64_t a3, int a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v36 - v14;
  v16 = *(_QWORD *)(a1 + 48);
  if (v16)
  {
    v17 = *(_QWORD *)(a1 + 40);
    swift_bridgeObjectRetain(v16);
    defaultLogger()(v18);
    swift_bridgeObjectRetain_n(a3, 2);
    v19 = swift_bridgeObjectRetain_n(v16, 2);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.debug.getter(v20);
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc(22, -1);
      v39 = v9;
      v23 = v22;
      v24 = swift_slowAlloc(64, -1);
      v38 = a2;
      v36 = v24;
      v41 = v24;
      *(_DWORD *)v23 = 136446466;
      v37 = a4;
      swift_bridgeObjectRetain(a3);
      v40 = sub_1000E3AC8(v38, a3, &v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41, v23 + 4);
      swift_bridgeObjectRelease_n(a3, 3);
      *(_WORD *)(v23 + 12) = 2082;
      swift_bridgeObjectRetain(v16);
      v40 = sub_1000E3AC8(v17, v16, &v41);
      LOBYTE(a4) = v37;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41, v23 + 14);
      swift_bridgeObjectRelease_n(v16, 3);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "ODN asked to compute assessment for %{public}s but assessment computation for %{public}s is already in progress!", (uint8_t *)v23, 0x16u);
      v25 = v36;
      swift_arrayDestroy(v36, 2, (char *)&type metadata for Any + 8);
      v26 = v25;
      a2 = v38;
      swift_slowDealloc(v26, -1, -1);
      swift_slowDealloc(v23, -1, -1);

      (*(void (**)(char *, uint64_t))(v39 + 8))(v12, v8);
    }
    else
    {

      swift_bridgeObjectRelease_n(v16, 2);
      swift_bridgeObjectRelease_n(a3, 2);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    }
    type metadata accessor for DaemonAnalytics(0);
    static DaemonAnalytics.sendODNConcurrentInvocationsEvent(workflowInProgress:newWorkflow:isBackground:)(v17, v16, a2, a3, a4 == 9);
    v33 = v16;
  }
  else
  {
    v38 = v8;
    v27 = a2;
    defaultLogger()(v13);
    v28 = swift_bridgeObjectRetain_n(a3, 2);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.debug.getter(v29);
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc(12, -1);
      v32 = swift_slowAlloc(32, -1);
      v41 = v32;
      v39 = v9;
      *(_DWORD *)v31 = 136446210;
      swift_bridgeObjectRetain(a3);
      v40 = sub_1000E3AC8(v27, a3, &v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41, v31 + 4);
      swift_bridgeObjectRelease_n(a3, 3);
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "ODN asked to compute assessment for %{public}s; no assessment computation is in progress",
        v31,
        0xCu);
      swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v32, -1, -1);
      swift_slowDealloc(v31, -1, -1);

      (*(void (**)(char *, uint64_t))(v39 + 8))(v15, v38);
    }
    else
    {

      swift_bridgeObjectRelease_n(a3, 2);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v38);
    }
    v34 = *(_QWORD *)(a1 + 48);
    *(_QWORD *)(a1 + 40) = v27;
    *(_QWORD *)(a1 + 48) = a3;
    swift_bridgeObjectRetain(a3);
    v33 = v34;
  }
  return swift_bridgeObjectRelease(v33);
}

uint64_t sub_1001ABBA4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  defaultLogger()(v4);
  v7 = swift_retain_n(a1, 2);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.debug.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v18 = v2;
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v20 = v11;
    *(_DWORD *)v10 = 136446210;
    v12 = *(_QWORD *)(a1 + 48);
    if (v12)
    {
      v13 = *(_QWORD *)(a1 + 40);
      v14 = *(_QWORD *)(a1 + 48);
    }
    else
    {
      v14 = 0xE500000000000000;
      v13 = 0x3E6C696E3CLL;
    }
    swift_bridgeObjectRetain(v12);
    v19 = sub_1000E3AC8(v13, v14, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20, v10 + 4);
    swift_release_n(a1, 2);
    swift_bridgeObjectRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "ODN finished computing assessment for %{public}s", v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v18);
  }
  else
  {

    swift_release_n(a1, 2);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  v15 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  return swift_bridgeObjectRelease(v15);
}

uint64_t sub_1001ABD90()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  sub_1001AE05C(*(void **)(v0 + 56), *(void **)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
  return swift_deallocClassInstance(v0, 88, 7);
}

uint64_t type metadata accessor for DIPODNHelper()
{
  return objc_opt_self(_TtC8coreidvd12DIPODNHelper);
}

uint64_t sub_1001ABDF8()
{
  return sub_10011D110(&qword_10062FF10);
}

uint64_t sub_1001ABE04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  dispatch_semaphore_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;

  v1 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = v1;
  __chkstk_darwin(v1);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_10001CFF8(0, (unint64_t *)&qword_1006308C0, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v22);
  v23 = _swiftEmptyArrayStorage;
  v12 = sub_100004790((unint64_t *)&qword_10062FF40, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v21 = v12;
  v13 = sub_100004828((uint64_t *)&unk_100636400);
  v20 = v13;
  v19 = sub_100025D68((unint64_t *)&qword_10062FF50, (uint64_t *)&unk_100636400);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v23, v13, v19, v6, v12);
  v14 = enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:);
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v15(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v3);
  *(_QWORD *)(v0 + 16) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000016, 0x8000000100551870, v11, v8, v5, 0);
  v16 = dispatch_semaphore_create(0);
  *(_QWORD *)(v0 + 24) = v16;
  static DispatchQoS.unspecified.getter(v16);
  v23 = _swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v23, v20, v19, v6, v21);
  v15(v5, v14, v3);
  *(_QWORD *)(v0 + 32) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000027, 0x8000000100551890, v11, v8, v5, 0);
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  return v0;
}

uint64_t sub_1001AC08C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint8_t *v46;
  int v47;
  uint64_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint8_t *v78;
  uint8_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  NSObject *v94;
  int v95;
  _BOOL4 v96;
  uint64_t v97;
  uint64_t v98;
  uint8_t *v99;
  uint8_t *v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  NSObject *v121;
  uint8_t *v122;
  NSObject *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  NSObject *v135;
  uint64_t v136;
  uint64_t v137;
  int v138;
  _BOOL4 v139;
  uint8_t *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  NSObject *v160;
  NSObject *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  int64_t v167;
  int64_t v168;
  _QWORD *v169;
  unint64_t v170;
  unint64_t i;
  int64_t v172;
  uint64_t v173;
  uint64_t v174;
  unint64_t v175;
  int64_t v176;
  uint64_t *v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  unint64_t v181;
  _QWORD *v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  NSObject *v186;
  os_log_type_t v187;
  uint8_t *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  unint64_t v193;
  unint64_t v194;
  uint64_t v195;
  uint8_t *v196;
  uint64_t v197;
  uint8_t *v198;
  NSObject *v199;
  char *v200;
  uint64_t v201;
  NSObject *v202;
  NSObject *v203;
  char *v204;
  uint64_t (*v205)(char *, uint64_t);
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220[11];

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v195 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v4);
  v9 = (char *)&v195 - v8;
  v10 = __chkstk_darwin(v7);
  v12 = ((char *)&v195 - v11);
  v13 = __chkstk_darwin(v10);
  v15 = ((char *)&v195 - v14);
  __chkstk_darwin(v13);
  v17 = (char *)&v195 - v16;
  v18 = sub_100004828(&qword_1006375E0);
  result = __chkstk_darwin(v18);
  v21 = (char *)&v195 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (byte_100670060 != 1)
    return result;
  sub_1001AD718(a1, (uint64_t)v21);
  v22 = sub_100004828(&qword_100636840);
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
    return sub_1001AD760((uint64_t)v21);
  v203 = v12;
  v204 = v9;
  v200 = v6;
  JWSSignedJSON.payload.getter(v22);
  v213 = v220[0];
  v214 = v220[1];
  v210 = v220[2];
  v215 = v220[4];
  v216 = v220[3];
  v212 = v220[5];
  v209 = v220[6];
  v208 = v220[7];
  v211 = v220[8];
  v201 = v220[9];
  v207 = v220[10];
  v24 = (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v21, v22);
  v25 = defaultLogger()(v24);
  v26 = Logger.logObject.getter(v25);
  v27 = static os_log_type_t.debug.getter(v26);
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v28 = 0;
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "Printing Augmented Profile Information:", v28, 2u);
    swift_slowDealloc(v28, -1, -1);
  }

  v205 = *(uint64_t (**)(char *, uint64_t))(v3 + 8);
  v29 = v205(v17, v2);
  defaultLogger()(v29);
  v31 = v213;
  v30 = v214;
  v206 = v2;
  v32 = v210;
  v202 = v15;
  v33 = v215;
  v34 = v216;
  v35 = v212;
  v36 = v209;
  sub_1001AD7A0(v213, v214, v210, v216, v215, v212, v209, v208);
  v37 = v211;
  swift_bridgeObjectRetain(v211);
  v38 = v201;
  swift_bridgeObjectRetain(v201);
  v39 = v207;
  swift_bridgeObjectRetain(v207);
  v40 = v30;
  v41 = v32;
  v42 = v36;
  v43 = v208;
  sub_1001AD7A0(v31, v40, v32, v34, v33, v35, v42, v208);
  swift_bridgeObjectRetain(v37);
  swift_bridgeObjectRetain(v38);
  v44 = v39;
  swift_bridgeObjectRetain(v39);
  v46 = (uint8_t *)Logger.logObject.getter(v45);
  v47 = static os_log_type_t.debug.getter(v46);
  if (os_log_type_enabled((os_log_t)v46, (os_log_type_t)v47))
  {
    v199 = v46;
    v48 = v213;
    v49 = (uint8_t *)swift_slowAlloc(12, -1);
    v50 = swift_slowAlloc(32, -1);
    v220[0] = v50;
    *(_DWORD *)v49 = 136315138;
    v51 = v214;
    LODWORD(v198) = v47;
    v197 = v50;
    if (v214)
    {
      swift_bridgeObjectRetain(v214);
      v52 = v48;
      v53 = v51;
    }
    else
    {
      v53 = 0xE300000000000000;
      v52 = 4271950;
    }
    v69 = v51;
    v219 = sub_1000E3AC8(v52, v53, v220);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v219, v220, v49 + 4);
    swift_bridgeObjectRelease(v53);
    v70 = v51;
    v71 = v210;
    v73 = v215;
    v72 = v216;
    v74 = v212;
    v75 = v209;
    v76 = v208;
    sub_1001849FC(v48, v70, v210, v216, v215, v212, v209, v208);
    swift_bridgeObjectRelease(v207);
    swift_bridgeObjectRelease(v38);
    v196 = v49;
    v77 = v211;
    swift_bridgeObjectRelease(v211);
    sub_1001849FC(v48, v69, v71, v72, v73, v74, v75, v76);
    v68 = v207;
    swift_bridgeObjectRelease(v207);
    swift_bridgeObjectRelease(v38);
    swift_bridgeObjectRelease(v77);
    v67 = v71;
    v78 = (uint8_t *)v199;
    v79 = v196;
    _os_log_impl((void *)&_mh_execute_header, v199, (os_log_type_t)v198, "  ord destination %s", v196, 0xCu);
    v80 = v197;
    swift_arrayDestroy(v197, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v80, -1, -1);
    swift_slowDealloc(v79, -1, -1);

    v66 = v205((char *)v202, v206);
    v63 = v214;
  }
  else
  {
    v55 = v213;
    v54 = v214;
    v56 = v41;
    v57 = v215;
    v58 = v216;
    v59 = v212;
    v60 = v43;
    v61 = v209;
    sub_1001849FC(v213, v214, v56, v216, v215, v212, v209, v60);
    swift_bridgeObjectRelease(v39);
    swift_bridgeObjectRelease(v201);
    swift_bridgeObjectRelease(v211);
    v62 = v55;
    v63 = v54;
    v64 = v54;
    v38 = v201;
    v65 = v210;
    sub_1001849FC(v62, v64, v210, v58, v57, v59, v61, v60);

    swift_bridgeObjectRelease(v44);
    swift_bridgeObjectRelease(v38);
    swift_bridgeObjectRelease(v211);
    v66 = v205((char *)v202, v206);
    v67 = v65;
    v68 = v44;
  }
  v81 = v213;
  defaultLogger()(v66);
  v82 = v63;
  v83 = v67;
  v84 = v215;
  v85 = v212;
  v86 = v209;
  v87 = v208;
  sub_1001AD7A0(v81, v63, v83, v216, v215, v212, v209, v208);
  v88 = v211;
  swift_bridgeObjectRetain(v211);
  swift_bridgeObjectRetain(v38);
  swift_bridgeObjectRetain(v68);
  v89 = v81;
  v90 = v82;
  v91 = v210;
  v92 = v216;
  sub_1001AD7A0(v89, v90, v210, v216, v84, v85, v86, v87);
  swift_bridgeObjectRetain(v88);
  swift_bridgeObjectRetain(v38);
  swift_bridgeObjectRetain(v68);
  v94 = Logger.logObject.getter(v93);
  v95 = static os_log_type_t.debug.getter(v94);
  v96 = os_log_type_enabled(v94, (os_log_type_t)v95);
  v97 = v92;
  v98 = v214;
  v202 = v94;
  if (v96)
  {
    v99 = (uint8_t *)swift_slowAlloc(12, -1);
    v100 = (uint8_t *)swift_slowAlloc(32, -1);
    v220[0] = (uint64_t)v100;
    *(_DWORD *)v99 = 136315138;
    LODWORD(v201) = v95;
    v199 = v100;
    if (v98)
    {
      swift_bridgeObjectRetain(v97);
      v101 = v210;
      v102 = v210;
      v103 = v97;
    }
    else
    {
      v103 = 0xE300000000000000;
      v102 = 4271950;
      v101 = v210;
    }
    v219 = sub_1000E3AC8(v102, v103, v220);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v219, v220, v99 + 4);
    swift_bridgeObjectRelease(v103);
    v115 = v213;
    v114 = v214;
    v116 = v215;
    v198 = v99;
    v117 = v212;
    v118 = v209;
    v113 = v208;
    sub_1001849FC(v213, v214, v101, v97, v215, v212, v209, v208);
    v119 = v101;
    v120 = v207;
    swift_bridgeObjectRelease(v207);
    swift_bridgeObjectRelease(v38);
    swift_bridgeObjectRelease(v211);
    sub_1001849FC(v115, v114, v119, v97, v116, v117, v118, v113);
    swift_bridgeObjectRelease(v120);
    swift_bridgeObjectRelease(v38);
    v111 = v211;
    swift_bridgeObjectRelease(v211);
    v110 = v118;
    v121 = v202;
    v122 = v198;
    _os_log_impl((void *)&_mh_execute_header, v202, (os_log_type_t)v201, "  otd destination %s", v198, 0xCu);
    v123 = v199;
    swift_arrayDestroy(v199, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v123, -1, -1);
    swift_slowDealloc(v122, -1, -1);

    v112 = v205((char *)v203, v206);
  }
  else
  {
    v104 = v85;
    v105 = v213;
    v106 = v215;
    v107 = v208;
    sub_1001849FC(v213, v214, v91, v97, v215, v104, v209, v208);
    swift_bridgeObjectRelease(v68);
    swift_bridgeObjectRelease(v38);
    v108 = v211;
    swift_bridgeObjectRelease(v211);
    v109 = v91;
    v110 = v209;
    sub_1001849FC(v105, v98, v109, v97, v106, v104, v209, v107);

    swift_bridgeObjectRelease(v68);
    swift_bridgeObjectRelease(v38);
    v111 = v108;
    swift_bridgeObjectRelease(v108);
    v112 = v205((char *)v203, v206);
    v113 = v107;
  }
  defaultLogger()(v112);
  v125 = v213;
  v124 = v214;
  v126 = v210;
  v127 = v215;
  v128 = v216;
  v129 = v110;
  sub_1001AD7A0(v213, v214, v210, v216, v215, v212, v110, v113);
  swift_bridgeObjectRetain(v111);
  swift_bridgeObjectRetain(v38);
  v130 = v207;
  swift_bridgeObjectRetain(v207);
  v131 = v124;
  v132 = v212;
  sub_1001AD7A0(v125, v131, v126, v128, v127, v212, v129, v113);
  swift_bridgeObjectRetain(v111);
  swift_bridgeObjectRetain(v38);
  swift_bridgeObjectRetain(v130);
  v133 = v129;
  v135 = Logger.logObject.getter(v134);
  v136 = v132;
  v137 = v111;
  v138 = static os_log_type_t.debug.getter(v135);
  v139 = os_log_type_enabled(v135, (os_log_type_t)v138);
  v203 = v135;
  if (v139)
  {
    v140 = (uint8_t *)swift_slowAlloc(12, -1);
    v141 = swift_slowAlloc(32, -1);
    v220[0] = v141;
    *(_DWORD *)v140 = 136315138;
    LODWORD(v202) = v138;
    v201 = v141;
    if (v214)
    {
      v142 = v208;
      swift_bridgeObjectRetain(v208);
      v143 = v209;
      v144 = v209;
      v145 = v142;
    }
    else
    {
      v145 = 0xE300000000000000;
      v143 = v209;
      v142 = v208;
      v144 = 4271950;
    }
    v219 = sub_1000E3AC8(v144, v145, v220);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v219, v220, v140 + 4);
    swift_bridgeObjectRelease(v145);
    v152 = v213;
    v153 = v214;
    v154 = v210;
    v199 = v140;
    v156 = v215;
    v155 = v216;
    v157 = v212;
    sub_1001849FC(v213, v214, v210, v216, v215, v212, v143, v142);
    v158 = v207;
    swift_bridgeObjectRelease(v207);
    swift_bridgeObjectRelease(v38);
    v159 = v211;
    swift_bridgeObjectRelease(v211);
    sub_1001849FC(v152, v153, v154, v155, v156, v157, v209, v142);
    swift_bridgeObjectRelease(v158);
    swift_bridgeObjectRelease(v38);
    swift_bridgeObjectRelease(v159);
    v160 = v203;
    v161 = v199;
    _os_log_impl((void *)&_mh_execute_header, v203, (os_log_type_t)v202, "  tsid enc cert   %s", (uint8_t *)v199, 0xCu);
    v162 = v201;
    swift_arrayDestroy(v201, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v162, -1, -1);
    swift_slowDealloc(v161, -1, -1);

  }
  else
  {
    v147 = v213;
    v146 = v214;
    v148 = v210;
    v149 = v216;
    v150 = v113;
    v151 = v215;
    sub_1001849FC(v213, v214, v210, v216, v215, v136, v133, v150);
    swift_bridgeObjectRelease(v130);
    swift_bridgeObjectRelease(v38);
    swift_bridgeObjectRelease(v137);
    sub_1001849FC(v147, v146, v148, v149, v151, v136, v133, v208);

    swift_bridgeObjectRelease(v130);
    swift_bridgeObjectRelease(v38);
    swift_bridgeObjectRelease(v137);
  }
  v205(v204, v206);
  v163 = v38 + 64;
  v164 = 1 << *(_BYTE *)(v38 + 32);
  v165 = -1;
  if (v164 < 64)
    v165 = ~(-1 << v164);
  v166 = v165 & *(_QWORD *)(v38 + 64);
  v167 = (unint64_t)(v164 + 63) >> 6;
  result = swift_bridgeObjectRetain_n(v38, 2);
  v168 = 0;
  v169 = _swiftEmptyArrayStorage;
  if (!v166)
    goto LABEL_28;
LABEL_27:
  v170 = __clz(__rbit64(v166));
  v166 &= v166 - 1;
  for (i = v170 | (v168 << 6); ; i = __clz(__rbit64(v175)) + (v168 << 6))
  {
    v177 = (uint64_t *)(*(_QWORD *)(v38 + 48) + 16 * i);
    v179 = *v177;
    v178 = v177[1];
    swift_bridgeObjectRetain(v178);
    result = swift_isUniquelyReferenced_nonNull_native(v169);
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1000E2358(0, v169[2] + 1, 1, v169);
      v169 = (_QWORD *)result;
    }
    v181 = v169[2];
    v180 = v169[3];
    if (v181 >= v180 >> 1)
    {
      result = (uint64_t)sub_1000E2358((_QWORD *)(v180 > 1), v181 + 1, 1, v169);
      v169 = (_QWORD *)result;
    }
    v169[2] = v181 + 1;
    v182 = &v169[2 * v181];
    v182[4] = v179;
    v182[5] = v178;
    if (v166)
      goto LABEL_27;
LABEL_28:
    v172 = v168 + 1;
    v173 = v216;
    if (__OFADD__(v168, 1))
    {
      __break(1u);
LABEL_57:
      __break(1u);
      return result;
    }
    v174 = v215;
    if (v172 >= v167)
      goto LABEL_52;
    v175 = *(_QWORD *)(v163 + 8 * v172);
    ++v168;
    if (!v175)
    {
      v168 = v172 + 1;
      if (v172 + 1 >= v167)
        goto LABEL_52;
      v175 = *(_QWORD *)(v163 + 8 * v168);
      if (!v175)
      {
        v168 = v172 + 2;
        if (v172 + 2 >= v167)
          goto LABEL_52;
        v175 = *(_QWORD *)(v163 + 8 * v168);
        if (!v175)
        {
          v168 = v172 + 3;
          if (v172 + 3 >= v167)
            goto LABEL_52;
          v175 = *(_QWORD *)(v163 + 8 * v168);
          if (!v175)
          {
            v168 = v172 + 4;
            if (v172 + 4 >= v167)
              goto LABEL_52;
            v175 = *(_QWORD *)(v163 + 8 * v168);
            if (!v175)
              break;
          }
        }
      }
    }
LABEL_45:
    v166 = (v175 - 1) & v175;
  }
  v176 = v172 + 5;
  if (v176 < v167)
  {
    v175 = *(_QWORD *)(v163 + 8 * v176);
    if (!v175)
    {
      while (1)
      {
        v168 = v176 + 1;
        if (__OFADD__(v176, 1))
          goto LABEL_57;
        if (v168 >= v167)
          goto LABEL_52;
        v175 = *(_QWORD *)(v163 + 8 * v168);
        ++v176;
        if (v175)
          goto LABEL_45;
      }
    }
    v168 = v176;
    goto LABEL_45;
  }
LABEL_52:
  swift_release(v38);
  sub_1001849FC(v213, v214, v210, v173, v174, v212, v209, v208);
  swift_bridgeObjectRelease(v207);
  swift_bridgeObjectRelease(v211);
  v183 = swift_bridgeObjectRelease_n(v38, 2);
  v219 = (uint64_t)v169;
  v184 = v200;
  v185 = defaultLogger()(v183);
  v186 = Logger.logObject.getter(v185);
  v187 = static os_log_type_t.debug.getter(v186);
  if (os_log_type_enabled(v186, v187))
  {
    v188 = (uint8_t *)swift_slowAlloc(12, -1);
    v189 = swift_slowAlloc(32, -1);
    v218 = v189;
    *(_DWORD *)v188 = 136315138;
    swift_beginAccess(&v219, v220, 0, 0);
    v190 = v219;
    swift_bridgeObjectRetain(v219);
    v192 = Array.description.getter(v191, &type metadata for String);
    v194 = v193;
    swift_bridgeObjectRelease(v190);
    v217 = sub_1000E3AC8(v192, v194, &v218);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v217, &v218, v188 + 4);
    swift_bridgeObjectRelease(v194);
    _os_log_impl((void *)&_mh_execute_header, v186, v187, "  bindings keys   %s", v188, 0xCu);
    swift_arrayDestroy(v189, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v189, -1, -1);
    swift_slowDealloc(v188, -1, -1);
  }

  v205(v184, v206);
  return swift_bridgeObjectRelease(v219);
}

id sub_1001AD1DC(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9)
{
  void *v9;
  Class isa;
  Class v19;
  NSDictionary v20;
  unint64_t v21;
  NSArray v22;
  Class v23;
  id v24;

  if (a2 >> 60 == 15)
  {
    isa = 0;
  }
  else
  {
    isa = Data._bridgeToObjectiveC()().super.isa;
    sub_100007F78(a1, a2);
  }
  if (a4 >> 60 == 15)
  {
    v19 = 0;
    if (a6)
      goto LABEL_6;
LABEL_9:
    v20.super.isa = 0;
    v21 = a9;
    if (a7)
      goto LABEL_7;
    goto LABEL_10;
  }
  v19 = Data._bridgeToObjectiveC()().super.isa;
  sub_100007F78(a3, a4);
  if (!a6)
    goto LABEL_9;
LABEL_6:
  v20.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a6);
  v21 = a9;
  if (a7)
  {
LABEL_7:
    v22.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(a7);
    goto LABEL_11;
  }
LABEL_10:
  v22.super.isa = 0;
LABEL_11:
  if (v21 >> 60 == 15)
  {
    v23 = 0;
  }
  else
  {
    v23 = Data._bridgeToObjectiveC()().super.isa;
    sub_100007F78(a8, v21);
  }
  v24 = objc_msgSend(v9, "initWithQAy7FB3BSYJUwsIc:Zwvxi3fDtAHqlF0d:KufCqgU8RstLzBzT:BGiN5h2SLMRO6B9R:Jf7L4ypvXegQqMcE:zeXRCfLmM5cdkEtz:", isa, v19, a5, v20.super.isa, v22.super.isa, v23);

  return v24;
}

uint64_t sub_1001AD36C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AugmentedProfile(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001AD3B0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AugmentedProfile(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001AD3EC(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint8_t *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v4 = type metadata accessor for DIPError.Code(0);
  v32 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = Data.init(base64Encoded:options:)(a1, a2, 1);
  v13 = v11;
  if (v12 >> 60 == 15)
  {
    v30 = v4;
    v31 = v12;
    defaultLogger()(v11);
    v14 = swift_bridgeObjectRetain_n(a2, 2);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.debug.getter(v15);
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc(12, -1);
      v28 = v13;
      v18 = (uint8_t *)v17;
      v27 = swift_slowAlloc(32, -1);
      v35 = v27;
      v29 = v6;
      *(_DWORD *)v18 = 136446210;
      v26 = v18 + 4;
      swift_bridgeObjectRetain(a2);
      v33 = sub_1000E3AC8(a1, a2, &v35);
      v6 = v29;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34, v26);
      swift_bridgeObjectRelease_n(a2, 3);
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Invalid assessment GUID: %{public}s", v18, 0xCu);
      v19 = v27;
      swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1, -1);
      v20 = v18;
      v13 = v28;
      swift_slowDealloc(v20, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a2, 2);
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    (*(void (**)(char *, _QWORD, uint64_t))(v32 + 104))(v6, enum case for DIPError.Code.invalidAssessmentGUID(_:), v30);
    v21 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v22 = type metadata accessor for DIPError(0);
    v23 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    swift_allocError(v22, v23, 0, 0);
    v24 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001DLL, 0x8000000100551970, 0, v6, 0, v21, 0xD00000000000004ELL, 0x80000001005518E0, 0xD00000000000001FLL, 0x8000000100551990, 422);
    swift_willThrow(v24);
  }
  return v13;
}

uint64_t sub_1001AD718(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100004828(&qword_1006375E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001AD760(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100004828(&qword_1006375E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001AD7A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(a4);
    swift_bridgeObjectRetain(a6);
    return swift_bridgeObjectRetain(a8);
  }
  return result;
}

uint64_t sub_1001AD7F0(uint64_t a1, unsigned __int8 a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  _BYTE *v26;
  double v27;
  void *v28;
  id v29;
  Swift::String v30;
  Swift::Bool v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  Swift::String v41;
  Swift::Bool v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  _BOOL4 v46;
  uint8_t *v47;
  _BYTE *v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  Swift::String v53;
  Swift::String v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t (*v59)(_BYTE *, uint64_t);
  uint64_t v60;
  _BYTE *v61;
  void (*v62)(_BYTE *, uint64_t);
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t result;
  _BYTE *v67;
  double v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint64_t v72;
  uint64_t v73;
  _BYTE *v74;
  uint64_t v75;
  uint64_t v76;
  Swift::String v77;
  void *object;
  unint64_t v79;
  unint64_t v80;
  _BYTE *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _BYTE v86[12];
  int v87;
  _BYTE *v88;
  _BYTE *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _BYTE *v94;
  uint64_t v95;
  uint64_t v96;
  _BYTE *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  double v104;
  uint64_t v105;
  double v106[2];

  v87 = a4;
  v95 = a3;
  v100 = a1;
  v4 = a2;
  v5 = type metadata accessor for DIPError.Code(0);
  v92 = *(_QWORD *)(v5 - 8);
  v93 = v5;
  __chkstk_darwin(v5);
  v94 = &v86[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for Date(0);
  v90 = *(_QWORD *)(v7 - 8);
  v91 = v7;
  __chkstk_darwin(v7);
  v89 = &v86[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for DispatchTime(0);
  v98 = *(_QWORD *)(v9 - 8);
  v99 = v9;
  v10 = __chkstk_darwin(v9);
  v12 = &v86[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v97 = &v86[-v13];
  v101 = type metadata accessor for Logger(0);
  v96 = *(_QWORD *)(v101 - 8);
  v14 = __chkstk_darwin(v101);
  v88 = &v86[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = __chkstk_darwin(v14);
  v18 = &v86[-v17];
  v19 = __chkstk_darwin(v16);
  v21 = &v86[-v20];
  v22 = __chkstk_darwin(v19);
  v24 = &v86[-v23];
  __chkstk_darwin(v22);
  v26 = &v86[-v25];
  if (v4 == 9)
    v27 = 60.0;
  else
    v27 = 3.0;
  v106[0] = v27;
  v28 = (void *)objc_opt_self(NSUserDefaults);
  v29 = objc_msgSend(v28, "standardUserDefaults");
  v30._countAndFlagsBits = 0xD000000000000019;
  v30._object = (void *)0x80000001005519B0;
  v31 = NSUserDefaults.internalBool(forKey:)(v30);

  if (v31)
  {
    v33 = defaultLogger()(v32);
    v34 = Logger.logObject.getter(v33);
    v35 = static os_log_type_t.debug.getter(v34);
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "Disabling ODN timeout due to user defaults setting", v36, 2u);
      swift_slowDealloc(v36, -1, -1);
    }

    v37 = v96;
    v38 = v101;
    v39 = (*(uint64_t (**)(_BYTE *, uint64_t))(v96 + 8))(v26, v101);
    v106[0] = 9999999.0;
    v27 = 9999999.0;
  }
  else
  {
    v40 = objc_msgSend(v28, "standardUserDefaults");
    v41._object = (void *)0x80000001005519D0;
    v41._countAndFlagsBits = 0xD000000000000018;
    v42 = NSUserDefaults.internalBool(forKey:)(v41);

    if (v42)
    {
      v43 = defaultLogger()(v39);
      v44 = Logger.logObject.getter(v43);
      v45 = static os_log_type_t.debug.getter(v44);
      v46 = os_log_type_enabled(v44, v45);
      v38 = v101;
      if (v46)
      {
        v47 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v47 = 0;
        _os_log_impl((void *)&_mh_execute_header, v44, v45, "Forcing ODN timeout due to user defaults settings", v47, 2u);
        swift_slowDealloc(v47, -1, -1);
      }

      v48 = v24;
      v37 = v96;
      v39 = (*(uint64_t (**)(_BYTE *, uint64_t))(v96 + 8))(v48, v38);
      v106[0] = 0.0001;
      v27 = 0.0001;
    }
    else
    {
      v38 = v101;
      v37 = v96;
      if ((v87 & 1) != 0)
      {
        v49 = defaultLogger()(v39);
        v50 = Logger.logObject.getter(v49);
        v51 = static os_log_type_t.debug.getter(v50);
        if (os_log_type_enabled(v50, v51))
        {
          v52 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v52 = 0;
          _os_log_impl((void *)&_mh_execute_header, v50, v51, "ODN triggered at proofing time, setting time out to a default value", v52, 2u);
          swift_slowDealloc(v52, -1, -1);
        }

        (*(void (**)(_BYTE *, uint64_t))(v37 + 8))(v21, v38);
        v53._countAndFlagsBits = 0xD000000000000043;
        v53._object = (void *)0x8000000100551A80;
        v54._countAndFlagsBits = 0x6233346566333836;
        v54._object = (void *)0xE800000000000000;
        logMilestone(tag:description:)(v54, v53);
        v106[0] = 15.0;
        v27 = 15.0;
      }
    }
  }
  v55 = defaultLogger()(v39);
  v56 = Logger.logObject.getter(v55);
  v57 = static os_log_type_t.debug.getter(v56);
  if (os_log_type_enabled(v56, v57))
  {
    v58 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v58 = 134349056;
    v104 = v27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, &v105, v58 + 4);
    _os_log_impl((void *)&_mh_execute_header, v56, v57, "now we wait %{public}f seconds for ODN", v58, 0xCu);
    swift_slowDealloc(v58, -1, -1);
  }

  v59 = *(uint64_t (**)(_BYTE *, uint64_t))(v37 + 8);
  v60 = v59(v18, v38);
  static DispatchTime.now()(v60);
  swift_beginAccess(v106, &v104, 0, 0);
  v61 = v97;
  + infix(_:_:)(v12, v106[0]);
  v62 = *(void (**)(_BYTE *, uint64_t))(v98 + 8);
  v63 = v12;
  v64 = v99;
  v62(v63, v99);
  v65 = OS_dispatch_semaphore.wait(timeout:)(v61) & 1;
  v62(v61, v64);
  result = static DispatchTimeoutResult.== infix(_:_:)(v65, 1);
  if ((result & 1) != 0)
  {
    v67 = v88;
    defaultLogger()(result);
    v68 = v106[0];
    sub_100022E8C();
    v69 = sub_100022E8C();
    v70 = Logger.logObject.getter(v69);
    v71 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v70, v71))
    {
      v72 = swift_slowAlloc(18, -1);
      *(_DWORD *)v72 = 68157952;
      LODWORD(v102) = 2;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v102, (char *)&v102 + 4, v72 + 4);
      *(_WORD *)(v72 + 8) = 2048;
      v102 = *(_QWORD *)&v68;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v102, &v103, v72 + 10);
      _os_log_impl((void *)&_mh_execute_header, v70, v71, "Timed out waiting for ODN data after %.*f seconds", (uint8_t *)v72, 0x12u);
      swift_slowDealloc(v72, -1, -1);
    }

    v59(v67, v38);
    v102 = 0;
    v103 = 0xE000000000000000;
    _StringGuts.grow(_:)(36);
    v73 = swift_bridgeObjectRelease(v103);
    v102 = 0xD000000000000022;
    v103 = 0x80000001005519F0;
    v74 = v89;
    static Date.now.getter(v73);
    v75 = sub_100004790((unint64_t *)&qword_100633310, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    v76 = v91;
    v77._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v91, v75);
    object = v77._object;
    String.append(_:)(v77);
    swift_bridgeObjectRelease(object);
    (*(void (**)(_BYTE *, uint64_t))(v90 + 8))(v74, v76);
    v79 = v102;
    v80 = v103;
    v81 = v94;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v92 + 104))(v94, enum case for DIPError.Code.odnTimeout(_:), v93);
    v82 = type metadata accessor for DIPError(0);
    v83 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    swift_allocError(v82, v83, 0, 0);
    v84 = v95;
    swift_bridgeObjectRetain(v95);
    v85 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v79, v80, 0, v81, 0, v84, 0xD00000000000004ELL, 0x80000001005518E0, 0xD000000000000051, 0x8000000100551A20, 334);
    return swift_willThrow(v85);
  }
  return result;
}

void sub_1001AE03C()
{
  uint64_t v0;

  sub_1001AA6C0(v0);
}

uint64_t sub_1001AE044(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001AE054(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void *sub_1001AE05C(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  if (result)
  {

    return (void *)swift_bridgeObjectRelease(a4);
  }
  return result;
}

uint64_t sub_1001AE090()
{
  return sub_10011D110(&qword_1006375F8);
}

uint64_t sub_1001AE09C(void *a1, uint64_t a2)
{
  sub_100004828(&qword_1006375F8);
  return sub_1001AB5EC(a1, a2);
}

uint64_t sub_1001AE0EC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1001AE110()
{
  uint64_t v0;

  sub_1001A9D14(*(_BYTE *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1001AE11C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001AE140(int a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1001A9F5C(a1, a2, a3, *(uint64_t (**)(_QWORD))(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_1001AE148()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 41, 7);
}

uint64_t sub_1001AE174()
{
  uint64_t v0;

  return sub_1001AB79C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(unsigned __int8 *)(v0 + 40));
}

uint64_t sub_1001AE184()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1001AE194()
{
  uint64_t v0;

  sub_1001A6758(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(unsigned __int8 *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_BYTE *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144));
}

uint64_t sub_1001AE1EC()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1 >> 60 != 15)
    sub_100007F8C(*(_QWORD *)(v0 + 16), v1);
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001AE220()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001AE244()
{
  uint64_t v0;

  return swift_deallocObject(v0, 20, 7);
}

uint64_t sub_1001AE254()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001AE264()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001AE274()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = type metadata accessor for DIPSignpost(0);
  v2 = *(_QWORD *)(v1 - 8);
  v24 = *(unsigned __int8 *)(v2 + 80);
  v3 = (v24 + 16) & ~v24;
  v4 = v3 + *(_QWORD *)(v2 + 64);
  v5 = (v4 + 31) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v17 = (v4 + 7) & 0xFFFFFFFFFFFFF8;
  v8 = type metadata accessor for DispatchTime(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = (*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = (v11 + 15) & 0xFFFFFFFFFFFFFFF8;
  v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  v20 = v8;
  v21 = (v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  v23 = *(unsigned __int8 *)(v9 + 80);
  v12 = v1;
  v13 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v3, v12);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v17 + 8));
  swift_release(*(_QWORD *)(v0 + v5));

  swift_release(*(_QWORD *)(v0 + v7));
  swift_release(*(_QWORD *)(v0 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)));
  (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v0 + v10, v20);
  swift_release(*(_QWORD *)(v0 + v11));
  swift_release(*(_QWORD *)(v0 + v18));
  swift_release(*(_QWORD *)(v0 + v19));
  swift_release(*(_QWORD *)(v0 + v21));
  swift_release(*(_QWORD *)(v0 + v22));
  if (*(_QWORD *)(v0 + v13))
    swift_release(*(_QWORD *)(v0 + v13 + 8));
  v14 = (v13 + 23) & 0xFFFFFFFFFFFFFFF8;
  v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v14));
  swift_release(*(_QWORD *)(v0 + v15));
  return swift_deallocObject(v0, v15 + 8, v24 | v23 | 7);
}

unint64_t sub_1001AE44C(uint64_t a1, uint64_t *a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, int a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;

  v12 = *(_QWORD *)(type metadata accessor for DIPSignpost(0) - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = v13 + *(_QWORD *)(v12 + 64);
  v15 = (v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = (v14 + 31) & 0xFFFFFFFFFFFFFFF8;
  v17 = (v16 + 15) & 0xFFFFFFFFFFFFFFF8;
  v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF8;
  v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  v20 = *(_QWORD *)(type metadata accessor for DispatchTime(0) - 8);
  v21 = (*(unsigned __int8 *)(v20 + 80) + v19 + 8) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v22 = (*(_QWORD *)(v20 + 64) + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  v24 = (v23 + 15) & 0xFFFFFFFFFFFFFFF8;
  v25 = (v24 + 15) & 0xFFFFFFFFFFFFFFF8;
  v26 = (v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  v27 = (v26 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_1001A8734(a1, a2, a3, a4, a5, a6, a7, a8, v8 + v13, *(_QWORD *)(v8 + v15), *(void **)(v8 + v15 + 8), *(_BYTE *)(v8 + v15 + 16), *(_QWORD *)(v8 + v16), *(_QWORD *)(v8 + v17), *(_QWORD *)(v8 + v18), *(_QWORD *)(v8 + v19), v8 + v21, *(_QWORD *)(v8 + v22), *(_QWORD *)(v8 + v23),
           *(_QWORD *)(v8 + v24),
           *(_QWORD *)(v8 + v25),
           *(_QWORD *)(v8 + v26),
           *(_QWORD *)(v8 + v27),
           *(_QWORD *)(v8 + v27 + 8),
           *(uint64_t **)(v8 + ((v27 + 23) & 0xFFFFFFFFFFFFFFF8)),
           *(_QWORD *)(v8 + ((((v27 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1001AE5E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v32;
  void *v33;
  id v34;
  void (*v35)(char *, _QWORD, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[3];
  char v51[8];
  uint64_t v52;
  _OWORD v53[2];
  __int128 v54;
  void *v55;

  v4 = type metadata accessor for DIPError.Code(0);
  v49 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DIPError.PropertyKey(0);
  v46 = *(_QWORD *)(v7 - 8);
  v47 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Logger(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = a2;
  swift_bridgeObjectRetain(a2);
  defaultLogger()(v14);
  swift_errorRetain(a1);
  v15 = swift_errorRetain(a1);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc(12, -1);
    v45 = v6;
    v19 = (uint8_t *)v18;
    v20 = swift_slowAlloc(32, -1);
    v43 = v11;
    v21 = v20;
    *(_QWORD *)&v54 = v20;
    v42 = v10;
    *(_DWORD *)v19 = 136446210;
    v44 = v4;
    swift_getErrorValue(a1, v51, v50);
    v22 = Error.localizedDescription.getter(v50[1], v50[2]);
    v24 = v23;
    *(_QWORD *)&v53[0] = sub_1000E3AC8(v22, v23, (uint64_t *)&v54);
    v4 = v44;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v53, (char *)v53 + 8, v19 + 4);
    swift_bridgeObjectRelease(v24);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "ODN error : %{public}s", v19, 0xCu);
    swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1, -1);
    v25 = v19;
    v6 = v45;
    swift_slowDealloc(v25, -1, -1);

    (*(void (**)(char *, uint64_t))(v43 + 8))(v13, v42);
  }
  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  v27 = v46;
  v26 = v47;
  (*(void (**)(char *, _QWORD, uint64_t))(v46 + 104))(v9, enum case for DIPError.PropertyKey.underlyingErrno(_:), v47);
  v28 = (void *)_convertErrorToNSError(_:)(a1);
  v29 = objc_msgSend(v28, "code");

  v55 = &type metadata for Int;
  *(_QWORD *)&v54 = v29;
  sub_10000491C(&v54, v53);
  v30 = v48;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v48);
  v52 = v30;
  sub_1004811C4(v53, (uint64_t)v9, isUniquelyReferenced_nonNull_native);
  v32 = v52;
  swift_bridgeObjectRelease(0x8000000000000000);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v26);
  v33 = (void *)_convertErrorToNSError(_:)(a1);
  v34 = objc_msgSend(v33, "code");

  v35 = *(void (**)(char *, _QWORD, uint64_t))(v49 + 104);
  if (v34 == (id)-31)
  {
    v35(v6, enum case for DIPError.Code.odnDisconnected(_:), v4);
    v36 = type metadata accessor for DIPError(0);
    v37 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    v38 = swift_allocError(v36, v37, 0, 0);
    swift_errorRetain(a1);
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0x656E6E6F63736944, 0xEC00000064657463, a1, v6, 0, v32, 0xD00000000000004ELL, 0x80000001005518E0, 0xD00000000000001BLL, 0x8000000100551D70, 345);
  }
  else
  {
    v35(v6, enum case for DIPError.Code.odnError(_:), v4);
    v39 = type metadata accessor for DIPError(0);
    v40 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    v38 = swift_allocError(v39, v40, 0, 0);
    swift_errorRetain(a1);
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000018, 0x8000000100551D50, a1, v6, 0, v32, 0xD00000000000004ELL, 0x80000001005518E0, 0xD00000000000001BLL, 0x8000000100551D70, 348);
  }
  return v38;
}

uint64_t sub_1001AEABC()
{
  uint64_t v0;

  return sub_1001ABBA4(v0);
}

uint64_t sub_1001AEAC4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001AEAD4()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  swift_errorRelease(v0[7]);
  swift_release(v0[8]);
  swift_bridgeObjectRelease(v0[9]);
  swift_release(v0[11]);
  swift_release(v0[12]);
  return swift_deallocObject(v0, 104, 7);
}

uint64_t sub_1001AEB40()
{
  uint64_t v0;

  return sub_1001A9688(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));
}

uint64_t sub_1001AEB7C(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6)
{
  if (a4 >> 60 != 15)
  {
    sub_100007F78(result, a2);
    sub_100007F8C(a3, a4);
    return sub_100007F78(a5, a6);
  }
  return result;
}

uint64_t destroy for ODNData(uint64_t *a1)
{
  unint64_t v2;
  uint64_t result;
  unint64_t v4;

  v2 = a1[1];
  if (v2 >> 60 != 15)
    sub_100007F8C(*a1, v2);
  result = sub_100007F8C(a1[2], a1[3]);
  v4 = a1[5];
  if (v4 >> 60 != 15)
    return sub_100007F8C(a1[4], v4);
  return result;
}

uint64_t initializeWithCopy for ODNData(uint64_t a1, uint64_t *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v10;

  v4 = a2[1];
  if (v4 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v5 = *a2;
    sub_100022948(*a2, a2[1]);
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v4;
  }
  v6 = a2[2];
  v7 = a2[3];
  sub_100022948(v6, v7);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  v8 = a2 + 4;
  v9 = a2[5];
  if (v9 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v8;
  }
  else
  {
    v10 = *v8;
    sub_100022948(*v8, a2[5]);
    *(_QWORD *)(a1 + 32) = v10;
    *(_QWORD *)(a1 + 40) = v9;
  }
  *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
  *(_QWORD *)(a1 + 56) = a2[7];
  return a1;
}

uint64_t assignWithCopy for ODNData(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  v4 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8) >> 60 == 15)
  {
    if (v4 >> 60 != 15)
    {
      v5 = *(_QWORD *)a2;
      sub_100022948(*(_QWORD *)a2, *(_QWORD *)(a2 + 8));
      *(_QWORD *)a1 = v5;
      *(_QWORD *)(a1 + 8) = v4;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v4 >> 60 == 15)
  {
    sub_10003BAAC(a1);
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  v6 = *(_QWORD *)a2;
  sub_100022948(*(_QWORD *)a2, *(_QWORD *)(a2 + 8));
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v4;
  sub_100007F8C(v7, v8);
LABEL_8:
  v9 = *(_QWORD *)(a2 + 16);
  v10 = *(_QWORD *)(a2 + 24);
  sub_100022948(v9, v10);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 24) = v10;
  sub_100007F8C(v11, v12);
  v13 = (uint64_t *)(a2 + 32);
  v14 = *(_QWORD *)(a2 + 40);
  if (*(_QWORD *)(a1 + 40) >> 60 != 15)
  {
    if (v14 >> 60 != 15)
    {
      v16 = *v13;
      sub_100022948(*v13, *(_QWORD *)(a2 + 40));
      v17 = *(_QWORD *)(a1 + 32);
      v18 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 32) = v16;
      *(_QWORD *)(a1 + 40) = v14;
      sub_100007F8C(v17, v18);
      goto LABEL_15;
    }
    sub_10003BAAC(a1 + 32);
    goto LABEL_13;
  }
  if (v14 >> 60 == 15)
  {
LABEL_13:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v13;
    goto LABEL_15;
  }
  v15 = *v13;
  sub_100022948(*v13, *(_QWORD *)(a2 + 40));
  *(_QWORD *)(a1 + 32) = v15;
  *(_QWORD *)(a1 + 40) = v14;
LABEL_15:
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

__n128 initializeWithTake for DIPClientGUIDSeeds(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ODNData(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4 >> 60 == 15)
    goto LABEL_4;
  v5 = *(_QWORD *)(a2 + 8);
  if (v5 >> 60 == 15)
  {
    sub_10003BAAC(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_6;
  }
  v6 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  sub_100007F8C(v6, v4);
LABEL_6:
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  sub_100007F8C(v7, v8);
  v9 = (_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  if (v10 >> 60 != 15)
  {
    v11 = *(_QWORD *)(a2 + 40);
    if (v11 >> 60 != 15)
    {
      v12 = *(_QWORD *)(a1 + 32);
      *(_QWORD *)(a1 + 32) = *v9;
      *(_QWORD *)(a1 + 40) = v11;
      sub_100007F8C(v12, v10);
      goto LABEL_11;
    }
    sub_10003BAAC(a1 + 32);
  }
  *(_OWORD *)(a1 + 32) = *(_OWORD *)v9;
LABEL_11:
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for ODNData(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xD && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 13);
  v3 = (((*(_QWORD *)(a1 + 24) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 24) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ODNData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 13;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 64) = 0;
    if (a2)
    {
      *(_QWORD *)(result + 16) = 0;
      *(_QWORD *)(result + 24) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ODNData()
{
  return &type metadata for ODNData;
}

_QWORD *sub_1001AF038(uint64_t a1, uint64_t a2, char *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  objc_class *v15;
  char *v16;
  char *v17;
  id v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  char *v29;
  objc_super v31;

  v4 = v3;
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for DIPHTTPSession.Configuration(0);
  __chkstk_darwin(v12);
  v14 = (id *)((char *)&v31.receiver - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4[3] = a2;
  v4[4] = 0;
  v4[2] = a1;
  if (a3)
  {
    v4[6] = 0;
  }
  else
  {
    v15 = (objc_class *)type metadata accessor for IdentitySelfHealer();
    v16 = (char *)objc_allocWithZone(v15);
    v17 = &v16[OBJC_IVAR____TtC8coreidvd18IdentitySelfHealer_proofingSessionID];
    *(_QWORD *)v17 = 0;
    *((_QWORD *)v17 + 1) = 0;
    v31.receiver = v16;
    v31.super_class = v15;
    v18 = objc_msgSendSuper2(&v31, "init");
    v4[6] = v18;
    v19 = (_QWORD *)((char *)v14 + v12[6]);
    *v19 = 0x3FD0000000000000;
    v20 = enum case for DIPBackoffStrategy.exponential(_:);
    v21 = type metadata accessor for DIPBackoffStrategy(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v19, v20, v21);
    *v14 = 0x4024000000000000;
    v14[1] = 1;
    *((_BYTE *)v14 + v12[7]) = 0;
    *((_BYTE *)v14 + v12[8]) = 0;
    *((_BYTE *)v14 + v12[9]) = 0;
    v22 = (_QWORD *)((char *)v14 + v12[10]);
    *v22 = 0;
    v22[1] = 0;
    v23 = v18;
    v24 = UUID.init()(v23);
    v25 = UUID.uuidString.getter(v24);
    v27 = v26;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v28 = objc_allocWithZone((Class)type metadata accessor for DIPTopekaWebService(0));
    a3 = (char *)sub_10024000C(v25, v27, (uint64_t)v14);
    v29 = &a3[OBJC_IVAR____TtC8coreidvd19DIPTopekaWebService_selfHealer];
    *((_QWORD *)v29 + 1) = &off_100618670;
    swift_unknownObjectWeakAssign(v29, v23);

  }
  v4[5] = a3;
  return v4;
}

uint64_t sub_1001AF238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v4[4] = a1;
  v4[5] = a4;
  v5 = type metadata accessor for DIPCertUsage(0);
  v4[6] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[7] = v6;
  v4[8] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DIPOIDVerifier(0);
  v4[9] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[10] = v8;
  v4[11] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DIPError.Code(0);
  v4[12] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v4[13] = v10;
  v4[14] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Logger(0);
  v4[15] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v4[16] = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[17] = swift_task_alloc(v13);
  v4[18] = swift_task_alloc(v13);
  v4[19] = swift_task_alloc(v13);
  v4[20] = swift_task_alloc(v13);
  return swift_task_switch(sub_1001AF338, 0, 0);
}

uint64_t sub_1001AF338(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  os_log_type_t v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  NSString v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  uint64_t v26;
  os_log_type_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56[2];

  v2 = *(_QWORD *)(v1 + 40);
  defaultLogger()(a1);
  v3 = swift_retain(v2);
  v4 = Logger.logObject.getter(v3);
  v6 = static os_log_type_t.info.getter(v4, v5);
  if (os_log_type_enabled(v4, v6))
  {
    v52 = *(_QWORD *)(v1 + 128);
    v53 = *(_QWORD *)(v1 + 120);
    v55 = *(_QWORD *)(v1 + 160);
    v7 = *(_QWORD *)(v1 + 40);
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v56[0] = v9;
    *(_DWORD *)v8 = 136315138;
    v10 = *(_QWORD *)(v7 + 16);
    v11 = *(_QWORD *)(v7 + 24);
    swift_bridgeObjectRetain(v11);
    *(_QWORD *)(v1 + 24) = sub_1000E3AC8(v10, v11, v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 24, v1 + 32, v8 + 4);
    swift_bridgeObjectRelease(v11);
    swift_release(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v6, "Fetching encryption certificate for %s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    v12 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
    v12(v55, v53);
  }
  else
  {
    v13 = *(_QWORD *)(v1 + 160);
    v14 = *(_QWORD *)(v1 + 120);
    v15 = *(_QWORD *)(v1 + 128);
    swift_release(*(_QWORD *)(v1 + 40));

    v12 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    v12(v13, v14);
  }
  *(_QWORD *)(v1 + 168) = v12;
  v16 = (void *)objc_opt_self(NSUserDefaults);
  *(_QWORD *)(v1 + 176) = v16;
  v17 = objc_msgSend(v16, "standardUserDefaults");
  v18 = String._bridgeToObjectiveC()();
  v19 = objc_msgSend(v17, "stringForKey:", v18);

  if (v19)
  {
    v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
    v22 = v21;

    defaultLogger()(v23);
    v24 = swift_bridgeObjectRetain_n(v22, 2);
    v25 = Logger.logObject.getter(v24);
    v27 = static os_log_type_t.info.getter(v25, v26);
    v28 = os_log_type_enabled(v25, v27);
    v29 = *(_QWORD *)(v1 + 152);
    v30 = *(_QWORD *)(v1 + 120);
    if (v28)
    {
      v54 = *(_QWORD *)(v1 + 152);
      v31 = v20;
      v32 = (uint8_t *)swift_slowAlloc(12, -1);
      v33 = swift_slowAlloc(32, -1);
      v56[0] = v33;
      *(_DWORD *)v32 = 136315138;
      swift_bridgeObjectRetain(v22);
      *(_QWORD *)(v1 + 16) = sub_1000E3AC8(v31, v22, v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 16, v1 + 24, v32 + 4);
      swift_bridgeObjectRelease_n(v22, 3);
      _os_log_impl((void *)&_mh_execute_header, v25, v27, "Merchant enc cert injected through user defaults: %s", v32, 0xCu);
      swift_arrayDestroy(v33, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v33, -1, -1);
      v34 = v32;
      v20 = v31;
      swift_slowDealloc(v34, -1, -1);

      v35 = v54;
      v36 = v30;
    }
    else
    {
      swift_bridgeObjectRelease_n(v22, 2);

      v35 = v29;
      v36 = v30;
    }
    v12(v35, v36);
    v42 = sub_100004828(&qword_100640CA0);
    v43 = swift_allocObject(v42, 48, 7);
    *(_OWORD *)(v43 + 16) = xmmword_10051FFB0;
    *(_QWORD *)(v43 + 32) = v20;
    *(_QWORD *)(v43 + 40) = v22;
    v44 = decodeCertificateChain(fromBase64DER:)(v43);
    swift_bridgeObjectRelease(v43);
    v46 = *(_QWORD *)(v1 + 152);
    v45 = *(_QWORD *)(v1 + 160);
    v48 = *(_QWORD *)(v1 + 136);
    v47 = *(_QWORD *)(v1 + 144);
    v49 = *(_QWORD *)(v1 + 112);
    v50 = *(_QWORD *)(v1 + 88);
    v51 = *(_QWORD *)(v1 + 64);
    **(_QWORD **)(v1 + 32) = v44;
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    swift_task_dealloc(v49);
    swift_task_dealloc(v50);
    swift_task_dealloc(v51);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  else
  {
    v37 = *(_QWORD *)(v1 + 40);
    v38 = *(_QWORD *)(v37 + 16);
    *(_QWORD *)(v1 + 184) = v38;
    v39 = *(_QWORD *)(v37 + 24);
    *(_QWORD *)(v1 + 192) = v39;
    v40 = (_QWORD *)swift_task_alloc(dword_100639B34);
    *(_QWORD *)(v1 + 200) = v40;
    *v40 = v1;
    v40[1] = sub_1001AF904;
    return sub_10024BEF8(v38, v39);
  }
}

uint64_t sub_1001AF904(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 200);
  *(_QWORD *)(v3 + 208) = a1;
  *(_QWORD *)(v3 + 216) = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_1001B01BC;
  else
    v5 = sub_1001AF970;
  return swift_task_switch(v5, 0, 0);
}

void sub_1001AF970()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(void);
  void *v17;
  id v18;
  Swift::String v19;
  Swift::Bool v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  id v29;
  Swift::String v30;
  Swift::Bool v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  Swift::String v40;
  Swift::String v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  void *v51;
  Swift::String_optional v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;

  v1 = *(_QWORD *)(v0 + 216);
  v2 = decodeCertificateChain(fromBase64DER:)(*(_QWORD *)(v0 + 208));
  *(_QWORD *)(v0 + 224) = v2;
  v3 = *(_QWORD *)(v0 + 208);
  if (v1)
  {
    v4 = v1;
    swift_bridgeObjectRelease(v3);
LABEL_3:
    v5 = *(_QWORD *)(v0 + 112);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 104))(v5, enum case for DIPError.Code.internalError(_:), *(_QWORD *)(v0 + 96));
    swift_errorRetain(v4);
    v6 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v7 = type metadata accessor for DIPError(0);
    v8 = sub_100007F30();
    swift_allocError(v7, v8, 0, 0);
    v9 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000026, 0x8000000100551E40, v4, v5, 0, v6, 0xD000000000000085, 0x8000000100551E70, 0xD000000000000017, 0x8000000100551F00, 119);
    swift_willThrow(v9);
    swift_errorRelease(v4);
    v10 = *(_QWORD *)(v0 + 152);
    v12 = *(_QWORD *)(v0 + 136);
    v11 = *(_QWORD *)(v0 + 144);
    v13 = *(_QWORD *)(v0 + 112);
    v14 = *(_QWORD *)(v0 + 88);
    v15 = *(_QWORD *)(v0 + 64);
    swift_task_dealloc(*(_QWORD *)(v0 + 160));
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    v16 = *(void (**)(void))(v0 + 8);
LABEL_4:
    v16();
    return;
  }
  v17 = *(void **)(v0 + 176);
  swift_bridgeObjectRelease(v3);
  v18 = objc_msgSend(v17, "standardUserDefaults");
  v19._countAndFlagsBits = 0xD00000000000002BLL;
  v19._object = (void *)0x8000000100551F20;
  v20 = NSUserDefaults.internalBool(forKey:)(v19);

  if (v20)
  {
    v22 = defaultLogger()(v21);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.debug.getter(v23);
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Skipping merchantId - uid match in RP Encryption certificate", v25, 2u);
      swift_slowDealloc(v25, -1, -1);
    }
    v26 = *(void (**)(uint64_t, uint64_t))(v0 + 168);
    v27 = *(_QWORD *)(v0 + 144);
    v28 = *(_QWORD *)(v0 + 120);

    v26(v27, v28);
    goto LABEL_9;
  }
  if (!((unint64_t)v2 >> 62))
  {
    v49 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v2);
    if (v49)
      goto LABEL_15;
LABEL_29:
    swift_bridgeObjectRelease(v2);
LABEL_30:
    v69 = *(_QWORD *)(v0 + 104);
    v68 = *(_QWORD *)(v0 + 112);
    v70 = *(_QWORD *)(v0 + 96);
    swift_bridgeObjectRelease(v2);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v69 + 104))(v68, enum case for DIPError.Code.digitalPresentmentMissingUIDInCertificate(_:), v70);
    v71 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v72 = type metadata accessor for DIPError(0);
    v73 = sub_100007F30();
    v4 = swift_allocError(v72, v73, 0, 0);
    v66 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000002FLL, 0x8000000100551F50, 0, v68, 0, v71, 0xD000000000000085, 0x8000000100551E70, 0xD000000000000017, 0x8000000100551F00, 94);
    goto LABEL_31;
  }
  if (v2 < 0)
    v67 = v2;
  else
    v67 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  if (!_CocoaArrayWrapper.endIndex.getter(v67))
    goto LABEL_29;
LABEL_15:
  if ((v2 & 0xC000000000000001) != 0)
  {
    v50 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v2);
  }
  else
  {
    if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v50 = *(id *)(v2 + 32);
  }
  v51 = v50;
  swift_bridgeObjectRelease(v2);
  v52 = SecCertificateRef.uid()();

  if (!v52.value._object)
    goto LABEL_30;
  v53 = *(_QWORD *)(v0 + 184);
  v54 = *(void **)(v0 + 192);
  if (v52.value._countAndFlagsBits != v53 || v52.value._object != v54)
  {
    v59 = _stringCompareWithSmolCheck(_:_:expecting:)(v52.value._countAndFlagsBits, v52.value._object, v53, v54, 0);
    swift_bridgeObjectRelease(v52.value._object);
    if ((v59 & 1) != 0)
      goto LABEL_9;
    v61 = *(_QWORD *)(v0 + 104);
    v60 = *(_QWORD *)(v0 + 112);
    v62 = *(_QWORD *)(v0 + 96);
    swift_bridgeObjectRelease(v2);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v61 + 104))(v60, enum case for DIPError.Code.digitalPresentmentInvalidMerchantIDInCertificate(_:), v62);
    v63 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v64 = type metadata accessor for DIPError(0);
    v65 = sub_100007F30();
    v4 = swift_allocError(v64, v65, 0, 0);
    v66 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000025, 0x8000000100551F80, 0, v60, 0, v63, 0xD000000000000085, 0x8000000100551E70, 0xD000000000000017, 0x8000000100551F00, 97);
LABEL_31:
    swift_willThrow(v66);
    goto LABEL_3;
  }
  swift_bridgeObjectRelease(v52.value._object);
LABEL_9:
  v29 = objc_msgSend(*(id *)(v0 + 176), "standardUserDefaults");
  v30._countAndFlagsBits = 0xD000000000000028;
  v30._object = (void *)0x8000000100551FB0;
  v31 = NSUserDefaults.internalBool(forKey:)(v30);

  if (v31)
  {
    v33 = defaultLogger()(v32);
    v34 = Logger.logObject.getter(v33);
    v35 = static os_log_type_t.debug.getter(v34);
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "Skipping certificate validation of RP Encryption certificate", v36, 2u);
      swift_slowDealloc(v36, -1, -1);
    }
    v37 = *(void (**)(uint64_t, uint64_t))(v0 + 168);
    v38 = *(_QWORD *)(v0 + 136);
    v39 = *(_QWORD *)(v0 + 120);

    v37(v38, v39);
    v40._countAndFlagsBits = 0xD000000000000072;
    v40._object = (void *)0x80000001005520A0;
    v41._countAndFlagsBits = 0x3833636461346630;
    v41._object = (void *)0xE800000000000000;
    logMilestone(tag:description:)(v41, v40);
    v43 = *(_QWORD *)(v0 + 152);
    v42 = *(_QWORD *)(v0 + 160);
    v45 = *(_QWORD *)(v0 + 136);
    v44 = *(_QWORD *)(v0 + 144);
    v46 = *(_QWORD *)(v0 + 112);
    v47 = *(_QWORD *)(v0 + 88);
    v48 = *(_QWORD *)(v0 + 64);
    **(_QWORD **)(v0 + 32) = *(_QWORD *)(v0 + 224);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    v16 = *(void (**)(void))(v0 + 8);
    goto LABEL_4;
  }
  v56 = *(_QWORD *)(v0 + 56);
  v55 = *(_QWORD *)(v0 + 64);
  v57 = *(_QWORD *)(v0 + 48);
  DIPOIDVerifier.init()();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v56 + 104))(v55, enum case for DIPCertUsage.identityMerchantID(_:), v57);
  v58 = (_QWORD *)swift_task_alloc(async function pointer to DIPOIDVerifier.verifyChain(_:forUsage:)[1]);
  *(_QWORD *)(v0 + 232) = v58;
  *v58 = v0;
  v58[1] = sub_1001AFFDC;
  DIPOIDVerifier.verifyChain(_:forUsage:)(v2, *(_QWORD *)(v0 + 64));
}

uint64_t sub_1001AFFDC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)();
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 232);
  v6 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  v7 = *(_QWORD *)(*(_QWORD *)v2 + 56);
  *(_QWORD *)(*(_QWORD *)v2 + 240) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v8 = v4[11];
    v10 = v4[8];
    v9 = v4[9];
    v11 = v4[6];
    swift_bridgeObjectRelease(v4[28]);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v11);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v9);
    v12 = sub_1001B0320;
  }
  else
  {
    v13 = v4[11];
    v15 = v4[8];
    v14 = v4[9];
    v16 = v4[6];

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v15, v16);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v13, v14);
    v12 = sub_1001B00C8;
  }
  return swift_task_switch(v12, 0, 0);
}

uint64_t sub_1001B00C8()
{
  uint64_t v0;
  Swift::String v1;
  Swift::String v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1._countAndFlagsBits = 0xD000000000000074;
  v1._object = (void *)0x8000000100552020;
  v2._countAndFlagsBits = 0x6361383661633664;
  v2._object = (void *)0xE800000000000000;
  logMilestone(tag:description:)(v2, v1);
  v3._object = (void *)0x80000001005520A0;
  v4._countAndFlagsBits = 0x3833636461346630;
  v4._object = (void *)0xE800000000000000;
  v3._countAndFlagsBits = 0xD000000000000072;
  logMilestone(tag:description:)(v4, v3);
  v6 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 160);
  v8 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 144);
  v9 = *(_QWORD *)(v0 + 112);
  v10 = *(_QWORD *)(v0 + 88);
  v11 = *(_QWORD *)(v0 + 64);
  **(_QWORD **)(v0 + 32) = *(_QWORD *)(v0 + 224);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001B01BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 112);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 104))(v2, enum case for DIPError.Code.internalError(_:), *(_QWORD *)(v0 + 96));
  swift_errorRetain(v1);
  v3 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
  v4 = type metadata accessor for DIPError(0);
  v5 = sub_100007F30();
  swift_allocError(v4, v5, 0, 0);
  v6 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000026, 0x8000000100551E40, v1, v2, 0, v3, 0xD000000000000085, 0x8000000100551E70, 0xD000000000000017, 0x8000000100551F00, 119);
  swift_willThrow(v6);
  swift_errorRelease(v1);
  v7 = *(_QWORD *)(v0 + 152);
  v9 = *(_QWORD *)(v0 + 136);
  v8 = *(_QWORD *)(v0 + 144);
  v10 = *(_QWORD *)(v0 + 112);
  v11 = *(_QWORD *)(v0 + 88);
  v12 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 160));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001B0320()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 112);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 104))(v2, enum case for DIPError.Code.digitalPresentmentInvalidMerchantCertificateChain(_:), *(_QWORD *)(v0 + 96));
  swift_errorRetain(v1);
  v3 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
  v4 = type metadata accessor for DIPError(0);
  v5 = sub_100007F30();
  v6 = swift_allocError(v4, v5, 0, 0);
  v7 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000036, 0x8000000100551FE0, v1, v2, 0, v3, 0xD000000000000085, 0x8000000100551E70, 0xD000000000000017, 0x8000000100551F00, 109);
  swift_willThrow(v7);
  swift_errorRelease(v1);
  v8 = *(_QWORD *)(v0 + 112);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 104))(v8, enum case for DIPError.Code.internalError(_:), *(_QWORD *)(v0 + 96));
  swift_errorRetain(v6);
  v9 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
  swift_allocError(v4, v5, 0, 0);
  v10 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000026, 0x8000000100551E40, v6, v8, 0, v9, 0xD000000000000085, 0x8000000100551E70, 0xD000000000000017, 0x8000000100551F00, 119);
  swift_willThrow(v10);
  swift_errorRelease(v6);
  v11 = *(_QWORD *)(v0 + 152);
  v13 = *(_QWORD *)(v0 + 136);
  v12 = *(_QWORD *)(v0 + 144);
  v14 = *(_QWORD *)(v0 + 112);
  v15 = *(_QWORD *)(v0 + 88);
  v16 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 160));
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001B053C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[3] = v0;
  v2 = type metadata accessor for DIPError.Code(0);
  v1[4] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[5] = v3;
  v1[6] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001B059C, 0, 0);
}

uint64_t sub_1001B059C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 24) + 32);
  *(_QWORD *)(v0 + 56) = v1;
  if (v1)
  {
    v2 = async function pointer to Task.value.getter[1];
    swift_retain(v1);
    v3 = (_QWORD *)swift_task_alloc(v2);
    *(_QWORD *)(v0 + 64) = v3;
    v4 = sub_100004828((uint64_t *)&unk_100633630);
    v5 = sub_100004828((uint64_t *)&unk_100633430);
    *v3 = v0;
    v3[1] = sub_1001B073C;
    return Task.value.getter(v0 + 16, v1, v4, v5, &protocol self-conformance witness table for Error);
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 48);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 104))(v7, enum case for DIPError.Code.internalError(_:), *(_QWORD *)(v0 + 32));
    v8 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v9 = type metadata accessor for DIPError(0);
    v10 = sub_100007F30();
    swift_allocError(v9, v10, 0, 0);
    v11 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000004BLL, 0x8000000100552160, 0, v7, 0, v8, 0xD000000000000085, 0x8000000100551E70, 0xD000000000000010, 0x80000001005521B0, 128);
    swift_willThrow(v11);
    swift_task_dealloc(*(_QWORD *)(v0 + 48));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1001B073C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1001B07E4;
  else
    v3 = sub_1001B07A0;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001B07A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 56));
  v2 = *(_QWORD *)(v0 + 16);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

uint64_t sub_1001B07E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 104))(v3, enum case for DIPError.Code.internalError(_:), *(_QWORD *)(v0 + 32));
  swift_errorRetain(v1);
  v4 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
  v5 = type metadata accessor for DIPError(0);
  v6 = sub_100007F30();
  swift_allocError(v5, v6, 0, 0);
  v7 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, v1, v3, 0, v4, 0xD000000000000085, 0x8000000100551E70, 0xD000000000000010, 0x80000001005521B0, 133);
  swift_willThrow(v7);
  swift_errorRelease(v1);
  swift_release(v2);
  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001B08FC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocClassInstance(v0, 56, 7);
}

uint64_t type metadata accessor for DigitalPresentmentEncryptionCertificateFetcher()
{
  return objc_opt_self(_TtC8coreidvd46DigitalPresentmentEncryptionCertificateFetcher);
}

uint64_t sub_1001B0958()
{
  _QWORD *v0;

  _s8coreidvd24DigitalPresentmentHelperVwxx_0(v0 + 2);
  swift_release(v0[7]);
  swift_release(v0[8]);
  return swift_deallocClassInstance(v0, 72, 7);
}

uint64_t type metadata accessor for IdentityProofingExpirationActionProvider()
{
  return objc_opt_self(_TtC8coreidvd40IdentityProofingExpirationActionProvider);
}

uint64_t sub_1001B09AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  NSString v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v53 = a2;
  v52 = a1;
  v5 = type metadata accessor for Logger(0);
  v49 = *(_QWORD *)(v5 - 8);
  v50 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100004828(&qword_1006377F0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v49 - v12;
  v14 = sub_100004828((uint64_t *)&unk_100633958);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v49 - v18;
  v51 = v3;
  v20 = *(_QWORD *)(v3 + 64);
  sub_100038B24(a3, (uint64_t)v13, &qword_1006377F0);
  v21 = type metadata accessor for ActionRequest(0);
  v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48);
  if (v22(v13, 1, v21) == 1)
  {
    swift_retain(v20);
    v23 = &qword_1006377F0;
    v24 = (uint64_t)v13;
LABEL_5:
    sub_100008030(v24, v23);
    v26 = 0;
    v27 = 0;
    goto LABEL_7;
  }
  sub_100038B24((uint64_t)&v13[*(int *)(v21 + 20)], (uint64_t)v19, (uint64_t *)&unk_100633958);
  swift_retain(v20);
  sub_100035DAC((uint64_t)v13, type metadata accessor for ActionRequest);
  v25 = type metadata accessor for PendingActionContext(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v19, 1, v25) == 1)
  {
    v23 = (uint64_t *)&unk_100633958;
    v24 = (uint64_t)v19;
    goto LABEL_5;
  }
  v28 = *((_QWORD *)v19 + 26);
  v27 = *((_QWORD *)v19 + 27);
  swift_bridgeObjectRetain(v27);
  v29 = (uint64_t)v19;
  v26 = v28;
  sub_100035DAC(v29, type metadata accessor for PendingActionContext);
LABEL_7:
  sub_100038B24(a3, (uint64_t)v11, &qword_1006377F0);
  if (v22(v11, 1, v21) == 1)
  {
    sub_100008030((uint64_t)v11, &qword_1006377F0);
    v30 = 0;
    v31 = 0;
    v32 = v53;
  }
  else
  {
    sub_100038B24((uint64_t)&v11[*(int *)(v21 + 20)], (uint64_t)v17, (uint64_t *)&unk_100633958);
    sub_100035DAC((uint64_t)v11, type metadata accessor for ActionRequest);
    v33 = type metadata accessor for PendingActionContext(0);
    v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v17, 1, v33);
    v32 = v53;
    if (v34 == 1)
    {
      sub_100008030((uint64_t)v17, (uint64_t *)&unk_100633958);
      v30 = 0;
      v31 = 0;
    }
    else
    {
      v30 = *((_QWORD *)v17 + 28);
      v31 = *((_QWORD *)v17 + 29);
      swift_bridgeObjectRetain(v31);
      sub_100035DAC((uint64_t)v17, type metadata accessor for PendingActionContext);
    }
  }
  v35 = v30;
  v36 = v52;
  sub_1004495F4(v26, v27, v35, v31, v52, v32, 1);
  swift_release(v20);
  swift_bridgeObjectRelease(v31);
  v37 = swift_bridgeObjectRelease(v27);
  v38 = defaultLogger()(v37);
  v39 = Logger.logObject.getter(v38);
  v40 = static os_log_type_t.debug.getter(v39);
  if (os_log_type_enabled(v39, v40))
  {
    v41 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v41 = 0;
    _os_log_impl((void *)&_mh_execute_header, v39, v40, "Attempting to start clearing the proofing session and the created credential", v41, 2u);
    swift_slowDealloc(v41, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v49 + 8))(v7, v50);
  v42 = *(_QWORD *)(v51 + 56);
  swift_retain(v42);
  sub_10038FC94(v36, v32, 0, 1);
  swift_release(v42);
  v43 = type metadata accessor for IdentityManagementSessionDelegate();
  v44 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v45 = String._bridgeToObjectiveC()();
  v54 = v43;
  v46 = sub_100004828((uint64_t *)&unk_10063E570);
  v47 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v54, v46);
  objc_msgSend(v44, "postNotificationName:object:", v45, v47);

  return swift_unknownObjectRelease(v47);
}

void sub_1001B0E30(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  _QWORD *v17;
  void *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD aBlock[5];
  _QWORD *v22;

  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)aBlock - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = defaultLogger()(v10);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.debug.getter(v14);
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Setting up IdentityProvisioningStreamListener", v16, 2u);
    swift_slowDealloc(v16, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  v17 = (_QWORD *)swift_allocObject(&unk_10060A8C8, 40, 7);
  v17[2] = a2;
  v17[3] = a3;
  v17[4] = a4;
  aBlock[4] = sub_1001B144C;
  v22 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000B6968;
  aBlock[3] = &unk_10060A8E0;
  v18 = _Block_copy(aBlock);
  v19 = v22;
  swift_bridgeObjectRetain(a3);
  swift_retain(a4);
  swift_release(v19);
  v20 = String.utf8CString.getter(a2, a3);
  xpc_set_event_stream_handler((const char *)(v20 + 32), a1, v18);
  swift_release(v20);
  _Block_release(v18);
}

uint64_t sub_1001B0FE8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t (*v25)(char *, uint64_t);
  uint64_t v26;
  const char *v27;
  const char *string;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  char *v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  void *v47;
  id v48;
  Swift::String v49;
  Swift::Bool v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v58;
  char *v59;

  v58 = a4;
  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v59 = (char *)&v58 - v11;
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v58 - v13;
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v58 - v16;
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v58 - v19;
  v21 = defaultLogger()(v18);
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.debug.getter(v22);
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v24 = 0;
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "Received an event for IdentityProvisioningStreamListener", v24, 2u);
    swift_slowDealloc(v24, -1, -1);
  }

  v25 = *(uint64_t (**)(char *, uint64_t))(v6 + 8);
  v26 = v25(v20, v5);
  v27 = (const char *)XPC_EVENT_KEY_NAME.getter(v26);
  string = xpc_dictionary_get_string(a1, v27);
  if (string)
  {
    v29 = strcmp(string, "Identity Provisioning Complete");
    if ((_DWORD)v29)
    {
      v30 = defaultLogger()(v29);
      v31 = Logger.logObject.getter(v30);
      v32 = static os_log_type_t.debug.getter(v31);
      if (os_log_type_enabled(v31, v32))
      {
        v33 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v33 = 0;
        _os_log_impl((void *)&_mh_execute_header, v31, v32, "Invalid event name. Cannot perform Post Provisioning Cleanup", v33, 2u);
        swift_slowDealloc(v33, -1, -1);
      }

      v34 = v9;
    }
    else
    {
      v39 = sub_1001B151C(a1);
      if ((unint64_t)v40 >> 60 == 15)
      {
        v41 = defaultLogger()(v39);
        v42 = Logger.logObject.getter(v41);
        v43 = static os_log_type_t.debug.getter(v42);
        if (os_log_type_enabled(v42, v43))
        {
          v44 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v44 = 0;
          _os_log_impl((void *)&_mh_execute_header, v42, v43, "Unable to retrieve the data from the xpc event. Cannot perform Post Provisioning Cleanup", v44, 2u);
          swift_slowDealloc(v44, -1, -1);
        }

        v34 = v14;
      }
      else
      {
        v45 = v39;
        v46 = v40;
        v47 = (void *)objc_opt_self(NSUserDefaults);
        v48 = objc_msgSend(v47, "standardUserDefaults", v58);
        v49._object = (void *)0x8000000100552260;
        v49._countAndFlagsBits = 0xD000000000000024;
        v50 = NSUserDefaults.internalBool(forKey:)(v49);

        if (!v50)
        {
          sub_1004063D8(v45, v46);
          return sub_100007F78(v45, (unint64_t)v46);
        }
        v52 = v59;
        v53 = defaultLogger()(v51);
        v54 = Logger.logObject.getter(v53);
        v55 = static os_log_type_t.debug.getter(v54);
        if (os_log_type_enabled(v54, v55))
        {
          v56 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v56 = 0;
          _os_log_impl((void *)&_mh_execute_header, v54, v55, "Internal Setting to ignore provisioning completion has been enabled. Will ignore the incoming provisioning stream", v56, 2u);
          swift_slowDealloc(v56, -1, -1);
        }
        sub_100007F78(v45, (unint64_t)v46);

        v34 = v52;
      }
    }
  }
  else
  {
    v35 = defaultLogger()(0);
    v36 = Logger.logObject.getter(v35);
    v37 = static os_log_type_t.debug.getter(v36);
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v38 = 0;
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "provisioning event doesn't exist", v38, 2u);
      swift_slowDealloc(v38, -1, -1);
    }

    v34 = v17;
  }
  return v25(v34, v5);
}

uint64_t sub_1001B1420()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001B144C(void *a1)
{
  uint64_t *v1;

  return sub_1001B0FE8(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1001B1458(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001B1468(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1001B1470(_BYTE *__src, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  if (!a2)
    return 0;
  if (a2 <= 14)
    return sub_100111B50(__src, &__src[a2]);
  v4 = type metadata accessor for __DataStorage(0);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  __DataStorage.init(bytes:length:)(__src, a2);
  if ((unint64_t)a2 < 0x7FFFFFFF)
    return a2 << 32;
  v6 = type metadata accessor for Data.RangeReference(0);
  result = swift_allocObject(v6, 32, 7);
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t sub_1001B151C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  xpc_type_t type;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *data;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  size_t length;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&length - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&length - v7;
  type = xpc_get_type(a1);
  v10 = XPC_TYPE_DICTIONARY.getter();
  if (type != (xpc_type_t)v10)
  {
    v11 = defaultLogger()(v10);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Event Identity Provisioning Complete is not of type dictionary. Cannot perform Post Provisioning Cleanup", v14, 2u);
      swift_slowDealloc(v14, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    return 0;
  }
  length = 0;
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(PKPassLibraryPendingProvisioningFinishedReceiptKey);
  v18 = v17;
  v19 = String.utf8CString.getter(v16, v17);
  swift_bridgeObjectRelease(v18);
  data = xpc_dictionary_get_data(a1, (const char *)(v19 + 32), &length);
  v21 = swift_release(v19);
  if (!data)
  {
    v22 = defaultLogger()(v21);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Unable to get the receipt data for the key PKPassLibraryPendingProvisioningFinishedReceiptKey. Cannot perform Post Provisioning Cleanup", v25, 2u);
      swift_slowDealloc(v25, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    return 0;
  }
  return sub_1001B1470(data, length);
}

uint64_t destroy for IdentityProvisioningStreamListener(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return swift_release(*(_QWORD *)(a1 + 16));
}

_QWORD *_s8coreidvd34IdentityProvisioningStreamListenerVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain(v3);
  swift_retain(v4);
  return a1;
}

_QWORD *assignWithCopy for IdentityProvisioningStreamListener(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[2];
  v7 = a1[2];
  a1[2] = v6;
  swift_retain(v6);
  swift_release(v7);
  return a1;
}

_QWORD *assignWithTake for IdentityProvisioningStreamListener(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;

  *a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(a1[1]);
  v4 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  swift_release(v4);
  return a1;
}

ValueMetadata *type metadata accessor for IdentityProvisioningStreamListener()
{
  return &type metadata for IdentityProvisioningStreamListener;
}

uint64_t sub_1001B1870()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjCClassFromMetadata;
  id v10;
  NSString v11;
  NSString v12;
  id v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t result;
  uint64_t v16;

  v0 = type metadata accessor for URL(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100004828(&qword_100630A48);
  __chkstk_darwin(v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000352D8(v0, qword_1006377F8);
  v7 = sub_1000352C0(v0, (uint64_t)qword_1006377F8);
  v8 = type metadata accessor for AsyncCoreDataStore(0);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v8);
  v10 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v11 = String._bridgeToObjectiveC()();
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(v10, "URLForResource:withExtension:", v11, v12);

  if (v13)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v13);

    v14 = *(void (**)(char *, char *, uint64_t))(v1 + 32);
    v14(v6, v3, v0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1 + 56))(v6, 0, 1, v0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 48))(v6, 1, v0);
    if ((_DWORD)result != 1)
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v14)(v7, v6, v0);
  }
  else
  {
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(v6, 1, 1, v0);
  }
  __break(1u);
  return result;
}

uint64_t sub_1001B1A6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  char *v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v35 = a1;
  v1 = type metadata accessor for Logger(0);
  __chkstk_darwin(v1);
  v2 = type metadata accessor for AsyncCoreDataStore.StoreType(0);
  v33 = *(_QWORD *)(v2 - 8);
  v34 = v2;
  __chkstk_darwin(v2);
  v32 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)&v30 - v10;
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v30 - v13;
  __chkstk_darwin(v12);
  v16 = (char *)&v30 - v15;
  sub_10048682C((uint64_t)&v30 - v15);
  v17 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v16, v4);
  static URL.libraryDirectory.getter(v17);
  URL.appendingPathComponent(_:isDirectory:)(0x6476646965726F63, 0xE800000000000000, 1);
  v18 = *(void (**)(char *, uint64_t))(v5 + 8);
  v18(v8, v4);
  v19 = v14;
  URL.appendingPathComponent(_:)(0xD000000000000018, 0x80000001005522C0);
  v18(v11, v4);
  if (qword_10062F4B8 != -1)
    swift_once(&qword_10062F4B8, sub_1001B1870);
  v20 = sub_1000352C0(v4, (uint64_t)qword_1006377F8);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v21(v11, v20, v4);
  v21(v8, (uint64_t)v14, v4);
  v23 = v32;
  v22 = v33;
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 16);
  v31 = v19;
  v26 = v34;
  v25 = v35;
  v24(v32, v35, v34);
  v27 = type metadata accessor for AsyncCoreDataStore(0);
  swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
  v28 = AsyncCoreDataStore.init(persistentStoreName:modelURL:databaseURL:storeType:urlFileProtection:)(0x6476646965726F63, 0xEE00656D6F69622DLL, v11, v8, v23, NSURLFileProtectionComplete);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v25, v26);
  v18(v31, v4);
  result = v36;
  *(_QWORD *)(v36 + 16) = v28;
  return result;
}

uint64_t type metadata accessor for DaemonBiomeCoreDataStore()
{
  return objc_opt_self(_TtC8coreidvd24DaemonBiomeCoreDataStore);
}

uint64_t sub_1001B1D98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(_QWORD *)(a3 + 16))
  {
    swift_bridgeObjectRetain(a3);
    __asm { BR              X8 }
  }
  return 0;
}

uint64_t sub_1001B2720(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t *v11;
  uint64_t i;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;

  v3 = a3[2];
  if (!v3)
    return 0;
  v7 = a3[4];
  v8 = a3[5];
  if (v7 == a1 && v8 == a2)
    return 1;
  result = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, a1, a2, 0);
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v11 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v13 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v14 = *(v11 - 1);
    v15 = *v11;
    v16 = v14 == a1 && v15 == a2;
    if (v16 || (_stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, a1, a2, 0) & 1) != 0)
      return 1;
    result = 0;
    v11 += 2;
    if (v13 == v3)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001B27E4(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
  {
    swift_bridgeObjectRetain(a2);
    __asm { BR              X9 }
  }
  return 0;
}

uint64_t sub_1001B2BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(a2 + 32));
  v7 = v6;
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v5 == v8 && v7 == v9)
  {
LABEL_20:
    swift_bridgeObjectRelease_n(v7, 2);
    return 1;
  }
  v11 = v9;
  v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v8, v9, 0);
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRelease(v7);
  result = swift_bridgeObjectRelease(v11);
  if ((v12 & 1) != 0)
  {
LABEL_7:
    swift_bridgeObjectRelease(a2);
    return 1;
  }
  if (v2 == 1)
  {
LABEL_17:
    swift_bridgeObjectRelease(a2);
    return 0;
  }
  v14 = 5;
  while (1)
  {
    v15 = v14 - 3;
    if (__OFADD__(v14 - 4, 1))
      break;
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(a2 + 8 * v14));
    v7 = v17;
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    if (v16 == v18 && v7 == v19)
    {
      swift_bridgeObjectRelease(a2);
      goto LABEL_20;
    }
    v21 = v19;
    v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v7, v18, v19, 0);
    swift_bridgeObjectRelease(v7);
    result = swift_bridgeObjectRelease(v21);
    if ((v22 & 1) != 0)
      goto LABEL_7;
    ++v14;
    if (v15 == v2)
      goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001B2D24(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  char v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  id v15;
  char v16;
  uint64_t v17;

  if ((unint64_t)a2 >> 62)
    goto LABEL_20;
  v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a2);
  for (; v3; v3 = _CocoaArrayWrapper.endIndex.getter(v17))
  {
    v4 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      v5 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
LABEL_5:
      v6 = v5;
      sub_1001B6438();
      v7 = static NSObject.== infix(_:_:)(v6);

      if ((v7 & 1) != 0)
      {
LABEL_6:
        swift_bridgeObjectRelease(a2);
        return 1;
      }
      if (v3 == 1)
        goto LABEL_18;
      if (v4)
        break;
      v4 = 5;
      while (1)
      {
        v14 = v4 - 3;
        if (__OFADD__(v4 - 4, 1))
          break;
        v15 = *(id *)(a2 + 8 * v4);
        v16 = static NSObject.== infix(_:_:)(v15);

        if ((v16 & 1) != 0)
          goto LABEL_6;
        ++v4;
        if (v14 == v3)
          goto LABEL_18;
      }
      __break(1u);
    }
    v9 = 1;
    while (1)
    {
      v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v9, a2);
      v11 = v9 + 1;
      if (__OFADD__(v9, 1))
        break;
      v12 = v10;
      v13 = static NSObject.== infix(_:_:)(v10);
      swift_unknownObjectRelease(v12);
      if ((v13 & 1) != 0)
        goto LABEL_6;
      ++v9;
      if (v11 == v3)
        goto LABEL_18;
    }
    __break(1u);
LABEL_20:
    if (a2 < 0)
      v17 = a2;
    else
      v17 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
  }
LABEL_18:
  swift_bridgeObjectRelease(a2);
  return 0;
}

uint64_t sub_1001B2E98@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, _QWORD, uint64_t);
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t *v48;

  v47 = a1;
  v3 = type metadata accessor for DIPError.Code(0);
  v42 = *(_QWORD *)(v3 - 8);
  v4 = __chkstk_darwin(v3);
  v46 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v4);
  v45 = (char *)&v41 - v7;
  v8 = __chkstk_darwin(v6);
  v44 = (char *)&v41 - v9;
  __chkstk_darwin(v8);
  v43 = (char *)&v41 - v10;
  v11 = sub_100004828(&qword_10062FC40);
  __chkstk_darwin(v11);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for COSESignatureValidator(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v41 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v19 = (char *)&v41 - v18;
  v20 = sub_100004828(&qword_100635F70);
  __chkstk_darwin(v20);
  v22 = (char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for CBOREncoder(0);
  v24 = swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  v25 = CBOREncoder.init()(v24);
  v48 = a2;
  *a2 = v25;
  v26 = enum case for ISO18013PresentmentType.physical(_:);
  v27 = type metadata accessor for ISO18013PresentmentType(0);
  v28 = *(_QWORD *)(v27 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 104))(v22, v26, v27);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v22, 0, 1, v27);
  swift_retain(v25);
  v29 = v22;
  v30 = v47;
  CBOREncoder.presentmentType.setter(v29);
  swift_release(v25);
  sub_100038B24(v30, (uint64_t)v13, &qword_10062FC40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_100008030((uint64_t)v13, &qword_10062FC40);
    v31 = v43;
    v32 = *(void (**)(char *, _QWORD, uint64_t))(v42 + 104);
    v32(v43, enum case for DIPError.Code.documentReaderUnknownDeviceAuthAlgorithm(_:), v3);
    v33 = v44;
    v32(v44, enum case for DIPError.Code.documentReaderInvalidDeviceAuthPublicKey(_:), v3);
    v34 = v45;
    v32(v45, enum case for DIPError.Code.documentReaderMisformattedDeviceAuthSignature(_:), v3);
    v35 = v46;
    v32(v46, enum case for DIPError.Code.documentReaderInvalidDeviceAuthSignature(_:), v3);
    v36 = v41;
    COSESignatureValidator.init(errorCodeUnknownAlgorithm:errorCodeInvalidPublicKey:errorCodeMisformattedSignature:errorCodeInvalidSignature:)(v31, v33, v34, v35);
    sub_100008030(v30, &qword_10062FC40);
    v37 = type metadata accessor for ISO18013DeviceAuthenticator(0);
    return (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))((char *)v48 + *(int *)(v37 + 20), v36, v14);
  }
  else
  {
    sub_100008030(v30, &qword_10062FC40);
    v39 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v39(v19, v13, v14);
    v40 = type metadata accessor for ISO18013DeviceAuthenticator(0);
    return ((uint64_t (*)(char *, char *, uint64_t))v39)((char *)v48 + *(int *)(v40 + 20), v19, v14);
  }
}

uint64_t type metadata accessor for ISO18013DeviceAuthenticator(uint64_t a1)
{
  uint64_t result;

  result = qword_100637948;
  if (!qword_100637948)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ISO18013DeviceAuthenticator);
  return result;
}

uint64_t sub_1001B325C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint64_t (*v60)(char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t (*v79)(unint64_t, char *, uint64_t);
  unint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  void (*v86)(unint64_t, uint64_t);
  int v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  void (*v94)(char *, uint64_t);
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  int v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(char *, uint64_t);
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  NSObject *v116;
  os_log_type_t v117;
  uint8_t *v118;
  char *v119;
  id v120;
  Swift::String v121;
  Swift::Bool v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  NSObject *v126;
  os_log_type_t v127;
  uint8_t *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  id v141;
  Swift::String v142;
  Swift::Bool v143;
  uint64_t v144;
  char *v145;
  unint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  NSObject *v165;
  os_log_type_t v166;
  _BOOL4 v167;
  uint64_t v168;
  uint8_t *v169;
  uint8_t *v170;
  uint64_t v171;
  unint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t (*v181)(char *, uint64_t);
  char *v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  char *v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  char *v195;
  char *v196;
  char *v197;
  char *v198;
  char *v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  unint64_t v204;
  uint64_t v205;
  uint64_t (*v206)(unint64_t, uint64_t);
  uint64_t v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  uint64_t v213;

  v192 = a3;
  v183 = a2;
  v4 = type metadata accessor for COSE_Sign1(0);
  v201 = *(_QWORD *)(v4 - 8);
  v202 = v4;
  __chkstk_darwin(v4);
  v176 = (char *)&v173 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v186 = type metadata accessor for ISO18013MobileSecurityObject.DeviceKeyInfo(0);
  v185 = *(_QWORD *)(v186 - 8);
  __chkstk_darwin(v186);
  v184 = (char *)&v173 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = type metadata accessor for COSEKey(0);
  v177 = *(_QWORD *)(v178 - 8);
  __chkstk_darwin(v178);
  v187 = (uint64_t)&v173 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DIPError.Code(0);
  v9 = *(_QWORD *)(v8 - 8);
  v209 = v8;
  v210 = v9;
  __chkstk_darwin(v8);
  v208 = (char *)&v173 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100004828(&qword_100635758);
  v12 = __chkstk_darwin(v11);
  v180 = (char *)&v173 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v190 = (char *)&v173 - v15;
  __chkstk_darwin(v14);
  v195 = (char *)&v173 - v16;
  v17 = sub_100004828(&qword_1006378B0);
  v18 = __chkstk_darwin(v17);
  v197 = (char *)&v173 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v18);
  v200 = (char *)&v173 - v21;
  __chkstk_darwin(v20);
  v206 = (uint64_t (*)(unint64_t, uint64_t))((char *)&v173 - v22);
  v207 = type metadata accessor for ISO18013Response.DeviceAuth(0);
  v205 = *(_QWORD *)(v207 - 8);
  v23 = __chkstk_darwin(v207);
  v179 = (char *)&v173 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v23);
  v196 = (char *)&v173 - v26;
  v27 = __chkstk_darwin(v25);
  v189 = (char *)&v173 - v28;
  v29 = __chkstk_darwin(v27);
  v198 = (char *)&v173 - v30;
  v31 = __chkstk_darwin(v29);
  v194 = (char *)&v173 - v32;
  __chkstk_darwin(v31);
  v34 = (char *)&v173 - v33;
  v35 = sub_100004828(&qword_100635750);
  __chkstk_darwin(v35);
  v37 = (char *)&v173 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v211 = type metadata accessor for ISO18013Response.DeviceSigned(0);
  v38 = *(_QWORD *)(v211 - 8);
  v39 = __chkstk_darwin(v211);
  v199 = (char *)&v173 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __chkstk_darwin(v39);
  v204 = (unint64_t)&v173 - v42;
  __chkstk_darwin(v41);
  v212 = (char *)&v173 - v43;
  v213 = type metadata accessor for Logger(0);
  v44 = *(_QWORD *)(v213 - 8);
  v45 = __chkstk_darwin(v213);
  v203 = (char *)&v173 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __chkstk_darwin(v45);
  v175 = (char *)&v173 - v48;
  v49 = __chkstk_darwin(v47);
  v182 = (char *)&v173 - v50;
  v51 = __chkstk_darwin(v49);
  v188 = (char *)&v173 - v52;
  v53 = __chkstk_darwin(v51);
  v55 = (char *)&v173 - v54;
  v56 = defaultLogger()(v53);
  v57 = Logger.logObject.getter(v56);
  v58 = static os_log_type_t.debug.getter(v57);
  if (os_log_type_enabled(v57, v58))
  {
    v59 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v59 = 0;
    _os_log_impl((void *)&_mh_execute_header, v57, v58, "ISO18013DeviceAuthenticator validating document", v59, 2u);
    swift_slowDealloc(v59, -1, -1);
  }

  v60 = *(uint64_t (**)(char *, uint64_t))(v44 + 8);
  v61 = v60(v55, v213);
  v191 = a1;
  ISO18013Response.Document.deviceSigned.getter(v61);
  v62 = v211;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v37, 1, v211) == 1)
  {
    sub_100008030((uint64_t)v37, &qword_100635750);
    v64 = v209;
    v63 = v210;
    v65 = v208;
    (*(void (**)(char *, _QWORD, uint64_t))(v210 + 104))(v208, enum case for DIPError.Code.documentReaderMalformedDeviceAuthStructure(_:), v209);
    v66 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v67 = type metadata accessor for DIPError(0);
    v68 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    v69 = swift_allocError(v67, v68, 0, 0);
    v70 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000003FLL, 0x80000001005522E0, 0, v65, 0, v66, 0xD000000000000075, 0x8000000100552320, 0xD00000000000002ELL, 0x80000001005523A0, 55);
    swift_willThrow(v70);
    goto LABEL_25;
  }
  v181 = v60;
  v71 = v212;
  v72 = (*(uint64_t (**)(char *, char *, uint64_t))(v38 + 32))(v212, v37, v62);
  v73 = ISO18013Response.DeviceSigned.deviceAuth.getter(v72);
  v74 = (uint64_t)v206;
  ISO18013Response.DeviceAuth.deviceMac.getter(v73);
  v75 = *(void (**)(char *, uint64_t))(v205 + 8);
  v76 = v207;
  v75(v34, v207);
  v77 = type metadata accessor for COSE_Mac0(0);
  v205 = *(_QWORD *)(*(_QWORD *)(v77 - 8) + 48);
  v78 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v205)(v74, 1, v77);
  sub_100008030(v74, &qword_1006378B0);
  v79 = *(uint64_t (**)(unint64_t, char *, uint64_t))(v38 + 16);
  v80 = v204;
  v81 = v79(v204, v71, v62);
  if (v78 == 1)
  {
    v174 = v77;
    v82 = v194;
    v83 = ISO18013Response.DeviceSigned.deviceAuth.getter(v81);
    v84 = v80;
    v85 = (uint64_t)v195;
    ISO18013Response.DeviceAuth.deviceSignature.getter(v83);
    v75(v82, v76);
    v86 = *(void (**)(unint64_t, uint64_t))(v38 + 8);
    v86(v84, v62);
    v87 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v201 + 48))(v85, 1, v202);
    v88 = sub_100008030(v85, &qword_100635758);
    if (v87 == 1)
    {
      v64 = v209;
      v63 = v210;
      v65 = v208;
      (*(void (**)(char *, _QWORD, uint64_t))(v210 + 104))(v208, enum case for DIPError.Code.documentReaderMalformedDeviceAuthStructure(_:), v209);
      v89 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
      v90 = type metadata accessor for DIPError(0);
      v91 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
      v69 = swift_allocError(v90, v91, 0, 0);
      v92 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000002CLL, 0x80000001005524C0, 0, v65, 0, v89, 0xD000000000000075, 0x8000000100552320, 0xD00000000000002ELL, 0x80000001005523A0, 59);
LABEL_23:
      swift_willThrow(v92);
      v86((unint64_t)v212, v62);
      v60 = v181;
      goto LABEL_25;
    }
    v94 = v75;
    v206 = (uint64_t (*)(unint64_t, uint64_t))v86;
    v95 = v62;
    v96 = v198;
    v77 = v174;
  }
  else
  {
    v93 = v80;
    v94 = v75;
    v206 = *(uint64_t (**)(unint64_t, uint64_t))(v38 + 8);
    v88 = v206(v93, v62);
    v95 = v62;
    v96 = v198;
  }
  v97 = v212;
  v98 = ISO18013Response.DeviceSigned.deviceAuth.getter(v88);
  v99 = (uint64_t)v200;
  ISO18013Response.DeviceAuth.deviceMac.getter(v98);
  v100 = v207;
  v94(v96, v207);
  v101 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v205)(v99, 1, v77);
  sub_100008030(v99, &qword_1006378B0);
  v102 = v199;
  v103 = v79((unint64_t)v199, v97, v95);
  v62 = v95;
  if (v101 == 1)
  {
    v104 = v206((unint64_t)v102, v95);
    v105 = v94;
  }
  else
  {
    v106 = v189;
    v107 = ISO18013Response.DeviceSigned.deviceAuth.getter(v103);
    v108 = (uint64_t)v190;
    ISO18013Response.DeviceAuth.deviceSignature.getter(v107);
    v94(v106, v100);
    v86 = (void (*)(unint64_t, uint64_t))v206;
    v206((unint64_t)v102, v95);
    LODWORD(v106) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v201 + 48))(v108, 1, v202);
    v104 = sub_100008030(v108, &qword_100635758);
    v105 = v94;
    if ((_DWORD)v106 != 1)
    {
      v64 = v209;
      v63 = v210;
      v65 = v208;
      (*(void (**)(char *, _QWORD, uint64_t))(v210 + 104))(v208, enum case for DIPError.Code.documentReaderMalformedDeviceAuthStructure(_:), v209);
      v135 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
      v136 = type metadata accessor for DIPError(0);
      v137 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
      v69 = swift_allocError(v136, v137, 0, 0);
      v92 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000054, 0x8000000100552560, 0, v65, 0, v135, 0xD000000000000075, 0x8000000100552320, 0xD00000000000002ELL, 0x80000001005523A0, 63);
      goto LABEL_23;
    }
  }
  v109 = v196;
  v110 = (uint64_t)v212;
  v111 = ISO18013Response.DeviceSigned.deviceAuth.getter(v104);
  v112 = (uint64_t)v197;
  ISO18013Response.DeviceAuth.deviceMac.getter(v111);
  v105(v109, v100);
  LODWORD(v109) = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v205)(v112, 1, v77);
  v113 = sub_100008030(v112, &qword_1006378B0);
  v64 = v209;
  if ((_DWORD)v109 != 1)
  {
    v114 = v188;
    v115 = defaultLogger()(v113);
    v116 = Logger.logObject.getter(v115);
    v117 = static os_log_type_t.debug.getter(v116);
    if (os_log_type_enabled(v116, v117))
    {
      v118 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v118 = 0;
      _os_log_impl((void *)&_mh_execute_header, v116, v117, "ISO18013DeviceAuthenticator device signed structure contains a device mac.", v118, 2u);
      swift_slowDealloc(v118, -1, -1);
    }

    v119 = v114;
    v60 = v181;
    v181(v119, v213);
    v120 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v121._object = (void *)0x80000001005524F0;
    v121._countAndFlagsBits = 0xD00000000000002ELL;
    v122 = NSUserDefaults.internalBool(forKey:)(v121);

    v63 = v210;
    if (!v122)
    {
      v65 = v208;
      (*(void (**)(char *, _QWORD, uint64_t))(v210 + 104))(v208, enum case for DIPError.Code.documentReaderDeviceMacUnsupported(_:), v64);
      v151 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
      v152 = type metadata accessor for DIPError(0);
      v153 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
      v69 = swift_allocError(v152, v153, 0, 0);
      v154 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000033, 0x8000000100552520, 0, v65, 0, v151, 0xD000000000000075, 0x8000000100552320, 0xD00000000000002ELL, 0x80000001005523A0, 75);
      swift_willThrow(v154);
      v206((unint64_t)v212, v62);
LABEL_25:
      v141 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
      v142._countAndFlagsBits = 0xD000000000000038;
      v142._object = (void *)0x80000001005523D0;
      v143 = NSUserDefaults.internalBool(forKey:)(v142);

      if (v143)
      {
        v145 = v203;
        defaultLogger()(v144);
        DIPLogError(_:message:log:)(v69, 0xD000000000000066, 0x8000000100552450, v145);
        swift_errorRelease(v69);
        return v60(v145, v213);
      }
      else
      {
        (*(void (**)(char *, _QWORD, uint64_t))(v63 + 104))(v65, enum case for DIPError.Code.internalError(_:), v64);
        swift_errorRetain(v69);
        v147 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
        v148 = type metadata accessor for DIPError(0);
        v149 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
        swift_allocError(v148, v149, 0, 0);
        v150 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000037, 0x8000000100552410, v69, v65, 0, v147, 0xD000000000000075, 0x8000000100552320, 0xD00000000000002ELL, 0x80000001005523A0, 90);
        swift_willThrow(v150);
        return swift_errorRelease(v69);
      }
    }
    v124 = v182;
    v125 = defaultLogger()(v123);
    v126 = Logger.logObject.getter(v125);
    v127 = static os_log_type_t.debug.getter(v126);
    if (os_log_type_enabled(v126, v127))
    {
      v128 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v128 = 0;
      _os_log_impl((void *)&_mh_execute_header, v126, v127, "ISO18013DeviceAuthenticator ignoring device mac. Continuing with validation.", v128, 2u);
      swift_slowDealloc(v128, -1, -1);
    }

    v113 = v60(v124, v213);
    v110 = (uint64_t)v212;
  }
  v129 = ISO18013Response.Document.docType.getter(v113);
  v131 = v130;
  v132 = v193;
  v133 = sub_1001B44A8(v192, v129, v130, v110);
  v69 = v132;
  if (v132)
  {
    v206(v110, v211);
    swift_bridgeObjectRelease(v131);
    v65 = v208;
    v63 = v210;
    v60 = v181;
    goto LABEL_25;
  }
  v138 = v134;
  v205 = v133;
  v139 = swift_bridgeObjectRelease(v131);
  v140 = (uint64_t)v184;
  ISO18013MobileSecurityObject.deviceKeyInfo.getter(v139);
  sub_1001B48B0(v140, v187);
  v204 = v138;
  v155 = (*(uint64_t (**)(uint64_t, uint64_t))(v185 + 8))(v140, v186);
  v156 = v179;
  v157 = ISO18013Response.DeviceSigned.deviceAuth.getter(v155);
  v158 = (uint64_t)v180;
  ISO18013Response.DeviceAuth.deviceSignature.getter(v157);
  v105(v156, v207);
  v160 = v201;
  v159 = v202;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v201 + 48))(v158, 1, v202) == 1)
  {
    sub_100007F8C(v205, v204);
    (*(void (**)(uint64_t, uint64_t))(v177 + 8))(v187, v178);
    v206(v110, v211);
    return sub_100008030(v158, &qword_100635758);
  }
  else
  {
    v161 = (unint64_t)v176;
    v162 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v160 + 32))(v176, v158, v159);
    v163 = v175;
    v164 = defaultLogger()(v162);
    v165 = Logger.logObject.getter(v164);
    v166 = static os_log_type_t.debug.getter(v165);
    v167 = os_log_type_enabled(v165, v166);
    v168 = v205;
    if (v167)
    {
      v169 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v169 = 0;
      _os_log_impl((void *)&_mh_execute_header, v165, v166, "ISO18013DeviceAuthenticator device signed structure contains a device signature. Validating signature now", v169, 2u);
      v170 = v169;
      v161 = (unint64_t)v176;
      v110 = (uint64_t)v212;
      swift_slowDealloc(v170, -1, -1);
    }

    v181(v163, v213);
    v171 = v187;
    v172 = v204;
    sub_1001B4E20(v161, v187, v168, v204);
    sub_100007F8C(v168, v172);
    (*(void (**)(unint64_t, uint64_t))(v201 + 8))(v161, v202);
    (*(void (**)(uint64_t, uint64_t))(v177 + 8))(v171, v178);
    return v206(v110, v211);
  }
}

uint64_t sub_1001B44A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[2];
  uint64_t v51;

  v49 = a2;
  v48 = a4;
  v6 = type metadata accessor for DIPError.Code(0);
  v45 = *(_QWORD *)(v6 - 8);
  v46 = v6;
  __chkstk_darwin(v6);
  v47 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100004828(&qword_1006378D8);
  v42 = *(_QWORD *)(v8 - 8);
  v43 = v8;
  __chkstk_darwin(v8);
  v44 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100004828(&qword_1006378D0);
  __chkstk_darwin(v10);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ISO18013SessionTranscript(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ISO18013DeviceAuthentication(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a1, v13);
  v21 = swift_bridgeObjectRetain(a3);
  ISO18013Response.DeviceSigned.namespaces.getter(v21);
  ISO18013DeviceAuthentication.init(sessionTranscript:docType:deviceNamespaceBytes:)(v16, v49, a3, v12);
  v22 = sub_100004790(&qword_1006378E0, (uint64_t (*)(uint64_t))&type metadata accessor for ISO18013DeviceAuthentication, (uint64_t)&protocol conformance descriptor for ISO18013DeviceAuthentication);
  v23 = v51;
  v24 = dispatch thunk of CBOREncoder.encode<A>(_:)(v20, v17, v22);
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    v34 = v47;
    (*(void (**)(char *, _QWORD, uint64_t))(v45 + 104))(v47, enum case for DIPError.Code.cborEncodingFailed(_:), v46);
    swift_errorRetain(v23);
    v35 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v36 = type metadata accessor for DIPError(0);
    v37 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    swift_allocError(v36, v37, 0, 0);
    v38 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000003DLL, 0x8000000100552860, v23, v34, 0, v35, 0xD000000000000075, 0x8000000100552320, 0xD000000000000047, 0x80000001005528A0, 110);
    swift_willThrow(v38);
    swift_errorRelease(v23);
  }
  else
  {
    v26 = v24;
    v27 = v25;
    v51 = v18;
    v28 = v43;
    v50[0] = v24;
    v50[1] = v25;
    v29 = type metadata accessor for CBOREncoder(0);
    swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
    v30 = sub_100022948(v26, v27);
    v31 = CBOREncoder.init()(v30);
    v32 = sub_100049540();
    v33 = sub_100049584();
    CBOREncodedCBOR.init(value:tag:encoder:)(v50, 1, v31, &type metadata for Data, v32, v33);
    v40 = v44;
    v36 = CBOREncodedCBOR.dataValue.getter(v28);
    sub_100007F8C(v26, v27);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v40, v28);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v20, v17);
  }
  return v36;
}

uint64_t sub_1001B48B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  __int128 v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  BOOL v28;
  unint64_t v29;
  int64_t v30;
  uint64_t *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD v51[2];
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  __int128 v56;
  uint64_t v57;
  int64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;

  v3 = v2;
  v62 = a1;
  v51[1] = a2;
  v4 = type metadata accessor for DIPError.Code(0);
  v52 = *(_QWORD *)(v4 - 8);
  v53 = v4;
  __chkstk_darwin(v4);
  v54 = (char *)v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  v60 = *(_QWORD *)(v6 - 8);
  v61 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100004828(&qword_1006378C8);
  __chkstk_darwin(v9);
  v63 = (char *)v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100004828(&qword_1006378D0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  ISO18013Response.DeviceSigned.namespaces.getter(v15);
  CBOREncodedCBOR.value.getter(v11);
  v16 = v11;
  v17 = v8;
  result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v16);
  v20 = 0;
  v21 = *(_QWORD *)(v65 + 64);
  v57 = v65 + 64;
  v64 = v65;
  v22 = 1 << *(_BYTE *)(v65 + 32);
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v24 = v23 & v21;
  v58 = (unint64_t)(v22 + 63) >> 6;
  *(_QWORD *)&v19 = 136315138;
  v56 = v19;
  v55 = (char *)&type metadata for Any + 8;
  while (1)
  {
    if (v24)
    {
      v25 = __clz(__rbit64(v24));
      v24 &= v24 - 1;
      v26 = v25 | (v20 << 6);
      v27 = (uint64_t)v63;
      goto LABEL_19;
    }
    v28 = __OFADD__(v20++, 1);
    v27 = (uint64_t)v63;
    if (v28)
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v20 >= v58)
      goto LABEL_27;
    v29 = *(_QWORD *)(v57 + 8 * v20);
    if (!v29)
      break;
LABEL_18:
    v24 = (v29 - 1) & v29;
    v26 = __clz(__rbit64(v29)) + (v20 << 6);
LABEL_19:
    v31 = (uint64_t *)(*(_QWORD *)(v64 + 48) + 16 * v26);
    v32 = *v31;
    v33 = v31[1];
    v34 = *(_QWORD *)(*(_QWORD *)(v64 + 56) + 8 * v26);
    swift_bridgeObjectRetain(v33);
    v35 = swift_bridgeObjectRetain(v34);
    ISO18013MobileSecurityObject.DeviceKeyInfo.keyAuthorizations.getter(v35);
    sub_1001B53F0(v32, v33, v34, v27);
    if (v3)
    {
      swift_bridgeObjectRelease(v33);
      swift_bridgeObjectRelease(v34);
      sub_100008030(v27, &qword_1006378C8);
      swift_release(v64);
      v45 = v54;
      (*(void (**)(char *, _QWORD, uint64_t))(v52 + 104))(v54, enum case for DIPError.Code.internalError(_:), v53);
      swift_errorRetain(v3);
      v46 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
      v47 = type metadata accessor for DIPError(0);
      v48 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
      swift_allocError(v47, v48, 0, 0);
      v49 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000041, 0x80000001005526B0, v3, v45, 0, v46, 0xD000000000000075, 0x8000000100552320, 0xD000000000000026, 0x8000000100552700, 128);
      swift_willThrow(v49);
      return swift_errorRelease(v3);
    }
    sub_100008030(v27, &qword_1006378C8);
    v36 = swift_bridgeObjectRelease(v34);
    defaultLogger()(v36);
    swift_bridgeObjectRetain(v33);
    v38 = Logger.logObject.getter(v37);
    v39 = static os_log_type_t.debug.getter(v38);
    if (os_log_type_enabled(v38, v39))
    {
      v40 = swift_slowAlloc(12, -1);
      v59 = 0;
      v41 = v40;
      v42 = v17;
      v43 = swift_slowAlloc(32, -1);
      v65 = v43;
      *(_DWORD *)v41 = v56;
      swift_bridgeObjectRetain(v33);
      *(_QWORD *)(v41 + 4) = sub_1000E3AC8(v32, v33, &v65);
      swift_bridgeObjectRelease_n(v33, 3);
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "ISO18013DeviceAuthenticator successfully authorized namespace %s", (uint8_t *)v41, 0xCu);
      swift_arrayDestroy(v43, 1, v55);
      v44 = v43;
      v17 = v42;
      swift_slowDealloc(v44, -1, -1);
      v3 = v59;
      swift_slowDealloc(v41, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v33, 2);
    }
    result = (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v17, v61);
  }
  v30 = v20 + 1;
  if (v20 + 1 >= v58)
    goto LABEL_27;
  v29 = *(_QWORD *)(v57 + 8 * v30);
  if (v29)
    goto LABEL_17;
  v30 = v20 + 2;
  if (v20 + 2 >= v58)
    goto LABEL_27;
  v29 = *(_QWORD *)(v57 + 8 * v30);
  if (v29)
    goto LABEL_17;
  v30 = v20 + 3;
  if (v20 + 3 >= v58)
  {
LABEL_27:
    v50 = swift_release(v64);
    return ISO18013MobileSecurityObject.DeviceKeyInfo.deviceKey.getter(v50);
  }
  v29 = *(_QWORD *)(v57 + 8 * v30);
  if (v29)
  {
LABEL_17:
    v20 = v30;
    goto LABEL_18;
  }
  while (1)
  {
    v20 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v20 >= v58)
      goto LABEL_27;
    v29 = *(_QWORD *)(v57 + 8 * v20);
    ++v30;
    if (v29)
      goto LABEL_18;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1001B4E20(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, _QWORD, uint64_t);
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void (*v26)(char *, _QWORD, uint64_t);
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  char *v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v62 = a1;
  v63 = a3;
  v64 = a4;
  v4 = type metadata accessor for DIPError.Code(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Logger(0);
  v59 = *(_QWORD *)(v8 - 8);
  v60 = v8;
  __chkstk_darwin(v8);
  v58 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100004828(&qword_10062FC58);
  __chkstk_darwin(v10);
  v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for PublicKeyAlgorithm(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B6124((uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_100008030((uint64_t)v12, &qword_10062FC58);
    v17 = *(void (**)(char *, _QWORD, uint64_t))(v5 + 104);
    v17(v7, enum case for DIPError.Code.documentReaderUnknownDeviceAuthAlgorithm(_:), v4);
    v18 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v19 = type metadata accessor for DIPError(0);
    v20 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    v21 = swift_allocError(v19, v20, 0, 0);
    v22 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000032, 0x80000001005525C0, 0, v7, 0, v18, 0xD000000000000075, 0x8000000100552320, 0xD00000000000003FLL, 0x8000000100552600, 170);
    swift_willThrow(v22);
    v17(v7, enum case for DIPError.Code.internalError(_:), v4);
LABEL_6:
    swift_errorRetain(v21);
    v32 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v33 = type metadata accessor for DIPError(0);
    v34 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    swift_allocError(v33, v34, 0, 0);
    v35 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000038, 0x8000000100552640, v21, v7, 0, v32, 0xD000000000000075, 0x8000000100552320, 0xD00000000000003FLL, 0x8000000100552600, 187);
    swift_willThrow(v35);
    return swift_errorRelease(v21);
  }
  v57 = v4;
  v23 = (*(uint64_t (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
  v24 = COSEKey.publicKeyData.getter(v23);
  if (v25 >> 60 == 15)
  {
    v26 = *(void (**)(char *, _QWORD, uint64_t))(v5 + 104);
    v27 = v57;
    v26(v7, enum case for DIPError.Code.documentReaderInvalidDeviceAuthPublicKey(_:), v57);
    v28 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v29 = type metadata accessor for DIPError(0);
    v30 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    v21 = swift_allocError(v29, v30, 0, 0);
    v31 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000023, 0x8000000100552680, 0, v7, 0, v28, 0xD000000000000075, 0x8000000100552320, 0xD00000000000003FLL, 0x8000000100552600, 174);
    swift_willThrow(v31);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    v26(v7, enum case for DIPError.Code.internalError(_:), v27);
    goto LABEL_6;
  }
  v53 = v7;
  v37 = v24;
  v38 = v25;
  v61 += *(int *)(type metadata accessor for ISO18013DeviceAuthenticator(0) + 20);
  v39 = v16;
  v40 = COSE_Sign1.signature.getter();
  v42 = v41;
  v43 = COSE_Sign1.algorithmIdentifier.getter();
  v54 = v40;
  v55 = v42;
  v44 = v40;
  v45 = v39;
  v56 = v37;
  v62 = v38;
  v46 = v65;
  COSESignatureValidator.validateSignature(signature:publicKeyData:publicKeyAlgorithm:algorithmIdentifier:payload:)(v44, v42, v37, v38, v39, v43, v63, v64);
  if (v46)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v39, v13);
    sub_100007F8C(v54, v55);
    sub_100007F78(v56, v62);
    v21 = v46;
    v7 = v53;
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v53, enum case for DIPError.Code.internalError(_:), v57);
    goto LABEL_6;
  }
  v47 = sub_100007F8C(v54, v55);
  v48 = v58;
  v49 = defaultLogger()(v47);
  v50 = Logger.logObject.getter(v49);
  v51 = static os_log_type_t.debug.getter(v50);
  if (os_log_type_enabled(v50, v51))
  {
    v52 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v52 = 0;
    _os_log_impl((void *)&_mh_execute_header, v50, v51, "ISO18013DeviceAuthenticator successfully validated device signature", v52, 2u);
    swift_slowDealloc(v52, -1, -1);
  }
  sub_100007F78(v56, v62);

  (*(void (**)(char *, uint64_t))(v59 + 8))(v48, v60);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v45, v13);
}

uint64_t sub_1001B53F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  _QWORD *v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  _QWORD *v40;
  uint64_t result;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  int64_t v49;
  unint64_t v50;
  unint64_t v51;
  int64_t v52;
  uint64_t *v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v66;
  char *v67;
  unint64_t v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  NSObject *v75;
  os_log_type_t v76;
  uint8_t *v77;
  uint64_t v78;
  char *v79;
  void (*v80)(char *, _QWORD, uint64_t);
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  NSObject *v96;
  os_log_type_t v97;
  uint8_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  int64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;

  v113 = a3;
  v114 = a2;
  v110 = a1;
  v5 = type metadata accessor for DIPError.Code(0);
  v108 = *(_QWORD *)(v5 - 8);
  v109 = v5;
  __chkstk_darwin(v5);
  v107 = (char *)&v100 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  v111 = *(_QWORD *)(v7 - 8);
  v112 = v7;
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v100 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v104 = (char *)&v100 - v12;
  v13 = __chkstk_darwin(v11);
  v105 = (char *)&v100 - v14;
  __chkstk_darwin(v13);
  v16 = (char *)&v100 - v15;
  v17 = sub_100004828(&qword_1006378C8);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v100 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v22 = (char *)&v100 - v21;
  sub_100038B24(a4, (uint64_t)&v100 - v21, &qword_1006378C8);
  v23 = type metadata accessor for ISO18013MobileSecurityObject.KeyAuthorizations(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  if (v25(v22, 1, v23) == 1)
  {
    sub_100008030((uint64_t)v22, &qword_1006378C8);
    goto LABEL_7;
  }
  v26 = (_QWORD *)ISO18013MobileSecurityObject.KeyAuthorizations.namespaces.getter();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v22, v23);
  if (!v26 || (v27 = sub_1001B2720(v110, v114, v26), v28 = swift_bridgeObjectRelease(v26), (v27 & 1) == 0))
  {
LABEL_7:
    sub_100038B24(a4, (uint64_t)v20, &qword_1006378C8);
    if (v25(v20, 1, v23) == 1)
    {
      v35 = sub_100008030((uint64_t)v20, &qword_1006378C8);
      v36 = v114;
    }
    else
    {
      v37 = ISO18013MobileSecurityObject.KeyAuthorizations.dataElements.getter();
      v35 = (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v20, v23);
      v36 = v114;
      if (v37)
      {
        if (*(_QWORD *)(v37 + 16))
        {
          swift_bridgeObjectRetain(v114);
          v38 = sub_1004A8604(v110, v36);
          if ((v39 & 1) != 0)
          {
            v40 = *(_QWORD **)(*(_QWORD *)(v37 + 56) + 8 * v38);
            swift_bridgeObjectRetain(v40);
            swift_bridgeObjectRelease(v36);
            result = swift_bridgeObjectRelease(v37);
            v42 = 0;
            v43 = *(_QWORD *)(v113 + 64);
            v102 = v113 + 64;
            v44 = 1 << *(_BYTE *)(v113 + 32);
            v45 = -1;
            if (v44 < 64)
              v45 = ~(-1 << v44);
            v46 = v45 & v43;
            v103 = (unint64_t)(v44 + 63) >> 6;
            v101 = v40 + 9;
            while (1)
            {
LABEL_15:
              if (v46)
              {
                v47 = __clz(__rbit64(v46));
                v46 &= v46 - 1;
                v48 = v47 | (v42 << 6);
              }
              else
              {
                v49 = v42 + 1;
                if (__OFADD__(v42, 1))
                  goto LABEL_74;
                v50 = v114;
                if (v49 >= v103)
                {
LABEL_69:
                  v93 = swift_bridgeObjectRelease(v40);
                  v94 = v104;
                  defaultLogger()(v93);
                  v95 = swift_bridgeObjectRetain_n(v50, 2);
                  v96 = Logger.logObject.getter(v95);
                  v97 = static os_log_type_t.debug.getter(v96);
                  if (os_log_type_enabled(v96, v97))
                  {
                    v98 = (uint8_t *)swift_slowAlloc(12, -1);
                    v99 = swift_slowAlloc(32, -1);
                    v117 = v99;
                    *(_DWORD *)v98 = 136315138;
                    swift_bridgeObjectRetain(v50);
                    v115 = sub_1000E3AC8(v110, v50, &v117);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v115, &v116, v98 + 4);
                    swift_bridgeObjectRelease_n(v50, 3);
                    _os_log_impl((void *)&_mh_execute_header, v96, v97, "ISO18013DeviceAuthenticator successfully authorized elements in namespace %s.", v98, 0xCu);
                    swift_arrayDestroy(v99, 1, (char *)&type metadata for Any + 8);
                    swift_slowDealloc(v99, -1, -1);
                    swift_slowDealloc(v98, -1, -1);

                  }
                  else
                  {

                    swift_bridgeObjectRelease_n(v50, 2);
                  }
                  return (*(uint64_t (**)(char *, uint64_t))(v111 + 8))(v94, v112);
                }
                v51 = *(_QWORD *)(v102 + 8 * v49);
                ++v42;
                if (!v51)
                {
                  v42 = v49 + 1;
                  if (v49 + 1 >= v103)
                    goto LABEL_69;
                  v51 = *(_QWORD *)(v102 + 8 * v42);
                  if (!v51)
                  {
                    v42 = v49 + 2;
                    if (v49 + 2 >= v103)
                      goto LABEL_69;
                    v51 = *(_QWORD *)(v102 + 8 * v42);
                    if (!v51)
                    {
                      v42 = v49 + 3;
                      if (v49 + 3 >= v103)
                        goto LABEL_69;
                      v51 = *(_QWORD *)(v102 + 8 * v42);
                      if (!v51)
                      {
                        v42 = v49 + 4;
                        if (v49 + 4 >= v103)
                          goto LABEL_69;
                        v51 = *(_QWORD *)(v102 + 8 * v42);
                        if (!v51)
                        {
                          v52 = v49 + 5;
                          if (v52 >= v103)
                            goto LABEL_69;
                          v51 = *(_QWORD *)(v102 + 8 * v52);
                          if (!v51)
                          {
                            while (1)
                            {
                              v42 = v52 + 1;
                              if (__OFADD__(v52, 1))
                                goto LABEL_75;
                              if (v42 >= v103)
                                goto LABEL_69;
                              v51 = *(_QWORD *)(v102 + 8 * v42);
                              ++v52;
                              if (v51)
                                goto LABEL_34;
                            }
                          }
                          v42 = v52;
                        }
                      }
                    }
                  }
                }
LABEL_34:
                v46 = (v51 - 1) & v51;
                v48 = __clz(__rbit64(v51)) + (v42 << 6);
              }
              v53 = (uint64_t *)(*(_QWORD *)(v113 + 48) + 16 * v48);
              v55 = *v53;
              v54 = v53[1];
              v56 = v40[2];
              if (!v56)
                goto LABEL_56;
              result = v40[4];
              v57 = v40[5];
              if (result != v55 || v57 != v54)
              {
                result = _stringCompareWithSmolCheck(_:_:expecting:)(result, v57, *v53, v53[1], 0);
                if ((result & 1) == 0)
                {
                  if (v56 == 1)
                    goto LABEL_56;
                  result = v40[6];
                  v59 = v40[7];
                  if (result != v55 || v59 != v54)
                  {
                    result = _stringCompareWithSmolCheck(_:_:expecting:)(result, v59, v55, v54, 0);
                    if ((result & 1) == 0)
                      break;
                  }
                }
              }
            }
            if (v56 != 2)
            {
              v61 = v101;
              v62 = 2;
              while (1)
              {
                v63 = v62 + 1;
                if (__OFADD__(v62, 1))
                  break;
                result = *(v61 - 1);
                v64 = *v61;
                if (result == v55 && v64 == v54)
                  goto LABEL_15;
                result = _stringCompareWithSmolCheck(_:_:expecting:)(result, v64, v55, v54, 0);
                if ((result & 1) != 0)
                  goto LABEL_15;
                v61 += 2;
                ++v62;
                if (v63 == v56)
                  goto LABEL_56;
              }
              __break(1u);
LABEL_74:
              __break(1u);
LABEL_75:
              __break(1u);
              return result;
            }
LABEL_56:
            swift_bridgeObjectRetain(v113);
            swift_bridgeObjectRetain(v54);
            v66 = swift_bridgeObjectRelease(v40);
            v67 = v105;
            defaultLogger()(v66);
            v68 = v114;
            swift_bridgeObjectRetain_n(v114, 2);
            swift_bridgeObjectRetain(v54);
            v70 = Logger.logObject.getter(v69);
            v71 = static os_log_type_t.debug.getter(v70);
            if (os_log_type_enabled(v70, v71))
            {
              v72 = swift_slowAlloc(22, -1);
              v106 = swift_slowAlloc(64, -1);
              v117 = v106;
              *(_DWORD *)v72 = 136315394;
              swift_bridgeObjectRetain(v68);
              v115 = sub_1000E3AC8(v110, v68, &v117);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v115, &v116, v72 + 4);
              swift_bridgeObjectRelease_n(v68, 3);
              *(_WORD *)(v72 + 12) = 2080;
              swift_bridgeObjectRetain(v54);
              v115 = sub_1000E3AC8(v55, v54, &v117);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v115, &v116, v72 + 14);
              swift_bridgeObjectRelease_n(v54, 3);
              _os_log_impl((void *)&_mh_execute_header, v70, v71, "ISO18013DeviceAuthenticator %s.%s is in device signed structure, but not the key authorizations structure.", (uint8_t *)v72, 0x16u);
              v73 = v106;
              swift_arrayDestroy(v106, 2, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v73, -1, -1);
              swift_slowDealloc(v72, -1, -1);

              (*(void (**)(char *, uint64_t))(v111 + 8))(v105, v112);
            }
            else
            {

              swift_bridgeObjectRelease_n(v54, 2);
              swift_bridgeObjectRelease_n(v68, 2);
              (*(void (**)(char *, uint64_t))(v111 + 8))(v67, v112);
            }
            v79 = v107;
            v80 = *(void (**)(char *, _QWORD, uint64_t))(v108 + 104);
            v81 = v109;
            v80(v107, enum case for DIPError.Code.documentReaderUnauthorizedDeviceKey(_:), v109);
            v90 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
            v83 = type metadata accessor for DIPError(0);
            v91 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
            v85 = swift_allocError(v83, v91, 0, 0);
            v92 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000055, 0x8000000100552800, 0, v79, 0, v90, 0xD000000000000075, 0x8000000100552320, 0xD00000000000003FLL, 0x8000000100552790, 152);
            swift_willThrow(v92);
            swift_release(v113);
            goto LABEL_64;
          }
          swift_bridgeObjectRelease(v36);
        }
        v35 = swift_bridgeObjectRelease(v37);
      }
    }
    defaultLogger()(v35);
    v74 = swift_bridgeObjectRetain_n(v36, 2);
    v75 = Logger.logObject.getter(v74);
    v76 = static os_log_type_t.debug.getter(v75);
    if (os_log_type_enabled(v75, v76))
    {
      v77 = (uint8_t *)swift_slowAlloc(12, -1);
      v78 = swift_slowAlloc(32, -1);
      v117 = v78;
      *(_DWORD *)v77 = 136315138;
      swift_bridgeObjectRetain(v36);
      v115 = sub_1000E3AC8(v110, v36, &v117);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v115, &v116, v77 + 4);
      swift_bridgeObjectRelease_n(v36, 3);
      _os_log_impl((void *)&_mh_execute_header, v75, v76, "ISO18013DeviceAuthenticator namespace %s is in device signed structure, but not the key authorizations structure.", v77, 0xCu);
      swift_arrayDestroy(v78, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v78, -1, -1);
      swift_slowDealloc(v77, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v36, 2);
    }
    (*(void (**)(char *, uint64_t))(v111 + 8))(v10, v112);
    v79 = v107;
    v80 = *(void (**)(char *, _QWORD, uint64_t))(v108 + 104);
    v81 = v109;
    v80(v107, enum case for DIPError.Code.documentReaderUnauthorizedDeviceKey(_:), v109);
    v82 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v83 = type metadata accessor for DIPError(0);
    v84 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    v85 = swift_allocError(v83, v84, 0, 0);
    v86 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000055, 0x8000000100552730, 0, v79, 0, v82, 0xD000000000000075, 0x8000000100552320, 0xD00000000000003FLL, 0x8000000100552790, 146);
    swift_willThrow(v86);
LABEL_64:
    v80(v79, enum case for DIPError.Code.internalError(_:), v81);
    swift_errorRetain(v85);
    v87 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    type metadata accessor for DIPError(0);
    v88 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    swift_allocError(v83, v88, 0, 0);
    v89 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000002ELL, 0x80000001005527D0, v85, v79, 0, v87, 0xD000000000000075, 0x8000000100552320, 0xD00000000000003FLL, 0x8000000100552790, 158);
    swift_willThrow(v89);
    return swift_errorRelease(v85);
  }
  defaultLogger()(v28);
  v29 = v114;
  v30 = swift_bridgeObjectRetain_n(v114, 2);
  v31 = Logger.logObject.getter(v30);
  v32 = static os_log_type_t.debug.getter(v31);
  if (os_log_type_enabled(v31, v32))
  {
    v33 = (uint8_t *)swift_slowAlloc(12, -1);
    v34 = swift_slowAlloc(32, -1);
    v117 = v34;
    *(_DWORD *)v33 = 136315138;
    swift_bridgeObjectRetain(v29);
    v115 = sub_1000E3AC8(v110, v29, &v117);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v115, &v116, v33 + 4);
    swift_bridgeObjectRelease_n(v29, 3);
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "ISO18013DeviceAuthenticator authorizedNamespaces contains current namespace %s.", v33, 0xCu);
    swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v34, -1, -1);
    swift_slowDealloc(v33, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v29, 2);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v111 + 8))(v16, v112);
}

uint64_t sub_1001B6124@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unsigned int *v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[7];
  _QWORD v35[5];
  _QWORD v36[2];
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  _QWORD v40[2];
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v4);
  v9 = (char *)v34 - v8;
  COSEKey.ec2.getter(v34, v7);
  v10 = sub_1000A1F54((uint64_t)v34, (uint64_t)v40, &qword_1006378B8);
  v11 = v41;
  if (v41 >> 60 == 15)
  {
    COSEKey.okp.getter(v35, v10);
    sub_1000A1F54((uint64_t)v35, (uint64_t)v36, &qword_1006378C0);
    v12 = v37;
    if (v37 >> 60 != 15)
    {
      v14 = v36[0];
      v13 = v36[1];
      sub_100007F8C(v38, v39);
      v15 = sub_100007F8C(v13, v12);
      switch(v14)
      {
        case 4:
          v16 = defaultLogger()(v15);
          v17 = Logger.logObject.getter(v16);
          v18 = static os_log_type_t.debug.getter(v17);
          if (os_log_type_enabled(v17, v18))
          {
            v19 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v19 = 0;
            _os_log_impl((void *)&_mh_execute_header, v17, v18, "X25519 is not a signing algorithm", v19, 2u);
            swift_slowDealloc(v19, -1, -1);
          }

          (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
          goto LABEL_16;
        case 5:
          v25 = defaultLogger()(v15);
          v26 = Logger.logObject.getter(v25);
          v27 = static os_log_type_t.debug.getter(v26);
          if (os_log_type_enabled(v26, v27))
          {
            v28 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v28 = 0;
            _os_log_impl((void *)&_mh_execute_header, v26, v27, "X448 is not a signing algorithm", v28, 2u);
            swift_slowDealloc(v28, -1, -1);
          }

          (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
          goto LABEL_16;
        case 6:
          v24 = (unsigned int *)&enum case for PublicKeyAlgorithm.ED_25519(_:);
          goto LABEL_19;
        case 7:
          v24 = (unsigned int *)&enum case for PublicKeyAlgorithm.ED_448(_:);
          goto LABEL_19;
        default:
          goto LABEL_16;
      }
    }
    goto LABEL_16;
  }
  v21 = v40[0];
  v20 = v40[1];
  v22 = v42;
  v23 = v43;
  sub_100007F8C(v44, v45);
  sub_100007F8C(v22, v23);
  sub_100007F8C(v20, v11);
  switch(v21)
  {
    case 3:
      v24 = (unsigned int *)&enum case for PublicKeyAlgorithm.EC_P521(_:);
      break;
    case 2:
      v24 = (unsigned int *)&enum case for PublicKeyAlgorithm.EC_P384(_:);
      break;
    case 1:
      v24 = (unsigned int *)&enum case for PublicKeyAlgorithm.EC_P256(_:);
      break;
    default:
LABEL_16:
      v29 = type metadata accessor for PublicKeyAlgorithm(0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(a1, 1, 1, v29);
  }
LABEL_19:
  v31 = *v24;
  v32 = type metadata accessor for PublicKeyAlgorithm(0);
  v33 = *(_QWORD *)(v32 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 104))(a1, v31, v32);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v33 + 56))(a1, 0, 1, v32);
}

unint64_t sub_1001B6438()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1006378E8;
  if (!qword_1006378E8)
  {
    v1 = objc_opt_self(PDSRegistration);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1006378E8);
  }
  return result;
}

uint64_t *sub_1001B6474(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain(v4);
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = type metadata accessor for COSESignatureValidator(0);
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_retain(v4);
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_1001B650C(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  swift_release(*a1);
  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for COSESignatureValidator(0);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t *sub_1001B6554(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = *a2;
  *a1 = *a2;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = type metadata accessor for COSESignatureValidator(0);
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_retain(v4);
  v9(v6, v7, v8);
  return a1;
}

uint64_t *sub_1001B65C4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_retain(v6);
  swift_release(v7);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for COSESignatureValidator(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

_QWORD *sub_1001B6638(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for COSESignatureValidator(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t *sub_1001B6694(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for COSESignatureValidator(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1001B6700(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001B670C);
}

uint64_t sub_1001B670C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for COSESignatureValidator(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_1001B6788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001B6794);
}

char *sub_1001B6794(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for COSESignatureValidator(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1001B6808(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  result = type metadata accessor for COSESignatureValidator(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1001B6880()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1[30] = v0;
  v2 = type metadata accessor for Logger(0);
  v1[31] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[32] = v3;
  v1[33] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DIPError.Code(0);
  v1[34] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[35] = v5;
  v1[36] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DIPError(0);
  v1[37] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v1[38] = v7;
  v1[39] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001B6930, 0, 0);
}

uint64_t sub_1001B6930()
{
  uint64_t v0;
  id v1;
  Swift::String v2;
  Swift::Bool v3;
  _QWORD *v4;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t v8;
  os_unfair_lock_s *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v1 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v2._object = (void *)0x8000000100552930;
  v2._countAndFlagsBits = 0xD000000000000021;
  v3 = NSUserDefaults.internalBool(forKey:)(v2);

  if (v3)
  {
    v4 = (_QWORD *)swift_task_alloc(dword_100637A94);
    *(_QWORD *)(v0 + 320) = v4;
    *v4 = v0;
    v4[1] = sub_1001B6B04;
    return sub_1001B97F8();
  }
  else
  {
    if (qword_10062F490 != -1)
      swift_once(&qword_10062F490, sub_100139C84);
    v6 = qword_1006702A0;
    v7 = *(os_unfair_lock_s **)(qword_1006702A0 + 16);
    v8 = (uint64_t)&v7[4];
    v9 = v7 + 52;
    os_unfair_lock_lock(v7 + 52);
    sub_100139D14(v8, v6, (_OWORD *)(v0 + 16));
    os_unfair_lock_unlock(v9);
    v10 = *(_QWORD *)(v0 + 240);
    v11 = *(_QWORD *)(v0 + 80);
    *(_QWORD *)(v0 + 336) = v11;
    swift_retain(v11);
    sub_10001D410((_QWORD *)(v0 + 16));
    v12 = swift_allocObject(&unk_10060A9D0, 32, 7);
    *(_QWORD *)(v0 + 344) = v12;
    *(_QWORD *)(v12 + 16) = sub_1001BA01C;
    *(_QWORD *)(v12 + 24) = v10;
    v13 = async function pointer to AsyncCoreDataContainer.performRead<A>(_:)[1];
    swift_retain_n(v10, 2);
    v14 = (_QWORD *)swift_task_alloc(v13);
    *(_QWORD *)(v0 + 352) = v14;
    *v14 = v0;
    v14[1] = sub_1001B6D20;
    return AsyncCoreDataContainer.performRead<A>(_:)(v0 + 368, sub_1001BA034, v12, &type metadata for Bool);
  }
}

uint64_t sub_1001B6B04()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*v1 + 320);
  v3 = *v1;
  *(_QWORD *)(v3 + 328) = v0;
  swift_task_dealloc(v2);
  if (!v0)
    return swift_task_switch(sub_1001B6BA0, 0, 0);
  v4 = *(_QWORD *)(v3 + 288);
  v5 = *(_QWORD *)(v3 + 264);
  swift_task_dealloc(*(_QWORD *)(v3 + 312));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(_QWORD))(v3 + 8))(0);
}

void sub_1001B6BA0()
{
  uint64_t v0;
  Swift::String v1;
  Swift::String v2;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v1._object = (void *)0x8000000100552BE0;
  v2._countAndFlagsBits = 0x6166316233343530;
  v2._object = (void *)0xE800000000000000;
  v1._countAndFlagsBits = 0xD00000000000003ALL;
  logMilestone(tag:description:)(v2, v1);
  v3 = *(_QWORD *)(v0 + 328);
  if (qword_10062F490 != -1)
    swift_once(&qword_10062F490, sub_100139C84);
  v4 = qword_1006702A0;
  v5 = *(os_unfair_lock_s **)(qword_1006702A0 + 16);
  v6 = (uint64_t)&v5[4];
  v7 = v5 + 52;
  os_unfair_lock_lock(v5 + 52);
  sub_100139D14(v6, v4, (_OWORD *)(v0 + 16));
  os_unfair_lock_unlock(v7);
  if (!v3)
  {
    v8 = *(_QWORD *)(v0 + 240);
    v9 = *(_QWORD *)(v0 + 80);
    *(_QWORD *)(v0 + 336) = v9;
    swift_retain(v9);
    sub_10001D410((_QWORD *)(v0 + 16));
    v10 = swift_allocObject(&unk_10060A9D0, 32, 7);
    *(_QWORD *)(v0 + 344) = v10;
    *(_QWORD *)(v10 + 16) = sub_1001BA01C;
    *(_QWORD *)(v10 + 24) = v8;
    v11 = async function pointer to AsyncCoreDataContainer.performRead<A>(_:)[1];
    swift_retain_n(v8, 2);
    v12 = (_QWORD *)swift_task_alloc(v11);
    *(_QWORD *)(v0 + 352) = v12;
    *v12 = v0;
    v12[1] = sub_1001B6D20;
    AsyncCoreDataContainer.performRead<A>(_:)(v0 + 368, sub_1001BA034, v10, &type metadata for Bool);
  }
}

uint64_t sub_1001B6D20()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(*v1 + 352);
  v3 = *v1;
  *(_QWORD *)(v3 + 360) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_1001B6DF0, 0, 0);
  v5 = *(_QWORD *)(v3 + 336);
  v6 = *(_QWORD *)(v3 + 312);
  v7 = *(_QWORD *)(v3 + 288);
  v8 = *(_QWORD *)(v3 + 264);
  v9 = *(_QWORD *)(v3 + 240);
  swift_release(*(_QWORD *)(v3 + 344));
  swift_release(v9);
  swift_release(v5);
  v10 = *(unsigned __int8 *)(v3 + 368);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(uint64_t))(v3 + 8))(v10);
}

uint64_t sub_1001B6DF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  Swift::String v15;
  void *object;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 360);
  v2 = *(_QWORD *)(v0 + 336);
  v4 = *(_QWORD *)(v0 + 304);
  v3 = *(_QWORD *)(v0 + 312);
  v5 = *(_QWORD *)(v0 + 288);
  v6 = *(_QWORD *)(v0 + 296);
  v8 = *(_QWORD *)(v0 + 272);
  v7 = *(_QWORD *)(v0 + 280);
  v23 = *(_QWORD *)(v0 + 264);
  v24 = *(_QWORD *)(v0 + 256);
  v9 = *(_QWORD *)(v0 + 240);
  v25 = *(_QWORD *)(v0 + 248);
  swift_release(*(_QWORD *)(v0 + 344));
  swift_release(v9);
  swift_release(v2);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v5, enum case for DIPError.Code.biomeDataSharingUnableToCheckUserConsent(_:), v8);
  swift_errorRetain(v1);
  v10 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000050, 0x8000000100552B50, v1, v5, 0, v10, 0xD000000000000077, 0x8000000100552990, 0xD000000000000012, 0x8000000100548F10, 57);
  v11 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
  v12 = swift_allocError(v6, v11, 0, 0);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v13(v14, v3, v6);
  _StringGuts.grow(_:)(43);
  swift_bridgeObjectRelease(0xE000000000000000);
  swift_getErrorValue(v1, v0 + 232, v0 + 208);
  v15._countAndFlagsBits = Error.localizedDescription.getter(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 224));
  object = v15._object;
  String.append(_:)(v15);
  v17 = swift_bridgeObjectRelease(object);
  defaultLogger()(v17);
  DIPRecordError(_:message:log:)(v12, 0xD000000000000029, 0x8000000100552BB0, v23);
  swift_bridgeObjectRelease(0x8000000100552BB0);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
  swift_errorRelease(v12);
  swift_allocError(v6, v11, 0, 0);
  v19 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v13)(v18, v3, v6);
  swift_willThrow(v19);
  swift_errorRelease(v1);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v6);
  v20 = *(_QWORD *)(v0 + 288);
  v21 = *(_QWORD *)(v0 + 264);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

void sub_1001B707C(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void *v25;
  char *v26;
  uint64_t v27;
  _BYTE *v28;
  id v29;
  void *v30;
  uint64_t v31;
  void (*v32)(void);
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, _QWORD, uint64_t, uint64_t);
  int v36;
  _BYTE *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char *v43;
  uint64_t v44;
  NSObject *v45;
  uint64_t v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  NSObject *v52;
  uint64_t v53;
  os_log_type_t v54;
  uint8_t *v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  NSObject *v61;
  uint64_t v62;
  os_log_type_t v63;
  uint8_t *v64;
  uint8_t *v65;
  _QWORD v66[2];
  char *v67;
  char *v68;
  id v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  _BYTE *v76;
  uint64_t v77;

  v73 = a2;
  v76 = a3;
  v4 = sub_100004828(&qword_100633990);
  v5 = __chkstk_darwin(v4);
  v72 = (char *)v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v74 = (char *)v66 - v7;
  v75 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v75 - 8);
  v9 = __chkstk_darwin(v75);
  v11 = (char *)v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)v66 - v12;
  v14 = type metadata accessor for Logger(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v16);
  v21 = (char *)v66 - v20;
  __chkstk_darwin(v19);
  v23 = (char *)v66 - v22;
  v24 = v77;
  v25 = (void *)sub_10010A318();
  if (v24)
    return;
  v26 = v23;
  v70 = v21;
  v71 = v15;
  v66[1] = a1;
  v67 = v18;
  v68 = v13;
  v27 = v75;
  v28 = v76;
  v77 = v14;
  if (v25)
  {
    v69 = v25;
    v29 = objc_msgSend(v25, "optInDate");
    if (v29)
    {
      v30 = v29;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v29);

      v31 = v8;
      v32 = *(void (**)(void))(v8 + 32);
      v33 = (uint64_t)v74;
      v34 = v27;
      ((void (*)(char *, char *, uint64_t))v32)(v74, v11, v27);
      v35 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56);
      v35(v33, 0, 1, v34);
      v36 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v33, 1, v34);
      v37 = v28;
      v38 = v77;
      if (v36 != 1)
      {
        v39 = v68;
        v32();
        v40 = (uint64_t)v72;
        v41 = *(_QWORD *)(v73 + 24);
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v72, v39, v34);
        v35(v40, 0, 1, v34);
        swift_retain(v41);
        v42 = sub_1000CFC30(v40);
        v56 = v42;
        sub_10001E5E4(v40);
        v57 = swift_release(v41);
        if ((v56 & 1) != 0)
        {
          v58 = *(_QWORD *)(v73 + 24);
          swift_retain(v58);
          sub_1000CE914();
          swift_release(v58);
          sub_100109FB8();
          (*(void (**)(char *, uint64_t))(v31 + 8))(v39, v34);

          *v37 = 0;
        }
        else
        {
          v59 = v67;
          v60 = defaultLogger()(v57);
          v61 = Logger.logObject.getter(v60);
          v63 = static os_log_type_t.info.getter(v61, v62);
          if (os_log_type_enabled(v61, v63))
          {
            v64 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v64 = 0;
            _os_log_impl((void *)&_mh_execute_header, v61, v63, "User Consent exists. hasUserConsent -> TRUE", v64, 2u);
            v65 = v64;
            v39 = v68;
            swift_slowDealloc(v65, -1, -1);
          }

          (*(void (**)(char *, uint64_t))(v71 + 8))(v59, v38);
          (*(void (**)(char *, uint64_t))(v31 + 8))(v39, v34);
          *v37 = 1;
        }
        return;
      }
    }
    else
    {
      v33 = (uint64_t)v74;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v74, 1, 1, v27);
      v37 = v28;
      v38 = v77;
    }
    v49 = sub_10001E5E4(v33);
    v50 = v70;
    v51 = defaultLogger()(v49);
    v52 = Logger.logObject.getter(v51);
    v54 = static os_log_type_t.info.getter(v52, v53);
    if (os_log_type_enabled(v52, v54))
    {
      v55 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v55 = 0;
      _os_log_impl((void *)&_mh_execute_header, v52, v54, "User consent date doesn't exist. hasUserConsent -> FALSE", v55, 2u);
      swift_slowDealloc(v55, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v71 + 8))(v50, v38);
    *v37 = 0;
  }
  else
  {
    v43 = v26;
    v44 = defaultLogger()(0);
    v45 = Logger.logObject.getter(v44);
    v47 = static os_log_type_t.info.getter(v45, v46);
    if (os_log_type_enabled(v45, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v48 = 0;
      _os_log_impl((void *)&_mh_execute_header, v45, v47, "User consent doesn't exist. hasUserConsent -> FALSE", v48, 2u);
      swift_slowDealloc(v48, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v71 + 8))(v43, v77);
    *v28 = 0;
  }
}

uint64_t sub_1001B7614()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1[32] = v0;
  v2 = type metadata accessor for DIPError.Code(0);
  v1[33] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[34] = v3;
  v1[35] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Logger(0);
  v1[36] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[37] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[38] = swift_task_alloc(v6);
  v1[39] = swift_task_alloc(v6);
  return swift_task_switch(sub_1001B76AC, 0, 0);
}

uint64_t sub_1001B76AC()
{
  uint64_t v0;
  id v1;
  Swift::String v2;
  Swift::Bool v3;
  _QWORD *v4;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t v8;
  os_unfair_lock_s *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v1 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v2._object = (void *)0x8000000100552930;
  v2._countAndFlagsBits = 0xD000000000000021;
  v3 = NSUserDefaults.internalBool(forKey:)(v2);

  if (v3)
  {
    v4 = (_QWORD *)swift_task_alloc(dword_100637A94);
    *(_QWORD *)(v0 + 320) = v4;
    *v4 = v0;
    v4[1] = sub_1001B7880;
    return sub_1001B97F8();
  }
  else
  {
    if (qword_10062F490 != -1)
      swift_once(&qword_10062F490, sub_100139C84);
    v6 = qword_1006702A0;
    v7 = *(os_unfair_lock_s **)(qword_1006702A0 + 16);
    v8 = (uint64_t)&v7[4];
    v9 = v7 + 52;
    os_unfair_lock_lock(v7 + 52);
    sub_100139D14(v8, v6, (_OWORD *)(v0 + 16));
    os_unfair_lock_unlock(v9);
    v10 = *(_QWORD *)(v0 + 256);
    v11 = *(_QWORD *)(v0 + 80);
    *(_QWORD *)(v0 + 336) = v11;
    swift_retain(v11);
    sub_10001D410((_QWORD *)(v0 + 16));
    v12 = swift_allocObject(&unk_10060A9A8, 32, 7);
    *(_QWORD *)(v0 + 344) = v12;
    *(_QWORD *)(v12 + 16) = sub_1001B9764;
    *(_QWORD *)(v12 + 24) = v10;
    v13 = async function pointer to AsyncCoreDataContainer.performRead<A>(_:)[1];
    swift_retain_n(v10, 2);
    v14 = (_QWORD *)swift_task_alloc(v13);
    *(_QWORD *)(v0 + 352) = v14;
    *v14 = v0;
    v14[1] = sub_1001B7AF4;
    return AsyncCoreDataContainer.performRead<A>(_:)(v0 + 232, sub_1001B97B8, v12, &type metadata for IdentityProofingDataSharingUserConsent);
  }
}

uint64_t sub_1001B7880()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*v1 + 320);
  v3 = *v1;
  *(_QWORD *)(v3 + 328) = v0;
  swift_task_dealloc(v2);
  if (!v0)
    return swift_task_switch(sub_1001B7914, 0, 0);
  v4 = *(_QWORD *)(v3 + 304);
  v5 = *(_QWORD *)(v3 + 280);
  swift_task_dealloc(*(_QWORD *)(v3 + 312));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

void sub_1001B7914(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  uint64_t v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v2 = defaultLogger()(a1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.debug.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "user consent date has been set to 91 days back from today.", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = *(_QWORD *)(v1 + 312);
  v7 = *(_QWORD *)(v1 + 288);
  v8 = *(_QWORD *)(v1 + 296);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  v9 = *(_QWORD *)(v1 + 328);
  if (qword_10062F490 != -1)
    swift_once(&qword_10062F490, sub_100139C84);
  v10 = qword_1006702A0;
  v11 = *(os_unfair_lock_s **)(qword_1006702A0 + 16);
  v12 = (uint64_t)&v11[4];
  v13 = v11 + 52;
  os_unfair_lock_lock(v11 + 52);
  sub_100139D14(v12, v10, (_OWORD *)(v1 + 16));
  os_unfair_lock_unlock(v13);
  if (!v9)
  {
    v14 = *(_QWORD *)(v1 + 256);
    v15 = *(_QWORD *)(v1 + 80);
    *(_QWORD *)(v1 + 336) = v15;
    swift_retain(v15);
    sub_10001D410((_QWORD *)(v1 + 16));
    v16 = swift_allocObject(&unk_10060A9A8, 32, 7);
    *(_QWORD *)(v1 + 344) = v16;
    *(_QWORD *)(v16 + 16) = sub_1001B9764;
    *(_QWORD *)(v16 + 24) = v14;
    v17 = async function pointer to AsyncCoreDataContainer.performRead<A>(_:)[1];
    swift_retain_n(v14, 2);
    v18 = (_QWORD *)swift_task_alloc(v17);
    *(_QWORD *)(v1 + 352) = v18;
    *v18 = v1;
    v18[1] = sub_1001B7AF4;
    AsyncCoreDataContainer.performRead<A>(_:)(v1 + 232, sub_1001B97B8, v16, &type metadata for IdentityProofingDataSharingUserConsent);
  }
}

uint64_t sub_1001B7AF4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(*v1 + 352);
  v3 = *v1;
  *(_QWORD *)(v3 + 360) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_1001B7BC0, 0, 0);
  v5 = *(_QWORD *)(v3 + 336);
  v7 = *(_QWORD *)(v3 + 304);
  v6 = *(_QWORD *)(v3 + 312);
  v8 = *(_QWORD *)(v3 + 280);
  v9 = *(_QWORD *)(v3 + 256);
  swift_release(*(_QWORD *)(v3 + 344));
  swift_release(v9);
  swift_release(v5);
  v10 = *(_QWORD *)(v3 + 232);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(uint64_t))(v3 + 8))(v10);
}

uint64_t sub_1001B7BC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = *(_QWORD *)(v0 + 360);
  v2 = *(_QWORD *)(v0 + 336);
  v3 = *(_QWORD *)(v0 + 256);
  swift_release(*(_QWORD *)(v0 + 344));
  swift_release(v3);
  v4 = swift_release(v2);
  defaultLogger()(v4);
  swift_errorRetain(v1);
  v5 = swift_errorRetain(v1);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = *(_QWORD *)(v0 + 360);
    v27 = *(_QWORD *)(v0 + 296);
    v28 = *(_QWORD *)(v0 + 288);
    v29 = *(_QWORD *)(v0 + 304);
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v30 = v10;
    *(_DWORD *)v9 = 136315138;
    swift_getErrorValue(v8, v0 + 240, v0 + 208);
    v11 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 224));
    v13 = v12;
    *(_QWORD *)(v0 + 248) = sub_1000E3AC8(v11, v12, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 248, v0 + 256, v9 + 4);
    swift_bridgeObjectRelease(v13);
    swift_errorRelease(v8);
    swift_errorRelease(v8);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Error while fetching user consent %s", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v29, v28);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 360);
    v16 = *(_QWORD *)(v0 + 296);
    v15 = *(_QWORD *)(v0 + 304);
    v17 = *(_QWORD *)(v0 + 288);
    swift_errorRelease(v14);
    swift_errorRelease(v14);

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  }
  v18 = *(_QWORD *)(v0 + 360);
  v19 = *(_QWORD *)(v0 + 280);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 272) + 104))(v19, enum case for DIPError.Code.biomeDataSharingIdentityPassDoesntExist(_:), *(_QWORD *)(v0 + 264));
  swift_errorRetain(v18);
  v20 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
  v21 = type metadata accessor for DIPError(0);
  v22 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
  swift_allocError(v21, v22, 0, 0);
  v23 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000021, 0x8000000100552960, v18, v19, 0, v20, 0xD000000000000077, 0x8000000100552990, 0xD000000000000012, 0x8000000100548F30, 121);
  swift_willThrow(v23);
  swift_errorRelease(v18);
  v24 = *(_QWORD *)(v0 + 304);
  v25 = *(_QWORD *)(v0 + 280);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1001B7EDC(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id v39;
  void *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  void (*v47)(uint64_t, _QWORD, uint64_t, uint64_t);
  int v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  void (*v57)(char *, uint64_t);
  id v58;
  id v59;
  void *v60;
  void *v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  uint64_t v66;
  char *v67;
  char v68;
  uint64_t v69;
  NSObject *v70;
  uint64_t v71;
  os_log_type_t v72;
  BOOL v73;
  _QWORD *v74;
  uint64_t v75;
  uint8_t *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  uint8_t *v82;
  uint8_t *v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  NSObject *v99;
  os_log_type_t v100;
  uint8_t *v101;
  char *v102;
  char *v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  unsigned __int16 v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  NSObject *v112;
  uint64_t v113;
  os_log_type_t v114;
  uint8_t *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  id v119;
  NSObject *v120;
  os_log_type_t v121;
  uint8_t *v122;
  uint64_t v123;
  _QWORD *v124;
  char *v125;
  uint64_t v126;
  NSObject *v127;
  os_log_type_t v128;
  uint8_t *v129;
  uint64_t v130;
  uint64_t v131;
  Swift::String v132;
  Swift::String v133;
  uint64_t v134;
  unint64_t v135;
  char *v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  char *v145;
  char *v146;
  char *v147;
  id v148;
  char *v149;
  char *v150;
  uint64_t v151;
  char *v152;
  char *v153;
  _QWORD *v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;

  v151 = a2;
  v154 = a3;
  v155 = type metadata accessor for DIPError.Code(0);
  v160 = *(_QWORD *)(v155 - 8);
  __chkstk_darwin(v155);
  v159 = (char *)&v141 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100004828(&qword_100633990);
  v6 = __chkstk_darwin(v5);
  v150 = (char *)&v141 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v156 = (char *)&v141 - v8;
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  v157 = v9;
  v158 = v10;
  v11 = __chkstk_darwin(v9);
  v152 = (char *)&v141 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v153 = (char *)&v141 - v13;
  v14 = type metadata accessor for Logger(0);
  v161 = *(_QWORD *)(v14 - 8);
  v162 = v14;
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v141 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v141 - v19;
  v21 = __chkstk_darwin(v18);
  v23 = (char *)&v141 - v22;
  v24 = __chkstk_darwin(v21);
  v26 = (char *)&v141 - v25;
  v27 = __chkstk_darwin(v24);
  v29 = (char *)&v141 - v28;
  v30 = __chkstk_darwin(v27);
  v32 = (char *)&v141 - v31;
  __chkstk_darwin(v30);
  v34 = (char *)&v141 - v33;
  v35 = a1;
  v36 = v163;
  v37 = (void *)sub_10010A318();
  if (v36)
    return;
  v38 = v37;
  v149 = v32;
  v146 = v26;
  v147 = v29;
  v144 = v35;
  v143 = v23;
  v145 = v17;
  v142 = v20;
  v163 = 0;
  if (!v37)
  {
    v69 = defaultLogger()(0);
    v70 = Logger.logObject.getter(v69);
    v72 = static os_log_type_t.info.getter(v70, v71);
    v73 = os_log_type_enabled(v70, v72);
    v74 = v154;
    v75 = v161;
    if (v73)
    {
      v76 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v76 = 0;
      _os_log_impl((void *)&_mh_execute_header, v70, v72, "User consent doesn't exist", v76, 2u);
      swift_slowDealloc(v76, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v75 + 8))(v34, v162);
    *v74 = 1;
    return;
  }
  v39 = objc_msgSend(v37, "optInDate");
  v148 = v38;
  if (!v39)
  {
    v46 = (uint64_t)v156;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v158 + 56))(v156, 1, 1, v157);
    v50 = v159;
    v49 = v160;
    goto LABEL_14;
  }
  v40 = v39;
  v41 = v163;
  v42 = v152;
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v39);

  v43 = v157;
  v44 = v158;
  v45 = *(void (**)(char *, char *, uint64_t))(v158 + 32);
  v46 = (uint64_t)v156;
  v45(v156, v42, v157);
  v47 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v44 + 56);
  v47(v46, 0, 1, v43);
  v48 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v46, 1, v43);
  v50 = v159;
  v49 = v160;
  if (v48 == 1)
  {
LABEL_14:
    v77 = sub_10001E5E4(v46);
    v78 = v149;
    v79 = defaultLogger()(v77);
    v80 = Logger.logObject.getter(v79);
    v81 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v80, v81))
    {
      v82 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v82 = 0;
      _os_log_impl((void *)&_mh_execute_header, v80, v81, "User consent date doesn't exist. Exiting with an error as the Date should always exist if consent exists.", v82, 2u);
      v83 = v82;
      v49 = v160;
      swift_slowDealloc(v83, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v161 + 8))(v78, v162);
    (*(void (**)(char *, _QWORD, uint64_t))(v49 + 104))(v50, enum case for DIPError.Code.biomeDataSharingUserConsentDateDoesntExist(_:), v155);
    v84 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v85 = type metadata accessor for DIPError(0);
    v86 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    swift_allocError(v85, v86, 0, 0);
    v87 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000027, 0x8000000100552A90, 0, v50, 0, v84, 0xD000000000000077, 0x8000000100552990, 0xD000000000000012, 0x8000000100548F30, 79);
    swift_willThrow(v87);

    return;
  }
  v51 = ((uint64_t (*)(char *, uint64_t, uint64_t))v45)(v153, v46, v43);
  v52 = v147;
  v53 = defaultLogger()(v51);
  v54 = Logger.logObject.getter(v53);
  v55 = static os_log_type_t.debug.getter(v54);
  if (os_log_type_enabled(v54, v55))
  {
    v56 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v56 = 0;
    _os_log_impl((void *)&_mh_execute_header, v54, v55, "Checking if the 90 retention period has elapsed...", v56, 2u);
    swift_slowDealloc(v56, -1, -1);
  }

  v57 = *(void (**)(char *, uint64_t))(v161 + 8);
  v57(v52, v162);
  v58 = v148;
  v59 = objc_msgSend(v148, "credentialIdentifier");
  if (!v59)
  {
    v88 = v159;
    (*(void (**)(char *, _QWORD, uint64_t))(v160 + 104))(v159, enum case for DIPError.Code.credentialIdentifierDoesNotExist(_:), v155);
    v89 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v90 = type metadata accessor for DIPError(0);
    v91 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    swift_allocError(v90, v91, 0, 0);
    v92 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000049, 0x8000000100552AC0, 0, v88, 0, v89, 0xD000000000000077, 0x8000000100552990, 0xD000000000000012, 0x8000000100548F30, 85);
    swift_willThrow(v92);

    (*(void (**)(char *, uint64_t))(v44 + 8))(v153, v43);
    return;
  }
  v60 = v59;
  v156 = (char *)v57;
  v161 = static String._unconditionallyBridgeFromObjectiveC(_:)(v59);
  v62 = v61;

  v63 = (uint64_t)v150;
  v64 = *(_QWORD *)(v151 + 24);
  v65 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
  v66 = v44;
  v67 = v153;
  v65(v150, v153, v43);
  v47(v63, 0, 1, v43);
  swift_retain(v64);
  v68 = sub_1000CFC30(v63);
  if (v41)
  {

    swift_bridgeObjectRelease(v62);
    swift_release(v64);
    sub_10001E5E4(v63);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v43);
    return;
  }
  v93 = v68;
  v94 = v161;
  sub_10001E5E4(v63);
  v95 = swift_release(v64);
  if ((v93 & 1) != 0)
  {
    swift_bridgeObjectRelease(v62);
    v96 = *(_QWORD *)(v151 + 24);
    swift_retain(v96);
    sub_1000CE914();
    swift_release(v96);
    sub_100109FB8();
    (*(void (**)(char *, uint64_t))(v158 + 8))(v67, v43);

    *v154 = 1;
    return;
  }
  v97 = v146;
  v98 = defaultLogger()(v95);
  v99 = Logger.logObject.getter(v98);
  v100 = static os_log_type_t.debug.getter(v99);
  if (os_log_type_enabled(v99, v100))
  {
    v101 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v101 = 0;
    _os_log_impl((void *)&_mh_execute_header, v99, v100, "Retention timeline looks good. Checking if the user has withdrawn the consent", v101, 2u);
    swift_slowDealloc(v101, -1, -1);
  }

  v102 = v97;
  v103 = v156;
  ((void (*)(char *, uint64_t))v156)(v102, v162);
  v104 = v148;
  if (objc_msgSend(v148, "optInStatus"))
  {
    v105 = v151;
    v106 = *(_QWORD *)(v151 + 32);
    swift_retain(v106);
    v107 = (unsigned __int16)sub_10038C6E0(v94, (uint64_t)v62);
    v108 = swift_release(v106);
    if ((v107 & 0x100) == 0)
    {
      v109 = swift_bridgeObjectRelease(v62);
      v110 = v143;
      v111 = defaultLogger()(v109);
      v112 = Logger.logObject.getter(v111);
      v114 = static os_log_type_t.info.getter(v112, v113);
      if (os_log_type_enabled(v112, v114))
      {
        v115 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v115 = 0;
        _os_log_impl((void *)&_mh_execute_header, v112, v114, "No Identity Pass exists.", v115, 2u);
        swift_slowDealloc(v115, -1, -1);
      }

      v116 = v110;
      goto LABEL_28;
    }
    if ((v107 & 1) != 0)
    {
      v125 = v142;
      defaultLogger()(v108);
      swift_bridgeObjectRetain(v62);
      v127 = Logger.logObject.getter(v126);
      v128 = static os_log_type_t.debug.getter(v127);
      if (!os_log_type_enabled(v127, v128))
      {

        swift_bridgeObjectRelease_n(v62, 2);
        v116 = v125;
LABEL_28:
        ((void (*)(char *, uint64_t))v103)(v116, v162);
        (*(void (**)(char *, uint64_t))(v158 + 8))(v67, v43);
        *v154 = 0;
        return;
      }
      v129 = (uint8_t *)swift_slowAlloc(12, -1);
      v130 = swift_slowAlloc(32, -1);
      v163 = 0;
      v164 = v130;
      v131 = v130;
      *(_DWORD *)v129 = 136315138;
      swift_bridgeObjectRetain(v62);
      v166 = sub_1000E3AC8(v161, (unint64_t)v62, &v164);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v166, &v167, v129 + 4);
      swift_bridgeObjectRelease_n(v62, 3);
      _os_log_impl((void *)&_mh_execute_header, v127, v128, "Matching pass exists for %s. Returning the consent as share", v129, 0xCu);
      swift_arrayDestroy(v131, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v131, -1, -1);
      swift_slowDealloc(v129, -1, -1);

      ((void (*)(char *, uint64_t))v103)(v142, v162);
      (*(void (**)(char *, uint64_t))(v158 + 8))(v67, v157);
      *v154 = 0;
    }
    else
    {
      v123 = *(_QWORD *)(v105 + 24);
      swift_retain(v123);
      sub_1000CE914();
      swift_release(v123);
      v164 = 0;
      v165 = 0xE000000000000000;
      _StringGuts.grow(_:)(59);
      v132._countAndFlagsBits = 0xD000000000000039;
      v132._object = (void *)0x8000000100552B10;
      String.append(_:)(v132);
      v133._countAndFlagsBits = v94;
      v133._object = v62;
      String.append(_:)(v133);
      swift_bridgeObjectRelease(v62);
      v134 = v164;
      v135 = v165;
      v136 = v159;
      (*(void (**)(char *, _QWORD, uint64_t))(v160 + 104))(v159, enum case for DIPError.Code.biomeDataSharingIdentityPassDoesntExist(_:), v155);
      v137 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
      v138 = type metadata accessor for DIPError(0);
      v139 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
      swift_allocError(v138, v139, 0, 0);
      v140 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v134, v135, 0, v136, 0, v137, 0xD000000000000077, 0x8000000100552990, 0xD000000000000012, 0x8000000100548F30, 112);
      swift_willThrow(v140);

      (*(void (**)(char *, uint64_t))(v158 + 8))(v67, v43);
    }
  }
  else
  {
    v117 = swift_bridgeObjectRelease(v62);
    v118 = v145;
    defaultLogger()(v117);
    v119 = v104;
    v120 = Logger.logObject.getter(v119);
    v121 = static os_log_type_t.debug.getter(v120);
    if (os_log_type_enabled(v120, v121))
    {
      v122 = (uint8_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v122 = 67109120;
      v67 = v153;
      LODWORD(v164) = objc_msgSend(v119, "optInStatus");
      v43 = v157;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v164, (char *)&v164 + 4, v122 + 4);

      _os_log_impl((void *)&_mh_execute_header, v120, v121, "Consent has been withdrawn. Current status is %{BOOL}d", v122, 8u);
      v118 = v145;
      swift_slowDealloc(v122, -1, -1);
    }
    else
    {

    }
    v124 = v154;

    ((void (*)(char *, uint64_t))v156)(v118, v162);
    (*(void (**)(char *, uint64_t))(v158 + 8))(v67, v43);
    *v124 = 1;
  }
}

void sub_1001B8D10(uint64_t a1, uint64_t a2, void (*a3)(_QWORD), uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  Swift::Bool v17;
  id v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  uint64_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint8_t *v35;
  id v36;
  uint64_t v37;
  char *v38;
  void (*v39)(_QWORD);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v40 = a2;
  v41 = a4;
  v39 = a3;
  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DIPError.Code(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000D828C();
  if (!v4)
  {
    v37 = v6;
    v38 = v8;
    if (v13)
    {
      v14 = (void *)v13;
      v15 = v40;
      v16 = IdentityProofingDataSharingUserConsent.rawValue.getter(v40);
      v17 = v16 == IdentityProofingDataSharingUserConsent.rawValue.getter(0);
      StoredProofingBiomeData.update(optInStatus:)(v17);
      v18 = sub_1000D6288();
      v36 = v14;
      v23 = v38;
      v24 = defaultLogger()(v18);
      v25 = Logger.logObject.getter(v24);
      v26 = static os_log_type_t.debug.getter(v25);
      v27 = os_log_type_enabled(v25, v26);
      v28 = v5;
      v29 = v37;
      if (v27)
      {
        v30 = (uint8_t *)swift_slowAlloc(12, -1);
        v31 = swift_slowAlloc(32, -1);
        v44 = v31;
        *(_DWORD *)v30 = 136315138;
        v35 = v30 + 4;
        v32 = IdentityProofingDataSharingUserConsent.debugDescription.getter(v15);
        v34 = v33;
        v42 = sub_1000E3AC8(v32, v33, &v44);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43, v35);
        swift_bridgeObjectRelease(v34);
        _os_log_impl((void *)&_mh_execute_header, v25, v26, "Successfully updated the user's consent to %s", v30, 0xCu);
        swift_arrayDestroy(v31, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v31, -1, -1);
        swift_slowDealloc(v30, -1, -1);

        (*(void (**)(char *, uint64_t))(v29 + 8))(v38, v28);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v29 + 8))(v23, v28);
      }
      v39(0);

    }
    else
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for DIPError.Code.missingProofingMetadata(_:), v9);
      v19 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
      v20 = type metadata accessor for DIPError(0);
      v21 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
      swift_allocError(v20, v21, 0, 0);
      v22 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000021, 0x8000000100552A10, 0, v12, 0, v19, 0xD000000000000077, 0x8000000100552990, 0xD000000000000028, 0x8000000100552C20, 131);
      swift_willThrow(v22);
    }
  }
}

void sub_1001B9088(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void *v25;
  char *v26;
  void (*v27)(_QWORD, _QWORD);
  uint8_t *v28;
  char *v29;
  char *v30;
  char *v31;
  void (*v32)(_QWORD, _QWORD);
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  char *v38;
  uint64_t v39;
  char *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  char *v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t);
  char *v66;
  id v67;
  _QWORD v68[2];
  id v69;
  uint64_t v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  char *v84;
  uint8_t *v85;
  void (*v86)(_QWORD, _QWORD);
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  v2 = type metadata accessor for Logger(0);
  v78 = *(_QWORD *)(v2 - 8);
  v79 = v2;
  __chkstk_darwin(v2);
  v87 = (char *)v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Calendar.Component(0);
  v85 = *(uint8_t **)(v4 - 8);
  v86 = (void (*)(_QWORD, _QWORD))v4;
  __chkstk_darwin(v4);
  v84 = (char *)v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Calendar(0);
  v80 = *(_QWORD *)(v6 - 8);
  v81 = v6;
  __chkstk_darwin(v6);
  v83 = (char *)v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100004828(&qword_100633990);
  __chkstk_darwin(v8);
  v82 = (char *)v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v12);
  v17 = (char *)v68 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)v68 - v18;
  v20 = type metadata accessor for DIPError.Code(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)v68 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = v88;
  v25 = (void *)sub_10010A318();
  if (!v24)
  {
    v73 = v17;
    v74 = v11;
    v75 = v21;
    v76 = v20;
    v26 = v84;
    v28 = v85;
    v27 = v86;
    v77 = v23;
    v71 = v14;
    v72 = v19;
    v88 = v10;
    v29 = v87;
    v70 = a1;
    if (v25)
    {
      v68[1] = 0;
      v69 = v25;
      v30 = v83;
      static Calendar.current.getter(v25);
      v31 = v26;
      v32 = v27;
      v33 = (*((uint64_t (**)(char *, _QWORD, void (*)(_QWORD, _QWORD)))v28 + 13))(v26, enum case for Calendar.Component.day(_:), v27);
      v34 = v73;
      Date.init()(v33);
      v35 = (uint64_t)v82;
      Calendar.date(byAdding:value:to:wrappingComponents:)(v26, -91, v34, 0);
      v36 = v74;
      v37 = *(void (**)(char *, uint64_t))(v74 + 8);
      v38 = v34;
      v39 = v88;
      v37(v38, v88);
      (*((void (**)(char *, _QWORD))v28 + 1))(v31, v32);
      (*(void (**)(char *, uint64_t))(v80 + 8))(v30, v81);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v35, 1, v39) == 1)
      {
        sub_10001E5E4(v35);
        v40 = v77;
        (*(void (**)(char *, _QWORD, uint64_t))(v75 + 104))(v77, enum case for DIPError.Code.biomeDataSharingUserConsentDateDoesntExist(_:), v76);
        v41 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
        v42 = type metadata accessor for DIPError(0);
        v43 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
        swift_allocError(v42, v43, 0, 0);
        v44 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000021, 0x8000000100552A60, 0, v40, 0, v41, 0xD000000000000077, 0x8000000100552990, 0xD00000000000001CLL, 0x8000000100552A40, 153);
        swift_willThrow(v44);

      }
      else
      {
        v86 = (void (*)(_QWORD, _QWORD))v37;
        v50 = (uint64_t)v72;
        v51 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 32))(v72, v35, v39);
        defaultLogger()(v51);
        v52 = v71;
        v53 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 16))(v71, v50, v39);
        v54 = Logger.logObject.getter(v53);
        v55 = static os_log_type_t.debug.getter(v54);
        if (os_log_type_enabled(v54, v55))
        {
          v56 = v39;
          v57 = (uint8_t *)swift_slowAlloc(12, -1);
          v58 = swift_slowAlloc(32, -1);
          v91 = v58;
          *(_DWORD *)v57 = 136315138;
          v85 = v57 + 4;
          v59 = sub_100004790((unint64_t *)&qword_100633310, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
          v60 = dispatch thunk of CustomStringConvertible.description.getter(v56, v59);
          v62 = v61;
          v89 = sub_1000E3AC8(v60, v61, &v91);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v89, &v90, v85);
          swift_bridgeObjectRelease(v62);
          v63 = v52;
          v64 = v56;
          v50 = (uint64_t)v72;
          v65 = v86;
          v86(v63, v64);
          _os_log_impl((void *)&_mh_execute_header, v54, v55, "Setting the consent date to %s", v57, 0xCu);
          swift_arrayDestroy(v58, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v58, -1, -1);
          swift_slowDealloc(v57, -1, -1);
        }
        else
        {
          v66 = v52;
          v65 = v86;
          v86(v66, v39);
        }

        (*(void (**)(char *, uint64_t))(v78 + 8))(v29, v79);
        v67 = v69;
        StoredProofingBiomeData.update(optInDate:)(v50);
        sub_100109FB8();
        v65(v50, v88);

      }
    }
    else
    {
      v45 = v77;
      (*(void (**)(char *, _QWORD, uint64_t))(v75 + 104))(v77, enum case for DIPError.Code.proofingBiomeDataDoesntExist(_:), v76);
      v46 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
      v47 = type metadata accessor for DIPError(0);
      v48 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
      swift_allocError(v47, v48, 0, 0);
      v49 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000021, 0x8000000100552A10, 0, v45, 0, v46, 0xD000000000000077, 0x8000000100552990, 0xD00000000000001CLL, 0x8000000100552A40, 149);
      swift_willThrow(v49);
    }
  }
}

uint64_t sub_1001B9718()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for IdentityProofingDataSharingManager()
{
  return objc_opt_self(_TtC8coreidvd34IdentityProofingDataSharingManager);
}

void sub_1001B9764(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_1001B7EDC(a1, v2, a2);
}

void sub_1001B977C(uint64_t *a1)
{
  sub_1001B9088(*a1);
}

uint64_t sub_1001B9794()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

_QWORD *sub_1001B97B8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *result;
  uint64_t v6;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr, _QWORD))(v2 + 16))(&v6, *a1);
  if (!v3)
    *a2 = v6;
  return result;
}

uint64_t sub_1001B97F8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = type metadata accessor for Logger(0);
  v0[31] = v1;
  v2 = *(_QWORD *)(v1 - 8);
  v0[32] = v2;
  v0[33] = swift_task_alloc((*(_QWORD *)(v2 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001B9854, 0, 0);
}

uint64_t sub_1001B9854()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  _QWORD *v6;

  if (qword_10062F490 != -1)
    swift_once(&qword_10062F490, sub_100139C84);
  v1 = qword_1006702A0;
  v2 = *(os_unfair_lock_s **)(qword_1006702A0 + 16);
  v3 = (uint64_t)&v2[4];
  v4 = v2 + 52;
  os_unfair_lock_lock(v2 + 52);
  sub_100139D14(v3, v1, (_OWORD *)(v0 + 16));
  os_unfair_lock_unlock(v4);
  v5 = *(_QWORD *)(v0 + 80);
  *(_QWORD *)(v0 + 272) = v5;
  swift_retain(v5);
  sub_10001D410((_QWORD *)(v0 + 16));
  v6 = (_QWORD *)swift_task_alloc(async function pointer to AsyncCoreDataContainer.performRead<A>(_:)[1]);
  *(_QWORD *)(v0 + 280) = v6;
  *v6 = v0;
  v6[1] = sub_1001B9960;
  return AsyncCoreDataContainer.performRead<A>(_:)(v6, sub_1001B977C, 0, (char *)&type metadata for () + 8);
}

uint64_t sub_1001B9960()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 280);
  *(_QWORD *)(*v1 + 288) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1001B9A00;
  }
  else
  {
    swift_release(*(_QWORD *)(v2 + 272));
    v4 = sub_1001B99CC;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1001B99CC()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 264));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001B9A00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 288);
  v2 = swift_release(*(_QWORD *)(v0 + 272));
  defaultLogger()(v2);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(_QWORD *)(v0 + 288);
    v17 = *(_QWORD *)(v0 + 256);
    v18 = *(_QWORD *)(v0 + 248);
    v19 = *(_QWORD *)(v0 + 264);
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v20 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_getErrorValue(v6, v0 + 232, v0 + 208);
    v9 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 224));
    v11 = v10;
    *(_QWORD *)(v0 + 240) = sub_1000E3AC8(v9, v10, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 240, v0 + 248, v7 + 4);
    swift_bridgeObjectRelease(v11);
    swift_errorRelease(v6);
    swift_errorRelease(v6);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Received an error while force setting user consent in internal settings %s", v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

    swift_errorRelease(v6);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v19, v18);
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 288);
    v14 = *(_QWORD *)(v0 + 256);
    v13 = *(_QWORD *)(v0 + 264);
    v15 = *(_QWORD *)(v0 + 248);
    swift_errorRelease(v12);
    swift_errorRelease(v12);
    swift_errorRelease(v12);

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  swift_task_dealloc(*(_QWORD *)(v0 + 264));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001B9C08(uint64_t a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  os_log_type_t v17;
  _BOOL4 v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[2];

  v4 = type metadata accessor for DIPError.Code(0);
  v37 = *(_QWORD *)(v4 - 8);
  v38 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DIPError(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = type metadata accessor for Logger(0);
  v39 = *(_QWORD *)(v9 - 8);
  v40 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = swift_allocObject(&unk_10060A9F8, 24, 7);
  *(_QWORD *)(v12 + 16) = a2;
  v13 = _Block_copy(a2);
  v14 = defaultLogger()(v13);
  v15 = Logger.logObject.getter(v14);
  v17 = static os_log_type_t.info.getter(v15, v16);
  v18 = os_log_type_enabled(v15, v17);
  v36 = a1;
  if (v18)
  {
    v32 = v6;
    v19 = swift_slowAlloc(12, -1);
    v35 = v7;
    v20 = (uint8_t *)v19;
    v21 = swift_slowAlloc(32, -1);
    v34 = v8;
    v22 = v21;
    v42[0] = v21;
    v33 = v12;
    *(_DWORD *)v20 = 136315138;
    v23 = IdentityProofingDataSharingUserConsent.debugDescription.getter(a1);
    v25 = v24;
    v41 = sub_1000E3AC8(v23, v24, v42);
    v12 = v33;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, v42, v20 + 4);
    swift_bridgeObjectRelease(v25);
    _os_log_impl((void *)&_mh_execute_header, v15, v17, "User has changed the consent to %s", v20, 0xCu);
    swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v20, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v39 + 8))(v11, v40);
  v26 = type metadata accessor for IdentityProofingDataContext();
  swift_allocObject(v26, 24, 7);
  sub_1000D6044();
  v28 = v27;
  v29 = (_QWORD *)swift_allocObject(&unk_10060AA20, 48, 7);
  v30 = v36;
  v29[2] = v28;
  v29[3] = v30;
  v29[4] = sub_1001BA098;
  v29[5] = v12;
  swift_retain(v28);
  swift_retain(v12);
  sub_1000D6570((uint64_t)sub_1001BA0CC, (uint64_t)v29);
  swift_release(v12);
  swift_release(v28);
  return swift_release(v29);
}

void sub_1001BA01C(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  sub_1001B707C(a1, v2, a2);
}

_QWORD *sub_1001BA034@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *result;
  uint64_t v6;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr, _QWORD))(v2 + 16))(&v6, *a1);
  if (!v3)
    *a2 = v6;
  return result;
}

uint64_t sub_1001BA074()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_1001BA098(uint64_t a1)
{
  uint64_t v1;

  sub_1004AB1BC(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1001BA0A0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_1001BA0CC()
{
  uint64_t v0;

  sub_1001B8D10(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(_QWORD))(v0 + 32), *(_QWORD *)(v0 + 40));
}

char *sub_1001BA0F0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  char *v6;
  NSString v7;
  id v8;
  objc_class *v9;
  char *v10;
  void *v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  os_log_type_t v16;
  uint8_t *v17;
  Swift::String v18;
  Swift::String v19;
  objc_super v21;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_allocWithZone((Class)NSXPCListener);
  v6 = v0;
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v5, "initWithMachServiceName:", v7);

  *(_QWORD *)&v6[OBJC_IVAR____TtC8coreidvd29DIPSystemNotificationListener_systemNotificationListener] = v8;
  v9 = (objc_class *)type metadata accessor for DIPSystemNotificationListener();
  v21.receiver = v6;
  v21.super_class = v9;
  v10 = (char *)objc_msgSendSuper2(&v21, "init");
  v11 = *(void **)&v10[OBJC_IVAR____TtC8coreidvd29DIPSystemNotificationListener_systemNotificationListener];
  v12 = v10;
  objc_msgSend(v11, "setDelegate:", v12);
  v13 = defaultLogger()(objc_msgSend(v11, "resume"));
  v14 = Logger.logObject.getter(v13);
  v16 = static os_log_type_t.info.getter(v14, v15);
  if (os_log_type_enabled(v14, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v16, "System notification listener is started", v17, 2u);
    swift_slowDealloc(v17, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v18._object = (void *)0x8000000100552EC0;
  v19._countAndFlagsBits = 0x6166346163346664;
  v19._object = (void *)0xE800000000000000;
  v18._countAndFlagsBits = 0xD000000000000024;
  logMilestone(tag:description:)(v19, v18);

  return v12;
}

id sub_1001BA2F4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  objc_class *v12;
  objc_super v14;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = defaultLogger()(v4);
  v8 = Logger.logObject.getter(v7);
  v10 = static os_log_type_t.info.getter(v8, v9);
  if (os_log_type_enabled(v8, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v10, "System notification listener is tearing down", v11, 2u);
    swift_slowDealloc(v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8coreidvd29DIPSystemNotificationListener_systemNotificationListener], "invalidate");
  v12 = (objc_class *)type metadata accessor for DIPSystemNotificationListener();
  v14.receiver = v1;
  v14.super_class = v12;
  return objc_msgSendSuper2(&v14, "dealloc");
}

uint64_t sub_1001BA450(uint64_t a1, const char *a2, const char *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  void *v14;
  id v15;
  NSObject *v16;
  uint64_t v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v29;
  NSObject *v30;
  uint64_t v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t (*v34)(char *, uint64_t);
  char *v35;
  uint64_t v36;
  const char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41[24];

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v36 - v11;
  a1 += 16;
  swift_beginAccess(a1, v41, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v14 = (void *)Strong;
    defaultLogger()(Strong);
    v15 = v14;
    v16 = Logger.logObject.getter(v15);
    v18 = static os_log_type_t.info.getter(v16, v17);
    if (os_log_type_enabled(v16, v18))
    {
      v19 = swift_slowAlloc(18, -1);
      v20 = swift_slowAlloc(32, -1);
      v38 = v6;
      v21 = v20;
      v40 = v20;
      *(_DWORD *)v19 = 136446466;
      v36 = v19 + 4;
      v22 = v15;
      v23 = objc_msgSend(v22, "description");
      v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
      v37 = a2;
      v25 = v24;
      v27 = v26;

      v39 = sub_1000E3AC8(v25, v27, &v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40, v36);

      swift_bridgeObjectRelease(v27);
      *(_WORD *)(v19 + 12) = 1026;
      LODWORD(v27) = objc_msgSend(v22, "processIdentifier");

      LODWORD(v39) = v27;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, (char *)&v39 + 4, v19 + 14);

      _os_log_impl((void *)&_mh_execute_header, v16, v18, v37, (uint8_t *)v19, 0x12u);
      swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v21, -1, -1);
      swift_slowDealloc(v19, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v38);
    }

    v34 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
    v35 = v10;
  }
  else
  {
    v29 = defaultLogger()(0);
    v30 = Logger.logObject.getter(v29);
    v32 = static os_log_type_t.info.getter(v30, v31);
    if (os_log_type_enabled(v30, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v33 = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, v32, a3, v33, 2u);
      swift_slowDealloc(v33, -1, -1);
    }

    v34 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
    v35 = v12;
  }
  return v34(v35, v6);
}

uint64_t type metadata accessor for DIPSystemNotificationListener()
{
  return objc_opt_self(_TtC8coreidvd29DIPSystemNotificationListener);
}

uint64_t sub_1001BA7D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v12;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = defaultLogger()(v4);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Destroying DIPSystemNotificationSessionProxy", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  swift_unknownObjectWeakDestroy(v1 + 16);

  swift_unknownObjectRelease(*(_QWORD *)(v1 + 32));
  return v1;
}

uint64_t sub_1001BA8E8()
{
  uint64_t v0;

  sub_1001BA7D8();
  return swift_deallocClassInstance(v0, 40, 7);
}

id sub_1001BA908(void *a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id result;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  _QWORD v35[3];
  uint64_t v36;
  uint64_t v37;

  v4 = type metadata accessor for WarmerUpper(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v35[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DIPAccountManager(0);
  v7 = static DIPAccountManager.isPrimaryAppleAccount(account:)(a1);
  if ((v7 & 1) != 0)
  {
    static DIPAccountManager.sharedInstance.getter(v35, v7);
    v8 = v36;
    v9 = v37;
    sub_10000806C(v35, v36);
    dispatch thunk of DIPAccountManagerProtocol.reloadPrimaryAccount()(v8, v9);
    _s8coreidvd24DigitalPresentmentHelperVwxx_0(v35);
    if (qword_10062F5E0 != -1)
      swift_once(&qword_10062F5E0, sub_1004F2EDC);
    sub_1004F4AE4();
  }
  result = objc_msgSend(a1, "accountType");
  if (!result)
  {
    __break(1u);
    goto LABEL_32;
  }
  v11 = result;
  v12 = objc_msgSend(result, "identifier");

  if (!v12)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(ACAccountTypeIdentifierAppleAccount);
    v18 = v19;
    goto LABEL_12;
  }
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v15 = v14;

  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(ACAccountTypeIdentifierAppleAccount);
  v18 = v17;
  if (!v15)
  {
LABEL_12:
    swift_bridgeObjectRelease(v18);
    goto LABEL_13;
  }
  if (v13 == v16 && v15 == v17)
  {
    swift_bridgeObjectRelease_n(v15, 2);
LABEL_22:
    if (qword_10062F530 != -1)
      swift_once(&qword_10062F530, sub_10037BB30);
    v30 = sub_1000352C0(v4, (uint64_t)qword_100670728);
    swift_beginAccess(v30, v35, 0, 0);
    sub_1000B6BCC(v30, (uint64_t)v6);
    v31 = 0;
LABEL_29:
    sub_10037A9AC(v31);
    sub_1000B7844((uint64_t)v6);
    return (id)a2(0);
  }
  v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, v16, v17, 0);
  swift_bridgeObjectRelease(v15);
  swift_bridgeObjectRelease(v18);
  if ((v29 & 1) != 0)
    goto LABEL_22;
LABEL_13:
  result = objc_msgSend(a1, "accountType");
  if (result)
  {
    v20 = result;
    v21 = objc_msgSend(result, "identifier");

    if (v21)
    {
      v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
      v24 = v23;

      v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(ACAccountTypeIdentifieriTunesStore);
      v27 = v26;
      if (v24)
      {
        if (v22 == v25 && v24 == v26)
        {
          swift_bridgeObjectRelease_n(v24, 2);
LABEL_26:
          if (qword_10062F530 != -1)
            swift_once(&qword_10062F530, sub_10037BB30);
          v33 = sub_1000352C0(v4, (uint64_t)qword_100670728);
          swift_beginAccess(v33, v35, 0, 0);
          sub_1000B6BCC(v33, (uint64_t)v6);
          v31 = 1;
          goto LABEL_29;
        }
        v32 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v24, v25, v26, 0);
        swift_bridgeObjectRelease(v24);
        swift_bridgeObjectRelease(v27);
        if ((v32 & 1) != 0)
          goto LABEL_26;
        return (id)a2(0);
      }
    }
    else
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(ACAccountTypeIdentifieriTunesStore);
      v27 = v28;
    }
    swift_bridgeObjectRelease(v27);
    return (id)a2(0);
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1001BACA0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  os_log_type_t v15;
  uint8_t *v16;
  void *v17;
  NSObject *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  uint64_t v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  _QWORD aBlock[5];
  uint64_t v33;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v30 - v9;
  type metadata accessor for DIPAccountManager(0);
  result = static DIPAccountManager.isPrimaryAppleAccount(account:)(a1);
  if ((result & 1) != 0)
  {
    v12 = defaultLogger()(result);
    v13 = Logger.logObject.getter(v12);
    v15 = static os_log_type_t.info.getter(v13, v14);
    if (os_log_type_enabled(v13, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v15, "User logged out of iCloud; cleaning up state", v16, 2u);
      swift_slowDealloc(v16, -1, -1);
    }

    v31 = *(void (**)(char *, uint64_t))(v5 + 8);
    v31(v10, v4);
    runAsyncAndBlock<A>(file:function:line:_:)("uired entitlement", 0xD00000000000002ALL, 0x8000000100552E00, 0xD000000000000028, 0x8000000100552DD0, 143, &unk_100637BB8, 0, (char *)&type metadata for () + 8);
    if (qword_10062F5E0 != -1)
      swift_once(&qword_10062F5E0, sub_1004F2EDC);
    v17 = (void *)qword_100670888;
    v18 = *(NSObject **)(qword_100670888 + OBJC_IVAR____TtC8coreidvd26DIPPushNotificationManager_dispatchQueue);
    v19 = swift_allocObject(&unk_10060ABA0, 24, 7);
    *(_QWORD *)(v19 + 16) = v17;
    v20 = swift_allocObject(&unk_10060ABC8, 32, 7);
    *(_QWORD *)(v20 + 16) = sub_1001BD180;
    *(_QWORD *)(v20 + 24) = v19;
    aBlock[4] = sub_1001AEFEC;
    v33 = v20;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100026DC8;
    aBlock[3] = &unk_10060ABE0;
    v21 = _Block_copy(aBlock);
    v22 = v33;
    v23 = v17;
    swift_retain(v20);
    swift_release(v22);
    dispatch_sync(v18, v21);
    _Block_release(v21);
    LOBYTE(v18) = swift_isEscapingClosureAtFileLocation(v20, "", 96, 151, 28, 1);
    swift_release(v19);
    result = swift_release(v20);
    if ((v18 & 1) == 0)
    {
      v24 = a2(0);
      v25 = defaultLogger()(v24);
      v26 = Logger.logObject.getter(v25);
      v28 = static os_log_type_t.info.getter(v26, v27);
      if (os_log_type_enabled(v26, v28))
      {
        v29 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v29 = 0;
        _os_log_impl((void *)&_mh_execute_header, v26, v28, "Done cleaning up state after user logout; terminating process",
          v29,
          2u);
        swift_slowDealloc(v29, -1, -1);
      }

      v31(v8, v4);
      exit(0);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1001BB004()
{
  return swift_task_switch(sub_1001BB018, 0, 0);
}

uint64_t sub_1001BB018()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  char *v5;

  if (qword_10062F5B0 != -1)
    swift_once(&qword_10062F5B0, sub_100486FCC);
  v1 = qword_100670828;
  *(_QWORD *)(v0 + 16) = qword_100670828;
  v2 = unk_100642E34;
  v5 = (char *)&dword_100642E30 + dword_100642E30;
  swift_retain(v1);
  v3 = (_QWORD *)swift_task_alloc(v2);
  *(_QWORD *)(v0 + 24) = v3;
  *v3 = v0;
  v3[1] = sub_1001BB0C4;
  return ((uint64_t (*)(_UNKNOWN **, uint64_t))v5)(&off_1006012A0, v1);
}

uint64_t sub_1001BB0C4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *(_QWORD *)(*v0 + 16);
  v3 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 24));
  swift_release(v1);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1001BB120(uint64_t a1, int a2, void *a3, void *aBlock, void (*a5)(id, uint64_t, void *))
{
  void *v8;
  id v9;

  v8 = _Block_copy(aBlock);
  _Block_copy(v8);
  v9 = a3;
  swift_retain(a1);
  a5(v9, a1, v8);
  _Block_release(v8);
  _Block_release(v8);

  return swift_release(a1);
}

id sub_1001BB194(void *a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  id result;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  _BYTE v33[24];

  v4 = type metadata accessor for WarmerUpper(0);
  __chkstk_darwin(v4);
  v6 = &v33[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  result = objc_msgSend(a1, "accountType");
  if (!result)
  {
    __break(1u);
    goto LABEL_31;
  }
  v8 = result;
  v9 = objc_msgSend(result, "identifier");

  if (!v9)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(ACAccountTypeIdentifierAppleAccount);
    v15 = v18;
    goto LABEL_11;
  }
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(ACAccountTypeIdentifierAppleAccount);
  v15 = v14;
  if (!v12)
  {
LABEL_11:
    swift_bridgeObjectRelease(v15);
    goto LABEL_12;
  }
  if (v10 == v13 && v12 == v14)
  {
    swift_bridgeObjectRelease_n(v12, 2);
LABEL_21:
    if (qword_10062F530 != -1)
      swift_once(&qword_10062F530, sub_10037BB30);
    v28 = sub_1000352C0(v4, (uint64_t)qword_100670728);
    swift_beginAccess(v28, v33, 0, 0);
    sub_1000B6BCC(v28, (uint64_t)v6);
    v29 = 0;
LABEL_28:
    sub_10037A9AC(v29);
    sub_1000B7844((uint64_t)v6);
    return (id)a2(0);
  }
  v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, v13, v14, 0);
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v15);
  if ((v17 & 1) != 0)
    goto LABEL_21;
LABEL_12:
  result = objc_msgSend(a1, "accountType");
  if (result)
  {
    v19 = result;
    v20 = objc_msgSend(result, "identifier");

    if (v20)
    {
      v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
      v23 = v22;

      v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(ACAccountTypeIdentifieriTunesStore);
      v26 = v25;
      if (v23)
      {
        if (v21 == v24 && v23 == v25)
        {
          swift_bridgeObjectRelease_n(v23, 2);
LABEL_25:
          if (qword_10062F530 != -1)
            swift_once(&qword_10062F530, sub_10037BB30);
          v31 = sub_1000352C0(v4, (uint64_t)qword_100670728);
          swift_beginAccess(v31, v33, 0, 0);
          sub_1000B6BCC(v31, (uint64_t)v6);
          v29 = 1;
          goto LABEL_28;
        }
        v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v23, v24, v25, 0);
        swift_bridgeObjectRelease(v23);
        swift_bridgeObjectRelease(v26);
        if ((v30 & 1) != 0)
          goto LABEL_25;
        return (id)a2(0);
      }
    }
    else
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(ACAccountTypeIdentifieriTunesStore);
      v26 = v27;
    }
    swift_bridgeObjectRelease(v26);
    return (id)a2(0);
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DIPSystemNotificationSessionProxy()
{
  return objc_opt_self(_TtC8coreidvd33DIPSystemNotificationSessionProxy);
}

uint64_t sub_1001BB53C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  uint64_t v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;

  v2 = v1;
  v29 = a1;
  v3 = type metadata accessor for Logger(0);
  v32 = *(_QWORD *)(v3 - 8);
  v33 = v3;
  __chkstk_darwin(v3);
  v30 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v5 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = v1 + 16;
  swift_unknownObjectWeakInit(v1 + 16, 0);
  v14 = sub_10001CFF8(0, (unint64_t *)&qword_1006308C0, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v14);
  v34 = _swiftEmptyArrayStorage;
  v15 = sub_100004790((unint64_t *)&qword_10062FF40, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v16 = sub_100004828((uint64_t *)&unk_100636400);
  v17 = sub_10001D030();
  v18 = v15;
  v19 = v30;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v34, v16, v17, v8, v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v31);
  v20 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000027, 0x8000000100552E60, v13, v10, v7, 0);
  *(_QWORD *)(v1 + 24) = v20;
  v21 = defaultLogger()(v20);
  v22 = Logger.logObject.getter(v21);
  v24 = static os_log_type_t.info.getter(v22, v23);
  if (os_log_type_enabled(v22, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v25 = 0;
    _os_log_impl((void *)&_mh_execute_header, v22, v24, "Creating DIPSystemNotificationSessionProxy", v25, 2u);
    swift_slowDealloc(v25, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v33);
  result = os_transaction_create("DIPSystemNotificationSessionProxy");
  if (result)
  {
    *(_QWORD *)(v2 + 32) = result;
    swift_unknownObjectWeakAssign(v28, v29);
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001BB7FC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t Strong;
  void *v12;
  id v13;
  NSObject *v14;
  uint64_t v15;
  os_log_type_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  void **v24;
  uint64_t v25;
  NSObject *v26;
  uint64_t v27;
  os_log_type_t v28;
  uint8_t *v29;
  void (*v30)(char *, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t inited;
  id v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  id v38;
  void *v39;
  _QWORD *v40;
  id v41;
  void *v42;
  _QWORD *v43;
  void *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void **v52;
  uint64_t v53;
  void **aBlock;
  uint64_t v55;
  uint64_t (*v56)(uint64_t);
  void *v57;
  uint64_t (*v58)();
  uint64_t v59;
  char v60[40];

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v49 - v7;
  v9 = swift_allocObject(&unk_10060ACB8, 24, 7);
  v10 = swift_unknownObjectWeakInit(v9 + 16, a1);
  Strong = swift_unknownObjectWeakLoadStrong(v10);
  if (Strong)
  {
    v12 = (void *)Strong;
    defaultLogger()(Strong);
    v13 = v12;
    v14 = Logger.logObject.getter(v13);
    v16 = static os_log_type_t.info.getter(v14, v15);
    if (os_log_type_enabled(v14, v16))
    {
      v17 = swift_slowAlloc(18, -1);
      v52 = (void **)swift_slowAlloc(32, -1);
      aBlock = v52;
      *(_DWORD *)v17 = 136446466;
      v49 = v17 + 4;
      v18 = v13;
      v19 = objc_msgSend(v18, "description");
      v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
      v50 = v3;
      v51 = v2;
      v21 = v20;
      v23 = v22;

      v53 = sub_1000E3AC8(v21, v23, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &aBlock, v49);

      swift_bridgeObjectRelease(v23);
      *(_WORD *)(v17 + 12) = 1026;
      LODWORD(v23) = objc_msgSend(v18, "processIdentifier");

      LODWORD(v53) = v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, (char *)&v53 + 4, v17 + 14);

      _os_log_impl((void *)&_mh_execute_header, v14, v16, "coreidvd (%{public}s:%{public}d): system notification connection received", (uint8_t *)v17, 0x12u);
      v24 = v52;
      swift_arrayDestroy(v52, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v24, -1, -1);
      swift_slowDealloc(v17, -1, -1);

      (*(void (**)(char *, uint64_t))(v50 + 8))(v8, v51);
      goto LABEL_9;
    }

    v30 = *(void (**)(char *, uint64_t))(v3 + 8);
    v31 = v8;
  }
  else
  {
    v25 = defaultLogger()(0);
    v26 = Logger.logObject.getter(v25);
    v28 = static os_log_type_t.info.getter(v26, v27);
    if (os_log_type_enabled(v26, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v28, "coreidvd (no description:-1): system notification connection received", v29, 2u);
      swift_slowDealloc(v29, -1, -1);
    }

    v30 = *(void (**)(char *, uint64_t))(v3 + 8);
    v31 = v6;
  }
  v30(v31, v2);
LABEL_9:
  v32 = sub_1003BEB08();
  inited = swift_initStackObject(v32, v60);
  *(_OWORD *)(inited + 16) = xmmword_10051FFB0;
  *(_QWORD *)(inited + 32) = sub_10001CFF8(0, &qword_100637BC0, ACAccount_ptr);
  v34 = objc_msgSend((id)objc_opt_self(NSXPCInterface), "interfaceWithProtocol:", &OBJC_PROTOCOL____TtP8coreidvd28DIPSystemNotificationSession_);
  objc_msgSend(a1, "setExportedInterface:", v34);

  v35 = type metadata accessor for DIPSystemNotificationSessionProxy();
  swift_allocObject(v35, 40, 7);
  v36 = a1;
  v37 = sub_1001BB53C((uint64_t)a1);

  objc_msgSend(v36, "setExportedObject:", v37);
  swift_release(v37);
  v38 = objc_msgSend(v36, "exportedInterface");
  if (v38)
  {
    v39 = v38;
    v40 = sub_1003BE2D4(inited);
    NSXPCInterface.setClasses(_:for:argumentIndex:ofReply:)(v40, "appleAccountCreatedWithAccount:completion:", 0, 0);

    swift_bridgeObjectRelease(v40);
  }
  v41 = objc_msgSend(v36, "exportedInterface");
  if (v41)
  {
    v42 = v41;
    v43 = sub_1003BE2D4(inited);
    swift_setDeallocating(inited);
    NSXPCInterface.setClasses(_:for:argumentIndex:ofReply:)(v43, "appleAccountDeletedWithAccount:completion:", 0, 0);

    swift_bridgeObjectRelease(v43);
  }
  else
  {
    swift_setDeallocating(inited);
  }
  v58 = sub_1001BD208;
  v59 = v9;
  aBlock = _NSConcreteStackBlock;
  v55 = 1107296256;
  v56 = sub_1004AB190;
  v57 = &unk_10060ACD0;
  v44 = _Block_copy(&aBlock);
  v45 = v59;
  swift_retain(v9);
  swift_release(v45);
  objc_msgSend(v36, "setInvalidationHandler:", v44);
  _Block_release(v44);
  v58 = sub_1001BD230;
  v59 = v9;
  aBlock = _NSConcreteStackBlock;
  v55 = 1107296256;
  v56 = sub_1004AB190;
  v57 = &unk_10060ACF8;
  v46 = _Block_copy(&aBlock);
  v47 = v59;
  swift_retain(v9);
  swift_release(v47);
  objc_msgSend(v36, "setInterruptionHandler:", v46);
  _Block_release(v46);
  objc_msgSend(v36, "resume");
  swift_release(v9);
  return 1;
}

void sub_1001BBD78(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  NSObject *v17;
  uint64_t v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t Strong;
  void *v31;
  Swift::String v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  char isEscapingClosureAtFileLocation;
  unint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  id v41;
  void *v42;
  unint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  id v47;
  void *v48;
  NSObject *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  Class isa;
  uint64_t v60;
  uint64_t aBlock[5];
  uint64_t v62;

  v57 = a2;
  v5 = type metadata accessor for DIPError.Code(0);
  v55 = *(_QWORD *)(v5 - 8);
  v56 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DIPError(0);
  isa = v8[-1].isa;
  __chkstk_darwin(v8);
  v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Logger(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = swift_allocObject(&unk_10060AC18, 24, 7);
  *(_QWORD *)(v58 + 16) = a3;
  v15 = _Block_copy(a3);
  defaultLogger()(v15);
  v16 = a1;
  v17 = Logger.logObject.getter(v16);
  v19 = static os_log_type_t.info.getter(v17, v18);
  if (os_log_type_enabled(v17, v19))
  {
    v50 = v12;
    v51 = v11;
    v52 = v7;
    v53 = v10;
    v54 = a3;
    v20 = (uint8_t *)swift_slowAlloc(12, -1);
    v21 = swift_slowAlloc(32, -1);
    aBlock[0] = v21;
    *(_DWORD *)v20 = 136446210;
    v22 = objc_msgSend(v16, "accountType");
    if (v22)
    {
      v23 = v22;
      v49 = v8;
      v24 = objc_msgSend(v22, "identifier");

      if (v24)
      {
        v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
        v27 = v26;

        v60 = sub_1000E3AC8(v25, v27, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, aBlock, v20 + 4);

        swift_bridgeObjectRelease(v27);
        _os_log_impl((void *)&_mh_execute_header, v17, v19, "coreidvd: received appleAccountCreated message, of account type %{public}s", v20, 0xCu);
        swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v21, -1, -1);
        swift_slowDealloc(v20, -1, -1);

        (*(void (**)(char *, uint64_t))(v50 + 8))(v14, v51);
        v8 = v49;
        v10 = v53;
        a3 = v54;
        v7 = v52;
        goto LABEL_6;
      }
    }
    else
    {
      _Block_release(v54);

      __break(1u);
    }
    _Block_release(v54);

    __break(1u);
    return;
  }

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
LABEL_6:
  v28 = (_QWORD *)0xD000000000000028;
  v29 = v57;
  Strong = swift_unknownObjectWeakLoadStrong(v57 + 16);
  if (Strong)
  {
    v31 = (void *)Strong;
    v32._countAndFlagsBits = 0xD00000000000002FLL;
    v32._object = (void *)0x8000000100552D70;
    if (!NSXPCConnection.isEntitled(_:)(v32))
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v55 + 104))(v7, enum case for DIPError.Code.missingEntitlement(_:), v56);
      v43 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000021, 0x8000000100552DA0, 0, v7, 0, v43, 0xD000000000000062, 0x8000000100552CC0, 0xD000000000000028, 0x8000000100552E30, 100);
      v44 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
      v45 = (void *)swift_allocError(v8, v44, 0, 0);
      (*((void (**)(uint64_t, char *, NSObject *))isa + 2))(v46, v10, v8);
      v47 = sub_1004845F0(v45);
      swift_errorRelease(v45);
      v48 = (void *)_convertErrorToNSError(_:)(v47);
      (*((void (**)(void *, void *))a3 + 2))(a3, v48);

      swift_errorRelease(v47);
      goto LABEL_12;
    }
    v8 = *(NSObject **)(v29 + 24);
    v28 = (_QWORD *)swift_allocObject(&unk_10060AC40, 40, 7);
    v28[2] = v16;
    v28[3] = sub_1001BD258;
    v10 = (char *)v58;
    v28[4] = v58;
    v33 = swift_allocObject(&unk_10060AC68, 32, 7);
    *(_QWORD *)(v33 + 16) = sub_1001BD1C8;
    *(_QWORD *)(v33 + 24) = v28;
    aBlock[4] = (uint64_t)sub_1001AEFEC;
    v62 = v33;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100026DC8;
    aBlock[3] = (uint64_t)&unk_10060AC80;
    a3 = _Block_copy(aBlock);
    v34 = v62;
    v35 = v16;
    swift_retain(v10);
    swift_retain(v33);
    swift_release(v34);
    dispatch_sync(v8, a3);

    _Block_release(a3);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v33, "", 98, 105, 20, 1);
    swift_release(v10);
    swift_release(v28);
    swift_release(v33);
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      return;
    __break(1u);
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v55 + 104))(v7, enum case for DIPError.Code.missingEntitlement(_:), v56);
  v37 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)((char *)v28 + 21, 0x80000001005422B0, 0, v7, 0, v37, (char *)v28 + 58, 0x8000000100552CC0, v28, 0x8000000100552E30, 94);
  v38 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
  v39 = (void *)swift_allocError(v8, v38, 0, 0);
  (*((void (**)(uint64_t, char *, NSObject *))isa + 2))(v40, v10, v8);
  v41 = sub_1004845F0(v39);
  swift_errorRelease(v39);
  v42 = (void *)_convertErrorToNSError(_:)(v41);
  (*((void (**)(void *, void *))a3 + 2))(a3, v42);

  swift_errorRelease(v41);
LABEL_12:
  (*((void (**)(char *, NSObject *))isa + 1))(v10, v8);
  swift_release(v58);
}

void sub_1001BC3F0(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  NSObject *v17;
  uint64_t v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t Strong;
  void *v31;
  Swift::String v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  char isEscapingClosureAtFileLocation;
  unint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  id v41;
  void *v42;
  unint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  id v47;
  void *v48;
  NSObject *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  Class isa;
  uint64_t v60;
  uint64_t aBlock[5];
  uint64_t v62;

  v57 = a2;
  v5 = type metadata accessor for DIPError.Code(0);
  v55 = *(_QWORD *)(v5 - 8);
  v56 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DIPError(0);
  isa = v8[-1].isa;
  __chkstk_darwin(v8);
  v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Logger(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = swift_allocObject(&unk_10060AB00, 24, 7);
  *(_QWORD *)(v58 + 16) = a3;
  v15 = _Block_copy(a3);
  defaultLogger()(v15);
  v16 = a1;
  v17 = Logger.logObject.getter(v16);
  v19 = static os_log_type_t.info.getter(v17, v18);
  if (os_log_type_enabled(v17, v19))
  {
    v50 = v12;
    v51 = v11;
    v52 = v7;
    v53 = v10;
    v54 = a3;
    v20 = (uint8_t *)swift_slowAlloc(12, -1);
    v21 = swift_slowAlloc(32, -1);
    aBlock[0] = v21;
    *(_DWORD *)v20 = 136446210;
    v22 = objc_msgSend(v16, "accountType");
    if (v22)
    {
      v23 = v22;
      v49 = v8;
      v24 = objc_msgSend(v22, "identifier");

      if (v24)
      {
        v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
        v27 = v26;

        v60 = sub_1000E3AC8(v25, v27, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, aBlock, v20 + 4);

        swift_bridgeObjectRelease(v27);
        _os_log_impl((void *)&_mh_execute_header, v17, v19, "coreidvd: received appleAccountDeleted message, of account type %{public}s", v20, 0xCu);
        swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v21, -1, -1);
        swift_slowDealloc(v20, -1, -1);

        (*(void (**)(char *, uint64_t))(v50 + 8))(v14, v51);
        v8 = v49;
        v10 = v53;
        a3 = v54;
        v7 = v52;
        goto LABEL_6;
      }
    }
    else
    {
      _Block_release(v54);

      __break(1u);
    }
    _Block_release(v54);

    __break(1u);
    return;
  }

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
LABEL_6:
  v28 = (_QWORD *)0xD000000000000028;
  v29 = v57;
  Strong = swift_unknownObjectWeakLoadStrong(v57 + 16);
  if (Strong)
  {
    v31 = (void *)Strong;
    v32._countAndFlagsBits = 0xD00000000000002FLL;
    v32._object = (void *)0x8000000100552D70;
    if (!NSXPCConnection.isEntitled(_:)(v32))
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v55 + 104))(v7, enum case for DIPError.Code.missingEntitlement(_:), v56);
      v43 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000021, 0x8000000100552DA0, 0, v7, 0, v43, 0xD000000000000062, 0x8000000100552CC0, 0xD000000000000028, 0x8000000100552DD0, 133);
      v44 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
      v45 = (void *)swift_allocError(v8, v44, 0, 0);
      (*((void (**)(uint64_t, char *, NSObject *))isa + 2))(v46, v10, v8);
      v47 = sub_1004845F0(v45);
      swift_errorRelease(v45);
      v48 = (void *)_convertErrorToNSError(_:)(v47);
      (*((void (**)(void *, void *))a3 + 2))(a3, v48);

      swift_errorRelease(v47);
      goto LABEL_12;
    }
    v8 = *(NSObject **)(v29 + 24);
    v28 = (_QWORD *)swift_allocObject(&unk_10060AB28, 40, 7);
    v28[2] = v16;
    v28[3] = sub_1001BD258;
    v10 = (char *)v58;
    v28[4] = v58;
    v33 = swift_allocObject(&unk_10060AB50, 32, 7);
    *(_QWORD *)(v33 + 16) = sub_1001BD140;
    *(_QWORD *)(v33 + 24) = v28;
    aBlock[4] = (uint64_t)sub_1001AEFEC;
    v62 = v33;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100026DC8;
    aBlock[3] = (uint64_t)&unk_10060AB68;
    a3 = _Block_copy(aBlock);
    v34 = v62;
    v35 = v16;
    swift_retain(v10);
    swift_retain(v33);
    swift_release(v34);
    dispatch_sync(v8, a3);

    _Block_release(a3);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v33, "", 98, 138, 20, 1);
    swift_release(v10);
    swift_release(v28);
    swift_release(v33);
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      return;
    __break(1u);
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v55 + 104))(v7, enum case for DIPError.Code.missingEntitlement(_:), v56);
  v37 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)((char *)v28 + 21, 0x80000001005422B0, 0, v7, 0, v37, (char *)v28 + 58, 0x8000000100552CC0, v28, 0x8000000100552DD0, 127);
  v38 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
  v39 = (void *)swift_allocError(v8, v38, 0, 0);
  (*((void (**)(uint64_t, char *, NSObject *))isa + 2))(v40, v10, v8);
  v41 = sub_1004845F0(v39);
  swift_errorRelease(v39);
  v42 = (void *)_convertErrorToNSError(_:)(v41);
  (*((void (**)(void *, void *))a3 + 2))(a3, v42);

  swift_errorRelease(v41);
LABEL_12:
  (*((void (**)(char *, NSObject *))isa + 1))(v10, v8);
  swift_release(v58);
}

void sub_1001BCA68(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t Strong;
  void *v30;
  Swift::String v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  char isEscapingClosureAtFileLocation;
  unint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  id v40;
  void *v41;
  unint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  id v46;
  void *v47;
  NSObject *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Class isa;
  uint64_t v59;
  uint64_t aBlock[5];
  uint64_t v61;

  v56 = a2;
  v5 = type metadata accessor for DIPError.Code(0);
  v54 = *(_QWORD *)(v5 - 8);
  v55 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DIPError(0);
  isa = v8[-1].isa;
  __chkstk_darwin(v8);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Logger(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = swift_allocObject(&unk_10060AA60, 24, 7);
  *(_QWORD *)(v57 + 16) = a3;
  v15 = _Block_copy(a3);
  defaultLogger()(v15);
  v16 = a1;
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.debug.getter(v17);
  if (os_log_type_enabled(v17, v18))
  {
    v49 = v12;
    v50 = v11;
    v51 = v7;
    v52 = v10;
    v53 = a3;
    v19 = (uint8_t *)swift_slowAlloc(12, -1);
    v20 = swift_slowAlloc(32, -1);
    aBlock[0] = v20;
    *(_DWORD *)v19 = 136446210;
    v21 = objc_msgSend(v16, "accountType");
    if (v21)
    {
      v22 = v21;
      v48 = v8;
      v23 = objc_msgSend(v21, "identifier");

      if (v23)
      {
        v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
        v26 = v25;

        v59 = sub_1000E3AC8(v24, v26, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v59, aBlock, v19 + 4);

        swift_bridgeObjectRelease(v26);
        _os_log_impl((void *)&_mh_execute_header, v17, v18, "coreidvd: received appleAccountModified message, of account type %{public}s", v19, 0xCu);
        swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v20, -1, -1);
        swift_slowDealloc(v19, -1, -1);

        (*(void (**)(char *, uint64_t))(v49 + 8))(v14, v50);
        v8 = v48;
        v10 = v52;
        a3 = v53;
        v7 = v51;
        goto LABEL_6;
      }
    }
    else
    {
      _Block_release(v53);

      __break(1u);
    }
    _Block_release(v53);

    __break(1u);
    return;
  }

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
LABEL_6:
  v27 = (_QWORD *)0xD000000000000034;
  v28 = v56;
  Strong = swift_unknownObjectWeakLoadStrong(v56 + 16);
  if (Strong)
  {
    v30 = (void *)Strong;
    v31._countAndFlagsBits = 0xD00000000000002FLL;
    v31._object = (void *)0x8000000100552D70;
    if (!NSXPCConnection.isEntitled(_:)(v31))
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v54 + 104))(v7, enum case for DIPError.Code.missingEntitlement(_:), v55);
      v42 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000021, 0x8000000100552DA0, 0, v7, 0, v42, 0xD000000000000062, 0x8000000100552CC0, 0xD000000000000034, 0x8000000100552D30, 169);
      v43 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
      v44 = (void *)swift_allocError(v8, v43, 0, 0);
      (*((void (**)(uint64_t, char *, NSObject *))isa + 2))(v45, v10, v8);
      v46 = sub_1004845F0(v44);
      swift_errorRelease(v44);
      v47 = (void *)_convertErrorToNSError(_:)(v46);
      (*((void (**)(void *, void *))a3 + 2))(a3, v47);

      swift_errorRelease(v46);
      goto LABEL_12;
    }
    v8 = *(NSObject **)(v28 + 24);
    v27 = (_QWORD *)swift_allocObject(&unk_10060AA88, 40, 7);
    v27[2] = v16;
    v27[3] = sub_1001BA098;
    v10 = (char *)v57;
    v27[4] = v57;
    v32 = swift_allocObject(&unk_10060AAB0, 32, 7);
    *(_QWORD *)(v32 + 16) = sub_1001BD108;
    *(_QWORD *)(v32 + 24) = v27;
    aBlock[4] = (uint64_t)sub_1000C00CC;
    v61 = v32;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100026DC8;
    aBlock[3] = (uint64_t)&unk_10060AAC8;
    a3 = _Block_copy(aBlock);
    v33 = v61;
    v34 = v16;
    swift_retain(v10);
    swift_retain(v32);
    swift_release(v33);
    dispatch_sync(v8, a3);

    _Block_release(a3);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v32, "", 98, 173, 20, 1);
    swift_release(v10);
    swift_release(v27);
    swift_release(v32);
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      return;
    __break(1u);
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v54 + 104))(v7, enum case for DIPError.Code.missingEntitlement(_:), v55);
  v36 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)((char *)v27 + 9, 0x80000001005422B0, 0, v7, 0, v36, (char *)v27 + 46, 0x8000000100552CC0, v27, 0x8000000100552D30, 163);
  v37 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
  v38 = (void *)swift_allocError(v8, v37, 0, 0);
  (*((void (**)(uint64_t, char *, NSObject *))isa + 2))(v39, v10, v8);
  v40 = sub_1004845F0(v38);
  swift_errorRelease(v38);
  v41 = (void *)_convertErrorToNSError(_:)(v40);
  (*((void (**)(void *, void *))a3 + 2))(a3, v41);

  swift_errorRelease(v40);
LABEL_12:
  (*((void (**)(char *, NSObject *))isa + 1))(v10, v8);
  swift_release(v57);
}

uint64_t sub_1001BD0E0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

id sub_1001BD108()
{
  uint64_t v0;

  return sub_1001BB194(*(void **)(v0 + 16), *(uint64_t (**)(_QWORD))(v0 + 24));
}

uint64_t sub_1001BD114()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001BD124(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001BD134(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1001BD140()
{
  uint64_t v0;

  return sub_1001BACA0(*(_QWORD *)(v0 + 16), *(uint64_t (**)(_QWORD))(v0 + 24));
}

uint64_t sub_1001BD14C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001BD15C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001BD180()
{
  uint64_t v0;

  return sub_1004F50D4(*(void **)(v0 + 16));
}

uint64_t sub_1001BD188()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001BD19C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

id sub_1001BD1C8()
{
  uint64_t v0;

  return sub_1001BA908(*(void **)(v0 + 16), *(uint64_t (**)(_QWORD))(v0 + 24));
}

uint64_t sub_1001BD1D4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001BD1E4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001BD208()
{
  uint64_t v0;

  return sub_1001BA450(v0, "coreidvd (%{public}s:%{public}d): connection invalidated", "coreidvd (no description: -1): connection invalidated");
}

uint64_t sub_1001BD230()
{
  uint64_t v0;

  return sub_1001BA450(v0, "coreidvd (%{public}s:%{public}d): connection interupted", "coreidvd (no description:-1): connection interupted");
}

_QWORD *sub_1001BD28C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _OWORD *v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _OWORD *v132;
  uint64_t *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  _OWORD *v160;
  uint64_t *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  _OWORD *v188;
  uint64_t *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  _OWORD *v216;
  uint64_t *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  _OWORD *v244;
  uint64_t *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  char *v276;
  char *v277;
  uint64_t v278;
  uint64_t v279;
  char *v280;
  char *v281;
  uint64_t v282;
  uint64_t v284;
  _QWORD *v285;
  char *__dst;
  unsigned int (*v287)(char *, uint64_t, uint64_t, __n128);
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  int *v293;
  char *v294;
  char *v295;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    v14 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v13);
  }
  else
  {
    v7 = a2[3];
    if (v7)
    {
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      a1[2] = a2[2];
      a1[3] = v7;
      v9 = a2[5];
      a1[4] = a2[4];
      a1[5] = v9;
      v10 = a2[7];
      a1[6] = a2[6];
      a1[7] = v10;
      v11 = a2[9];
      a1[8] = a2[8];
      a1[9] = v11;
      v12 = a2[11];
      a1[10] = a2[10];
      a1[11] = v12;
      swift_bridgeObjectRetain(v8);
      swift_bridgeObjectRetain(v7);
      swift_bridgeObjectRetain(v9);
      swift_bridgeObjectRetain(v10);
      swift_bridgeObjectRetain(v11);
      swift_bridgeObjectRetain(v12);
    }
    else
    {
      v15 = *((_OWORD *)a2 + 3);
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      *((_OWORD *)a1 + 3) = v15;
      v16 = *((_OWORD *)a2 + 5);
      *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
      *((_OWORD *)a1 + 5) = v16;
      v17 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v17;
    }
    v18 = *(int *)(a3 + 20);
    v285 = a1;
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    v21 = *((_QWORD *)v20 + 1);
    *(_QWORD *)v19 = *(_QWORD *)v20;
    *((_QWORD *)v19 + 1) = v21;
    v22 = *((_QWORD *)v20 + 3);
    *((_QWORD *)v19 + 2) = *((_QWORD *)v20 + 2);
    *((_QWORD *)v19 + 3) = v22;
    v23 = *((_QWORD *)v20 + 5);
    *((_QWORD *)v19 + 4) = *((_QWORD *)v20 + 4);
    *((_QWORD *)v19 + 5) = v23;
    v24 = *((_QWORD *)v20 + 7);
    *((_QWORD *)v19 + 6) = *((_QWORD *)v20 + 6);
    *((_QWORD *)v19 + 7) = v24;
    v25 = *((_QWORD *)v20 + 9);
    *((_QWORD *)v19 + 8) = *((_QWORD *)v20 + 8);
    *((_QWORD *)v19 + 9) = v25;
    v289 = *((_QWORD *)v20 + 11);
    *((_QWORD *)v19 + 10) = *((_QWORD *)v20 + 10);
    *((_QWORD *)v19 + 11) = v289;
    v19[96] = v20[96];
    v26 = *((_QWORD *)v20 + 14);
    *((_QWORD *)v19 + 13) = *((_QWORD *)v20 + 13);
    *((_QWORD *)v19 + 14) = v26;
    v27 = *((_QWORD *)v20 + 16);
    *((_QWORD *)v19 + 15) = *((_QWORD *)v20 + 15);
    *((_QWORD *)v19 + 16) = v27;
    v29 = *((_QWORD *)v20 + 17);
    v28 = *((_QWORD *)v20 + 18);
    *((_QWORD *)v19 + 17) = v29;
    *((_QWORD *)v19 + 18) = v28;
    v288 = *((_QWORD *)v20 + 19);
    v291 = *((_QWORD *)v20 + 20);
    *((_QWORD *)v19 + 19) = v288;
    *((_QWORD *)v19 + 20) = v291;
    v290 = *((_QWORD *)v20 + 22);
    *((_QWORD *)v19 + 21) = *((_QWORD *)v20 + 21);
    *((_QWORD *)v19 + 22) = v290;
    v19[184] = v20[184];
    v293 = (int *)type metadata accessor for Workflow(0);
    v294 = v20;
    v30 = v293[18];
    v295 = v19;
    __dst = &v19[v30];
    v31 = &v20[v30];
    v32 = type metadata accessor for HardwareAttestationType(0);
    v284 = *(_QWORD *)(v32 - 8);
    v287 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v284 + 48);
    swift_bridgeObjectRetain(v21);
    swift_bridgeObjectRetain(v22);
    swift_bridgeObjectRetain(v23);
    swift_bridgeObjectRetain(v24);
    swift_bridgeObjectRetain(v25);
    swift_bridgeObjectRetain(v289);
    swift_bridgeObjectRetain(v26);
    swift_bridgeObjectRetain(v27);
    swift_bridgeObjectRetain(v29);
    swift_bridgeObjectRetain(v288);
    swift_bridgeObjectRetain(v291);
    v33 = swift_bridgeObjectRetain(v290);
    if (v287(v31, 1, v32, v33))
    {
      v34 = sub_100004828(&qword_1006322F0);
      memcpy(__dst, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v284 + 16))(__dst, v31, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v284 + 56))(__dst, 0, 1, v32);
    }
    v35 = v293[19];
    v36 = *(_QWORD *)&v294[v35];
    *(_QWORD *)&v295[v35] = v36;
    v37 = v293[20];
    v292 = *(_QWORD *)&v294[v37];
    *(_QWORD *)&v295[v37] = v292;
    v38 = v293[21];
    v39 = &v295[v38];
    v40 = &v294[v38];
    v41 = *((_QWORD *)v40 + 1);
    *(_QWORD *)v39 = *(_QWORD *)v40;
    *((_QWORD *)v39 + 1) = v41;
    v295[v293[22]] = v294[v293[22]];
    v42 = v293[23];
    v43 = *(_QWORD *)&v294[v42];
    *(_QWORD *)&v295[v42] = v43;
    v44 = v293[24];
    v45 = *(_QWORD *)&v294[v44];
    *(_QWORD *)&v295[v44] = v45;
    v46 = v293[25];
    v47 = *(_QWORD *)&v294[v46];
    *(_QWORD *)&v295[v46] = v47;
    v295[v293[26]] = v294[v293[26]];
    v48 = v293[27];
    v49 = &v295[v48];
    v50 = &v294[v48];
    *(_QWORD *)v49 = *(_QWORD *)v50;
    v49[8] = v50[8];
    v51 = v293[28];
    v52 = *(_QWORD *)&v294[v51];
    *(_QWORD *)&v295[v51] = v52;
    v53 = v293[29];
    v54 = *(_QWORD *)&v294[v53];
    *(_QWORD *)&v295[v53] = v54;
    v55 = v293[30];
    v56 = *(_QWORD *)&v294[v55];
    *(_QWORD *)&v295[v55] = v56;
    v57 = v293[31];
    v58 = &v295[v57];
    v59 = &v294[v57];
    *(_QWORD *)v58 = *(_QWORD *)v59;
    v58[8] = v59[8];
    v60 = v293[32];
    v61 = &v295[v60];
    v62 = &v294[v60];
    *(_QWORD *)v61 = *(_QWORD *)v62;
    v61[8] = v62[8];
    v63 = v293[33];
    v64 = &v295[v63];
    v65 = &v294[v63];
    v64[8] = v65[8];
    *(_QWORD *)v64 = *(_QWORD *)v65;
    v66 = v293[34];
    v67 = &v295[v66];
    v68 = &v294[v66];
    v67[8] = v68[8];
    *(_QWORD *)v67 = *(_QWORD *)v68;
    v69 = v293[35];
    v70 = &v295[v69];
    v71 = &v294[v69];
    v70[8] = v71[8];
    *(_QWORD *)v70 = *(_QWORD *)v71;
    v295[v293[36]] = v294[v293[36]];
    v295[v293[37]] = v294[v293[37]];
    v72 = v293[38];
    v73 = &v295[v72];
    v74 = &v294[v72];
    v75 = *(_QWORD *)&v294[v72 + 8];
    swift_bridgeObjectRetain(v36);
    swift_bridgeObjectRetain(v292);
    swift_bridgeObjectRetain(v41);
    swift_bridgeObjectRetain(v43);
    swift_bridgeObjectRetain(v45);
    swift_bridgeObjectRetain(v47);
    swift_bridgeObjectRetain(v52);
    swift_bridgeObjectRetain(v54);
    swift_bridgeObjectRetain(v56);
    if (v75 == 1)
    {
      memcpy(v73, v74, 0x1719uLL);
      v14 = v285;
    }
    else
    {
      *(_QWORD *)v73 = *(_QWORD *)v74;
      *((_QWORD *)v73 + 1) = v75;
      v76 = (uint64_t *)(v74 + 16);
      v77 = *((_QWORD *)v74 + 104);
      swift_bridgeObjectRetain(v75);
      v78 = v73;
      if (v77 == 1)
      {
        memcpy(v73 + 16, v74 + 16, 0x340uLL);
      }
      else
      {
        v79 = *v76;
        if (*v76 == 1)
        {
          *((_OWORD *)v73 + 1) = *(_OWORD *)v76;
          *(_OWORD *)(v73 + 25) = *(_OWORD *)(v74 + 25);
        }
        else
        {
          *((_QWORD *)v73 + 2) = v79;
          v73[24] = v74[24];
          *((_QWORD *)v73 + 4) = *((_QWORD *)v74 + 4);
          v73[40] = v74[40];
          swift_bridgeObjectRetain(v79);
        }
        v80 = *((_QWORD *)v74 + 6);
        if (v80 == 1)
        {
          *((_OWORD *)v73 + 3) = *((_OWORD *)v74 + 3);
          *(_OWORD *)(v73 + 57) = *(_OWORD *)(v74 + 57);
        }
        else
        {
          *((_QWORD *)v73 + 6) = v80;
          v73[56] = v74[56];
          *((_QWORD *)v73 + 8) = *((_QWORD *)v74 + 8);
          v73[72] = v74[72];
          swift_bridgeObjectRetain(v80);
        }
        v81 = *((_QWORD *)v74 + 10);
        if (v81 == 1)
        {
          *((_OWORD *)v73 + 5) = *((_OWORD *)v74 + 5);
          *(_OWORD *)(v73 + 89) = *(_OWORD *)(v74 + 89);
        }
        else
        {
          *((_QWORD *)v73 + 10) = v81;
          v73[88] = v74[88];
          *((_QWORD *)v73 + 12) = *((_QWORD *)v74 + 12);
          v73[104] = v74[104];
          swift_bridgeObjectRetain(v81);
        }
        v82 = *((_QWORD *)v74 + 14);
        if (v82 == 1)
        {
          *((_OWORD *)v73 + 7) = *((_OWORD *)v74 + 7);
          *(_OWORD *)(v73 + 121) = *(_OWORD *)(v74 + 121);
        }
        else
        {
          *((_QWORD *)v73 + 14) = v82;
          v73[120] = v74[120];
          *((_QWORD *)v73 + 16) = *((_QWORD *)v74 + 16);
          v73[136] = v74[136];
          swift_bridgeObjectRetain(v82);
        }
        v83 = *((_QWORD *)v74 + 18);
        if (v83 == 1)
        {
          *((_OWORD *)v73 + 9) = *((_OWORD *)v74 + 9);
          *(_OWORD *)(v73 + 153) = *(_OWORD *)(v74 + 153);
        }
        else
        {
          *((_QWORD *)v73 + 18) = v83;
          v73[152] = v74[152];
          *((_QWORD *)v73 + 20) = *((_QWORD *)v74 + 20);
          v73[168] = v74[168];
          swift_bridgeObjectRetain(v83);
        }
        v84 = *((_QWORD *)v74 + 22);
        if (v84 == 1)
        {
          *((_OWORD *)v73 + 11) = *((_OWORD *)v74 + 11);
          *(_OWORD *)(v73 + 185) = *(_OWORD *)(v74 + 185);
        }
        else
        {
          *((_QWORD *)v73 + 22) = v84;
          v73[184] = v74[184];
          *((_QWORD *)v73 + 24) = *((_QWORD *)v74 + 24);
          v73[200] = v74[200];
          swift_bridgeObjectRetain(v84);
        }
        v85 = *((_QWORD *)v74 + 26);
        if (v85 == 1)
        {
          *((_OWORD *)v73 + 13) = *((_OWORD *)v74 + 13);
          *(_OWORD *)(v73 + 217) = *(_OWORD *)(v74 + 217);
        }
        else
        {
          *((_QWORD *)v73 + 26) = v85;
          v73[216] = v74[216];
          *((_QWORD *)v73 + 28) = *((_QWORD *)v74 + 28);
          v73[232] = v74[232];
          swift_bridgeObjectRetain(v85);
        }
        v86 = *((_QWORD *)v74 + 30);
        if (v86 == 1)
        {
          *((_OWORD *)v73 + 15) = *((_OWORD *)v74 + 15);
          *(_OWORD *)(v73 + 249) = *(_OWORD *)(v74 + 249);
        }
        else
        {
          *((_QWORD *)v73 + 30) = v86;
          v73[248] = v74[248];
          *((_QWORD *)v73 + 32) = *((_QWORD *)v74 + 32);
          v73[264] = v74[264];
          swift_bridgeObjectRetain(v86);
        }
        v87 = *((_QWORD *)v74 + 34);
        if (v87 == 1)
        {
          *((_OWORD *)v73 + 17) = *((_OWORD *)v74 + 17);
          *(_OWORD *)(v73 + 281) = *(_OWORD *)(v74 + 281);
        }
        else
        {
          *((_QWORD *)v73 + 34) = v87;
          v73[280] = v74[280];
          *((_QWORD *)v73 + 36) = *((_QWORD *)v74 + 36);
          v73[296] = v74[296];
          swift_bridgeObjectRetain(v87);
        }
        v88 = *((_QWORD *)v74 + 38);
        if (v88 == 1)
        {
          *((_OWORD *)v73 + 19) = *((_OWORD *)v74 + 19);
          *(_OWORD *)(v73 + 313) = *(_OWORD *)(v74 + 313);
        }
        else
        {
          *((_QWORD *)v73 + 38) = v88;
          v73[312] = v74[312];
          *((_QWORD *)v73 + 40) = *((_QWORD *)v74 + 40);
          v73[328] = v74[328];
          swift_bridgeObjectRetain(v88);
        }
        v89 = *((_QWORD *)v74 + 42);
        if (v89 == 1)
        {
          *((_OWORD *)v73 + 21) = *((_OWORD *)v74 + 21);
          *(_OWORD *)(v73 + 345) = *(_OWORD *)(v74 + 345);
        }
        else
        {
          *((_QWORD *)v73 + 42) = v89;
          v73[344] = v74[344];
          *((_QWORD *)v73 + 44) = *((_QWORD *)v74 + 44);
          v73[360] = v74[360];
          swift_bridgeObjectRetain(v89);
        }
        v90 = *((_QWORD *)v74 + 46);
        if (v90 == 1)
        {
          *((_OWORD *)v73 + 23) = *((_OWORD *)v74 + 23);
          *(_OWORD *)(v73 + 377) = *(_OWORD *)(v74 + 377);
        }
        else
        {
          *((_QWORD *)v73 + 46) = v90;
          v73[376] = v74[376];
          *((_QWORD *)v73 + 48) = *((_QWORD *)v74 + 48);
          v73[392] = v74[392];
          swift_bridgeObjectRetain(v90);
        }
        v91 = *((_QWORD *)v74 + 50);
        if (v91 == 1)
        {
          *((_OWORD *)v73 + 25) = *((_OWORD *)v74 + 25);
          *(_OWORD *)(v73 + 409) = *(_OWORD *)(v74 + 409);
        }
        else
        {
          *((_QWORD *)v73 + 50) = v91;
          v73[408] = v74[408];
          *((_QWORD *)v73 + 52) = *((_QWORD *)v74 + 52);
          v73[424] = v74[424];
          swift_bridgeObjectRetain(v91);
        }
        v92 = *((_QWORD *)v74 + 54);
        if (v92 == 1)
        {
          *((_OWORD *)v73 + 27) = *((_OWORD *)v74 + 27);
          *(_OWORD *)(v73 + 441) = *(_OWORD *)(v74 + 441);
        }
        else
        {
          *((_QWORD *)v73 + 54) = v92;
          v73[440] = v74[440];
          *((_QWORD *)v73 + 56) = *((_QWORD *)v74 + 56);
          v73[456] = v74[456];
          swift_bridgeObjectRetain(v92);
        }
        v93 = *((_QWORD *)v74 + 58);
        if (v93 == 1)
        {
          *((_OWORD *)v73 + 29) = *((_OWORD *)v74 + 29);
          *(_OWORD *)(v73 + 473) = *(_OWORD *)(v74 + 473);
        }
        else
        {
          *((_QWORD *)v73 + 58) = v93;
          v73[472] = v74[472];
          *((_QWORD *)v73 + 60) = *((_QWORD *)v74 + 60);
          v73[488] = v74[488];
          swift_bridgeObjectRetain(v93);
        }
        v94 = *((_QWORD *)v74 + 62);
        if (v94 == 1)
        {
          *((_OWORD *)v73 + 31) = *((_OWORD *)v74 + 31);
          *(_OWORD *)(v73 + 505) = *(_OWORD *)(v74 + 505);
        }
        else
        {
          *((_QWORD *)v73 + 62) = v94;
          v73[504] = v74[504];
          *((_QWORD *)v73 + 64) = *((_QWORD *)v74 + 64);
          v73[520] = v74[520];
          swift_bridgeObjectRetain(v94);
        }
        v95 = *((_QWORD *)v74 + 66);
        if (v95 == 1)
        {
          *((_OWORD *)v73 + 33) = *((_OWORD *)v74 + 33);
          *(_OWORD *)(v73 + 537) = *(_OWORD *)(v74 + 537);
        }
        else
        {
          *((_QWORD *)v73 + 66) = v95;
          v73[536] = v74[536];
          *((_QWORD *)v73 + 68) = *((_QWORD *)v74 + 68);
          v73[552] = v74[552];
          swift_bridgeObjectRetain(v95);
        }
        v96 = *((_QWORD *)v74 + 70);
        if (v96 == 1)
        {
          *((_OWORD *)v73 + 35) = *((_OWORD *)v74 + 35);
          *(_OWORD *)(v73 + 569) = *(_OWORD *)(v74 + 569);
        }
        else
        {
          *((_QWORD *)v73 + 70) = v96;
          v73[568] = v74[568];
          *((_QWORD *)v73 + 72) = *((_QWORD *)v74 + 72);
          v73[584] = v74[584];
          swift_bridgeObjectRetain(v96);
        }
        v97 = *((_QWORD *)v74 + 74);
        if (v97 == 1)
        {
          *((_OWORD *)v73 + 37) = *((_OWORD *)v74 + 37);
          *(_OWORD *)(v73 + 601) = *(_OWORD *)(v74 + 601);
        }
        else
        {
          *((_QWORD *)v73 + 74) = v97;
          v73[600] = v74[600];
          *((_QWORD *)v73 + 76) = *((_QWORD *)v74 + 76);
          v73[616] = v74[616];
          swift_bridgeObjectRetain(v97);
        }
        v98 = *((_QWORD *)v74 + 78);
        if (v98 == 1)
        {
          *((_OWORD *)v73 + 39) = *((_OWORD *)v74 + 39);
          *(_OWORD *)(v73 + 633) = *(_OWORD *)(v74 + 633);
        }
        else
        {
          *((_QWORD *)v73 + 78) = v98;
          v73[632] = v74[632];
          *((_QWORD *)v73 + 80) = *((_QWORD *)v74 + 80);
          v73[648] = v74[648];
          swift_bridgeObjectRetain(v98);
        }
        v99 = *((_QWORD *)v74 + 82);
        if (v99 == 1)
        {
          *((_OWORD *)v73 + 41) = *((_OWORD *)v74 + 41);
          *(_OWORD *)(v73 + 665) = *(_OWORD *)(v74 + 665);
        }
        else
        {
          *((_QWORD *)v73 + 82) = v99;
          v73[664] = v74[664];
          *((_QWORD *)v73 + 84) = *((_QWORD *)v74 + 84);
          v73[680] = v74[680];
          swift_bridgeObjectRetain(v99);
        }
        v100 = *((_QWORD *)v74 + 86);
        if (v100 == 1)
        {
          *((_OWORD *)v73 + 43) = *((_OWORD *)v74 + 43);
          *(_OWORD *)(v73 + 697) = *(_OWORD *)(v74 + 697);
        }
        else
        {
          *((_QWORD *)v73 + 86) = v100;
          v73[696] = v74[696];
          *((_QWORD *)v73 + 88) = *((_QWORD *)v74 + 88);
          v73[712] = v74[712];
          swift_bridgeObjectRetain(v100);
        }
        v101 = *((_QWORD *)v74 + 90);
        if (v101 == 1)
        {
          *((_OWORD *)v73 + 45) = *((_OWORD *)v74 + 45);
          *(_OWORD *)(v73 + 729) = *(_OWORD *)(v74 + 729);
        }
        else
        {
          *((_QWORD *)v73 + 90) = v101;
          v73[728] = v74[728];
          *((_QWORD *)v73 + 92) = *((_QWORD *)v74 + 92);
          v73[744] = v74[744];
          swift_bridgeObjectRetain(v101);
        }
        v102 = *((_QWORD *)v74 + 94);
        if (v102 == 1)
        {
          *((_OWORD *)v73 + 47) = *((_OWORD *)v74 + 47);
          *(_OWORD *)(v73 + 761) = *(_OWORD *)(v74 + 761);
        }
        else
        {
          *((_QWORD *)v73 + 94) = v102;
          v73[760] = v74[760];
          *((_QWORD *)v73 + 96) = *((_QWORD *)v74 + 96);
          v73[776] = v74[776];
          swift_bridgeObjectRetain(v102);
        }
        *((_OWORD *)v73 + 49) = *((_OWORD *)v74 + 49);
        v73[800] = v74[800];
        v73[824] = v74[824];
        *(_OWORD *)(v73 + 808) = *(_OWORD *)(v74 + 808);
        *(_DWORD *)(v73 + 825) = *(_DWORD *)(v74 + 825);
        *(_WORD *)(v73 + 829) = *(_WORD *)(v74 + 829);
        v73[831] = v74[831];
        *((_QWORD *)v73 + 104) = v77;
        v103 = *((_QWORD *)v74 + 105);
        *((_QWORD *)v73 + 105) = v103;
        swift_bridgeObjectRetain(v77);
        swift_bridgeObjectRetain(v103);
      }
      v104 = v73 + 848;
      v105 = (uint64_t *)(v74 + 848);
      v106 = *((_QWORD *)v74 + 208);
      if (v106 == 1)
      {
        memcpy(v104, v105, 0x340uLL);
        v14 = v285;
      }
      else
      {
        v107 = *v105;
        if (*v105 == 1)
        {
          *v104 = *(_OWORD *)v105;
          *(_OWORD *)(v78 + 857) = *(_OWORD *)(v74 + 857);
        }
        else
        {
          *((_QWORD *)v78 + 106) = v107;
          v78[856] = v74[856];
          *((_QWORD *)v78 + 108) = *((_QWORD *)v74 + 108);
          v78[872] = v74[872];
          swift_bridgeObjectRetain(v107);
        }
        v108 = *((_QWORD *)v74 + 110);
        v14 = v285;
        if (v108 == 1)
        {
          *((_OWORD *)v78 + 55) = *((_OWORD *)v74 + 55);
          *(_OWORD *)(v78 + 889) = *(_OWORD *)(v74 + 889);
        }
        else
        {
          *((_QWORD *)v78 + 110) = v108;
          v78[888] = v74[888];
          *((_QWORD *)v78 + 112) = *((_QWORD *)v74 + 112);
          v78[904] = v74[904];
          swift_bridgeObjectRetain(v108);
        }
        v109 = *((_QWORD *)v74 + 114);
        if (v109 == 1)
        {
          *((_OWORD *)v78 + 57) = *((_OWORD *)v74 + 57);
          *(_OWORD *)(v78 + 921) = *(_OWORD *)(v74 + 921);
        }
        else
        {
          *((_QWORD *)v78 + 114) = v109;
          v78[920] = v74[920];
          *((_QWORD *)v78 + 116) = *((_QWORD *)v74 + 116);
          v78[936] = v74[936];
          swift_bridgeObjectRetain(v109);
        }
        v110 = *((_QWORD *)v74 + 118);
        if (v110 == 1)
        {
          *((_OWORD *)v78 + 59) = *((_OWORD *)v74 + 59);
          *(_OWORD *)(v78 + 953) = *(_OWORD *)(v74 + 953);
        }
        else
        {
          *((_QWORD *)v78 + 118) = v110;
          v78[952] = v74[952];
          *((_QWORD *)v78 + 120) = *((_QWORD *)v74 + 120);
          v78[968] = v74[968];
          swift_bridgeObjectRetain(v110);
        }
        v111 = *((_QWORD *)v74 + 122);
        if (v111 == 1)
        {
          *((_OWORD *)v78 + 61) = *((_OWORD *)v74 + 61);
          *(_OWORD *)(v78 + 985) = *(_OWORD *)(v74 + 985);
        }
        else
        {
          *((_QWORD *)v78 + 122) = v111;
          v78[984] = v74[984];
          *((_QWORD *)v78 + 124) = *((_QWORD *)v74 + 124);
          v78[1000] = v74[1000];
          swift_bridgeObjectRetain(v111);
        }
        v112 = *((_QWORD *)v74 + 126);
        if (v112 == 1)
        {
          *((_OWORD *)v78 + 63) = *((_OWORD *)v74 + 63);
          *(_OWORD *)(v78 + 1017) = *(_OWORD *)(v74 + 1017);
        }
        else
        {
          *((_QWORD *)v78 + 126) = v112;
          v78[1016] = v74[1016];
          *((_QWORD *)v78 + 128) = *((_QWORD *)v74 + 128);
          v78[1032] = v74[1032];
          swift_bridgeObjectRetain(v112);
        }
        v113 = *((_QWORD *)v74 + 130);
        if (v113 == 1)
        {
          *((_OWORD *)v78 + 65) = *((_OWORD *)v74 + 65);
          *(_OWORD *)(v78 + 1049) = *(_OWORD *)(v74 + 1049);
        }
        else
        {
          *((_QWORD *)v78 + 130) = v113;
          v78[1048] = v74[1048];
          *((_QWORD *)v78 + 132) = *((_QWORD *)v74 + 132);
          v78[1064] = v74[1064];
          swift_bridgeObjectRetain(v113);
        }
        v114 = *((_QWORD *)v74 + 134);
        if (v114 == 1)
        {
          *((_OWORD *)v78 + 67) = *((_OWORD *)v74 + 67);
          *(_OWORD *)(v78 + 1081) = *(_OWORD *)(v74 + 1081);
        }
        else
        {
          *((_QWORD *)v78 + 134) = v114;
          v78[1080] = v74[1080];
          *((_QWORD *)v78 + 136) = *((_QWORD *)v74 + 136);
          v78[1096] = v74[1096];
          swift_bridgeObjectRetain(v114);
        }
        v115 = *((_QWORD *)v74 + 138);
        if (v115 == 1)
        {
          *((_OWORD *)v78 + 69) = *((_OWORD *)v74 + 69);
          *(_OWORD *)(v78 + 1113) = *(_OWORD *)(v74 + 1113);
        }
        else
        {
          *((_QWORD *)v78 + 138) = v115;
          v78[1112] = v74[1112];
          *((_QWORD *)v78 + 140) = *((_QWORD *)v74 + 140);
          v78[1128] = v74[1128];
          swift_bridgeObjectRetain(v115);
        }
        v116 = *((_QWORD *)v74 + 142);
        if (v116 == 1)
        {
          *((_OWORD *)v78 + 71) = *((_OWORD *)v74 + 71);
          *(_OWORD *)(v78 + 1145) = *(_OWORD *)(v74 + 1145);
        }
        else
        {
          *((_QWORD *)v78 + 142) = v116;
          v78[1144] = v74[1144];
          *((_QWORD *)v78 + 144) = *((_QWORD *)v74 + 144);
          v78[1160] = v74[1160];
          swift_bridgeObjectRetain(v116);
        }
        v117 = *((_QWORD *)v74 + 146);
        if (v117 == 1)
        {
          *((_OWORD *)v78 + 73) = *((_OWORD *)v74 + 73);
          *(_OWORD *)(v78 + 1177) = *(_OWORD *)(v74 + 1177);
        }
        else
        {
          *((_QWORD *)v78 + 146) = v117;
          v78[1176] = v74[1176];
          *((_QWORD *)v78 + 148) = *((_QWORD *)v74 + 148);
          v78[1192] = v74[1192];
          swift_bridgeObjectRetain(v117);
        }
        v118 = *((_QWORD *)v74 + 150);
        if (v118 == 1)
        {
          *((_OWORD *)v78 + 75) = *((_OWORD *)v74 + 75);
          *(_OWORD *)(v78 + 1209) = *(_OWORD *)(v74 + 1209);
        }
        else
        {
          *((_QWORD *)v78 + 150) = v118;
          v78[1208] = v74[1208];
          *((_QWORD *)v78 + 152) = *((_QWORD *)v74 + 152);
          v78[1224] = v74[1224];
          swift_bridgeObjectRetain(v118);
        }
        v119 = *((_QWORD *)v74 + 154);
        if (v119 == 1)
        {
          *((_OWORD *)v78 + 77) = *((_OWORD *)v74 + 77);
          *(_OWORD *)(v78 + 1241) = *(_OWORD *)(v74 + 1241);
        }
        else
        {
          *((_QWORD *)v78 + 154) = v119;
          v78[1240] = v74[1240];
          *((_QWORD *)v78 + 156) = *((_QWORD *)v74 + 156);
          v78[1256] = v74[1256];
          swift_bridgeObjectRetain(v119);
        }
        v120 = *((_QWORD *)v74 + 158);
        if (v120 == 1)
        {
          *((_OWORD *)v78 + 79) = *((_OWORD *)v74 + 79);
          *(_OWORD *)(v78 + 1273) = *(_OWORD *)(v74 + 1273);
        }
        else
        {
          *((_QWORD *)v78 + 158) = v120;
          v78[1272] = v74[1272];
          *((_QWORD *)v78 + 160) = *((_QWORD *)v74 + 160);
          v78[1288] = v74[1288];
          swift_bridgeObjectRetain(v120);
        }
        v121 = *((_QWORD *)v74 + 162);
        if (v121 == 1)
        {
          *((_OWORD *)v78 + 81) = *((_OWORD *)v74 + 81);
          *(_OWORD *)(v78 + 1305) = *(_OWORD *)(v74 + 1305);
        }
        else
        {
          *((_QWORD *)v78 + 162) = v121;
          v78[1304] = v74[1304];
          *((_QWORD *)v78 + 164) = *((_QWORD *)v74 + 164);
          v78[1320] = v74[1320];
          swift_bridgeObjectRetain(v121);
        }
        v122 = *((_QWORD *)v74 + 166);
        if (v122 == 1)
        {
          *((_OWORD *)v78 + 83) = *((_OWORD *)v74 + 83);
          *(_OWORD *)(v78 + 1337) = *(_OWORD *)(v74 + 1337);
        }
        else
        {
          *((_QWORD *)v78 + 166) = v122;
          v78[1336] = v74[1336];
          *((_QWORD *)v78 + 168) = *((_QWORD *)v74 + 168);
          v78[1352] = v74[1352];
          swift_bridgeObjectRetain(v122);
        }
        v123 = *((_QWORD *)v74 + 170);
        if (v123 == 1)
        {
          *((_OWORD *)v78 + 85) = *((_OWORD *)v74 + 85);
          *(_OWORD *)(v78 + 1369) = *(_OWORD *)(v74 + 1369);
        }
        else
        {
          *((_QWORD *)v78 + 170) = v123;
          v78[1368] = v74[1368];
          *((_QWORD *)v78 + 172) = *((_QWORD *)v74 + 172);
          v78[1384] = v74[1384];
          swift_bridgeObjectRetain(v123);
        }
        v124 = *((_QWORD *)v74 + 174);
        if (v124 == 1)
        {
          *((_OWORD *)v78 + 87) = *((_OWORD *)v74 + 87);
          *(_OWORD *)(v78 + 1401) = *(_OWORD *)(v74 + 1401);
        }
        else
        {
          *((_QWORD *)v78 + 174) = v124;
          v78[1400] = v74[1400];
          *((_QWORD *)v78 + 176) = *((_QWORD *)v74 + 176);
          v78[1416] = v74[1416];
          swift_bridgeObjectRetain(v124);
        }
        v125 = *((_QWORD *)v74 + 178);
        if (v125 == 1)
        {
          *((_OWORD *)v78 + 89) = *((_OWORD *)v74 + 89);
          *(_OWORD *)(v78 + 1433) = *(_OWORD *)(v74 + 1433);
        }
        else
        {
          *((_QWORD *)v78 + 178) = v125;
          v78[1432] = v74[1432];
          *((_QWORD *)v78 + 180) = *((_QWORD *)v74 + 180);
          v78[1448] = v74[1448];
          swift_bridgeObjectRetain(v125);
        }
        v126 = *((_QWORD *)v74 + 182);
        if (v126 == 1)
        {
          *((_OWORD *)v78 + 91) = *((_OWORD *)v74 + 91);
          *(_OWORD *)(v78 + 1465) = *(_OWORD *)(v74 + 1465);
        }
        else
        {
          *((_QWORD *)v78 + 182) = v126;
          v78[1464] = v74[1464];
          *((_QWORD *)v78 + 184) = *((_QWORD *)v74 + 184);
          v78[1480] = v74[1480];
          swift_bridgeObjectRetain(v126);
        }
        v127 = *((_QWORD *)v74 + 186);
        if (v127 == 1)
        {
          *((_OWORD *)v78 + 93) = *((_OWORD *)v74 + 93);
          *(_OWORD *)(v78 + 1497) = *(_OWORD *)(v74 + 1497);
        }
        else
        {
          *((_QWORD *)v78 + 186) = v127;
          v78[1496] = v74[1496];
          *((_QWORD *)v78 + 188) = *((_QWORD *)v74 + 188);
          v78[1512] = v74[1512];
          swift_bridgeObjectRetain(v127);
        }
        v128 = *((_QWORD *)v74 + 190);
        if (v128 == 1)
        {
          *((_OWORD *)v78 + 95) = *((_OWORD *)v74 + 95);
          *(_OWORD *)(v78 + 1529) = *(_OWORD *)(v74 + 1529);
        }
        else
        {
          *((_QWORD *)v78 + 190) = v128;
          v78[1528] = v74[1528];
          *((_QWORD *)v78 + 192) = *((_QWORD *)v74 + 192);
          v78[1544] = v74[1544];
          swift_bridgeObjectRetain(v128);
        }
        v129 = *((_QWORD *)v74 + 194);
        if (v129 == 1)
        {
          *((_OWORD *)v78 + 97) = *((_OWORD *)v74 + 97);
          *(_OWORD *)(v78 + 1561) = *(_OWORD *)(v74 + 1561);
        }
        else
        {
          *((_QWORD *)v78 + 194) = v129;
          v78[1560] = v74[1560];
          *((_QWORD *)v78 + 196) = *((_QWORD *)v74 + 196);
          v78[1576] = v74[1576];
          swift_bridgeObjectRetain(v129);
        }
        v130 = *((_QWORD *)v74 + 198);
        if (v130 == 1)
        {
          *((_OWORD *)v78 + 99) = *((_OWORD *)v74 + 99);
          *(_OWORD *)(v78 + 1593) = *(_OWORD *)(v74 + 1593);
        }
        else
        {
          *((_QWORD *)v78 + 198) = v130;
          v78[1592] = v74[1592];
          *((_QWORD *)v78 + 200) = *((_QWORD *)v74 + 200);
          v78[1608] = v74[1608];
          swift_bridgeObjectRetain(v130);
        }
        *((_OWORD *)v78 + 101) = *((_OWORD *)v74 + 101);
        v78[1632] = v74[1632];
        v78[1656] = v74[1656];
        *(_OWORD *)(v78 + 1640) = *(_OWORD *)(v74 + 1640);
        *(_DWORD *)(v78 + 1657) = *(_DWORD *)(v74 + 1657);
        *(_WORD *)(v78 + 1661) = *(_WORD *)(v74 + 1661);
        v78[1663] = v74[1663];
        *((_QWORD *)v78 + 208) = v106;
        v131 = *((_QWORD *)v74 + 209);
        *((_QWORD *)v78 + 209) = v131;
        swift_bridgeObjectRetain(v106);
        swift_bridgeObjectRetain(v131);
      }
      v132 = v78 + 1680;
      v133 = (uint64_t *)(v74 + 1680);
      v134 = *((_QWORD *)v74 + 312);
      if (v134 == 1)
      {
        memcpy(v132, v133, 0x340uLL);
      }
      else
      {
        v135 = *v133;
        if (*v133 == 1)
        {
          *v132 = *(_OWORD *)v133;
          *(_OWORD *)(v78 + 1689) = *(_OWORD *)(v74 + 1689);
        }
        else
        {
          *((_QWORD *)v78 + 210) = v135;
          v78[1688] = v74[1688];
          *((_QWORD *)v78 + 212) = *((_QWORD *)v74 + 212);
          v78[1704] = v74[1704];
          swift_bridgeObjectRetain(v135);
        }
        v136 = *((_QWORD *)v74 + 214);
        if (v136 == 1)
        {
          *((_OWORD *)v78 + 107) = *((_OWORD *)v74 + 107);
          *(_OWORD *)(v78 + 1721) = *(_OWORD *)(v74 + 1721);
        }
        else
        {
          *((_QWORD *)v78 + 214) = v136;
          v78[1720] = v74[1720];
          *((_QWORD *)v78 + 216) = *((_QWORD *)v74 + 216);
          v78[1736] = v74[1736];
          swift_bridgeObjectRetain(v136);
        }
        v137 = *((_QWORD *)v74 + 218);
        if (v137 == 1)
        {
          *((_OWORD *)v78 + 109) = *((_OWORD *)v74 + 109);
          *(_OWORD *)(v78 + 1753) = *(_OWORD *)(v74 + 1753);
        }
        else
        {
          *((_QWORD *)v78 + 218) = v137;
          v78[1752] = v74[1752];
          *((_QWORD *)v78 + 220) = *((_QWORD *)v74 + 220);
          v78[1768] = v74[1768];
          swift_bridgeObjectRetain(v137);
        }
        v138 = *((_QWORD *)v74 + 222);
        if (v138 == 1)
        {
          *((_OWORD *)v78 + 111) = *((_OWORD *)v74 + 111);
          *(_OWORD *)(v78 + 1785) = *(_OWORD *)(v74 + 1785);
        }
        else
        {
          *((_QWORD *)v78 + 222) = v138;
          v78[1784] = v74[1784];
          *((_QWORD *)v78 + 224) = *((_QWORD *)v74 + 224);
          v78[1800] = v74[1800];
          swift_bridgeObjectRetain(v138);
        }
        v139 = *((_QWORD *)v74 + 226);
        if (v139 == 1)
        {
          *((_OWORD *)v78 + 113) = *((_OWORD *)v74 + 113);
          *(_OWORD *)(v78 + 1817) = *(_OWORD *)(v74 + 1817);
        }
        else
        {
          *((_QWORD *)v78 + 226) = v139;
          v78[1816] = v74[1816];
          *((_QWORD *)v78 + 228) = *((_QWORD *)v74 + 228);
          v78[1832] = v74[1832];
          swift_bridgeObjectRetain(v139);
        }
        v140 = *((_QWORD *)v74 + 230);
        if (v140 == 1)
        {
          *((_OWORD *)v78 + 115) = *((_OWORD *)v74 + 115);
          *(_OWORD *)(v78 + 1849) = *(_OWORD *)(v74 + 1849);
        }
        else
        {
          *((_QWORD *)v78 + 230) = v140;
          v78[1848] = v74[1848];
          *((_QWORD *)v78 + 232) = *((_QWORD *)v74 + 232);
          v78[1864] = v74[1864];
          swift_bridgeObjectRetain(v140);
        }
        v141 = *((_QWORD *)v74 + 234);
        if (v141 == 1)
        {
          *((_OWORD *)v78 + 117) = *((_OWORD *)v74 + 117);
          *(_OWORD *)(v78 + 1881) = *(_OWORD *)(v74 + 1881);
        }
        else
        {
          *((_QWORD *)v78 + 234) = v141;
          v78[1880] = v74[1880];
          *((_QWORD *)v78 + 236) = *((_QWORD *)v74 + 236);
          v78[1896] = v74[1896];
          swift_bridgeObjectRetain(v141);
        }
        v142 = *((_QWORD *)v74 + 238);
        if (v142 == 1)
        {
          *((_OWORD *)v78 + 119) = *((_OWORD *)v74 + 119);
          *(_OWORD *)(v78 + 1913) = *(_OWORD *)(v74 + 1913);
        }
        else
        {
          *((_QWORD *)v78 + 238) = v142;
          v78[1912] = v74[1912];
          *((_QWORD *)v78 + 240) = *((_QWORD *)v74 + 240);
          v78[1928] = v74[1928];
          swift_bridgeObjectRetain(v142);
        }
        v143 = *((_QWORD *)v74 + 242);
        if (v143 == 1)
        {
          *((_OWORD *)v78 + 121) = *((_OWORD *)v74 + 121);
          *(_OWORD *)(v78 + 1945) = *(_OWORD *)(v74 + 1945);
        }
        else
        {
          *((_QWORD *)v78 + 242) = v143;
          v78[1944] = v74[1944];
          *((_QWORD *)v78 + 244) = *((_QWORD *)v74 + 244);
          v78[1960] = v74[1960];
          swift_bridgeObjectRetain(v143);
        }
        v144 = *((_QWORD *)v74 + 246);
        if (v144 == 1)
        {
          *((_OWORD *)v78 + 123) = *((_OWORD *)v74 + 123);
          *(_OWORD *)(v78 + 1977) = *(_OWORD *)(v74 + 1977);
        }
        else
        {
          *((_QWORD *)v78 + 246) = v144;
          v78[1976] = v74[1976];
          *((_QWORD *)v78 + 248) = *((_QWORD *)v74 + 248);
          v78[1992] = v74[1992];
          swift_bridgeObjectRetain(v144);
        }
        v145 = *((_QWORD *)v74 + 250);
        if (v145 == 1)
        {
          *((_OWORD *)v78 + 125) = *((_OWORD *)v74 + 125);
          *(_OWORD *)(v78 + 2009) = *(_OWORD *)(v74 + 2009);
        }
        else
        {
          *((_QWORD *)v78 + 250) = v145;
          v78[2008] = v74[2008];
          *((_QWORD *)v78 + 252) = *((_QWORD *)v74 + 252);
          v78[2024] = v74[2024];
          swift_bridgeObjectRetain(v145);
        }
        v146 = *((_QWORD *)v74 + 254);
        if (v146 == 1)
        {
          *((_OWORD *)v78 + 127) = *((_OWORD *)v74 + 127);
          *(_OWORD *)(v78 + 2041) = *(_OWORD *)(v74 + 2041);
        }
        else
        {
          *((_QWORD *)v78 + 254) = v146;
          v78[2040] = v74[2040];
          *((_QWORD *)v78 + 256) = *((_QWORD *)v74 + 256);
          v78[2056] = v74[2056];
          swift_bridgeObjectRetain(v146);
        }
        v147 = *((_QWORD *)v74 + 258);
        if (v147 == 1)
        {
          *((_OWORD *)v78 + 129) = *((_OWORD *)v74 + 129);
          *(_OWORD *)(v78 + 2073) = *(_OWORD *)(v74 + 2073);
        }
        else
        {
          *((_QWORD *)v78 + 258) = v147;
          v78[2072] = v74[2072];
          *((_QWORD *)v78 + 260) = *((_QWORD *)v74 + 260);
          v78[2088] = v74[2088];
          swift_bridgeObjectRetain(v147);
        }
        v148 = *((_QWORD *)v74 + 262);
        if (v148 == 1)
        {
          *((_OWORD *)v78 + 131) = *((_OWORD *)v74 + 131);
          *(_OWORD *)(v78 + 2105) = *(_OWORD *)(v74 + 2105);
        }
        else
        {
          *((_QWORD *)v78 + 262) = v148;
          v78[2104] = v74[2104];
          *((_QWORD *)v78 + 264) = *((_QWORD *)v74 + 264);
          v78[2120] = v74[2120];
          swift_bridgeObjectRetain(v148);
        }
        v149 = *((_QWORD *)v74 + 266);
        if (v149 == 1)
        {
          *((_OWORD *)v78 + 133) = *((_OWORD *)v74 + 133);
          *(_OWORD *)(v78 + 2137) = *(_OWORD *)(v74 + 2137);
        }
        else
        {
          *((_QWORD *)v78 + 266) = v149;
          v78[2136] = v74[2136];
          *((_QWORD *)v78 + 268) = *((_QWORD *)v74 + 268);
          v78[2152] = v74[2152];
          swift_bridgeObjectRetain(v149);
        }
        v150 = *((_QWORD *)v74 + 270);
        if (v150 == 1)
        {
          *((_OWORD *)v78 + 135) = *((_OWORD *)v74 + 135);
          *(_OWORD *)(v78 + 2169) = *(_OWORD *)(v74 + 2169);
        }
        else
        {
          *((_QWORD *)v78 + 270) = v150;
          v78[2168] = v74[2168];
          *((_QWORD *)v78 + 272) = *((_QWORD *)v74 + 272);
          v78[2184] = v74[2184];
          swift_bridgeObjectRetain(v150);
        }
        v151 = *((_QWORD *)v74 + 274);
        if (v151 == 1)
        {
          *((_OWORD *)v78 + 137) = *((_OWORD *)v74 + 137);
          *(_OWORD *)(v78 + 2201) = *(_OWORD *)(v74 + 2201);
        }
        else
        {
          *((_QWORD *)v78 + 274) = v151;
          v78[2200] = v74[2200];
          *((_QWORD *)v78 + 276) = *((_QWORD *)v74 + 276);
          v78[2216] = v74[2216];
          swift_bridgeObjectRetain(v151);
        }
        v152 = *((_QWORD *)v74 + 278);
        if (v152 == 1)
        {
          *((_OWORD *)v78 + 139) = *((_OWORD *)v74 + 139);
          *(_OWORD *)(v78 + 2233) = *(_OWORD *)(v74 + 2233);
        }
        else
        {
          *((_QWORD *)v78 + 278) = v152;
          v78[2232] = v74[2232];
          *((_QWORD *)v78 + 280) = *((_QWORD *)v74 + 280);
          v78[2248] = v74[2248];
          swift_bridgeObjectRetain(v152);
        }
        v153 = *((_QWORD *)v74 + 282);
        if (v153 == 1)
        {
          *((_OWORD *)v78 + 141) = *((_OWORD *)v74 + 141);
          *(_OWORD *)(v78 + 2265) = *(_OWORD *)(v74 + 2265);
        }
        else
        {
          *((_QWORD *)v78 + 282) = v153;
          v78[2264] = v74[2264];
          *((_QWORD *)v78 + 284) = *((_QWORD *)v74 + 284);
          v78[2280] = v74[2280];
          swift_bridgeObjectRetain(v153);
        }
        v154 = *((_QWORD *)v74 + 286);
        if (v154 == 1)
        {
          *((_OWORD *)v78 + 143) = *((_OWORD *)v74 + 143);
          *(_OWORD *)(v78 + 2297) = *(_OWORD *)(v74 + 2297);
        }
        else
        {
          *((_QWORD *)v78 + 286) = v154;
          v78[2296] = v74[2296];
          *((_QWORD *)v78 + 288) = *((_QWORD *)v74 + 288);
          v78[2312] = v74[2312];
          swift_bridgeObjectRetain(v154);
        }
        v155 = *((_QWORD *)v74 + 290);
        if (v155 == 1)
        {
          *((_OWORD *)v78 + 145) = *((_OWORD *)v74 + 145);
          *(_OWORD *)(v78 + 2329) = *(_OWORD *)(v74 + 2329);
        }
        else
        {
          *((_QWORD *)v78 + 290) = v155;
          v78[2328] = v74[2328];
          *((_QWORD *)v78 + 292) = *((_QWORD *)v74 + 292);
          v78[2344] = v74[2344];
          swift_bridgeObjectRetain(v155);
        }
        v156 = *((_QWORD *)v74 + 294);
        if (v156 == 1)
        {
          *((_OWORD *)v78 + 147) = *((_OWORD *)v74 + 147);
          *(_OWORD *)(v78 + 2361) = *(_OWORD *)(v74 + 2361);
        }
        else
        {
          *((_QWORD *)v78 + 294) = v156;
          v78[2360] = v74[2360];
          *((_QWORD *)v78 + 296) = *((_QWORD *)v74 + 296);
          v78[2376] = v74[2376];
          swift_bridgeObjectRetain(v156);
        }
        v157 = *((_QWORD *)v74 + 298);
        if (v157 == 1)
        {
          *((_OWORD *)v78 + 149) = *((_OWORD *)v74 + 149);
          *(_OWORD *)(v78 + 2393) = *(_OWORD *)(v74 + 2393);
        }
        else
        {
          *((_QWORD *)v78 + 298) = v157;
          v78[2392] = v74[2392];
          *((_QWORD *)v78 + 300) = *((_QWORD *)v74 + 300);
          v78[2408] = v74[2408];
          swift_bridgeObjectRetain(v157);
        }
        v158 = *((_QWORD *)v74 + 302);
        if (v158 == 1)
        {
          *((_OWORD *)v78 + 151) = *((_OWORD *)v74 + 151);
          *(_OWORD *)(v78 + 2425) = *(_OWORD *)(v74 + 2425);
        }
        else
        {
          *((_QWORD *)v78 + 302) = v158;
          v78[2424] = v74[2424];
          *((_QWORD *)v78 + 304) = *((_QWORD *)v74 + 304);
          v78[2440] = v74[2440];
          swift_bridgeObjectRetain(v158);
        }
        *((_OWORD *)v78 + 153) = *((_OWORD *)v74 + 153);
        v78[2464] = v74[2464];
        v78[2488] = v74[2488];
        *(_OWORD *)(v78 + 2472) = *(_OWORD *)(v74 + 2472);
        *(_DWORD *)(v78 + 2489) = *(_DWORD *)(v74 + 2489);
        *(_WORD *)(v78 + 2493) = *(_WORD *)(v74 + 2493);
        v78[2495] = v74[2495];
        *((_QWORD *)v78 + 312) = v134;
        v159 = *((_QWORD *)v74 + 313);
        *((_QWORD *)v78 + 313) = v159;
        swift_bridgeObjectRetain(v134);
        swift_bridgeObjectRetain(v159);
      }
      v160 = v78 + 2512;
      v161 = (uint64_t *)(v74 + 2512);
      v162 = *((_QWORD *)v74 + 416);
      if (v162 == 1)
      {
        memcpy(v160, v161, 0x340uLL);
      }
      else
      {
        v163 = *v161;
        if (*v161 == 1)
        {
          *v160 = *(_OWORD *)v161;
          *(_OWORD *)(v78 + 2521) = *(_OWORD *)(v74 + 2521);
        }
        else
        {
          *((_QWORD *)v78 + 314) = v163;
          v78[2520] = v74[2520];
          *((_QWORD *)v78 + 316) = *((_QWORD *)v74 + 316);
          v78[2536] = v74[2536];
          swift_bridgeObjectRetain(v163);
        }
        v164 = *((_QWORD *)v74 + 318);
        if (v164 == 1)
        {
          *((_OWORD *)v78 + 159) = *((_OWORD *)v74 + 159);
          *(_OWORD *)(v78 + 2553) = *(_OWORD *)(v74 + 2553);
        }
        else
        {
          *((_QWORD *)v78 + 318) = v164;
          v78[2552] = v74[2552];
          *((_QWORD *)v78 + 320) = *((_QWORD *)v74 + 320);
          v78[2568] = v74[2568];
          swift_bridgeObjectRetain(v164);
        }
        v165 = *((_QWORD *)v74 + 322);
        if (v165 == 1)
        {
          *((_OWORD *)v78 + 161) = *((_OWORD *)v74 + 161);
          *(_OWORD *)(v78 + 2585) = *(_OWORD *)(v74 + 2585);
        }
        else
        {
          *((_QWORD *)v78 + 322) = v165;
          v78[2584] = v74[2584];
          *((_QWORD *)v78 + 324) = *((_QWORD *)v74 + 324);
          v78[2600] = v74[2600];
          swift_bridgeObjectRetain(v165);
        }
        v166 = *((_QWORD *)v74 + 326);
        if (v166 == 1)
        {
          *((_OWORD *)v78 + 163) = *((_OWORD *)v74 + 163);
          *(_OWORD *)(v78 + 2617) = *(_OWORD *)(v74 + 2617);
        }
        else
        {
          *((_QWORD *)v78 + 326) = v166;
          v78[2616] = v74[2616];
          *((_QWORD *)v78 + 328) = *((_QWORD *)v74 + 328);
          v78[2632] = v74[2632];
          swift_bridgeObjectRetain(v166);
        }
        v167 = *((_QWORD *)v74 + 330);
        if (v167 == 1)
        {
          *((_OWORD *)v78 + 165) = *((_OWORD *)v74 + 165);
          *(_OWORD *)(v78 + 2649) = *(_OWORD *)(v74 + 2649);
        }
        else
        {
          *((_QWORD *)v78 + 330) = v167;
          v78[2648] = v74[2648];
          *((_QWORD *)v78 + 332) = *((_QWORD *)v74 + 332);
          v78[2664] = v74[2664];
          swift_bridgeObjectRetain(v167);
        }
        v168 = *((_QWORD *)v74 + 334);
        if (v168 == 1)
        {
          *((_OWORD *)v78 + 167) = *((_OWORD *)v74 + 167);
          *(_OWORD *)(v78 + 2681) = *(_OWORD *)(v74 + 2681);
        }
        else
        {
          *((_QWORD *)v78 + 334) = v168;
          v78[2680] = v74[2680];
          *((_QWORD *)v78 + 336) = *((_QWORD *)v74 + 336);
          v78[2696] = v74[2696];
          swift_bridgeObjectRetain(v168);
        }
        v169 = *((_QWORD *)v74 + 338);
        if (v169 == 1)
        {
          *((_OWORD *)v78 + 169) = *((_OWORD *)v74 + 169);
          *(_OWORD *)(v78 + 2713) = *(_OWORD *)(v74 + 2713);
        }
        else
        {
          *((_QWORD *)v78 + 338) = v169;
          v78[2712] = v74[2712];
          *((_QWORD *)v78 + 340) = *((_QWORD *)v74 + 340);
          v78[2728] = v74[2728];
          swift_bridgeObjectRetain(v169);
        }
        v170 = *((_QWORD *)v74 + 342);
        if (v170 == 1)
        {
          *((_OWORD *)v78 + 171) = *((_OWORD *)v74 + 171);
          *(_OWORD *)(v78 + 2745) = *(_OWORD *)(v74 + 2745);
        }
        else
        {
          *((_QWORD *)v78 + 342) = v170;
          v78[2744] = v74[2744];
          *((_QWORD *)v78 + 344) = *((_QWORD *)v74 + 344);
          v78[2760] = v74[2760];
          swift_bridgeObjectRetain(v170);
        }
        v171 = *((_QWORD *)v74 + 346);
        if (v171 == 1)
        {
          *((_OWORD *)v78 + 173) = *((_OWORD *)v74 + 173);
          *(_OWORD *)(v78 + 2777) = *(_OWORD *)(v74 + 2777);
        }
        else
        {
          *((_QWORD *)v78 + 346) = v171;
          v78[2776] = v74[2776];
          *((_QWORD *)v78 + 348) = *((_QWORD *)v74 + 348);
          v78[2792] = v74[2792];
          swift_bridgeObjectRetain(v171);
        }
        v172 = *((_QWORD *)v74 + 350);
        if (v172 == 1)
        {
          *((_OWORD *)v78 + 175) = *((_OWORD *)v74 + 175);
          *(_OWORD *)(v78 + 2809) = *(_OWORD *)(v74 + 2809);
        }
        else
        {
          *((_QWORD *)v78 + 350) = v172;
          v78[2808] = v74[2808];
          *((_QWORD *)v78 + 352) = *((_QWORD *)v74 + 352);
          v78[2824] = v74[2824];
          swift_bridgeObjectRetain(v172);
        }
        v173 = *((_QWORD *)v74 + 354);
        if (v173 == 1)
        {
          *((_OWORD *)v78 + 177) = *((_OWORD *)v74 + 177);
          *(_OWORD *)(v78 + 2841) = *(_OWORD *)(v74 + 2841);
        }
        else
        {
          *((_QWORD *)v78 + 354) = v173;
          v78[2840] = v74[2840];
          *((_QWORD *)v78 + 356) = *((_QWORD *)v74 + 356);
          v78[2856] = v74[2856];
          swift_bridgeObjectRetain(v173);
        }
        v174 = *((_QWORD *)v74 + 358);
        if (v174 == 1)
        {
          *((_OWORD *)v78 + 179) = *((_OWORD *)v74 + 179);
          *(_OWORD *)(v78 + 2873) = *(_OWORD *)(v74 + 2873);
        }
        else
        {
          *((_QWORD *)v78 + 358) = v174;
          v78[2872] = v74[2872];
          *((_QWORD *)v78 + 360) = *((_QWORD *)v74 + 360);
          v78[2888] = v74[2888];
          swift_bridgeObjectRetain(v174);
        }
        v175 = *((_QWORD *)v74 + 362);
        if (v175 == 1)
        {
          *((_OWORD *)v78 + 181) = *((_OWORD *)v74 + 181);
          *(_OWORD *)(v78 + 2905) = *(_OWORD *)(v74 + 2905);
        }
        else
        {
          *((_QWORD *)v78 + 362) = v175;
          v78[2904] = v74[2904];
          *((_QWORD *)v78 + 364) = *((_QWORD *)v74 + 364);
          v78[2920] = v74[2920];
          swift_bridgeObjectRetain(v175);
        }
        v176 = *((_QWORD *)v74 + 366);
        if (v176 == 1)
        {
          *((_OWORD *)v78 + 183) = *((_OWORD *)v74 + 183);
          *(_OWORD *)(v78 + 2937) = *(_OWORD *)(v74 + 2937);
        }
        else
        {
          *((_QWORD *)v78 + 366) = v176;
          v78[2936] = v74[2936];
          *((_QWORD *)v78 + 368) = *((_QWORD *)v74 + 368);
          v78[2952] = v74[2952];
          swift_bridgeObjectRetain(v176);
        }
        v177 = *((_QWORD *)v74 + 370);
        if (v177 == 1)
        {
          *((_OWORD *)v78 + 185) = *((_OWORD *)v74 + 185);
          *(_OWORD *)(v78 + 2969) = *(_OWORD *)(v74 + 2969);
        }
        else
        {
          *((_QWORD *)v78 + 370) = v177;
          v78[2968] = v74[2968];
          *((_QWORD *)v78 + 372) = *((_QWORD *)v74 + 372);
          v78[2984] = v74[2984];
          swift_bridgeObjectRetain(v177);
        }
        v178 = *((_QWORD *)v74 + 374);
        if (v178 == 1)
        {
          *((_OWORD *)v78 + 187) = *((_OWORD *)v74 + 187);
          *(_OWORD *)(v78 + 3001) = *(_OWORD *)(v74 + 3001);
        }
        else
        {
          *((_QWORD *)v78 + 374) = v178;
          v78[3000] = v74[3000];
          *((_QWORD *)v78 + 376) = *((_QWORD *)v74 + 376);
          v78[3016] = v74[3016];
          swift_bridgeObjectRetain(v178);
        }
        v179 = *((_QWORD *)v74 + 378);
        if (v179 == 1)
        {
          *((_OWORD *)v78 + 189) = *((_OWORD *)v74 + 189);
          *(_OWORD *)(v78 + 3033) = *(_OWORD *)(v74 + 3033);
        }
        else
        {
          *((_QWORD *)v78 + 378) = v179;
          v78[3032] = v74[3032];
          *((_QWORD *)v78 + 380) = *((_QWORD *)v74 + 380);
          v78[3048] = v74[3048];
          swift_bridgeObjectRetain(v179);
        }
        v180 = *((_QWORD *)v74 + 382);
        if (v180 == 1)
        {
          *((_OWORD *)v78 + 191) = *((_OWORD *)v74 + 191);
          *(_OWORD *)(v78 + 3065) = *(_OWORD *)(v74 + 3065);
        }
        else
        {
          *((_QWORD *)v78 + 382) = v180;
          v78[3064] = v74[3064];
          *((_QWORD *)v78 + 384) = *((_QWORD *)v74 + 384);
          v78[3080] = v74[3080];
          swift_bridgeObjectRetain(v180);
        }
        v181 = *((_QWORD *)v74 + 386);
        if (v181 == 1)
        {
          *((_OWORD *)v78 + 193) = *((_OWORD *)v74 + 193);
          *(_OWORD *)(v78 + 3097) = *(_OWORD *)(v74 + 3097);
        }
        else
        {
          *((_QWORD *)v78 + 386) = v181;
          v78[3096] = v74[3096];
          *((_QWORD *)v78 + 388) = *((_QWORD *)v74 + 388);
          v78[3112] = v74[3112];
          swift_bridgeObjectRetain(v181);
        }
        v182 = *((_QWORD *)v74 + 390);
        if (v182 == 1)
        {
          *((_OWORD *)v78 + 195) = *((_OWORD *)v74 + 195);
          *(_OWORD *)(v78 + 3129) = *(_OWORD *)(v74 + 3129);
        }
        else
        {
          *((_QWORD *)v78 + 390) = v182;
          v78[3128] = v74[3128];
          *((_QWORD *)v78 + 392) = *((_QWORD *)v74 + 392);
          v78[3144] = v74[3144];
          swift_bridgeObjectRetain(v182);
        }
        v183 = *((_QWORD *)v74 + 394);
        if (v183 == 1)
        {
          *((_OWORD *)v78 + 197) = *((_OWORD *)v74 + 197);
          *(_OWORD *)(v78 + 3161) = *(_OWORD *)(v74 + 3161);
        }
        else
        {
          *((_QWORD *)v78 + 394) = v183;
          v78[3160] = v74[3160];
          *((_QWORD *)v78 + 396) = *((_QWORD *)v74 + 396);
          v78[3176] = v74[3176];
          swift_bridgeObjectRetain(v183);
        }
        v184 = *((_QWORD *)v74 + 398);
        if (v184 == 1)
        {
          *((_OWORD *)v78 + 199) = *((_OWORD *)v74 + 199);
          *(_OWORD *)(v78 + 3193) = *(_OWORD *)(v74 + 3193);
        }
        else
        {
          *((_QWORD *)v78 + 398) = v184;
          v78[3192] = v74[3192];
          *((_QWORD *)v78 + 400) = *((_QWORD *)v74 + 400);
          v78[3208] = v74[3208];
          swift_bridgeObjectRetain(v184);
        }
        v185 = *((_QWORD *)v74 + 402);
        if (v185 == 1)
        {
          *((_OWORD *)v78 + 201) = *((_OWORD *)v74 + 201);
          *(_OWORD *)(v78 + 3225) = *(_OWORD *)(v74 + 3225);
        }
        else
        {
          *((_QWORD *)v78 + 402) = v185;
          v78[3224] = v74[3224];
          *((_QWORD *)v78 + 404) = *((_QWORD *)v74 + 404);
          v78[3240] = v74[3240];
          swift_bridgeObjectRetain(v185);
        }
        v186 = *((_QWORD *)v74 + 406);
        if (v186 == 1)
        {
          *((_OWORD *)v78 + 203) = *((_OWORD *)v74 + 203);
          *(_OWORD *)(v78 + 3257) = *(_OWORD *)(v74 + 3257);
        }
        else
        {
          *((_QWORD *)v78 + 406) = v186;
          v78[3256] = v74[3256];
          *((_QWORD *)v78 + 408) = *((_QWORD *)v74 + 408);
          v78[3272] = v74[3272];
          swift_bridgeObjectRetain(v186);
        }
        *((_OWORD *)v78 + 205) = *((_OWORD *)v74 + 205);
        v78[3296] = v74[3296];
        v78[3320] = v74[3320];
        *(_OWORD *)(v78 + 3304) = *(_OWORD *)(v74 + 3304);
        *(_DWORD *)(v78 + 3321) = *(_DWORD *)(v74 + 3321);
        *(_WORD *)(v78 + 3325) = *(_WORD *)(v74 + 3325);
        v78[3327] = v74[3327];
        *((_QWORD *)v78 + 416) = v162;
        v187 = *((_QWORD *)v74 + 417);
        *((_QWORD *)v78 + 417) = v187;
        swift_bridgeObjectRetain(v162);
        swift_bridgeObjectRetain(v187);
      }
      v188 = v78 + 3344;
      v189 = (uint64_t *)(v74 + 3344);
      v190 = *((_QWORD *)v74 + 520);
      if (v190 == 1)
      {
        memcpy(v188, v189, 0x340uLL);
      }
      else
      {
        v191 = *v189;
        if (*v189 == 1)
        {
          *v188 = *(_OWORD *)v189;
          *(_OWORD *)(v78 + 3353) = *(_OWORD *)(v74 + 3353);
        }
        else
        {
          *((_QWORD *)v78 + 418) = v191;
          v78[3352] = v74[3352];
          *((_QWORD *)v78 + 420) = *((_QWORD *)v74 + 420);
          v78[3368] = v74[3368];
          swift_bridgeObjectRetain(v191);
        }
        v192 = *((_QWORD *)v74 + 422);
        if (v192 == 1)
        {
          *((_OWORD *)v78 + 211) = *((_OWORD *)v74 + 211);
          *(_OWORD *)(v78 + 3385) = *(_OWORD *)(v74 + 3385);
        }
        else
        {
          *((_QWORD *)v78 + 422) = v192;
          v78[3384] = v74[3384];
          *((_QWORD *)v78 + 424) = *((_QWORD *)v74 + 424);
          v78[3400] = v74[3400];
          swift_bridgeObjectRetain(v192);
        }
        v193 = *((_QWORD *)v74 + 426);
        if (v193 == 1)
        {
          *((_OWORD *)v78 + 213) = *((_OWORD *)v74 + 213);
          *(_OWORD *)(v78 + 3417) = *(_OWORD *)(v74 + 3417);
        }
        else
        {
          *((_QWORD *)v78 + 426) = v193;
          v78[3416] = v74[3416];
          *((_QWORD *)v78 + 428) = *((_QWORD *)v74 + 428);
          v78[3432] = v74[3432];
          swift_bridgeObjectRetain(v193);
        }
        v194 = *((_QWORD *)v74 + 430);
        if (v194 == 1)
        {
          *((_OWORD *)v78 + 215) = *((_OWORD *)v74 + 215);
          *(_OWORD *)(v78 + 3449) = *(_OWORD *)(v74 + 3449);
        }
        else
        {
          *((_QWORD *)v78 + 430) = v194;
          v78[3448] = v74[3448];
          *((_QWORD *)v78 + 432) = *((_QWORD *)v74 + 432);
          v78[3464] = v74[3464];
          swift_bridgeObjectRetain(v194);
        }
        v195 = *((_QWORD *)v74 + 434);
        if (v195 == 1)
        {
          *((_OWORD *)v78 + 217) = *((_OWORD *)v74 + 217);
          *(_OWORD *)(v78 + 3481) = *(_OWORD *)(v74 + 3481);
        }
        else
        {
          *((_QWORD *)v78 + 434) = v195;
          v78[3480] = v74[3480];
          *((_QWORD *)v78 + 436) = *((_QWORD *)v74 + 436);
          v78[3496] = v74[3496];
          swift_bridgeObjectRetain(v195);
        }
        v196 = *((_QWORD *)v74 + 438);
        if (v196 == 1)
        {
          *((_OWORD *)v78 + 219) = *((_OWORD *)v74 + 219);
          *(_OWORD *)(v78 + 3513) = *(_OWORD *)(v74 + 3513);
        }
        else
        {
          *((_QWORD *)v78 + 438) = v196;
          v78[3512] = v74[3512];
          *((_QWORD *)v78 + 440) = *((_QWORD *)v74 + 440);
          v78[3528] = v74[3528];
          swift_bridgeObjectRetain(v196);
        }
        v197 = *((_QWORD *)v74 + 442);
        if (v197 == 1)
        {
          *((_OWORD *)v78 + 221) = *((_OWORD *)v74 + 221);
          *(_OWORD *)(v78 + 3545) = *(_OWORD *)(v74 + 3545);
        }
        else
        {
          *((_QWORD *)v78 + 442) = v197;
          v78[3544] = v74[3544];
          *((_QWORD *)v78 + 444) = *((_QWORD *)v74 + 444);
          v78[3560] = v74[3560];
          swift_bridgeObjectRetain(v197);
        }
        v198 = *((_QWORD *)v74 + 446);
        if (v198 == 1)
        {
          *((_OWORD *)v78 + 223) = *((_OWORD *)v74 + 223);
          *(_OWORD *)(v78 + 3577) = *(_OWORD *)(v74 + 3577);
        }
        else
        {
          *((_QWORD *)v78 + 446) = v198;
          v78[3576] = v74[3576];
          *((_QWORD *)v78 + 448) = *((_QWORD *)v74 + 448);
          v78[3592] = v74[3592];
          swift_bridgeObjectRetain(v198);
        }
        v199 = *((_QWORD *)v74 + 450);
        if (v199 == 1)
        {
          *((_OWORD *)v78 + 225) = *((_OWORD *)v74 + 225);
          *(_OWORD *)(v78 + 3609) = *(_OWORD *)(v74 + 3609);
        }
        else
        {
          *((_QWORD *)v78 + 450) = v199;
          v78[3608] = v74[3608];
          *((_QWORD *)v78 + 452) = *((_QWORD *)v74 + 452);
          v78[3624] = v74[3624];
          swift_bridgeObjectRetain(v199);
        }
        v200 = *((_QWORD *)v74 + 454);
        if (v200 == 1)
        {
          *((_OWORD *)v78 + 227) = *((_OWORD *)v74 + 227);
          *(_OWORD *)(v78 + 3641) = *(_OWORD *)(v74 + 3641);
        }
        else
        {
          *((_QWORD *)v78 + 454) = v200;
          v78[3640] = v74[3640];
          *((_QWORD *)v78 + 456) = *((_QWORD *)v74 + 456);
          v78[3656] = v74[3656];
          swift_bridgeObjectRetain(v200);
        }
        v201 = *((_QWORD *)v74 + 458);
        if (v201 == 1)
        {
          *((_OWORD *)v78 + 229) = *((_OWORD *)v74 + 229);
          *(_OWORD *)(v78 + 3673) = *(_OWORD *)(v74 + 3673);
        }
        else
        {
          *((_QWORD *)v78 + 458) = v201;
          v78[3672] = v74[3672];
          *((_QWORD *)v78 + 460) = *((_QWORD *)v74 + 460);
          v78[3688] = v74[3688];
          swift_bridgeObjectRetain(v201);
        }
        v202 = *((_QWORD *)v74 + 462);
        if (v202 == 1)
        {
          *((_OWORD *)v78 + 231) = *((_OWORD *)v74 + 231);
          *(_OWORD *)(v78 + 3705) = *(_OWORD *)(v74 + 3705);
        }
        else
        {
          *((_QWORD *)v78 + 462) = v202;
          v78[3704] = v74[3704];
          *((_QWORD *)v78 + 464) = *((_QWORD *)v74 + 464);
          v78[3720] = v74[3720];
          swift_bridgeObjectRetain(v202);
        }
        v203 = *((_QWORD *)v74 + 466);
        if (v203 == 1)
        {
          *((_OWORD *)v78 + 233) = *((_OWORD *)v74 + 233);
          *(_OWORD *)(v78 + 3737) = *(_OWORD *)(v74 + 3737);
        }
        else
        {
          *((_QWORD *)v78 + 466) = v203;
          v78[3736] = v74[3736];
          *((_QWORD *)v78 + 468) = *((_QWORD *)v74 + 468);
          v78[3752] = v74[3752];
          swift_bridgeObjectRetain(v203);
        }
        v204 = *((_QWORD *)v74 + 470);
        if (v204 == 1)
        {
          *((_OWORD *)v78 + 235) = *((_OWORD *)v74 + 235);
          *(_OWORD *)(v78 + 3769) = *(_OWORD *)(v74 + 3769);
        }
        else
        {
          *((_QWORD *)v78 + 470) = v204;
          v78[3768] = v74[3768];
          *((_QWORD *)v78 + 472) = *((_QWORD *)v74 + 472);
          v78[3784] = v74[3784];
          swift_bridgeObjectRetain(v204);
        }
        v205 = *((_QWORD *)v74 + 474);
        if (v205 == 1)
        {
          *((_OWORD *)v78 + 237) = *((_OWORD *)v74 + 237);
          *(_OWORD *)(v78 + 3801) = *(_OWORD *)(v74 + 3801);
        }
        else
        {
          *((_QWORD *)v78 + 474) = v205;
          v78[3800] = v74[3800];
          *((_QWORD *)v78 + 476) = *((_QWORD *)v74 + 476);
          v78[3816] = v74[3816];
          swift_bridgeObjectRetain(v205);
        }
        v206 = *((_QWORD *)v74 + 478);
        if (v206 == 1)
        {
          *((_OWORD *)v78 + 239) = *((_OWORD *)v74 + 239);
          *(_OWORD *)(v78 + 3833) = *(_OWORD *)(v74 + 3833);
        }
        else
        {
          *((_QWORD *)v78 + 478) = v206;
          v78[3832] = v74[3832];
          *((_QWORD *)v78 + 480) = *((_QWORD *)v74 + 480);
          v78[3848] = v74[3848];
          swift_bridgeObjectRetain(v206);
        }
        v207 = *((_QWORD *)v74 + 482);
        if (v207 == 1)
        {
          *((_OWORD *)v78 + 241) = *((_OWORD *)v74 + 241);
          *(_OWORD *)(v78 + 3865) = *(_OWORD *)(v74 + 3865);
        }
        else
        {
          *((_QWORD *)v78 + 482) = v207;
          v78[3864] = v74[3864];
          *((_QWORD *)v78 + 484) = *((_QWORD *)v74 + 484);
          v78[3880] = v74[3880];
          swift_bridgeObjectRetain(v207);
        }
        v208 = *((_QWORD *)v74 + 486);
        if (v208 == 1)
        {
          *((_OWORD *)v78 + 243) = *((_OWORD *)v74 + 243);
          *(_OWORD *)(v78 + 3897) = *(_OWORD *)(v74 + 3897);
        }
        else
        {
          *((_QWORD *)v78 + 486) = v208;
          v78[3896] = v74[3896];
          *((_QWORD *)v78 + 488) = *((_QWORD *)v74 + 488);
          v78[3912] = v74[3912];
          swift_bridgeObjectRetain(v208);
        }
        v209 = *((_QWORD *)v74 + 490);
        if (v209 == 1)
        {
          *((_OWORD *)v78 + 245) = *((_OWORD *)v74 + 245);
          *(_OWORD *)(v78 + 3929) = *(_OWORD *)(v74 + 3929);
        }
        else
        {
          *((_QWORD *)v78 + 490) = v209;
          v78[3928] = v74[3928];
          *((_QWORD *)v78 + 492) = *((_QWORD *)v74 + 492);
          v78[3944] = v74[3944];
          swift_bridgeObjectRetain(v209);
        }
        v210 = *((_QWORD *)v74 + 494);
        if (v210 == 1)
        {
          *((_OWORD *)v78 + 247) = *((_OWORD *)v74 + 247);
          *(_OWORD *)(v78 + 3961) = *(_OWORD *)(v74 + 3961);
        }
        else
        {
          *((_QWORD *)v78 + 494) = v210;
          v78[3960] = v74[3960];
          *((_QWORD *)v78 + 496) = *((_QWORD *)v74 + 496);
          v78[3976] = v74[3976];
          swift_bridgeObjectRetain(v210);
        }
        v211 = *((_QWORD *)v74 + 498);
        if (v211 == 1)
        {
          *((_OWORD *)v78 + 249) = *((_OWORD *)v74 + 249);
          *(_OWORD *)(v78 + 3993) = *(_OWORD *)(v74 + 3993);
        }
        else
        {
          *((_QWORD *)v78 + 498) = v211;
          v78[3992] = v74[3992];
          *((_QWORD *)v78 + 500) = *((_QWORD *)v74 + 500);
          v78[4008] = v74[4008];
          swift_bridgeObjectRetain(v211);
        }
        v212 = *((_QWORD *)v74 + 502);
        if (v212 == 1)
        {
          *((_OWORD *)v78 + 251) = *((_OWORD *)v74 + 251);
          *(_OWORD *)(v78 + 4025) = *(_OWORD *)(v74 + 4025);
        }
        else
        {
          *((_QWORD *)v78 + 502) = v212;
          v78[4024] = v74[4024];
          *((_QWORD *)v78 + 504) = *((_QWORD *)v74 + 504);
          v78[4040] = v74[4040];
          swift_bridgeObjectRetain(v212);
        }
        v213 = *((_QWORD *)v74 + 506);
        if (v213 == 1)
        {
          *((_OWORD *)v78 + 253) = *((_OWORD *)v74 + 253);
          *(_OWORD *)(v78 + 4057) = *(_OWORD *)(v74 + 4057);
        }
        else
        {
          *((_QWORD *)v78 + 506) = v213;
          v78[4056] = v74[4056];
          *((_QWORD *)v78 + 508) = *((_QWORD *)v74 + 508);
          v78[4072] = v74[4072];
          swift_bridgeObjectRetain(v213);
        }
        v214 = *((_QWORD *)v74 + 510);
        if (v214 == 1)
        {
          *((_OWORD *)v78 + 255) = *((_OWORD *)v74 + 255);
          *(_OWORD *)(v78 + 4089) = *(_OWORD *)(v74 + 4089);
        }
        else
        {
          *((_QWORD *)v78 + 510) = v214;
          v78[4088] = v74[4088];
          v78[4104] = v74[4104];
          *((_QWORD *)v78 + 512) = *((_QWORD *)v74 + 512);
          swift_bridgeObjectRetain(v214);
        }
        *((_OWORD *)v78 + 257) = *((_OWORD *)v74 + 257);
        v78[4128] = v74[4128];
        *(_OWORD *)(v78 + 4136) = *(_OWORD *)(v74 + 4136);
        v78[4152] = v74[4152];
        *(_DWORD *)(v78 + 4153) = *(_DWORD *)(v74 + 4153);
        *(_WORD *)(v78 + 4157) = *(_WORD *)(v74 + 4157);
        v78[4159] = v74[4159];
        *((_QWORD *)v78 + 520) = v190;
        v215 = *((_QWORD *)v74 + 521);
        *((_QWORD *)v78 + 521) = v215;
        swift_bridgeObjectRetain(v190);
        swift_bridgeObjectRetain(v215);
      }
      v216 = v78 + 4176;
      v217 = (uint64_t *)(v74 + 4176);
      v218 = *((_QWORD *)v74 + 624);
      if (v218 == 1)
      {
        memcpy(v216, v217, 0x340uLL);
      }
      else
      {
        v219 = *v217;
        if (*v217 == 1)
        {
          *v216 = *(_OWORD *)v217;
          *(_OWORD *)(v78 + 4185) = *(_OWORD *)(v74 + 4185);
        }
        else
        {
          *((_QWORD *)v78 + 522) = v219;
          v78[4184] = v74[4184];
          *((_QWORD *)v78 + 524) = *((_QWORD *)v74 + 524);
          v78[4200] = v74[4200];
          swift_bridgeObjectRetain(v219);
        }
        v220 = *((_QWORD *)v74 + 526);
        if (v220 == 1)
        {
          *((_OWORD *)v78 + 263) = *((_OWORD *)v74 + 263);
          *(_OWORD *)(v78 + 4217) = *(_OWORD *)(v74 + 4217);
        }
        else
        {
          *((_QWORD *)v78 + 526) = v220;
          v78[4216] = v74[4216];
          *((_QWORD *)v78 + 528) = *((_QWORD *)v74 + 528);
          v78[4232] = v74[4232];
          swift_bridgeObjectRetain(v220);
        }
        v221 = *((_QWORD *)v74 + 530);
        if (v221 == 1)
        {
          *((_OWORD *)v78 + 265) = *((_OWORD *)v74 + 265);
          *(_OWORD *)(v78 + 4249) = *(_OWORD *)(v74 + 4249);
        }
        else
        {
          *((_QWORD *)v78 + 530) = v221;
          v78[4248] = v74[4248];
          *((_QWORD *)v78 + 532) = *((_QWORD *)v74 + 532);
          v78[4264] = v74[4264];
          swift_bridgeObjectRetain(v221);
        }
        v222 = *((_QWORD *)v74 + 534);
        if (v222 == 1)
        {
          *((_OWORD *)v78 + 267) = *((_OWORD *)v74 + 267);
          *(_OWORD *)(v78 + 4281) = *(_OWORD *)(v74 + 4281);
        }
        else
        {
          *((_QWORD *)v78 + 534) = v222;
          v78[4280] = v74[4280];
          *((_QWORD *)v78 + 536) = *((_QWORD *)v74 + 536);
          v78[4296] = v74[4296];
          swift_bridgeObjectRetain(v222);
        }
        v223 = *((_QWORD *)v74 + 538);
        if (v223 == 1)
        {
          *((_OWORD *)v78 + 269) = *((_OWORD *)v74 + 269);
          *(_OWORD *)(v78 + 4313) = *(_OWORD *)(v74 + 4313);
        }
        else
        {
          *((_QWORD *)v78 + 538) = v223;
          v78[4312] = v74[4312];
          *((_QWORD *)v78 + 540) = *((_QWORD *)v74 + 540);
          v78[4328] = v74[4328];
          swift_bridgeObjectRetain(v223);
        }
        v224 = *((_QWORD *)v74 + 542);
        if (v224 == 1)
        {
          *((_OWORD *)v78 + 271) = *((_OWORD *)v74 + 271);
          *(_OWORD *)(v78 + 4345) = *(_OWORD *)(v74 + 4345);
        }
        else
        {
          *((_QWORD *)v78 + 542) = v224;
          v78[4344] = v74[4344];
          *((_QWORD *)v78 + 544) = *((_QWORD *)v74 + 544);
          v78[4360] = v74[4360];
          swift_bridgeObjectRetain(v224);
        }
        v225 = *((_QWORD *)v74 + 546);
        if (v225 == 1)
        {
          *((_OWORD *)v78 + 273) = *((_OWORD *)v74 + 273);
          *(_OWORD *)(v78 + 4377) = *(_OWORD *)(v74 + 4377);
        }
        else
        {
          *((_QWORD *)v78 + 546) = v225;
          v78[4376] = v74[4376];
          *((_QWORD *)v78 + 548) = *((_QWORD *)v74 + 548);
          v78[4392] = v74[4392];
          swift_bridgeObjectRetain(v225);
        }
        v226 = *((_QWORD *)v74 + 550);
        if (v226 == 1)
        {
          *((_OWORD *)v78 + 275) = *((_OWORD *)v74 + 275);
          *(_OWORD *)(v78 + 4409) = *(_OWORD *)(v74 + 4409);
        }
        else
        {
          *((_QWORD *)v78 + 550) = v226;
          v78[4408] = v74[4408];
          *((_QWORD *)v78 + 552) = *((_QWORD *)v74 + 552);
          v78[4424] = v74[4424];
          swift_bridgeObjectRetain(v226);
        }
        v227 = *((_QWORD *)v74 + 554);
        if (v227 == 1)
        {
          *((_OWORD *)v78 + 277) = *((_OWORD *)v74 + 277);
          *(_OWORD *)(v78 + 4441) = *(_OWORD *)(v74 + 4441);
        }
        else
        {
          *((_QWORD *)v78 + 554) = v227;
          v78[4440] = v74[4440];
          *((_QWORD *)v78 + 556) = *((_QWORD *)v74 + 556);
          v78[4456] = v74[4456];
          swift_bridgeObjectRetain(v227);
        }
        v228 = *((_QWORD *)v74 + 558);
        if (v228 == 1)
        {
          *((_OWORD *)v78 + 279) = *((_OWORD *)v74 + 279);
          *(_OWORD *)(v78 + 4473) = *(_OWORD *)(v74 + 4473);
        }
        else
        {
          *((_QWORD *)v78 + 558) = v228;
          v78[4472] = v74[4472];
          *((_QWORD *)v78 + 560) = *((_QWORD *)v74 + 560);
          v78[4488] = v74[4488];
          swift_bridgeObjectRetain(v228);
        }
        v229 = *((_QWORD *)v74 + 562);
        if (v229 == 1)
        {
          *((_OWORD *)v78 + 281) = *((_OWORD *)v74 + 281);
          *(_OWORD *)(v78 + 4505) = *(_OWORD *)(v74 + 4505);
        }
        else
        {
          *((_QWORD *)v78 + 562) = v229;
          v78[4504] = v74[4504];
          *((_QWORD *)v78 + 564) = *((_QWORD *)v74 + 564);
          v78[4520] = v74[4520];
          swift_bridgeObjectRetain(v229);
        }
        v230 = *((_QWORD *)v74 + 566);
        if (v230 == 1)
        {
          *((_OWORD *)v78 + 283) = *((_OWORD *)v74 + 283);
          *(_OWORD *)(v78 + 4537) = *(_OWORD *)(v74 + 4537);
        }
        else
        {
          *((_QWORD *)v78 + 566) = v230;
          v78[4536] = v74[4536];
          *((_QWORD *)v78 + 568) = *((_QWORD *)v74 + 568);
          v78[4552] = v74[4552];
          swift_bridgeObjectRetain(v230);
        }
        v231 = *((_QWORD *)v74 + 570);
        if (v231 == 1)
        {
          *((_OWORD *)v78 + 285) = *((_OWORD *)v74 + 285);
          *(_OWORD *)(v78 + 4569) = *(_OWORD *)(v74 + 4569);
        }
        else
        {
          *((_QWORD *)v78 + 570) = v231;
          v78[4568] = v74[4568];
          *((_QWORD *)v78 + 572) = *((_QWORD *)v74 + 572);
          v78[4584] = v74[4584];
          swift_bridgeObjectRetain(v231);
        }
        v232 = *((_QWORD *)v74 + 574);
        if (v232 == 1)
        {
          *((_OWORD *)v78 + 287) = *((_OWORD *)v74 + 287);
          *(_OWORD *)(v78 + 4601) = *(_OWORD *)(v74 + 4601);
        }
        else
        {
          *((_QWORD *)v78 + 574) = v232;
          v78[4600] = v74[4600];
          *((_QWORD *)v78 + 576) = *((_QWORD *)v74 + 576);
          v78[4616] = v74[4616];
          swift_bridgeObjectRetain(v232);
        }
        v233 = *((_QWORD *)v74 + 578);
        if (v233 == 1)
        {
          *((_OWORD *)v78 + 289) = *((_OWORD *)v74 + 289);
          *(_OWORD *)(v78 + 4633) = *(_OWORD *)(v74 + 4633);
        }
        else
        {
          *((_QWORD *)v78 + 578) = v233;
          v78[4632] = v74[4632];
          *((_QWORD *)v78 + 580) = *((_QWORD *)v74 + 580);
          v78[4648] = v74[4648];
          swift_bridgeObjectRetain(v233);
        }
        v234 = *((_QWORD *)v74 + 582);
        if (v234 == 1)
        {
          *((_OWORD *)v78 + 291) = *((_OWORD *)v74 + 291);
          *(_OWORD *)(v78 + 4665) = *(_OWORD *)(v74 + 4665);
        }
        else
        {
          *((_QWORD *)v78 + 582) = v234;
          v78[4664] = v74[4664];
          *((_QWORD *)v78 + 584) = *((_QWORD *)v74 + 584);
          v78[4680] = v74[4680];
          swift_bridgeObjectRetain(v234);
        }
        v235 = *((_QWORD *)v74 + 586);
        if (v235 == 1)
        {
          *((_OWORD *)v78 + 293) = *((_OWORD *)v74 + 293);
          *(_OWORD *)(v78 + 4697) = *(_OWORD *)(v74 + 4697);
        }
        else
        {
          *((_QWORD *)v78 + 586) = v235;
          v78[4696] = v74[4696];
          *((_QWORD *)v78 + 588) = *((_QWORD *)v74 + 588);
          v78[4712] = v74[4712];
          swift_bridgeObjectRetain(v235);
        }
        v236 = *((_QWORD *)v74 + 590);
        if (v236 == 1)
        {
          *((_OWORD *)v78 + 295) = *((_OWORD *)v74 + 295);
          *(_OWORD *)(v78 + 4729) = *(_OWORD *)(v74 + 4729);
        }
        else
        {
          *((_QWORD *)v78 + 590) = v236;
          v78[4728] = v74[4728];
          *((_QWORD *)v78 + 592) = *((_QWORD *)v74 + 592);
          v78[4744] = v74[4744];
          swift_bridgeObjectRetain(v236);
        }
        v237 = *((_QWORD *)v74 + 594);
        if (v237 == 1)
        {
          *((_OWORD *)v78 + 297) = *((_OWORD *)v74 + 297);
          *(_OWORD *)(v78 + 4761) = *(_OWORD *)(v74 + 4761);
        }
        else
        {
          *((_QWORD *)v78 + 594) = v237;
          v78[4760] = v74[4760];
          *((_QWORD *)v78 + 596) = *((_QWORD *)v74 + 596);
          v78[4776] = v74[4776];
          swift_bridgeObjectRetain(v237);
        }
        v238 = *((_QWORD *)v74 + 598);
        if (v238 == 1)
        {
          *((_OWORD *)v78 + 299) = *((_OWORD *)v74 + 299);
          *(_OWORD *)(v78 + 4793) = *(_OWORD *)(v74 + 4793);
        }
        else
        {
          *((_QWORD *)v78 + 598) = v238;
          v78[4792] = v74[4792];
          *((_QWORD *)v78 + 600) = *((_QWORD *)v74 + 600);
          v78[4808] = v74[4808];
          swift_bridgeObjectRetain(v238);
        }
        v239 = *((_QWORD *)v74 + 602);
        if (v239 == 1)
        {
          *((_OWORD *)v78 + 301) = *((_OWORD *)v74 + 301);
          *(_OWORD *)(v78 + 4825) = *(_OWORD *)(v74 + 4825);
        }
        else
        {
          *((_QWORD *)v78 + 602) = v239;
          v78[4824] = v74[4824];
          *((_QWORD *)v78 + 604) = *((_QWORD *)v74 + 604);
          v78[4840] = v74[4840];
          swift_bridgeObjectRetain(v239);
        }
        v240 = *((_QWORD *)v74 + 606);
        if (v240 == 1)
        {
          *((_OWORD *)v78 + 303) = *((_OWORD *)v74 + 303);
          *(_OWORD *)(v78 + 4857) = *(_OWORD *)(v74 + 4857);
        }
        else
        {
          *((_QWORD *)v78 + 606) = v240;
          v78[4856] = v74[4856];
          *((_QWORD *)v78 + 608) = *((_QWORD *)v74 + 608);
          v78[4872] = v74[4872];
          swift_bridgeObjectRetain(v240);
        }
        v241 = *((_QWORD *)v74 + 610);
        if (v241 == 1)
        {
          *((_OWORD *)v78 + 305) = *((_OWORD *)v74 + 305);
          *(_OWORD *)(v78 + 4889) = *(_OWORD *)(v74 + 4889);
        }
        else
        {
          *((_QWORD *)v78 + 610) = v241;
          v78[4888] = v74[4888];
          *((_QWORD *)v78 + 612) = *((_QWORD *)v74 + 612);
          v78[4904] = v74[4904];
          swift_bridgeObjectRetain(v241);
        }
        v242 = *((_QWORD *)v74 + 614);
        if (v242 == 1)
        {
          *((_OWORD *)v78 + 307) = *((_OWORD *)v74 + 307);
          *(_OWORD *)(v78 + 4921) = *(_OWORD *)(v74 + 4921);
        }
        else
        {
          *((_QWORD *)v78 + 614) = v242;
          v78[4920] = v74[4920];
          *((_QWORD *)v78 + 616) = *((_QWORD *)v74 + 616);
          v78[4936] = v74[4936];
          swift_bridgeObjectRetain(v242);
        }
        *((_OWORD *)v78 + 309) = *((_OWORD *)v74 + 309);
        v78[4960] = v74[4960];
        *(_OWORD *)(v78 + 4968) = *(_OWORD *)(v74 + 4968);
        v78[4984] = v74[4984];
        *(_DWORD *)(v78 + 4985) = *(_DWORD *)(v74 + 4985);
        *(_WORD *)(v78 + 4989) = *(_WORD *)(v74 + 4989);
        v78[4991] = v74[4991];
        *((_QWORD *)v78 + 624) = v218;
        v243 = *((_QWORD *)v74 + 625);
        *((_QWORD *)v78 + 625) = v243;
        swift_bridgeObjectRetain(v218);
        swift_bridgeObjectRetain(v243);
      }
      v244 = v78 + 5008;
      v245 = (uint64_t *)(v74 + 5008);
      v246 = *((_QWORD *)v74 + 728);
      if (v246 == 1)
      {
        memcpy(v244, v245, 0x340uLL);
      }
      else
      {
        v247 = *v245;
        if (*v245 == 1)
        {
          *v244 = *(_OWORD *)v245;
          *(_OWORD *)(v78 + 5017) = *(_OWORD *)(v74 + 5017);
        }
        else
        {
          *((_QWORD *)v78 + 626) = v247;
          v78[5016] = v74[5016];
          *((_QWORD *)v78 + 628) = *((_QWORD *)v74 + 628);
          v78[5032] = v74[5032];
          swift_bridgeObjectRetain(v247);
        }
        v248 = *((_QWORD *)v74 + 630);
        if (v248 == 1)
        {
          *((_OWORD *)v78 + 315) = *((_OWORD *)v74 + 315);
          *(_OWORD *)(v78 + 5049) = *(_OWORD *)(v74 + 5049);
        }
        else
        {
          *((_QWORD *)v78 + 630) = v248;
          v78[5048] = v74[5048];
          *((_QWORD *)v78 + 632) = *((_QWORD *)v74 + 632);
          v78[5064] = v74[5064];
          swift_bridgeObjectRetain(v248);
        }
        v249 = *((_QWORD *)v74 + 634);
        if (v249 == 1)
        {
          *((_OWORD *)v78 + 317) = *((_OWORD *)v74 + 317);
          *(_OWORD *)(v78 + 5081) = *(_OWORD *)(v74 + 5081);
        }
        else
        {
          *((_QWORD *)v78 + 634) = v249;
          v78[5080] = v74[5080];
          *((_QWORD *)v78 + 636) = *((_QWORD *)v74 + 636);
          v78[5096] = v74[5096];
          swift_bridgeObjectRetain(v249);
        }
        v250 = *((_QWORD *)v74 + 638);
        if (v250 == 1)
        {
          *((_OWORD *)v78 + 319) = *((_OWORD *)v74 + 319);
          *(_OWORD *)(v78 + 5113) = *(_OWORD *)(v74 + 5113);
        }
        else
        {
          *((_QWORD *)v78 + 638) = v250;
          v78[5112] = v74[5112];
          *((_QWORD *)v78 + 640) = *((_QWORD *)v74 + 640);
          v78[5128] = v74[5128];
          swift_bridgeObjectRetain(v250);
        }
        v251 = *((_QWORD *)v74 + 642);
        if (v251 == 1)
        {
          *((_OWORD *)v78 + 321) = *((_OWORD *)v74 + 321);
          *(_OWORD *)(v78 + 5145) = *(_OWORD *)(v74 + 5145);
        }
        else
        {
          *((_QWORD *)v78 + 642) = v251;
          v78[5144] = v74[5144];
          *((_QWORD *)v78 + 644) = *((_QWORD *)v74 + 644);
          v78[5160] = v74[5160];
          swift_bridgeObjectRetain(v251);
        }
        v252 = *((_QWORD *)v74 + 646);
        if (v252 == 1)
        {
          *((_OWORD *)v78 + 323) = *((_OWORD *)v74 + 323);
          *(_OWORD *)(v78 + 5177) = *(_OWORD *)(v74 + 5177);
        }
        else
        {
          *((_QWORD *)v78 + 646) = v252;
          v78[5176] = v74[5176];
          *((_QWORD *)v78 + 648) = *((_QWORD *)v74 + 648);
          v78[5192] = v74[5192];
          swift_bridgeObjectRetain(v252);
        }
        v253 = *((_QWORD *)v74 + 650);
        if (v253 == 1)
        {
          *((_OWORD *)v78 + 325) = *((_OWORD *)v74 + 325);
          *(_OWORD *)(v78 + 5209) = *(_OWORD *)(v74 + 5209);
        }
        else
        {
          *((_QWORD *)v78 + 650) = v253;
          v78[5208] = v74[5208];
          *((_QWORD *)v78 + 652) = *((_QWORD *)v74 + 652);
          v78[5224] = v74[5224];
          swift_bridgeObjectRetain(v253);
        }
        v254 = *((_QWORD *)v74 + 654);
        if (v254 == 1)
        {
          *((_OWORD *)v78 + 327) = *((_OWORD *)v74 + 327);
          *(_OWORD *)(v78 + 5241) = *(_OWORD *)(v74 + 5241);
        }
        else
        {
          *((_QWORD *)v78 + 654) = v254;
          v78[5240] = v74[5240];
          *((_QWORD *)v78 + 656) = *((_QWORD *)v74 + 656);
          v78[5256] = v74[5256];
          swift_bridgeObjectRetain(v254);
        }
        v255 = *((_QWORD *)v74 + 658);
        if (v255 == 1)
        {
          *((_OWORD *)v78 + 329) = *((_OWORD *)v74 + 329);
          *(_OWORD *)(v78 + 5273) = *(_OWORD *)(v74 + 5273);
        }
        else
        {
          *((_QWORD *)v78 + 658) = v255;
          v78[5272] = v74[5272];
          *((_QWORD *)v78 + 660) = *((_QWORD *)v74 + 660);
          v78[5288] = v74[5288];
          swift_bridgeObjectRetain(v255);
        }
        v256 = *((_QWORD *)v74 + 662);
        if (v256 == 1)
        {
          *((_OWORD *)v78 + 331) = *((_OWORD *)v74 + 331);
          *(_OWORD *)(v78 + 5305) = *(_OWORD *)(v74 + 5305);
        }
        else
        {
          *((_QWORD *)v78 + 662) = v256;
          v78[5304] = v74[5304];
          *((_QWORD *)v78 + 664) = *((_QWORD *)v74 + 664);
          v78[5320] = v74[5320];
          swift_bridgeObjectRetain(v256);
        }
        v257 = *((_QWORD *)v74 + 666);
        if (v257 == 1)
        {
          *((_OWORD *)v78 + 333) = *((_OWORD *)v74 + 333);
          *(_OWORD *)(v78 + 5337) = *(_OWORD *)(v74 + 5337);
        }
        else
        {
          *((_QWORD *)v78 + 666) = v257;
          v78[5336] = v74[5336];
          *((_QWORD *)v78 + 668) = *((_QWORD *)v74 + 668);
          v78[5352] = v74[5352];
          swift_bridgeObjectRetain(v257);
        }
        v258 = *((_QWORD *)v74 + 670);
        if (v258 == 1)
        {
          *((_OWORD *)v78 + 335) = *((_OWORD *)v74 + 335);
          *(_OWORD *)(v78 + 5369) = *(_OWORD *)(v74 + 5369);
        }
        else
        {
          *((_QWORD *)v78 + 670) = v258;
          v78[5368] = v74[5368];
          *((_QWORD *)v78 + 672) = *((_QWORD *)v74 + 672);
          v78[5384] = v74[5384];
          swift_bridgeObjectRetain(v258);
        }
        v259 = *((_QWORD *)v74 + 674);
        if (v259 == 1)
        {
          *((_OWORD *)v78 + 337) = *((_OWORD *)v74 + 337);
          *(_OWORD *)(v78 + 5401) = *(_OWORD *)(v74 + 5401);
        }
        else
        {
          *((_QWORD *)v78 + 674) = v259;
          v78[5400] = v74[5400];
          *((_QWORD *)v78 + 676) = *((_QWORD *)v74 + 676);
          v78[5416] = v74[5416];
          swift_bridgeObjectRetain(v259);
        }
        v260 = *((_QWORD *)v74 + 678);
        if (v260 == 1)
        {
          *((_OWORD *)v78 + 339) = *((_OWORD *)v74 + 339);
          *(_OWORD *)(v78 + 5433) = *(_OWORD *)(v74 + 5433);
        }
        else
        {
          *((_QWORD *)v78 + 678) = v260;
          v78[5432] = v74[5432];
          *((_QWORD *)v78 + 680) = *((_QWORD *)v74 + 680);
          v78[5448] = v74[5448];
          swift_bridgeObjectRetain(v260);
        }
        v261 = *((_QWORD *)v74 + 682);
        if (v261 == 1)
        {
          *((_OWORD *)v78 + 341) = *((_OWORD *)v74 + 341);
          *(_OWORD *)(v78 + 5465) = *(_OWORD *)(v74 + 5465);
        }
        else
        {
          *((_QWORD *)v78 + 682) = v261;
          v78[5464] = v74[5464];
          *((_QWORD *)v78 + 684) = *((_QWORD *)v74 + 684);
          v78[5480] = v74[5480];
          swift_bridgeObjectRetain(v261);
        }
        v262 = *((_QWORD *)v74 + 686);
        if (v262 == 1)
        {
          *((_OWORD *)v78 + 343) = *((_OWORD *)v74 + 343);
          *(_OWORD *)(v78 + 5497) = *(_OWORD *)(v74 + 5497);
        }
        else
        {
          *((_QWORD *)v78 + 686) = v262;
          v78[5496] = v74[5496];
          *((_QWORD *)v78 + 688) = *((_QWORD *)v74 + 688);
          v78[5512] = v74[5512];
          swift_bridgeObjectRetain(v262);
        }
        v263 = *((_QWORD *)v74 + 690);
        if (v263 == 1)
        {
          *((_OWORD *)v78 + 345) = *((_OWORD *)v74 + 345);
          *(_OWORD *)(v78 + 5529) = *(_OWORD *)(v74 + 5529);
        }
        else
        {
          *((_QWORD *)v78 + 690) = v263;
          v78[5528] = v74[5528];
          *((_QWORD *)v78 + 692) = *((_QWORD *)v74 + 692);
          v78[5544] = v74[5544];
          swift_bridgeObjectRetain(v263);
        }
        v264 = *((_QWORD *)v74 + 694);
        if (v264 == 1)
        {
          *((_OWORD *)v78 + 347) = *((_OWORD *)v74 + 347);
          *(_OWORD *)(v78 + 5561) = *(_OWORD *)(v74 + 5561);
        }
        else
        {
          *((_QWORD *)v78 + 694) = v264;
          v78[5560] = v74[5560];
          *((_QWORD *)v78 + 696) = *((_QWORD *)v74 + 696);
          v78[5576] = v74[5576];
          swift_bridgeObjectRetain(v264);
        }
        v265 = *((_QWORD *)v74 + 698);
        if (v265 == 1)
        {
          *((_OWORD *)v78 + 349) = *((_OWORD *)v74 + 349);
          *(_OWORD *)(v78 + 5593) = *(_OWORD *)(v74 + 5593);
        }
        else
        {
          *((_QWORD *)v78 + 698) = v265;
          v78[5592] = v74[5592];
          *((_QWORD *)v78 + 700) = *((_QWORD *)v74 + 700);
          v78[5608] = v74[5608];
          swift_bridgeObjectRetain(v265);
        }
        v266 = *((_QWORD *)v74 + 702);
        if (v266 == 1)
        {
          *((_OWORD *)v78 + 351) = *((_OWORD *)v74 + 351);
          *(_OWORD *)(v78 + 5625) = *(_OWORD *)(v74 + 5625);
        }
        else
        {
          *((_QWORD *)v78 + 702) = v266;
          v78[5624] = v74[5624];
          *((_QWORD *)v78 + 704) = *((_QWORD *)v74 + 704);
          v78[5640] = v74[5640];
          swift_bridgeObjectRetain(v266);
        }
        v267 = *((_QWORD *)v74 + 706);
        if (v267 == 1)
        {
          *((_OWORD *)v78 + 353) = *((_OWORD *)v74 + 353);
          *(_OWORD *)(v78 + 5657) = *(_OWORD *)(v74 + 5657);
        }
        else
        {
          *((_QWORD *)v78 + 706) = v267;
          v78[5656] = v74[5656];
          *((_QWORD *)v78 + 708) = *((_QWORD *)v74 + 708);
          v78[5672] = v74[5672];
          swift_bridgeObjectRetain(v267);
        }
        v268 = *((_QWORD *)v74 + 710);
        if (v268 == 1)
        {
          *((_OWORD *)v78 + 355) = *((_OWORD *)v74 + 355);
          *(_OWORD *)(v78 + 5689) = *(_OWORD *)(v74 + 5689);
        }
        else
        {
          *((_QWORD *)v78 + 710) = v268;
          v78[5688] = v74[5688];
          *((_QWORD *)v78 + 712) = *((_QWORD *)v74 + 712);
          v78[5704] = v74[5704];
          swift_bridgeObjectRetain(v268);
        }
        v269 = *((_QWORD *)v74 + 714);
        if (v269 == 1)
        {
          *((_OWORD *)v78 + 357) = *((_OWORD *)v74 + 357);
          *(_OWORD *)(v78 + 5721) = *(_OWORD *)(v74 + 5721);
        }
        else
        {
          *((_QWORD *)v78 + 714) = v269;
          v78[5720] = v74[5720];
          *((_QWORD *)v78 + 716) = *((_QWORD *)v74 + 716);
          v78[5736] = v74[5736];
          swift_bridgeObjectRetain(v269);
        }
        v270 = *((_QWORD *)v74 + 718);
        if (v270 == 1)
        {
          *((_OWORD *)v78 + 359) = *((_OWORD *)v74 + 359);
          *(_OWORD *)(v78 + 5753) = *(_OWORD *)(v74 + 5753);
        }
        else
        {
          *((_QWORD *)v78 + 718) = v270;
          v78[5752] = v74[5752];
          *((_QWORD *)v78 + 720) = *((_QWORD *)v74 + 720);
          v78[5768] = v74[5768];
          swift_bridgeObjectRetain(v270);
        }
        *((_OWORD *)v78 + 361) = *((_OWORD *)v74 + 361);
        v78[5792] = v74[5792];
        *(_OWORD *)(v78 + 5800) = *(_OWORD *)(v74 + 5800);
        v78[5816] = v74[5816];
        *(_DWORD *)(v78 + 5817) = *(_DWORD *)(v74 + 5817);
        *(_WORD *)(v78 + 5821) = *(_WORD *)(v74 + 5821);
        v78[5823] = v74[5823];
        *((_QWORD *)v78 + 728) = v246;
        v271 = *((_QWORD *)v74 + 729);
        *((_QWORD *)v78 + 729) = v271;
        swift_bridgeObjectRetain(v246);
        swift_bridgeObjectRetain(v271);
      }
      v272 = *((_QWORD *)v74 + 730);
      *((_QWORD *)v78 + 730) = v272;
      *((_DWORD *)v78 + 1462) = *((_DWORD *)v74 + 1462);
      v78[5852] = v74[5852];
      *((_QWORD *)v78 + 732) = *((_QWORD *)v74 + 732);
      v78[5864] = v74[5864];
      *((_QWORD *)v78 + 734) = *((_QWORD *)v74 + 734);
      v78[5880] = v74[5880];
      *((_QWORD *)v78 + 736) = *((_QWORD *)v74 + 736);
      v78[5896] = v74[5896];
      v78[5912] = v74[5912];
      *((_QWORD *)v78 + 738) = *((_QWORD *)v74 + 738);
      swift_bridgeObjectRetain(v272);
    }
    v273 = v293[39];
    v274 = *(_QWORD *)&v294[v273];
    *(_QWORD *)&v295[v273] = v274;
    v275 = v293[40];
    v276 = &v295[v275];
    v277 = &v294[v275];
    v278 = *((_QWORD *)v277 + 1);
    *(_QWORD *)v276 = *(_QWORD *)v277;
    *((_QWORD *)v276 + 1) = v278;
    v279 = v293[41];
    v280 = &v295[v279];
    v281 = &v294[v279];
    v282 = *((_QWORD *)v281 + 1);
    *(_QWORD *)v280 = *(_QWORD *)v281;
    *((_QWORD *)v280 + 1) = v282;
    swift_bridgeObjectRetain(v274);
    swift_bridgeObjectRetain(v278);
    swift_bridgeObjectRetain(v282);
  }
  return v14;
}

uint64_t sub_1001C0DEC(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  int *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;

  if (a1[3])
  {
    swift_bridgeObjectRelease(a1[1]);
    swift_bridgeObjectRelease(a1[3]);
    swift_bridgeObjectRelease(a1[5]);
    swift_bridgeObjectRelease(a1[7]);
    swift_bridgeObjectRelease(a1[9]);
    swift_bridgeObjectRelease(a1[11]);
  }
  v4 = (_QWORD *)((char *)a1 + *(int *)(a2 + 20));
  swift_bridgeObjectRelease(v4[1]);
  swift_bridgeObjectRelease(v4[3]);
  swift_bridgeObjectRelease(v4[5]);
  swift_bridgeObjectRelease(v4[7]);
  swift_bridgeObjectRelease(v4[9]);
  swift_bridgeObjectRelease(v4[11]);
  swift_bridgeObjectRelease(v4[14]);
  swift_bridgeObjectRelease(v4[16]);
  swift_bridgeObjectRelease(v4[17]);
  swift_bridgeObjectRelease(v4[19]);
  swift_bridgeObjectRelease(v4[20]);
  swift_bridgeObjectRelease(v4[22]);
  v5 = (int *)type metadata accessor for Workflow(0);
  v6 = (char *)v4 + v5[18];
  v7 = type metadata accessor for HardwareAttestationType(0);
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v4 + v5[19]));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v4 + v5[20]));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v4 + v5[21] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v4 + v5[23]));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v4 + v5[24]));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v4 + v5[25]));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v4 + v5[28]));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v4 + v5[29]));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v4 + v5[30]));
  v9 = (_QWORD *)((char *)v4 + v5[38]);
  v10 = v9[1];
  if (v10 != 1)
  {
    swift_bridgeObjectRelease(v10);
    if (v9[104] != 1)
    {
      v11 = v9[2];
      if (v11 != 1)
        swift_bridgeObjectRelease(v11);
      v12 = v9[6];
      if (v12 != 1)
        swift_bridgeObjectRelease(v12);
      v13 = v9[10];
      if (v13 != 1)
        swift_bridgeObjectRelease(v13);
      v14 = v9[14];
      if (v14 != 1)
        swift_bridgeObjectRelease(v14);
      v15 = v9[18];
      if (v15 != 1)
        swift_bridgeObjectRelease(v15);
      v16 = v9[22];
      if (v16 != 1)
        swift_bridgeObjectRelease(v16);
      v17 = v9[26];
      if (v17 != 1)
        swift_bridgeObjectRelease(v17);
      v18 = v9[30];
      if (v18 != 1)
        swift_bridgeObjectRelease(v18);
      v19 = v9[34];
      if (v19 != 1)
        swift_bridgeObjectRelease(v19);
      v20 = v9[38];
      if (v20 != 1)
        swift_bridgeObjectRelease(v20);
      v21 = v9[42];
      if (v21 != 1)
        swift_bridgeObjectRelease(v21);
      v22 = v9[46];
      if (v22 != 1)
        swift_bridgeObjectRelease(v22);
      v23 = v9[50];
      if (v23 != 1)
        swift_bridgeObjectRelease(v23);
      v24 = v9[54];
      if (v24 != 1)
        swift_bridgeObjectRelease(v24);
      v25 = v9[58];
      if (v25 != 1)
        swift_bridgeObjectRelease(v25);
      v26 = v9[62];
      if (v26 != 1)
        swift_bridgeObjectRelease(v26);
      v27 = v9[66];
      if (v27 != 1)
        swift_bridgeObjectRelease(v27);
      v28 = v9[70];
      if (v28 != 1)
        swift_bridgeObjectRelease(v28);
      v29 = v9[74];
      if (v29 != 1)
        swift_bridgeObjectRelease(v29);
      v30 = v9[78];
      if (v30 != 1)
        swift_bridgeObjectRelease(v30);
      v31 = v9[82];
      if (v31 != 1)
        swift_bridgeObjectRelease(v31);
      v32 = v9[86];
      if (v32 != 1)
        swift_bridgeObjectRelease(v32);
      v33 = v9[90];
      if (v33 != 1)
        swift_bridgeObjectRelease(v33);
      v34 = v9[94];
      if (v34 != 1)
        swift_bridgeObjectRelease(v34);
      swift_bridgeObjectRelease(v9[104]);
      swift_bridgeObjectRelease(v9[105]);
    }
    if (v9[208] != 1)
    {
      v35 = v9[106];
      if (v35 != 1)
        swift_bridgeObjectRelease(v35);
      v36 = v9[110];
      if (v36 != 1)
        swift_bridgeObjectRelease(v36);
      v37 = v9[114];
      if (v37 != 1)
        swift_bridgeObjectRelease(v37);
      v38 = v9[118];
      if (v38 != 1)
        swift_bridgeObjectRelease(v38);
      v39 = v9[122];
      if (v39 != 1)
        swift_bridgeObjectRelease(v39);
      v40 = v9[126];
      if (v40 != 1)
        swift_bridgeObjectRelease(v40);
      v41 = v9[130];
      if (v41 != 1)
        swift_bridgeObjectRelease(v41);
      v42 = v9[134];
      if (v42 != 1)
        swift_bridgeObjectRelease(v42);
      v43 = v9[138];
      if (v43 != 1)
        swift_bridgeObjectRelease(v43);
      v44 = v9[142];
      if (v44 != 1)
        swift_bridgeObjectRelease(v44);
      v45 = v9[146];
      if (v45 != 1)
        swift_bridgeObjectRelease(v45);
      v46 = v9[150];
      if (v46 != 1)
        swift_bridgeObjectRelease(v46);
      v47 = v9[154];
      if (v47 != 1)
        swift_bridgeObjectRelease(v47);
      v48 = v9[158];
      if (v48 != 1)
        swift_bridgeObjectRelease(v48);
      v49 = v9[162];
      if (v49 != 1)
        swift_bridgeObjectRelease(v49);
      v50 = v9[166];
      if (v50 != 1)
        swift_bridgeObjectRelease(v50);
      v51 = v9[170];
      if (v51 != 1)
        swift_bridgeObjectRelease(v51);
      v52 = v9[174];
      if (v52 != 1)
        swift_bridgeObjectRelease(v52);
      v53 = v9[178];
      if (v53 != 1)
        swift_bridgeObjectRelease(v53);
      v54 = v9[182];
      if (v54 != 1)
        swift_bridgeObjectRelease(v54);
      v55 = v9[186];
      if (v55 != 1)
        swift_bridgeObjectRelease(v55);
      v56 = v9[190];
      if (v56 != 1)
        swift_bridgeObjectRelease(v56);
      v57 = v9[194];
      if (v57 != 1)
        swift_bridgeObjectRelease(v57);
      v58 = v9[198];
      if (v58 != 1)
        swift_bridgeObjectRelease(v58);
      swift_bridgeObjectRelease(v9[208]);
      swift_bridgeObjectRelease(v9[209]);
    }
    if (v9[312] != 1)
    {
      v59 = v9[210];
      if (v59 != 1)
        swift_bridgeObjectRelease(v59);
      v60 = v9[214];
      if (v60 != 1)
        swift_bridgeObjectRelease(v60);
      v61 = v9[218];
      if (v61 != 1)
        swift_bridgeObjectRelease(v61);
      v62 = v9[222];
      if (v62 != 1)
        swift_bridgeObjectRelease(v62);
      v63 = v9[226];
      if (v63 != 1)
        swift_bridgeObjectRelease(v63);
      v64 = v9[230];
      if (v64 != 1)
        swift_bridgeObjectRelease(v64);
      v65 = v9[234];
      if (v65 != 1)
        swift_bridgeObjectRelease(v65);
      v66 = v9[238];
      if (v66 != 1)
        swift_bridgeObjectRelease(v66);
      v67 = v9[242];
      if (v67 != 1)
        swift_bridgeObjectRelease(v67);
      v68 = v9[246];
      if (v68 != 1)
        swift_bridgeObjectRelease(v68);
      v69 = v9[250];
      if (v69 != 1)
        swift_bridgeObjectRelease(v69);
      v70 = v9[254];
      if (v70 != 1)
        swift_bridgeObjectRelease(v70);
      v71 = v9[258];
      if (v71 != 1)
        swift_bridgeObjectRelease(v71);
      v72 = v9[262];
      if (v72 != 1)
        swift_bridgeObjectRelease(v72);
      v73 = v9[266];
      if (v73 != 1)
        swift_bridgeObjectRelease(v73);
      v74 = v9[270];
      if (v74 != 1)
        swift_bridgeObjectRelease(v74);
      v75 = v9[274];
      if (v75 != 1)
        swift_bridgeObjectRelease(v75);
      v76 = v9[278];
      if (v76 != 1)
        swift_bridgeObjectRelease(v76);
      v77 = v9[282];
      if (v77 != 1)
        swift_bridgeObjectRelease(v77);
      v78 = v9[286];
      if (v78 != 1)
        swift_bridgeObjectRelease(v78);
      v79 = v9[290];
      if (v79 != 1)
        swift_bridgeObjectRelease(v79);
      v80 = v9[294];
      if (v80 != 1)
        swift_bridgeObjectRelease(v80);
      v81 = v9[298];
      if (v81 != 1)
        swift_bridgeObjectRelease(v81);
      v82 = v9[302];
      if (v82 != 1)
        swift_bridgeObjectRelease(v82);
      swift_bridgeObjectRelease(v9[312]);
      swift_bridgeObjectRelease(v9[313]);
    }
    if (v9[416] != 1)
    {
      v83 = v9[314];
      if (v83 != 1)
        swift_bridgeObjectRelease(v83);
      v84 = v9[318];
      if (v84 != 1)
        swift_bridgeObjectRelease(v84);
      v85 = v9[322];
      if (v85 != 1)
        swift_bridgeObjectRelease(v85);
      v86 = v9[326];
      if (v86 != 1)
        swift_bridgeObjectRelease(v86);
      v87 = v9[330];
      if (v87 != 1)
        swift_bridgeObjectRelease(v87);
      v88 = v9[334];
      if (v88 != 1)
        swift_bridgeObjectRelease(v88);
      v89 = v9[338];
      if (v89 != 1)
        swift_bridgeObjectRelease(v89);
      v90 = v9[342];
      if (v90 != 1)
        swift_bridgeObjectRelease(v90);
      v91 = v9[346];
      if (v91 != 1)
        swift_bridgeObjectRelease(v91);
      v92 = v9[350];
      if (v92 != 1)
        swift_bridgeObjectRelease(v92);
      v93 = v9[354];
      if (v93 != 1)
        swift_bridgeObjectRelease(v93);
      v94 = v9[358];
      if (v94 != 1)
        swift_bridgeObjectRelease(v94);
      v95 = v9[362];
      if (v95 != 1)
        swift_bridgeObjectRelease(v95);
      v96 = v9[366];
      if (v96 != 1)
        swift_bridgeObjectRelease(v96);
      v97 = v9[370];
      if (v97 != 1)
        swift_bridgeObjectRelease(v97);
      v98 = v9[374];
      if (v98 != 1)
        swift_bridgeObjectRelease(v98);
      v99 = v9[378];
      if (v99 != 1)
        swift_bridgeObjectRelease(v99);
      v100 = v9[382];
      if (v100 != 1)
        swift_bridgeObjectRelease(v100);
      v101 = v9[386];
      if (v101 != 1)
        swift_bridgeObjectRelease(v101);
      v102 = v9[390];
      if (v102 != 1)
        swift_bridgeObjectRelease(v102);
      v103 = v9[394];
      if (v103 != 1)
        swift_bridgeObjectRelease(v103);
      v104 = v9[398];
      if (v104 != 1)
        swift_bridgeObjectRelease(v104);
      v105 = v9[402];
      if (v105 != 1)
        swift_bridgeObjectRelease(v105);
      v106 = v9[406];
      if (v106 != 1)
        swift_bridgeObjectRelease(v106);
      swift_bridgeObjectRelease(v9[416]);
      swift_bridgeObjectRelease(v9[417]);
    }
    if (v9[520] != 1)
    {
      v107 = v9[418];
      if (v107 != 1)
        swift_bridgeObjectRelease(v107);
      v108 = v9[422];
      if (v108 != 1)
        swift_bridgeObjectRelease(v108);
      v109 = v9[426];
      if (v109 != 1)
        swift_bridgeObjectRelease(v109);
      v110 = v9[430];
      if (v110 != 1)
        swift_bridgeObjectRelease(v110);
      v111 = v9[434];
      if (v111 != 1)
        swift_bridgeObjectRelease(v111);
      v112 = v9[438];
      if (v112 != 1)
        swift_bridgeObjectRelease(v112);
      v113 = v9[442];
      if (v113 != 1)
        swift_bridgeObjectRelease(v113);
      v114 = v9[446];
      if (v114 != 1)
        swift_bridgeObjectRelease(v114);
      v115 = v9[450];
      if (v115 != 1)
        swift_bridgeObjectRelease(v115);
      v116 = v9[454];
      if (v116 != 1)
        swift_bridgeObjectRelease(v116);
      v117 = v9[458];
      if (v117 != 1)
        swift_bridgeObjectRelease(v117);
      v118 = v9[462];
      if (v118 != 1)
        swift_bridgeObjectRelease(v118);
      v119 = v9[466];
      if (v119 != 1)
        swift_bridgeObjectRelease(v119);
      v120 = v9[470];
      if (v120 != 1)
        swift_bridgeObjectRelease(v120);
      v121 = v9[474];
      if (v121 != 1)
        swift_bridgeObjectRelease(v121);
      v122 = v9[478];
      if (v122 != 1)
        swift_bridgeObjectRelease(v122);
      v123 = v9[482];
      if (v123 != 1)
        swift_bridgeObjectRelease(v123);
      v124 = v9[486];
      if (v124 != 1)
        swift_bridgeObjectRelease(v124);
      v125 = v9[490];
      if (v125 != 1)
        swift_bridgeObjectRelease(v125);
      v126 = v9[494];
      if (v126 != 1)
        swift_bridgeObjectRelease(v126);
      v127 = v9[498];
      if (v127 != 1)
        swift_bridgeObjectRelease(v127);
      v128 = v9[502];
      if (v128 != 1)
        swift_bridgeObjectRelease(v128);
      v129 = v9[506];
      if (v129 != 1)
        swift_bridgeObjectRelease(v129);
      v130 = v9[510];
      if (v130 != 1)
        swift_bridgeObjectRelease(v130);
      swift_bridgeObjectRelease(v9[520]);
      swift_bridgeObjectRelease(v9[521]);
    }
    if (v9[624] != 1)
    {
      v131 = v9[522];
      if (v131 != 1)
        swift_bridgeObjectRelease(v131);
      v132 = v9[526];
      if (v132 != 1)
        swift_bridgeObjectRelease(v132);
      v133 = v9[530];
      if (v133 != 1)
        swift_bridgeObjectRelease(v133);
      v134 = v9[534];
      if (v134 != 1)
        swift_bridgeObjectRelease(v134);
      v135 = v9[538];
      if (v135 != 1)
        swift_bridgeObjectRelease(v135);
      v136 = v9[542];
      if (v136 != 1)
        swift_bridgeObjectRelease(v136);
      v137 = v9[546];
      if (v137 != 1)
        swift_bridgeObjectRelease(v137);
      v138 = v9[550];
      if (v138 != 1)
        swift_bridgeObjectRelease(v138);
      v139 = v9[554];
      if (v139 != 1)
        swift_bridgeObjectRelease(v139);
      v140 = v9[558];
      if (v140 != 1)
        swift_bridgeObjectRelease(v140);
      v141 = v9[562];
      if (v141 != 1)
        swift_bridgeObjectRelease(v141);
      v142 = v9[566];
      if (v142 != 1)
        swift_bridgeObjectRelease(v142);
      v143 = v9[570];
      if (v143 != 1)
        swift_bridgeObjectRelease(v143);
      v144 = v9[574];
      if (v144 != 1)
        swift_bridgeObjectRelease(v144);
      v145 = v9[578];
      if (v145 != 1)
        swift_bridgeObjectRelease(v145);
      v146 = v9[582];
      if (v146 != 1)
        swift_bridgeObjectRelease(v146);
      v147 = v9[586];
      if (v147 != 1)
        swift_bridgeObjectRelease(v147);
      v148 = v9[590];
      if (v148 != 1)
        swift_bridgeObjectRelease(v148);
      v149 = v9[594];
      if (v149 != 1)
        swift_bridgeObjectRelease(v149);
      v150 = v9[598];
      if (v150 != 1)
        swift_bridgeObjectRelease(v150);
      v151 = v9[602];
      if (v151 != 1)
        swift_bridgeObjectRelease(v151);
      v152 = v9[606];
      if (v152 != 1)
        swift_bridgeObjectRelease(v152);
      v153 = v9[610];
      if (v153 != 1)
        swift_bridgeObjectRelease(v153);
      v154 = v9[614];
      if (v154 != 1)
        swift_bridgeObjectRelease(v154);
      swift_bridgeObjectRelease(v9[624]);
      swift_bridgeObjectRelease(v9[625]);
    }
    if (v9[728] != 1)
    {
      v155 = v9[626];
      if (v155 != 1)
        swift_bridgeObjectRelease(v155);
      v156 = v9[630];
      if (v156 != 1)
        swift_bridgeObjectRelease(v156);
      v157 = v9[634];
      if (v157 != 1)
        swift_bridgeObjectRelease(v157);
      v158 = v9[638];
      if (v158 != 1)
        swift_bridgeObjectRelease(v158);
      v159 = v9[642];
      if (v159 != 1)
        swift_bridgeObjectRelease(v159);
      v160 = v9[646];
      if (v160 != 1)
        swift_bridgeObjectRelease(v160);
      v161 = v9[650];
      if (v161 != 1)
        swift_bridgeObjectRelease(v161);
      v162 = v9[654];
      if (v162 != 1)
        swift_bridgeObjectRelease(v162);
      v163 = v9[658];
      if (v163 != 1)
        swift_bridgeObjectRelease(v163);
      v164 = v9[662];
      if (v164 != 1)
        swift_bridgeObjectRelease(v164);
      v165 = v9[666];
      if (v165 != 1)
        swift_bridgeObjectRelease(v165);
      v166 = v9[670];
      if (v166 != 1)
        swift_bridgeObjectRelease(v166);
      v167 = v9[674];
      if (v167 != 1)
        swift_bridgeObjectRelease(v167);
      v168 = v9[678];
      if (v168 != 1)
        swift_bridgeObjectRelease(v168);
      v169 = v9[682];
      if (v169 != 1)
        swift_bridgeObjectRelease(v169);
      v170 = v9[686];
      if (v170 != 1)
        swift_bridgeObjectRelease(v170);
      v171 = v9[690];
      if (v171 != 1)
        swift_bridgeObjectRelease(v171);
      v172 = v9[694];
      if (v172 != 1)
        swift_bridgeObjectRelease(v172);
      v173 = v9[698];
      if (v173 != 1)
        swift_bridgeObjectRelease(v173);
      v174 = v9[702];
      if (v174 != 1)
        swift_bridgeObjectRelease(v174);
      v175 = v9[706];
      if (v175 != 1)
        swift_bridgeObjectRelease(v175);
      v176 = v9[710];
      if (v176 != 1)
        swift_bridgeObjectRelease(v176);
      v177 = v9[714];
      if (v177 != 1)
        swift_bridgeObjectRelease(v177);
      v178 = v9[718];
      if (v178 != 1)
        swift_bridgeObjectRelease(v178);
      swift_bridgeObjectRelease(v9[728]);
      swift_bridgeObjectRelease(v9[729]);
    }
    swift_bridgeObjectRelease(v9[730]);
  }
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v4 + v5[39]));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v4 + v5[40] + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)((char *)v4 + v5[41] + 8));
}

_QWORD *sub_1001C1B04(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _OWORD *v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _OWORD *v130;
  uint64_t *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  _OWORD *v158;
  uint64_t *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  _OWORD *v186;
  uint64_t *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  _OWORD *v214;
  uint64_t *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  _OWORD *v242;
  uint64_t *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  char *v274;
  char *v275;
  uint64_t v276;
  uint64_t v277;
  char *v278;
  char *v279;
  uint64_t v280;
  uint64_t v282;
  unsigned int (*v283)(char *, uint64_t, uint64_t, __n128);
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  char *__dst;
  void *__dsta;
  _QWORD *v290;
  int *v291;
  char *v292;
  char *v293;

  v6 = a2[3];
  if (v6)
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    a1[3] = v6;
    v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    v9 = a2[7];
    a1[6] = a2[6];
    a1[7] = v9;
    v10 = a2[9];
    a1[8] = a2[8];
    a1[9] = v10;
    v11 = a2[11];
    a1[10] = a2[10];
    a1[11] = v11;
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v10);
    swift_bridgeObjectRetain(v11);
  }
  else
  {
    v12 = *((_OWORD *)a2 + 3);
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 3) = v12;
    v13 = *((_OWORD *)a2 + 5);
    *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
    *((_OWORD *)a1 + 5) = v13;
    v14 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v14;
  }
  v15 = *(int *)(a3 + 20);
  v290 = a1;
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = *((_QWORD *)v17 + 1);
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *((_QWORD *)v16 + 1) = v18;
  v19 = *((_QWORD *)v17 + 3);
  *((_QWORD *)v16 + 2) = *((_QWORD *)v17 + 2);
  *((_QWORD *)v16 + 3) = v19;
  v20 = *((_QWORD *)v17 + 5);
  *((_QWORD *)v16 + 4) = *((_QWORD *)v17 + 4);
  *((_QWORD *)v16 + 5) = v20;
  v21 = *((_QWORD *)v17 + 7);
  *((_QWORD *)v16 + 6) = *((_QWORD *)v17 + 6);
  *((_QWORD *)v16 + 7) = v21;
  v22 = *((_QWORD *)v17 + 9);
  *((_QWORD *)v16 + 8) = *((_QWORD *)v17 + 8);
  *((_QWORD *)v16 + 9) = v22;
  v285 = *((_QWORD *)v17 + 11);
  *((_QWORD *)v16 + 10) = *((_QWORD *)v17 + 10);
  *((_QWORD *)v16 + 11) = v285;
  v16[96] = v17[96];
  v23 = *((_QWORD *)v17 + 14);
  *((_QWORD *)v16 + 13) = *((_QWORD *)v17 + 13);
  *((_QWORD *)v16 + 14) = v23;
  v24 = *((_QWORD *)v17 + 16);
  *((_QWORD *)v16 + 15) = *((_QWORD *)v17 + 15);
  *((_QWORD *)v16 + 16) = v24;
  v26 = *((_QWORD *)v17 + 17);
  v25 = *((_QWORD *)v17 + 18);
  *((_QWORD *)v16 + 17) = v26;
  *((_QWORD *)v16 + 18) = v25;
  v284 = *((_QWORD *)v17 + 19);
  v287 = *((_QWORD *)v17 + 20);
  *((_QWORD *)v16 + 19) = v284;
  *((_QWORD *)v16 + 20) = v287;
  v286 = *((_QWORD *)v17 + 22);
  *((_QWORD *)v16 + 21) = *((_QWORD *)v17 + 21);
  *((_QWORD *)v16 + 22) = v286;
  v16[184] = v17[184];
  v291 = (int *)type metadata accessor for Workflow(0);
  v292 = v17;
  v27 = v291[18];
  v293 = v16;
  __dst = &v16[v27];
  v28 = &v17[v27];
  v29 = type metadata accessor for HardwareAttestationType(0);
  v282 = *(_QWORD *)(v29 - 8);
  v283 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v282 + 48);
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRetain(v285);
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRetain(v26);
  swift_bridgeObjectRetain(v284);
  swift_bridgeObjectRetain(v287);
  v30 = swift_bridgeObjectRetain(v286);
  if (v283(v28, 1, v29, v30))
  {
    v31 = sub_100004828(&qword_1006322F0);
    memcpy(__dst, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v282 + 16))(__dst, v28, v29);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v282 + 56))(__dst, 0, 1, v29);
  }
  v32 = v291[19];
  v33 = *(_QWORD *)&v292[v32];
  *(_QWORD *)&v293[v32] = v33;
  v34 = v291[20];
  __dsta = *(void **)&v292[v34];
  *(_QWORD *)&v293[v34] = __dsta;
  v35 = v291[21];
  v36 = &v293[v35];
  v37 = &v292[v35];
  v38 = *((_QWORD *)v37 + 1);
  *(_QWORD *)v36 = *(_QWORD *)v37;
  *((_QWORD *)v36 + 1) = v38;
  v293[v291[22]] = v292[v291[22]];
  v39 = v291[23];
  v40 = *(_QWORD *)&v292[v39];
  *(_QWORD *)&v293[v39] = v40;
  v41 = v291[24];
  v42 = *(_QWORD *)&v292[v41];
  *(_QWORD *)&v293[v41] = v42;
  v43 = v291[25];
  v44 = *(_QWORD *)&v292[v43];
  *(_QWORD *)&v293[v43] = v44;
  v293[v291[26]] = v292[v291[26]];
  v45 = v291[27];
  v46 = &v293[v45];
  v47 = &v292[v45];
  *(_QWORD *)v46 = *(_QWORD *)v47;
  v46[8] = v47[8];
  v48 = v291[28];
  v49 = *(_QWORD *)&v292[v48];
  *(_QWORD *)&v293[v48] = v49;
  v50 = v291[29];
  v51 = *(_QWORD *)&v292[v50];
  *(_QWORD *)&v293[v50] = v51;
  v52 = v291[30];
  v53 = *(_QWORD *)&v292[v52];
  *(_QWORD *)&v293[v52] = v53;
  v54 = v291[31];
  v55 = &v293[v54];
  v56 = &v292[v54];
  *(_QWORD *)v55 = *(_QWORD *)v56;
  v55[8] = v56[8];
  v57 = v291[32];
  v58 = &v293[v57];
  v59 = &v292[v57];
  *(_QWORD *)v58 = *(_QWORD *)v59;
  v58[8] = v59[8];
  v60 = v291[33];
  v61 = &v293[v60];
  v62 = &v292[v60];
  v61[8] = v62[8];
  *(_QWORD *)v61 = *(_QWORD *)v62;
  v63 = v291[34];
  v64 = &v293[v63];
  v65 = &v292[v63];
  v64[8] = v65[8];
  *(_QWORD *)v64 = *(_QWORD *)v65;
  v66 = v291[35];
  v67 = &v293[v66];
  v68 = &v292[v66];
  v67[8] = v68[8];
  *(_QWORD *)v67 = *(_QWORD *)v68;
  v293[v291[36]] = v292[v291[36]];
  v293[v291[37]] = v292[v291[37]];
  v69 = v291[38];
  v70 = &v293[v69];
  v71 = &v292[v69];
  v72 = *(_QWORD *)&v292[v69 + 8];
  swift_bridgeObjectRetain(v33);
  swift_bridgeObjectRetain(__dsta);
  swift_bridgeObjectRetain(v38);
  swift_bridgeObjectRetain(v40);
  swift_bridgeObjectRetain(v42);
  swift_bridgeObjectRetain(v44);
  swift_bridgeObjectRetain(v49);
  swift_bridgeObjectRetain(v51);
  swift_bridgeObjectRetain(v53);
  if (v72 == 1)
  {
    memcpy(v70, v71, 0x1719uLL);
    v73 = v290;
  }
  else
  {
    *(_QWORD *)v70 = *(_QWORD *)v71;
    *((_QWORD *)v70 + 1) = v72;
    v74 = (uint64_t *)(v71 + 16);
    v75 = *((_QWORD *)v71 + 104);
    swift_bridgeObjectRetain(v72);
    v73 = v290;
    v76 = v70;
    if (v75 == 1)
    {
      memcpy(v70 + 16, v71 + 16, 0x340uLL);
    }
    else
    {
      v77 = *v74;
      if (*v74 == 1)
      {
        *((_OWORD *)v70 + 1) = *(_OWORD *)v74;
        *(_OWORD *)(v70 + 25) = *(_OWORD *)(v71 + 25);
      }
      else
      {
        *((_QWORD *)v70 + 2) = v77;
        v70[24] = v71[24];
        *((_QWORD *)v70 + 4) = *((_QWORD *)v71 + 4);
        v70[40] = v71[40];
        swift_bridgeObjectRetain(v77);
      }
      v78 = *((_QWORD *)v71 + 6);
      if (v78 == 1)
      {
        *((_OWORD *)v70 + 3) = *((_OWORD *)v71 + 3);
        *(_OWORD *)(v70 + 57) = *(_OWORD *)(v71 + 57);
      }
      else
      {
        *((_QWORD *)v70 + 6) = v78;
        v70[56] = v71[56];
        *((_QWORD *)v70 + 8) = *((_QWORD *)v71 + 8);
        v70[72] = v71[72];
        swift_bridgeObjectRetain(v78);
      }
      v79 = *((_QWORD *)v71 + 10);
      if (v79 == 1)
      {
        *((_OWORD *)v70 + 5) = *((_OWORD *)v71 + 5);
        *(_OWORD *)(v70 + 89) = *(_OWORD *)(v71 + 89);
      }
      else
      {
        *((_QWORD *)v70 + 10) = v79;
        v70[88] = v71[88];
        *((_QWORD *)v70 + 12) = *((_QWORD *)v71 + 12);
        v70[104] = v71[104];
        swift_bridgeObjectRetain(v79);
      }
      v80 = *((_QWORD *)v71 + 14);
      if (v80 == 1)
      {
        *((_OWORD *)v70 + 7) = *((_OWORD *)v71 + 7);
        *(_OWORD *)(v70 + 121) = *(_OWORD *)(v71 + 121);
      }
      else
      {
        *((_QWORD *)v70 + 14) = v80;
        v70[120] = v71[120];
        *((_QWORD *)v70 + 16) = *((_QWORD *)v71 + 16);
        v70[136] = v71[136];
        swift_bridgeObjectRetain(v80);
      }
      v81 = *((_QWORD *)v71 + 18);
      if (v81 == 1)
      {
        *((_OWORD *)v70 + 9) = *((_OWORD *)v71 + 9);
        *(_OWORD *)(v70 + 153) = *(_OWORD *)(v71 + 153);
      }
      else
      {
        *((_QWORD *)v70 + 18) = v81;
        v70[152] = v71[152];
        *((_QWORD *)v70 + 20) = *((_QWORD *)v71 + 20);
        v70[168] = v71[168];
        swift_bridgeObjectRetain(v81);
      }
      v82 = *((_QWORD *)v71 + 22);
      if (v82 == 1)
      {
        *((_OWORD *)v70 + 11) = *((_OWORD *)v71 + 11);
        *(_OWORD *)(v70 + 185) = *(_OWORD *)(v71 + 185);
      }
      else
      {
        *((_QWORD *)v70 + 22) = v82;
        v70[184] = v71[184];
        *((_QWORD *)v70 + 24) = *((_QWORD *)v71 + 24);
        v70[200] = v71[200];
        swift_bridgeObjectRetain(v82);
      }
      v83 = *((_QWORD *)v71 + 26);
      if (v83 == 1)
      {
        *((_OWORD *)v70 + 13) = *((_OWORD *)v71 + 13);
        *(_OWORD *)(v70 + 217) = *(_OWORD *)(v71 + 217);
      }
      else
      {
        *((_QWORD *)v70 + 26) = v83;
        v70[216] = v71[216];
        *((_QWORD *)v70 + 28) = *((_QWORD *)v71 + 28);
        v70[232] = v71[232];
        swift_bridgeObjectRetain(v83);
      }
      v84 = *((_QWORD *)v71 + 30);
      if (v84 == 1)
      {
        *((_OWORD *)v70 + 15) = *((_OWORD *)v71 + 15);
        *(_OWORD *)(v70 + 249) = *(_OWORD *)(v71 + 249);
      }
      else
      {
        *((_QWORD *)v70 + 30) = v84;
        v70[248] = v71[248];
        *((_QWORD *)v70 + 32) = *((_QWORD *)v71 + 32);
        v70[264] = v71[264];
        swift_bridgeObjectRetain(v84);
      }
      v85 = *((_QWORD *)v71 + 34);
      if (v85 == 1)
      {
        *((_OWORD *)v70 + 17) = *((_OWORD *)v71 + 17);
        *(_OWORD *)(v70 + 281) = *(_OWORD *)(v71 + 281);
      }
      else
      {
        *((_QWORD *)v70 + 34) = v85;
        v70[280] = v71[280];
        *((_QWORD *)v70 + 36) = *((_QWORD *)v71 + 36);
        v70[296] = v71[296];
        swift_bridgeObjectRetain(v85);
      }
      v86 = *((_QWORD *)v71 + 38);
      if (v86 == 1)
      {
        *((_OWORD *)v70 + 19) = *((_OWORD *)v71 + 19);
        *(_OWORD *)(v70 + 313) = *(_OWORD *)(v71 + 313);
      }
      else
      {
        *((_QWORD *)v70 + 38) = v86;
        v70[312] = v71[312];
        *((_QWORD *)v70 + 40) = *((_QWORD *)v71 + 40);
        v70[328] = v71[328];
        swift_bridgeObjectRetain(v86);
      }
      v87 = *((_QWORD *)v71 + 42);
      if (v87 == 1)
      {
        *((_OWORD *)v70 + 21) = *((_OWORD *)v71 + 21);
        *(_OWORD *)(v70 + 345) = *(_OWORD *)(v71 + 345);
      }
      else
      {
        *((_QWORD *)v70 + 42) = v87;
        v70[344] = v71[344];
        *((_QWORD *)v70 + 44) = *((_QWORD *)v71 + 44);
        v70[360] = v71[360];
        swift_bridgeObjectRetain(v87);
      }
      v88 = *((_QWORD *)v71 + 46);
      if (v88 == 1)
      {
        *((_OWORD *)v70 + 23) = *((_OWORD *)v71 + 23);
        *(_OWORD *)(v70 + 377) = *(_OWORD *)(v71 + 377);
      }
      else
      {
        *((_QWORD *)v70 + 46) = v88;
        v70[376] = v71[376];
        *((_QWORD *)v70 + 48) = *((_QWORD *)v71 + 48);
        v70[392] = v71[392];
        swift_bridgeObjectRetain(v88);
      }
      v89 = *((_QWORD *)v71 + 50);
      if (v89 == 1)
      {
        *((_OWORD *)v70 + 25) = *((_OWORD *)v71 + 25);
        *(_OWORD *)(v70 + 409) = *(_OWORD *)(v71 + 409);
      }
      else
      {
        *((_QWORD *)v70 + 50) = v89;
        v70[408] = v71[408];
        *((_QWORD *)v70 + 52) = *((_QWORD *)v71 + 52);
        v70[424] = v71[424];
        swift_bridgeObjectRetain(v89);
      }
      v90 = *((_QWORD *)v71 + 54);
      if (v90 == 1)
      {
        *((_OWORD *)v70 + 27) = *((_OWORD *)v71 + 27);
        *(_OWORD *)(v70 + 441) = *(_OWORD *)(v71 + 441);
      }
      else
      {
        *((_QWORD *)v70 + 54) = v90;
        v70[440] = v71[440];
        *((_QWORD *)v70 + 56) = *((_QWORD *)v71 + 56);
        v70[456] = v71[456];
        swift_bridgeObjectRetain(v90);
      }
      v91 = *((_QWORD *)v71 + 58);
      if (v91 == 1)
      {
        *((_OWORD *)v70 + 29) = *((_OWORD *)v71 + 29);
        *(_OWORD *)(v70 + 473) = *(_OWORD *)(v71 + 473);
      }
      else
      {
        *((_QWORD *)v70 + 58) = v91;
        v70[472] = v71[472];
        *((_QWORD *)v70 + 60) = *((_QWORD *)v71 + 60);
        v70[488] = v71[488];
        swift_bridgeObjectRetain(v91);
      }
      v92 = *((_QWORD *)v71 + 62);
      if (v92 == 1)
      {
        *((_OWORD *)v70 + 31) = *((_OWORD *)v71 + 31);
        *(_OWORD *)(v70 + 505) = *(_OWORD *)(v71 + 505);
      }
      else
      {
        *((_QWORD *)v70 + 62) = v92;
        v70[504] = v71[504];
        *((_QWORD *)v70 + 64) = *((_QWORD *)v71 + 64);
        v70[520] = v71[520];
        swift_bridgeObjectRetain(v92);
      }
      v93 = *((_QWORD *)v71 + 66);
      if (v93 == 1)
      {
        *((_OWORD *)v70 + 33) = *((_OWORD *)v71 + 33);
        *(_OWORD *)(v70 + 537) = *(_OWORD *)(v71 + 537);
      }
      else
      {
        *((_QWORD *)v70 + 66) = v93;
        v70[536] = v71[536];
        *((_QWORD *)v70 + 68) = *((_QWORD *)v71 + 68);
        v70[552] = v71[552];
        swift_bridgeObjectRetain(v93);
      }
      v94 = *((_QWORD *)v71 + 70);
      if (v94 == 1)
      {
        *((_OWORD *)v70 + 35) = *((_OWORD *)v71 + 35);
        *(_OWORD *)(v70 + 569) = *(_OWORD *)(v71 + 569);
      }
      else
      {
        *((_QWORD *)v70 + 70) = v94;
        v70[568] = v71[568];
        *((_QWORD *)v70 + 72) = *((_QWORD *)v71 + 72);
        v70[584] = v71[584];
        swift_bridgeObjectRetain(v94);
      }
      v95 = *((_QWORD *)v71 + 74);
      if (v95 == 1)
      {
        *((_OWORD *)v70 + 37) = *((_OWORD *)v71 + 37);
        *(_OWORD *)(v70 + 601) = *(_OWORD *)(v71 + 601);
      }
      else
      {
        *((_QWORD *)v70 + 74) = v95;
        v70[600] = v71[600];
        *((_QWORD *)v70 + 76) = *((_QWORD *)v71 + 76);
        v70[616] = v71[616];
        swift_bridgeObjectRetain(v95);
      }
      v96 = *((_QWORD *)v71 + 78);
      if (v96 == 1)
      {
        *((_OWORD *)v70 + 39) = *((_OWORD *)v71 + 39);
        *(_OWORD *)(v70 + 633) = *(_OWORD *)(v71 + 633);
      }
      else
      {
        *((_QWORD *)v70 + 78) = v96;
        v70[632] = v71[632];
        *((_QWORD *)v70 + 80) = *((_QWORD *)v71 + 80);
        v70[648] = v71[648];
        swift_bridgeObjectRetain(v96);
      }
      v97 = *((_QWORD *)v71 + 82);
      if (v97 == 1)
      {
        *((_OWORD *)v70 + 41) = *((_OWORD *)v71 + 41);
        *(_OWORD *)(v70 + 665) = *(_OWORD *)(v71 + 665);
      }
      else
      {
        *((_QWORD *)v70 + 82) = v97;
        v70[664] = v71[664];
        *((_QWORD *)v70 + 84) = *((_QWORD *)v71 + 84);
        v70[680] = v71[680];
        swift_bridgeObjectRetain(v97);
      }
      v98 = *((_QWORD *)v71 + 86);
      if (v98 == 1)
      {
        *((_OWORD *)v70 + 43) = *((_OWORD *)v71 + 43);
        *(_OWORD *)(v70 + 697) = *(_OWORD *)(v71 + 697);
      }
      else
      {
        *((_QWORD *)v70 + 86) = v98;
        v70[696] = v71[696];
        *((_QWORD *)v70 + 88) = *((_QWORD *)v71 + 88);
        v70[712] = v71[712];
        swift_bridgeObjectRetain(v98);
      }
      v99 = *((_QWORD *)v71 + 90);
      if (v99 == 1)
      {
        *((_OWORD *)v70 + 45) = *((_OWORD *)v71 + 45);
        *(_OWORD *)(v70 + 729) = *(_OWORD *)(v71 + 729);
      }
      else
      {
        *((_QWORD *)v70 + 90) = v99;
        v70[728] = v71[728];
        *((_QWORD *)v70 + 92) = *((_QWORD *)v71 + 92);
        v70[744] = v71[744];
        swift_bridgeObjectRetain(v99);
      }
      v100 = *((_QWORD *)v71 + 94);
      if (v100 == 1)
      {
        *((_OWORD *)v70 + 47) = *((_OWORD *)v71 + 47);
        *(_OWORD *)(v70 + 761) = *(_OWORD *)(v71 + 761);
      }
      else
      {
        *((_QWORD *)v70 + 94) = v100;
        v70[760] = v71[760];
        *((_QWORD *)v70 + 96) = *((_QWORD *)v71 + 96);
        v70[776] = v71[776];
        swift_bridgeObjectRetain(v100);
      }
      *((_OWORD *)v70 + 49) = *((_OWORD *)v71 + 49);
      v70[800] = v71[800];
      v70[824] = v71[824];
      *(_OWORD *)(v70 + 808) = *(_OWORD *)(v71 + 808);
      *(_DWORD *)(v70 + 825) = *(_DWORD *)(v71 + 825);
      *(_WORD *)(v70 + 829) = *(_WORD *)(v71 + 829);
      v70[831] = v71[831];
      *((_QWORD *)v70 + 104) = v75;
      v101 = *((_QWORD *)v71 + 105);
      *((_QWORD *)v70 + 105) = v101;
      swift_bridgeObjectRetain(v75);
      swift_bridgeObjectRetain(v101);
    }
    v102 = v70 + 848;
    v103 = (uint64_t *)(v71 + 848);
    v104 = *((_QWORD *)v71 + 208);
    if (v104 == 1)
    {
      memcpy(v102, v103, 0x340uLL);
    }
    else
    {
      v105 = *v103;
      if (*v103 == 1)
      {
        *v102 = *(_OWORD *)v103;
        *(_OWORD *)(v76 + 857) = *(_OWORD *)(v71 + 857);
      }
      else
      {
        *((_QWORD *)v76 + 106) = v105;
        v76[856] = v71[856];
        *((_QWORD *)v76 + 108) = *((_QWORD *)v71 + 108);
        v76[872] = v71[872];
        swift_bridgeObjectRetain(v105);
      }
      v106 = *((_QWORD *)v71 + 110);
      if (v106 == 1)
      {
        *((_OWORD *)v76 + 55) = *((_OWORD *)v71 + 55);
        *(_OWORD *)(v76 + 889) = *(_OWORD *)(v71 + 889);
      }
      else
      {
        *((_QWORD *)v76 + 110) = v106;
        v76[888] = v71[888];
        *((_QWORD *)v76 + 112) = *((_QWORD *)v71 + 112);
        v76[904] = v71[904];
        swift_bridgeObjectRetain(v106);
      }
      v107 = *((_QWORD *)v71 + 114);
      if (v107 == 1)
      {
        *((_OWORD *)v76 + 57) = *((_OWORD *)v71 + 57);
        *(_OWORD *)(v76 + 921) = *(_OWORD *)(v71 + 921);
      }
      else
      {
        *((_QWORD *)v76 + 114) = v107;
        v76[920] = v71[920];
        *((_QWORD *)v76 + 116) = *((_QWORD *)v71 + 116);
        v76[936] = v71[936];
        swift_bridgeObjectRetain(v107);
      }
      v108 = *((_QWORD *)v71 + 118);
      if (v108 == 1)
      {
        *((_OWORD *)v76 + 59) = *((_OWORD *)v71 + 59);
        *(_OWORD *)(v76 + 953) = *(_OWORD *)(v71 + 953);
      }
      else
      {
        *((_QWORD *)v76 + 118) = v108;
        v76[952] = v71[952];
        *((_QWORD *)v76 + 120) = *((_QWORD *)v71 + 120);
        v76[968] = v71[968];
        swift_bridgeObjectRetain(v108);
      }
      v109 = *((_QWORD *)v71 + 122);
      if (v109 == 1)
      {
        *((_OWORD *)v76 + 61) = *((_OWORD *)v71 + 61);
        *(_OWORD *)(v76 + 985) = *(_OWORD *)(v71 + 985);
      }
      else
      {
        *((_QWORD *)v76 + 122) = v109;
        v76[984] = v71[984];
        *((_QWORD *)v76 + 124) = *((_QWORD *)v71 + 124);
        v76[1000] = v71[1000];
        swift_bridgeObjectRetain(v109);
      }
      v110 = *((_QWORD *)v71 + 126);
      if (v110 == 1)
      {
        *((_OWORD *)v76 + 63) = *((_OWORD *)v71 + 63);
        *(_OWORD *)(v76 + 1017) = *(_OWORD *)(v71 + 1017);
      }
      else
      {
        *((_QWORD *)v76 + 126) = v110;
        v76[1016] = v71[1016];
        *((_QWORD *)v76 + 128) = *((_QWORD *)v71 + 128);
        v76[1032] = v71[1032];
        swift_bridgeObjectRetain(v110);
      }
      v111 = *((_QWORD *)v71 + 130);
      if (v111 == 1)
      {
        *((_OWORD *)v76 + 65) = *((_OWORD *)v71 + 65);
        *(_OWORD *)(v76 + 1049) = *(_OWORD *)(v71 + 1049);
      }
      else
      {
        *((_QWORD *)v76 + 130) = v111;
        v76[1048] = v71[1048];
        *((_QWORD *)v76 + 132) = *((_QWORD *)v71 + 132);
        v76[1064] = v71[1064];
        swift_bridgeObjectRetain(v111);
      }
      v112 = *((_QWORD *)v71 + 134);
      if (v112 == 1)
      {
        *((_OWORD *)v76 + 67) = *((_OWORD *)v71 + 67);
        *(_OWORD *)(v76 + 1081) = *(_OWORD *)(v71 + 1081);
      }
      else
      {
        *((_QWORD *)v76 + 134) = v112;
        v76[1080] = v71[1080];
        *((_QWORD *)v76 + 136) = *((_QWORD *)v71 + 136);
        v76[1096] = v71[1096];
        swift_bridgeObjectRetain(v112);
      }
      v113 = *((_QWORD *)v71 + 138);
      if (v113 == 1)
      {
        *((_OWORD *)v76 + 69) = *((_OWORD *)v71 + 69);
        *(_OWORD *)(v76 + 1113) = *(_OWORD *)(v71 + 1113);
      }
      else
      {
        *((_QWORD *)v76 + 138) = v113;
        v76[1112] = v71[1112];
        *((_QWORD *)v76 + 140) = *((_QWORD *)v71 + 140);
        v76[1128] = v71[1128];
        swift_bridgeObjectRetain(v113);
      }
      v114 = *((_QWORD *)v71 + 142);
      if (v114 == 1)
      {
        *((_OWORD *)v76 + 71) = *((_OWORD *)v71 + 71);
        *(_OWORD *)(v76 + 1145) = *(_OWORD *)(v71 + 1145);
      }
      else
      {
        *((_QWORD *)v76 + 142) = v114;
        v76[1144] = v71[1144];
        *((_QWORD *)v76 + 144) = *((_QWORD *)v71 + 144);
        v76[1160] = v71[1160];
        swift_bridgeObjectRetain(v114);
      }
      v115 = *((_QWORD *)v71 + 146);
      if (v115 == 1)
      {
        *((_OWORD *)v76 + 73) = *((_OWORD *)v71 + 73);
        *(_OWORD *)(v76 + 1177) = *(_OWORD *)(v71 + 1177);
      }
      else
      {
        *((_QWORD *)v76 + 146) = v115;
        v76[1176] = v71[1176];
        *((_QWORD *)v76 + 148) = *((_QWORD *)v71 + 148);
        v76[1192] = v71[1192];
        swift_bridgeObjectRetain(v115);
      }
      v116 = *((_QWORD *)v71 + 150);
      if (v116 == 1)
      {
        *((_OWORD *)v76 + 75) = *((_OWORD *)v71 + 75);
        *(_OWORD *)(v76 + 1209) = *(_OWORD *)(v71 + 1209);
      }
      else
      {
        *((_QWORD *)v76 + 150) = v116;
        v76[1208] = v71[1208];
        *((_QWORD *)v76 + 152) = *((_QWORD *)v71 + 152);
        v76[1224] = v71[1224];
        swift_bridgeObjectRetain(v116);
      }
      v117 = *((_QWORD *)v71 + 154);
      if (v117 == 1)
      {
        *((_OWORD *)v76 + 77) = *((_OWORD *)v71 + 77);
        *(_OWORD *)(v76 + 1241) = *(_OWORD *)(v71 + 1241);
      }
      else
      {
        *((_QWORD *)v76 + 154) = v117;
        v76[1240] = v71[1240];
        *((_QWORD *)v76 + 156) = *((_QWORD *)v71 + 156);
        v76[1256] = v71[1256];
        swift_bridgeObjectRetain(v117);
      }
      v118 = *((_QWORD *)v71 + 158);
      if (v118 == 1)
      {
        *((_OWORD *)v76 + 79) = *((_OWORD *)v71 + 79);
        *(_OWORD *)(v76 + 1273) = *(_OWORD *)(v71 + 1273);
      }
      else
      {
        *((_QWORD *)v76 + 158) = v118;
        v76[1272] = v71[1272];
        *((_QWORD *)v76 + 160) = *((_QWORD *)v71 + 160);
        v76[1288] = v71[1288];
        swift_bridgeObjectRetain(v118);
      }
      v119 = *((_QWORD *)v71 + 162);
      if (v119 == 1)
      {
        *((_OWORD *)v76 + 81) = *((_OWORD *)v71 + 81);
        *(_OWORD *)(v76 + 1305) = *(_OWORD *)(v71 + 1305);
      }
      else
      {
        *((_QWORD *)v76 + 162) = v119;
        v76[1304] = v71[1304];
        *((_QWORD *)v76 + 164) = *((_QWORD *)v71 + 164);
        v76[1320] = v71[1320];
        swift_bridgeObjectRetain(v119);
      }
      v120 = *((_QWORD *)v71 + 166);
      if (v120 == 1)
      {
        *((_OWORD *)v76 + 83) = *((_OWORD *)v71 + 83);
        *(_OWORD *)(v76 + 1337) = *(_OWORD *)(v71 + 1337);
      }
      else
      {
        *((_QWORD *)v76 + 166) = v120;
        v76[1336] = v71[1336];
        *((_QWORD *)v76 + 168) = *((_QWORD *)v71 + 168);
        v76[1352] = v71[1352];
        swift_bridgeObjectRetain(v120);
      }
      v121 = *((_QWORD *)v71 + 170);
      if (v121 == 1)
      {
        *((_OWORD *)v76 + 85) = *((_OWORD *)v71 + 85);
        *(_OWORD *)(v76 + 1369) = *(_OWORD *)(v71 + 1369);
      }
      else
      {
        *((_QWORD *)v76 + 170) = v121;
        v76[1368] = v71[1368];
        *((_QWORD *)v76 + 172) = *((_QWORD *)v71 + 172);
        v76[1384] = v71[1384];
        swift_bridgeObjectRetain(v121);
      }
      v122 = *((_QWORD *)v71 + 174);
      if (v122 == 1)
      {
        *((_OWORD *)v76 + 87) = *((_OWORD *)v71 + 87);
        *(_OWORD *)(v76 + 1401) = *(_OWORD *)(v71 + 1401);
      }
      else
      {
        *((_QWORD *)v76 + 174) = v122;
        v76[1400] = v71[1400];
        *((_QWORD *)v76 + 176) = *((_QWORD *)v71 + 176);
        v76[1416] = v71[1416];
        swift_bridgeObjectRetain(v122);
      }
      v123 = *((_QWORD *)v71 + 178);
      if (v123 == 1)
      {
        *((_OWORD *)v76 + 89) = *((_OWORD *)v71 + 89);
        *(_OWORD *)(v76 + 1433) = *(_OWORD *)(v71 + 1433);
      }
      else
      {
        *((_QWORD *)v76 + 178) = v123;
        v76[1432] = v71[1432];
        *((_QWORD *)v76 + 180) = *((_QWORD *)v71 + 180);
        v76[1448] = v71[1448];
        swift_bridgeObjectRetain(v123);
      }
      v124 = *((_QWORD *)v71 + 182);
      if (v124 == 1)
      {
        *((_OWORD *)v76 + 91) = *((_OWORD *)v71 + 91);
        *(_OWORD *)(v76 + 1465) = *(_OWORD *)(v71 + 1465);
      }
      else
      {
        *((_QWORD *)v76 + 182) = v124;
        v76[1464] = v71[1464];
        *((_QWORD *)v76 + 184) = *((_QWORD *)v71 + 184);
        v76[1480] = v71[1480];
        swift_bridgeObjectRetain(v124);
      }
      v125 = *((_QWORD *)v71 + 186);
      if (v125 == 1)
      {
        *((_OWORD *)v76 + 93) = *((_OWORD *)v71 + 93);
        *(_OWORD *)(v76 + 1497) = *(_OWORD *)(v71 + 1497);
      }
      else
      {
        *((_QWORD *)v76 + 186) = v125;
        v76[1496] = v71[1496];
        *((_QWORD *)v76 + 188) = *((_QWORD *)v71 + 188);
        v76[1512] = v71[1512];
        swift_bridgeObjectRetain(v125);
      }
      v126 = *((_QWORD *)v71 + 190);
      if (v126 == 1)
      {
        *((_OWORD *)v76 + 95) = *((_OWORD *)v71 + 95);
        *(_OWORD *)(v76 + 1529) = *(_OWORD *)(v71 + 1529);
      }
      else
      {
        *((_QWORD *)v76 + 190) = v126;
        v76[1528] = v71[1528];
        *((_QWORD *)v76 + 192) = *((_QWORD *)v71 + 192);
        v76[1544] = v71[1544];
        swift_bridgeObjectRetain(v126);
      }
      v127 = *((_QWORD *)v71 + 194);
      if (v127 == 1)
      {
        *((_OWORD *)v76 + 97) = *((_OWORD *)v71 + 97);
        *(_OWORD *)(v76 + 1561) = *(_OWORD *)(v71 + 1561);
      }
      else
      {
        *((_QWORD *)v76 + 194) = v127;
        v76[1560] = v71[1560];
        *((_QWORD *)v76 + 196) = *((_QWORD *)v71 + 196);
        v76[1576] = v71[1576];
        swift_bridgeObjectRetain(v127);
      }
      v128 = *((_QWORD *)v71 + 198);
      if (v128 == 1)
      {
        *((_OWORD *)v76 + 99) = *((_OWORD *)v71 + 99);
        *(_OWORD *)(v76 + 1593) = *(_OWORD *)(v71 + 1593);
      }
      else
      {
        *((_QWORD *)v76 + 198) = v128;
        v76[1592] = v71[1592];
        *((_QWORD *)v76 + 200) = *((_QWORD *)v71 + 200);
        v76[1608] = v71[1608];
        swift_bridgeObjectRetain(v128);
      }
      *((_OWORD *)v76 + 101) = *((_OWORD *)v71 + 101);
      v76[1632] = v71[1632];
      v76[1656] = v71[1656];
      *(_OWORD *)(v76 + 1640) = *(_OWORD *)(v71 + 1640);
      *(_DWORD *)(v76 + 1657) = *(_DWORD *)(v71 + 1657);
      *(_WORD *)(v76 + 1661) = *(_WORD *)(v71 + 1661);
      v76[1663] = v71[1663];
      *((_QWORD *)v76 + 208) = v104;
      v129 = *((_QWORD *)v71 + 209);
      *((_QWORD *)v76 + 209) = v129;
      swift_bridgeObjectRetain(v104);
      swift_bridgeObjectRetain(v129);
    }
    v130 = v76 + 1680;
    v131 = (uint64_t *)(v71 + 1680);
    v132 = *((_QWORD *)v71 + 312);
    if (v132 == 1)
    {
      memcpy(v130, v131, 0x340uLL);
    }
    else
    {
      v133 = *v131;
      if (*v131 == 1)
      {
        *v130 = *(_OWORD *)v131;
        *(_OWORD *)(v76 + 1689) = *(_OWORD *)(v71 + 1689);
      }
      else
      {
        *((_QWORD *)v76 + 210) = v133;
        v76[1688] = v71[1688];
        *((_QWORD *)v76 + 212) = *((_QWORD *)v71 + 212);
        v76[1704] = v71[1704];
        swift_bridgeObjectRetain(v133);
      }
      v134 = *((_QWORD *)v71 + 214);
      if (v134 == 1)
      {
        *((_OWORD *)v76 + 107) = *((_OWORD *)v71 + 107);
        *(_OWORD *)(v76 + 1721) = *(_OWORD *)(v71 + 1721);
      }
      else
      {
        *((_QWORD *)v76 + 214) = v134;
        v76[1720] = v71[1720];
        *((_QWORD *)v76 + 216) = *((_QWORD *)v71 + 216);
        v76[1736] = v71[1736];
        swift_bridgeObjectRetain(v134);
      }
      v135 = *((_QWORD *)v71 + 218);
      if (v135 == 1)
      {
        *((_OWORD *)v76 + 109) = *((_OWORD *)v71 + 109);
        *(_OWORD *)(v76 + 1753) = *(_OWORD *)(v71 + 1753);
      }
      else
      {
        *((_QWORD *)v76 + 218) = v135;
        v76[1752] = v71[1752];
        *((_QWORD *)v76 + 220) = *((_QWORD *)v71 + 220);
        v76[1768] = v71[1768];
        swift_bridgeObjectRetain(v135);
      }
      v136 = *((_QWORD *)v71 + 222);
      if (v136 == 1)
      {
        *((_OWORD *)v76 + 111) = *((_OWORD *)v71 + 111);
        *(_OWORD *)(v76 + 1785) = *(_OWORD *)(v71 + 1785);
      }
      else
      {
        *((_QWORD *)v76 + 222) = v136;
        v76[1784] = v71[1784];
        *((_QWORD *)v76 + 224) = *((_QWORD *)v71 + 224);
        v76[1800] = v71[1800];
        swift_bridgeObjectRetain(v136);
      }
      v137 = *((_QWORD *)v71 + 226);
      if (v137 == 1)
      {
        *((_OWORD *)v76 + 113) = *((_OWORD *)v71 + 113);
        *(_OWORD *)(v76 + 1817) = *(_OWORD *)(v71 + 1817);
      }
      else
      {
        *((_QWORD *)v76 + 226) = v137;
        v76[1816] = v71[1816];
        *((_QWORD *)v76 + 228) = *((_QWORD *)v71 + 228);
        v76[1832] = v71[1832];
        swift_bridgeObjectRetain(v137);
      }
      v138 = *((_QWORD *)v71 + 230);
      if (v138 == 1)
      {
        *((_OWORD *)v76 + 115) = *((_OWORD *)v71 + 115);
        *(_OWORD *)(v76 + 1849) = *(_OWORD *)(v71 + 1849);
      }
      else
      {
        *((_QWORD *)v76 + 230) = v138;
        v76[1848] = v71[1848];
        *((_QWORD *)v76 + 232) = *((_QWORD *)v71 + 232);
        v76[1864] = v71[1864];
        swift_bridgeObjectRetain(v138);
      }
      v139 = *((_QWORD *)v71 + 234);
      if (v139 == 1)
      {
        *((_OWORD *)v76 + 117) = *((_OWORD *)v71 + 117);
        *(_OWORD *)(v76 + 1881) = *(_OWORD *)(v71 + 1881);
      }
      else
      {
        *((_QWORD *)v76 + 234) = v139;
        v76[1880] = v71[1880];
        *((_QWORD *)v76 + 236) = *((_QWORD *)v71 + 236);
        v76[1896] = v71[1896];
        swift_bridgeObjectRetain(v139);
      }
      v140 = *((_QWORD *)v71 + 238);
      if (v140 == 1)
      {
        *((_OWORD *)v76 + 119) = *((_OWORD *)v71 + 119);
        *(_OWORD *)(v76 + 1913) = *(_OWORD *)(v71 + 1913);
      }
      else
      {
        *((_QWORD *)v76 + 238) = v140;
        v76[1912] = v71[1912];
        *((_QWORD *)v76 + 240) = *((_QWORD *)v71 + 240);
        v76[1928] = v71[1928];
        swift_bridgeObjectRetain(v140);
      }
      v141 = *((_QWORD *)v71 + 242);
      if (v141 == 1)
      {
        *((_OWORD *)v76 + 121) = *((_OWORD *)v71 + 121);
        *(_OWORD *)(v76 + 1945) = *(_OWORD *)(v71 + 1945);
      }
      else
      {
        *((_QWORD *)v76 + 242) = v141;
        v76[1944] = v71[1944];
        *((_QWORD *)v76 + 244) = *((_QWORD *)v71 + 244);
        v76[1960] = v71[1960];
        swift_bridgeObjectRetain(v141);
      }
      v142 = *((_QWORD *)v71 + 246);
      if (v142 == 1)
      {
        *((_OWORD *)v76 + 123) = *((_OWORD *)v71 + 123);
        *(_OWORD *)(v76 + 1977) = *(_OWORD *)(v71 + 1977);
      }
      else
      {
        *((_QWORD *)v76 + 246) = v142;
        v76[1976] = v71[1976];
        *((_QWORD *)v76 + 248) = *((_QWORD *)v71 + 248);
        v76[1992] = v71[1992];
        swift_bridgeObjectRetain(v142);
      }
      v143 = *((_QWORD *)v71 + 250);
      if (v143 == 1)
      {
        *((_OWORD *)v76 + 125) = *((_OWORD *)v71 + 125);
        *(_OWORD *)(v76 + 2009) = *(_OWORD *)(v71 + 2009);
      }
      else
      {
        *((_QWORD *)v76 + 250) = v143;
        v76[2008] = v71[2008];
        *((_QWORD *)v76 + 252) = *((_QWORD *)v71 + 252);
        v76[2024] = v71[2024];
        swift_bridgeObjectRetain(v143);
      }
      v144 = *((_QWORD *)v71 + 254);
      if (v144 == 1)
      {
        *((_OWORD *)v76 + 127) = *((_OWORD *)v71 + 127);
        *(_OWORD *)(v76 + 2041) = *(_OWORD *)(v71 + 2041);
      }
      else
      {
        *((_QWORD *)v76 + 254) = v144;
        v76[2040] = v71[2040];
        *((_QWORD *)v76 + 256) = *((_QWORD *)v71 + 256);
        v76[2056] = v71[2056];
        swift_bridgeObjectRetain(v144);
      }
      v145 = *((_QWORD *)v71 + 258);
      if (v145 == 1)
      {
        *((_OWORD *)v76 + 129) = *((_OWORD *)v71 + 129);
        *(_OWORD *)(v76 + 2073) = *(_OWORD *)(v71 + 2073);
      }
      else
      {
        *((_QWORD *)v76 + 258) = v145;
        v76[2072] = v71[2072];
        *((_QWORD *)v76 + 260) = *((_QWORD *)v71 + 260);
        v76[2088] = v71[2088];
        swift_bridgeObjectRetain(v145);
      }
      v146 = *((_QWORD *)v71 + 262);
      if (v146 == 1)
      {
        *((_OWORD *)v76 + 131) = *((_OWORD *)v71 + 131);
        *(_OWORD *)(v76 + 2105) = *(_OWORD *)(v71 + 2105);
      }
      else
      {
        *((_QWORD *)v76 + 262) = v146;
        v76[2104] = v71[2104];
        *((_QWORD *)v76 + 264) = *((_QWORD *)v71 + 264);
        v76[2120] = v71[2120];
        swift_bridgeObjectRetain(v146);
      }
      v147 = *((_QWORD *)v71 + 266);
      if (v147 == 1)
      {
        *((_OWORD *)v76 + 133) = *((_OWORD *)v71 + 133);
        *(_OWORD *)(v76 + 2137) = *(_OWORD *)(v71 + 2137);
      }
      else
      {
        *((_QWORD *)v76 + 266) = v147;
        v76[2136] = v71[2136];
        *((_QWORD *)v76 + 268) = *((_QWORD *)v71 + 268);
        v76[2152] = v71[2152];
        swift_bridgeObjectRetain(v147);
      }
      v148 = *((_QWORD *)v71 + 270);
      if (v148 == 1)
      {
        *((_OWORD *)v76 + 135) = *((_OWORD *)v71 + 135);
        *(_OWORD *)(v76 + 2169) = *(_OWORD *)(v71 + 2169);
      }
      else
      {
        *((_QWORD *)v76 + 270) = v148;
        v76[2168] = v71[2168];
        *((_QWORD *)v76 + 272) = *((_QWORD *)v71 + 272);
        v76[2184] = v71[2184];
        swift_bridgeObjectRetain(v148);
      }
      v149 = *((_QWORD *)v71 + 274);
      if (v149 == 1)
      {
        *((_OWORD *)v76 + 137) = *((_OWORD *)v71 + 137);
        *(_OWORD *)(v76 + 2201) = *(_OWORD *)(v71 + 2201);
      }
      else
      {
        *((_QWORD *)v76 + 274) = v149;
        v76[2200] = v71[2200];
        *((_QWORD *)v76 + 276) = *((_QWORD *)v71 + 276);
        v76[2216] = v71[2216];
        swift_bridgeObjectRetain(v149);
      }
      v150 = *((_QWORD *)v71 + 278);
      if (v150 == 1)
      {
        *((_OWORD *)v76 + 139) = *((_OWORD *)v71 + 139);
        *(_OWORD *)(v76 + 2233) = *(_OWORD *)(v71 + 2233);
      }
      else
      {
        *((_QWORD *)v76 + 278) = v150;
        v76[2232] = v71[2232];
        *((_QWORD *)v76 + 280) = *((_QWORD *)v71 + 280);
        v76[2248] = v71[2248];
        swift_bridgeObjectRetain(v150);
      }
      v151 = *((_QWORD *)v71 + 282);
      if (v151 == 1)
      {
        *((_OWORD *)v76 + 141) = *((_OWORD *)v71 + 141);
        *(_OWORD *)(v76 + 2265) = *(_OWORD *)(v71 + 2265);
      }
      else
      {
        *((_QWORD *)v76 + 282) = v151;
        v76[2264] = v71[2264];
        *((_QWORD *)v76 + 284) = *((_QWORD *)v71 + 284);
        v76[2280] = v71[2280];
        swift_bridgeObjectRetain(v151);
      }
      v152 = *((_QWORD *)v71 + 286);
      if (v152 == 1)
      {
        *((_OWORD *)v76 + 143) = *((_OWORD *)v71 + 143);
        *(_OWORD *)(v76 + 2297) = *(_OWORD *)(v71 + 2297);
      }
      else
      {
        *((_QWORD *)v76 + 286) = v152;
        v76[2296] = v71[2296];
        *((_QWORD *)v76 + 288) = *((_QWORD *)v71 + 288);
        v76[2312] = v71[2312];
        swift_bridgeObjectRetain(v152);
      }
      v153 = *((_QWORD *)v71 + 290);
      if (v153 == 1)
      {
        *((_OWORD *)v76 + 145) = *((_OWORD *)v71 + 145);
        *(_OWORD *)(v76 + 2329) = *(_OWORD *)(v71 + 2329);
      }
      else
      {
        *((_QWORD *)v76 + 290) = v153;
        v76[2328] = v71[2328];
        *((_QWORD *)v76 + 292) = *((_QWORD *)v71 + 292);
        v76[2344] = v71[2344];
        swift_bridgeObjectRetain(v153);
      }
      v154 = *((_QWORD *)v71 + 294);
      if (v154 == 1)
      {
        *((_OWORD *)v76 + 147) = *((_OWORD *)v71 + 147);
        *(_OWORD *)(v76 + 2361) = *(_OWORD *)(v71 + 2361);
      }
      else
      {
        *((_QWORD *)v76 + 294) = v154;
        v76[2360] = v71[2360];
        *((_QWORD *)v76 + 296) = *((_QWORD *)v71 + 296);
        v76[2376] = v71[2376];
        swift_bridgeObjectRetain(v154);
      }
      v155 = *((_QWORD *)v71 + 298);
      if (v155 == 1)
      {
        *((_OWORD *)v76 + 149) = *((_OWORD *)v71 + 149);
        *(_OWORD *)(v76 + 2393) = *(_OWORD *)(v71 + 2393);
      }
      else
      {
        *((_QWORD *)v76 + 298) = v155;
        v76[2392] = v71[2392];
        *((_QWORD *)v76 + 300) = *((_QWORD *)v71 + 300);
        v76[2408] = v71[2408];
        swift_bridgeObjectRetain(v155);
      }
      v156 = *((_QWORD *)v71 + 302);
      if (v156 == 1)
      {
        *((_OWORD *)v76 + 151) = *((_OWORD *)v71 + 151);
        *(_OWORD *)(v76 + 2425) = *(_OWORD *)(v71 + 2425);
      }
      else
      {
        *((_QWORD *)v76 + 302) = v156;
        v76[2424] = v71[2424];
        *((_QWORD *)v76 + 304) = *((_QWORD *)v71 + 304);
        v76[2440] = v71[2440];
        swift_bridgeObjectRetain(v156);
      }
      *((_OWORD *)v76 + 153) = *((_OWORD *)v71 + 153);
      v76[2464] = v71[2464];
      v76[2488] = v71[2488];
      *(_OWORD *)(v76 + 2472) = *(_OWORD *)(v71 + 2472);
      *(_DWORD *)(v76 + 2489) = *(_DWORD *)(v71 + 2489);
      *(_WORD *)(v76 + 2493) = *(_WORD *)(v71 + 2493);
      v76[2495] = v71[2495];
      *((_QWORD *)v76 + 312) = v132;
      v157 = *((_QWORD *)v71 + 313);
      *((_QWORD *)v76 + 313) = v157;
      swift_bridgeObjectRetain(v132);
      swift_bridgeObjectRetain(v157);
    }
    v158 = v76 + 2512;
    v159 = (uint64_t *)(v71 + 2512);
    v160 = *((_QWORD *)v71 + 416);
    if (v160 == 1)
    {
      memcpy(v158, v159, 0x340uLL);
    }
    else
    {
      v161 = *v159;
      if (*v159 == 1)
      {
        *v158 = *(_OWORD *)v159;
        *(_OWORD *)(v76 + 2521) = *(_OWORD *)(v71 + 2521);
      }
      else
      {
        *((_QWORD *)v76 + 314) = v161;
        v76[2520] = v71[2520];
        *((_QWORD *)v76 + 316) = *((_QWORD *)v71 + 316);
        v76[2536] = v71[2536];
        swift_bridgeObjectRetain(v161);
      }
      v162 = *((_QWORD *)v71 + 318);
      if (v162 == 1)
      {
        *((_OWORD *)v76 + 159) = *((_OWORD *)v71 + 159);
        *(_OWORD *)(v76 + 2553) = *(_OWORD *)(v71 + 2553);
      }
      else
      {
        *((_QWORD *)v76 + 318) = v162;
        v76[2552] = v71[2552];
        *((_QWORD *)v76 + 320) = *((_QWORD *)v71 + 320);
        v76[2568] = v71[2568];
        swift_bridgeObjectRetain(v162);
      }
      v163 = *((_QWORD *)v71 + 322);
      if (v163 == 1)
      {
        *((_OWORD *)v76 + 161) = *((_OWORD *)v71 + 161);
        *(_OWORD *)(v76 + 2585) = *(_OWORD *)(v71 + 2585);
      }
      else
      {
        *((_QWORD *)v76 + 322) = v163;
        v76[2584] = v71[2584];
        *((_QWORD *)v76 + 324) = *((_QWORD *)v71 + 324);
        v76[2600] = v71[2600];
        swift_bridgeObjectRetain(v163);
      }
      v164 = *((_QWORD *)v71 + 326);
      if (v164 == 1)
      {
        *((_OWORD *)v76 + 163) = *((_OWORD *)v71 + 163);
        *(_OWORD *)(v76 + 2617) = *(_OWORD *)(v71 + 2617);
      }
      else
      {
        *((_QWORD *)v76 + 326) = v164;
        v76[2616] = v71[2616];
        *((_QWORD *)v76 + 328) = *((_QWORD *)v71 + 328);
        v76[2632] = v71[2632];
        swift_bridgeObjectRetain(v164);
      }
      v165 = *((_QWORD *)v71 + 330);
      if (v165 == 1)
      {
        *((_OWORD *)v76 + 165) = *((_OWORD *)v71 + 165);
        *(_OWORD *)(v76 + 2649) = *(_OWORD *)(v71 + 2649);
      }
      else
      {
        *((_QWORD *)v76 + 330) = v165;
        v76[2648] = v71[2648];
        *((_QWORD *)v76 + 332) = *((_QWORD *)v71 + 332);
        v76[2664] = v71[2664];
        swift_bridgeObjectRetain(v165);
      }
      v166 = *((_QWORD *)v71 + 334);
      if (v166 == 1)
      {
        *((_OWORD *)v76 + 167) = *((_OWORD *)v71 + 167);
        *(_OWORD *)(v76 + 2681) = *(_OWORD *)(v71 + 2681);
      }
      else
      {
        *((_QWORD *)v76 + 334) = v166;
        v76[2680] = v71[2680];
        *((_QWORD *)v76 + 336) = *((_QWORD *)v71 + 336);
        v76[2696] = v71[2696];
        swift_bridgeObjectRetain(v166);
      }
      v167 = *((_QWORD *)v71 + 338);
      if (v167 == 1)
      {
        *((_OWORD *)v76 + 169) = *((_OWORD *)v71 + 169);
        *(_OWORD *)(v76 + 2713) = *(_OWORD *)(v71 + 2713);
      }
      else
      {
        *((_QWORD *)v76 + 338) = v167;
        v76[2712] = v71[2712];
        *((_QWORD *)v76 + 340) = *((_QWORD *)v71 + 340);
        v76[2728] = v71[2728];
        swift_bridgeObjectRetain(v167);
      }
      v168 = *((_QWORD *)v71 + 342);
      if (v168 == 1)
      {
        *((_OWORD *)v76 + 171) = *((_OWORD *)v71 + 171);
        *(_OWORD *)(v76 + 2745) = *(_OWORD *)(v71 + 2745);
      }
      else
      {
        *((_QWORD *)v76 + 342) = v168;
        v76[2744] = v71[2744];
        *((_QWORD *)v76 + 344) = *((_QWORD *)v71 + 344);
        v76[2760] = v71[2760];
        swift_bridgeObjectRetain(v168);
      }
      v169 = *((_QWORD *)v71 + 346);
      if (v169 == 1)
      {
        *((_OWORD *)v76 + 173) = *((_OWORD *)v71 + 173);
        *(_OWORD *)(v76 + 2777) = *(_OWORD *)(v71 + 2777);
      }
      else
      {
        *((_QWORD *)v76 + 346) = v169;
        v76[2776] = v71[2776];
        *((_QWORD *)v76 + 348) = *((_QWORD *)v71 + 348);
        v76[2792] = v71[2792];
        swift_bridgeObjectRetain(v169);
      }
      v170 = *((_QWORD *)v71 + 350);
      if (v170 == 1)
      {
        *((_OWORD *)v76 + 175) = *((_OWORD *)v71 + 175);
        *(_OWORD *)(v76 + 2809) = *(_OWORD *)(v71 + 2809);
      }
      else
      {
        *((_QWORD *)v76 + 350) = v170;
        v76[2808] = v71[2808];
        *((_QWORD *)v76 + 352) = *((_QWORD *)v71 + 352);
        v76[2824] = v71[2824];
        swift_bridgeObjectRetain(v170);
      }
      v171 = *((_QWORD *)v71 + 354);
      if (v171 == 1)
      {
        *((_OWORD *)v76 + 177) = *((_OWORD *)v71 + 177);
        *(_OWORD *)(v76 + 2841) = *(_OWORD *)(v71 + 2841);
      }
      else
      {
        *((_QWORD *)v76 + 354) = v171;
        v76[2840] = v71[2840];
        *((_QWORD *)v76 + 356) = *((_QWORD *)v71 + 356);
        v76[2856] = v71[2856];
        swift_bridgeObjectRetain(v171);
      }
      v172 = *((_QWORD *)v71 + 358);
      if (v172 == 1)
      {
        *((_OWORD *)v76 + 179) = *((_OWORD *)v71 + 179);
        *(_OWORD *)(v76 + 2873) = *(_OWORD *)(v71 + 2873);
      }
      else
      {
        *((_QWORD *)v76 + 358) = v172;
        v76[2872] = v71[2872];
        *((_QWORD *)v76 + 360) = *((_QWORD *)v71 + 360);
        v76[2888] = v71[2888];
        swift_bridgeObjectRetain(v172);
      }
      v173 = *((_QWORD *)v71 + 362);
      if (v173 == 1)
      {
        *((_OWORD *)v76 + 181) = *((_OWORD *)v71 + 181);
        *(_OWORD *)(v76 + 2905) = *(_OWORD *)(v71 + 2905);
      }
      else
      {
        *((_QWORD *)v76 + 362) = v173;
        v76[2904] = v71[2904];
        *((_QWORD *)v76 + 364) = *((_QWORD *)v71 + 364);
        v76[2920] = v71[2920];
        swift_bridgeObjectRetain(v173);
      }
      v174 = *((_QWORD *)v71 + 366);
      if (v174 == 1)
      {
        *((_OWORD *)v76 + 183) = *((_OWORD *)v71 + 183);
        *(_OWORD *)(v76 + 2937) = *(_OWORD *)(v71 + 2937);
      }
      else
      {
        *((_QWORD *)v76 + 366) = v174;
        v76[2936] = v71[2936];
        *((_QWORD *)v76 + 368) = *((_QWORD *)v71 + 368);
        v76[2952] = v71[2952];
        swift_bridgeObjectRetain(v174);
      }
      v175 = *((_QWORD *)v71 + 370);
      if (v175 == 1)
      {
        *((_OWORD *)v76 + 185) = *((_OWORD *)v71 + 185);
        *(_OWORD *)(v76 + 2969) = *(_OWORD *)(v71 + 2969);
      }
      else
      {
        *((_QWORD *)v76 + 370) = v175;
        v76[2968] = v71[2968];
        *((_QWORD *)v76 + 372) = *((_QWORD *)v71 + 372);
        v76[2984] = v71[2984];
        swift_bridgeObjectRetain(v175);
      }
      v176 = *((_QWORD *)v71 + 374);
      if (v176 == 1)
      {
        *((_OWORD *)v76 + 187) = *((_OWORD *)v71 + 187);
        *(_OWORD *)(v76 + 3001) = *(_OWORD *)(v71 + 3001);
      }
      else
      {
        *((_QWORD *)v76 + 374) = v176;
        v76[3000] = v71[3000];
        *((_QWORD *)v76 + 376) = *((_QWORD *)v71 + 376);
        v76[3016] = v71[3016];
        swift_bridgeObjectRetain(v176);
      }
      v177 = *((_QWORD *)v71 + 378);
      if (v177 == 1)
      {
        *((_OWORD *)v76 + 189) = *((_OWORD *)v71 + 189);
        *(_OWORD *)(v76 + 3033) = *(_OWORD *)(v71 + 3033);
      }
      else
      {
        *((_QWORD *)v76 + 378) = v177;
        v76[3032] = v71[3032];
        *((_QWORD *)v76 + 380) = *((_QWORD *)v71 + 380);
        v76[3048] = v71[3048];
        swift_bridgeObjectRetain(v177);
      }
      v178 = *((_QWORD *)v71 + 382);
      if (v178 == 1)
      {
        *((_OWORD *)v76 + 191) = *((_OWORD *)v71 + 191);
        *(_OWORD *)(v76 + 3065) = *(_OWORD *)(v71 + 3065);
      }
      else
      {
        *((_QWORD *)v76 + 382) = v178;
        v76[3064] = v71[3064];
        *((_QWORD *)v76 + 384) = *((_QWORD *)v71 + 384);
        v76[3080] = v71[3080];
        swift_bridgeObjectRetain(v178);
      }
      v179 = *((_QWORD *)v71 + 386);
      if (v179 == 1)
      {
        *((_OWORD *)v76 + 193) = *((_OWORD *)v71 + 193);
        *(_OWORD *)(v76 + 3097) = *(_OWORD *)(v71 + 3097);
      }
      else
      {
        *((_QWORD *)v76 + 386) = v179;
        v76[3096] = v71[3096];
        *((_QWORD *)v76 + 388) = *((_QWORD *)v71 + 388);
        v76[3112] = v71[3112];
        swift_bridgeObjectRetain(v179);
      }
      v180 = *((_QWORD *)v71 + 390);
      if (v180 == 1)
      {
        *((_OWORD *)v76 + 195) = *((_OWORD *)v71 + 195);
        *(_OWORD *)(v76 + 3129) = *(_OWORD *)(v71 + 3129);
      }
      else
      {
        *((_QWORD *)v76 + 390) = v180;
        v76[3128] = v71[3128];
        *((_QWORD *)v76 + 392) = *((_QWORD *)v71 + 392);
        v76[3144] = v71[3144];
        swift_bridgeObjectRetain(v180);
      }
      v181 = *((_QWORD *)v71 + 394);
      if (v181 == 1)
      {
        *((_OWORD *)v76 + 197) = *((_OWORD *)v71 + 197);
        *(_OWORD *)(v76 + 3161) = *(_OWORD *)(v71 + 3161);
      }
      else
      {
        *((_QWORD *)v76 + 394) = v181;
        v76[3160] = v71[3160];
        *((_QWORD *)v76 + 396) = *((_QWORD *)v71 + 396);
        v76[3176] = v71[3176];
        swift_bridgeObjectRetain(v181);
      }
      v182 = *((_QWORD *)v71 + 398);
      if (v182 == 1)
      {
        *((_OWORD *)v76 + 199) = *((_OWORD *)v71 + 199);
        *(_OWORD *)(v76 + 3193) = *(_OWORD *)(v71 + 3193);
      }
      else
      {
        *((_QWORD *)v76 + 398) = v182;
        v76[3192] = v71[3192];
        *((_QWORD *)v76 + 400) = *((_QWORD *)v71 + 400);
        v76[3208] = v71[3208];
        swift_bridgeObjectRetain(v182);
      }
      v183 = *((_QWORD *)v71 + 402);
      if (v183 == 1)
      {
        *((_OWORD *)v76 + 201) = *((_OWORD *)v71 + 201);
        *(_OWORD *)(v76 + 3225) = *(_OWORD *)(v71 + 3225);
      }
      else
      {
        *((_QWORD *)v76 + 402) = v183;
        v76[3224] = v71[3224];
        *((_QWORD *)v76 + 404) = *((_QWORD *)v71 + 404);
        v76[3240] = v71[3240];
        swift_bridgeObjectRetain(v183);
      }
      v184 = *((_QWORD *)v71 + 406);
      if (v184 == 1)
      {
        *((_OWORD *)v76 + 203) = *((_OWORD *)v71 + 203);
        *(_OWORD *)(v76 + 3257) = *(_OWORD *)(v71 + 3257);
      }
      else
      {
        *((_QWORD *)v76 + 406) = v184;
        v76[3256] = v71[3256];
        *((_QWORD *)v76 + 408) = *((_QWORD *)v71 + 408);
        v76[3272] = v71[3272];
        swift_bridgeObjectRetain(v184);
      }
      *((_OWORD *)v76 + 205) = *((_OWORD *)v71 + 205);
      v76[3296] = v71[3296];
      v76[3320] = v71[3320];
      *(_OWORD *)(v76 + 3304) = *(_OWORD *)(v71 + 3304);
      *(_DWORD *)(v76 + 3321) = *(_DWORD *)(v71 + 3321);
      *(_WORD *)(v76 + 3325) = *(_WORD *)(v71 + 3325);
      v76[3327] = v71[3327];
      *((_QWORD *)v76 + 416) = v160;
      v185 = *((_QWORD *)v71 + 417);
      *((_QWORD *)v76 + 417) = v185;
      swift_bridgeObjectRetain(v160);
      swift_bridgeObjectRetain(v185);
    }
    v186 = v76 + 3344;
    v187 = (uint64_t *)(v71 + 3344);
    v188 = *((_QWORD *)v71 + 520);
    if (v188 == 1)
    {
      memcpy(v186, v187, 0x340uLL);
    }
    else
    {
      v189 = *v187;
      if (*v187 == 1)
      {
        *v186 = *(_OWORD *)v187;
        *(_OWORD *)(v76 + 3353) = *(_OWORD *)(v71 + 3353);
      }
      else
      {
        *((_QWORD *)v76 + 418) = v189;
        v76[3352] = v71[3352];
        *((_QWORD *)v76 + 420) = *((_QWORD *)v71 + 420);
        v76[3368] = v71[3368];
        swift_bridgeObjectRetain(v189);
      }
      v190 = *((_QWORD *)v71 + 422);
      if (v190 == 1)
      {
        *((_OWORD *)v76 + 211) = *((_OWORD *)v71 + 211);
        *(_OWORD *)(v76 + 3385) = *(_OWORD *)(v71 + 3385);
      }
      else
      {
        *((_QWORD *)v76 + 422) = v190;
        v76[3384] = v71[3384];
        *((_QWORD *)v76 + 424) = *((_QWORD *)v71 + 424);
        v76[3400] = v71[3400];
        swift_bridgeObjectRetain(v190);
      }
      v191 = *((_QWORD *)v71 + 426);
      if (v191 == 1)
      {
        *((_OWORD *)v76 + 213) = *((_OWORD *)v71 + 213);
        *(_OWORD *)(v76 + 3417) = *(_OWORD *)(v71 + 3417);
      }
      else
      {
        *((_QWORD *)v76 + 426) = v191;
        v76[3416] = v71[3416];
        *((_QWORD *)v76 + 428) = *((_QWORD *)v71 + 428);
        v76[3432] = v71[3432];
        swift_bridgeObjectRetain(v191);
      }
      v192 = *((_QWORD *)v71 + 430);
      if (v192 == 1)
      {
        *((_OWORD *)v76 + 215) = *((_OWORD *)v71 + 215);
        *(_OWORD *)(v76 + 3449) = *(_OWORD *)(v71 + 3449);
      }
      else
      {
        *((_QWORD *)v76 + 430) = v192;
        v76[3448] = v71[3448];
        *((_QWORD *)v76 + 432) = *((_QWORD *)v71 + 432);
        v76[3464] = v71[3464];
        swift_bridgeObjectRetain(v192);
      }
      v193 = *((_QWORD *)v71 + 434);
      if (v193 == 1)
      {
        *((_OWORD *)v76 + 217) = *((_OWORD *)v71 + 217);
        *(_OWORD *)(v76 + 3481) = *(_OWORD *)(v71 + 3481);
      }
      else
      {
        *((_QWORD *)v76 + 434) = v193;
        v76[3480] = v71[3480];
        *((_QWORD *)v76 + 436) = *((_QWORD *)v71 + 436);
        v76[3496] = v71[3496];
        swift_bridgeObjectRetain(v193);
      }
      v194 = *((_QWORD *)v71 + 438);
      if (v194 == 1)
      {
        *((_OWORD *)v76 + 219) = *((_OWORD *)v71 + 219);
        *(_OWORD *)(v76 + 3513) = *(_OWORD *)(v71 + 3513);
      }
      else
      {
        *((_QWORD *)v76 + 438) = v194;
        v76[3512] = v71[3512];
        *((_QWORD *)v76 + 440) = *((_QWORD *)v71 + 440);
        v76[3528] = v71[3528];
        swift_bridgeObjectRetain(v194);
      }
      v195 = *((_QWORD *)v71 + 442);
      if (v195 == 1)
      {
        *((_OWORD *)v76 + 221) = *((_OWORD *)v71 + 221);
        *(_OWORD *)(v76 + 3545) = *(_OWORD *)(v71 + 3545);
      }
      else
      {
        *((_QWORD *)v76 + 442) = v195;
        v76[3544] = v71[3544];
        *((_QWORD *)v76 + 444) = *((_QWORD *)v71 + 444);
        v76[3560] = v71[3560];
        swift_bridgeObjectRetain(v195);
      }
      v196 = *((_QWORD *)v71 + 446);
      if (v196 == 1)
      {
        *((_OWORD *)v76 + 223) = *((_OWORD *)v71 + 223);
        *(_OWORD *)(v76 + 3577) = *(_OWORD *)(v71 + 3577);
      }
      else
      {
        *((_QWORD *)v76 + 446) = v196;
        v76[3576] = v71[3576];
        *((_QWORD *)v76 + 448) = *((_QWORD *)v71 + 448);
        v76[3592] = v71[3592];
        swift_bridgeObjectRetain(v196);
      }
      v197 = *((_QWORD *)v71 + 450);
      if (v197 == 1)
      {
        *((_OWORD *)v76 + 225) = *((_OWORD *)v71 + 225);
        *(_OWORD *)(v76 + 3609) = *(_OWORD *)(v71 + 3609);
      }
      else
      {
        *((_QWORD *)v76 + 450) = v197;
        v76[3608] = v71[3608];
        *((_QWORD *)v76 + 452) = *((_QWORD *)v71 + 452);
        v76[3624] = v71[3624];
        swift_bridgeObjectRetain(v197);
      }
      v198 = *((_QWORD *)v71 + 454);
      if (v198 == 1)
      {
        *((_OWORD *)v76 + 227) = *((_OWORD *)v71 + 227);
        *(_OWORD *)(v76 + 3641) = *(_OWORD *)(v71 + 3641);
      }
      else
      {
        *((_QWORD *)v76 + 454) = v198;
        v76[3640] = v71[3640];
        *((_QWORD *)v76 + 456) = *((_QWORD *)v71 + 456);
        v76[3656] = v71[3656];
        swift_bridgeObjectRetain(v198);
      }
      v199 = *((_QWORD *)v71 + 458);
      if (v199 == 1)
      {
        *((_OWORD *)v76 + 229) = *((_OWORD *)v71 + 229);
        *(_OWORD *)(v76 + 3673) = *(_OWORD *)(v71 + 3673);
      }
      else
      {
        *((_QWORD *)v76 + 458) = v199;
        v76[3672] = v71[3672];
        *((_QWORD *)v76 + 460) = *((_QWORD *)v71 + 460);
        v76[3688] = v71[3688];
        swift_bridgeObjectRetain(v199);
      }
      v200 = *((_QWORD *)v71 + 462);
      if (v200 == 1)
      {
        *((_OWORD *)v76 + 231) = *((_OWORD *)v71 + 231);
        *(_OWORD *)(v76 + 3705) = *(_OWORD *)(v71 + 3705);
      }
      else
      {
        *((_QWORD *)v76 + 462) = v200;
        v76[3704] = v71[3704];
        *((_QWORD *)v76 + 464) = *((_QWORD *)v71 + 464);
        v76[3720] = v71[3720];
        swift_bridgeObjectRetain(v200);
      }
      v201 = *((_QWORD *)v71 + 466);
      if (v201 == 1)
      {
        *((_OWORD *)v76 + 233) = *((_OWORD *)v71 + 233);
        *(_OWORD *)(v76 + 3737) = *(_OWORD *)(v71 + 3737);
      }
      else
      {
        *((_QWORD *)v76 + 466) = v201;
        v76[3736] = v71[3736];
        *((_QWORD *)v76 + 468) = *((_QWORD *)v71 + 468);
        v76[3752] = v71[3752];
        swift_bridgeObjectRetain(v201);
      }
      v202 = *((_QWORD *)v71 + 470);
      if (v202 == 1)
      {
        *((_OWORD *)v76 + 235) = *((_OWORD *)v71 + 235);
        *(_OWORD *)(v76 + 3769) = *(_OWORD *)(v71 + 3769);
      }
      else
      {
        *((_QWORD *)v76 + 470) = v202;
        v76[3768] = v71[3768];
        *((_QWORD *)v76 + 472) = *((_QWORD *)v71 + 472);
        v76[3784] = v71[3784];
        swift_bridgeObjectRetain(v202);
      }
      v203 = *((_QWORD *)v71 + 474);
      if (v203 == 1)
      {
        *((_OWORD *)v76 + 237) = *((_OWORD *)v71 + 237);
        *(_OWORD *)(v76 + 3801) = *(_OWORD *)(v71 + 3801);
      }
      else
      {
        *((_QWORD *)v76 + 474) = v203;
        v76[3800] = v71[3800];
        *((_QWORD *)v76 + 476) = *((_QWORD *)v71 + 476);
        v76[3816] = v71[3816];
        swift_bridgeObjectRetain(v203);
      }
      v204 = *((_QWORD *)v71 + 478);
      if (v204 == 1)
      {
        *((_OWORD *)v76 + 239) = *((_OWORD *)v71 + 239);
        *(_OWORD *)(v76 + 3833) = *(_OWORD *)(v71 + 3833);
      }
      else
      {
        *((_QWORD *)v76 + 478) = v204;
        v76[3832] = v71[3832];
        *((_QWORD *)v76 + 480) = *((_QWORD *)v71 + 480);
        v76[3848] = v71[3848];
        swift_bridgeObjectRetain(v204);
      }
      v205 = *((_QWORD *)v71 + 482);
      if (v205 == 1)
      {
        *((_OWORD *)v76 + 241) = *((_OWORD *)v71 + 241);
        *(_OWORD *)(v76 + 3865) = *(_OWORD *)(v71 + 3865);
      }
      else
      {
        *((_QWORD *)v76 + 482) = v205;
        v76[3864] = v71[3864];
        *((_QWORD *)v76 + 484) = *((_QWORD *)v71 + 484);
        v76[3880] = v71[3880];
        swift_bridgeObjectRetain(v205);
      }
      v206 = *((_QWORD *)v71 + 486);
      if (v206 == 1)
      {
        *((_OWORD *)v76 + 243) = *((_OWORD *)v71 + 243);
        *(_OWORD *)(v76 + 3897) = *(_OWORD *)(v71 + 3897);
      }
      else
      {
        *((_QWORD *)v76 + 486) = v206;
        v76[3896] = v71[3896];
        *((_QWORD *)v76 + 488) = *((_QWORD *)v71 + 488);
        v76[3912] = v71[3912];
        swift_bridgeObjectRetain(v206);
      }
      v207 = *((_QWORD *)v71 + 490);
      if (v207 == 1)
      {
        *((_OWORD *)v76 + 245) = *((_OWORD *)v71 + 245);
        *(_OWORD *)(v76 + 3929) = *(_OWORD *)(v71 + 3929);
      }
      else
      {
        *((_QWORD *)v76 + 490) = v207;
        v76[3928] = v71[3928];
        *((_QWORD *)v76 + 492) = *((_QWORD *)v71 + 492);
        v76[3944] = v71[3944];
        swift_bridgeObjectRetain(v207);
      }
      v208 = *((_QWORD *)v71 + 494);
      if (v208 == 1)
      {
        *((_OWORD *)v76 + 247) = *((_OWORD *)v71 + 247);
        *(_OWORD *)(v76 + 3961) = *(_OWORD *)(v71 + 3961);
      }
      else
      {
        *((_QWORD *)v76 + 494) = v208;
        v76[3960] = v71[3960];
        *((_QWORD *)v76 + 496) = *((_QWORD *)v71 + 496);
        v76[3976] = v71[3976];
        swift_bridgeObjectRetain(v208);
      }
      v209 = *((_QWORD *)v71 + 498);
      if (v209 == 1)
      {
        *((_OWORD *)v76 + 249) = *((_OWORD *)v71 + 249);
        *(_OWORD *)(v76 + 3993) = *(_OWORD *)(v71 + 3993);
      }
      else
      {
        *((_QWORD *)v76 + 498) = v209;
        v76[3992] = v71[3992];
        *((_QWORD *)v76 + 500) = *((_QWORD *)v71 + 500);
        v76[4008] = v71[4008];
        swift_bridgeObjectRetain(v209);
      }
      v210 = *((_QWORD *)v71 + 502);
      if (v210 == 1)
      {
        *((_OWORD *)v76 + 251) = *((_OWORD *)v71 + 251);
        *(_OWORD *)(v76 + 4025) = *(_OWORD *)(v71 + 4025);
      }
      else
      {
        *((_QWORD *)v76 + 502) = v210;
        v76[4024] = v71[4024];
        *((_QWORD *)v76 + 504) = *((_QWORD *)v71 + 504);
        v76[4040] = v71[4040];
        swift_bridgeObjectRetain(v210);
      }
      v211 = *((_QWORD *)v71 + 506);
      if (v211 == 1)
      {
        *((_OWORD *)v76 + 253) = *((_OWORD *)v71 + 253);
        *(_OWORD *)(v76 + 4057) = *(_OWORD *)(v71 + 4057);
      }
      else
      {
        *((_QWORD *)v76 + 506) = v211;
        v76[4056] = v71[4056];
        *((_QWORD *)v76 + 508) = *((_QWORD *)v71 + 508);
        v76[4072] = v71[4072];
        swift_bridgeObjectRetain(v211);
      }
      v212 = *((_QWORD *)v71 + 510);
      if (v212 == 1)
      {
        *((_OWORD *)v76 + 255) = *((_OWORD *)v71 + 255);
        *(_OWORD *)(v76 + 4089) = *(_OWORD *)(v71 + 4089);
      }
      else
      {
        *((_QWORD *)v76 + 510) = v212;
        v76[4088] = v71[4088];
        v76[4104] = v71[4104];
        *((_QWORD *)v76 + 512) = *((_QWORD *)v71 + 512);
        swift_bridgeObjectRetain(v212);
      }
      *((_OWORD *)v76 + 257) = *((_OWORD *)v71 + 257);
      v76[4128] = v71[4128];
      *(_OWORD *)(v76 + 4136) = *(_OWORD *)(v71 + 4136);
      v76[4152] = v71[4152];
      *(_DWORD *)(v76 + 4153) = *(_DWORD *)(v71 + 4153);
      *(_WORD *)(v76 + 4157) = *(_WORD *)(v71 + 4157);
      v76[4159] = v71[4159];
      *((_QWORD *)v76 + 520) = v188;
      v213 = *((_QWORD *)v71 + 521);
      *((_QWORD *)v76 + 521) = v213;
      swift_bridgeObjectRetain(v188);
      swift_bridgeObjectRetain(v213);
    }
    v214 = v76 + 4176;
    v215 = (uint64_t *)(v71 + 4176);
    v216 = *((_QWORD *)v71 + 624);
    if (v216 == 1)
    {
      memcpy(v214, v215, 0x340uLL);
    }
    else
    {
      v217 = *v215;
      if (*v215 == 1)
      {
        *v214 = *(_OWORD *)v215;
        *(_OWORD *)(v76 + 4185) = *(_OWORD *)(v71 + 4185);
      }
      else
      {
        *((_QWORD *)v76 + 522) = v217;
        v76[4184] = v71[4184];
        *((_QWORD *)v76 + 524) = *((_QWORD *)v71 + 524);
        v76[4200] = v71[4200];
        swift_bridgeObjectRetain(v217);
      }
      v218 = *((_QWORD *)v71 + 526);
      if (v218 == 1)
      {
        *((_OWORD *)v76 + 263) = *((_OWORD *)v71 + 263);
        *(_OWORD *)(v76 + 4217) = *(_OWORD *)(v71 + 4217);
      }
      else
      {
        *((_QWORD *)v76 + 526) = v218;
        v76[4216] = v71[4216];
        *((_QWORD *)v76 + 528) = *((_QWORD *)v71 + 528);
        v76[4232] = v71[4232];
        swift_bridgeObjectRetain(v218);
      }
      v219 = *((_QWORD *)v71 + 530);
      if (v219 == 1)
      {
        *((_OWORD *)v76 + 265) = *((_OWORD *)v71 + 265);
        *(_OWORD *)(v76 + 4249) = *(_OWORD *)(v71 + 4249);
      }
      else
      {
        *((_QWORD *)v76 + 530) = v219;
        v76[4248] = v71[4248];
        *((_QWORD *)v76 + 532) = *((_QWORD *)v71 + 532);
        v76[4264] = v71[4264];
        swift_bridgeObjectRetain(v219);
      }
      v220 = *((_QWORD *)v71 + 534);
      if (v220 == 1)
      {
        *((_OWORD *)v76 + 267) = *((_OWORD *)v71 + 267);
        *(_OWORD *)(v76 + 4281) = *(_OWORD *)(v71 + 4281);
      }
      else
      {
        *((_QWORD *)v76 + 534) = v220;
        v76[4280] = v71[4280];
        *((_QWORD *)v76 + 536) = *((_QWORD *)v71 + 536);
        v76[4296] = v71[4296];
        swift_bridgeObjectRetain(v220);
      }
      v221 = *((_QWORD *)v71 + 538);
      if (v221 == 1)
      {
        *((_OWORD *)v76 + 269) = *((_OWORD *)v71 + 269);
        *(_OWORD *)(v76 + 4313) = *(_OWORD *)(v71 + 4313);
      }
      else
      {
        *((_QWORD *)v76 + 538) = v221;
        v76[4312] = v71[4312];
        *((_QWORD *)v76 + 540) = *((_QWORD *)v71 + 540);
        v76[4328] = v71[4328];
        swift_bridgeObjectRetain(v221);
      }
      v222 = *((_QWORD *)v71 + 542);
      if (v222 == 1)
      {
        *((_OWORD *)v76 + 271) = *((_OWORD *)v71 + 271);
        *(_OWORD *)(v76 + 4345) = *(_OWORD *)(v71 + 4345);
      }
      else
      {
        *((_QWORD *)v76 + 542) = v222;
        v76[4344] = v71[4344];
        *((_QWORD *)v76 + 544) = *((_QWORD *)v71 + 544);
        v76[4360] = v71[4360];
        swift_bridgeObjectRetain(v222);
      }
      v223 = *((_QWORD *)v71 + 546);
      if (v223 == 1)
      {
        *((_OWORD *)v76 + 273) = *((_OWORD *)v71 + 273);
        *(_OWORD *)(v76 + 4377) = *(_OWORD *)(v71 + 4377);
      }
      else
      {
        *((_QWORD *)v76 + 546) = v223;
        v76[4376] = v71[4376];
        *((_QWORD *)v76 + 548) = *((_QWORD *)v71 + 548);
        v76[4392] = v71[4392];
        swift_bridgeObjectRetain(v223);
      }
      v224 = *((_QWORD *)v71 + 550);
      if (v224 == 1)
      {
        *((_OWORD *)v76 + 275) = *((_OWORD *)v71 + 275);
        *(_OWORD *)(v76 + 4409) = *(_OWORD *)(v71 + 4409);
      }
      else
      {
        *((_QWORD *)v76 + 550) = v224;
        v76[4408] = v71[4408];
        *((_QWORD *)v76 + 552) = *((_QWORD *)v71 + 552);
        v76[4424] = v71[4424];
        swift_bridgeObjectRetain(v224);
      }
      v225 = *((_QWORD *)v71 + 554);
      if (v225 == 1)
      {
        *((_OWORD *)v76 + 277) = *((_OWORD *)v71 + 277);
        *(_OWORD *)(v76 + 4441) = *(_OWORD *)(v71 + 4441);
      }
      else
      {
        *((_QWORD *)v76 + 554) = v225;
        v76[4440] = v71[4440];
        *((_QWORD *)v76 + 556) = *((_QWORD *)v71 + 556);
        v76[4456] = v71[4456];
        swift_bridgeObjectRetain(v225);
      }
      v226 = *((_QWORD *)v71 + 558);
      if (v226 == 1)
      {
        *((_OWORD *)v76 + 279) = *((_OWORD *)v71 + 279);
        *(_OWORD *)(v76 + 4473) = *(_OWORD *)(v71 + 4473);
      }
      else
      {
        *((_QWORD *)v76 + 558) = v226;
        v76[4472] = v71[4472];
        *((_QWORD *)v76 + 560) = *((_QWORD *)v71 + 560);
        v76[4488] = v71[4488];
        swift_bridgeObjectRetain(v226);
      }
      v227 = *((_QWORD *)v71 + 562);
      if (v227 == 1)
      {
        *((_OWORD *)v76 + 281) = *((_OWORD *)v71 + 281);
        *(_OWORD *)(v76 + 4505) = *(_OWORD *)(v71 + 4505);
      }
      else
      {
        *((_QWORD *)v76 + 562) = v227;
        v76[4504] = v71[4504];
        *((_QWORD *)v76 + 564) = *((_QWORD *)v71 + 564);
        v76[4520] = v71[4520];
        swift_bridgeObjectRetain(v227);
      }
      v228 = *((_QWORD *)v71 + 566);
      if (v228 == 1)
      {
        *((_OWORD *)v76 + 283) = *((_OWORD *)v71 + 283);
        *(_OWORD *)(v76 + 4537) = *(_OWORD *)(v71 + 4537);
      }
      else
      {
        *((_QWORD *)v76 + 566) = v228;
        v76[4536] = v71[4536];
        *((_QWORD *)v76 + 568) = *((_QWORD *)v71 + 568);
        v76[4552] = v71[4552];
        swift_bridgeObjectRetain(v228);
      }
      v229 = *((_QWORD *)v71 + 570);
      if (v229 == 1)
      {
        *((_OWORD *)v76 + 285) = *((_OWORD *)v71 + 285);
        *(_OWORD *)(v76 + 4569) = *(_OWORD *)(v71 + 4569);
      }
      else
      {
        *((_QWORD *)v76 + 570) = v229;
        v76[4568] = v71[4568];
        *((_QWORD *)v76 + 572) = *((_QWORD *)v71 + 572);
        v76[4584] = v71[4584];
        swift_bridgeObjectRetain(v229);
      }
      v230 = *((_QWORD *)v71 + 574);
      if (v230 == 1)
      {
        *((_OWORD *)v76 + 287) = *((_OWORD *)v71 + 287);
        *(_OWORD *)(v76 + 4601) = *(_OWORD *)(v71 + 4601);
      }
      else
      {
        *((_QWORD *)v76 + 574) = v230;
        v76[4600] = v71[4600];
        *((_QWORD *)v76 + 576) = *((_QWORD *)v71 + 576);
        v76[4616] = v71[4616];
        swift_bridgeObjectRetain(v230);
      }
      v231 = *((_QWORD *)v71 + 578);
      if (v231 == 1)
      {
        *((_OWORD *)v76 + 289) = *((_OWORD *)v71 + 289);
        *(_OWORD *)(v76 + 4633) = *(_OWORD *)(v71 + 4633);
      }
      else
      {
        *((_QWORD *)v76 + 578) = v231;
        v76[4632] = v71[4632];
        *((_QWORD *)v76 + 580) = *((_QWORD *)v71 + 580);
        v76[4648] = v71[4648];
        swift_bridgeObjectRetain(v231);
      }
      v232 = *((_QWORD *)v71 + 582);
      if (v232 == 1)
      {
        *((_OWORD *)v76 + 291) = *((_OWORD *)v71 + 291);
        *(_OWORD *)(v76 + 4665) = *(_OWORD *)(v71 + 4665);
      }
      else
      {
        *((_QWORD *)v76 + 582) = v232;
        v76[4664] = v71[4664];
        *((_QWORD *)v76 + 584) = *((_QWORD *)v71 + 584);
        v76[4680] = v71[4680];
        swift_bridgeObjectRetain(v232);
      }
      v233 = *((_QWORD *)v71 + 586);
      if (v233 == 1)
      {
        *((_OWORD *)v76 + 293) = *((_OWORD *)v71 + 293);
        *(_OWORD *)(v76 + 4697) = *(_OWORD *)(v71 + 4697);
      }
      else
      {
        *((_QWORD *)v76 + 586) = v233;
        v76[4696] = v71[4696];
        *((_QWORD *)v76 + 588) = *((_QWORD *)v71 + 588);
        v76[4712] = v71[4712];
        swift_bridgeObjectRetain(v233);
      }
      v234 = *((_QWORD *)v71 + 590);
      if (v234 == 1)
      {
        *((_OWORD *)v76 + 295) = *((_OWORD *)v71 + 295);
        *(_OWORD *)(v76 + 4729) = *(_OWORD *)(v71 + 4729);
      }
      else
      {
        *((_QWORD *)v76 + 590) = v234;
        v76[4728] = v71[4728];
        *((_QWORD *)v76 + 592) = *((_QWORD *)v71 + 592);
        v76[4744] = v71[4744];
        swift_bridgeObjectRetain(v234);
      }
      v235 = *((_QWORD *)v71 + 594);
      if (v235 == 1)
      {
        *((_OWORD *)v76 + 297) = *((_OWORD *)v71 + 297);
        *(_OWORD *)(v76 + 4761) = *(_OWORD *)(v71 + 4761);
      }
      else
      {
        *((_QWORD *)v76 + 594) = v235;
        v76[4760] = v71[4760];
        *((_QWORD *)v76 + 596) = *((_QWORD *)v71 + 596);
        v76[4776] = v71[4776];
        swift_bridgeObjectRetain(v235);
      }
      v236 = *((_QWORD *)v71 + 598);
      if (v236 == 1)
      {
        *((_OWORD *)v76 + 299) = *((_OWORD *)v71 + 299);
        *(_OWORD *)(v76 + 4793) = *(_OWORD *)(v71 + 4793);
      }
      else
      {
        *((_QWORD *)v76 + 598) = v236;
        v76[4792] = v71[4792];
        *((_QWORD *)v76 + 600) = *((_QWORD *)v71 + 600);
        v76[4808] = v71[4808];
        swift_bridgeObjectRetain(v236);
      }
      v237 = *((_QWORD *)v71 + 602);
      if (v237 == 1)
      {
        *((_OWORD *)v76 + 301) = *((_OWORD *)v71 + 301);
        *(_OWORD *)(v76 + 4825) = *(_OWORD *)(v71 + 4825);
      }
      else
      {
        *((_QWORD *)v76 + 602) = v237;
        v76[4824] = v71[4824];
        *((_QWORD *)v76 + 604) = *((_QWORD *)v71 + 604);
        v76[4840] = v71[4840];
        swift_bridgeObjectRetain(v237);
      }
      v238 = *((_QWORD *)v71 + 606);
      if (v238 == 1)
      {
        *((_OWORD *)v76 + 303) = *((_OWORD *)v71 + 303);
        *(_OWORD *)(v76 + 4857) = *(_OWORD *)(v71 + 4857);
      }
      else
      {
        *((_QWORD *)v76 + 606) = v238;
        v76[4856] = v71[4856];
        *((_QWORD *)v76 + 608) = *((_QWORD *)v71 + 608);
        v76[4872] = v71[4872];
        swift_bridgeObjectRetain(v238);
      }
      v239 = *((_QWORD *)v71 + 610);
      if (v239 == 1)
      {
        *((_OWORD *)v76 + 305) = *((_OWORD *)v71 + 305);
        *(_OWORD *)(v76 + 4889) = *(_OWORD *)(v71 + 4889);
      }
      else
      {
        *((_QWORD *)v76 + 610) = v239;
        v76[4888] = v71[4888];
        *((_QWORD *)v76 + 612) = *((_QWORD *)v71 + 612);
        v76[4904] = v71[4904];
        swift_bridgeObjectRetain(v239);
      }
      v240 = *((_QWORD *)v71 + 614);
      if (v240 == 1)
      {
        *((_OWORD *)v76 + 307) = *((_OWORD *)v71 + 307);
        *(_OWORD *)(v76 + 4921) = *(_OWORD *)(v71 + 4921);
      }
      else
      {
        *((_QWORD *)v76 + 614) = v240;
        v76[4920] = v71[4920];
        *((_QWORD *)v76 + 616) = *((_QWORD *)v71 + 616);
        v76[4936] = v71[4936];
        swift_bridgeObjectRetain(v240);
      }
      *((_OWORD *)v76 + 309) = *((_OWORD *)v71 + 309);
      v76[4960] = v71[4960];
      *(_OWORD *)(v76 + 4968) = *(_OWORD *)(v71 + 4968);
      v76[4984] = v71[4984];
      *(_DWORD *)(v76 + 4985) = *(_DWORD *)(v71 + 4985);
      *(_WORD *)(v76 + 4989) = *(_WORD *)(v71 + 4989);
      v76[4991] = v71[4991];
      *((_QWORD *)v76 + 624) = v216;
      v241 = *((_QWORD *)v71 + 625);
      *((_QWORD *)v76 + 625) = v241;
      swift_bridgeObjectRetain(v216);
      swift_bridgeObjectRetain(v241);
    }
    v242 = v76 + 5008;
    v243 = (uint64_t *)(v71 + 5008);
    v244 = *((_QWORD *)v71 + 728);
    if (v244 == 1)
    {
      memcpy(v242, v243, 0x340uLL);
    }
    else
    {
      v245 = *v243;
      if (*v243 == 1)
      {
        *v242 = *(_OWORD *)v243;
        *(_OWORD *)(v76 + 5017) = *(_OWORD *)(v71 + 5017);
      }
      else
      {
        *((_QWORD *)v76 + 626) = v245;
        v76[5016] = v71[5016];
        *((_QWORD *)v76 + 628) = *((_QWORD *)v71 + 628);
        v76[5032] = v71[5032];
        swift_bridgeObjectRetain(v245);
      }
      v246 = *((_QWORD *)v71 + 630);
      if (v246 == 1)
      {
        *((_OWORD *)v76 + 315) = *((_OWORD *)v71 + 315);
        *(_OWORD *)(v76 + 5049) = *(_OWORD *)(v71 + 5049);
      }
      else
      {
        *((_QWORD *)v76 + 630) = v246;
        v76[5048] = v71[5048];
        *((_QWORD *)v76 + 632) = *((_QWORD *)v71 + 632);
        v76[5064] = v71[5064];
        swift_bridgeObjectRetain(v246);
      }
      v247 = *((_QWORD *)v71 + 634);
      if (v247 == 1)
      {
        *((_OWORD *)v76 + 317) = *((_OWORD *)v71 + 317);
        *(_OWORD *)(v76 + 5081) = *(_OWORD *)(v71 + 5081);
      }
      else
      {
        *((_QWORD *)v76 + 634) = v247;
        v76[5080] = v71[5080];
        *((_QWORD *)v76 + 636) = *((_QWORD *)v71 + 636);
        v76[5096] = v71[5096];
        swift_bridgeObjectRetain(v247);
      }
      v248 = *((_QWORD *)v71 + 638);
      if (v248 == 1)
      {
        *((_OWORD *)v76 + 319) = *((_OWORD *)v71 + 319);
        *(_OWORD *)(v76 + 5113) = *(_OWORD *)(v71 + 5113);
      }
      else
      {
        *((_QWORD *)v76 + 638) = v248;
        v76[5112] = v71[5112];
        *((_QWORD *)v76 + 640) = *((_QWORD *)v71 + 640);
        v76[5128] = v71[5128];
        swift_bridgeObjectRetain(v248);
      }
      v249 = *((_QWORD *)v71 + 642);
      if (v249 == 1)
      {
        *((_OWORD *)v76 + 321) = *((_OWORD *)v71 + 321);
        *(_OWORD *)(v76 + 5145) = *(_OWORD *)(v71 + 5145);
      }
      else
      {
        *((_QWORD *)v76 + 642) = v249;
        v76[5144] = v71[5144];
        *((_QWORD *)v76 + 644) = *((_QWORD *)v71 + 644);
        v76[5160] = v71[5160];
        swift_bridgeObjectRetain(v249);
      }
      v250 = *((_QWORD *)v71 + 646);
      if (v250 == 1)
      {
        *((_OWORD *)v76 + 323) = *((_OWORD *)v71 + 323);
        *(_OWORD *)(v76 + 5177) = *(_OWORD *)(v71 + 5177);
      }
      else
      {
        *((_QWORD *)v76 + 646) = v250;
        v76[5176] = v71[5176];
        *((_QWORD *)v76 + 648) = *((_QWORD *)v71 + 648);
        v76[5192] = v71[5192];
        swift_bridgeObjectRetain(v250);
      }
      v251 = *((_QWORD *)v71 + 650);
      if (v251 == 1)
      {
        *((_OWORD *)v76 + 325) = *((_OWORD *)v71 + 325);
        *(_OWORD *)(v76 + 5209) = *(_OWORD *)(v71 + 5209);
      }
      else
      {
        *((_QWORD *)v76 + 650) = v251;
        v76[5208] = v71[5208];
        *((_QWORD *)v76 + 652) = *((_QWORD *)v71 + 652);
        v76[5224] = v71[5224];
        swift_bridgeObjectRetain(v251);
      }
      v252 = *((_QWORD *)v71 + 654);
      if (v252 == 1)
      {
        *((_OWORD *)v76 + 327) = *((_OWORD *)v71 + 327);
        *(_OWORD *)(v76 + 5241) = *(_OWORD *)(v71 + 5241);
      }
      else
      {
        *((_QWORD *)v76 + 654) = v252;
        v76[5240] = v71[5240];
        *((_QWORD *)v76 + 656) = *((_QWORD *)v71 + 656);
        v76[5256] = v71[5256];
        swift_bridgeObjectRetain(v252);
      }
      v253 = *((_QWORD *)v71 + 658);
      if (v253 == 1)
      {
        *((_OWORD *)v76 + 329) = *((_OWORD *)v71 + 329);
        *(_OWORD *)(v76 + 5273) = *(_OWORD *)(v71 + 5273);
      }
      else
      {
        *((_QWORD *)v76 + 658) = v253;
        v76[5272] = v71[5272];
        *((_QWORD *)v76 + 660) = *((_QWORD *)v71 + 660);
        v76[5288] = v71[5288];
        swift_bridgeObjectRetain(v253);
      }
      v254 = *((_QWORD *)v71 + 662);
      if (v254 == 1)
      {
        *((_OWORD *)v76 + 331) = *((_OWORD *)v71 + 331);
        *(_OWORD *)(v76 + 5305) = *(_OWORD *)(v71 + 5305);
      }
      else
      {
        *((_QWORD *)v76 + 662) = v254;
        v76[5304] = v71[5304];
        *((_QWORD *)v76 + 664) = *((_QWORD *)v71 + 664);
        v76[5320] = v71[5320];
        swift_bridgeObjectRetain(v254);
      }
      v255 = *((_QWORD *)v71 + 666);
      if (v255 == 1)
      {
        *((_OWORD *)v76 + 333) = *((_OWORD *)v71 + 333);
        *(_OWORD *)(v76 + 5337) = *(_OWORD *)(v71 + 5337);
      }
      else
      {
        *((_QWORD *)v76 + 666) = v255;
        v76[5336] = v71[5336];
        *((_QWORD *)v76 + 668) = *((_QWORD *)v71 + 668);
        v76[5352] = v71[5352];
        swift_bridgeObjectRetain(v255);
      }
      v256 = *((_QWORD *)v71 + 670);
      if (v256 == 1)
      {
        *((_OWORD *)v76 + 335) = *((_OWORD *)v71 + 335);
        *(_OWORD *)(v76 + 5369) = *(_OWORD *)(v71 + 5369);
      }
      else
      {
        *((_QWORD *)v76 + 670) = v256;
        v76[5368] = v71[5368];
        *((_QWORD *)v76 + 672) = *((_QWORD *)v71 + 672);
        v76[5384] = v71[5384];
        swift_bridgeObjectRetain(v256);
      }
      v257 = *((_QWORD *)v71 + 674);
      if (v257 == 1)
      {
        *((_OWORD *)v76 + 337) = *((_OWORD *)v71 + 337);
        *(_OWORD *)(v76 + 5401) = *(_OWORD *)(v71 + 5401);
      }
      else
      {
        *((_QWORD *)v76 + 674) = v257;
        v76[5400] = v71[5400];
        *((_QWORD *)v76 + 676) = *((_QWORD *)v71 + 676);
        v76[5416] = v71[5416];
        swift_bridgeObjectRetain(v257);
      }
      v258 = *((_QWORD *)v71 + 678);
      if (v258 == 1)
      {
        *((_OWORD *)v76 + 339) = *((_OWORD *)v71 + 339);
        *(_OWORD *)(v76 + 5433) = *(_OWORD *)(v71 + 5433);
      }
      else
      {
        *((_QWORD *)v76 + 678) = v258;
        v76[5432] = v71[5432];
        *((_QWORD *)v76 + 680) = *((_QWORD *)v71 + 680);
        v76[5448] = v71[5448];
        swift_bridgeObjectRetain(v258);
      }
      v259 = *((_QWORD *)v71 + 682);
      if (v259 == 1)
      {
        *((_OWORD *)v76 + 341) = *((_OWORD *)v71 + 341);
        *(_OWORD *)(v76 + 5465) = *(_OWORD *)(v71 + 5465);
      }
      else
      {
        *((_QWORD *)v76 + 682) = v259;
        v76[5464] = v71[5464];
        *((_QWORD *)v76 + 684) = *((_QWORD *)v71 + 684);
        v76[5480] = v71[5480];
        swift_bridgeObjectRetain(v259);
      }
      v260 = *((_QWORD *)v71 + 686);
      if (v260 == 1)
      {
        *((_OWORD *)v76 + 343) = *((_OWORD *)v71 + 343);
        *(_OWORD *)(v76 + 5497) = *(_OWORD *)(v71 + 5497);
      }
      else
      {
        *((_QWORD *)v76 + 686) = v260;
        v76[5496] = v71[5496];
        *((_QWORD *)v76 + 688) = *((_QWORD *)v71 + 688);
        v76[5512] = v71[5512];
        swift_bridgeObjectRetain(v260);
      }
      v261 = *((_QWORD *)v71 + 690);
      if (v261 == 1)
      {
        *((_OWORD *)v76 + 345) = *((_OWORD *)v71 + 345);
        *(_OWORD *)(v76 + 5529) = *(_OWORD *)(v71 + 5529);
      }
      else
      {
        *((_QWORD *)v76 + 690) = v261;
        v76[5528] = v71[5528];
        *((_QWORD *)v76 + 692) = *((_QWORD *)v71 + 692);
        v76[5544] = v71[5544];
        swift_bridgeObjectRetain(v261);
      }
      v262 = *((_QWORD *)v71 + 694);
      if (v262 == 1)
      {
        *((_OWORD *)v76 + 347) = *((_OWORD *)v71 + 347);
        *(_OWORD *)(v76 + 5561) = *(_OWORD *)(v71 + 5561);
      }
      else
      {
        *((_QWORD *)v76 + 694) = v262;
        v76[5560] = v71[5560];
        *((_QWORD *)v76 + 696) = *((_QWORD *)v71 + 696);
        v76[5576] = v71[5576];
        swift_bridgeObjectRetain(v262);
      }
      v263 = *((_QWORD *)v71 + 698);
      if (v263 == 1)
      {
        *((_OWORD *)v76 + 349) = *((_OWORD *)v71 + 349);
        *(_OWORD *)(v76 + 5593) = *(_OWORD *)(v71 + 5593);
      }
      else
      {
        *((_QWORD *)v76 + 698) = v263;
        v76[5592] = v71[5592];
        *((_QWORD *)v76 + 700) = *((_QWORD *)v71 + 700);
        v76[5608] = v71[5608];
        swift_bridgeObjectRetain(v263);
      }
      v264 = *((_QWORD *)v71 + 702);
      if (v264 == 1)
      {
        *((_OWORD *)v76 + 351) = *((_OWORD *)v71 + 351);
        *(_OWORD *)(v76 + 5625) = *(_OWORD *)(v71 + 5625);
      }
      else
      {
        *((_QWORD *)v76 + 702) = v264;
        v76[5624] = v71[5624];
        *((_QWORD *)v76 + 704) = *((_QWORD *)v71 + 704);
        v76[5640] = v71[5640];
        swift_bridgeObjectRetain(v264);
      }
      v265 = *((_QWORD *)v71 + 706);
      if (v265 == 1)
      {
        *((_OWORD *)v76 + 353) = *((_OWORD *)v71 + 353);
        *(_OWORD *)(v76 + 5657) = *(_OWORD *)(v71 + 5657);
      }
      else
      {
        *((_QWORD *)v76 + 706) = v265;
        v76[5656] = v71[5656];
        *((_QWORD *)v76 + 708) = *((_QWORD *)v71 + 708);
        v76[5672] = v71[5672];
        swift_bridgeObjectRetain(v265);
      }
      v266 = *((_QWORD *)v71 + 710);
      if (v266 == 1)
      {
        *((_OWORD *)v76 + 355) = *((_OWORD *)v71 + 355);
        *(_OWORD *)(v76 + 5689) = *(_OWORD *)(v71 + 5689);
      }
      else
      {
        *((_QWORD *)v76 + 710) = v266;
        v76[5688] = v71[5688];
        *((_QWORD *)v76 + 712) = *((_QWORD *)v71 + 712);
        v76[5704] = v71[5704];
        swift_bridgeObjectRetain(v266);
      }
      v267 = *((_QWORD *)v71 + 714);
      if (v267 == 1)
      {
        *((_OWORD *)v76 + 357) = *((_OWORD *)v71 + 357);
        *(_OWORD *)(v76 + 5721) = *(_OWORD *)(v71 + 5721);
      }
      else
      {
        *((_QWORD *)v76 + 714) = v267;
        v76[5720] = v71[5720];
        *((_QWORD *)v76 + 716) = *((_QWORD *)v71 + 716);
        v76[5736] = v71[5736];
        swift_bridgeObjectRetain(v267);
      }
      v268 = *((_QWORD *)v71 + 718);
      if (v268 == 1)
      {
        *((_OWORD *)v76 + 359) = *((_OWORD *)v71 + 359);
        *(_OWORD *)(v76 + 5753) = *(_OWORD *)(v71 + 5753);
      }
      else
      {
        *((_QWORD *)v76 + 718) = v268;
        v76[5752] = v71[5752];
        *((_QWORD *)v76 + 720) = *((_QWORD *)v71 + 720);
        v76[5768] = v71[5768];
        swift_bridgeObjectRetain(v268);
      }
      *((_OWORD *)v76 + 361) = *((_OWORD *)v71 + 361);
      v76[5792] = v71[5792];
      *(_OWORD *)(v76 + 5800) = *(_OWORD *)(v71 + 5800);
      v76[5816] = v71[5816];
      *(_DWORD *)(v76 + 5817) = *(_DWORD *)(v71 + 5817);
      *(_WORD *)(v76 + 5821) = *(_WORD *)(v71 + 5821);
      v76[5823] = v71[5823];
      *((_QWORD *)v76 + 728) = v244;
      v269 = *((_QWORD *)v71 + 729);
      *((_QWORD *)v76 + 729) = v269;
      swift_bridgeObjectRetain(v244);
      swift_bridgeObjectRetain(v269);
    }
    v270 = *((_QWORD *)v71 + 730);
    *((_QWORD *)v76 + 730) = v270;
    *((_DWORD *)v76 + 1462) = *((_DWORD *)v71 + 1462);
    v76[5852] = v71[5852];
    *((_QWORD *)v76 + 732) = *((_QWORD *)v71 + 732);
    v76[5864] = v71[5864];
    *((_QWORD *)v76 + 734) = *((_QWORD *)v71 + 734);
    v76[5880] = v71[5880];
    *((_QWORD *)v76 + 736) = *((_QWORD *)v71 + 736);
    v76[5896] = v71[5896];
    v76[5912] = v71[5912];
    *((_QWORD *)v76 + 738) = *((_QWORD *)v71 + 738);
    swift_bridgeObjectRetain(v270);
  }
  v271 = v291[39];
  v272 = *(_QWORD *)&v292[v271];
  *(_QWORD *)&v293[v271] = v272;
  v273 = v291[40];
  v274 = &v293[v273];
  v275 = &v292[v273];
  v276 = *((_QWORD *)v275 + 1);
  *(_QWORD *)v274 = *(_QWORD *)v275;
  *((_QWORD *)v274 + 1) = v276;
  v277 = v291[41];
  v278 = &v293[v277];
  v279 = &v292[v277];
  v280 = *((_QWORD *)v279 + 1);
  *(_QWORD *)v278 = *(_QWORD *)v279;
  *((_QWORD *)v278 + 1) = v280;
  swift_bridgeObjectRetain(v272);
  swift_bridgeObjectRetain(v276);
  swift_bridgeObjectRetain(v280);
  return v73;
}

_QWORD *sub_1001C5634(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(char *, uint64_t, uint64_t);
  int v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t v131;
  _OWORD *v132;
  uint64_t *v133;
  uint64_t v134;
  uint64_t v135;
  __int128 v136;
  uint64_t v137;
  __int128 v138;
  uint64_t v139;
  uint64_t v140;
  __int128 v141;
  uint64_t v142;
  uint64_t v143;
  __int128 v144;
  uint64_t v145;
  uint64_t v146;
  __int128 v147;
  uint64_t v148;
  uint64_t v149;
  __int128 v150;
  uint64_t v151;
  uint64_t v152;
  __int128 v153;
  uint64_t v154;
  uint64_t v155;
  __int128 v156;
  uint64_t v157;
  uint64_t v158;
  __int128 v159;
  uint64_t v160;
  uint64_t v161;
  __int128 v162;
  uint64_t v163;
  uint64_t v164;
  __int128 v165;
  uint64_t v166;
  uint64_t v167;
  __int128 v168;
  uint64_t v169;
  uint64_t v170;
  __int128 v171;
  uint64_t v172;
  uint64_t v173;
  __int128 v174;
  uint64_t v175;
  uint64_t v176;
  __int128 v177;
  uint64_t v178;
  uint64_t v179;
  __int128 v180;
  uint64_t v181;
  uint64_t v182;
  __int128 v183;
  uint64_t v184;
  uint64_t v185;
  __int128 v186;
  uint64_t v187;
  uint64_t v188;
  __int128 v189;
  uint64_t v190;
  uint64_t v191;
  __int128 v192;
  uint64_t v193;
  uint64_t v194;
  __int128 v195;
  uint64_t v196;
  uint64_t v197;
  __int128 v198;
  uint64_t v199;
  uint64_t v200;
  __int128 v201;
  uint64_t v202;
  uint64_t v203;
  __int128 v204;
  uint64_t v205;
  uint64_t v206;
  __int128 v207;
  uint64_t v208;
  uint64_t v209;
  __int128 v210;
  uint64_t v211;
  __int128 v212;
  __int128 v213;
  uint64_t v214;
  uint64_t v215;
  _OWORD *v216;
  uint64_t *v217;
  uint64_t v218;
  __int128 v219;
  uint64_t v220;
  uint64_t v221;
  __int128 v222;
  uint64_t v223;
  uint64_t v224;
  __int128 v225;
  uint64_t v226;
  uint64_t v227;
  __int128 v228;
  uint64_t v229;
  uint64_t v230;
  __int128 v231;
  uint64_t v232;
  uint64_t v233;
  __int128 v234;
  uint64_t v235;
  uint64_t v236;
  __int128 v237;
  uint64_t v238;
  uint64_t v239;
  __int128 v240;
  uint64_t v241;
  uint64_t v242;
  __int128 v243;
  uint64_t v244;
  uint64_t v245;
  __int128 v246;
  uint64_t v247;
  uint64_t v248;
  __int128 v249;
  uint64_t v250;
  uint64_t v251;
  __int128 v252;
  uint64_t v253;
  uint64_t v254;
  __int128 v255;
  uint64_t v256;
  uint64_t v257;
  __int128 v258;
  uint64_t v259;
  uint64_t v260;
  __int128 v261;
  uint64_t v262;
  uint64_t v263;
  __int128 v264;
  uint64_t v265;
  uint64_t v266;
  __int128 v267;
  uint64_t v268;
  uint64_t v269;
  __int128 v270;
  uint64_t v271;
  uint64_t v272;
  __int128 v273;
  uint64_t v274;
  uint64_t v275;
  __int128 v276;
  uint64_t v277;
  uint64_t v278;
  __int128 v279;
  uint64_t v280;
  uint64_t v281;
  __int128 v282;
  uint64_t v283;
  uint64_t v284;
  __int128 v285;
  uint64_t v286;
  uint64_t v287;
  __int128 v288;
  uint64_t v289;
  __int128 v290;
  __int128 v291;
  uint64_t v292;
  uint64_t v293;
  _OWORD *v294;
  uint64_t *v295;
  uint64_t v296;
  __int128 v297;
  uint64_t v298;
  uint64_t v299;
  __int128 v300;
  uint64_t v301;
  uint64_t v302;
  __int128 v303;
  uint64_t v304;
  uint64_t v305;
  __int128 v306;
  uint64_t v307;
  uint64_t v308;
  __int128 v309;
  uint64_t v310;
  uint64_t v311;
  __int128 v312;
  uint64_t v313;
  uint64_t v314;
  __int128 v315;
  uint64_t v316;
  uint64_t v317;
  __int128 v318;
  uint64_t v319;
  uint64_t v320;
  __int128 v321;
  uint64_t v322;
  uint64_t v323;
  __int128 v324;
  uint64_t v325;
  uint64_t v326;
  __int128 v327;
  uint64_t v328;
  uint64_t v329;
  __int128 v330;
  uint64_t v331;
  uint64_t v332;
  __int128 v333;
  uint64_t v334;
  uint64_t v335;
  __int128 v336;
  uint64_t v337;
  uint64_t v338;
  __int128 v339;
  uint64_t v340;
  uint64_t v341;
  __int128 v342;
  uint64_t v343;
  uint64_t v344;
  __int128 v345;
  uint64_t v346;
  uint64_t v347;
  __int128 v348;
  uint64_t v349;
  uint64_t v350;
  __int128 v351;
  uint64_t v352;
  uint64_t v353;
  __int128 v354;
  uint64_t v355;
  uint64_t v356;
  __int128 v357;
  uint64_t v358;
  uint64_t v359;
  __int128 v360;
  uint64_t v361;
  uint64_t v362;
  __int128 v363;
  uint64_t v364;
  uint64_t v365;
  __int128 v366;
  uint64_t v367;
  __int128 v368;
  __int128 v369;
  uint64_t v370;
  uint64_t v371;
  _OWORD *v372;
  uint64_t *v373;
  uint64_t v374;
  __int128 v375;
  uint64_t v376;
  uint64_t v377;
  __int128 v378;
  uint64_t v379;
  uint64_t v380;
  __int128 v381;
  uint64_t v382;
  uint64_t v383;
  __int128 v384;
  uint64_t v385;
  uint64_t v386;
  __int128 v387;
  uint64_t v388;
  uint64_t v389;
  __int128 v390;
  uint64_t v391;
  uint64_t v392;
  __int128 v393;
  uint64_t v394;
  uint64_t v395;
  __int128 v396;
  uint64_t v397;
  uint64_t v398;
  __int128 v399;
  uint64_t v400;
  uint64_t v401;
  __int128 v402;
  uint64_t v403;
  uint64_t v404;
  __int128 v405;
  uint64_t v406;
  uint64_t v407;
  __int128 v408;
  uint64_t v409;
  uint64_t v410;
  __int128 v411;
  uint64_t v412;
  uint64_t v413;
  __int128 v414;
  uint64_t v415;
  uint64_t v416;
  __int128 v417;
  uint64_t v418;
  uint64_t v419;
  __int128 v420;
  uint64_t v421;
  uint64_t v422;
  __int128 v423;
  uint64_t v424;
  uint64_t v425;
  __int128 v426;
  uint64_t v427;
  uint64_t v428;
  __int128 v429;
  uint64_t v430;
  uint64_t v431;
  __int128 v432;
  uint64_t v433;
  uint64_t v434;
  __int128 v435;
  uint64_t v436;
  uint64_t v437;
  __int128 v438;
  uint64_t v439;
  uint64_t v440;
  __int128 v441;
  uint64_t v442;
  uint64_t v443;
  __int128 v444;
  uint64_t v445;
  __int128 v446;
  __int128 v447;
  uint64_t v448;
  uint64_t v449;
  _OWORD *v450;
  uint64_t *v451;
  uint64_t v452;
  __int128 v453;
  uint64_t v454;
  uint64_t v455;
  __int128 v456;
  uint64_t v457;
  uint64_t v458;
  __int128 v459;
  uint64_t v460;
  uint64_t v461;
  __int128 v462;
  uint64_t v463;
  uint64_t v464;
  __int128 v465;
  uint64_t v466;
  uint64_t v467;
  __int128 v468;
  uint64_t v469;
  uint64_t v470;
  __int128 v471;
  uint64_t v472;
  uint64_t v473;
  __int128 v474;
  uint64_t v475;
  uint64_t v476;
  __int128 v477;
  uint64_t v478;
  uint64_t v479;
  __int128 v480;
  uint64_t v481;
  uint64_t v482;
  __int128 v483;
  uint64_t v484;
  uint64_t v485;
  __int128 v486;
  uint64_t v487;
  uint64_t v488;
  __int128 v489;
  uint64_t v490;
  uint64_t v491;
  __int128 v492;
  uint64_t v493;
  uint64_t v494;
  __int128 v495;
  uint64_t v496;
  uint64_t v497;
  __int128 v498;
  uint64_t v499;
  uint64_t v500;
  __int128 v501;
  uint64_t v502;
  uint64_t v503;
  __int128 v504;
  uint64_t v505;
  uint64_t v506;
  __int128 v507;
  uint64_t v508;
  uint64_t v509;
  __int128 v510;
  uint64_t v511;
  uint64_t v512;
  __int128 v513;
  uint64_t v514;
  uint64_t v515;
  __int128 v516;
  uint64_t v517;
  uint64_t v518;
  __int128 v519;
  uint64_t v520;
  uint64_t v521;
  __int128 v522;
  uint64_t v523;
  __int128 v524;
  char v525;
  uint64_t v526;
  uint64_t v527;
  _OWORD *v528;
  uint64_t *v529;
  uint64_t v530;
  __int128 v531;
  uint64_t v532;
  uint64_t v533;
  __int128 v534;
  uint64_t v535;
  uint64_t v536;
  __int128 v537;
  uint64_t v538;
  uint64_t v539;
  __int128 v540;
  uint64_t v541;
  uint64_t v542;
  __int128 v543;
  uint64_t v544;
  uint64_t v545;
  __int128 v546;
  uint64_t v547;
  uint64_t v548;
  __int128 v549;
  uint64_t v550;
  uint64_t v551;
  __int128 v552;
  uint64_t v553;
  uint64_t v554;
  __int128 v555;
  uint64_t v556;
  uint64_t v557;
  __int128 v558;
  uint64_t v559;
  uint64_t v560;
  __int128 v561;
  uint64_t v562;
  uint64_t v563;
  __int128 v564;
  uint64_t v565;
  uint64_t v566;
  __int128 v567;
  uint64_t v568;
  uint64_t v569;
  __int128 v570;
  uint64_t v571;
  uint64_t v572;
  __int128 v573;
  uint64_t v574;
  uint64_t v575;
  __int128 v576;
  uint64_t v577;
  uint64_t v578;
  __int128 v579;
  uint64_t v580;
  uint64_t v581;
  __int128 v582;
  uint64_t v583;
  uint64_t v584;
  __int128 v585;
  uint64_t v586;
  uint64_t v587;
  __int128 v588;
  uint64_t v589;
  uint64_t v590;
  __int128 v591;
  uint64_t v592;
  uint64_t v593;
  __int128 v594;
  uint64_t v595;
  uint64_t v596;
  __int128 v597;
  uint64_t v598;
  uint64_t v599;
  __int128 v600;
  uint64_t v601;
  __int128 v602;
  char v603;
  uint64_t v604;
  uint64_t v605;
  _OWORD *v606;
  uint64_t *v607;
  uint64_t v608;
  __int128 v609;
  uint64_t v610;
  uint64_t v611;
  __int128 v612;
  uint64_t v613;
  uint64_t v614;
  __int128 v615;
  uint64_t v616;
  uint64_t v617;
  __int128 v618;
  uint64_t v619;
  uint64_t v620;
  __int128 v621;
  uint64_t v622;
  uint64_t v623;
  __int128 v624;
  uint64_t v625;
  uint64_t v626;
  __int128 v627;
  uint64_t v628;
  uint64_t v629;
  __int128 v630;
  uint64_t v631;
  uint64_t v632;
  __int128 v633;
  uint64_t v634;
  uint64_t v635;
  __int128 v636;
  uint64_t v637;
  uint64_t v638;
  __int128 v639;
  uint64_t v640;
  uint64_t v641;
  __int128 v642;
  uint64_t v643;
  uint64_t v644;
  __int128 v645;
  uint64_t v646;
  uint64_t v647;
  __int128 v648;
  uint64_t v649;
  uint64_t v650;
  __int128 v651;
  uint64_t v652;
  uint64_t v653;
  __int128 v654;
  uint64_t v655;
  uint64_t v656;
  __int128 v657;
  uint64_t v658;
  uint64_t v659;
  __int128 v660;
  uint64_t v661;
  uint64_t v662;
  __int128 v663;
  uint64_t v664;
  uint64_t v665;
  __int128 v666;
  uint64_t v667;
  uint64_t v668;
  __int128 v669;
  uint64_t v670;
  uint64_t v671;
  __int128 v672;
  uint64_t v673;
  uint64_t v674;
  __int128 v675;
  uint64_t v676;
  uint64_t v677;
  __int128 v678;
  uint64_t v679;
  __int128 v680;
  char v681;
  uint64_t v682;
  uint64_t v683;
  uint64_t v684;
  char v685;
  uint64_t v686;
  uint64_t v687;
  uint64_t v688;
  uint64_t v689;
  uint64_t v690;
  uint64_t v691;
  __int128 v692;
  __int128 v693;
  uint64_t v694;
  uint64_t v695;
  __int128 v696;
  uint64_t v697;
  uint64_t v698;
  __int128 v699;
  uint64_t v700;
  uint64_t v701;
  __int128 v702;
  uint64_t v703;
  uint64_t v704;
  __int128 v705;
  uint64_t v706;
  uint64_t v707;
  __int128 v708;
  uint64_t v709;
  uint64_t v710;
  __int128 v711;
  uint64_t v712;
  uint64_t v713;
  __int128 v714;
  uint64_t v715;
  uint64_t v716;
  __int128 v717;
  uint64_t v718;
  uint64_t v719;
  __int128 v720;
  uint64_t v721;
  uint64_t v722;
  __int128 v723;
  uint64_t v724;
  uint64_t v725;
  __int128 v726;
  uint64_t v727;
  uint64_t v728;
  __int128 v729;
  uint64_t v730;
  uint64_t v731;
  __int128 v732;
  uint64_t v733;
  uint64_t v734;
  __int128 v735;
  uint64_t v736;
  uint64_t v737;
  __int128 v738;
  uint64_t v739;
  uint64_t v740;
  __int128 v741;
  uint64_t v742;
  uint64_t v743;
  __int128 v744;
  uint64_t v745;
  uint64_t v746;
  __int128 v747;
  uint64_t v748;
  uint64_t v749;
  __int128 v750;
  uint64_t v751;
  uint64_t v752;
  __int128 v753;
  uint64_t v754;
  uint64_t v755;
  __int128 v756;
  uint64_t v757;
  uint64_t v758;
  __int128 v759;
  uint64_t v760;
  __int128 v761;
  __int128 v762;
  uint64_t v763;
  uint64_t v764;
  uint64_t v765;
  uint64_t v766;
  __int128 *v767;
  uint64_t v768;
  uint64_t v769;
  __int128 *v770;
  __int128 v771;
  __int128 v772;
  uint64_t v773;
  uint64_t v774;
  __int128 *v775;
  uint64_t v776;
  uint64_t v777;
  __int128 *v778;
  __int128 v779;
  __int128 v780;
  uint64_t v781;
  uint64_t v782;
  __int128 *v783;
  uint64_t v784;
  uint64_t v785;
  __int128 *v786;
  __int128 v787;
  __int128 v788;
  uint64_t v789;
  uint64_t v790;
  __int128 *v791;
  uint64_t v792;
  uint64_t v793;
  __int128 *v794;
  __int128 v795;
  __int128 v796;
  uint64_t v797;
  uint64_t v798;
  __int128 *v799;
  uint64_t v800;
  uint64_t v801;
  __int128 *v802;
  __int128 v803;
  __int128 v804;
  uint64_t v805;
  uint64_t v806;
  __int128 *v807;
  uint64_t v808;
  uint64_t v809;
  __int128 *v810;
  __int128 v811;
  __int128 v812;
  uint64_t v813;
  uint64_t v814;
  __int128 *v815;
  uint64_t v816;
  uint64_t v817;
  __int128 *v818;
  __int128 v819;
  __int128 v820;
  uint64_t v821;
  uint64_t v822;
  __int128 *v823;
  __int128 *v824;
  uint64_t v825;
  uint64_t v826;
  __int128 v827;
  __int128 v828;
  uint64_t v829;
  uint64_t v830;
  __int128 *v831;
  __int128 *v832;
  uint64_t v833;
  uint64_t v834;
  __int128 v835;
  __int128 v836;
  uint64_t v837;
  uint64_t v838;
  __int128 *v839;
  __int128 *v840;
  uint64_t v841;
  uint64_t v842;
  __int128 v843;
  __int128 v844;
  uint64_t v845;
  uint64_t v846;
  __int128 *v847;
  __int128 *v848;
  uint64_t v849;
  uint64_t v850;
  __int128 v851;
  __int128 v852;
  uint64_t v853;
  uint64_t v854;
  __int128 *v855;
  __int128 *v856;
  uint64_t v857;
  uint64_t v858;
  __int128 v859;
  __int128 v860;
  uint64_t v861;
  uint64_t v862;
  __int128 *v863;
  __int128 *v864;
  uint64_t v865;
  uint64_t v866;
  __int128 v867;
  __int128 v868;
  uint64_t v869;
  uint64_t v870;
  __int128 *v871;
  __int128 *v872;
  uint64_t v873;
  uint64_t v874;
  __int128 v875;
  __int128 v876;
  uint64_t v877;
  uint64_t v878;
  __int128 *v879;
  __int128 *v880;
  uint64_t v881;
  uint64_t v882;
  __int128 v883;
  __int128 v884;
  uint64_t v885;
  uint64_t v886;
  __int128 *v887;
  __int128 *v888;
  uint64_t v889;
  uint64_t v890;
  __int128 v891;
  __int128 v892;
  uint64_t v893;
  uint64_t v894;
  __int128 *v895;
  __int128 *v896;
  uint64_t v897;
  uint64_t v898;
  __int128 v899;
  __int128 v900;
  uint64_t v901;
  uint64_t v902;
  __int128 *v903;
  __int128 *v904;
  uint64_t v905;
  uint64_t v906;
  __int128 v907;
  __int128 v908;
  uint64_t v909;
  uint64_t v910;
  __int128 *v911;
  __int128 *v912;
  uint64_t v913;
  uint64_t v914;
  __int128 v915;
  __int128 v916;
  uint64_t v917;
  uint64_t v918;
  __int128 *v919;
  __int128 *v920;
  uint64_t v921;
  uint64_t v922;
  __int128 v923;
  __int128 v924;
  uint64_t v925;
  uint64_t v926;
  __int128 *v927;
  __int128 *v928;
  uint64_t v929;
  uint64_t v930;
  __int128 v931;
  __int128 v932;
  uint64_t v933;
  uint64_t v934;
  __int128 *v935;
  __int128 *v936;
  uint64_t v937;
  uint64_t v938;
  __int128 v939;
  __int128 v940;
  uint64_t v941;
  uint64_t v942;
  __int128 *v943;
  __int128 *v944;
  uint64_t v945;
  uint64_t v946;
  __int128 v947;
  __int128 v948;
  uint64_t v949;
  uint64_t v950;
  __int128 v951;
  __int128 v952;
  uint64_t v953;
  uint64_t v954;
  uint64_t v955;
  uint64_t v956;
  _OWORD *v957;
  uint64_t *v958;
  uint64_t v959;
  uint64_t v960;
  __int128 v961;
  uint64_t v962;
  uint64_t v963;
  __int128 v964;
  uint64_t v965;
  uint64_t v966;
  __int128 v967;
  __int128 v968;
  uint64_t v969;
  uint64_t v970;
  __int128 v971;
  uint64_t v972;
  uint64_t v973;
  __int128 v974;
  uint64_t v975;
  uint64_t v976;
  __int128 v977;
  uint64_t v978;
  uint64_t v979;
  __int128 v980;
  uint64_t v981;
  uint64_t v982;
  __int128 v983;
  uint64_t v984;
  uint64_t v985;
  __int128 v986;
  uint64_t v987;
  uint64_t v988;
  __int128 v989;
  uint64_t v990;
  uint64_t v991;
  __int128 v992;
  uint64_t v993;
  uint64_t v994;
  __int128 v995;
  uint64_t v996;
  uint64_t v997;
  __int128 v998;
  uint64_t v999;
  uint64_t v1000;
  __int128 v1001;
  uint64_t v1002;
  uint64_t v1003;
  __int128 v1004;
  uint64_t v1005;
  uint64_t v1006;
  __int128 v1007;
  uint64_t v1008;
  uint64_t v1009;
  __int128 v1010;
  uint64_t v1011;
  uint64_t v1012;
  __int128 v1013;
  uint64_t v1014;
  uint64_t v1015;
  __int128 v1016;
  uint64_t v1017;
  uint64_t v1018;
  __int128 v1019;
  uint64_t v1020;
  uint64_t v1021;
  __int128 v1022;
  uint64_t v1023;
  uint64_t v1024;
  __int128 v1025;
  uint64_t v1026;
  uint64_t v1027;
  __int128 v1028;
  uint64_t v1029;
  uint64_t v1030;
  __int128 v1031;
  uint64_t v1032;
  uint64_t v1033;
  __int128 v1034;
  uint64_t v1035;
  __int128 v1036;
  __int128 v1037;
  uint64_t v1038;
  uint64_t v1039;
  uint64_t v1040;
  uint64_t v1041;
  __int128 *v1042;
  __int128 *v1043;
  uint64_t v1044;
  uint64_t v1045;
  __int128 v1046;
  __int128 v1047;
  uint64_t v1048;
  uint64_t v1049;
  __int128 *v1050;
  __int128 *v1051;
  uint64_t v1052;
  uint64_t v1053;
  __int128 v1054;
  __int128 v1055;
  uint64_t v1056;
  uint64_t v1057;
  __int128 *v1058;
  __int128 *v1059;
  uint64_t v1060;
  uint64_t v1061;
  __int128 v1062;
  __int128 v1063;
  uint64_t v1064;
  uint64_t v1065;
  __int128 *v1066;
  __int128 *v1067;
  uint64_t v1068;
  uint64_t v1069;
  __int128 v1070;
  __int128 v1071;
  uint64_t v1072;
  uint64_t v1073;
  __int128 *v1074;
  __int128 *v1075;
  uint64_t v1076;
  uint64_t v1077;
  __int128 v1078;
  __int128 v1079;
  uint64_t v1080;
  uint64_t v1081;
  __int128 *v1082;
  __int128 *v1083;
  uint64_t v1084;
  uint64_t v1085;
  __int128 v1086;
  __int128 v1087;
  uint64_t v1088;
  uint64_t v1089;
  __int128 *v1090;
  __int128 *v1091;
  uint64_t v1092;
  uint64_t v1093;
  __int128 v1094;
  __int128 v1095;
  uint64_t v1096;
  uint64_t v1097;
  __int128 *v1098;
  __int128 *v1099;
  uint64_t v1100;
  uint64_t v1101;
  __int128 v1102;
  __int128 v1103;
  uint64_t v1104;
  uint64_t v1105;
  __int128 *v1106;
  __int128 *v1107;
  uint64_t v1108;
  uint64_t v1109;
  __int128 v1110;
  __int128 v1111;
  uint64_t v1112;
  uint64_t v1113;
  __int128 *v1114;
  __int128 *v1115;
  uint64_t v1116;
  uint64_t v1117;
  __int128 v1118;
  __int128 v1119;
  uint64_t v1120;
  uint64_t v1121;
  __int128 *v1122;
  __int128 *v1123;
  uint64_t v1124;
  uint64_t v1125;
  __int128 v1126;
  __int128 v1127;
  uint64_t v1128;
  uint64_t v1129;
  __int128 *v1130;
  __int128 *v1131;
  uint64_t v1132;
  uint64_t v1133;
  __int128 v1134;
  __int128 v1135;
  uint64_t v1136;
  uint64_t v1137;
  __int128 *v1138;
  __int128 *v1139;
  uint64_t v1140;
  uint64_t v1141;
  __int128 v1142;
  __int128 v1143;
  uint64_t v1144;
  uint64_t v1145;
  __int128 *v1146;
  __int128 *v1147;
  uint64_t v1148;
  uint64_t v1149;
  __int128 v1150;
  __int128 v1151;
  uint64_t v1152;
  uint64_t v1153;
  __int128 *v1154;
  __int128 *v1155;
  uint64_t v1156;
  uint64_t v1157;
  __int128 v1158;
  __int128 v1159;
  uint64_t v1160;
  uint64_t v1161;
  __int128 *v1162;
  __int128 *v1163;
  uint64_t v1164;
  uint64_t v1165;
  __int128 v1166;
  __int128 v1167;
  uint64_t v1168;
  uint64_t v1169;
  __int128 *v1170;
  __int128 *v1171;
  uint64_t v1172;
  uint64_t v1173;
  __int128 v1174;
  __int128 v1175;
  uint64_t v1176;
  uint64_t v1177;
  __int128 *v1178;
  __int128 *v1179;
  uint64_t v1180;
  uint64_t v1181;
  __int128 v1182;
  __int128 v1183;
  uint64_t v1184;
  uint64_t v1185;
  __int128 *v1186;
  __int128 *v1187;
  uint64_t v1188;
  uint64_t v1189;
  __int128 v1190;
  __int128 v1191;
  uint64_t v1192;
  uint64_t v1193;
  __int128 *v1194;
  __int128 *v1195;
  uint64_t v1196;
  uint64_t v1197;
  __int128 v1198;
  __int128 v1199;
  uint64_t v1200;
  uint64_t v1201;
  __int128 *v1202;
  __int128 *v1203;
  uint64_t v1204;
  uint64_t v1205;
  __int128 v1206;
  __int128 v1207;
  uint64_t v1208;
  uint64_t v1209;
  __int128 *v1210;
  __int128 *v1211;
  uint64_t v1212;
  uint64_t v1213;
  __int128 v1214;
  __int128 v1215;
  uint64_t v1216;
  uint64_t v1217;
  __int128 *v1218;
  __int128 *v1219;
  uint64_t v1220;
  uint64_t v1221;
  __int128 v1222;
  __int128 v1223;
  uint64_t v1224;
  uint64_t v1225;
  __int128 v1226;
  __int128 v1227;
  uint64_t v1228;
  uint64_t v1229;
  uint64_t v1230;
  uint64_t v1231;
  _OWORD *v1232;
  uint64_t *v1233;
  uint64_t v1234;
  uint64_t v1235;
  __int128 v1236;
  uint64_t v1237;
  uint64_t v1238;
  __int128 v1239;
  uint64_t v1240;
  uint64_t v1241;
  __int128 v1242;
  __int128 v1243;
  uint64_t v1244;
  uint64_t v1245;
  __int128 v1246;
  uint64_t v1247;
  uint64_t v1248;
  __int128 v1249;
  uint64_t v1250;
  uint64_t v1251;
  __int128 v1252;
  uint64_t v1253;
  uint64_t v1254;
  __int128 v1255;
  uint64_t v1256;
  uint64_t v1257;
  __int128 v1258;
  uint64_t v1259;
  uint64_t v1260;
  __int128 v1261;
  uint64_t v1262;
  uint64_t v1263;
  __int128 v1264;
  uint64_t v1265;
  uint64_t v1266;
  __int128 v1267;
  uint64_t v1268;
  uint64_t v1269;
  __int128 v1270;
  uint64_t v1271;
  uint64_t v1272;
  __int128 v1273;
  uint64_t v1274;
  uint64_t v1275;
  __int128 v1276;
  uint64_t v1277;
  uint64_t v1278;
  __int128 v1279;
  uint64_t v1280;
  uint64_t v1281;
  __int128 v1282;
  uint64_t v1283;
  uint64_t v1284;
  __int128 v1285;
  uint64_t v1286;
  uint64_t v1287;
  __int128 v1288;
  uint64_t v1289;
  uint64_t v1290;
  __int128 v1291;
  uint64_t v1292;
  uint64_t v1293;
  __int128 v1294;
  uint64_t v1295;
  uint64_t v1296;
  __int128 v1297;
  uint64_t v1298;
  uint64_t v1299;
  __int128 v1300;
  uint64_t v1301;
  uint64_t v1302;
  __int128 v1303;
  uint64_t v1304;
  uint64_t v1305;
  __int128 v1306;
  uint64_t v1307;
  uint64_t v1308;
  __int128 v1309;
  uint64_t v1310;
  __int128 v1311;
  __int128 v1312;
  uint64_t v1313;
  uint64_t v1314;
  uint64_t v1315;
  uint64_t v1316;
  __int128 *v1317;
  __int128 *v1318;
  uint64_t v1319;
  uint64_t v1320;
  __int128 v1321;
  __int128 v1322;
  uint64_t v1323;
  uint64_t v1324;
  __int128 *v1325;
  __int128 *v1326;
  uint64_t v1327;
  uint64_t v1328;
  __int128 v1329;
  __int128 v1330;
  uint64_t v1331;
  uint64_t v1332;
  __int128 *v1333;
  __int128 *v1334;
  uint64_t v1335;
  uint64_t v1336;
  __int128 v1337;
  __int128 v1338;
  uint64_t v1339;
  uint64_t v1340;
  __int128 *v1341;
  __int128 *v1342;
  uint64_t v1343;
  uint64_t v1344;
  __int128 v1345;
  __int128 v1346;
  uint64_t v1347;
  uint64_t v1348;
  __int128 *v1349;
  __int128 *v1350;
  uint64_t v1351;
  uint64_t v1352;
  __int128 v1353;
  __int128 v1354;
  uint64_t v1355;
  uint64_t v1356;
  __int128 *v1357;
  __int128 *v1358;
  uint64_t v1359;
  uint64_t v1360;
  __int128 v1361;
  __int128 v1362;
  uint64_t v1363;
  uint64_t v1364;
  __int128 *v1365;
  __int128 *v1366;
  uint64_t v1367;
  uint64_t v1368;
  __int128 v1369;
  __int128 v1370;
  uint64_t v1371;
  uint64_t v1372;
  __int128 *v1373;
  __int128 *v1374;
  uint64_t v1375;
  uint64_t v1376;
  __int128 v1377;
  __int128 v1378;
  uint64_t v1379;
  uint64_t v1380;
  __int128 *v1381;
  __int128 *v1382;
  uint64_t v1383;
  uint64_t v1384;
  __int128 v1385;
  __int128 v1386;
  uint64_t v1387;
  uint64_t v1388;
  __int128 *v1389;
  __int128 *v1390;
  uint64_t v1391;
  uint64_t v1392;
  __int128 v1393;
  __int128 v1394;
  uint64_t v1395;
  uint64_t v1396;
  __int128 *v1397;
  __int128 *v1398;
  uint64_t v1399;
  uint64_t v1400;
  __int128 v1401;
  __int128 v1402;
  uint64_t v1403;
  uint64_t v1404;
  __int128 *v1405;
  __int128 *v1406;
  uint64_t v1407;
  uint64_t v1408;
  __int128 v1409;
  __int128 v1410;
  uint64_t v1411;
  uint64_t v1412;
  __int128 *v1413;
  __int128 *v1414;
  uint64_t v1415;
  uint64_t v1416;
  __int128 v1417;
  __int128 v1418;
  uint64_t v1419;
  uint64_t v1420;
  __int128 *v1421;
  __int128 *v1422;
  uint64_t v1423;
  uint64_t v1424;
  __int128 v1425;
  __int128 v1426;
  uint64_t v1427;
  uint64_t v1428;
  __int128 *v1429;
  __int128 *v1430;
  uint64_t v1431;
  uint64_t v1432;
  __int128 v1433;
  __int128 v1434;
  uint64_t v1435;
  uint64_t v1436;
  __int128 *v1437;
  __int128 *v1438;
  uint64_t v1439;
  uint64_t v1440;
  __int128 v1441;
  __int128 v1442;
  uint64_t v1443;
  uint64_t v1444;
  __int128 *v1445;
  __int128 *v1446;
  uint64_t v1447;
  uint64_t v1448;
  __int128 v1449;
  __int128 v1450;
  uint64_t v1451;
  uint64_t v1452;
  __int128 *v1453;
  __int128 *v1454;
  uint64_t v1455;
  uint64_t v1456;
  __int128 v1457;
  __int128 v1458;
  uint64_t v1459;
  uint64_t v1460;
  __int128 *v1461;
  __int128 *v1462;
  uint64_t v1463;
  uint64_t v1464;
  __int128 v1465;
  __int128 v1466;
  uint64_t v1467;
  uint64_t v1468;
  __int128 *v1469;
  __int128 *v1470;
  uint64_t v1471;
  uint64_t v1472;
  __int128 v1473;
  __int128 v1474;
  uint64_t v1475;
  uint64_t v1476;
  __int128 *v1477;
  __int128 *v1478;
  uint64_t v1479;
  uint64_t v1480;
  __int128 v1481;
  __int128 v1482;
  uint64_t v1483;
  uint64_t v1484;
  __int128 *v1485;
  __int128 *v1486;
  uint64_t v1487;
  uint64_t v1488;
  __int128 v1489;
  __int128 v1490;
  uint64_t v1491;
  uint64_t v1492;
  __int128 *v1493;
  __int128 *v1494;
  uint64_t v1495;
  uint64_t v1496;
  __int128 v1497;
  __int128 v1498;
  uint64_t v1499;
  uint64_t v1500;
  __int128 v1501;
  __int128 v1502;
  uint64_t v1503;
  uint64_t v1504;
  uint64_t v1505;
  uint64_t v1506;
  _OWORD *v1507;
  uint64_t *v1508;
  uint64_t v1509;
  uint64_t v1510;
  __int128 v1511;
  uint64_t v1512;
  uint64_t v1513;
  __int128 v1514;
  uint64_t v1515;
  uint64_t v1516;
  __int128 v1517;
  __int128 v1518;
  uint64_t v1519;
  uint64_t v1520;
  __int128 v1521;
  uint64_t v1522;
  uint64_t v1523;
  __int128 v1524;
  uint64_t v1525;
  uint64_t v1526;
  __int128 v1527;
  uint64_t v1528;
  uint64_t v1529;
  __int128 v1530;
  uint64_t v1531;
  uint64_t v1532;
  __int128 v1533;
  uint64_t v1534;
  uint64_t v1535;
  __int128 v1536;
  uint64_t v1537;
  uint64_t v1538;
  __int128 v1539;
  uint64_t v1540;
  uint64_t v1541;
  __int128 v1542;
  uint64_t v1543;
  uint64_t v1544;
  __int128 v1545;
  uint64_t v1546;
  uint64_t v1547;
  __int128 v1548;
  uint64_t v1549;
  uint64_t v1550;
  __int128 v1551;
  uint64_t v1552;
  uint64_t v1553;
  __int128 v1554;
  uint64_t v1555;
  uint64_t v1556;
  __int128 v1557;
  uint64_t v1558;
  uint64_t v1559;
  __int128 v1560;
  uint64_t v1561;
  uint64_t v1562;
  __int128 v1563;
  uint64_t v1564;
  uint64_t v1565;
  __int128 v1566;
  uint64_t v1567;
  uint64_t v1568;
  __int128 v1569;
  uint64_t v1570;
  uint64_t v1571;
  __int128 v1572;
  uint64_t v1573;
  uint64_t v1574;
  __int128 v1575;
  uint64_t v1576;
  uint64_t v1577;
  __int128 v1578;
  uint64_t v1579;
  uint64_t v1580;
  __int128 v1581;
  uint64_t v1582;
  uint64_t v1583;
  __int128 v1584;
  uint64_t v1585;
  __int128 v1586;
  __int128 v1587;
  uint64_t v1588;
  uint64_t v1589;
  uint64_t v1590;
  uint64_t v1591;
  __int128 *v1592;
  __int128 *v1593;
  uint64_t v1594;
  uint64_t v1595;
  __int128 v1596;
  __int128 v1597;
  uint64_t v1598;
  uint64_t v1599;
  __int128 *v1600;
  __int128 *v1601;
  uint64_t v1602;
  uint64_t v1603;
  __int128 v1604;
  __int128 v1605;
  uint64_t v1606;
  uint64_t v1607;
  __int128 *v1608;
  __int128 *v1609;
  uint64_t v1610;
  uint64_t v1611;
  __int128 v1612;
  __int128 v1613;
  uint64_t v1614;
  uint64_t v1615;
  __int128 *v1616;
  __int128 *v1617;
  uint64_t v1618;
  uint64_t v1619;
  __int128 v1620;
  __int128 v1621;
  uint64_t v1622;
  uint64_t v1623;
  __int128 *v1624;
  __int128 *v1625;
  uint64_t v1626;
  uint64_t v1627;
  __int128 v1628;
  __int128 v1629;
  uint64_t v1630;
  uint64_t v1631;
  __int128 *v1632;
  __int128 *v1633;
  uint64_t v1634;
  uint64_t v1635;
  __int128 v1636;
  __int128 v1637;
  uint64_t v1638;
  uint64_t v1639;
  __int128 *v1640;
  __int128 *v1641;
  uint64_t v1642;
  uint64_t v1643;
  __int128 v1644;
  __int128 v1645;
  uint64_t v1646;
  uint64_t v1647;
  __int128 *v1648;
  __int128 *v1649;
  uint64_t v1650;
  uint64_t v1651;
  __int128 v1652;
  __int128 v1653;
  uint64_t v1654;
  uint64_t v1655;
  __int128 *v1656;
  __int128 *v1657;
  uint64_t v1658;
  uint64_t v1659;
  __int128 v1660;
  __int128 v1661;
  uint64_t v1662;
  uint64_t v1663;
  __int128 *v1664;
  __int128 *v1665;
  uint64_t v1666;
  uint64_t v1667;
  __int128 v1668;
  __int128 v1669;
  uint64_t v1670;
  uint64_t v1671;
  __int128 *v1672;
  __int128 *v1673;
  uint64_t v1674;
  uint64_t v1675;
  __int128 v1676;
  __int128 v1677;
  uint64_t v1678;
  uint64_t v1679;
  __int128 *v1680;
  __int128 *v1681;
  uint64_t v1682;
  uint64_t v1683;
  __int128 v1684;
  __int128 v1685;
  uint64_t v1686;
  uint64_t v1687;
  __int128 *v1688;
  __int128 *v1689;
  uint64_t v1690;
  uint64_t v1691;
  __int128 v1692;
  __int128 v1693;
  uint64_t v1694;
  uint64_t v1695;
  __int128 *v1696;
  __int128 *v1697;
  uint64_t v1698;
  uint64_t v1699;
  __int128 v1700;
  __int128 v1701;
  uint64_t v1702;
  uint64_t v1703;
  __int128 *v1704;
  __int128 *v1705;
  uint64_t v1706;
  uint64_t v1707;
  __int128 v1708;
  __int128 v1709;
  uint64_t v1710;
  uint64_t v1711;
  __int128 *v1712;
  __int128 *v1713;
  uint64_t v1714;
  uint64_t v1715;
  __int128 v1716;
  __int128 v1717;
  uint64_t v1718;
  uint64_t v1719;
  __int128 *v1720;
  __int128 *v1721;
  uint64_t v1722;
  uint64_t v1723;
  __int128 v1724;
  __int128 v1725;
  uint64_t v1726;
  uint64_t v1727;
  __int128 *v1728;
  __int128 *v1729;
  uint64_t v1730;
  uint64_t v1731;
  __int128 v1732;
  __int128 v1733;
  uint64_t v1734;
  uint64_t v1735;
  __int128 *v1736;
  __int128 *v1737;
  uint64_t v1738;
  uint64_t v1739;
  __int128 v1740;
  __int128 v1741;
  uint64_t v1742;
  uint64_t v1743;
  __int128 *v1744;
  __int128 *v1745;
  uint64_t v1746;
  uint64_t v1747;
  __int128 v1748;
  __int128 v1749;
  uint64_t v1750;
  uint64_t v1751;
  __int128 *v1752;
  __int128 *v1753;
  uint64_t v1754;
  uint64_t v1755;
  __int128 v1756;
  __int128 v1757;
  uint64_t v1758;
  uint64_t v1759;
  __int128 *v1760;
  __int128 *v1761;
  uint64_t v1762;
  uint64_t v1763;
  __int128 v1764;
  __int128 v1765;
  uint64_t v1766;
  uint64_t v1767;
  __int128 *v1768;
  __int128 *v1769;
  uint64_t v1770;
  uint64_t v1771;
  __int128 v1772;
  __int128 v1773;
  uint64_t v1774;
  uint64_t v1775;
  __int128 v1776;
  __int128 v1777;
  uint64_t v1778;
  uint64_t v1779;
  uint64_t v1780;
  uint64_t v1781;
  _OWORD *v1782;
  uint64_t *v1783;
  uint64_t v1784;
  uint64_t v1785;
  __int128 v1786;
  uint64_t v1787;
  uint64_t v1788;
  __int128 v1789;
  uint64_t v1790;
  uint64_t v1791;
  __int128 v1792;
  __int128 v1793;
  uint64_t v1794;
  uint64_t v1795;
  __int128 v1796;
  uint64_t v1797;
  uint64_t v1798;
  __int128 v1799;
  uint64_t v1800;
  uint64_t v1801;
  __int128 v1802;
  uint64_t v1803;
  uint64_t v1804;
  __int128 v1805;
  uint64_t v1806;
  uint64_t v1807;
  __int128 v1808;
  uint64_t v1809;
  uint64_t v1810;
  __int128 v1811;
  uint64_t v1812;
  uint64_t v1813;
  __int128 v1814;
  uint64_t v1815;
  uint64_t v1816;
  __int128 v1817;
  uint64_t v1818;
  uint64_t v1819;
  __int128 v1820;
  uint64_t v1821;
  uint64_t v1822;
  __int128 v1823;
  uint64_t v1824;
  uint64_t v1825;
  __int128 v1826;
  uint64_t v1827;
  uint64_t v1828;
  __int128 v1829;
  uint64_t v1830;
  uint64_t v1831;
  __int128 v1832;
  uint64_t v1833;
  uint64_t v1834;
  __int128 v1835;
  uint64_t v1836;
  uint64_t v1837;
  __int128 v1838;
  uint64_t v1839;
  uint64_t v1840;
  __int128 v1841;
  uint64_t v1842;
  uint64_t v1843;
  __int128 v1844;
  uint64_t v1845;
  uint64_t v1846;
  __int128 v1847;
  uint64_t v1848;
  uint64_t v1849;
  __int128 v1850;
  uint64_t v1851;
  uint64_t v1852;
  __int128 v1853;
  uint64_t v1854;
  uint64_t v1855;
  __int128 v1856;
  uint64_t v1857;
  uint64_t v1858;
  __int128 v1859;
  uint64_t v1860;
  __int128 v1861;
  char v1862;
  uint64_t v1863;
  uint64_t v1864;
  uint64_t v1865;
  uint64_t v1866;
  __int128 *v1867;
  __int128 *v1868;
  uint64_t v1869;
  uint64_t v1870;
  __int128 v1871;
  __int128 v1872;
  uint64_t v1873;
  uint64_t v1874;
  __int128 *v1875;
  __int128 *v1876;
  uint64_t v1877;
  uint64_t v1878;
  __int128 v1879;
  __int128 v1880;
  uint64_t v1881;
  uint64_t v1882;
  __int128 *v1883;
  __int128 *v1884;
  uint64_t v1885;
  uint64_t v1886;
  __int128 v1887;
  __int128 v1888;
  uint64_t v1889;
  uint64_t v1890;
  __int128 *v1891;
  __int128 *v1892;
  uint64_t v1893;
  uint64_t v1894;
  __int128 v1895;
  __int128 v1896;
  uint64_t v1897;
  uint64_t v1898;
  __int128 *v1899;
  __int128 *v1900;
  uint64_t v1901;
  uint64_t v1902;
  __int128 v1903;
  __int128 v1904;
  uint64_t v1905;
  uint64_t v1906;
  __int128 *v1907;
  __int128 *v1908;
  uint64_t v1909;
  uint64_t v1910;
  __int128 v1911;
  __int128 v1912;
  uint64_t v1913;
  uint64_t v1914;
  __int128 *v1915;
  __int128 *v1916;
  uint64_t v1917;
  uint64_t v1918;
  __int128 v1919;
  __int128 v1920;
  uint64_t v1921;
  uint64_t v1922;
  __int128 *v1923;
  __int128 *v1924;
  uint64_t v1925;
  uint64_t v1926;
  __int128 v1927;
  __int128 v1928;
  uint64_t v1929;
  uint64_t v1930;
  __int128 *v1931;
  __int128 *v1932;
  uint64_t v1933;
  uint64_t v1934;
  __int128 v1935;
  __int128 v1936;
  uint64_t v1937;
  uint64_t v1938;
  __int128 *v1939;
  __int128 *v1940;
  uint64_t v1941;
  uint64_t v1942;
  __int128 v1943;
  __int128 v1944;
  uint64_t v1945;
  uint64_t v1946;
  __int128 *v1947;
  __int128 *v1948;
  uint64_t v1949;
  uint64_t v1950;
  __int128 v1951;
  __int128 v1952;
  uint64_t v1953;
  uint64_t v1954;
  __int128 *v1955;
  __int128 *v1956;
  uint64_t v1957;
  uint64_t v1958;
  __int128 v1959;
  __int128 v1960;
  uint64_t v1961;
  uint64_t v1962;
  __int128 *v1963;
  __int128 *v1964;
  uint64_t v1965;
  uint64_t v1966;
  __int128 v1967;
  __int128 v1968;
  uint64_t v1969;
  uint64_t v1970;
  __int128 *v1971;
  __int128 *v1972;
  uint64_t v1973;
  uint64_t v1974;
  __int128 v1975;
  __int128 v1976;
  uint64_t v1977;
  uint64_t v1978;
  __int128 *v1979;
  __int128 *v1980;
  uint64_t v1981;
  uint64_t v1982;
  __int128 v1983;
  __int128 v1984;
  uint64_t v1985;
  uint64_t v1986;
  __int128 *v1987;
  __int128 *v1988;
  uint64_t v1989;
  uint64_t v1990;
  __int128 v1991;
  __int128 v1992;
  uint64_t v1993;
  uint64_t v1994;
  __int128 *v1995;
  __int128 *v1996;
  uint64_t v1997;
  uint64_t v1998;
  __int128 v1999;
  __int128 v2000;
  uint64_t v2001;
  uint64_t v2002;
  __int128 *v2003;
  __int128 *v2004;
  uint64_t v2005;
  uint64_t v2006;
  __int128 v2007;
  __int128 v2008;
  uint64_t v2009;
  uint64_t v2010;
  __int128 *v2011;
  __int128 *v2012;
  uint64_t v2013;
  uint64_t v2014;
  __int128 v2015;
  __int128 v2016;
  uint64_t v2017;
  uint64_t v2018;
  __int128 *v2019;
  __int128 *v2020;
  uint64_t v2021;
  uint64_t v2022;
  __int128 v2023;
  __int128 v2024;
  uint64_t v2025;
  uint64_t v2026;
  __int128 *v2027;
  __int128 *v2028;
  uint64_t v2029;
  uint64_t v2030;
  __int128 v2031;
  __int128 v2032;
  uint64_t v2033;
  uint64_t v2034;
  __int128 *v2035;
  __int128 *v2036;
  uint64_t v2037;
  uint64_t v2038;
  __int128 v2039;
  __int128 v2040;
  uint64_t v2041;
  uint64_t v2042;
  __int128 *v2043;
  __int128 *v2044;
  uint64_t v2045;
  uint64_t v2046;
  __int128 v2047;
  __int128 v2048;
  uint64_t v2049;
  uint64_t v2050;
  __int128 v2051;
  char v2052;
  uint64_t v2053;
  uint64_t v2054;
  uint64_t v2055;
  uint64_t v2056;
  _OWORD *v2057;
  uint64_t *v2058;
  uint64_t v2059;
  uint64_t v2060;
  __int128 v2061;
  uint64_t v2062;
  uint64_t v2063;
  __int128 v2064;
  uint64_t v2065;
  uint64_t v2066;
  __int128 v2067;
  __int128 v2068;
  uint64_t v2069;
  uint64_t v2070;
  __int128 v2071;
  uint64_t v2072;
  uint64_t v2073;
  __int128 v2074;
  uint64_t v2075;
  uint64_t v2076;
  __int128 v2077;
  uint64_t v2078;
  uint64_t v2079;
  __int128 v2080;
  uint64_t v2081;
  uint64_t v2082;
  __int128 v2083;
  uint64_t v2084;
  uint64_t v2085;
  __int128 v2086;
  uint64_t v2087;
  uint64_t v2088;
  __int128 v2089;
  uint64_t v2090;
  uint64_t v2091;
  __int128 v2092;
  uint64_t v2093;
  uint64_t v2094;
  __int128 v2095;
  uint64_t v2096;
  uint64_t v2097;
  __int128 v2098;
  uint64_t v2099;
  uint64_t v2100;
  __int128 v2101;
  uint64_t v2102;
  uint64_t v2103;
  __int128 v2104;
  uint64_t v2105;
  uint64_t v2106;
  __int128 v2107;
  uint64_t v2108;
  uint64_t v2109;
  __int128 v2110;
  uint64_t v2111;
  uint64_t v2112;
  __int128 v2113;
  uint64_t v2114;
  uint64_t v2115;
  __int128 v2116;
  uint64_t v2117;
  uint64_t v2118;
  __int128 v2119;
  uint64_t v2120;
  uint64_t v2121;
  __int128 v2122;
  uint64_t v2123;
  uint64_t v2124;
  __int128 v2125;
  uint64_t v2126;
  uint64_t v2127;
  __int128 v2128;
  uint64_t v2129;
  uint64_t v2130;
  __int128 v2131;
  uint64_t v2132;
  uint64_t v2133;
  __int128 v2134;
  uint64_t v2135;
  __int128 v2136;
  char v2137;
  uint64_t v2138;
  uint64_t v2139;
  uint64_t v2140;
  uint64_t v2141;
  __int128 *v2142;
  __int128 *v2143;
  uint64_t v2144;
  uint64_t v2145;
  __int128 v2146;
  __int128 v2147;
  uint64_t v2148;
  uint64_t v2149;
  __int128 *v2150;
  __int128 *v2151;
  uint64_t v2152;
  uint64_t v2153;
  __int128 v2154;
  __int128 v2155;
  uint64_t v2156;
  uint64_t v2157;
  __int128 *v2158;
  __int128 *v2159;
  uint64_t v2160;
  uint64_t v2161;
  __int128 v2162;
  __int128 v2163;
  uint64_t v2164;
  uint64_t v2165;
  __int128 *v2166;
  __int128 *v2167;
  uint64_t v2168;
  uint64_t v2169;
  __int128 v2170;
  __int128 v2171;
  uint64_t v2172;
  uint64_t v2173;
  __int128 *v2174;
  __int128 *v2175;
  uint64_t v2176;
  uint64_t v2177;
  __int128 v2178;
  __int128 v2179;
  uint64_t v2180;
  uint64_t v2181;
  __int128 *v2182;
  __int128 *v2183;
  uint64_t v2184;
  uint64_t v2185;
  __int128 v2186;
  __int128 v2187;
  uint64_t v2188;
  uint64_t v2189;
  __int128 *v2190;
  __int128 *v2191;
  uint64_t v2192;
  uint64_t v2193;
  __int128 v2194;
  __int128 v2195;
  uint64_t v2196;
  uint64_t v2197;
  __int128 *v2198;
  __int128 *v2199;
  uint64_t v2200;
  uint64_t v2201;
  __int128 v2202;
  __int128 v2203;
  uint64_t v2204;
  uint64_t v2205;
  __int128 *v2206;
  __int128 *v2207;
  uint64_t v2208;
  uint64_t v2209;
  __int128 v2210;
  __int128 v2211;
  uint64_t v2212;
  uint64_t v2213;
  __int128 *v2214;
  __int128 *v2215;
  uint64_t v2216;
  uint64_t v2217;
  __int128 v2218;
  __int128 v2219;
  uint64_t v2220;
  uint64_t v2221;
  __int128 *v2222;
  __int128 *v2223;
  uint64_t v2224;
  uint64_t v2225;
  __int128 v2226;
  __int128 v2227;
  uint64_t v2228;
  uint64_t v2229;
  __int128 *v2230;
  __int128 *v2231;
  uint64_t v2232;
  uint64_t v2233;
  __int128 v2234;
  __int128 v2235;
  uint64_t v2236;
  uint64_t v2237;
  __int128 *v2238;
  __int128 *v2239;
  uint64_t v2240;
  uint64_t v2241;
  __int128 v2242;
  __int128 v2243;
  uint64_t v2244;
  uint64_t v2245;
  __int128 *v2246;
  __int128 *v2247;
  uint64_t v2248;
  uint64_t v2249;
  __int128 v2250;
  __int128 v2251;
  uint64_t v2252;
  uint64_t v2253;
  __int128 *v2254;
  __int128 *v2255;
  uint64_t v2256;
  uint64_t v2257;
  __int128 v2258;
  __int128 v2259;
  uint64_t v2260;
  uint64_t v2261;
  __int128 *v2262;
  __int128 *v2263;
  uint64_t v2264;
  uint64_t v2265;
  __int128 v2266;
  __int128 v2267;
  uint64_t v2268;
  uint64_t v2269;
  __int128 *v2270;
  __int128 *v2271;
  uint64_t v2272;
  uint64_t v2273;
  __int128 v2274;
  __int128 v2275;
  uint64_t v2276;
  uint64_t v2277;
  __int128 *v2278;
  __int128 *v2279;
  uint64_t v2280;
  uint64_t v2281;
  __int128 v2282;
  __int128 v2283;
  uint64_t v2284;
  uint64_t v2285;
  __int128 *v2286;
  __int128 *v2287;
  uint64_t v2288;
  uint64_t v2289;
  __int128 v2290;
  __int128 v2291;
  uint64_t v2292;
  uint64_t v2293;
  __int128 *v2294;
  __int128 *v2295;
  uint64_t v2296;
  uint64_t v2297;
  __int128 v2298;
  __int128 v2299;
  uint64_t v2300;
  uint64_t v2301;
  __int128 *v2302;
  __int128 *v2303;
  uint64_t v2304;
  uint64_t v2305;
  __int128 v2306;
  __int128 v2307;
  uint64_t v2308;
  uint64_t v2309;
  __int128 *v2310;
  __int128 *v2311;
  uint64_t v2312;
  uint64_t v2313;
  __int128 v2314;
  __int128 v2315;
  uint64_t v2316;
  uint64_t v2317;
  __int128 *v2318;
  __int128 *v2319;
  uint64_t v2320;
  uint64_t v2321;
  __int128 v2322;
  __int128 v2323;
  uint64_t v2324;
  uint64_t v2325;
  __int128 v2326;
  char v2327;
  uint64_t v2328;
  uint64_t v2329;
  uint64_t v2330;
  uint64_t v2331;
  _OWORD *v2332;
  uint64_t *v2333;
  uint64_t v2334;
  uint64_t v2335;
  __int128 v2336;
  uint64_t v2337;
  uint64_t v2338;
  __int128 v2339;
  uint64_t v2340;
  uint64_t v2341;
  __int128 v2342;
  __int128 v2343;
  uint64_t v2344;
  uint64_t v2345;
  __int128 v2346;
  uint64_t v2347;
  uint64_t v2348;
  __int128 v2349;
  uint64_t v2350;
  uint64_t v2351;
  __int128 v2352;
  uint64_t v2353;
  uint64_t v2354;
  __int128 v2355;
  uint64_t v2356;
  uint64_t v2357;
  __int128 v2358;
  uint64_t v2359;
  uint64_t v2360;
  __int128 v2361;
  uint64_t v2362;
  uint64_t v2363;
  __int128 v2364;
  uint64_t v2365;
  uint64_t v2366;
  __int128 v2367;
  uint64_t v2368;
  uint64_t v2369;
  __int128 v2370;
  uint64_t v2371;
  uint64_t v2372;
  __int128 v2373;
  uint64_t v2374;
  uint64_t v2375;
  __int128 v2376;
  uint64_t v2377;
  uint64_t v2378;
  __int128 v2379;
  uint64_t v2380;
  uint64_t v2381;
  __int128 v2382;
  uint64_t v2383;
  uint64_t v2384;
  __int128 v2385;
  uint64_t v2386;
  uint64_t v2387;
  __int128 v2388;
  uint64_t v2389;
  uint64_t v2390;
  __int128 v2391;
  uint64_t v2392;
  uint64_t v2393;
  __int128 v2394;
  uint64_t v2395;
  uint64_t v2396;
  __int128 v2397;
  uint64_t v2398;
  uint64_t v2399;
  __int128 v2400;
  uint64_t v2401;
  uint64_t v2402;
  __int128 v2403;
  uint64_t v2404;
  uint64_t v2405;
  __int128 v2406;
  uint64_t v2407;
  uint64_t v2408;
  __int128 v2409;
  uint64_t v2410;
  __int128 v2411;
  char v2412;
  uint64_t v2413;
  uint64_t v2414;
  uint64_t v2415;
  uint64_t v2416;
  __int128 *v2417;
  __int128 *v2418;
  uint64_t v2419;
  uint64_t v2420;
  __int128 v2421;
  __int128 v2422;
  uint64_t v2423;
  uint64_t v2424;
  __int128 *v2425;
  __int128 *v2426;
  uint64_t v2427;
  uint64_t v2428;
  __int128 v2429;
  __int128 v2430;
  uint64_t v2431;
  uint64_t v2432;
  __int128 *v2433;
  __int128 *v2434;
  uint64_t v2435;
  uint64_t v2436;
  __int128 v2437;
  __int128 v2438;
  uint64_t v2439;
  uint64_t v2440;
  __int128 *v2441;
  __int128 *v2442;
  uint64_t v2443;
  uint64_t v2444;
  __int128 v2445;
  __int128 v2446;
  uint64_t v2447;
  uint64_t v2448;
  __int128 *v2449;
  __int128 *v2450;
  uint64_t v2451;
  uint64_t v2452;
  __int128 v2453;
  __int128 v2454;
  uint64_t v2455;
  uint64_t v2456;
  __int128 *v2457;
  __int128 *v2458;
  uint64_t v2459;
  uint64_t v2460;
  __int128 v2461;
  __int128 v2462;
  uint64_t v2463;
  uint64_t v2464;
  __int128 *v2465;
  __int128 *v2466;
  uint64_t v2467;
  uint64_t v2468;
  __int128 v2469;
  __int128 v2470;
  uint64_t v2471;
  uint64_t v2472;
  __int128 *v2473;
  __int128 *v2474;
  uint64_t v2475;
  uint64_t v2476;
  __int128 v2477;
  __int128 v2478;
  uint64_t v2479;
  uint64_t v2480;
  __int128 *v2481;
  __int128 *v2482;
  uint64_t v2483;
  uint64_t v2484;
  __int128 v2485;
  __int128 v2486;
  uint64_t v2487;
  uint64_t v2488;
  __int128 *v2489;
  __int128 *v2490;
  uint64_t v2491;
  uint64_t v2492;
  __int128 v2493;
  __int128 v2494;
  uint64_t v2495;
  uint64_t v2496;
  __int128 *v2497;
  __int128 *v2498;
  uint64_t v2499;
  uint64_t v2500;
  __int128 v2501;
  __int128 v2502;
  uint64_t v2503;
  uint64_t v2504;
  __int128 *v2505;
  __int128 *v2506;
  uint64_t v2507;
  uint64_t v2508;
  __int128 v2509;
  __int128 v2510;
  uint64_t v2511;
  uint64_t v2512;
  __int128 *v2513;
  __int128 *v2514;
  uint64_t v2515;
  uint64_t v2516;
  __int128 v2517;
  __int128 v2518;
  uint64_t v2519;
  uint64_t v2520;
  __int128 *v2521;
  __int128 *v2522;
  uint64_t v2523;
  uint64_t v2524;
  __int128 v2525;
  __int128 v2526;
  uint64_t v2527;
  uint64_t v2528;
  __int128 *v2529;
  __int128 *v2530;
  uint64_t v2531;
  uint64_t v2532;
  __int128 v2533;
  __int128 v2534;
  uint64_t v2535;
  uint64_t v2536;
  __int128 *v2537;
  __int128 *v2538;
  uint64_t v2539;
  uint64_t v2540;
  __int128 v2541;
  __int128 v2542;
  uint64_t v2543;
  uint64_t v2544;
  __int128 *v2545;
  __int128 *v2546;
  uint64_t v2547;
  uint64_t v2548;
  __int128 v2549;
  __int128 v2550;
  uint64_t v2551;
  uint64_t v2552;
  __int128 *v2553;
  __int128 *v2554;
  uint64_t v2555;
  uint64_t v2556;
  __int128 v2557;
  __int128 v2558;
  uint64_t v2559;
  uint64_t v2560;
  __int128 *v2561;
  __int128 *v2562;
  uint64_t v2563;
  uint64_t v2564;
  __int128 v2565;
  __int128 v2566;
  uint64_t v2567;
  uint64_t v2568;
  __int128 *v2569;
  __int128 *v2570;
  uint64_t v2571;
  uint64_t v2572;
  __int128 v2573;
  __int128 v2574;
  uint64_t v2575;
  uint64_t v2576;
  __int128 *v2577;
  __int128 *v2578;
  uint64_t v2579;
  uint64_t v2580;
  __int128 v2581;
  __int128 v2582;
  uint64_t v2583;
  uint64_t v2584;
  __int128 *v2585;
  __int128 *v2586;
  uint64_t v2587;
  uint64_t v2588;
  __int128 v2589;
  __int128 v2590;
  uint64_t v2591;
  uint64_t v2592;
  __int128 *v2593;
  __int128 *v2594;
  uint64_t v2595;
  uint64_t v2596;
  __int128 v2597;
  __int128 v2598;
  uint64_t v2599;
  uint64_t v2600;
  __int128 v2601;
  char v2602;
  uint64_t v2603;
  uint64_t v2604;
  uint64_t v2605;
  uint64_t v2606;
  uint64_t v2607;
  uint64_t v2608;
  char v2609;
  uint64_t v2610;
  uint64_t v2611;
  uint64_t v2612;
  uint64_t v2613;
  uint64_t v2614;
  uint64_t v2615;
  uint64_t v2616;
  uint64_t v2617;
  char *v2618;
  char *v2619;
  uint64_t v2620;
  uint64_t v2621;
  uint64_t v2622;
  char *v2623;
  char *v2624;
  uint64_t v2625;
  uint64_t v2626;

  v6 = a2[3];
  if (a1[3])
  {
    if (v6)
    {
      *a1 = *a2;
      v7 = a2[1];
      v8 = a1[1];
      a1[1] = v7;
      swift_bridgeObjectRetain(v7);
      swift_bridgeObjectRelease(v8);
      a1[2] = a2[2];
      v9 = a2[3];
      v10 = a1[3];
      a1[3] = v9;
      swift_bridgeObjectRetain(v9);
      swift_bridgeObjectRelease(v10);
      a1[4] = a2[4];
      v11 = a2[5];
      v12 = a1[5];
      a1[5] = v11;
      swift_bridgeObjectRetain(v11);
      swift_bridgeObjectRelease(v12);
      a1[6] = a2[6];
      v13 = a2[7];
      v14 = a1[7];
      a1[7] = v13;
      swift_bridgeObjectRetain(v13);
      swift_bridgeObjectRelease(v14);
      a1[8] = a2[8];
      v15 = a2[9];
      v16 = a1[9];
      a1[9] = v15;
      swift_bridgeObjectRetain(v15);
      swift_bridgeObjectRelease(v16);
      a1[10] = a2[10];
      v17 = a2[11];
      v18 = a1[11];
      a1[11] = v17;
      swift_bridgeObjectRetain(v17);
      swift_bridgeObjectRelease(v18);
    }
    else
    {
      sub_1001D41BC(a1);
      v25 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v25;
      v26 = *((_OWORD *)a2 + 5);
      v28 = *((_OWORD *)a2 + 2);
      v27 = *((_OWORD *)a2 + 3);
      *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
      *((_OWORD *)a1 + 5) = v26;
      *((_OWORD *)a1 + 2) = v28;
      *((_OWORD *)a1 + 3) = v27;
    }
  }
  else if (v6)
  {
    *a1 = *a2;
    v19 = a2[1];
    a1[1] = v19;
    a1[2] = a2[2];
    v20 = a2[3];
    a1[3] = v20;
    a1[4] = a2[4];
    v21 = a2[5];
    a1[5] = v21;
    a1[6] = a2[6];
    v22 = a2[7];
    a1[7] = v22;
    a1[8] = a2[8];
    v23 = a2[9];
    a1[9] = v23;
    a1[10] = a2[10];
    v24 = a2[11];
    a1[11] = v24;
    swift_bridgeObjectRetain(v19);
    swift_bridgeObjectRetain(v20);
    swift_bridgeObjectRetain(v21);
    swift_bridgeObjectRetain(v22);
    swift_bridgeObjectRetain(v23);
    swift_bridgeObjectRetain(v24);
  }
  else
  {
    v29 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v29;
    v30 = *((_OWORD *)a2 + 2);
    v31 = *((_OWORD *)a2 + 3);
    v32 = *((_OWORD *)a2 + 5);
    *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
    *((_OWORD *)a1 + 5) = v32;
    *((_OWORD *)a1 + 2) = v30;
    *((_OWORD *)a1 + 3) = v31;
  }
  v33 = *(int *)(a3 + 20);
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  *(_QWORD *)v34 = *(_QWORD *)((char *)a2 + v33);
  v36 = *(_QWORD *)((char *)a2 + v33 + 8);
  v37 = *(_QWORD *)((char *)a1 + v33 + 8);
  *((_QWORD *)v34 + 1) = v36;
  swift_bridgeObjectRetain(v36);
  swift_bridgeObjectRelease(v37);
  *((_QWORD *)v34 + 2) = *((_QWORD *)v35 + 2);
  v38 = *((_QWORD *)v35 + 3);
  v39 = *((_QWORD *)v34 + 3);
  *((_QWORD *)v34 + 3) = v38;
  swift_bridgeObjectRetain(v38);
  swift_bridgeObjectRelease(v39);
  *((_QWORD *)v34 + 4) = *((_QWORD *)v35 + 4);
  v40 = *((_QWORD *)v35 + 5);
  v41 = *((_QWORD *)v34 + 5);
  *((_QWORD *)v34 + 5) = v40;
  swift_bridgeObjectRetain(v40);
  swift_bridgeObjectRelease(v41);
  *((_QWORD *)v34 + 6) = *((_QWORD *)v35 + 6);
  v42 = *((_QWORD *)v35 + 7);
  v43 = *((_QWORD *)v34 + 7);
  *((_QWORD *)v34 + 7) = v42;
  swift_bridgeObjectRetain(v42);
  swift_bridgeObjectRelease(v43);
  *((_QWORD *)v34 + 8) = *((_QWORD *)v35 + 8);
  v44 = *((_QWORD *)v35 + 9);
  v45 = *((_QWORD *)v34 + 9);
  *((_QWORD *)v34 + 9) = v44;
  swift_bridgeObjectRetain(v44);
  swift_bridgeObjectRelease(v45);
  *((_QWORD *)v34 + 10) = *((_QWORD *)v35 + 10);
  v46 = *((_QWORD *)v35 + 11);
  v47 = *((_QWORD *)v34 + 11);
  *((_QWORD *)v34 + 11) = v46;
  swift_bridgeObjectRetain(v46);
  swift_bridgeObjectRelease(v47);
  v34[96] = v35[96];
  *((_QWORD *)v34 + 13) = *((_QWORD *)v35 + 13);
  v48 = *((_QWORD *)v35 + 14);
  v49 = *((_QWORD *)v34 + 14);
  *((_QWORD *)v34 + 14) = v48;
  swift_bridgeObjectRetain(v48);
  swift_bridgeObjectRelease(v49);
  *((_QWORD *)v34 + 15) = *((_QWORD *)v35 + 15);
  v50 = *((_QWORD *)v35 + 16);
  v51 = *((_QWORD *)v34 + 16);
  *((_QWORD *)v34 + 16) = v50;
  swift_bridgeObjectRetain(v50);
  swift_bridgeObjectRelease(v51);
  v52 = *((_QWORD *)v35 + 17);
  v53 = *((_QWORD *)v34 + 17);
  *((_QWORD *)v34 + 17) = v52;
  swift_bridgeObjectRetain(v52);
  swift_bridgeObjectRelease(v53);
  *((_QWORD *)v34 + 18) = *((_QWORD *)v35 + 18);
  v54 = *((_QWORD *)v35 + 19);
  v55 = *((_QWORD *)v34 + 19);
  *((_QWORD *)v34 + 19) = v54;
  swift_bridgeObjectRetain(v54);
  swift_bridgeObjectRelease(v55);
  v56 = *((_QWORD *)v35 + 20);
  v57 = *((_QWORD *)v34 + 20);
  *((_QWORD *)v34 + 20) = v56;
  swift_bridgeObjectRetain(v56);
  swift_bridgeObjectRelease(v57);
  *((_QWORD *)v34 + 21) = *((_QWORD *)v35 + 21);
  v58 = *((_QWORD *)v35 + 22);
  v59 = *((_QWORD *)v34 + 22);
  *((_QWORD *)v34 + 22) = v58;
  swift_bridgeObjectRetain(v58);
  swift_bridgeObjectRelease(v59);
  v34[184] = v35[184];
  v60 = (int *)type metadata accessor for Workflow(0);
  v61 = v60[18];
  v62 = &v34[v61];
  v63 = &v35[v61];
  v64 = type metadata accessor for HardwareAttestationType(0);
  v65 = *(_QWORD *)(v64 - 8);
  v66 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v65 + 48);
  v67 = v66(v62, 1, v64);
  v68 = v66(v63, 1, v64);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v62, v63, v64);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v68)
  {
    (*(void (**)(char *, uint64_t))(v65 + 8))(v62, v64);
LABEL_13:
    v69 = sub_100004828(&qword_1006322F0);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(char *, char *, uint64_t))(v65 + 24))(v62, v63, v64);
LABEL_14:
  v70 = v60[19];
  v71 = *(_QWORD *)&v34[v70];
  v72 = *(_QWORD *)&v35[v70];
  *(_QWORD *)&v34[v70] = v72;
  swift_bridgeObjectRetain(v72);
  swift_bridgeObjectRelease(v71);
  v73 = v60[20];
  v74 = *(_QWORD *)&v35[v73];
  v75 = *(_QWORD *)&v34[v73];
  *(_QWORD *)&v34[v73] = v74;
  swift_bridgeObjectRetain(v74);
  swift_bridgeObjectRelease(v75);
  v76 = v60[21];
  v77 = &v34[v76];
  v78 = &v35[v76];
  *(_QWORD *)v77 = *(_QWORD *)v78;
  v79 = *((_QWORD *)v78 + 1);
  v80 = *((_QWORD *)v77 + 1);
  *((_QWORD *)v77 + 1) = v79;
  swift_bridgeObjectRetain(v79);
  swift_bridgeObjectRelease(v80);
  v34[v60[22]] = v35[v60[22]];
  v81 = v60[23];
  v82 = *(_QWORD *)&v35[v81];
  v83 = *(_QWORD *)&v34[v81];
  *(_QWORD *)&v34[v81] = v82;
  swift_bridgeObjectRetain(v82);
  swift_bridgeObjectRelease(v83);
  v84 = v60[24];
  v85 = *(_QWORD *)&v34[v84];
  v86 = *(_QWORD *)&v35[v84];
  *(_QWORD *)&v34[v84] = v86;
  swift_bridgeObjectRetain(v86);
  swift_bridgeObjectRelease(v85);
  v87 = v60[25];
  v88 = *(_QWORD *)&v34[v87];
  v89 = *(_QWORD *)&v35[v87];
  *(_QWORD *)&v34[v87] = v89;
  swift_bridgeObjectRetain(v89);
  swift_bridgeObjectRelease(v88);
  v34[v60[26]] = v35[v60[26]];
  v90 = v60[27];
  v91 = &v34[v90];
  v92 = &v35[v90];
  v93 = v92[8];
  *(_QWORD *)v91 = *(_QWORD *)v92;
  v91[8] = v93;
  v94 = v60[28];
  v95 = *(_QWORD *)&v34[v94];
  v96 = *(_QWORD *)&v35[v94];
  *(_QWORD *)&v34[v94] = v96;
  swift_bridgeObjectRetain(v96);
  swift_bridgeObjectRelease(v95);
  v97 = v60[29];
  v98 = *(_QWORD *)&v34[v97];
  v99 = *(_QWORD *)&v35[v97];
  *(_QWORD *)&v34[v97] = v99;
  swift_bridgeObjectRetain(v99);
  swift_bridgeObjectRelease(v98);
  v100 = v60[30];
  v101 = *(_QWORD *)&v34[v100];
  v102 = *(_QWORD *)&v35[v100];
  *(_QWORD *)&v34[v100] = v102;
  swift_bridgeObjectRetain(v102);
  swift_bridgeObjectRelease(v101);
  v103 = v60[31];
  v104 = &v34[v103];
  v105 = &v35[v103];
  v106 = *(_QWORD *)v105;
  v104[8] = v105[8];
  *(_QWORD *)v104 = v106;
  v107 = v60[32];
  v108 = &v34[v107];
  v109 = &v35[v107];
  v110 = *(_QWORD *)v109;
  v108[8] = v109[8];
  *(_QWORD *)v108 = v110;
  v111 = v60[33];
  v112 = &v34[v111];
  v113 = &v35[v111];
  v114 = *(_QWORD *)v113;
  v112[8] = v113[8];
  *(_QWORD *)v112 = v114;
  v115 = v60[34];
  v116 = &v34[v115];
  v117 = &v35[v115];
  v118 = *(_QWORD *)v117;
  v116[8] = v117[8];
  *(_QWORD *)v116 = v118;
  v119 = v60[35];
  v120 = &v34[v119];
  v121 = &v35[v119];
  v122 = *(_QWORD *)v121;
  v120[8] = v121[8];
  *(_QWORD *)v120 = v122;
  v34[v60[36]] = v35[v60[36]];
  v34[v60[37]] = v35[v60[37]];
  v123 = v60[38];
  v124 = &v34[v123];
  v125 = &v35[v123];
  v126 = *(_QWORD *)&v34[v123 + 8];
  v127 = *(_QWORD *)&v35[v123 + 8];
  if (v126 != 1)
  {
    if (v127 == 1)
    {
      sub_1001D41F0(v124);
      goto LABEL_20;
    }
    *(_QWORD *)v124 = *(_QWORD *)v125;
    v131 = *((_QWORD *)v125 + 1);
    *((_QWORD *)v124 + 1) = v131;
    swift_bridgeObjectRetain(v131);
    swift_bridgeObjectRelease(v126);
    v132 = v124 + 16;
    v133 = (uint64_t *)(v125 + 16);
    v134 = *((_QWORD *)v125 + 104);
    if (*((_QWORD *)v124 + 104) == 1)
    {
      if (v134 != 1)
      {
        v135 = *v133;
        if (*v133 == 1)
        {
          v136 = *(_OWORD *)v133;
          *(_OWORD *)(v124 + 25) = *(_OWORD *)(v125 + 25);
          *v132 = v136;
        }
        else
        {
          *((_QWORD *)v124 + 2) = v135;
          v124[24] = v125[24];
          v690 = *((_QWORD *)v125 + 4);
          v124[40] = v125[40];
          *((_QWORD *)v124 + 4) = v690;
          swift_bridgeObjectRetain(v135);
        }
        v691 = *((_QWORD *)v125 + 6);
        if (v691 == 1)
        {
          v692 = *((_OWORD *)v125 + 3);
          *(_OWORD *)(v124 + 57) = *(_OWORD *)(v125 + 57);
          *((_OWORD *)v124 + 3) = v692;
        }
        else
        {
          *((_QWORD *)v124 + 6) = v691;
          v124[56] = v125[56];
          v694 = *((_QWORD *)v125 + 8);
          v124[72] = v125[72];
          *((_QWORD *)v124 + 8) = v694;
          swift_bridgeObjectRetain(v691);
        }
        v695 = *((_QWORD *)v125 + 10);
        if (v695 == 1)
        {
          v696 = *((_OWORD *)v125 + 5);
          *(_OWORD *)(v124 + 89) = *(_OWORD *)(v125 + 89);
          *((_OWORD *)v124 + 5) = v696;
        }
        else
        {
          *((_QWORD *)v124 + 10) = v695;
          v124[88] = v125[88];
          v697 = *((_QWORD *)v125 + 12);
          v124[104] = v125[104];
          *((_QWORD *)v124 + 12) = v697;
          swift_bridgeObjectRetain(v695);
        }
        v698 = *((_QWORD *)v125 + 14);
        if (v698 == 1)
        {
          v699 = *((_OWORD *)v125 + 7);
          *(_OWORD *)(v124 + 121) = *(_OWORD *)(v125 + 121);
          *((_OWORD *)v124 + 7) = v699;
        }
        else
        {
          *((_QWORD *)v124 + 14) = v698;
          v124[120] = v125[120];
          v700 = *((_QWORD *)v125 + 16);
          v124[136] = v125[136];
          *((_QWORD *)v124 + 16) = v700;
          swift_bridgeObjectRetain(v698);
        }
        v701 = *((_QWORD *)v125 + 18);
        if (v701 == 1)
        {
          v702 = *((_OWORD *)v125 + 9);
          *(_OWORD *)(v124 + 153) = *(_OWORD *)(v125 + 153);
          *((_OWORD *)v124 + 9) = v702;
        }
        else
        {
          *((_QWORD *)v124 + 18) = v701;
          v124[152] = v125[152];
          v703 = *((_QWORD *)v125 + 20);
          v124[168] = v125[168];
          *((_QWORD *)v124 + 20) = v703;
          swift_bridgeObjectRetain(v701);
        }
        v704 = *((_QWORD *)v125 + 22);
        if (v704 == 1)
        {
          v705 = *((_OWORD *)v125 + 11);
          *(_OWORD *)(v124 + 185) = *(_OWORD *)(v125 + 185);
          *((_OWORD *)v124 + 11) = v705;
        }
        else
        {
          *((_QWORD *)v124 + 22) = v704;
          v124[184] = v125[184];
          v706 = *((_QWORD *)v125 + 24);
          v124[200] = v125[200];
          *((_QWORD *)v124 + 24) = v706;
          swift_bridgeObjectRetain(v704);
        }
        v707 = *((_QWORD *)v125 + 26);
        if (v707 == 1)
        {
          v708 = *((_OWORD *)v125 + 13);
          *(_OWORD *)(v124 + 217) = *(_OWORD *)(v125 + 217);
          *((_OWORD *)v124 + 13) = v708;
        }
        else
        {
          *((_QWORD *)v124 + 26) = v707;
          v124[216] = v125[216];
          v709 = *((_QWORD *)v125 + 28);
          v124[232] = v125[232];
          *((_QWORD *)v124 + 28) = v709;
          swift_bridgeObjectRetain(v707);
        }
        v710 = *((_QWORD *)v125 + 30);
        if (v710 == 1)
        {
          v711 = *((_OWORD *)v125 + 15);
          *(_OWORD *)(v124 + 249) = *(_OWORD *)(v125 + 249);
          *((_OWORD *)v124 + 15) = v711;
        }
        else
        {
          *((_QWORD *)v124 + 30) = v710;
          v124[248] = v125[248];
          v712 = *((_QWORD *)v125 + 32);
          v124[264] = v125[264];
          *((_QWORD *)v124 + 32) = v712;
          swift_bridgeObjectRetain(v710);
        }
        v713 = *((_QWORD *)v125 + 34);
        if (v713 == 1)
        {
          v714 = *((_OWORD *)v125 + 17);
          *(_OWORD *)(v124 + 281) = *(_OWORD *)(v125 + 281);
          *((_OWORD *)v124 + 17) = v714;
        }
        else
        {
          *((_QWORD *)v124 + 34) = v713;
          v124[280] = v125[280];
          v715 = *((_QWORD *)v125 + 36);
          v124[296] = v125[296];
          *((_QWORD *)v124 + 36) = v715;
          swift_bridgeObjectRetain(v713);
        }
        v716 = *((_QWORD *)v125 + 38);
        if (v716 == 1)
        {
          v717 = *((_OWORD *)v125 + 19);
          *(_OWORD *)(v124 + 313) = *(_OWORD *)(v125 + 313);
          *((_OWORD *)v124 + 19) = v717;
        }
        else
        {
          *((_QWORD *)v124 + 38) = v716;
          v124[312] = v125[312];
          v718 = *((_QWORD *)v125 + 40);
          v124[328] = v125[328];
          *((_QWORD *)v124 + 40) = v718;
          swift_bridgeObjectRetain(v716);
        }
        v719 = *((_QWORD *)v125 + 42);
        if (v719 == 1)
        {
          v720 = *((_OWORD *)v125 + 21);
          *(_OWORD *)(v124 + 345) = *(_OWORD *)(v125 + 345);
          *((_OWORD *)v124 + 21) = v720;
        }
        else
        {
          *((_QWORD *)v124 + 42) = v719;
          v124[344] = v125[344];
          v721 = *((_QWORD *)v125 + 44);
          v124[360] = v125[360];
          *((_QWORD *)v124 + 44) = v721;
          swift_bridgeObjectRetain(v719);
        }
        v722 = *((_QWORD *)v125 + 46);
        if (v722 == 1)
        {
          v723 = *((_OWORD *)v125 + 23);
          *(_OWORD *)(v124 + 377) = *(_OWORD *)(v125 + 377);
          *((_OWORD *)v124 + 23) = v723;
        }
        else
        {
          *((_QWORD *)v124 + 46) = v722;
          v124[376] = v125[376];
          v724 = *((_QWORD *)v125 + 48);
          v124[392] = v125[392];
          *((_QWORD *)v124 + 48) = v724;
          swift_bridgeObjectRetain(v722);
        }
        v725 = *((_QWORD *)v125 + 50);
        if (v725 == 1)
        {
          v726 = *((_OWORD *)v125 + 25);
          *(_OWORD *)(v124 + 409) = *(_OWORD *)(v125 + 409);
          *((_OWORD *)v124 + 25) = v726;
        }
        else
        {
          *((_QWORD *)v124 + 50) = v725;
          v124[408] = v125[408];
          v727 = *((_QWORD *)v125 + 52);
          v124[424] = v125[424];
          *((_QWORD *)v124 + 52) = v727;
          swift_bridgeObjectRetain(v725);
        }
        v728 = *((_QWORD *)v125 + 54);
        if (v728 == 1)
        {
          v729 = *((_OWORD *)v125 + 27);
          *(_OWORD *)(v124 + 441) = *(_OWORD *)(v125 + 441);
          *((_OWORD *)v124 + 27) = v729;
        }
        else
        {
          *((_QWORD *)v124 + 54) = v728;
          v124[440] = v125[440];
          v730 = *((_QWORD *)v125 + 56);
          v124[456] = v125[456];
          *((_QWORD *)v124 + 56) = v730;
          swift_bridgeObjectRetain(v728);
        }
        v731 = *((_QWORD *)v125 + 58);
        if (v731 == 1)
        {
          v732 = *((_OWORD *)v125 + 29);
          *(_OWORD *)(v124 + 473) = *(_OWORD *)(v125 + 473);
          *((_OWORD *)v124 + 29) = v732;
        }
        else
        {
          *((_QWORD *)v124 + 58) = v731;
          v124[472] = v125[472];
          v733 = *((_QWORD *)v125 + 60);
          v124[488] = v125[488];
          *((_QWORD *)v124 + 60) = v733;
          swift_bridgeObjectRetain(v731);
        }
        v734 = *((_QWORD *)v125 + 62);
        if (v734 == 1)
        {
          v735 = *((_OWORD *)v125 + 31);
          *(_OWORD *)(v124 + 505) = *(_OWORD *)(v125 + 505);
          *((_OWORD *)v124 + 31) = v735;
        }
        else
        {
          *((_QWORD *)v124 + 62) = v734;
          v124[504] = v125[504];
          v736 = *((_QWORD *)v125 + 64);
          v124[520] = v125[520];
          *((_QWORD *)v124 + 64) = v736;
          swift_bridgeObjectRetain(v734);
        }
        v737 = *((_QWORD *)v125 + 66);
        if (v737 == 1)
        {
          v738 = *((_OWORD *)v125 + 33);
          *(_OWORD *)(v124 + 537) = *(_OWORD *)(v125 + 537);
          *((_OWORD *)v124 + 33) = v738;
        }
        else
        {
          *((_QWORD *)v124 + 66) = v737;
          v124[536] = v125[536];
          v739 = *((_QWORD *)v125 + 68);
          v124[552] = v125[552];
          *((_QWORD *)v124 + 68) = v739;
          swift_bridgeObjectRetain(v737);
        }
        v740 = *((_QWORD *)v125 + 70);
        if (v740 == 1)
        {
          v741 = *((_OWORD *)v125 + 35);
          *(_OWORD *)(v124 + 569) = *(_OWORD *)(v125 + 569);
          *((_OWORD *)v124 + 35) = v741;
        }
        else
        {
          *((_QWORD *)v124 + 70) = v740;
          v124[568] = v125[568];
          v742 = *((_QWORD *)v125 + 72);
          v124[584] = v125[584];
          *((_QWORD *)v124 + 72) = v742;
          swift_bridgeObjectRetain(v740);
        }
        v743 = *((_QWORD *)v125 + 74);
        if (v743 == 1)
        {
          v744 = *((_OWORD *)v125 + 37);
          *(_OWORD *)(v124 + 601) = *(_OWORD *)(v125 + 601);
          *((_OWORD *)v124 + 37) = v744;
        }
        else
        {
          *((_QWORD *)v124 + 74) = v743;
          v124[600] = v125[600];
          v745 = *((_QWORD *)v125 + 76);
          v124[616] = v125[616];
          *((_QWORD *)v124 + 76) = v745;
          swift_bridgeObjectRetain(v743);
        }
        v746 = *((_QWORD *)v125 + 78);
        if (v746 == 1)
        {
          v747 = *((_OWORD *)v125 + 39);
          *(_OWORD *)(v124 + 633) = *(_OWORD *)(v125 + 633);
          *((_OWORD *)v124 + 39) = v747;
        }
        else
        {
          *((_QWORD *)v124 + 78) = v746;
          v124[632] = v125[632];
          v748 = *((_QWORD *)v125 + 80);
          v124[648] = v125[648];
          *((_QWORD *)v124 + 80) = v748;
          swift_bridgeObjectRetain(v746);
        }
        v749 = *((_QWORD *)v125 + 82);
        if (v749 == 1)
        {
          v750 = *((_OWORD *)v125 + 41);
          *(_OWORD *)(v124 + 665) = *(_OWORD *)(v125 + 665);
          *((_OWORD *)v124 + 41) = v750;
        }
        else
        {
          *((_QWORD *)v124 + 82) = v749;
          v124[664] = v125[664];
          v751 = *((_QWORD *)v125 + 84);
          v124[680] = v125[680];
          *((_QWORD *)v124 + 84) = v751;
          swift_bridgeObjectRetain(v749);
        }
        v752 = *((_QWORD *)v125 + 86);
        if (v752 == 1)
        {
          v753 = *((_OWORD *)v125 + 43);
          *(_OWORD *)(v124 + 697) = *(_OWORD *)(v125 + 697);
          *((_OWORD *)v124 + 43) = v753;
        }
        else
        {
          *((_QWORD *)v124 + 86) = v752;
          v124[696] = v125[696];
          v754 = *((_QWORD *)v125 + 88);
          v124[712] = v125[712];
          *((_QWORD *)v124 + 88) = v754;
          swift_bridgeObjectRetain(v752);
        }
        v755 = *((_QWORD *)v125 + 90);
        if (v755 == 1)
        {
          v756 = *((_OWORD *)v125 + 45);
          *(_OWORD *)(v124 + 729) = *(_OWORD *)(v125 + 729);
          *((_OWORD *)v124 + 45) = v756;
        }
        else
        {
          *((_QWORD *)v124 + 90) = v755;
          v124[728] = v125[728];
          v757 = *((_QWORD *)v125 + 92);
          v124[744] = v125[744];
          *((_QWORD *)v124 + 92) = v757;
          swift_bridgeObjectRetain(v755);
        }
        v758 = *((_QWORD *)v125 + 94);
        if (v758 == 1)
        {
          v759 = *((_OWORD *)v125 + 47);
          *(_OWORD *)(v124 + 761) = *(_OWORD *)(v125 + 761);
          *((_OWORD *)v124 + 47) = v759;
        }
        else
        {
          *((_QWORD *)v124 + 94) = v758;
          v124[760] = v125[760];
          v760 = *((_QWORD *)v125 + 96);
          v124[776] = v125[776];
          *((_QWORD *)v124 + 96) = v760;
          swift_bridgeObjectRetain(v758);
        }
        v761 = *((_OWORD *)v125 + 49);
        v124[800] = v125[800];
        *((_OWORD *)v124 + 49) = v761;
        v762 = *(_OWORD *)(v125 + 808);
        v124[824] = v125[824];
        *(_OWORD *)(v124 + 808) = v762;
        v124[825] = v125[825];
        v124[826] = v125[826];
        v124[827] = v125[827];
        v124[828] = v125[828];
        v124[829] = v125[829];
        v124[830] = v125[830];
        v124[831] = v125[831];
        v763 = *((_QWORD *)v125 + 104);
        *((_QWORD *)v124 + 104) = v763;
        v764 = *((_QWORD *)v125 + 105);
        *((_QWORD *)v124 + 105) = v764;
        swift_bridgeObjectRetain(v763);
        swift_bridgeObjectRetain(v764);
        goto LABEL_793;
      }
    }
    else
    {
      if (v134 != 1)
      {
        v142 = *(_QWORD *)v132;
        v143 = *v133;
        if (*(_QWORD *)v132 == 1)
        {
          if (v143 == 1)
          {
            v144 = *(_OWORD *)v133;
            *(_OWORD *)(v124 + 25) = *(_OWORD *)(v125 + 25);
            *v132 = v144;
          }
          else
          {
            *((_QWORD *)v124 + 2) = v143;
            v124[24] = v125[24];
            v765 = *((_QWORD *)v125 + 4);
            v124[40] = v125[40];
            *((_QWORD *)v124 + 4) = v765;
            swift_bridgeObjectRetain(v143);
          }
        }
        else if (v143 == 1)
        {
          sub_100083F00((_QWORD *)v124 + 2);
          v693 = *(_OWORD *)(v125 + 25);
          *v132 = *(_OWORD *)v133;
          *(_OWORD *)(v124 + 25) = v693;
        }
        else
        {
          *((_QWORD *)v124 + 2) = v143;
          swift_bridgeObjectRetain(v143);
          swift_bridgeObjectRelease(v142);
          v124[24] = v125[24];
          v766 = *((_QWORD *)v125 + 4);
          v124[40] = v125[40];
          *((_QWORD *)v124 + 4) = v766;
        }
        v767 = (__int128 *)(v124 + 48);
        v768 = *((_QWORD *)v124 + 6);
        v770 = (__int128 *)(v125 + 48);
        v769 = *((_QWORD *)v125 + 6);
        if (v768 == 1)
        {
          if (v769 == 1)
          {
            v771 = *v770;
            *(_OWORD *)(v124 + 57) = *(_OWORD *)(v125 + 57);
            *v767 = v771;
          }
          else
          {
            *((_QWORD *)v124 + 6) = v769;
            v124[56] = v125[56];
            v773 = *((_QWORD *)v125 + 8);
            v124[72] = v125[72];
            *((_QWORD *)v124 + 8) = v773;
            swift_bridgeObjectRetain(v769);
          }
        }
        else if (v769 == 1)
        {
          sub_100083F00((_QWORD *)v124 + 6);
          v772 = *(_OWORD *)(v125 + 57);
          *v767 = *v770;
          *(_OWORD *)(v124 + 57) = v772;
        }
        else
        {
          *((_QWORD *)v124 + 6) = v769;
          swift_bridgeObjectRetain(v769);
          swift_bridgeObjectRelease(v768);
          v124[56] = v125[56];
          v774 = *((_QWORD *)v125 + 8);
          v124[72] = v125[72];
          *((_QWORD *)v124 + 8) = v774;
        }
        v775 = (__int128 *)(v124 + 80);
        v776 = *((_QWORD *)v124 + 10);
        v778 = (__int128 *)(v125 + 80);
        v777 = *((_QWORD *)v125 + 10);
        if (v776 == 1)
        {
          if (v777 == 1)
          {
            v779 = *v778;
            *(_OWORD *)(v124 + 89) = *(_OWORD *)(v125 + 89);
            *v775 = v779;
          }
          else
          {
            *((_QWORD *)v124 + 10) = v777;
            v124[88] = v125[88];
            v781 = *((_QWORD *)v125 + 12);
            v124[104] = v125[104];
            *((_QWORD *)v124 + 12) = v781;
            swift_bridgeObjectRetain(v777);
          }
        }
        else if (v777 == 1)
        {
          sub_100083F00((_QWORD *)v124 + 10);
          v780 = *(_OWORD *)(v125 + 89);
          *v775 = *v778;
          *(_OWORD *)(v124 + 89) = v780;
        }
        else
        {
          *((_QWORD *)v124 + 10) = v777;
          swift_bridgeObjectRetain(v777);
          swift_bridgeObjectRelease(v776);
          v124[88] = v125[88];
          v782 = *((_QWORD *)v125 + 12);
          v124[104] = v125[104];
          *((_QWORD *)v124 + 12) = v782;
        }
        v783 = (__int128 *)(v124 + 112);
        v784 = *((_QWORD *)v124 + 14);
        v786 = (__int128 *)(v125 + 112);
        v785 = *((_QWORD *)v125 + 14);
        if (v784 == 1)
        {
          if (v785 == 1)
          {
            v787 = *v786;
            *(_OWORD *)(v124 + 121) = *(_OWORD *)(v125 + 121);
            *v783 = v787;
          }
          else
          {
            *((_QWORD *)v124 + 14) = v785;
            v124[120] = v125[120];
            v789 = *((_QWORD *)v125 + 16);
            v124[136] = v125[136];
            *((_QWORD *)v124 + 16) = v789;
            swift_bridgeObjectRetain(v785);
          }
        }
        else if (v785 == 1)
        {
          sub_100083F00((_QWORD *)v124 + 14);
          v788 = *(_OWORD *)(v125 + 121);
          *v783 = *v786;
          *(_OWORD *)(v124 + 121) = v788;
        }
        else
        {
          *((_QWORD *)v124 + 14) = v785;
          swift_bridgeObjectRetain(v785);
          swift_bridgeObjectRelease(v784);
          v124[120] = v125[120];
          v790 = *((_QWORD *)v125 + 16);
          v124[136] = v125[136];
          *((_QWORD *)v124 + 16) = v790;
        }
        v791 = (__int128 *)(v124 + 144);
        v792 = *((_QWORD *)v124 + 18);
        v794 = (__int128 *)(v125 + 144);
        v793 = *((_QWORD *)v125 + 18);
        if (v792 == 1)
        {
          if (v793 == 1)
          {
            v795 = *v794;
            *(_OWORD *)(v124 + 153) = *(_OWORD *)(v125 + 153);
            *v791 = v795;
          }
          else
          {
            *((_QWORD *)v124 + 18) = v793;
            v124[152] = v125[152];
            v797 = *((_QWORD *)v125 + 20);
            v124[168] = v125[168];
            *((_QWORD *)v124 + 20) = v797;
            swift_bridgeObjectRetain(v793);
          }
        }
        else if (v793 == 1)
        {
          sub_100083F00((_QWORD *)v124 + 18);
          v796 = *(_OWORD *)(v125 + 153);
          *v791 = *v794;
          *(_OWORD *)(v124 + 153) = v796;
        }
        else
        {
          *((_QWORD *)v124 + 18) = v793;
          swift_bridgeObjectRetain(v793);
          swift_bridgeObjectRelease(v792);
          v124[152] = v125[152];
          v798 = *((_QWORD *)v125 + 20);
          v124[168] = v125[168];
          *((_QWORD *)v124 + 20) = v798;
        }
        v799 = (__int128 *)(v124 + 176);
        v800 = *((_QWORD *)v124 + 22);
        v802 = (__int128 *)(v125 + 176);
        v801 = *((_QWORD *)v125 + 22);
        if (v800 == 1)
        {
          if (v801 == 1)
          {
            v803 = *v802;
            *(_OWORD *)(v124 + 185) = *(_OWORD *)(v125 + 185);
            *v799 = v803;
          }
          else
          {
            *((_QWORD *)v124 + 22) = v801;
            v124[184] = v125[184];
            v805 = *((_QWORD *)v125 + 24);
            v124[200] = v125[200];
            *((_QWORD *)v124 + 24) = v805;
            swift_bridgeObjectRetain(v801);
          }
        }
        else if (v801 == 1)
        {
          sub_100083F00((_QWORD *)v124 + 22);
          v804 = *(_OWORD *)(v125 + 185);
          *v799 = *v802;
          *(_OWORD *)(v124 + 185) = v804;
        }
        else
        {
          *((_QWORD *)v124 + 22) = v801;
          swift_bridgeObjectRetain(v801);
          swift_bridgeObjectRelease(v800);
          v124[184] = v125[184];
          v806 = *((_QWORD *)v125 + 24);
          v124[200] = v125[200];
          *((_QWORD *)v124 + 24) = v806;
        }
        v807 = (__int128 *)(v124 + 208);
        v808 = *((_QWORD *)v124 + 26);
        v810 = (__int128 *)(v125 + 208);
        v809 = *((_QWORD *)v125 + 26);
        if (v808 == 1)
        {
          if (v809 == 1)
          {
            v811 = *v810;
            *(_OWORD *)(v124 + 217) = *(_OWORD *)(v125 + 217);
            *v807 = v811;
          }
          else
          {
            *((_QWORD *)v124 + 26) = v809;
            v124[216] = v125[216];
            v813 = *((_QWORD *)v125 + 28);
            v124[232] = v125[232];
            *((_QWORD *)v124 + 28) = v813;
            swift_bridgeObjectRetain(v809);
          }
        }
        else if (v809 == 1)
        {
          sub_100083F00((_QWORD *)v124 + 26);
          v812 = *(_OWORD *)(v125 + 217);
          *v807 = *v810;
          *(_OWORD *)(v124 + 217) = v812;
        }
        else
        {
          *((_QWORD *)v124 + 26) = v809;
          swift_bridgeObjectRetain(v809);
          swift_bridgeObjectRelease(v808);
          v124[216] = v125[216];
          v814 = *((_QWORD *)v125 + 28);
          v124[232] = v125[232];
          *((_QWORD *)v124 + 28) = v814;
        }
        v815 = (__int128 *)(v124 + 240);
        v816 = *((_QWORD *)v124 + 30);
        v818 = (__int128 *)(v125 + 240);
        v817 = *((_QWORD *)v125 + 30);
        if (v816 == 1)
        {
          if (v817 == 1)
          {
            v819 = *v818;
            *(_OWORD *)(v124 + 249) = *(_OWORD *)(v125 + 249);
            *v815 = v819;
          }
          else
          {
            *((_QWORD *)v124 + 30) = v817;
            v124[248] = v125[248];
            v821 = *((_QWORD *)v125 + 32);
            v124[264] = v125[264];
            *((_QWORD *)v124 + 32) = v821;
            swift_bridgeObjectRetain(v817);
          }
        }
        else if (v817 == 1)
        {
          sub_100083F00((_QWORD *)v124 + 30);
          v820 = *(_OWORD *)(v125 + 249);
          *v815 = *v818;
          *(_OWORD *)(v124 + 249) = v820;
        }
        else
        {
          *((_QWORD *)v124 + 30) = v817;
          swift_bridgeObjectRetain(v817);
          swift_bridgeObjectRelease(v816);
          v124[248] = v125[248];
          v822 = *((_QWORD *)v125 + 32);
          v124[264] = v125[264];
          *((_QWORD *)v124 + 32) = v822;
        }
        v823 = (__int128 *)(v124 + 272);
        v824 = (__int128 *)(v125 + 272);
        v825 = *((_QWORD *)v124 + 34);
        v826 = *((_QWORD *)v125 + 34);
        if (v825 == 1)
        {
          if (v826 == 1)
          {
            v827 = *v824;
            *(_OWORD *)(v124 + 281) = *(_OWORD *)(v125 + 281);
            *v823 = v827;
          }
          else
          {
            *((_QWORD *)v124 + 34) = v826;
            v124[280] = v125[280];
            v829 = *((_QWORD *)v125 + 36);
            v124[296] = v125[296];
            *((_QWORD *)v124 + 36) = v829;
            swift_bridgeObjectRetain(v826);
          }
        }
        else if (v826 == 1)
        {
          sub_100083F00((_QWORD *)v124 + 34);
          v828 = *(_OWORD *)(v125 + 281);
          *v823 = *v824;
          *(_OWORD *)(v124 + 281) = v828;
        }
        else
        {
          *((_QWORD *)v124 + 34) = v826;
          swift_bridgeObjectRetain(v826);
          swift_bridgeObjectRelease(v825);
          v124[280] = v125[280];
          v830 = *((_QWORD *)v125 + 36);
          v124[296] = v125[296];
          *((_QWORD *)v124 + 36) = v830;
        }
        v831 = (__int128 *)(v124 + 304);
        v832 = (__int128 *)(v125 + 304);
        v833 = *((_QWORD *)v124 + 38);
        v834 = *((_QWORD *)v125 + 38);
        if (v833 == 1)
        {
          if (v834 == 1)
          {
            v835 = *v832;
            *(_OWORD *)(v124 + 313) = *(_OWORD *)(v125 + 313);
            *v831 = v835;
          }
          else
          {
            *((_QWORD *)v124 + 38) = v834;
            v124[312] = v125[312];
            v837 = *((_QWORD *)v125 + 40);
            v124[328] = v125[328];
            *((_QWORD *)v124 + 40) = v837;
            swift_bridgeObjectRetain(v834);
          }
        }
        else if (v834 == 1)
        {
          sub_100083F00((_QWORD *)v124 + 38);
          v836 = *(_OWORD *)(v125 + 313);
          *v831 = *v832;
          *(_OWORD *)(v124 + 313) = v836;
        }
        else
        {
          *((_QWORD *)v124 + 38) = v834;
          swift_bridgeObjectRetain(v834);
          swift_bridgeObjectRelease(v833);
          v124[312] = v125[312];
          v838 = *((_QWORD *)v125 + 40);
          v124[328] = v125[328];
          *((_QWORD *)v124 + 40) = v838;
        }
        v839 = (__int128 *)(v124 + 336);
        v840 = (__int128 *)(v125 + 336);
        v841 = *((_QWORD *)v124 + 42);
        v842 = *((_QWORD *)v125 + 42);
        if (v841 == 1)
        {
          if (v842 == 1)
          {
            v843 = *v840;
            *(_OWORD *)(v124 + 345) = *(_OWORD *)(v125 + 345);
            *v839 = v843;
          }
          else
          {
            *((_QWORD *)v124 + 42) = v842;
            v124[344] = v125[344];
            v845 = *((_QWORD *)v125 + 44);
            v124[360] = v125[360];
            *((_QWORD *)v124 + 44) = v845;
            swift_bridgeObjectRetain(v842);
          }
        }
        else if (v842 == 1)
        {
          sub_100083F00((_QWORD *)v124 + 42);
          v844 = *(_OWORD *)(v125 + 345);
          *v839 = *v840;
          *(_OWORD *)(v124 + 345) = v844;
        }
        else
        {
          *((_QWORD *)v124 + 42) = v842;
          swift_bridgeObjectRetain(v842);
          swift_bridgeObjectRelease(v841);
          v124[344] = v125[344];
          v846 = *((_QWORD *)v125 + 44);
          v124[360] = v125[360];
          *((_QWORD *)v124 + 44) = v846;
        }
        v847 = (__int128 *)(v124 + 368);
        v848 = (__int128 *)(v125 + 368);
        v849 = *((_QWORD *)v124 + 46);
        v850 = *((_QWORD *)v125 + 46);
        if (v849 == 1)
        {
          if (v850 == 1)
          {
            v851 = *v848;
            *(_OWORD *)(v124 + 377) = *(_OWORD *)(v125 + 377);
            *v847 = v851;
          }
          else
          {
            *((_QWORD *)v124 + 46) = v850;
            v124[376] = v125[376];
            v853 = *((_QWORD *)v125 + 48);
            v124[392] = v125[392];
            *((_QWORD *)v124 + 48) = v853;
            swift_bridgeObjectRetain(v850);
          }
        }
        else if (v850 == 1)
        {
          sub_100083F00((_QWORD *)v124 + 46);
          v852 = *(_OWORD *)(v125 + 377);
          *v847 = *v848;
          *(_OWORD *)(v124 + 377) = v852;
        }
        else
        {
          *((_QWORD *)v124 + 46) = v850;
          swift_bridgeObjectRetain(v850);
          swift_bridgeObjectRelease(v849);
          v124[376] = v125[376];
          v854 = *((_QWORD *)v125 + 48);
          v124[392] = v125[392];
          *((_QWORD *)v124 + 48) = v854;
        }
        v855 = (__int128 *)(v124 + 400);
        v856 = (__int128 *)(v125 + 400);
        v857 = *((_QWORD *)v124 + 50);
        v858 = *((_QWORD *)v125 + 50);
        if (v857 == 1)
        {
          if (v858 == 1)
          {
            v859 = *v856;
            *(_OWORD *)(v124 + 409) = *(_OWORD *)(v125 + 409);
            *v855 = v859;
          }
          else
          {
            *((_QWORD *)v124 + 50) = v858;
            v124[408] = v125[408];
            v861 = *((_QWORD *)v125 + 52);
            v124[424] = v125[424];
            *((_QWORD *)v124 + 52) = v861;
            swift_bridgeObjectRetain(v858);
          }
        }
        else if (v858 == 1)
        {
          sub_100083F00((_QWORD *)v124 + 50);
          v860 = *(_OWORD *)(v125 + 409);
          *v855 = *v856;
          *(_OWORD *)(v124 + 409) = v860;
        }
        else
        {
          *((_QWORD *)v124 + 50) = v858;
          swift_bridgeObjectRetain(v858);
          swift_bridgeObjectRelease(v857);
          v124[408] = v125[408];
          v862 = *((_QWORD *)v125 + 52);
          v124[424] = v125[424];
          *((_QWORD *)v124 + 52) = v862;
        }
        v863 = (__int128 *)(v124 + 432);
        v864 = (__int128 *)(v125 + 432);
        v865 = *((_QWORD *)v124 + 54);
        v866 = *((_QWORD *)v125 + 54);
        if (v865 == 1)
        {
          if (v866 == 1)
          {
            v867 = *v864;
            *(_OWORD *)(v124 + 441) = *(_OWORD *)(v125 + 441);
            *v863 = v867;
          }
          else
          {
            *((_QWORD *)v124 + 54) = v866;
            v124[440] = v125[440];
            v869 = *((_QWORD *)v125 + 56);
            v124[456] = v125[456];
            *((_QWORD *)v124 + 56) = v869;
            swift_bridgeObjectRetain(v866);
          }
        }
        else if (v866 == 1)
        {
          sub_100083F00((_QWORD *)v124 + 54);
          v868 = *(_OWORD *)(v125 + 441);
          *v863 = *v864;
          *(_OWORD *)(v124 + 441) = v868;
        }
        else
        {
          *((_QWORD *)v124 + 54) = v866;
          swift_bridgeObjectRetain(v866);
          swift_bridgeObjectRelease(v865);
          v124[440] = v125[440];
          v870 = *((_QWORD *)v125 + 56);
          v124[456] = v125[456];
          *((_QWORD *)v124 + 56) = v870;
        }
        v871 = (__int128 *)(v124 + 464);
        v872 = (__int128 *)(v125 + 464);
        v873 = *((_QWORD *)v124 + 58);
        v874 = *((_QWORD *)v125 + 58);
        if (v873 == 1)
        {
          if (v874 == 1)
          {
            v875 = *v872;
            *(_OWORD *)(v124 + 473) = *(_OWORD *)(v125 + 473);
            *v871 = v875;
          }
          else
          {
            *((_QWORD *)v124 + 58) = v874;
            v124[472] = v125[472];
            v877 = *((_QWORD *)v125 + 60);
            v124[488] = v125[488];
            *((_QWORD *)v124 + 60) = v877;
            swift_bridgeObjectRetain(v874);
          }
        }
        else if (v874 == 1)
        {
          sub_100083F00((_QWORD *)v124 + 58);
          v876 = *(_OWORD *)(v125 + 473);
          *v871 = *v872;
          *(_OWORD *)(v124 + 473) = v876;
        }
        else
        {
          *((_QWORD *)v124 + 58) = v874;
          swift_bridgeObjectRetain(v874);
          swift_bridgeObjectRelease(v873);
          v124[472] = v125[472];
          v878 = *((_QWORD *)v125 + 60);
          v124[488] = v125[488];
          *((_QWORD *)v124 + 60) = v878;
        }
        v879 = (__int128 *)(v124 + 496);
        v880 = (__int128 *)(v125 + 496);
        v881 = *((_QWORD *)v124 + 62);
        v882 = *((_QWORD *)v125 + 62);
        if (v881 == 1)
        {
          if (v882 == 1)
          {
            v883 = *v880;
            *(_OWORD *)(v124 + 505) = *(_OWORD *)(v125 + 505);
            *v879 = v883;
          }
          else
          {
            *((_QWORD *)v124 + 62) = v882;
            v124[504] = v125[504];
            v885 = *((_QWORD *)v125 + 64);
            v124[520] = v125[520];
            *((_QWORD *)v124 + 64) = v885;
            swift_bridgeObjectRetain(v882);
          }
        }
        else if (v882 == 1)
        {
          sub_100083F00((_QWORD *)v124 + 62);
          v884 = *(_OWORD *)(v125 + 505);
          *v879 = *v880;
          *(_OWORD *)(v124 + 505) = v884;
        }
        else
        {
          *((_QWORD *)v124 + 62) = v882;
          swift_bridgeObjectRetain(v882);
          swift_bridgeObjectRelease(v881);
          v124[504] = v125[504];
          v886 = *((_QWORD *)v125 + 64);
          v124[520] = v125[520];
          *((_QWORD *)v124 + 64) = v886;
        }
        v887 = (__int128 *)(v124 + 528);
        v888 = (__int128 *)(v125 + 528);
        v889 = *((_QWORD *)v124 + 66);
        v890 = *((_QWORD *)v125 + 66);
        if (v889 == 1)
        {
          if (v890 == 1)
          {
            v891 = *v888;
            *(_OWORD *)(v124 + 537) = *(_OWORD *)(v125 + 537);
            *v887 = v891;
          }
          else
          {
            *((_QWORD *)v124 + 66) = v890;
            v124[536] = v125[536];
            v893 = *((_QWORD *)v125 + 68);
            v124[552] = v125[552];
            *((_QWORD *)v124 + 68) = v893;
            swift_bridgeObjectRetain(v890);
          }
        }
        else if (v890 == 1)
        {
          sub_100083F00((_QWORD *)v124 + 66);
          v892 = *(_OWORD *)(v125 + 537);
          *v887 = *v888;
          *(_OWORD *)(v124 + 537) = v892;
        }
        else
        {
          *((_QWORD *)v124 + 66) = v890;
          swift_bridgeObjectRetain(v890);
          swift_bridgeObjectRelease(v889);
          v124[536] = v125[536];
          v894 = *((_QWORD *)v125 + 68);
          v124[552] = v125[552];
          *((_QWORD *)v124 + 68) = v894;
        }
        v895 = (__int128 *)(v124 + 560);
        v896 = (__int128 *)(v125 + 560);
        v897 = *((_QWORD *)v124 + 70);
        v898 = *((_QWORD *)v125 + 70);
        if (v897 == 1)
        {
          if (v898 == 1)
          {
            v899 = *v896;
            *(_OWORD *)(v124 + 569) = *(_OWORD *)(v125 + 569);
            *v895 = v899;
          }
          else
          {
            *((_QWORD *)v124 + 70) = v898;
            v124[568] = v125[568];
            v901 = *((_QWORD *)v125 + 72);
            v124[584] = v125[584];
            *((_QWORD *)v124 + 72) = v901;
            swift_bridgeObjectRetain(v898);
          }
        }
        else if (v898 == 1)
        {
          sub_100083F00((_QWORD *)v124 + 70);
          v900 = *(_OWORD *)(v125 + 569);
          *v895 = *v896;
          *(_OWORD *)(v124 + 569) = v900;
        }
        else
        {
          *((_QWORD *)v124 + 70) = v898;
          swift_bridgeObjectRetain(v898);
          swift_bridgeObjectRelease(v897);
          v124[568] = v125[568];
          v902 = *((_QWORD *)v125 + 72);
          v124[584] = v125[584];
          *((_QWORD *)v124 + 72) = v902;
        }
        v903 = (__int128 *)(v124 + 592);
        v904 = (__int128 *)(v125 + 592);
        v905 = *((_QWORD *)v124 + 74);
        v906 = *((_QWORD *)v125 + 74);
        if (v905 == 1)
        {
          if (v906 == 1)
          {
            v907 = *v904;
            *(_OWORD *)(v124 + 601) = *(_OWORD *)(v125 + 601);
            *v903 = v907;
          }
          else
          {
            *((_QWORD *)v124 + 74) = v906;
            v124[600] = v125[600];
            v909 = *((_QWORD *)v125 + 76);
            v124[616] = v125[616];
            *((_QWORD *)v124 + 76) = v909;
            swift_bridgeObjectRetain(v906);
          }
        }
        else if (v906 == 1)
        {
          sub_100083F00((_QWORD *)v124 + 74);
          v908 = *(_OWORD *)(v125 + 601);
          *v903 = *v904;
          *(_OWORD *)(v124 + 601) = v908;
        }
        else
        {
          *((_QWORD *)v124 + 74) = v906;
          swift_bridgeObjectRetain(v906);
          swift_bridgeObjectRelease(v905);
          v124[600] = v125[600];
          v910 = *((_QWORD *)v125 + 76);
          v124[616] = v125[616];
          *((_QWORD *)v124 + 76) = v910;
        }
        v911 = (__int128 *)(v124 + 624);
        v912 = (__int128 *)(v125 + 624);
        v913 = *((_QWORD *)v124 + 78);
        v914 = *((_QWORD *)v125 + 78);
        if (v913 == 1)
        {
          if (v914 == 1)
          {
            v915 = *v912;
            *(_OWORD *)(v124 + 633) = *(_OWORD *)(v125 + 633);
            *v911 = v915;
          }
          else
          {
            *((_QWORD *)v124 + 78) = v914;
            v124[632] = v125[632];
            v917 = *((_QWORD *)v125 + 80);
            v124[648] = v125[648];
            *((_QWORD *)v124 + 80) = v917;
            swift_bridgeObjectRetain(v914);
          }
        }
        else if (v914 == 1)
        {
          sub_100083F00((_QWORD *)v124 + 78);
          v916 = *(_OWORD *)(v125 + 633);
          *v911 = *v912;
          *(_OWORD *)(v124 + 633) = v916;
        }
        else
        {
          *((_QWORD *)v124 + 78) = v914;
          swift_bridgeObjectRetain(v914);
          swift_bridgeObjectRelease(v913);
          v124[632] = v125[632];
          v918 = *((_QWORD *)v125 + 80);
          v124[648] = v125[648];
          *((_QWORD *)v124 + 80) = v918;
        }
        v919 = (__int128 *)(v124 + 656);
        v920 = (__int128 *)(v125 + 656);
        v921 = *((_QWORD *)v124 + 82);
        v922 = *((_QWORD *)v125 + 82);
        if (v921 == 1)
        {
          if (v922 == 1)
          {
            v923 = *v920;
            *(_OWORD *)(v124 + 665) = *(_OWORD *)(v125 + 665);
            *v919 = v923;
          }
          else
          {
            *((_QWORD *)v124 + 82) = v922;
            v124[664] = v125[664];
            v925 = *((_QWORD *)v125 + 84);
            v124[680] = v125[680];
            *((_QWORD *)v124 + 84) = v925;
            swift_bridgeObjectRetain(v922);
          }
        }
        else if (v922 == 1)
        {
          sub_100083F00((_QWORD *)v124 + 82);
          v924 = *(_OWORD *)(v125 + 665);
          *v919 = *v920;
          *(_OWORD *)(v124 + 665) = v924;
        }
        else
        {
          *((_QWORD *)v124 + 82) = v922;
          swift_bridgeObjectRetain(v922);
          swift_bridgeObjectRelease(v921);
          v124[664] = v125[664];
          v926 = *((_QWORD *)v125 + 84);
          v124[680] = v125[680];
          *((_QWORD *)v124 + 84) = v926;
        }
        v927 = (__int128 *)(v124 + 688);
        v928 = (__int128 *)(v125 + 688);
        v929 = *((_QWORD *)v124 + 86);
        v930 = *((_QWORD *)v125 + 86);
        if (v929 == 1)
        {
          if (v930 == 1)
          {
            v931 = *v928;
            *(_OWORD *)(v124 + 697) = *(_OWORD *)(v125 + 697);
            *v927 = v931;
          }
          else
          {
            *((_QWORD *)v124 + 86) = v930;
            v124[696] = v125[696];
            v933 = *((_QWORD *)v125 + 88);
            v124[712] = v125[712];
            *((_QWORD *)v124 + 88) = v933;
            swift_bridgeObjectRetain(v930);
          }
        }
        else if (v930 == 1)
        {
          sub_100083F00((_QWORD *)v124 + 86);
          v932 = *(_OWORD *)(v125 + 697);
          *v927 = *v928;
          *(_OWORD *)(v124 + 697) = v932;
        }
        else
        {
          *((_QWORD *)v124 + 86) = v930;
          swift_bridgeObjectRetain(v930);
          swift_bridgeObjectRelease(v929);
          v124[696] = v125[696];
          v934 = *((_QWORD *)v125 + 88);
          v124[712] = v125[712];
          *((_QWORD *)v124 + 88) = v934;
        }
        v935 = (__int128 *)(v124 + 720);
        v936 = (__int128 *)(v125 + 720);
        v937 = *((_QWORD *)v124 + 90);
        v938 = *((_QWORD *)v125 + 90);
        if (v937 == 1)
        {
          if (v938 == 1)
          {
            v939 = *v936;
            *(_OWORD *)(v124 + 729) = *(_OWORD *)(v125 + 729);
            *v935 = v939;
          }
          else
          {
            *((_QWORD *)v124 + 90) = v938;
            v124[728] = v125[728];
            v941 = *((_QWORD *)v125 + 92);
            v124[744] = v125[744];
            *((_QWORD *)v124 + 92) = v941;
            swift_bridgeObjectRetain(v938);
          }
        }
        else if (v938 == 1)
        {
          sub_100083F00((_QWORD *)v124 + 90);
          v940 = *(_OWORD *)(v125 + 729);
          *v935 = *v936;
          *(_OWORD *)(v124 + 729) = v940;
        }
        else
        {
          *((_QWORD *)v124 + 90) = v938;
          swift_bridgeObjectRetain(v938);
          swift_bridgeObjectRelease(v937);
          v124[728] = v125[728];
          v942 = *((_QWORD *)v125 + 92);
          v124[744] = v125[744];
          *((_QWORD *)v124 + 92) = v942;
        }
        v943 = (__int128 *)(v124 + 752);
        v944 = (__int128 *)(v125 + 752);
        v945 = *((_QWORD *)v124 + 94);
        v946 = *((_QWORD *)v125 + 94);
        if (v945 == 1)
        {
          if (v946 == 1)
          {
            v947 = *v944;
            *(_OWORD *)(v124 + 761) = *(_OWORD *)(v125 + 761);
            *v943 = v947;
          }
          else
          {
            *((_QWORD *)v124 + 94) = v946;
            v124[760] = v125[760];
            v949 = *((_QWORD *)v125 + 96);
            v124[776] = v125[776];
            *((_QWORD *)v124 + 96) = v949;
            swift_bridgeObjectRetain(v946);
          }
        }
        else if (v946 == 1)
        {
          sub_100083F00((_QWORD *)v124 + 94);
          v948 = *(_OWORD *)(v125 + 761);
          *v943 = *v944;
          *(_OWORD *)(v124 + 761) = v948;
        }
        else
        {
          *((_QWORD *)v124 + 94) = v946;
          swift_bridgeObjectRetain(v946);
          swift_bridgeObjectRelease(v945);
          v124[760] = v125[760];
          v950 = *((_QWORD *)v125 + 96);
          v124[776] = v125[776];
          *((_QWORD *)v124 + 96) = v950;
        }
        v951 = *((_OWORD *)v125 + 49);
        v124[800] = v125[800];
        *((_OWORD *)v124 + 49) = v951;
        v952 = *(_OWORD *)(v125 + 808);
        v124[824] = v125[824];
        *(_OWORD *)(v124 + 808) = v952;
        v124[825] = v125[825];
        v124[826] = v125[826];
        v124[827] = v125[827];
        v124[828] = v125[828];
        v124[829] = v125[829];
        v124[830] = v125[830];
        v124[831] = v125[831];
        v953 = *((_QWORD *)v124 + 104);
        v954 = *((_QWORD *)v125 + 104);
        *((_QWORD *)v124 + 104) = v954;
        swift_bridgeObjectRetain(v954);
        swift_bridgeObjectRelease(v953);
        v955 = *((_QWORD *)v124 + 105);
        v956 = *((_QWORD *)v125 + 105);
        *((_QWORD *)v124 + 105) = v956;
        swift_bridgeObjectRetain(v956);
        swift_bridgeObjectRelease(v955);
LABEL_793:
        v957 = v124 + 848;
        v958 = (uint64_t *)(v125 + 848);
        v959 = *((_QWORD *)v125 + 208);
        if (*((_QWORD *)v124 + 208) == 1)
        {
          if (v959 != 1)
          {
            v960 = *v958;
            if (*v958 == 1)
            {
              v961 = *(_OWORD *)v958;
              *(_OWORD *)(v124 + 857) = *(_OWORD *)(v125 + 857);
              *v957 = v961;
            }
            else
            {
              *((_QWORD *)v124 + 106) = v960;
              v124[856] = v125[856];
              v965 = *((_QWORD *)v125 + 108);
              v124[872] = v125[872];
              *((_QWORD *)v124 + 108) = v965;
              swift_bridgeObjectRetain(v960);
            }
            v966 = *((_QWORD *)v125 + 110);
            if (v966 == 1)
            {
              v967 = *((_OWORD *)v125 + 55);
              *(_OWORD *)(v124 + 889) = *(_OWORD *)(v125 + 889);
              *((_OWORD *)v124 + 55) = v967;
            }
            else
            {
              *((_QWORD *)v124 + 110) = v966;
              v124[888] = v125[888];
              v969 = *((_QWORD *)v125 + 112);
              v124[904] = v125[904];
              *((_QWORD *)v124 + 112) = v969;
              swift_bridgeObjectRetain(v966);
            }
            v970 = *((_QWORD *)v125 + 114);
            if (v970 == 1)
            {
              v971 = *((_OWORD *)v125 + 57);
              *(_OWORD *)(v124 + 921) = *(_OWORD *)(v125 + 921);
              *((_OWORD *)v124 + 57) = v971;
            }
            else
            {
              *((_QWORD *)v124 + 114) = v970;
              v124[920] = v125[920];
              v972 = *((_QWORD *)v125 + 116);
              v124[936] = v125[936];
              *((_QWORD *)v124 + 116) = v972;
              swift_bridgeObjectRetain(v970);
            }
            v973 = *((_QWORD *)v125 + 118);
            if (v973 == 1)
            {
              v974 = *((_OWORD *)v125 + 59);
              *(_OWORD *)(v124 + 953) = *(_OWORD *)(v125 + 953);
              *((_OWORD *)v124 + 59) = v974;
            }
            else
            {
              *((_QWORD *)v124 + 118) = v973;
              v124[952] = v125[952];
              v975 = *((_QWORD *)v125 + 120);
              v124[968] = v125[968];
              *((_QWORD *)v124 + 120) = v975;
              swift_bridgeObjectRetain(v973);
            }
            v976 = *((_QWORD *)v125 + 122);
            if (v976 == 1)
            {
              v977 = *((_OWORD *)v125 + 61);
              *(_OWORD *)(v124 + 985) = *(_OWORD *)(v125 + 985);
              *((_OWORD *)v124 + 61) = v977;
            }
            else
            {
              *((_QWORD *)v124 + 122) = v976;
              v124[984] = v125[984];
              v978 = *((_QWORD *)v125 + 124);
              v124[1000] = v125[1000];
              *((_QWORD *)v124 + 124) = v978;
              swift_bridgeObjectRetain(v976);
            }
            v979 = *((_QWORD *)v125 + 126);
            if (v979 == 1)
            {
              v980 = *((_OWORD *)v125 + 63);
              *(_OWORD *)(v124 + 1017) = *(_OWORD *)(v125 + 1017);
              *((_OWORD *)v124 + 63) = v980;
            }
            else
            {
              *((_QWORD *)v124 + 126) = v979;
              v124[1016] = v125[1016];
              v981 = *((_QWORD *)v125 + 128);
              v124[1032] = v125[1032];
              *((_QWORD *)v124 + 128) = v981;
              swift_bridgeObjectRetain(v979);
            }
            v982 = *((_QWORD *)v125 + 130);
            if (v982 == 1)
            {
              v983 = *((_OWORD *)v125 + 65);
              *(_OWORD *)(v124 + 1049) = *(_OWORD *)(v125 + 1049);
              *((_OWORD *)v124 + 65) = v983;
            }
            else
            {
              *((_QWORD *)v124 + 130) = v982;
              v124[1048] = v125[1048];
              v984 = *((_QWORD *)v125 + 132);
              v124[1064] = v125[1064];
              *((_QWORD *)v124 + 132) = v984;
              swift_bridgeObjectRetain(v982);
            }
            v985 = *((_QWORD *)v125 + 134);
            if (v985 == 1)
            {
              v986 = *((_OWORD *)v125 + 67);
              *(_OWORD *)(v124 + 1081) = *(_OWORD *)(v125 + 1081);
              *((_OWORD *)v124 + 67) = v986;
            }
            else
            {
              *((_QWORD *)v124 + 134) = v985;
              v124[1080] = v125[1080];
              v987 = *((_QWORD *)v125 + 136);
              v124[1096] = v125[1096];
              *((_QWORD *)v124 + 136) = v987;
              swift_bridgeObjectRetain(v985);
            }
            v988 = *((_QWORD *)v125 + 138);
            if (v988 == 1)
            {
              v989 = *((_OWORD *)v125 + 69);
              *(_OWORD *)(v124 + 1113) = *(_OWORD *)(v125 + 1113);
              *((_OWORD *)v124 + 69) = v989;
            }
            else
            {
              *((_QWORD *)v124 + 138) = v988;
              v124[1112] = v125[1112];
              v990 = *((_QWORD *)v125 + 140);
              v124[1128] = v125[1128];
              *((_QWORD *)v124 + 140) = v990;
              swift_bridgeObjectRetain(v988);
            }
            v991 = *((_QWORD *)v125 + 142);
            if (v991 == 1)
            {
              v992 = *((_OWORD *)v125 + 71);
              *(_OWORD *)(v124 + 1145) = *(_OWORD *)(v125 + 1145);
              *((_OWORD *)v124 + 71) = v992;
            }
            else
            {
              *((_QWORD *)v124 + 142) = v991;
              v124[1144] = v125[1144];
              v993 = *((_QWORD *)v125 + 144);
              v124[1160] = v125[1160];
              *((_QWORD *)v124 + 144) = v993;
              swift_bridgeObjectRetain(v991);
            }
            v994 = *((_QWORD *)v125 + 146);
            if (v994 == 1)
            {
              v995 = *((_OWORD *)v125 + 73);
              *(_OWORD *)(v124 + 1177) = *(_OWORD *)(v125 + 1177);
              *((_OWORD *)v124 + 73) = v995;
            }
            else
            {
              *((_QWORD *)v124 + 146) = v994;
              v124[1176] = v125[1176];
              v996 = *((_QWORD *)v125 + 148);
              v124[1192] = v125[1192];
              *((_QWORD *)v124 + 148) = v996;
              swift_bridgeObjectRetain(v994);
            }
            v997 = *((_QWORD *)v125 + 150);
            if (v997 == 1)
            {
              v998 = *((_OWORD *)v125 + 75);
              *(_OWORD *)(v124 + 1209) = *(_OWORD *)(v125 + 1209);
              *((_OWORD *)v124 + 75) = v998;
            }
            else
            {
              *((_QWORD *)v124 + 150) = v997;
              v124[1208] = v125[1208];
              v999 = *((_QWORD *)v125 + 152);
              v124[1224] = v125[1224];
              *((_QWORD *)v124 + 152) = v999;
              swift_bridgeObjectRetain(v997);
            }
            v1000 = *((_QWORD *)v125 + 154);
            if (v1000 == 1)
            {
              v1001 = *((_OWORD *)v125 + 77);
              *(_OWORD *)(v124 + 1241) = *(_OWORD *)(v125 + 1241);
              *((_OWORD *)v124 + 77) = v1001;
            }
            else
            {
              *((_QWORD *)v124 + 154) = v1000;
              v124[1240] = v125[1240];
              v1002 = *((_QWORD *)v125 + 156);
              v124[1256] = v125[1256];
              *((_QWORD *)v124 + 156) = v1002;
              swift_bridgeObjectRetain(v1000);
            }
            v1003 = *((_QWORD *)v125 + 158);
            if (v1003 == 1)
            {
              v1004 = *((_OWORD *)v125 + 79);
              *(_OWORD *)(v124 + 1273) = *(_OWORD *)(v125 + 1273);
              *((_OWORD *)v124 + 79) = v1004;
            }
            else
            {
              *((_QWORD *)v124 + 158) = v1003;
              v124[1272] = v125[1272];
              v1005 = *((_QWORD *)v125 + 160);
              v124[1288] = v125[1288];
              *((_QWORD *)v124 + 160) = v1005;
              swift_bridgeObjectRetain(v1003);
            }
            v1006 = *((_QWORD *)v125 + 162);
            if (v1006 == 1)
            {
              v1007 = *((_OWORD *)v125 + 81);
              *(_OWORD *)(v124 + 1305) = *(_OWORD *)(v125 + 1305);
              *((_OWORD *)v124 + 81) = v1007;
            }
            else
            {
              *((_QWORD *)v124 + 162) = v1006;
              v124[1304] = v125[1304];
              v1008 = *((_QWORD *)v125 + 164);
              v124[1320] = v125[1320];
              *((_QWORD *)v124 + 164) = v1008;
              swift_bridgeObjectRetain(v1006);
            }
            v1009 = *((_QWORD *)v125 + 166);
            if (v1009 == 1)
            {
              v1010 = *((_OWORD *)v125 + 83);
              *(_OWORD *)(v124 + 1337) = *(_OWORD *)(v125 + 1337);
              *((_OWORD *)v124 + 83) = v1010;
            }
            else
            {
              *((_QWORD *)v124 + 166) = v1009;
              v124[1336] = v125[1336];
              v1011 = *((_QWORD *)v125 + 168);
              v124[1352] = v125[1352];
              *((_QWORD *)v124 + 168) = v1011;
              swift_bridgeObjectRetain(v1009);
            }
            v1012 = *((_QWORD *)v125 + 170);
            if (v1012 == 1)
            {
              v1013 = *((_OWORD *)v125 + 85);
              *(_OWORD *)(v124 + 1369) = *(_OWORD *)(v125 + 1369);
              *((_OWORD *)v124 + 85) = v1013;
            }
            else
            {
              *((_QWORD *)v124 + 170) = v1012;
              v124[1368] = v125[1368];
              v1014 = *((_QWORD *)v125 + 172);
              v124[1384] = v125[1384];
              *((_QWORD *)v124 + 172) = v1014;
              swift_bridgeObjectRetain(v1012);
            }
            v1015 = *((_QWORD *)v125 + 174);
            if (v1015 == 1)
            {
              v1016 = *((_OWORD *)v125 + 87);
              *(_OWORD *)(v124 + 1401) = *(_OWORD *)(v125 + 1401);
              *((_OWORD *)v124 + 87) = v1016;
            }
            else
            {
              *((_QWORD *)v124 + 174) = v1015;
              v124[1400] = v125[1400];
              v1017 = *((_QWORD *)v125 + 176);
              v124[1416] = v125[1416];
              *((_QWORD *)v124 + 176) = v1017;
              swift_bridgeObjectRetain(v1015);
            }
            v1018 = *((_QWORD *)v125 + 178);
            if (v1018 == 1)
            {
              v1019 = *((_OWORD *)v125 + 89);
              *(_OWORD *)(v124 + 1433) = *(_OWORD *)(v125 + 1433);
              *((_OWORD *)v124 + 89) = v1019;
            }
            else
            {
              *((_QWORD *)v124 + 178) = v1018;
              v124[1432] = v125[1432];
              v1020 = *((_QWORD *)v125 + 180);
              v124[1448] = v125[1448];
              *((_QWORD *)v124 + 180) = v1020;
              swift_bridgeObjectRetain(v1018);
            }
            v1021 = *((_QWORD *)v125 + 182);
            if (v1021 == 1)
            {
              v1022 = *((_OWORD *)v125 + 91);
              *(_OWORD *)(v124 + 1465) = *(_OWORD *)(v125 + 1465);
              *((_OWORD *)v124 + 91) = v1022;
            }
            else
            {
              *((_QWORD *)v124 + 182) = v1021;
              v124[1464] = v125[1464];
              v1023 = *((_QWORD *)v125 + 184);
              v124[1480] = v125[1480];
              *((_QWORD *)v124 + 184) = v1023;
              swift_bridgeObjectRetain(v1021);
            }
            v1024 = *((_QWORD *)v125 + 186);
            if (v1024 == 1)
            {
              v1025 = *((_OWORD *)v125 + 93);
              *(_OWORD *)(v124 + 1497) = *(_OWORD *)(v125 + 1497);
              *((_OWORD *)v124 + 93) = v1025;
            }
            else
            {
              *((_QWORD *)v124 + 186) = v1024;
              v124[1496] = v125[1496];
              v1026 = *((_QWORD *)v125 + 188);
              v124[1512] = v125[1512];
              *((_QWORD *)v124 + 188) = v1026;
              swift_bridgeObjectRetain(v1024);
            }
            v1027 = *((_QWORD *)v125 + 190);
            if (v1027 == 1)
            {
              v1028 = *((_OWORD *)v125 + 95);
              *(_OWORD *)(v124 + 1529) = *(_OWORD *)(v125 + 1529);
              *((_OWORD *)v124 + 95) = v1028;
            }
            else
            {
              *((_QWORD *)v124 + 190) = v1027;
              v124[1528] = v125[1528];
              v1029 = *((_QWORD *)v125 + 192);
              v124[1544] = v125[1544];
              *((_QWORD *)v124 + 192) = v1029;
              swift_bridgeObjectRetain(v1027);
            }
            v1030 = *((_QWORD *)v125 + 194);
            if (v1030 == 1)
            {
              v1031 = *((_OWORD *)v125 + 97);
              *(_OWORD *)(v124 + 1561) = *(_OWORD *)(v125 + 1561);
              *((_OWORD *)v124 + 97) = v1031;
            }
            else
            {
              *((_QWORD *)v124 + 194) = v1030;
              v124[1560] = v125[1560];
              v1032 = *((_QWORD *)v125 + 196);
              v124[1576] = v125[1576];
              *((_QWORD *)v124 + 196) = v1032;
              swift_bridgeObjectRetain(v1030);
            }
            v1033 = *((_QWORD *)v125 + 198);
            if (v1033 == 1)
            {
              v1034 = *((_OWORD *)v125 + 99);
              *(_OWORD *)(v124 + 1593) = *(_OWORD *)(v125 + 1593);
              *((_OWORD *)v124 + 99) = v1034;
            }
            else
            {
              *((_QWORD *)v124 + 198) = v1033;
              v124[1592] = v125[1592];
              v1035 = *((_QWORD *)v125 + 200);
              v124[1608] = v125[1608];
              *((_QWORD *)v124 + 200) = v1035;
              swift_bridgeObjectRetain(v1033);
            }
            v1036 = *((_OWORD *)v125 + 101);
            v124[1632] = v125[1632];
            *((_OWORD *)v124 + 101) = v1036;
            v1037 = *(_OWORD *)(v125 + 1640);
            v124[1656] = v125[1656];
            *(_OWORD *)(v124 + 1640) = v1037;
            v124[1657] = v125[1657];
            v124[1658] = v125[1658];
            v124[1659] = v125[1659];
            v124[1660] = v125[1660];
            v124[1661] = v125[1661];
            v124[1662] = v125[1662];
            v124[1663] = v125[1663];
            v1038 = *((_QWORD *)v125 + 208);
            *((_QWORD *)v124 + 208) = v1038;
            v1039 = *((_QWORD *)v125 + 209);
            *((_QWORD *)v124 + 209) = v1039;
            swift_bridgeObjectRetain(v1038);
            swift_bridgeObjectRetain(v1039);
            goto LABEL_1040;
          }
        }
        else
        {
          if (v959 != 1)
          {
            v962 = *(_QWORD *)v957;
            v963 = *v958;
            if (*(_QWORD *)v957 == 1)
            {
              if (v963 == 1)
              {
                v964 = *(_OWORD *)v958;
                *(_OWORD *)(v124 + 857) = *(_OWORD *)(v125 + 857);
                *v957 = v964;
              }
              else
              {
                *((_QWORD *)v124 + 106) = v963;
                v124[856] = v125[856];
                v1040 = *((_QWORD *)v125 + 108);
                v124[872] = v125[872];
                *((_QWORD *)v124 + 108) = v1040;
                swift_bridgeObjectRetain(v963);
              }
            }
            else if (v963 == 1)
            {
              sub_100083F00((_QWORD *)v124 + 106);
              v968 = *(_OWORD *)(v125 + 857);
              *v957 = *(_OWORD *)v958;
              *(_OWORD *)(v124 + 857) = v968;
            }
            else
            {
              *((_QWORD *)v124 + 106) = v963;
              swift_bridgeObjectRetain(v963);
              swift_bridgeObjectRelease(v962);
              v124[856] = v125[856];
              v1041 = *((_QWORD *)v125 + 108);
              v124[872] = v125[872];
              *((_QWORD *)v124 + 108) = v1041;
            }
            v1042 = (__int128 *)(v124 + 880);
            v1043 = (__int128 *)(v125 + 880);
            v1044 = *((_QWORD *)v124 + 110);
            v1045 = *((_QWORD *)v125 + 110);
            if (v1044 == 1)
            {
              if (v1045 == 1)
              {
                v1046 = *v1043;
                *(_OWORD *)(v124 + 889) = *(_OWORD *)(v125 + 889);
                *v1042 = v1046;
              }
              else
              {
                *((_QWORD *)v124 + 110) = v1045;
                v124[888] = v125[888];
                v1048 = *((_QWORD *)v125 + 112);
                v124[904] = v125[904];
                *((_QWORD *)v124 + 112) = v1048;
                swift_bridgeObjectRetain(v1045);
              }
            }
            else if (v1045 == 1)
            {
              sub_100083F00((_QWORD *)v124 + 110);
              v1047 = *(_OWORD *)(v125 + 889);
              *v1042 = *v1043;
              *(_OWORD *)(v124 + 889) = v1047;
            }
            else
            {
              *((_QWORD *)v124 + 110) = v1045;
              swift_bridgeObjectRetain(v1045);
              swift_bridgeObjectRelease(v1044);
              v124[888] = v125[888];
              v1049 = *((_QWORD *)v125 + 112);
              v124[904] = v125[904];
              *((_QWORD *)v124 + 112) = v1049;
            }
            v1050 = (__int128 *)(v124 + 912);
            v1051 = (__int128 *)(v125 + 912);
            v1052 = *((_QWORD *)v124 + 114);
            v1053 = *((_QWORD *)v125 + 114);
            if (v1052 == 1)
            {
              if (v1053 == 1)
              {
                v1054 = *v1051;
                *(_OWORD *)(v124 + 921) = *(_OWORD *)(v125 + 921);
                *v1050 = v1054;
              }
              else
              {
                *((_QWORD *)v124 + 114) = v1053;
                v124[920] = v125[920];
                v1056 = *((_QWORD *)v125 + 116);
                v124[936] = v125[936];
                *((_QWORD *)v124 + 116) = v1056;
                swift_bridgeObjectRetain(v1053);
              }
            }
            else if (v1053 == 1)
            {
              sub_100083F00((_QWORD *)v124 + 114);
              v1055 = *(_OWORD *)(v125 + 921);
              *v1050 = *v1051;
              *(_OWORD *)(v124 + 921) = v1055;
            }
            else
            {
              *((_QWORD *)v124 + 114) = v1053;
              swift_bridgeObjectRetain(v1053);
              swift_bridgeObjectRelease(v1052);
              v124[920] = v125[920];
              v1057 = *((_QWORD *)v125 + 116);
              v124[936] = v125[936];
              *((_QWORD *)v124 + 116) = v1057;
            }
            v1058 = (__int128 *)(v124 + 944);
            v1059 = (__int128 *)(v125 + 944);
            v1060 = *((_QWORD *)v124 + 118);
            v1061 = *((_QWORD *)v125 + 118);
            if (v1060 == 1)
            {
              if (v1061 == 1)
              {
                v1062 = *v1059;
                *(_OWORD *)(v124 + 953) = *(_OWORD *)(v125 + 953);
                *v1058 = v1062;
              }
              else
              {
                *((_QWORD *)v124 + 118) = v1061;
                v124[952] = v125[952];
                v1064 = *((_QWORD *)v125 + 120);
                v124[968] = v125[968];
                *((_QWORD *)v124 + 120) = v1064;
                swift_bridgeObjectRetain(v1061);
              }
            }
            else if (v1061 == 1)
            {
              sub_100083F00((_QWORD *)v124 + 118);
              v1063 = *(_OWORD *)(v125 + 953);
              *v1058 = *v1059;
              *(_OWORD *)(v124 + 953) = v1063;
            }
            else
            {
              *((_QWORD *)v124 + 118) = v1061;
              swift_bridgeObjectRetain(v1061);
              swift_bridgeObjectRelease(v1060);
              v124[952] = v125[952];
              v1065 = *((_QWORD *)v125 + 120);
              v124[968] = v125[968];
              *((_QWORD *)v124 + 120) = v1065;
            }
            v1066 = (__int128 *)(v124 + 976);
            v1067 = (__int128 *)(v125 + 976);
            v1068 = *((_QWORD *)v124 + 122);
            v1069 = *((_QWORD *)v125 + 122);
            if (v1068 == 1)
            {
              if (v1069 == 1)
              {
                v1070 = *v1067;
                *(_OWORD *)(v124 + 985) = *(_OWORD *)(v125 + 985);
                *v1066 = v1070;
              }
              else
              {
                *((_QWORD *)v124 + 122) = v1069;
                v124[984] = v125[984];
                v1072 = *((_QWORD *)v125 + 124);
                v124[1000] = v125[1000];
                *((_QWORD *)v124 + 124) = v1072;
                swift_bridgeObjectRetain(v1069);
              }
            }
            else if (v1069 == 1)
            {
              sub_100083F00((_QWORD *)v124 + 122);
              v1071 = *(_OWORD *)(v125 + 985);
              *v1066 = *v1067;
              *(_OWORD *)(v124 + 985) = v1071;
            }
            else
            {
              *((_QWORD *)v124 + 122) = v1069;
              swift_bridgeObjectRetain(v1069);
              swift_bridgeObjectRelease(v1068);
              v124[984] = v125[984];
              v1073 = *((_QWORD *)v125 + 124);
              v124[1000] = v125[1000];
              *((_QWORD *)v124 + 124) = v1073;
            }
            v1074 = (__int128 *)(v124 + 1008);
            v1075 = (__int128 *)(v125 + 1008);
            v1076 = *((_QWORD *)v124 + 126);
            v1077 = *((_QWORD *)v125 + 126);
            if (v1076 == 1)
            {
              if (v1077 == 1)
              {
                v1078 = *v1075;
                *(_OWORD *)(v124 + 1017) = *(_OWORD *)(v125 + 1017);
                *v1074 = v1078;
              }
              else
              {
                *((_QWORD *)v124 + 126) = v1077;
                v124[1016] = v125[1016];
                v1080 = *((_QWORD *)v125 + 128);
                v124[1032] = v125[1032];
                *((_QWORD *)v124 + 128) = v1080;
                swift_bridgeObjectRetain(v1077);
              }
            }
            else if (v1077 == 1)
            {
              sub_100083F00((_QWORD *)v124 + 126);
              v1079 = *(_OWORD *)(v125 + 1017);
              *v1074 = *v1075;
              *(_OWORD *)(v124 + 1017) = v1079;
            }
            else
            {
              *((_QWORD *)v124 + 126) = v1077;
              swift_bridgeObjectRetain(v1077);
              swift_bridgeObjectRelease(v1076);
              v124[1016] = v125[1016];
              v1081 = *((_QWORD *)v125 + 128);
              v124[1032] = v125[1032];
              *((_QWORD *)v124 + 128) = v1081;
            }
            v1082 = (__int128 *)(v124 + 1040);
            v1083 = (__int128 *)(v125 + 1040);
            v1084 = *((_QWORD *)v124 + 130);
            v1085 = *((_QWORD *)v125 + 130);
            if (v1084 == 1)
            {
              if (v1085 == 1)
              {
                v1086 = *v1083;
                *(_OWORD *)(v124 + 1049) = *(_OWORD *)(v125 + 1049);
                *v1082 = v1086;
              }
              else
              {
                *((_QWORD *)v124 + 130) = v1085;
                v124[1048] = v125[1048];
                v1088 = *((_QWORD *)v125 + 132);
                v124[1064] = v125[1064];
                *((_QWORD *)v124 + 132) = v1088;
                swift_bridgeObjectRetain(v1085);
              }
            }
            else if (v1085 == 1)
            {
              sub_100083F00((_QWORD *)v124 + 130);
              v1087 = *(_OWORD *)(v125 + 1049);
              *v1082 = *v1083;
              *(_OWORD *)(v124 + 1049) = v1087;
            }
            else
            {
              *((_QWORD *)v124 + 130) = v1085;
              swift_bridgeObjectRetain(v1085);
              swift_bridgeObjectRelease(v1084);
              v124[1048] = v125[1048];
              v1089 = *((_QWORD *)v125 + 132);
              v124[1064] = v125[1064];
              *((_QWORD *)v124 + 132) = v1089;
            }
            v1090 = (__int128 *)(v124 + 1072);
            v1091 = (__int128 *)(v125 + 1072);
            v1092 = *((_QWORD *)v124 + 134);
            v1093 = *((_QWORD *)v125 + 134);
            if (v1092 == 1)
            {
              if (v1093 == 1)
              {
                v1094 = *v1091;
                *(_OWORD *)(v124 + 1081) = *(_OWORD *)(v125 + 1081);
                *v1090 = v1094;
              }
              else
              {
                *((_QWORD *)v124 + 134) = v1093;
                v124[1080] = v125[1080];
                v1096 = *((_QWORD *)v125 + 136);
                v124[1096] = v125[1096];
                *((_QWORD *)v124 + 136) = v1096;
                swift_bridgeObjectRetain(v1093);
              }
            }
            else if (v1093 == 1)
            {
              sub_100083F00((_QWORD *)v124 + 134);
              v1095 = *(_OWORD *)(v125 + 1081);
              *v1090 = *v1091;
              *(_OWORD *)(v124 + 1081) = v1095;
            }
            else
            {
              *((_QWORD *)v124 + 134) = v1093;
              swift_bridgeObjectRetain(v1093);
              swift_bridgeObjectRelease(v1092);
              v124[1080] = v125[1080];
              v1097 = *((_QWORD *)v125 + 136);
              v124[1096] = v125[1096];
              *((_QWORD *)v124 + 136) = v1097;
            }
            v1098 = (__int128 *)(v124 + 1104);
            v1099 = (__int128 *)(v125 + 1104);
            v1100 = *((_QWORD *)v124 + 138);
            v1101 = *((_QWORD *)v125 + 138);
            if (v1100 == 1)
            {
              if (v1101 == 1)
              {
                v1102 = *v1099;
                *(_OWORD *)(v124 + 1113) = *(_OWORD *)(v125 + 1113);
                *v1098 = v1102;
              }
              else
              {
                *((_QWORD *)v124 + 138) = v1101;
                v124[1112] = v125[1112];
                v1104 = *((_QWORD *)v125 + 140);
                v124[1128] = v125[1128];
                *((_QWORD *)v124 + 140) = v1104;
                swift_bridgeObjectRetain(v1101);
              }
            }
            else if (v1101 == 1)
            {
              sub_100083F00((_QWORD *)v124 + 138);
              v1103 = *(_OWORD *)(v125 + 1113);
              *v1098 = *v1099;
              *(_OWORD *)(v124 + 1113) = v1103;
            }
            else
            {
              *((_QWORD *)v124 + 138) = v1101;
              swift_bridgeObjectRetain(v1101);
              swift_bridgeObjectRelease(v1100);
              v124[1112] = v125[1112];
              v1105 = *((_QWORD *)v125 + 140);
              v124[1128] = v125[1128];
              *((_QWORD *)v124 + 140) = v1105;
            }
            v1106 = (__int128 *)(v124 + 1136);
            v1107 = (__int128 *)(v125 + 1136);
            v1108 = *((_QWORD *)v124 + 142);
            v1109 = *((_QWORD *)v125 + 142);
            if (v1108 == 1)
            {
              if (v1109 == 1)
              {
                v1110 = *v1107;
                *(_OWORD *)(v124 + 1145) = *(_OWORD *)(v125 + 1145);
                *v1106 = v1110;
              }
              else
              {
                *((_QWORD *)v124 + 142) = v1109;
                v124[1144] = v125[1144];
                v1112 = *((_QWORD *)v125 + 144);
                v124[1160] = v125[1160];
                *((_QWORD *)v124 + 144) = v1112;
                swift_bridgeObjectRetain(v1109);
              }
            }
            else if (v1109 == 1)
            {
              sub_100083F00((_QWORD *)v124 + 142);
              v1111 = *(_OWORD *)(v125 + 1145);
              *v1106 = *v1107;
              *(_OWORD *)(v124 + 1145) = v1111;
            }
            else
            {
              *((_QWORD *)v124 + 142) = v1109;
              swift_bridgeObjectRetain(v1109);
              swift_bridgeObjectRelease(v1108);
              v124[1144] = v125[1144];
              v1113 = *((_QWORD *)v125 + 144);
              v124[1160] = v125[1160];
              *((_QWORD *)v124 + 144) = v1113;
            }
            v1114 = (__int128 *)(v124 + 1168);
            v1115 = (__int128 *)(v125 + 1168);
            v1116 = *((_QWORD *)v124 + 146);
            v1117 = *((_QWORD *)v125 + 146);
            if (v1116 == 1)
            {
              if (v1117 == 1)
              {
                v1118 = *v1115;
                *(_OWORD *)(v124 + 1177) = *(_OWORD *)(v125 + 1177);
                *v1114 = v1118;
              }
              else
              {
                *((_QWORD *)v124 + 146) = v1117;
                v124[1176] = v125[1176];
                v1120 = *((_QWORD *)v125 + 148);
                v124[1192] = v125[1192];
                *((_QWORD *)v124 + 148) = v1120;
                swift_bridgeObjectRetain(v1117);
              }
            }
            else if (v1117 == 1)
            {
              sub_100083F00((_QWORD *)v124 + 146);
              v1119 = *(_OWORD *)(v125 + 1177);
              *v1114 = *v1115;
              *(_OWORD *)(v124 + 1177) = v1119;
            }
            else
            {
              *((_QWORD *)v124 + 146) = v1117;
              swift_bridgeObjectRetain(v1117);
              swift_bridgeObjectRelease(v1116);
              v124[1176] = v125[1176];
              v1121 = *((_QWORD *)v125 + 148);
              v124[1192] = v125[1192];
              *((_QWORD *)v124 + 148) = v1121;
            }
            v1122 = (__int128 *)(v124 + 1200);
            v1123 = (__int128 *)(v125 + 1200);
            v1124 = *((_QWORD *)v124 + 150);
            v1125 = *((_QWORD *)v125 + 150);
            if (v1124 == 1)
            {
              if (v1125 == 1)
              {
                v1126 = *v1123;
                *(_OWORD *)(v124 + 1209) = *(_OWORD *)(v125 + 1209);
                *v1122 = v1126;
              }
              else
              {
                *((_QWORD *)v124 + 150) = v1125;
                v124[1208] = v125[1208];
                v1128 = *((_QWORD *)v125 + 152);
                v124[1224] = v125[1224];
                *((_QWORD *)v124 + 152) = v1128;
                swift_bridgeObjectRetain(v1125);
              }
            }
            else if (v1125 == 1)
            {
              sub_100083F00((_QWORD *)v124 + 150);
              v1127 = *(_OWORD *)(v125 + 1209);
              *v1122 = *v1123;
              *(_OWORD *)(v124 + 1209) = v1127;
            }
            else
            {
              *((_QWORD *)v124 + 150) = v1125;
              swift_bridgeObjectRetain(v1125);
              swift_bridgeObjectRelease(v1124);
              v124[1208] = v125[1208];
              v1129 = *((_QWORD *)v125 + 152);
              v124[1224] = v125[1224];
              *((_QWORD *)v124 + 152) = v1129;
            }
            v1130 = (__int128 *)(v124 + 1232);
            v1131 = (__int128 *)(v125 + 1232);
            v1132 = *((_QWORD *)v124 + 154);
            v1133 = *((_QWORD *)v125 + 154);
            if (v1132 == 1)
            {
              if (v1133 == 1)
              {
                v1134 = *v1131;
                *(_OWORD *)(v124 + 1241) = *(_OWORD *)(v125 + 1241);
                *v1130 = v1134;
              }
              else
              {
                *((_QWORD *)v124 + 154) = v1133;
                v124[1240] = v125[1240];
                v1136 = *((_QWORD *)v125 + 156);
                v124[1256] = v125[1256];
                *((_QWORD *)v124 + 156) = v1136;
                swift_bridgeObjectRetain(v1133);
              }
            }
            else if (v1133 == 1)
            {
              sub_100083F00((_QWORD *)v124 + 154);
              v1135 = *(_OWORD *)(v125 + 1241);
              *v1130 = *v1131;
              *(_OWORD *)(v124 + 1241) = v1135;
            }
            else
            {
              *((_QWORD *)v124 + 154) = v1133;
              swift_bridgeObjectRetain(v1133);
              swift_bridgeObjectRelease(v1132);
              v124[1240] = v125[1240];
              v1137 = *((_QWORD *)v125 + 156);
              v124[1256] = v125[1256];
              *((_QWORD *)v124 + 156) = v1137;
            }
            v1138 = (__int128 *)(v124 + 1264);
            v1139 = (__int128 *)(v125 + 1264);
            v1140 = *((_QWORD *)v124 + 158);
            v1141 = *((_QWORD *)v125 + 158);
            if (v1140 == 1)
            {
              if (v1141 == 1)
              {
                v1142 = *v1139;
                *(_OWORD *)(v124 + 1273) = *(_OWORD *)(v125 + 1273);
                *v1138 = v1142;
              }
              else
              {
                *((_QWORD *)v124 + 158) = v1141;
                v124[1272] = v125[1272];
                v1144 = *((_QWORD *)v125 + 160);
                v124[1288] = v125[1288];
                *((_QWORD *)v124 + 160) = v1144;
                swift_bridgeObjectRetain(v1141);
              }
            }
            else if (v1141 == 1)
            {
              sub_100083F00((_QWORD *)v124 + 158);
              v1143 = *(_OWORD *)(v125 + 1273);
              *v1138 = *v1139;
              *(_OWORD *)(v124 + 1273) = v1143;
            }
            else
            {
              *((_QWORD *)v124 + 158) = v1141;
              swift_bridgeObjectRetain(v1141);
              swift_bridgeObjectRelease(v1140);
              v124[1272] = v125[1272];
              v1145 = *((_QWORD *)v125 + 160);
              v124[1288] = v125[1288];
              *((_QWORD *)v124 + 160) = v1145;
            }
            v1146 = (__int128 *)(v124 + 1296);
            v1147 = (__int128 *)(v125 + 1296);
            v1148 = *((_QWORD *)v124 + 162);
            v1149 = *((_QWORD *)v125 + 162);
            if (v1148 == 1)
            {
              if (v1149 == 1)
              {
                v1150 = *v1147;
                *(_OWORD *)(v124 + 1305) = *(_OWORD *)(v125 + 1305);
                *v1146 = v1150;
              }
              else
              {
                *((_QWORD *)v124 + 162) = v1149;
                v124[1304] = v125[1304];
                v1152 = *((_QWORD *)v125 + 164);
                v124[1320] = v125[1320];
                *((_QWORD *)v124 + 164) = v1152;
                swift_bridgeObjectRetain(v1149);
              }
            }
            else if (v1149 == 1)
            {
              sub_100083F00((_QWORD *)v124 + 162);
              v1151 = *(_OWORD *)(v125 + 1305);
              *v1146 = *v1147;
              *(_OWORD *)(v124 + 1305) = v1151;
            }
            else
            {
              *((_QWORD *)v124 + 162) = v1149;
              swift_bridgeObjectRetain(v1149);
              swift_bridgeObjectRelease(v1148);
              v124[1304] = v125[1304];
              v1153 = *((_QWORD *)v125 + 164);
              v124[1320] = v125[1320];
              *((_QWORD *)v124 + 164) = v1153;
            }
            v1154 = (__int128 *)(v124 + 1328);
            v1155 = (__int128 *)(v125 + 1328);
            v1156 = *((_QWORD *)v124 + 166);
            v1157 = *((_QWORD *)v125 + 166);
            if (v1156 == 1)
            {
              if (v1157 == 1)
              {
                v1158 = *v1155;
                *(_OWORD *)(v124 + 1337) = *(_OWORD *)(v125 + 1337);
                *v1154 = v1158;
              }
              else
              {
                *((_QWORD *)v124 + 166) = v1157;
                v124[1336] = v125[1336];
                v1160 = *((_QWORD *)v125 + 168);
                v124[1352] = v125[1352];
                *((_QWORD *)v124 + 168) = v1160;
                swift_bridgeObjectRetain(v1157);
              }
            }
            else if (v1157 == 1)
            {
              sub_100083F00((_QWORD *)v124 + 166);
              v1159 = *(_OWORD *)(v125 + 1337);
              *v1154 = *v1155;
              *(_OWORD *)(v124 + 1337) = v1159;
            }
            else
            {
              *((_QWORD *)v124 + 166) = v1157;
              swift_bridgeObjectRetain(v1157);
              swift_bridgeObjectRelease(v1156);
              v124[1336] = v125[1336];
              v1161 = *((_QWORD *)v125 + 168);
              v124[1352] = v125[1352];
              *((_QWORD *)v124 + 168) = v1161;
            }
            v1162 = (__int128 *)(v124 + 1360);
            v1163 = (__int128 *)(v125 + 1360);
            v1164 = *((_QWORD *)v124 + 170);
            v1165 = *((_QWORD *)v125 + 170);
            if (v1164 == 1)
            {
              if (v1165 == 1)
              {
                v1166 = *v1163;
                *(_OWORD *)(v124 + 1369) = *(_OWORD *)(v125 + 1369);
                *v1162 = v1166;
              }
              else
              {
                *((_QWORD *)v124 + 170) = v1165;
                v124[1368] = v125[1368];
                v1168 = *((_QWORD *)v125 + 172);
                v124[1384] = v125[1384];
                *((_QWORD *)v124 + 172) = v1168;
                swift_bridgeObjectRetain(v1165);
              }
            }
            else if (v1165 == 1)
            {
              sub_100083F00((_QWORD *)v124 + 170);
              v1167 = *(_OWORD *)(v125 + 1369);
              *v1162 = *v1163;
              *(_OWORD *)(v124 + 1369) = v1167;
            }
            else
            {
              *((_QWORD *)v124 + 170) = v1165;
              swift_bridgeObjectRetain(v1165);
              swift_bridgeObjectRelease(v1164);
              v124[1368] = v125[1368];
              v1169 = *((_QWORD *)v125 + 172);
              v124[1384] = v125[1384];
              *((_QWORD *)v124 + 172) = v1169;
            }
            v1170 = (__int128 *)(v124 + 1392);
            v1171 = (__int128 *)(v125 + 1392);
            v1172 = *((_QWORD *)v124 + 174);
            v1173 = *((_QWORD *)v125 + 174);
            if (v1172 == 1)
            {
              if (v1173 == 1)
              {
                v1174 = *v1171;
                *(_OWORD *)(v124 + 1401) = *(_OWORD *)(v125 + 1401);
                *v1170 = v1174;
              }
              else
              {
                *((_QWORD *)v124 + 174) = v1173;
                v124[1400] = v125[1400];
                v1176 = *((_QWORD *)v125 + 176);
                v124[1416] = v125[1416];
                *((_QWORD *)v124 + 176) = v1176;
                swift_bridgeObjectRetain(v1173);
              }
            }
            else if (v1173 == 1)
            {
              sub_100083F00((_QWORD *)v124 + 174);
              v1175 = *(_OWORD *)(v125 + 1401);
              *v1170 = *v1171;
              *(_OWORD *)(v124 + 1401) = v1175;
            }
            else
            {
              *((_QWORD *)v124 + 174) = v1173;
              swift_bridgeObjectRetain(v1173);
              swift_bridgeObjectRelease(v1172);
              v124[1400] = v125[1400];
              v1177 = *((_QWORD *)v125 + 176);
              v124[1416] = v125[1416];
              *((_QWORD *)v124 + 176) = v1177;
            }
            v1178 = (__int128 *)(v124 + 1424);
            v1179 = (__int128 *)(v125 + 1424);
            v1180 = *((_QWORD *)v124 + 178);
            v1181 = *((_QWORD *)v125 + 178);
            if (v1180 == 1)
            {
              if (v1181 == 1)
              {
                v1182 = *v1179;
                *(_OWORD *)(v124 + 1433) = *(_OWORD *)(v125 + 1433);
                *v1178 = v1182;
              }
              else
              {
                *((_QWORD *)v124 + 178) = v1181;
                v124[1432] = v125[1432];
                v1184 = *((_QWORD *)v125 + 180);
                v124[1448] = v125[1448];
                *((_QWORD *)v124 + 180) = v1184;
                swift_bridgeObjectRetain(v1181);
              }
            }
            else if (v1181 == 1)
            {
              sub_100083F00((_QWORD *)v124 + 178);
              v1183 = *(_OWORD *)(v125 + 1433);
              *v1178 = *v1179;
              *(_OWORD *)(v124 + 1433) = v1183;
            }
            else
            {
              *((_QWORD *)v124 + 178) = v1181;
              swift_bridgeObjectRetain(v1181);
              swift_bridgeObjectRelease(v1180);
              v124[1432] = v125[1432];
              v1185 = *((_QWORD *)v125 + 180);
              v124[1448] = v125[1448];
              *((_QWORD *)v124 + 180) = v1185;
            }
            v1186 = (__int128 *)(v124 + 1456);
            v1187 = (__int128 *)(v125 + 1456);
            v1188 = *((_QWORD *)v124 + 182);
            v1189 = *((_QWORD *)v125 + 182);
            if (v1188 == 1)
            {
              if (v1189 == 1)
              {
                v1190 = *v1187;
                *(_OWORD *)(v124 + 1465) = *(_OWORD *)(v125 + 1465);
                *v1186 = v1190;
              }
              else
              {
                *((_QWORD *)v124 + 182) = v1189;
                v124[1464] = v125[1464];
                v1192 = *((_QWORD *)v125 + 184);
                v124[1480] = v125[1480];
                *((_QWORD *)v124 + 184) = v1192;
                swift_bridgeObjectRetain(v1189);
              }
            }
            else if (v1189 == 1)
            {
              sub_100083F00((_QWORD *)v124 + 182);
              v1191 = *(_OWORD *)(v125 + 1465);
              *v1186 = *v1187;
              *(_OWORD *)(v124 + 1465) = v1191;
            }
            else
            {
              *((_QWORD *)v124 + 182) = v1189;
              swift_bridgeObjectRetain(v1189);
              swift_bridgeObjectRelease(v1188);
              v124[1464] = v125[1464];
              v1193 = *((_QWORD *)v125 + 184);
              v124[1480] = v125[1480];
              *((_QWORD *)v124 + 184) = v1193;
            }
            v1194 = (__int128 *)(v124 + 1488);
            v1195 = (__int128 *)(v125 + 1488);
            v1196 = *((_QWORD *)v124 + 186);
            v1197 = *((_QWORD *)v125 + 186);
            if (v1196 == 1)
            {
              if (v1197 == 1)
              {
                v1198 = *v1195;
                *(_OWORD *)(v124 + 1497) = *(_OWORD *)(v125 + 1497);
                *v1194 = v1198;
              }
              else
              {
                *((_QWORD *)v124 + 186) = v1197;
                v124[1496] = v125[1496];
                v1200 = *((_QWORD *)v125 + 188);
                v124[1512] = v125[1512];
                *((_QWORD *)v124 + 188) = v1200;
                swift_bridgeObjectRetain(v1197);
              }
            }
            else if (v1197 == 1)
            {
              sub_100083F00((_QWORD *)v124 + 186);
              v1199 = *(_OWORD *)(v125 + 1497);
              *v1194 = *v1195;
              *(_OWORD *)(v124 + 1497) = v1199;
            }
            else
            {
              *((_QWORD *)v124 + 186) = v1197;
              swift_bridgeObjectRetain(v1197);
              swift_bridgeObjectRelease(v1196);
              v124[1496] = v125[1496];
              v1201 = *((_QWORD *)v125 + 188);
              v124[1512] = v125[1512];
              *((_QWORD *)v124 + 188) = v1201;
            }
            v1202 = (__int128 *)(v124 + 1520);
            v1203 = (__int128 *)(v125 + 1520);
            v1204 = *((_QWORD *)v124 + 190);
            v1205 = *((_QWORD *)v125 + 190);
            if (v1204 == 1)
            {
              if (v1205 == 1)
              {
                v1206 = *v1203;
                *(_OWORD *)(v124 + 1529) = *(_OWORD *)(v125 + 1529);
                *v1202 = v1206;
              }
              else
              {
                *((_QWORD *)v124 + 190) = v1205;
                v124[1528] = v125[1528];
                v1208 = *((_QWORD *)v125 + 192);
                v124[1544] = v125[1544];
                *((_QWORD *)v124 + 192) = v1208;
                swift_bridgeObjectRetain(v1205);
              }
            }
            else if (v1205 == 1)
            {
              sub_100083F00((_QWORD *)v124 + 190);
              v1207 = *(_OWORD *)(v125 + 1529);
              *v1202 = *v1203;
              *(_OWORD *)(v124 + 1529) = v1207;
            }
            else
            {
              *((_QWORD *)v124 + 190) = v1205;
              swift_bridgeObjectRetain(v1205);
              swift_bridgeObjectRelease(v1204);
              v124[1528] = v125[1528];
              v1209 = *((_QWORD *)v125 + 192);
              v124[1544] = v125[1544];
              *((_QWORD *)v124 + 192) = v1209;
            }
            v1210 = (__int128 *)(v124 + 1552);
            v1211 = (__int128 *)(v125 + 1552);
            v1212 = *((_QWORD *)v124 + 194);
            v1213 = *((_QWORD *)v125 + 194);
            if (v1212 == 1)
            {
              if (v1213 == 1)
              {
                v1214 = *v1211;
                *(_OWORD *)(v124 + 1561) = *(_OWORD *)(v125 + 1561);
                *v1210 = v1214;
              }
              else
              {
                *((_QWORD *)v124 + 194) = v1213;
                v124[1560] = v125[1560];
                v1216 = *((_QWORD *)v125 + 196);
                v124[1576] = v125[1576];
                *((_QWORD *)v124 + 196) = v1216;
                swift_bridgeObjectRetain(v1213);
              }
            }
            else if (v1213 == 1)
            {
              sub_100083F00((_QWORD *)v124 + 194);
              v1215 = *(_OWORD *)(v125 + 1561);
              *v1210 = *v1211;
              *(_OWORD *)(v124 + 1561) = v1215;
            }
            else
            {
              *((_QWORD *)v124 + 194) = v1213;
              swift_bridgeObjectRetain(v1213);
              swift_bridgeObjectRelease(v1212);
              v124[1560] = v125[1560];
              v1217 = *((_QWORD *)v125 + 196);
              v124[1576] = v125[1576];
              *((_QWORD *)v124 + 196) = v1217;
            }
            v1218 = (__int128 *)(v124 + 1584);
            v1219 = (__int128 *)(v125 + 1584);
            v1220 = *((_QWORD *)v124 + 198);
            v1221 = *((_QWORD *)v125 + 198);
            if (v1220 == 1)
            {
              if (v1221 == 1)
              {
                v1222 = *v1219;
                *(_OWORD *)(v124 + 1593) = *(_OWORD *)(v125 + 1593);
                *v1218 = v1222;
              }
              else
              {
                *((_QWORD *)v124 + 198) = v1221;
                v124[1592] = v125[1592];
                v1224 = *((_QWORD *)v125 + 200);
                v124[1608] = v125[1608];
                *((_QWORD *)v124 + 200) = v1224;
                swift_bridgeObjectRetain(v1221);
              }
            }
            else if (v1221 == 1)
            {
              sub_100083F00((_QWORD *)v124 + 198);
              v1223 = *(_OWORD *)(v125 + 1593);
              *v1218 = *v1219;
              *(_OWORD *)(v124 + 1593) = v1223;
            }
            else
            {
              *((_QWORD *)v124 + 198) = v1221;
              swift_bridgeObjectRetain(v1221);
              swift_bridgeObjectRelease(v1220);
              v124[1592] = v125[1592];
              v1225 = *((_QWORD *)v125 + 200);
              v124[1608] = v125[1608];
              *((_QWORD *)v124 + 200) = v1225;
            }
            v1226 = *((_OWORD *)v125 + 101);
            v124[1632] = v125[1632];
            *((_OWORD *)v124 + 101) = v1226;
            v1227 = *(_OWORD *)(v125 + 1640);
            v124[1656] = v125[1656];
            *(_OWORD *)(v124 + 1640) = v1227;
            v124[1657] = v125[1657];
            v124[1658] = v125[1658];
            v124[1659] = v125[1659];
            v124[1660] = v125[1660];
            v124[1661] = v125[1661];
            v124[1662] = v125[1662];
            v124[1663] = v125[1663];
            v1228 = *((_QWORD *)v124 + 208);
            v1229 = *((_QWORD *)v125 + 208);
            *((_QWORD *)v124 + 208) = v1229;
            swift_bridgeObjectRetain(v1229);
            swift_bridgeObjectRelease(v1228);
            v1230 = *((_QWORD *)v124 + 209);
            v1231 = *((_QWORD *)v125 + 209);
            *((_QWORD *)v124 + 209) = v1231;
            swift_bridgeObjectRetain(v1231);
            swift_bridgeObjectRelease(v1230);
LABEL_1040:
            v1232 = v124 + 1680;
            v1233 = (uint64_t *)(v125 + 1680);
            v1234 = *((_QWORD *)v125 + 312);
            if (*((_QWORD *)v124 + 312) == 1)
            {
              if (v1234 != 1)
              {
                v1235 = *v1233;
                if (*v1233 == 1)
                {
                  v1236 = *(_OWORD *)v1233;
                  *(_OWORD *)(v124 + 1689) = *(_OWORD *)(v125 + 1689);
                  *v1232 = v1236;
                }
                else
                {
                  *((_QWORD *)v124 + 210) = v1235;
                  v124[1688] = v125[1688];
                  v1240 = *((_QWORD *)v125 + 212);
                  v124[1704] = v125[1704];
                  *((_QWORD *)v124 + 212) = v1240;
                  swift_bridgeObjectRetain(v1235);
                }
                v1241 = *((_QWORD *)v125 + 214);
                if (v1241 == 1)
                {
                  v1242 = *((_OWORD *)v125 + 107);
                  *(_OWORD *)(v124 + 1721) = *(_OWORD *)(v125 + 1721);
                  *((_OWORD *)v124 + 107) = v1242;
                }
                else
                {
                  *((_QWORD *)v124 + 214) = v1241;
                  v124[1720] = v125[1720];
                  v1244 = *((_QWORD *)v125 + 216);
                  v124[1736] = v125[1736];
                  *((_QWORD *)v124 + 216) = v1244;
                  swift_bridgeObjectRetain(v1241);
                }
                v1245 = *((_QWORD *)v125 + 218);
                if (v1245 == 1)
                {
                  v1246 = *((_OWORD *)v125 + 109);
                  *(_OWORD *)(v124 + 1753) = *(_OWORD *)(v125 + 1753);
                  *((_OWORD *)v124 + 109) = v1246;
                }
                else
                {
                  *((_QWORD *)v124 + 218) = v1245;
                  v124[1752] = v125[1752];
                  v1247 = *((_QWORD *)v125 + 220);
                  v124[1768] = v125[1768];
                  *((_QWORD *)v124 + 220) = v1247;
                  swift_bridgeObjectRetain(v1245);
                }
                v1248 = *((_QWORD *)v125 + 222);
                if (v1248 == 1)
                {
                  v1249 = *((_OWORD *)v125 + 111);
                  *(_OWORD *)(v124 + 1785) = *(_OWORD *)(v125 + 1785);
                  *((_OWORD *)v124 + 111) = v1249;
                }
                else
                {
                  *((_QWORD *)v124 + 222) = v1248;
                  v124[1784] = v125[1784];
                  v1250 = *((_QWORD *)v125 + 224);
                  v124[1800] = v125[1800];
                  *((_QWORD *)v124 + 224) = v1250;
                  swift_bridgeObjectRetain(v1248);
                }
                v1251 = *((_QWORD *)v125 + 226);
                if (v1251 == 1)
                {
                  v1252 = *((_OWORD *)v125 + 113);
                  *(_OWORD *)(v124 + 1817) = *(_OWORD *)(v125 + 1817);
                  *((_OWORD *)v124 + 113) = v1252;
                }
                else
                {
                  *((_QWORD *)v124 + 226) = v1251;
                  v124[1816] = v125[1816];
                  v1253 = *((_QWORD *)v125 + 228);
                  v124[1832] = v125[1832];
                  *((_QWORD *)v124 + 228) = v1253;
                  swift_bridgeObjectRetain(v1251);
                }
                v1254 = *((_QWORD *)v125 + 230);
                if (v1254 == 1)
                {
                  v1255 = *((_OWORD *)v125 + 115);
                  *(_OWORD *)(v124 + 1849) = *(_OWORD *)(v125 + 1849);
                  *((_OWORD *)v124 + 115) = v1255;
                }
                else
                {
                  *((_QWORD *)v124 + 230) = v1254;
                  v124[1848] = v125[1848];
                  v1256 = *((_QWORD *)v125 + 232);
                  v124[1864] = v125[1864];
                  *((_QWORD *)v124 + 232) = v1256;
                  swift_bridgeObjectRetain(v1254);
                }
                v1257 = *((_QWORD *)v125 + 234);
                if (v1257 == 1)
                {
                  v1258 = *((_OWORD *)v125 + 117);
                  *(_OWORD *)(v124 + 1881) = *(_OWORD *)(v125 + 1881);
                  *((_OWORD *)v124 + 117) = v1258;
                }
                else
                {
                  *((_QWORD *)v124 + 234) = v1257;
                  v124[1880] = v125[1880];
                  v1259 = *((_QWORD *)v125 + 236);
                  v124[1896] = v125[1896];
                  *((_QWORD *)v124 + 236) = v1259;
                  swift_bridgeObjectRetain(v1257);
                }
                v1260 = *((_QWORD *)v125 + 238);
                if (v1260 == 1)
                {
                  v1261 = *((_OWORD *)v125 + 119);
                  *(_OWORD *)(v124 + 1913) = *(_OWORD *)(v125 + 1913);
                  *((_OWORD *)v124 + 119) = v1261;
                }
                else
                {
                  *((_QWORD *)v124 + 238) = v1260;
                  v124[1912] = v125[1912];
                  v1262 = *((_QWORD *)v125 + 240);
                  v124[1928] = v125[1928];
                  *((_QWORD *)v124 + 240) = v1262;
                  swift_bridgeObjectRetain(v1260);
                }
                v1263 = *((_QWORD *)v125 + 242);
                if (v1263 == 1)
                {
                  v1264 = *((_OWORD *)v125 + 121);
                  *(_OWORD *)(v124 + 1945) = *(_OWORD *)(v125 + 1945);
                  *((_OWORD *)v124 + 121) = v1264;
                }
                else
                {
                  *((_QWORD *)v124 + 242) = v1263;
                  v124[1944] = v125[1944];
                  v1265 = *((_QWORD *)v125 + 244);
                  v124[1960] = v125[1960];
                  *((_QWORD *)v124 + 244) = v1265;
                  swift_bridgeObjectRetain(v1263);
                }
                v1266 = *((_QWORD *)v125 + 246);
                if (v1266 == 1)
                {
                  v1267 = *((_OWORD *)v125 + 123);
                  *(_OWORD *)(v124 + 1977) = *(_OWORD *)(v125 + 1977);
                  *((_OWORD *)v124 + 123) = v1267;
                }
                else
                {
                  *((_QWORD *)v124 + 246) = v1266;
                  v124[1976] = v125[1976];
                  v1268 = *((_QWORD *)v125 + 248);
                  v124[1992] = v125[1992];
                  *((_QWORD *)v124 + 248) = v1268;
                  swift_bridgeObjectRetain(v1266);
                }
                v1269 = *((_QWORD *)v125 + 250);
                if (v1269 == 1)
                {
                  v1270 = *((_OWORD *)v125 + 125);
                  *(_OWORD *)(v124 + 2009) = *(_OWORD *)(v125 + 2009);
                  *((_OWORD *)v124 + 125) = v1270;
                }
                else
                {
                  *((_QWORD *)v124 + 250) = v1269;
                  v124[2008] = v125[2008];
                  v1271 = *((_QWORD *)v125 + 252);
                  v124[2024] = v125[2024];
                  *((_QWORD *)v124 + 252) = v1271;
                  swift_bridgeObjectRetain(v1269);
                }
                v1272 = *((_QWORD *)v125 + 254);
                if (v1272 == 1)
                {
                  v1273 = *((_OWORD *)v125 + 127);
                  *(_OWORD *)(v124 + 2041) = *(_OWORD *)(v125 + 2041);
                  *((_OWORD *)v124 + 127) = v1273;
                }
                else
                {
                  *((_QWORD *)v124 + 254) = v1272;
                  v124[2040] = v125[2040];
                  v1274 = *((_QWORD *)v125 + 256);
                  v124[2056] = v125[2056];
                  *((_QWORD *)v124 + 256) = v1274;
                  swift_bridgeObjectRetain(v1272);
                }
                v1275 = *((_QWORD *)v125 + 258);
                if (v1275 == 1)
                {
                  v1276 = *((_OWORD *)v125 + 129);
                  *(_OWORD *)(v124 + 2073) = *(_OWORD *)(v125 + 2073);
                  *((_OWORD *)v124 + 129) = v1276;
                }
                else
                {
                  *((_QWORD *)v124 + 258) = v1275;
                  v124[2072] = v125[2072];
                  v1277 = *((_QWORD *)v125 + 260);
                  v124[2088] = v125[2088];
                  *((_QWORD *)v124 + 260) = v1277;
                  swift_bridgeObjectRetain(v1275);
                }
                v1278 = *((_QWORD *)v125 + 262);
                if (v1278 == 1)
                {
                  v1279 = *((_OWORD *)v125 + 131);
                  *(_OWORD *)(v124 + 2105) = *(_OWORD *)(v125 + 2105);
                  *((_OWORD *)v124 + 131) = v1279;
                }
                else
                {
                  *((_QWORD *)v124 + 262) = v1278;
                  v124[2104] = v125[2104];
                  v1280 = *((_QWORD *)v125 + 264);
                  v124[2120] = v125[2120];
                  *((_QWORD *)v124 + 264) = v1280;
                  swift_bridgeObjectRetain(v1278);
                }
                v1281 = *((_QWORD *)v125 + 266);
                if (v1281 == 1)
                {
                  v1282 = *((_OWORD *)v125 + 133);
                  *(_OWORD *)(v124 + 2137) = *(_OWORD *)(v125 + 2137);
                  *((_OWORD *)v124 + 133) = v1282;
                }
                else
                {
                  *((_QWORD *)v124 + 266) = v1281;
                  v124[2136] = v125[2136];
                  v1283 = *((_QWORD *)v125 + 268);
                  v124[2152] = v125[2152];
                  *((_QWORD *)v124 + 268) = v1283;
                  swift_bridgeObjectRetain(v1281);
                }
                v1284 = *((_QWORD *)v125 + 270);
                if (v1284 == 1)
                {
                  v1285 = *((_OWORD *)v125 + 135);
                  *(_OWORD *)(v124 + 2169) = *(_OWORD *)(v125 + 2169);
                  *((_OWORD *)v124 + 135) = v1285;
                }
                else
                {
                  *((_QWORD *)v124 + 270) = v1284;
                  v124[2168] = v125[2168];
                  v1286 = *((_QWORD *)v125 + 272);
                  v124[2184] = v125[2184];
                  *((_QWORD *)v124 + 272) = v1286;
                  swift_bridgeObjectRetain(v1284);
                }
                v1287 = *((_QWORD *)v125 + 274);
                if (v1287 == 1)
                {
                  v1288 = *((_OWORD *)v125 + 137);
                  *(_OWORD *)(v124 + 2201) = *(_OWORD *)(v125 + 2201);
                  *((_OWORD *)v124 + 137) = v1288;
                }
                else
                {
                  *((_QWORD *)v124 + 274) = v1287;
                  v124[2200] = v125[2200];
                  v1289 = *((_QWORD *)v125 + 276);
                  v124[2216] = v125[2216];
                  *((_QWORD *)v124 + 276) = v1289;
                  swift_bridgeObjectRetain(v1287);
                }
                v1290 = *((_QWORD *)v125 + 278);
                if (v1290 == 1)
                {
                  v1291 = *((_OWORD *)v125 + 139);
                  *(_OWORD *)(v124 + 2233) = *(_OWORD *)(v125 + 2233);
                  *((_OWORD *)v124 + 139) = v1291;
                }
                else
                {
                  *((_QWORD *)v124 + 278) = v1290;
                  v124[2232] = v125[2232];
                  v1292 = *((_QWORD *)v125 + 280);
                  v124[2248] = v125[2248];
                  *((_QWORD *)v124 + 280) = v1292;
                  swift_bridgeObjectRetain(v1290);
                }
                v1293 = *((_QWORD *)v125 + 282);
                if (v1293 == 1)
                {
                  v1294 = *((_OWORD *)v125 + 141);
                  *(_OWORD *)(v124 + 2265) = *(_OWORD *)(v125 + 2265);
                  *((_OWORD *)v124 + 141) = v1294;
                }
                else
                {
                  *((_QWORD *)v124 + 282) = v1293;
                  v124[2264] = v125[2264];
                  v1295 = *((_QWORD *)v125 + 284);
                  v124[2280] = v125[2280];
                  *((_QWORD *)v124 + 284) = v1295;
                  swift_bridgeObjectRetain(v1293);
                }
                v1296 = *((_QWORD *)v125 + 286);
                if (v1296 == 1)
                {
                  v1297 = *((_OWORD *)v125 + 143);
                  *(_OWORD *)(v124 + 2297) = *(_OWORD *)(v125 + 2297);
                  *((_OWORD *)v124 + 143) = v1297;
                }
                else
                {
                  *((_QWORD *)v124 + 286) = v1296;
                  v124[2296] = v125[2296];
                  v1298 = *((_QWORD *)v125 + 288);
                  v124[2312] = v125[2312];
                  *((_QWORD *)v124 + 288) = v1298;
                  swift_bridgeObjectRetain(v1296);
                }
                v1299 = *((_QWORD *)v125 + 290);
                if (v1299 == 1)
                {
                  v1300 = *((_OWORD *)v125 + 145);
                  *(_OWORD *)(v124 + 2329) = *(_OWORD *)(v125 + 2329);
                  *((_OWORD *)v124 + 145) = v1300;
                }
                else
                {
                  *((_QWORD *)v124 + 290) = v1299;
                  v124[2328] = v125[2328];
                  v1301 = *((_QWORD *)v125 + 292);
                  v124[2344] = v125[2344];
                  *((_QWORD *)v124 + 292) = v1301;
                  swift_bridgeObjectRetain(v1299);
                }
                v1302 = *((_QWORD *)v125 + 294);
                if (v1302 == 1)
                {
                  v1303 = *((_OWORD *)v125 + 147);
                  *(_OWORD *)(v124 + 2361) = *(_OWORD *)(v125 + 2361);
                  *((_OWORD *)v124 + 147) = v1303;
                }
                else
                {
                  *((_QWORD *)v124 + 294) = v1302;
                  v124[2360] = v125[2360];
                  v1304 = *((_QWORD *)v125 + 296);
                  v124[2376] = v125[2376];
                  *((_QWORD *)v124 + 296) = v1304;
                  swift_bridgeObjectRetain(v1302);
                }
                v1305 = *((_QWORD *)v125 + 298);
                if (v1305 == 1)
                {
                  v1306 = *((_OWORD *)v125 + 149);
                  *(_OWORD *)(v124 + 2393) = *(_OWORD *)(v125 + 2393);
                  *((_OWORD *)v124 + 149) = v1306;
                }
                else
                {
                  *((_QWORD *)v124 + 298) = v1305;
                  v124[2392] = v125[2392];
                  v1307 = *((_QWORD *)v125 + 300);
                  v124[2408] = v125[2408];
                  *((_QWORD *)v124 + 300) = v1307;
                  swift_bridgeObjectRetain(v1305);
                }
                v1308 = *((_QWORD *)v125 + 302);
                if (v1308 == 1)
                {
                  v1309 = *((_OWORD *)v125 + 151);
                  *(_OWORD *)(v124 + 2425) = *(_OWORD *)(v125 + 2425);
                  *((_OWORD *)v124 + 151) = v1309;
                }
                else
                {
                  *((_QWORD *)v124 + 302) = v1308;
                  v124[2424] = v125[2424];
                  v1310 = *((_QWORD *)v125 + 304);
                  v124[2440] = v125[2440];
                  *((_QWORD *)v124 + 304) = v1310;
                  swift_bridgeObjectRetain(v1308);
                }
                v1311 = *((_OWORD *)v125 + 153);
                v124[2464] = v125[2464];
                *((_OWORD *)v124 + 153) = v1311;
                v1312 = *(_OWORD *)(v125 + 2472);
                v124[2488] = v125[2488];
                *(_OWORD *)(v124 + 2472) = v1312;
                v124[2489] = v125[2489];
                v124[2490] = v125[2490];
                v124[2491] = v125[2491];
                v124[2492] = v125[2492];
                v124[2493] = v125[2493];
                v124[2494] = v125[2494];
                v124[2495] = v125[2495];
                v1313 = *((_QWORD *)v125 + 312);
                *((_QWORD *)v124 + 312) = v1313;
                v1314 = *((_QWORD *)v125 + 313);
                *((_QWORD *)v124 + 313) = v1314;
                swift_bridgeObjectRetain(v1313);
                swift_bridgeObjectRetain(v1314);
                goto LABEL_1287;
              }
            }
            else
            {
              if (v1234 != 1)
              {
                v1237 = *(_QWORD *)v1232;
                v1238 = *v1233;
                if (*(_QWORD *)v1232 == 1)
                {
                  if (v1238 == 1)
                  {
                    v1239 = *(_OWORD *)v1233;
                    *(_OWORD *)(v124 + 1689) = *(_OWORD *)(v125 + 1689);
                    *v1232 = v1239;
                  }
                  else
                  {
                    *((_QWORD *)v124 + 210) = v1238;
                    v124[1688] = v125[1688];
                    v1315 = *((_QWORD *)v125 + 212);
                    v124[1704] = v125[1704];
                    *((_QWORD *)v124 + 212) = v1315;
                    swift_bridgeObjectRetain(v1238);
                  }
                }
                else if (v1238 == 1)
                {
                  sub_100083F00((_QWORD *)v124 + 210);
                  v1243 = *(_OWORD *)(v125 + 1689);
                  *v1232 = *(_OWORD *)v1233;
                  *(_OWORD *)(v124 + 1689) = v1243;
                }
                else
                {
                  *((_QWORD *)v124 + 210) = v1238;
                  swift_bridgeObjectRetain(v1238);
                  swift_bridgeObjectRelease(v1237);
                  v124[1688] = v125[1688];
                  v1316 = *((_QWORD *)v125 + 212);
                  v124[1704] = v125[1704];
                  *((_QWORD *)v124 + 212) = v1316;
                }
                v1317 = (__int128 *)(v124 + 1712);
                v1318 = (__int128 *)(v125 + 1712);
                v1319 = *((_QWORD *)v124 + 214);
                v1320 = *((_QWORD *)v125 + 214);
                if (v1319 == 1)
                {
                  if (v1320 == 1)
                  {
                    v1321 = *v1318;
                    *(_OWORD *)(v124 + 1721) = *(_OWORD *)(v125 + 1721);
                    *v1317 = v1321;
                  }
                  else
                  {
                    *((_QWORD *)v124 + 214) = v1320;
                    v124[1720] = v125[1720];
                    v1323 = *((_QWORD *)v125 + 216);
                    v124[1736] = v125[1736];
                    *((_QWORD *)v124 + 216) = v1323;
                    swift_bridgeObjectRetain(v1320);
                  }
                }
                else if (v1320 == 1)
                {
                  sub_100083F00((_QWORD *)v124 + 214);
                  v1322 = *(_OWORD *)(v125 + 1721);
                  *v1317 = *v1318;
                  *(_OWORD *)(v124 + 1721) = v1322;
                }
                else
                {
                  *((_QWORD *)v124 + 214) = v1320;
                  swift_bridgeObjectRetain(v1320);
                  swift_bridgeObjectRelease(v1319);
                  v124[1720] = v125[1720];
                  v1324 = *((_QWORD *)v125 + 216);
                  v124[1736] = v125[1736];
                  *((_QWORD *)v124 + 216) = v1324;
                }
                v1325 = (__int128 *)(v124 + 1744);
                v1326 = (__int128 *)(v125 + 1744);
                v1327 = *((_QWORD *)v124 + 218);
                v1328 = *((_QWORD *)v125 + 218);
                if (v1327 == 1)
                {
                  if (v1328 == 1)
                  {
                    v1329 = *v1326;
                    *(_OWORD *)(v124 + 1753) = *(_OWORD *)(v125 + 1753);
                    *v1325 = v1329;
                  }
                  else
                  {
                    *((_QWORD *)v124 + 218) = v1328;
                    v124[1752] = v125[1752];
                    v1331 = *((_QWORD *)v125 + 220);
                    v124[1768] = v125[1768];
                    *((_QWORD *)v124 + 220) = v1331;
                    swift_bridgeObjectRetain(v1328);
                  }
                }
                else if (v1328 == 1)
                {
                  sub_100083F00((_QWORD *)v124 + 218);
                  v1330 = *(_OWORD *)(v125 + 1753);
                  *v1325 = *v1326;
                  *(_OWORD *)(v124 + 1753) = v1330;
                }
                else
                {
                  *((_QWORD *)v124 + 218) = v1328;
                  swift_bridgeObjectRetain(v1328);
                  swift_bridgeObjectRelease(v1327);
                  v124[1752] = v125[1752];
                  v1332 = *((_QWORD *)v125 + 220);
                  v124[1768] = v125[1768];
                  *((_QWORD *)v124 + 220) = v1332;
                }
                v1333 = (__int128 *)(v124 + 1776);
                v1334 = (__int128 *)(v125 + 1776);
                v1335 = *((_QWORD *)v124 + 222);
                v1336 = *((_QWORD *)v125 + 222);
                if (v1335 == 1)
                {
                  if (v1336 == 1)
                  {
                    v1337 = *v1334;
                    *(_OWORD *)(v124 + 1785) = *(_OWORD *)(v125 + 1785);
                    *v1333 = v1337;
                  }
                  else
                  {
                    *((_QWORD *)v124 + 222) = v1336;
                    v124[1784] = v125[1784];
                    v1339 = *((_QWORD *)v125 + 224);
                    v124[1800] = v125[1800];
                    *((_QWORD *)v124 + 224) = v1339;
                    swift_bridgeObjectRetain(v1336);
                  }
                }
                else if (v1336 == 1)
                {
                  sub_100083F00((_QWORD *)v124 + 222);
                  v1338 = *(_OWORD *)(v125 + 1785);
                  *v1333 = *v1334;
                  *(_OWORD *)(v124 + 1785) = v1338;
                }
                else
                {
                  *((_QWORD *)v124 + 222) = v1336;
                  swift_bridgeObjectRetain(v1336);
                  swift_bridgeObjectRelease(v1335);
                  v124[1784] = v125[1784];
                  v1340 = *((_QWORD *)v125 + 224);
                  v124[1800] = v125[1800];
                  *((_QWORD *)v124 + 224) = v1340;
                }
                v1341 = (__int128 *)(v124 + 1808);
                v1342 = (__int128 *)(v125 + 1808);
                v1343 = *((_QWORD *)v124 + 226);
                v1344 = *((_QWORD *)v125 + 226);
                if (v1343 == 1)
                {
                  if (v1344 == 1)
                  {
                    v1345 = *v1342;
                    *(_OWORD *)(v124 + 1817) = *(_OWORD *)(v125 + 1817);
                    *v1341 = v1345;
                  }
                  else
                  {
                    *((_QWORD *)v124 + 226) = v1344;
                    v124[1816] = v125[1816];
                    v1347 = *((_QWORD *)v125 + 228);
                    v124[1832] = v125[1832];
                    *((_QWORD *)v124 + 228) = v1347;
                    swift_bridgeObjectRetain(v1344);
                  }
                }
                else if (v1344 == 1)
                {
                  sub_100083F00((_QWORD *)v124 + 226);
                  v1346 = *(_OWORD *)(v125 + 1817);
                  *v1341 = *v1342;
                  *(_OWORD *)(v124 + 1817) = v1346;
                }
                else
                {
                  *((_QWORD *)v124 + 226) = v1344;
                  swift_bridgeObjectRetain(v1344);
                  swift_bridgeObjectRelease(v1343);
                  v124[1816] = v125[1816];
                  v1348 = *((_QWORD *)v125 + 228);
                  v124[1832] = v125[1832];
                  *((_QWORD *)v124 + 228) = v1348;
                }
                v1349 = (__int128 *)(v124 + 1840);
                v1350 = (__int128 *)(v125 + 1840);
                v1351 = *((_QWORD *)v124 + 230);
                v1352 = *((_QWORD *)v125 + 230);
                if (v1351 == 1)
                {
                  if (v1352 == 1)
                  {
                    v1353 = *v1350;
                    *(_OWORD *)(v124 + 1849) = *(_OWORD *)(v125 + 1849);
                    *v1349 = v1353;
                  }
                  else
                  {
                    *((_QWORD *)v124 + 230) = v1352;
                    v124[1848] = v125[1848];
                    v1355 = *((_QWORD *)v125 + 232);
                    v124[1864] = v125[1864];
                    *((_QWORD *)v124 + 232) = v1355;
                    swift_bridgeObjectRetain(v1352);
                  }
                }
                else if (v1352 == 1)
                {
                  sub_100083F00((_QWORD *)v124 + 230);
                  v1354 = *(_OWORD *)(v125 + 1849);
                  *v1349 = *v1350;
                  *(_OWORD *)(v124 + 1849) = v1354;
                }
                else
                {
                  *((_QWORD *)v124 + 230) = v1352;
                  swift_bridgeObjectRetain(v1352);
                  swift_bridgeObjectRelease(v1351);
                  v124[1848] = v125[1848];
                  v1356 = *((_QWORD *)v125 + 232);
                  v124[1864] = v125[1864];
                  *((_QWORD *)v124 + 232) = v1356;
                }
                v1357 = (__int128 *)(v124 + 1872);
                v1358 = (__int128 *)(v125 + 1872);
                v1359 = *((_QWORD *)v124 + 234);
                v1360 = *((_QWORD *)v125 + 234);
                if (v1359 == 1)
                {
                  if (v1360 == 1)
                  {
                    v1361 = *v1358;
                    *(_OWORD *)(v124 + 1881) = *(_OWORD *)(v125 + 1881);
                    *v1357 = v1361;
                  }
                  else
                  {
                    *((_QWORD *)v124 + 234) = v1360;
                    v124[1880] = v125[1880];
                    v1363 = *((_QWORD *)v125 + 236);
                    v124[1896] = v125[1896];
                    *((_QWORD *)v124 + 236) = v1363;
                    swift_bridgeObjectRetain(v1360);
                  }
                }
                else if (v1360 == 1)
                {
                  sub_100083F00((_QWORD *)v124 + 234);
                  v1362 = *(_OWORD *)(v125 + 1881);
                  *v1357 = *v1358;
                  *(_OWORD *)(v124 + 1881) = v1362;
                }
                else
                {
                  *((_QWORD *)v124 + 234) = v1360;
                  swift_bridgeObjectRetain(v1360);
                  swift_bridgeObjectRelease(v1359);
                  v124[1880] = v125[1880];
                  v1364 = *((_QWORD *)v125 + 236);
                  v124[1896] = v125[1896];
                  *((_QWORD *)v124 + 236) = v1364;
                }
                v1365 = (__int128 *)(v124 + 1904);
                v1366 = (__int128 *)(v125 + 1904);
                v1367 = *((_QWORD *)v124 + 238);
                v1368 = *((_QWORD *)v125 + 238);
                if (v1367 == 1)
                {
                  if (v1368 == 1)
                  {
                    v1369 = *v1366;
                    *(_OWORD *)(v124 + 1913) = *(_OWORD *)(v125 + 1913);
                    *v1365 = v1369;
                  }
                  else
                  {
                    *((_QWORD *)v124 + 238) = v1368;
                    v124[1912] = v125[1912];
                    v1371 = *((_QWORD *)v125 + 240);
                    v124[1928] = v125[1928];
                    *((_QWORD *)v124 + 240) = v1371;
                    swift_bridgeObjectRetain(v1368);
                  }
                }
                else if (v1368 == 1)
                {
                  sub_100083F00((_QWORD *)v124 + 238);
                  v1370 = *(_OWORD *)(v125 + 1913);
                  *v1365 = *v1366;
                  *(_OWORD *)(v124 + 1913) = v1370;
                }
                else
                {
                  *((_QWORD *)v124 + 238) = v1368;
                  swift_bridgeObjectRetain(v1368);
                  swift_bridgeObjectRelease(v1367);
                  v124[1912] = v125[1912];
                  v1372 = *((_QWORD *)v125 + 240);
                  v124[1928] = v125[1928];
                  *((_QWORD *)v124 + 240) = v1372;
                }
                v1373 = (__int128 *)(v124 + 1936);
                v1374 = (__int128 *)(v125 + 1936);
                v1375 = *((_QWORD *)v124 + 242);
                v1376 = *((_QWORD *)v125 + 242);
                if (v1375 == 1)
                {
                  if (v1376 == 1)
                  {
                    v1377 = *v1374;
                    *(_OWORD *)(v124 + 1945) = *(_OWORD *)(v125 + 1945);
                    *v1373 = v1377;
                  }
                  else
                  {
                    *((_QWORD *)v124 + 242) = v1376;
                    v124[1944] = v125[1944];
                    v1379 = *((_QWORD *)v125 + 244);
                    v124[1960] = v125[1960];
                    *((_QWORD *)v124 + 244) = v1379;
                    swift_bridgeObjectRetain(v1376);
                  }
                }
                else if (v1376 == 1)
                {
                  sub_100083F00((_QWORD *)v124 + 242);
                  v1378 = *(_OWORD *)(v125 + 1945);
                  *v1373 = *v1374;
                  *(_OWORD *)(v124 + 1945) = v1378;
                }
                else
                {
                  *((_QWORD *)v124 + 242) = v1376;
                  swift_bridgeObjectRetain(v1376);
                  swift_bridgeObjectRelease(v1375);
                  v124[1944] = v125[1944];
                  v1380 = *((_QWORD *)v125 + 244);
                  v124[1960] = v125[1960];
                  *((_QWORD *)v124 + 244) = v1380;
                }
                v1381 = (__int128 *)(v124 + 1968);
                v1382 = (__int128 *)(v125 + 1968);
                v1383 = *((_QWORD *)v124 + 246);
                v1384 = *((_QWORD *)v125 + 246);
                if (v1383 == 1)
                {
                  if (v1384 == 1)
                  {
                    v1385 = *v1382;
                    *(_OWORD *)(v124 + 1977) = *(_OWORD *)(v125 + 1977);
                    *v1381 = v1385;
                  }
                  else
                  {
                    *((_QWORD *)v124 + 246) = v1384;
                    v124[1976] = v125[1976];
                    v1387 = *((_QWORD *)v125 + 248);
                    v124[1992] = v125[1992];
                    *((_QWORD *)v124 + 248) = v1387;
                    swift_bridgeObjectRetain(v1384);
                  }
                }
                else if (v1384 == 1)
                {
                  sub_100083F00((_QWORD *)v124 + 246);
                  v1386 = *(_OWORD *)(v125 + 1977);
                  *v1381 = *v1382;
                  *(_OWORD *)(v124 + 1977) = v1386;
                }
                else
                {
                  *((_QWORD *)v124 + 246) = v1384;
                  swift_bridgeObjectRetain(v1384);
                  swift_bridgeObjectRelease(v1383);
                  v124[1976] = v125[1976];
                  v1388 = *((_QWORD *)v125 + 248);
                  v124[1992] = v125[1992];
                  *((_QWORD *)v124 + 248) = v1388;
                }
                v1389 = (__int128 *)(v124 + 2000);
                v1390 = (__int128 *)(v125 + 2000);
                v1391 = *((_QWORD *)v124 + 250);
                v1392 = *((_QWORD *)v125 + 250);
                if (v1391 == 1)
                {
                  if (v1392 == 1)
                  {
                    v1393 = *v1390;
                    *(_OWORD *)(v124 + 2009) = *(_OWORD *)(v125 + 2009);
                    *v1389 = v1393;
                  }
                  else
                  {
                    *((_QWORD *)v124 + 250) = v1392;
                    v124[2008] = v125[2008];
                    v1395 = *((_QWORD *)v125 + 252);
                    v124[2024] = v125[2024];
                    *((_QWORD *)v124 + 252) = v1395;
                    swift_bridgeObjectRetain(v1392);
                  }
                }
                else if (v1392 == 1)
                {
                  sub_100083F00((_QWORD *)v124 + 250);
                  v1394 = *(_OWORD *)(v125 + 2009);
                  *v1389 = *v1390;
                  *(_OWORD *)(v124 + 2009) = v1394;
                }
                else
                {
                  *((_QWORD *)v124 + 250) = v1392;
                  swift_bridgeObjectRetain(v1392);
                  swift_bridgeObjectRelease(v1391);
                  v124[2008] = v125[2008];
                  v1396 = *((_QWORD *)v125 + 252);
                  v124[2024] = v125[2024];
                  *((_QWORD *)v124 + 252) = v1396;
                }
                v1397 = (__int128 *)(v124 + 2032);
                v1398 = (__int128 *)(v125 + 2032);
                v1399 = *((_QWORD *)v124 + 254);
                v1400 = *((_QWORD *)v125 + 254);
                if (v1399 == 1)
                {
                  if (v1400 == 1)
                  {
                    v1401 = *v1398;
                    *(_OWORD *)(v124 + 2041) = *(_OWORD *)(v125 + 2041);
                    *v1397 = v1401;
                  }
                  else
                  {
                    *((_QWORD *)v124 + 254) = v1400;
                    v124[2040] = v125[2040];
                    v1403 = *((_QWORD *)v125 + 256);
                    v124[2056] = v125[2056];
                    *((_QWORD *)v124 + 256) = v1403;
                    swift_bridgeObjectRetain(v1400);
                  }
                }
                else if (v1400 == 1)
                {
                  sub_100083F00((_QWORD *)v124 + 254);
                  v1402 = *(_OWORD *)(v125 + 2041);
                  *v1397 = *v1398;
                  *(_OWORD *)(v124 + 2041) = v1402;
                }
                else
                {
                  *((_QWORD *)v124 + 254) = v1400;
                  swift_bridgeObjectRetain(v1400);
                  swift_bridgeObjectRelease(v1399);
                  v124[2040] = v125[2040];
                  v1404 = *((_QWORD *)v125 + 256);
                  v124[2056] = v125[2056];
                  *((_QWORD *)v124 + 256) = v1404;
                }
                v1405 = (__int128 *)(v124 + 2064);
                v1406 = (__int128 *)(v125 + 2064);
                v1407 = *((_QWORD *)v124 + 258);
                v1408 = *((_QWORD *)v125 + 258);
                if (v1407 == 1)
                {
                  if (v1408 == 1)
                  {
                    v1409 = *v1406;
                    *(_OWORD *)(v124 + 2073) = *(_OWORD *)(v125 + 2073);
                    *v1405 = v1409;
                  }
                  else
                  {
                    *((_QWORD *)v124 + 258) = v1408;
                    v124[2072] = v125[2072];
                    v1411 = *((_QWORD *)v125 + 260);
                    v124[2088] = v125[2088];
                    *((_QWORD *)v124 + 260) = v1411;
                    swift_bridgeObjectRetain(v1408);
                  }
                }
                else if (v1408 == 1)
                {
                  sub_100083F00((_QWORD *)v124 + 258);
                  v1410 = *(_OWORD *)(v125 + 2073);
                  *v1405 = *v1406;
                  *(_OWORD *)(v124 + 2073) = v1410;
                }
                else
                {
                  *((_QWORD *)v124 + 258) = v1408;
                  swift_bridgeObjectRetain(v1408);
                  swift_bridgeObjectRelease(v1407);
                  v124[2072] = v125[2072];
                  v1412 = *((_QWORD *)v125 + 260);
                  v124[2088] = v125[2088];
                  *((_QWORD *)v124 + 260) = v1412;
                }
                v1413 = (__int128 *)(v124 + 2096);
                v1414 = (__int128 *)(v125 + 2096);
                v1415 = *((_QWORD *)v124 + 262);
                v1416 = *((_QWORD *)v125 + 262);
                if (v1415 == 1)
                {
                  if (v1416 == 1)
                  {
                    v1417 = *v1414;
                    *(_OWORD *)(v124 + 2105) = *(_OWORD *)(v125 + 2105);
                    *v1413 = v1417;
                  }
                  else
                  {
                    *((_QWORD *)v124 + 262) = v1416;
                    v124[2104] = v125[2104];
                    v1419 = *((_QWORD *)v125 + 264);
                    v124[2120] = v125[2120];
                    *((_QWORD *)v124 + 264) = v1419;
                    swift_bridgeObjectRetain(v1416);
                  }
                }
                else if (v1416 == 1)
                {
                  sub_100083F00((_QWORD *)v124 + 262);
                  v1418 = *(_OWORD *)(v125 + 2105);
                  *v1413 = *v1414;
                  *(_OWORD *)(v124 + 2105) = v1418;
                }
                else
                {
                  *((_QWORD *)v124 + 262) = v1416;
                  swift_bridgeObjectRetain(v1416);
                  swift_bridgeObjectRelease(v1415);
                  v124[2104] = v125[2104];
                  v1420 = *((_QWORD *)v125 + 264);
                  v124[2120] = v125[2120];
                  *((_QWORD *)v124 + 264) = v1420;
                }
                v1421 = (__int128 *)(v124 + 2128);
                v1422 = (__int128 *)(v125 + 2128);
                v1423 = *((_QWORD *)v124 + 266);
                v1424 = *((_QWORD *)v125 + 266);
                if (v1423 == 1)
                {
                  if (v1424 == 1)
                  {
                    v1425 = *v1422;
                    *(_OWORD *)(v124 + 2137) = *(_OWORD *)(v125 + 2137);
                    *v1421 = v1425;
                  }
                  else
                  {
                    *((_QWORD *)v124 + 266) = v1424;
                    v124[2136] = v125[2136];
                    v1427 = *((_QWORD *)v125 + 268);
                    v124[2152] = v125[2152];
                    *((_QWORD *)v124 + 268) = v1427;
                    swift_bridgeObjectRetain(v1424);
                  }
                }
                else if (v1424 == 1)
                {
                  sub_100083F00((_QWORD *)v124 + 266);
                  v1426 = *(_OWORD *)(v125 + 2137);
                  *v1421 = *v1422;
                  *(_OWORD *)(v124 + 2137) = v1426;
                }
                else
                {
                  *((_QWORD *)v124 + 266) = v1424;
                  swift_bridgeObjectRetain(v1424);
                  swift_bridgeObjectRelease(v1423);
                  v124[2136] = v125[2136];
                  v1428 = *((_QWORD *)v125 + 268);
                  v124[2152] = v125[2152];
                  *((_QWORD *)v124 + 268) = v1428;
                }
                v1429 = (__int128 *)(v124 + 2160);
                v1430 = (__int128 *)(v125 + 2160);
                v1431 = *((_QWORD *)v124 + 270);
                v1432 = *((_QWORD *)v125 + 270);
                if (v1431 == 1)
                {
                  if (v1432 == 1)
                  {
                    v1433 = *v1430;
                    *(_OWORD *)(v124 + 2169) = *(_OWORD *)(v125 + 2169);
                    *v1429 = v1433;
                  }
                  else
                  {
                    *((_QWORD *)v124 + 270) = v1432;
                    v124[2168] = v125[2168];
                    v1435 = *((_QWORD *)v125 + 272);
                    v124[2184] = v125[2184];
                    *((_QWORD *)v124 + 272) = v1435;
                    swift_bridgeObjectRetain(v1432);
                  }
                }
                else if (v1432 == 1)
                {
                  sub_100083F00((_QWORD *)v124 + 270);
                  v1434 = *(_OWORD *)(v125 + 2169);
                  *v1429 = *v1430;
                  *(_OWORD *)(v124 + 2169) = v1434;
                }
                else
                {
                  *((_QWORD *)v124 + 270) = v1432;
                  swift_bridgeObjectRetain(v1432);
                  swift_bridgeObjectRelease(v1431);
                  v124[2168] = v125[2168];
                  v1436 = *((_QWORD *)v125 + 272);
                  v124[2184] = v125[2184];
                  *((_QWORD *)v124 + 272) = v1436;
                }
                v1437 = (__int128 *)(v124 + 2192);
                v1438 = (__int128 *)(v125 + 2192);
                v1439 = *((_QWORD *)v124 + 274);
                v1440 = *((_QWORD *)v125 + 274);
                if (v1439 == 1)
                {
                  if (v1440 == 1)
                  {
                    v1441 = *v1438;
                    *(_OWORD *)(v124 + 2201) = *(_OWORD *)(v125 + 2201);
                    *v1437 = v1441;
                  }
                  else
                  {
                    *((_QWORD *)v124 + 274) = v1440;
                    v124[2200] = v125[2200];
                    v1443 = *((_QWORD *)v125 + 276);
                    v124[2216] = v125[2216];
                    *((_QWORD *)v124 + 276) = v1443;
                    swift_bridgeObjectRetain(v1440);
                  }
                }
                else if (v1440 == 1)
                {
                  sub_100083F00((_QWORD *)v124 + 274);
                  v1442 = *(_OWORD *)(v125 + 2201);
                  *v1437 = *v1438;
                  *(_OWORD *)(v124 + 2201) = v1442;
                }
                else
                {
                  *((_QWORD *)v124 + 274) = v1440;
                  swift_bridgeObjectRetain(v1440);
                  swift_bridgeObjectRelease(v1439);
                  v124[2200] = v125[2200];
                  v1444 = *((_QWORD *)v125 + 276);
                  v124[2216] = v125[2216];
                  *((_QWORD *)v124 + 276) = v1444;
                }
                v1445 = (__int128 *)(v124 + 2224);
                v1446 = (__int128 *)(v125 + 2224);
                v1447 = *((_QWORD *)v124 + 278);
                v1448 = *((_QWORD *)v125 + 278);
                if (v1447 == 1)
                {
                  if (v1448 == 1)
                  {
                    v1449 = *v1446;
                    *(_OWORD *)(v124 + 2233) = *(_OWORD *)(v125 + 2233);
                    *v1445 = v1449;
                  }
                  else
                  {
                    *((_QWORD *)v124 + 278) = v1448;
                    v124[2232] = v125[2232];
                    v1451 = *((_QWORD *)v125 + 280);
                    v124[2248] = v125[2248];
                    *((_QWORD *)v124 + 280) = v1451;
                    swift_bridgeObjectRetain(v1448);
                  }
                }
                else if (v1448 == 1)
                {
                  sub_100083F00((_QWORD *)v124 + 278);
                  v1450 = *(_OWORD *)(v125 + 2233);
                  *v1445 = *v1446;
                  *(_OWORD *)(v124 + 2233) = v1450;
                }
                else
                {
                  *((_QWORD *)v124 + 278) = v1448;
                  swift_bridgeObjectRetain(v1448);
                  swift_bridgeObjectRelease(v1447);
                  v124[2232] = v125[2232];
                  v1452 = *((_QWORD *)v125 + 280);
                  v124[2248] = v125[2248];
                  *((_QWORD *)v124 + 280) = v1452;
                }
                v1453 = (__int128 *)(v124 + 2256);
                v1454 = (__int128 *)(v125 + 2256);
                v1455 = *((_QWORD *)v124 + 282);
                v1456 = *((_QWORD *)v125 + 282);
                if (v1455 == 1)
                {
                  if (v1456 == 1)
                  {
                    v1457 = *v1454;
                    *(_OWORD *)(v124 + 2265) = *(_OWORD *)(v125 + 2265);
                    *v1453 = v1457;
                  }
                  else
                  {
                    *((_QWORD *)v124 + 282) = v1456;
                    v124[2264] = v125[2264];
                    v1459 = *((_QWORD *)v125 + 284);
                    v124[2280] = v125[2280];
                    *((_QWORD *)v124 + 284) = v1459;
                    swift_bridgeObjectRetain(v1456);
                  }
                }
                else if (v1456 == 1)
                {
                  sub_100083F00((_QWORD *)v124 + 282);
                  v1458 = *(_OWORD *)(v125 + 2265);
                  *v1453 = *v1454;
                  *(_OWORD *)(v124 + 2265) = v1458;
                }
                else
                {
                  *((_QWORD *)v124 + 282) = v1456;
                  swift_bridgeObjectRetain(v1456);
                  swift_bridgeObjectRelease(v1455);
                  v124[2264] = v125[2264];
                  v1460 = *((_QWORD *)v125 + 284);
                  v124[2280] = v125[2280];
                  *((_QWORD *)v124 + 284) = v1460;
                }
                v1461 = (__int128 *)(v124 + 2288);
                v1462 = (__int128 *)(v125 + 2288);
                v1463 = *((_QWORD *)v124 + 286);
                v1464 = *((_QWORD *)v125 + 286);
                if (v1463 == 1)
                {
                  if (v1464 == 1)
                  {
                    v1465 = *v1462;
                    *(_OWORD *)(v124 + 2297) = *(_OWORD *)(v125 + 2297);
                    *v1461 = v1465;
                  }
                  else
                  {
                    *((_QWORD *)v124 + 286) = v1464;
                    v124[2296] = v125[2296];
                    v1467 = *((_QWORD *)v125 + 288);
                    v124[2312] = v125[2312];
                    *((_QWORD *)v124 + 288) = v1467;
                    swift_bridgeObjectRetain(v1464);
                  }
                }
                else if (v1464 == 1)
                {
                  sub_100083F00((_QWORD *)v124 + 286);
                  v1466 = *(_OWORD *)(v125 + 2297);
                  *v1461 = *v1462;
                  *(_OWORD *)(v124 + 2297) = v1466;
                }
                else
                {
                  *((_QWORD *)v124 + 286) = v1464;
                  swift_bridgeObjectRetain(v1464);
                  swift_bridgeObjectRelease(v1463);
                  v124[2296] = v125[2296];
                  v1468 = *((_QWORD *)v125 + 288);
                  v124[2312] = v125[2312];
                  *((_QWORD *)v124 + 288) = v1468;
                }
                v1469 = (__int128 *)(v124 + 2320);
                v1470 = (__int128 *)(v125 + 2320);
                v1471 = *((_QWORD *)v124 + 290);
                v1472 = *((_QWORD *)v125 + 290);
                if (v1471 == 1)
                {
                  if (v1472 == 1)
                  {
                    v1473 = *v1470;
                    *(_OWORD *)(v124 + 2329) = *(_OWORD *)(v125 + 2329);
                    *v1469 = v1473;
                  }
                  else
                  {
                    *((_QWORD *)v124 + 290) = v1472;
                    v124[2328] = v125[2328];
                    v1475 = *((_QWORD *)v125 + 292);
                    v124[2344] = v125[2344];
                    *((_QWORD *)v124 + 292) = v1475;
                    swift_bridgeObjectRetain(v1472);
                  }
                }
                else if (v1472 == 1)
                {
                  sub_100083F00((_QWORD *)v124 + 290);
                  v1474 = *(_OWORD *)(v125 + 2329);
                  *v1469 = *v1470;
                  *(_OWORD *)(v124 + 2329) = v1474;
                }
                else
                {
                  *((_QWORD *)v124 + 290) = v1472;
                  swift_bridgeObjectRetain(v1472);
                  swift_bridgeObjectRelease(v1471);
                  v124[2328] = v125[2328];
                  v1476 = *((_QWORD *)v125 + 292);
                  v124[2344] = v125[2344];
                  *((_QWORD *)v124 + 292) = v1476;
                }
                v1477 = (__int128 *)(v124 + 2352);
                v1478 = (__int128 *)(v125 + 2352);
                v1479 = *((_QWORD *)v124 + 294);
                v1480 = *((_QWORD *)v125 + 294);
                if (v1479 == 1)
                {
                  if (v1480 == 1)
                  {
                    v1481 = *v1478;
                    *(_OWORD *)(v124 + 2361) = *(_OWORD *)(v125 + 2361);
                    *v1477 = v1481;
                  }
                  else
                  {
                    *((_QWORD *)v124 + 294) = v1480;
                    v124[2360] = v125[2360];
                    v1483 = *((_QWORD *)v125 + 296);
                    v124[2376] = v125[2376];
                    *((_QWORD *)v124 + 296) = v1483;
                    swift_bridgeObjectRetain(v1480);
                  }
                }
                else if (v1480 == 1)
                {
                  sub_100083F00((_QWORD *)v124 + 294);
                  v1482 = *(_OWORD *)(v125 + 2361);
                  *v1477 = *v1478;
                  *(_OWORD *)(v124 + 2361) = v1482;
                }
                else
                {
                  *((_QWORD *)v124 + 294) = v1480;
                  swift_bridgeObjectRetain(v1480);
                  swift_bridgeObjectRelease(v1479);
                  v124[2360] = v125[2360];
                  v1484 = *((_QWORD *)v125 + 296);
                  v124[2376] = v125[2376];
                  *((_QWORD *)v124 + 296) = v1484;
                }
                v1485 = (__int128 *)(v124 + 2384);
                v1486 = (__int128 *)(v125 + 2384);
                v1487 = *((_QWORD *)v124 + 298);
                v1488 = *((_QWORD *)v125 + 298);
                if (v1487 == 1)
                {
                  if (v1488 == 1)
                  {
                    v1489 = *v1486;
                    *(_OWORD *)(v124 + 2393) = *(_OWORD *)(v125 + 2393);
                    *v1485 = v1489;
                  }
                  else
                  {
                    *((_QWORD *)v124 + 298) = v1488;
                    v124[2392] = v125[2392];
                    v1491 = *((_QWORD *)v125 + 300);
                    v124[2408] = v125[2408];
                    *((_QWORD *)v124 + 300) = v1491;
                    swift_bridgeObjectRetain(v1488);
                  }
                }
                else if (v1488 == 1)
                {
                  sub_100083F00((_QWORD *)v124 + 298);
                  v1490 = *(_OWORD *)(v125 + 2393);
                  *v1485 = *v1486;
                  *(_OWORD *)(v124 + 2393) = v1490;
                }
                else
                {
                  *((_QWORD *)v124 + 298) = v1488;
                  swift_bridgeObjectRetain(v1488);
                  swift_bridgeObjectRelease(v1487);
                  v124[2392] = v125[2392];
                  v1492 = *((_QWORD *)v125 + 300);
                  v124[2408] = v125[2408];
                  *((_QWORD *)v124 + 300) = v1492;
                }
                v1493 = (__int128 *)(v124 + 2416);
                v1494 = (__int128 *)(v125 + 2416);
                v1495 = *((_QWORD *)v124 + 302);
                v1496 = *((_QWORD *)v125 + 302);
                if (v1495 == 1)
                {
                  if (v1496 == 1)
                  {
                    v1497 = *v1494;
                    *(_OWORD *)(v124 + 2425) = *(_OWORD *)(v125 + 2425);
                    *v1493 = v1497;
                  }
                  else
                  {
                    *((_QWORD *)v124 + 302) = v1496;
                    v124[2424] = v125[2424];
                    v1499 = *((_QWORD *)v125 + 304);
                    v124[2440] = v125[2440];
                    *((_QWORD *)v124 + 304) = v1499;
                    swift_bridgeObjectRetain(v1496);
                  }
                }
                else if (v1496 == 1)
                {
                  sub_100083F00((_QWORD *)v124 + 302);
                  v1498 = *(_OWORD *)(v125 + 2425);
                  *v1493 = *v1494;
                  *(_OWORD *)(v124 + 2425) = v1498;
                }
                else
                {
                  *((_QWORD *)v124 + 302) = v1496;
                  swift_bridgeObjectRetain(v1496);
                  swift_bridgeObjectRelease(v1495);
                  v124[2424] = v125[2424];
                  v1500 = *((_QWORD *)v125 + 304);
                  v124[2440] = v125[2440];
                  *((_QWORD *)v124 + 304) = v1500;
                }
                v1501 = *((_OWORD *)v125 + 153);
                v124[2464] = v125[2464];
                *((_OWORD *)v124 + 153) = v1501;
                v1502 = *(_OWORD *)(v125 + 2472);
                v124[2488] = v125[2488];
                *(_OWORD *)(v124 + 2472) = v1502;
                v124[2489] = v125[2489];
                v124[2490] = v125[2490];
                v124[2491] = v125[2491];
                v124[2492] = v125[2492];
                v124[2493] = v125[2493];
                v124[2494] = v125[2494];
                v124[2495] = v125[2495];
                v1503 = *((_QWORD *)v124 + 312);
                v1504 = *((_QWORD *)v125 + 312);
                *((_QWORD *)v124 + 312) = v1504;
                swift_bridgeObjectRetain(v1504);
                swift_bridgeObjectRelease(v1503);
                v1505 = *((_QWORD *)v124 + 313);
                v1506 = *((_QWORD *)v125 + 313);
                *((_QWORD *)v124 + 313) = v1506;
                swift_bridgeObjectRetain(v1506);
                swift_bridgeObjectRelease(v1505);
LABEL_1287:
                v1507 = v124 + 2512;
                v1508 = (uint64_t *)(v125 + 2512);
                v1509 = *((_QWORD *)v125 + 416);
                if (*((_QWORD *)v124 + 416) == 1)
                {
                  if (v1509 != 1)
                  {
                    v1510 = *v1508;
                    if (*v1508 == 1)
                    {
                      v1511 = *(_OWORD *)v1508;
                      *(_OWORD *)(v124 + 2521) = *(_OWORD *)(v125 + 2521);
                      *v1507 = v1511;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 314) = v1510;
                      v124[2520] = v125[2520];
                      v1515 = *((_QWORD *)v125 + 316);
                      v124[2536] = v125[2536];
                      *((_QWORD *)v124 + 316) = v1515;
                      swift_bridgeObjectRetain(v1510);
                    }
                    v1516 = *((_QWORD *)v125 + 318);
                    if (v1516 == 1)
                    {
                      v1517 = *((_OWORD *)v125 + 159);
                      *(_OWORD *)(v124 + 2553) = *(_OWORD *)(v125 + 2553);
                      *((_OWORD *)v124 + 159) = v1517;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 318) = v1516;
                      v124[2552] = v125[2552];
                      v1519 = *((_QWORD *)v125 + 320);
                      v124[2568] = v125[2568];
                      *((_QWORD *)v124 + 320) = v1519;
                      swift_bridgeObjectRetain(v1516);
                    }
                    v1520 = *((_QWORD *)v125 + 322);
                    if (v1520 == 1)
                    {
                      v1521 = *((_OWORD *)v125 + 161);
                      *(_OWORD *)(v124 + 2585) = *(_OWORD *)(v125 + 2585);
                      *((_OWORD *)v124 + 161) = v1521;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 322) = v1520;
                      v124[2584] = v125[2584];
                      v1522 = *((_QWORD *)v125 + 324);
                      v124[2600] = v125[2600];
                      *((_QWORD *)v124 + 324) = v1522;
                      swift_bridgeObjectRetain(v1520);
                    }
                    v1523 = *((_QWORD *)v125 + 326);
                    if (v1523 == 1)
                    {
                      v1524 = *((_OWORD *)v125 + 163);
                      *(_OWORD *)(v124 + 2617) = *(_OWORD *)(v125 + 2617);
                      *((_OWORD *)v124 + 163) = v1524;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 326) = v1523;
                      v124[2616] = v125[2616];
                      v1525 = *((_QWORD *)v125 + 328);
                      v124[2632] = v125[2632];
                      *((_QWORD *)v124 + 328) = v1525;
                      swift_bridgeObjectRetain(v1523);
                    }
                    v1526 = *((_QWORD *)v125 + 330);
                    if (v1526 == 1)
                    {
                      v1527 = *((_OWORD *)v125 + 165);
                      *(_OWORD *)(v124 + 2649) = *(_OWORD *)(v125 + 2649);
                      *((_OWORD *)v124 + 165) = v1527;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 330) = v1526;
                      v124[2648] = v125[2648];
                      v1528 = *((_QWORD *)v125 + 332);
                      v124[2664] = v125[2664];
                      *((_QWORD *)v124 + 332) = v1528;
                      swift_bridgeObjectRetain(v1526);
                    }
                    v1529 = *((_QWORD *)v125 + 334);
                    if (v1529 == 1)
                    {
                      v1530 = *((_OWORD *)v125 + 167);
                      *(_OWORD *)(v124 + 2681) = *(_OWORD *)(v125 + 2681);
                      *((_OWORD *)v124 + 167) = v1530;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 334) = v1529;
                      v124[2680] = v125[2680];
                      v1531 = *((_QWORD *)v125 + 336);
                      v124[2696] = v125[2696];
                      *((_QWORD *)v124 + 336) = v1531;
                      swift_bridgeObjectRetain(v1529);
                    }
                    v1532 = *((_QWORD *)v125 + 338);
                    if (v1532 == 1)
                    {
                      v1533 = *((_OWORD *)v125 + 169);
                      *(_OWORD *)(v124 + 2713) = *(_OWORD *)(v125 + 2713);
                      *((_OWORD *)v124 + 169) = v1533;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 338) = v1532;
                      v124[2712] = v125[2712];
                      v1534 = *((_QWORD *)v125 + 340);
                      v124[2728] = v125[2728];
                      *((_QWORD *)v124 + 340) = v1534;
                      swift_bridgeObjectRetain(v1532);
                    }
                    v1535 = *((_QWORD *)v125 + 342);
                    if (v1535 == 1)
                    {
                      v1536 = *((_OWORD *)v125 + 171);
                      *(_OWORD *)(v124 + 2745) = *(_OWORD *)(v125 + 2745);
                      *((_OWORD *)v124 + 171) = v1536;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 342) = v1535;
                      v124[2744] = v125[2744];
                      v1537 = *((_QWORD *)v125 + 344);
                      v124[2760] = v125[2760];
                      *((_QWORD *)v124 + 344) = v1537;
                      swift_bridgeObjectRetain(v1535);
                    }
                    v1538 = *((_QWORD *)v125 + 346);
                    if (v1538 == 1)
                    {
                      v1539 = *((_OWORD *)v125 + 173);
                      *(_OWORD *)(v124 + 2777) = *(_OWORD *)(v125 + 2777);
                      *((_OWORD *)v124 + 173) = v1539;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 346) = v1538;
                      v124[2776] = v125[2776];
                      v1540 = *((_QWORD *)v125 + 348);
                      v124[2792] = v125[2792];
                      *((_QWORD *)v124 + 348) = v1540;
                      swift_bridgeObjectRetain(v1538);
                    }
                    v1541 = *((_QWORD *)v125 + 350);
                    if (v1541 == 1)
                    {
                      v1542 = *((_OWORD *)v125 + 175);
                      *(_OWORD *)(v124 + 2809) = *(_OWORD *)(v125 + 2809);
                      *((_OWORD *)v124 + 175) = v1542;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 350) = v1541;
                      v124[2808] = v125[2808];
                      v1543 = *((_QWORD *)v125 + 352);
                      v124[2824] = v125[2824];
                      *((_QWORD *)v124 + 352) = v1543;
                      swift_bridgeObjectRetain(v1541);
                    }
                    v1544 = *((_QWORD *)v125 + 354);
                    if (v1544 == 1)
                    {
                      v1545 = *((_OWORD *)v125 + 177);
                      *(_OWORD *)(v124 + 2841) = *(_OWORD *)(v125 + 2841);
                      *((_OWORD *)v124 + 177) = v1545;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 354) = v1544;
                      v124[2840] = v125[2840];
                      v1546 = *((_QWORD *)v125 + 356);
                      v124[2856] = v125[2856];
                      *((_QWORD *)v124 + 356) = v1546;
                      swift_bridgeObjectRetain(v1544);
                    }
                    v1547 = *((_QWORD *)v125 + 358);
                    if (v1547 == 1)
                    {
                      v1548 = *((_OWORD *)v125 + 179);
                      *(_OWORD *)(v124 + 2873) = *(_OWORD *)(v125 + 2873);
                      *((_OWORD *)v124 + 179) = v1548;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 358) = v1547;
                      v124[2872] = v125[2872];
                      v1549 = *((_QWORD *)v125 + 360);
                      v124[2888] = v125[2888];
                      *((_QWORD *)v124 + 360) = v1549;
                      swift_bridgeObjectRetain(v1547);
                    }
                    v1550 = *((_QWORD *)v125 + 362);
                    if (v1550 == 1)
                    {
                      v1551 = *((_OWORD *)v125 + 181);
                      *(_OWORD *)(v124 + 2905) = *(_OWORD *)(v125 + 2905);
                      *((_OWORD *)v124 + 181) = v1551;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 362) = v1550;
                      v124[2904] = v125[2904];
                      v1552 = *((_QWORD *)v125 + 364);
                      v124[2920] = v125[2920];
                      *((_QWORD *)v124 + 364) = v1552;
                      swift_bridgeObjectRetain(v1550);
                    }
                    v1553 = *((_QWORD *)v125 + 366);
                    if (v1553 == 1)
                    {
                      v1554 = *((_OWORD *)v125 + 183);
                      *(_OWORD *)(v124 + 2937) = *(_OWORD *)(v125 + 2937);
                      *((_OWORD *)v124 + 183) = v1554;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 366) = v1553;
                      v124[2936] = v125[2936];
                      v1555 = *((_QWORD *)v125 + 368);
                      v124[2952] = v125[2952];
                      *((_QWORD *)v124 + 368) = v1555;
                      swift_bridgeObjectRetain(v1553);
                    }
                    v1556 = *((_QWORD *)v125 + 370);
                    if (v1556 == 1)
                    {
                      v1557 = *((_OWORD *)v125 + 185);
                      *(_OWORD *)(v124 + 2969) = *(_OWORD *)(v125 + 2969);
                      *((_OWORD *)v124 + 185) = v1557;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 370) = v1556;
                      v124[2968] = v125[2968];
                      v1558 = *((_QWORD *)v125 + 372);
                      v124[2984] = v125[2984];
                      *((_QWORD *)v124 + 372) = v1558;
                      swift_bridgeObjectRetain(v1556);
                    }
                    v1559 = *((_QWORD *)v125 + 374);
                    if (v1559 == 1)
                    {
                      v1560 = *((_OWORD *)v125 + 187);
                      *(_OWORD *)(v124 + 3001) = *(_OWORD *)(v125 + 3001);
                      *((_OWORD *)v124 + 187) = v1560;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 374) = v1559;
                      v124[3000] = v125[3000];
                      v1561 = *((_QWORD *)v125 + 376);
                      v124[3016] = v125[3016];
                      *((_QWORD *)v124 + 376) = v1561;
                      swift_bridgeObjectRetain(v1559);
                    }
                    v1562 = *((_QWORD *)v125 + 378);
                    if (v1562 == 1)
                    {
                      v1563 = *((_OWORD *)v125 + 189);
                      *(_OWORD *)(v124 + 3033) = *(_OWORD *)(v125 + 3033);
                      *((_OWORD *)v124 + 189) = v1563;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 378) = v1562;
                      v124[3032] = v125[3032];
                      v1564 = *((_QWORD *)v125 + 380);
                      v124[3048] = v125[3048];
                      *((_QWORD *)v124 + 380) = v1564;
                      swift_bridgeObjectRetain(v1562);
                    }
                    v1565 = *((_QWORD *)v125 + 382);
                    if (v1565 == 1)
                    {
                      v1566 = *((_OWORD *)v125 + 191);
                      *(_OWORD *)(v124 + 3065) = *(_OWORD *)(v125 + 3065);
                      *((_OWORD *)v124 + 191) = v1566;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 382) = v1565;
                      v124[3064] = v125[3064];
                      v1567 = *((_QWORD *)v125 + 384);
                      v124[3080] = v125[3080];
                      *((_QWORD *)v124 + 384) = v1567;
                      swift_bridgeObjectRetain(v1565);
                    }
                    v1568 = *((_QWORD *)v125 + 386);
                    if (v1568 == 1)
                    {
                      v1569 = *((_OWORD *)v125 + 193);
                      *(_OWORD *)(v124 + 3097) = *(_OWORD *)(v125 + 3097);
                      *((_OWORD *)v124 + 193) = v1569;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 386) = v1568;
                      v124[3096] = v125[3096];
                      v1570 = *((_QWORD *)v125 + 388);
                      v124[3112] = v125[3112];
                      *((_QWORD *)v124 + 388) = v1570;
                      swift_bridgeObjectRetain(v1568);
                    }
                    v1571 = *((_QWORD *)v125 + 390);
                    if (v1571 == 1)
                    {
                      v1572 = *((_OWORD *)v125 + 195);
                      *(_OWORD *)(v124 + 3129) = *(_OWORD *)(v125 + 3129);
                      *((_OWORD *)v124 + 195) = v1572;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 390) = v1571;
                      v124[3128] = v125[3128];
                      v1573 = *((_QWORD *)v125 + 392);
                      v124[3144] = v125[3144];
                      *((_QWORD *)v124 + 392) = v1573;
                      swift_bridgeObjectRetain(v1571);
                    }
                    v1574 = *((_QWORD *)v125 + 394);
                    if (v1574 == 1)
                    {
                      v1575 = *((_OWORD *)v125 + 197);
                      *(_OWORD *)(v124 + 3161) = *(_OWORD *)(v125 + 3161);
                      *((_OWORD *)v124 + 197) = v1575;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 394) = v1574;
                      v124[3160] = v125[3160];
                      v1576 = *((_QWORD *)v125 + 396);
                      v124[3176] = v125[3176];
                      *((_QWORD *)v124 + 396) = v1576;
                      swift_bridgeObjectRetain(v1574);
                    }
                    v1577 = *((_QWORD *)v125 + 398);
                    if (v1577 == 1)
                    {
                      v1578 = *((_OWORD *)v125 + 199);
                      *(_OWORD *)(v124 + 3193) = *(_OWORD *)(v125 + 3193);
                      *((_OWORD *)v124 + 199) = v1578;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 398) = v1577;
                      v124[3192] = v125[3192];
                      v1579 = *((_QWORD *)v125 + 400);
                      v124[3208] = v125[3208];
                      *((_QWORD *)v124 + 400) = v1579;
                      swift_bridgeObjectRetain(v1577);
                    }
                    v1580 = *((_QWORD *)v125 + 402);
                    if (v1580 == 1)
                    {
                      v1581 = *((_OWORD *)v125 + 201);
                      *(_OWORD *)(v124 + 3225) = *(_OWORD *)(v125 + 3225);
                      *((_OWORD *)v124 + 201) = v1581;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 402) = v1580;
                      v124[3224] = v125[3224];
                      v1582 = *((_QWORD *)v125 + 404);
                      v124[3240] = v125[3240];
                      *((_QWORD *)v124 + 404) = v1582;
                      swift_bridgeObjectRetain(v1580);
                    }
                    v1583 = *((_QWORD *)v125 + 406);
                    if (v1583 == 1)
                    {
                      v1584 = *((_OWORD *)v125 + 203);
                      *(_OWORD *)(v124 + 3257) = *(_OWORD *)(v125 + 3257);
                      *((_OWORD *)v124 + 203) = v1584;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 406) = v1583;
                      v124[3256] = v125[3256];
                      v1585 = *((_QWORD *)v125 + 408);
                      v124[3272] = v125[3272];
                      *((_QWORD *)v124 + 408) = v1585;
                      swift_bridgeObjectRetain(v1583);
                    }
                    v1586 = *((_OWORD *)v125 + 205);
                    v124[3296] = v125[3296];
                    *((_OWORD *)v124 + 205) = v1586;
                    v1587 = *(_OWORD *)(v125 + 3304);
                    v124[3320] = v125[3320];
                    *(_OWORD *)(v124 + 3304) = v1587;
                    v124[3321] = v125[3321];
                    v124[3322] = v125[3322];
                    v124[3323] = v125[3323];
                    v124[3324] = v125[3324];
                    v124[3325] = v125[3325];
                    v124[3326] = v125[3326];
                    v124[3327] = v125[3327];
                    v1588 = *((_QWORD *)v125 + 416);
                    *((_QWORD *)v124 + 416) = v1588;
                    v1589 = *((_QWORD *)v125 + 417);
                    *((_QWORD *)v124 + 417) = v1589;
                    swift_bridgeObjectRetain(v1588);
                    swift_bridgeObjectRetain(v1589);
                    goto LABEL_1534;
                  }
                }
                else
                {
                  if (v1509 != 1)
                  {
                    v1512 = *(_QWORD *)v1507;
                    v1513 = *v1508;
                    if (*(_QWORD *)v1507 == 1)
                    {
                      if (v1513 == 1)
                      {
                        v1514 = *(_OWORD *)v1508;
                        *(_OWORD *)(v124 + 2521) = *(_OWORD *)(v125 + 2521);
                        *v1507 = v1514;
                      }
                      else
                      {
                        *((_QWORD *)v124 + 314) = v1513;
                        v124[2520] = v125[2520];
                        v1590 = *((_QWORD *)v125 + 316);
                        v124[2536] = v125[2536];
                        *((_QWORD *)v124 + 316) = v1590;
                        swift_bridgeObjectRetain(v1513);
                      }
                    }
                    else if (v1513 == 1)
                    {
                      sub_100083F00((_QWORD *)v124 + 314);
                      v1518 = *(_OWORD *)(v125 + 2521);
                      *v1507 = *(_OWORD *)v1508;
                      *(_OWORD *)(v124 + 2521) = v1518;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 314) = v1513;
                      swift_bridgeObjectRetain(v1513);
                      swift_bridgeObjectRelease(v1512);
                      v124[2520] = v125[2520];
                      v1591 = *((_QWORD *)v125 + 316);
                      v124[2536] = v125[2536];
                      *((_QWORD *)v124 + 316) = v1591;
                    }
                    v1592 = (__int128 *)(v124 + 2544);
                    v1593 = (__int128 *)(v125 + 2544);
                    v1594 = *((_QWORD *)v124 + 318);
                    v1595 = *((_QWORD *)v125 + 318);
                    if (v1594 == 1)
                    {
                      if (v1595 == 1)
                      {
                        v1596 = *v1593;
                        *(_OWORD *)(v124 + 2553) = *(_OWORD *)(v125 + 2553);
                        *v1592 = v1596;
                      }
                      else
                      {
                        *((_QWORD *)v124 + 318) = v1595;
                        v124[2552] = v125[2552];
                        v1598 = *((_QWORD *)v125 + 320);
                        v124[2568] = v125[2568];
                        *((_QWORD *)v124 + 320) = v1598;
                        swift_bridgeObjectRetain(v1595);
                      }
                    }
                    else if (v1595 == 1)
                    {
                      sub_100083F00((_QWORD *)v124 + 318);
                      v1597 = *(_OWORD *)(v125 + 2553);
                      *v1592 = *v1593;
                      *(_OWORD *)(v124 + 2553) = v1597;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 318) = v1595;
                      swift_bridgeObjectRetain(v1595);
                      swift_bridgeObjectRelease(v1594);
                      v124[2552] = v125[2552];
                      v1599 = *((_QWORD *)v125 + 320);
                      v124[2568] = v125[2568];
                      *((_QWORD *)v124 + 320) = v1599;
                    }
                    v1600 = (__int128 *)(v124 + 2576);
                    v1601 = (__int128 *)(v125 + 2576);
                    v1602 = *((_QWORD *)v124 + 322);
                    v1603 = *((_QWORD *)v125 + 322);
                    if (v1602 == 1)
                    {
                      if (v1603 == 1)
                      {
                        v1604 = *v1601;
                        *(_OWORD *)(v124 + 2585) = *(_OWORD *)(v125 + 2585);
                        *v1600 = v1604;
                      }
                      else
                      {
                        *((_QWORD *)v124 + 322) = v1603;
                        v124[2584] = v125[2584];
                        v1606 = *((_QWORD *)v125 + 324);
                        v124[2600] = v125[2600];
                        *((_QWORD *)v124 + 324) = v1606;
                        swift_bridgeObjectRetain(v1603);
                      }
                    }
                    else if (v1603 == 1)
                    {
                      sub_100083F00((_QWORD *)v124 + 322);
                      v1605 = *(_OWORD *)(v125 + 2585);
                      *v1600 = *v1601;
                      *(_OWORD *)(v124 + 2585) = v1605;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 322) = v1603;
                      swift_bridgeObjectRetain(v1603);
                      swift_bridgeObjectRelease(v1602);
                      v124[2584] = v125[2584];
                      v1607 = *((_QWORD *)v125 + 324);
                      v124[2600] = v125[2600];
                      *((_QWORD *)v124 + 324) = v1607;
                    }
                    v1608 = (__int128 *)(v124 + 2608);
                    v1609 = (__int128 *)(v125 + 2608);
                    v1610 = *((_QWORD *)v124 + 326);
                    v1611 = *((_QWORD *)v125 + 326);
                    if (v1610 == 1)
                    {
                      if (v1611 == 1)
                      {
                        v1612 = *v1609;
                        *(_OWORD *)(v124 + 2617) = *(_OWORD *)(v125 + 2617);
                        *v1608 = v1612;
                      }
                      else
                      {
                        *((_QWORD *)v124 + 326) = v1611;
                        v124[2616] = v125[2616];
                        v1614 = *((_QWORD *)v125 + 328);
                        v124[2632] = v125[2632];
                        *((_QWORD *)v124 + 328) = v1614;
                        swift_bridgeObjectRetain(v1611);
                      }
                    }
                    else if (v1611 == 1)
                    {
                      sub_100083F00((_QWORD *)v124 + 326);
                      v1613 = *(_OWORD *)(v125 + 2617);
                      *v1608 = *v1609;
                      *(_OWORD *)(v124 + 2617) = v1613;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 326) = v1611;
                      swift_bridgeObjectRetain(v1611);
                      swift_bridgeObjectRelease(v1610);
                      v124[2616] = v125[2616];
                      v1615 = *((_QWORD *)v125 + 328);
                      v124[2632] = v125[2632];
                      *((_QWORD *)v124 + 328) = v1615;
                    }
                    v1616 = (__int128 *)(v124 + 2640);
                    v1617 = (__int128 *)(v125 + 2640);
                    v1618 = *((_QWORD *)v124 + 330);
                    v1619 = *((_QWORD *)v125 + 330);
                    if (v1618 == 1)
                    {
                      if (v1619 == 1)
                      {
                        v1620 = *v1617;
                        *(_OWORD *)(v124 + 2649) = *(_OWORD *)(v125 + 2649);
                        *v1616 = v1620;
                      }
                      else
                      {
                        *((_QWORD *)v124 + 330) = v1619;
                        v124[2648] = v125[2648];
                        v1622 = *((_QWORD *)v125 + 332);
                        v124[2664] = v125[2664];
                        *((_QWORD *)v124 + 332) = v1622;
                        swift_bridgeObjectRetain(v1619);
                      }
                    }
                    else if (v1619 == 1)
                    {
                      sub_100083F00((_QWORD *)v124 + 330);
                      v1621 = *(_OWORD *)(v125 + 2649);
                      *v1616 = *v1617;
                      *(_OWORD *)(v124 + 2649) = v1621;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 330) = v1619;
                      swift_bridgeObjectRetain(v1619);
                      swift_bridgeObjectRelease(v1618);
                      v124[2648] = v125[2648];
                      v1623 = *((_QWORD *)v125 + 332);
                      v124[2664] = v125[2664];
                      *((_QWORD *)v124 + 332) = v1623;
                    }
                    v1624 = (__int128 *)(v124 + 2672);
                    v1625 = (__int128 *)(v125 + 2672);
                    v1626 = *((_QWORD *)v124 + 334);
                    v1627 = *((_QWORD *)v125 + 334);
                    if (v1626 == 1)
                    {
                      if (v1627 == 1)
                      {
                        v1628 = *v1625;
                        *(_OWORD *)(v124 + 2681) = *(_OWORD *)(v125 + 2681);
                        *v1624 = v1628;
                      }
                      else
                      {
                        *((_QWORD *)v124 + 334) = v1627;
                        v124[2680] = v125[2680];
                        v1630 = *((_QWORD *)v125 + 336);
                        v124[2696] = v125[2696];
                        *((_QWORD *)v124 + 336) = v1630;
                        swift_bridgeObjectRetain(v1627);
                      }
                    }
                    else if (v1627 == 1)
                    {
                      sub_100083F00((_QWORD *)v124 + 334);
                      v1629 = *(_OWORD *)(v125 + 2681);
                      *v1624 = *v1625;
                      *(_OWORD *)(v124 + 2681) = v1629;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 334) = v1627;
                      swift_bridgeObjectRetain(v1627);
                      swift_bridgeObjectRelease(v1626);
                      v124[2680] = v125[2680];
                      v1631 = *((_QWORD *)v125 + 336);
                      v124[2696] = v125[2696];
                      *((_QWORD *)v124 + 336) = v1631;
                    }
                    v1632 = (__int128 *)(v124 + 2704);
                    v1633 = (__int128 *)(v125 + 2704);
                    v1634 = *((_QWORD *)v124 + 338);
                    v1635 = *((_QWORD *)v125 + 338);
                    if (v1634 == 1)
                    {
                      if (v1635 == 1)
                      {
                        v1636 = *v1633;
                        *(_OWORD *)(v124 + 2713) = *(_OWORD *)(v125 + 2713);
                        *v1632 = v1636;
                      }
                      else
                      {
                        *((_QWORD *)v124 + 338) = v1635;
                        v124[2712] = v125[2712];
                        v1638 = *((_QWORD *)v125 + 340);
                        v124[2728] = v125[2728];
                        *((_QWORD *)v124 + 340) = v1638;
                        swift_bridgeObjectRetain(v1635);
                      }
                    }
                    else if (v1635 == 1)
                    {
                      sub_100083F00((_QWORD *)v124 + 338);
                      v1637 = *(_OWORD *)(v125 + 2713);
                      *v1632 = *v1633;
                      *(_OWORD *)(v124 + 2713) = v1637;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 338) = v1635;
                      swift_bridgeObjectRetain(v1635);
                      swift_bridgeObjectRelease(v1634);
                      v124[2712] = v125[2712];
                      v1639 = *((_QWORD *)v125 + 340);
                      v124[2728] = v125[2728];
                      *((_QWORD *)v124 + 340) = v1639;
                    }
                    v1640 = (__int128 *)(v124 + 2736);
                    v1641 = (__int128 *)(v125 + 2736);
                    v1642 = *((_QWORD *)v124 + 342);
                    v1643 = *((_QWORD *)v125 + 342);
                    if (v1642 == 1)
                    {
                      if (v1643 == 1)
                      {
                        v1644 = *v1641;
                        *(_OWORD *)(v124 + 2745) = *(_OWORD *)(v125 + 2745);
                        *v1640 = v1644;
                      }
                      else
                      {
                        *((_QWORD *)v124 + 342) = v1643;
                        v124[2744] = v125[2744];
                        v1646 = *((_QWORD *)v125 + 344);
                        v124[2760] = v125[2760];
                        *((_QWORD *)v124 + 344) = v1646;
                        swift_bridgeObjectRetain(v1643);
                      }
                    }
                    else if (v1643 == 1)
                    {
                      sub_100083F00((_QWORD *)v124 + 342);
                      v1645 = *(_OWORD *)(v125 + 2745);
                      *v1640 = *v1641;
                      *(_OWORD *)(v124 + 2745) = v1645;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 342) = v1643;
                      swift_bridgeObjectRetain(v1643);
                      swift_bridgeObjectRelease(v1642);
                      v124[2744] = v125[2744];
                      v1647 = *((_QWORD *)v125 + 344);
                      v124[2760] = v125[2760];
                      *((_QWORD *)v124 + 344) = v1647;
                    }
                    v1648 = (__int128 *)(v124 + 2768);
                    v1649 = (__int128 *)(v125 + 2768);
                    v1650 = *((_QWORD *)v124 + 346);
                    v1651 = *((_QWORD *)v125 + 346);
                    if (v1650 == 1)
                    {
                      if (v1651 == 1)
                      {
                        v1652 = *v1649;
                        *(_OWORD *)(v124 + 2777) = *(_OWORD *)(v125 + 2777);
                        *v1648 = v1652;
                      }
                      else
                      {
                        *((_QWORD *)v124 + 346) = v1651;
                        v124[2776] = v125[2776];
                        v1654 = *((_QWORD *)v125 + 348);
                        v124[2792] = v125[2792];
                        *((_QWORD *)v124 + 348) = v1654;
                        swift_bridgeObjectRetain(v1651);
                      }
                    }
                    else if (v1651 == 1)
                    {
                      sub_100083F00((_QWORD *)v124 + 346);
                      v1653 = *(_OWORD *)(v125 + 2777);
                      *v1648 = *v1649;
                      *(_OWORD *)(v124 + 2777) = v1653;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 346) = v1651;
                      swift_bridgeObjectRetain(v1651);
                      swift_bridgeObjectRelease(v1650);
                      v124[2776] = v125[2776];
                      v1655 = *((_QWORD *)v125 + 348);
                      v124[2792] = v125[2792];
                      *((_QWORD *)v124 + 348) = v1655;
                    }
                    v1656 = (__int128 *)(v124 + 2800);
                    v1657 = (__int128 *)(v125 + 2800);
                    v1658 = *((_QWORD *)v124 + 350);
                    v1659 = *((_QWORD *)v125 + 350);
                    if (v1658 == 1)
                    {
                      if (v1659 == 1)
                      {
                        v1660 = *v1657;
                        *(_OWORD *)(v124 + 2809) = *(_OWORD *)(v125 + 2809);
                        *v1656 = v1660;
                      }
                      else
                      {
                        *((_QWORD *)v124 + 350) = v1659;
                        v124[2808] = v125[2808];
                        v1662 = *((_QWORD *)v125 + 352);
                        v124[2824] = v125[2824];
                        *((_QWORD *)v124 + 352) = v1662;
                        swift_bridgeObjectRetain(v1659);
                      }
                    }
                    else if (v1659 == 1)
                    {
                      sub_100083F00((_QWORD *)v124 + 350);
                      v1661 = *(_OWORD *)(v125 + 2809);
                      *v1656 = *v1657;
                      *(_OWORD *)(v124 + 2809) = v1661;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 350) = v1659;
                      swift_bridgeObjectRetain(v1659);
                      swift_bridgeObjectRelease(v1658);
                      v124[2808] = v125[2808];
                      v1663 = *((_QWORD *)v125 + 352);
                      v124[2824] = v125[2824];
                      *((_QWORD *)v124 + 352) = v1663;
                    }
                    v1664 = (__int128 *)(v124 + 2832);
                    v1665 = (__int128 *)(v125 + 2832);
                    v1666 = *((_QWORD *)v124 + 354);
                    v1667 = *((_QWORD *)v125 + 354);
                    if (v1666 == 1)
                    {
                      if (v1667 == 1)
                      {
                        v1668 = *v1665;
                        *(_OWORD *)(v124 + 2841) = *(_OWORD *)(v125 + 2841);
                        *v1664 = v1668;
                      }
                      else
                      {
                        *((_QWORD *)v124 + 354) = v1667;
                        v124[2840] = v125[2840];
                        v1670 = *((_QWORD *)v125 + 356);
                        v124[2856] = v125[2856];
                        *((_QWORD *)v124 + 356) = v1670;
                        swift_bridgeObjectRetain(v1667);
                      }
                    }
                    else if (v1667 == 1)
                    {
                      sub_100083F00((_QWORD *)v124 + 354);
                      v1669 = *(_OWORD *)(v125 + 2841);
                      *v1664 = *v1665;
                      *(_OWORD *)(v124 + 2841) = v1669;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 354) = v1667;
                      swift_bridgeObjectRetain(v1667);
                      swift_bridgeObjectRelease(v1666);
                      v124[2840] = v125[2840];
                      v1671 = *((_QWORD *)v125 + 356);
                      v124[2856] = v125[2856];
                      *((_QWORD *)v124 + 356) = v1671;
                    }
                    v1672 = (__int128 *)(v124 + 2864);
                    v1673 = (__int128 *)(v125 + 2864);
                    v1674 = *((_QWORD *)v124 + 358);
                    v1675 = *((_QWORD *)v125 + 358);
                    if (v1674 == 1)
                    {
                      if (v1675 == 1)
                      {
                        v1676 = *v1673;
                        *(_OWORD *)(v124 + 2873) = *(_OWORD *)(v125 + 2873);
                        *v1672 = v1676;
                      }
                      else
                      {
                        *((_QWORD *)v124 + 358) = v1675;
                        v124[2872] = v125[2872];
                        v1678 = *((_QWORD *)v125 + 360);
                        v124[2888] = v125[2888];
                        *((_QWORD *)v124 + 360) = v1678;
                        swift_bridgeObjectRetain(v1675);
                      }
                    }
                    else if (v1675 == 1)
                    {
                      sub_100083F00((_QWORD *)v124 + 358);
                      v1677 = *(_OWORD *)(v125 + 2873);
                      *v1672 = *v1673;
                      *(_OWORD *)(v124 + 2873) = v1677;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 358) = v1675;
                      swift_bridgeObjectRetain(v1675);
                      swift_bridgeObjectRelease(v1674);
                      v124[2872] = v125[2872];
                      v1679 = *((_QWORD *)v125 + 360);
                      v124[2888] = v125[2888];
                      *((_QWORD *)v124 + 360) = v1679;
                    }
                    v1680 = (__int128 *)(v124 + 2896);
                    v1681 = (__int128 *)(v125 + 2896);
                    v1682 = *((_QWORD *)v124 + 362);
                    v1683 = *((_QWORD *)v125 + 362);
                    if (v1682 == 1)
                    {
                      if (v1683 == 1)
                      {
                        v1684 = *v1681;
                        *(_OWORD *)(v124 + 2905) = *(_OWORD *)(v125 + 2905);
                        *v1680 = v1684;
                      }
                      else
                      {
                        *((_QWORD *)v124 + 362) = v1683;
                        v124[2904] = v125[2904];
                        v1686 = *((_QWORD *)v125 + 364);
                        v124[2920] = v125[2920];
                        *((_QWORD *)v124 + 364) = v1686;
                        swift_bridgeObjectRetain(v1683);
                      }
                    }
                    else if (v1683 == 1)
                    {
                      sub_100083F00((_QWORD *)v124 + 362);
                      v1685 = *(_OWORD *)(v125 + 2905);
                      *v1680 = *v1681;
                      *(_OWORD *)(v124 + 2905) = v1685;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 362) = v1683;
                      swift_bridgeObjectRetain(v1683);
                      swift_bridgeObjectRelease(v1682);
                      v124[2904] = v125[2904];
                      v1687 = *((_QWORD *)v125 + 364);
                      v124[2920] = v125[2920];
                      *((_QWORD *)v124 + 364) = v1687;
                    }
                    v1688 = (__int128 *)(v124 + 2928);
                    v1689 = (__int128 *)(v125 + 2928);
                    v1690 = *((_QWORD *)v124 + 366);
                    v1691 = *((_QWORD *)v125 + 366);
                    if (v1690 == 1)
                    {
                      if (v1691 == 1)
                      {
                        v1692 = *v1689;
                        *(_OWORD *)(v124 + 2937) = *(_OWORD *)(v125 + 2937);
                        *v1688 = v1692;
                      }
                      else
                      {
                        *((_QWORD *)v124 + 366) = v1691;
                        v124[2936] = v125[2936];
                        v1694 = *((_QWORD *)v125 + 368);
                        v124[2952] = v125[2952];
                        *((_QWORD *)v124 + 368) = v1694;
                        swift_bridgeObjectRetain(v1691);
                      }
                    }
                    else if (v1691 == 1)
                    {
                      sub_100083F00((_QWORD *)v124 + 366);
                      v1693 = *(_OWORD *)(v125 + 2937);
                      *v1688 = *v1689;
                      *(_OWORD *)(v124 + 2937) = v1693;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 366) = v1691;
                      swift_bridgeObjectRetain(v1691);
                      swift_bridgeObjectRelease(v1690);
                      v124[2936] = v125[2936];
                      v1695 = *((_QWORD *)v125 + 368);
                      v124[2952] = v125[2952];
                      *((_QWORD *)v124 + 368) = v1695;
                    }
                    v1696 = (__int128 *)(v124 + 2960);
                    v1697 = (__int128 *)(v125 + 2960);
                    v1698 = *((_QWORD *)v124 + 370);
                    v1699 = *((_QWORD *)v125 + 370);
                    if (v1698 == 1)
                    {
                      if (v1699 == 1)
                      {
                        v1700 = *v1697;
                        *(_OWORD *)(v124 + 2969) = *(_OWORD *)(v125 + 2969);
                        *v1696 = v1700;
                      }
                      else
                      {
                        *((_QWORD *)v124 + 370) = v1699;
                        v124[2968] = v125[2968];
                        v1702 = *((_QWORD *)v125 + 372);
                        v124[2984] = v125[2984];
                        *((_QWORD *)v124 + 372) = v1702;
                        swift_bridgeObjectRetain(v1699);
                      }
                    }
                    else if (v1699 == 1)
                    {
                      sub_100083F00((_QWORD *)v124 + 370);
                      v1701 = *(_OWORD *)(v125 + 2969);
                      *v1696 = *v1697;
                      *(_OWORD *)(v124 + 2969) = v1701;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 370) = v1699;
                      swift_bridgeObjectRetain(v1699);
                      swift_bridgeObjectRelease(v1698);
                      v124[2968] = v125[2968];
                      v1703 = *((_QWORD *)v125 + 372);
                      v124[2984] = v125[2984];
                      *((_QWORD *)v124 + 372) = v1703;
                    }
                    v1704 = (__int128 *)(v124 + 2992);
                    v1705 = (__int128 *)(v125 + 2992);
                    v1706 = *((_QWORD *)v124 + 374);
                    v1707 = *((_QWORD *)v125 + 374);
                    if (v1706 == 1)
                    {
                      if (v1707 == 1)
                      {
                        v1708 = *v1705;
                        *(_OWORD *)(v124 + 3001) = *(_OWORD *)(v125 + 3001);
                        *v1704 = v1708;
                      }
                      else
                      {
                        *((_QWORD *)v124 + 374) = v1707;
                        v124[3000] = v125[3000];
                        v1710 = *((_QWORD *)v125 + 376);
                        v124[3016] = v125[3016];
                        *((_QWORD *)v124 + 376) = v1710;
                        swift_bridgeObjectRetain(v1707);
                      }
                    }
                    else if (v1707 == 1)
                    {
                      sub_100083F00((_QWORD *)v124 + 374);
                      v1709 = *(_OWORD *)(v125 + 3001);
                      *v1704 = *v1705;
                      *(_OWORD *)(v124 + 3001) = v1709;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 374) = v1707;
                      swift_bridgeObjectRetain(v1707);
                      swift_bridgeObjectRelease(v1706);
                      v124[3000] = v125[3000];
                      v1711 = *((_QWORD *)v125 + 376);
                      v124[3016] = v125[3016];
                      *((_QWORD *)v124 + 376) = v1711;
                    }
                    v1712 = (__int128 *)(v124 + 3024);
                    v1713 = (__int128 *)(v125 + 3024);
                    v1714 = *((_QWORD *)v124 + 378);
                    v1715 = *((_QWORD *)v125 + 378);
                    if (v1714 == 1)
                    {
                      if (v1715 == 1)
                      {
                        v1716 = *v1713;
                        *(_OWORD *)(v124 + 3033) = *(_OWORD *)(v125 + 3033);
                        *v1712 = v1716;
                      }
                      else
                      {
                        *((_QWORD *)v124 + 378) = v1715;
                        v124[3032] = v125[3032];
                        v1718 = *((_QWORD *)v125 + 380);
                        v124[3048] = v125[3048];
                        *((_QWORD *)v124 + 380) = v1718;
                        swift_bridgeObjectRetain(v1715);
                      }
                    }
                    else if (v1715 == 1)
                    {
                      sub_100083F00((_QWORD *)v124 + 378);
                      v1717 = *(_OWORD *)(v125 + 3033);
                      *v1712 = *v1713;
                      *(_OWORD *)(v124 + 3033) = v1717;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 378) = v1715;
                      swift_bridgeObjectRetain(v1715);
                      swift_bridgeObjectRelease(v1714);
                      v124[3032] = v125[3032];
                      v1719 = *((_QWORD *)v125 + 380);
                      v124[3048] = v125[3048];
                      *((_QWORD *)v124 + 380) = v1719;
                    }
                    v1720 = (__int128 *)(v124 + 3056);
                    v1721 = (__int128 *)(v125 + 3056);
                    v1722 = *((_QWORD *)v124 + 382);
                    v1723 = *((_QWORD *)v125 + 382);
                    if (v1722 == 1)
                    {
                      if (v1723 == 1)
                      {
                        v1724 = *v1721;
                        *(_OWORD *)(v124 + 3065) = *(_OWORD *)(v125 + 3065);
                        *v1720 = v1724;
                      }
                      else
                      {
                        *((_QWORD *)v124 + 382) = v1723;
                        v124[3064] = v125[3064];
                        v1726 = *((_QWORD *)v125 + 384);
                        v124[3080] = v125[3080];
                        *((_QWORD *)v124 + 384) = v1726;
                        swift_bridgeObjectRetain(v1723);
                      }
                    }
                    else if (v1723 == 1)
                    {
                      sub_100083F00((_QWORD *)v124 + 382);
                      v1725 = *(_OWORD *)(v125 + 3065);
                      *v1720 = *v1721;
                      *(_OWORD *)(v124 + 3065) = v1725;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 382) = v1723;
                      swift_bridgeObjectRetain(v1723);
                      swift_bridgeObjectRelease(v1722);
                      v124[3064] = v125[3064];
                      v1727 = *((_QWORD *)v125 + 384);
                      v124[3080] = v125[3080];
                      *((_QWORD *)v124 + 384) = v1727;
                    }
                    v1728 = (__int128 *)(v124 + 3088);
                    v1729 = (__int128 *)(v125 + 3088);
                    v1730 = *((_QWORD *)v124 + 386);
                    v1731 = *((_QWORD *)v125 + 386);
                    if (v1730 == 1)
                    {
                      if (v1731 == 1)
                      {
                        v1732 = *v1729;
                        *(_OWORD *)(v124 + 3097) = *(_OWORD *)(v125 + 3097);
                        *v1728 = v1732;
                      }
                      else
                      {
                        *((_QWORD *)v124 + 386) = v1731;
                        v124[3096] = v125[3096];
                        v1734 = *((_QWORD *)v125 + 388);
                        v124[3112] = v125[3112];
                        *((_QWORD *)v124 + 388) = v1734;
                        swift_bridgeObjectRetain(v1731);
                      }
                    }
                    else if (v1731 == 1)
                    {
                      sub_100083F00((_QWORD *)v124 + 386);
                      v1733 = *(_OWORD *)(v125 + 3097);
                      *v1728 = *v1729;
                      *(_OWORD *)(v124 + 3097) = v1733;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 386) = v1731;
                      swift_bridgeObjectRetain(v1731);
                      swift_bridgeObjectRelease(v1730);
                      v124[3096] = v125[3096];
                      v1735 = *((_QWORD *)v125 + 388);
                      v124[3112] = v125[3112];
                      *((_QWORD *)v124 + 388) = v1735;
                    }
                    v1736 = (__int128 *)(v124 + 3120);
                    v1737 = (__int128 *)(v125 + 3120);
                    v1738 = *((_QWORD *)v124 + 390);
                    v1739 = *((_QWORD *)v125 + 390);
                    if (v1738 == 1)
                    {
                      if (v1739 == 1)
                      {
                        v1740 = *v1737;
                        *(_OWORD *)(v124 + 3129) = *(_OWORD *)(v125 + 3129);
                        *v1736 = v1740;
                      }
                      else
                      {
                        *((_QWORD *)v124 + 390) = v1739;
                        v124[3128] = v125[3128];
                        v1742 = *((_QWORD *)v125 + 392);
                        v124[3144] = v125[3144];
                        *((_QWORD *)v124 + 392) = v1742;
                        swift_bridgeObjectRetain(v1739);
                      }
                    }
                    else if (v1739 == 1)
                    {
                      sub_100083F00((_QWORD *)v124 + 390);
                      v1741 = *(_OWORD *)(v125 + 3129);
                      *v1736 = *v1737;
                      *(_OWORD *)(v124 + 3129) = v1741;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 390) = v1739;
                      swift_bridgeObjectRetain(v1739);
                      swift_bridgeObjectRelease(v1738);
                      v124[3128] = v125[3128];
                      v1743 = *((_QWORD *)v125 + 392);
                      v124[3144] = v125[3144];
                      *((_QWORD *)v124 + 392) = v1743;
                    }
                    v1744 = (__int128 *)(v124 + 3152);
                    v1745 = (__int128 *)(v125 + 3152);
                    v1746 = *((_QWORD *)v124 + 394);
                    v1747 = *((_QWORD *)v125 + 394);
                    if (v1746 == 1)
                    {
                      if (v1747 == 1)
                      {
                        v1748 = *v1745;
                        *(_OWORD *)(v124 + 3161) = *(_OWORD *)(v125 + 3161);
                        *v1744 = v1748;
                      }
                      else
                      {
                        *((_QWORD *)v124 + 394) = v1747;
                        v124[3160] = v125[3160];
                        v1750 = *((_QWORD *)v125 + 396);
                        v124[3176] = v125[3176];
                        *((_QWORD *)v124 + 396) = v1750;
                        swift_bridgeObjectRetain(v1747);
                      }
                    }
                    else if (v1747 == 1)
                    {
                      sub_100083F00((_QWORD *)v124 + 394);
                      v1749 = *(_OWORD *)(v125 + 3161);
                      *v1744 = *v1745;
                      *(_OWORD *)(v124 + 3161) = v1749;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 394) = v1747;
                      swift_bridgeObjectRetain(v1747);
                      swift_bridgeObjectRelease(v1746);
                      v124[3160] = v125[3160];
                      v1751 = *((_QWORD *)v125 + 396);
                      v124[3176] = v125[3176];
                      *((_QWORD *)v124 + 396) = v1751;
                    }
                    v1752 = (__int128 *)(v124 + 3184);
                    v1753 = (__int128 *)(v125 + 3184);
                    v1754 = *((_QWORD *)v124 + 398);
                    v1755 = *((_QWORD *)v125 + 398);
                    if (v1754 == 1)
                    {
                      if (v1755 == 1)
                      {
                        v1756 = *v1753;
                        *(_OWORD *)(v124 + 3193) = *(_OWORD *)(v125 + 3193);
                        *v1752 = v1756;
                      }
                      else
                      {
                        *((_QWORD *)v124 + 398) = v1755;
                        v124[3192] = v125[3192];
                        v1758 = *((_QWORD *)v125 + 400);
                        v124[3208] = v125[3208];
                        *((_QWORD *)v124 + 400) = v1758;
                        swift_bridgeObjectRetain(v1755);
                      }
                    }
                    else if (v1755 == 1)
                    {
                      sub_100083F00((_QWORD *)v124 + 398);
                      v1757 = *(_OWORD *)(v125 + 3193);
                      *v1752 = *v1753;
                      *(_OWORD *)(v124 + 3193) = v1757;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 398) = v1755;
                      swift_bridgeObjectRetain(v1755);
                      swift_bridgeObjectRelease(v1754);
                      v124[3192] = v125[3192];
                      v1759 = *((_QWORD *)v125 + 400);
                      v124[3208] = v125[3208];
                      *((_QWORD *)v124 + 400) = v1759;
                    }
                    v1760 = (__int128 *)(v124 + 3216);
                    v1761 = (__int128 *)(v125 + 3216);
                    v1762 = *((_QWORD *)v124 + 402);
                    v1763 = *((_QWORD *)v125 + 402);
                    if (v1762 == 1)
                    {
                      if (v1763 == 1)
                      {
                        v1764 = *v1761;
                        *(_OWORD *)(v124 + 3225) = *(_OWORD *)(v125 + 3225);
                        *v1760 = v1764;
                      }
                      else
                      {
                        *((_QWORD *)v124 + 402) = v1763;
                        v124[3224] = v125[3224];
                        v1766 = *((_QWORD *)v125 + 404);
                        v124[3240] = v125[3240];
                        *((_QWORD *)v124 + 404) = v1766;
                        swift_bridgeObjectRetain(v1763);
                      }
                    }
                    else if (v1763 == 1)
                    {
                      sub_100083F00((_QWORD *)v124 + 402);
                      v1765 = *(_OWORD *)(v125 + 3225);
                      *v1760 = *v1761;
                      *(_OWORD *)(v124 + 3225) = v1765;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 402) = v1763;
                      swift_bridgeObjectRetain(v1763);
                      swift_bridgeObjectRelease(v1762);
                      v124[3224] = v125[3224];
                      v1767 = *((_QWORD *)v125 + 404);
                      v124[3240] = v125[3240];
                      *((_QWORD *)v124 + 404) = v1767;
                    }
                    v1768 = (__int128 *)(v124 + 3248);
                    v1769 = (__int128 *)(v125 + 3248);
                    v1770 = *((_QWORD *)v124 + 406);
                    v1771 = *((_QWORD *)v125 + 406);
                    if (v1770 == 1)
                    {
                      if (v1771 == 1)
                      {
                        v1772 = *v1769;
                        *(_OWORD *)(v124 + 3257) = *(_OWORD *)(v125 + 3257);
                        *v1768 = v1772;
                      }
                      else
                      {
                        *((_QWORD *)v124 + 406) = v1771;
                        v124[3256] = v125[3256];
                        v1774 = *((_QWORD *)v125 + 408);
                        v124[3272] = v125[3272];
                        *((_QWORD *)v124 + 408) = v1774;
                        swift_bridgeObjectRetain(v1771);
                      }
                    }
                    else if (v1771 == 1)
                    {
                      sub_100083F00((_QWORD *)v124 + 406);
                      v1773 = *(_OWORD *)(v125 + 3257);
                      *v1768 = *v1769;
                      *(_OWORD *)(v124 + 3257) = v1773;
                    }
                    else
                    {
                      *((_QWORD *)v124 + 406) = v1771;
                      swift_bridgeObjectRetain(v1771);
                      swift_bridgeObjectRelease(v1770);
                      v124[3256] = v125[3256];
                      v1775 = *((_QWORD *)v125 + 408);
                      v124[3272] = v125[3272];
                      *((_QWORD *)v124 + 408) = v1775;
                    }
                    v1776 = *((_OWORD *)v125 + 205);
                    v124[3296] = v125[3296];
                    *((_OWORD *)v124 + 205) = v1776;
                    v1777 = *(_OWORD *)(v125 + 3304);
                    v124[3320] = v125[3320];
                    *(_OWORD *)(v124 + 3304) = v1777;
                    v124[3321] = v125[3321];
                    v124[3322] = v125[3322];
                    v124[3323] = v125[3323];
                    v124[3324] = v125[3324];
                    v124[3325] = v125[3325];
                    v124[3326] = v125[3326];
                    v124[3327] = v125[3327];
                    v1778 = *((_QWORD *)v124 + 416);
                    v1779 = *((_QWORD *)v125 + 416);
                    *((_QWORD *)v124 + 416) = v1779;
                    swift_bridgeObjectRetain(v1779);
                    swift_bridgeObjectRelease(v1778);
                    v1780 = *((_QWORD *)v124 + 417);
                    v1781 = *((_QWORD *)v125 + 417);
                    *((_QWORD *)v124 + 417) = v1781;
                    swift_bridgeObjectRetain(v1781);
                    swift_bridgeObjectRelease(v1780);
LABEL_1534:
                    v1782 = v124 + 3344;
                    v1783 = (uint64_t *)(v125 + 3344);
                    v1784 = *((_QWORD *)v125 + 520);
                    if (*((_QWORD *)v124 + 520) == 1)
                    {
                      if (v1784 != 1)
                      {
                        v1785 = *v1783;
                        if (*v1783 == 1)
                        {
                          v1786 = *(_OWORD *)v1783;
                          *(_OWORD *)(v124 + 3353) = *(_OWORD *)(v125 + 3353);
                          *v1782 = v1786;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 418) = v1785;
                          v124[3352] = v125[3352];
                          v1790 = *((_QWORD *)v125 + 420);
                          v124[3368] = v125[3368];
                          *((_QWORD *)v124 + 420) = v1790;
                          swift_bridgeObjectRetain(v1785);
                        }
                        v1791 = *((_QWORD *)v125 + 422);
                        if (v1791 == 1)
                        {
                          v1792 = *((_OWORD *)v125 + 211);
                          *(_OWORD *)(v124 + 3385) = *(_OWORD *)(v125 + 3385);
                          *((_OWORD *)v124 + 211) = v1792;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 422) = v1791;
                          v124[3384] = v125[3384];
                          v1794 = *((_QWORD *)v125 + 424);
                          v124[3400] = v125[3400];
                          *((_QWORD *)v124 + 424) = v1794;
                          swift_bridgeObjectRetain(v1791);
                        }
                        v1795 = *((_QWORD *)v125 + 426);
                        if (v1795 == 1)
                        {
                          v1796 = *((_OWORD *)v125 + 213);
                          *(_OWORD *)(v124 + 3417) = *(_OWORD *)(v125 + 3417);
                          *((_OWORD *)v124 + 213) = v1796;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 426) = v1795;
                          v124[3416] = v125[3416];
                          v1797 = *((_QWORD *)v125 + 428);
                          v124[3432] = v125[3432];
                          *((_QWORD *)v124 + 428) = v1797;
                          swift_bridgeObjectRetain(v1795);
                        }
                        v1798 = *((_QWORD *)v125 + 430);
                        if (v1798 == 1)
                        {
                          v1799 = *((_OWORD *)v125 + 215);
                          *(_OWORD *)(v124 + 3449) = *(_OWORD *)(v125 + 3449);
                          *((_OWORD *)v124 + 215) = v1799;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 430) = v1798;
                          v124[3448] = v125[3448];
                          v1800 = *((_QWORD *)v125 + 432);
                          v124[3464] = v125[3464];
                          *((_QWORD *)v124 + 432) = v1800;
                          swift_bridgeObjectRetain(v1798);
                        }
                        v1801 = *((_QWORD *)v125 + 434);
                        if (v1801 == 1)
                        {
                          v1802 = *((_OWORD *)v125 + 217);
                          *(_OWORD *)(v124 + 3481) = *(_OWORD *)(v125 + 3481);
                          *((_OWORD *)v124 + 217) = v1802;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 434) = v1801;
                          v124[3480] = v125[3480];
                          v1803 = *((_QWORD *)v125 + 436);
                          v124[3496] = v125[3496];
                          *((_QWORD *)v124 + 436) = v1803;
                          swift_bridgeObjectRetain(v1801);
                        }
                        v1804 = *((_QWORD *)v125 + 438);
                        if (v1804 == 1)
                        {
                          v1805 = *((_OWORD *)v125 + 219);
                          *(_OWORD *)(v124 + 3513) = *(_OWORD *)(v125 + 3513);
                          *((_OWORD *)v124 + 219) = v1805;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 438) = v1804;
                          v124[3512] = v125[3512];
                          v1806 = *((_QWORD *)v125 + 440);
                          v124[3528] = v125[3528];
                          *((_QWORD *)v124 + 440) = v1806;
                          swift_bridgeObjectRetain(v1804);
                        }
                        v1807 = *((_QWORD *)v125 + 442);
                        if (v1807 == 1)
                        {
                          v1808 = *((_OWORD *)v125 + 221);
                          *(_OWORD *)(v124 + 3545) = *(_OWORD *)(v125 + 3545);
                          *((_OWORD *)v124 + 221) = v1808;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 442) = v1807;
                          v124[3544] = v125[3544];
                          v1809 = *((_QWORD *)v125 + 444);
                          v124[3560] = v125[3560];
                          *((_QWORD *)v124 + 444) = v1809;
                          swift_bridgeObjectRetain(v1807);
                        }
                        v1810 = *((_QWORD *)v125 + 446);
                        if (v1810 == 1)
                        {
                          v1811 = *((_OWORD *)v125 + 223);
                          *(_OWORD *)(v124 + 3577) = *(_OWORD *)(v125 + 3577);
                          *((_OWORD *)v124 + 223) = v1811;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 446) = v1810;
                          v124[3576] = v125[3576];
                          v1812 = *((_QWORD *)v125 + 448);
                          v124[3592] = v125[3592];
                          *((_QWORD *)v124 + 448) = v1812;
                          swift_bridgeObjectRetain(v1810);
                        }
                        v1813 = *((_QWORD *)v125 + 450);
                        if (v1813 == 1)
                        {
                          v1814 = *((_OWORD *)v125 + 225);
                          *(_OWORD *)(v124 + 3609) = *(_OWORD *)(v125 + 3609);
                          *((_OWORD *)v124 + 225) = v1814;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 450) = v1813;
                          v124[3608] = v125[3608];
                          v1815 = *((_QWORD *)v125 + 452);
                          v124[3624] = v125[3624];
                          *((_QWORD *)v124 + 452) = v1815;
                          swift_bridgeObjectRetain(v1813);
                        }
                        v1816 = *((_QWORD *)v125 + 454);
                        if (v1816 == 1)
                        {
                          v1817 = *((_OWORD *)v125 + 227);
                          *(_OWORD *)(v124 + 3641) = *(_OWORD *)(v125 + 3641);
                          *((_OWORD *)v124 + 227) = v1817;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 454) = v1816;
                          v124[3640] = v125[3640];
                          v1818 = *((_QWORD *)v125 + 456);
                          v124[3656] = v125[3656];
                          *((_QWORD *)v124 + 456) = v1818;
                          swift_bridgeObjectRetain(v1816);
                        }
                        v1819 = *((_QWORD *)v125 + 458);
                        if (v1819 == 1)
                        {
                          v1820 = *((_OWORD *)v125 + 229);
                          *(_OWORD *)(v124 + 3673) = *(_OWORD *)(v125 + 3673);
                          *((_OWORD *)v124 + 229) = v1820;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 458) = v1819;
                          v124[3672] = v125[3672];
                          v1821 = *((_QWORD *)v125 + 460);
                          v124[3688] = v125[3688];
                          *((_QWORD *)v124 + 460) = v1821;
                          swift_bridgeObjectRetain(v1819);
                        }
                        v1822 = *((_QWORD *)v125 + 462);
                        if (v1822 == 1)
                        {
                          v1823 = *((_OWORD *)v125 + 231);
                          *(_OWORD *)(v124 + 3705) = *(_OWORD *)(v125 + 3705);
                          *((_OWORD *)v124 + 231) = v1823;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 462) = v1822;
                          v124[3704] = v125[3704];
                          v1824 = *((_QWORD *)v125 + 464);
                          v124[3720] = v125[3720];
                          *((_QWORD *)v124 + 464) = v1824;
                          swift_bridgeObjectRetain(v1822);
                        }
                        v1825 = *((_QWORD *)v125 + 466);
                        if (v1825 == 1)
                        {
                          v1826 = *((_OWORD *)v125 + 233);
                          *(_OWORD *)(v124 + 3737) = *(_OWORD *)(v125 + 3737);
                          *((_OWORD *)v124 + 233) = v1826;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 466) = v1825;
                          v124[3736] = v125[3736];
                          v1827 = *((_QWORD *)v125 + 468);
                          v124[3752] = v125[3752];
                          *((_QWORD *)v124 + 468) = v1827;
                          swift_bridgeObjectRetain(v1825);
                        }
                        v1828 = *((_QWORD *)v125 + 470);
                        if (v1828 == 1)
                        {
                          v1829 = *((_OWORD *)v125 + 235);
                          *(_OWORD *)(v124 + 3769) = *(_OWORD *)(v125 + 3769);
                          *((_OWORD *)v124 + 235) = v1829;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 470) = v1828;
                          v124[3768] = v125[3768];
                          v1830 = *((_QWORD *)v125 + 472);
                          v124[3784] = v125[3784];
                          *((_QWORD *)v124 + 472) = v1830;
                          swift_bridgeObjectRetain(v1828);
                        }
                        v1831 = *((_QWORD *)v125 + 474);
                        if (v1831 == 1)
                        {
                          v1832 = *((_OWORD *)v125 + 237);
                          *(_OWORD *)(v124 + 3801) = *(_OWORD *)(v125 + 3801);
                          *((_OWORD *)v124 + 237) = v1832;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 474) = v1831;
                          v124[3800] = v125[3800];
                          v1833 = *((_QWORD *)v125 + 476);
                          v124[3816] = v125[3816];
                          *((_QWORD *)v124 + 476) = v1833;
                          swift_bridgeObjectRetain(v1831);
                        }
                        v1834 = *((_QWORD *)v125 + 478);
                        if (v1834 == 1)
                        {
                          v1835 = *((_OWORD *)v125 + 239);
                          *(_OWORD *)(v124 + 3833) = *(_OWORD *)(v125 + 3833);
                          *((_OWORD *)v124 + 239) = v1835;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 478) = v1834;
                          v124[3832] = v125[3832];
                          v1836 = *((_QWORD *)v125 + 480);
                          v124[3848] = v125[3848];
                          *((_QWORD *)v124 + 480) = v1836;
                          swift_bridgeObjectRetain(v1834);
                        }
                        v1837 = *((_QWORD *)v125 + 482);
                        if (v1837 == 1)
                        {
                          v1838 = *((_OWORD *)v125 + 241);
                          *(_OWORD *)(v124 + 3865) = *(_OWORD *)(v125 + 3865);
                          *((_OWORD *)v124 + 241) = v1838;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 482) = v1837;
                          v124[3864] = v125[3864];
                          v1839 = *((_QWORD *)v125 + 484);
                          v124[3880] = v125[3880];
                          *((_QWORD *)v124 + 484) = v1839;
                          swift_bridgeObjectRetain(v1837);
                        }
                        v1840 = *((_QWORD *)v125 + 486);
                        if (v1840 == 1)
                        {
                          v1841 = *((_OWORD *)v125 + 243);
                          *(_OWORD *)(v124 + 3897) = *(_OWORD *)(v125 + 3897);
                          *((_OWORD *)v124 + 243) = v1841;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 486) = v1840;
                          v124[3896] = v125[3896];
                          v1842 = *((_QWORD *)v125 + 488);
                          v124[3912] = v125[3912];
                          *((_QWORD *)v124 + 488) = v1842;
                          swift_bridgeObjectRetain(v1840);
                        }
                        v1843 = *((_QWORD *)v125 + 490);
                        if (v1843 == 1)
                        {
                          v1844 = *((_OWORD *)v125 + 245);
                          *(_OWORD *)(v124 + 3929) = *(_OWORD *)(v125 + 3929);
                          *((_OWORD *)v124 + 245) = v1844;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 490) = v1843;
                          v124[3928] = v125[3928];
                          v1845 = *((_QWORD *)v125 + 492);
                          v124[3944] = v125[3944];
                          *((_QWORD *)v124 + 492) = v1845;
                          swift_bridgeObjectRetain(v1843);
                        }
                        v1846 = *((_QWORD *)v125 + 494);
                        if (v1846 == 1)
                        {
                          v1847 = *((_OWORD *)v125 + 247);
                          *(_OWORD *)(v124 + 3961) = *(_OWORD *)(v125 + 3961);
                          *((_OWORD *)v124 + 247) = v1847;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 494) = v1846;
                          v124[3960] = v125[3960];
                          v1848 = *((_QWORD *)v125 + 496);
                          v124[3976] = v125[3976];
                          *((_QWORD *)v124 + 496) = v1848;
                          swift_bridgeObjectRetain(v1846);
                        }
                        v1849 = *((_QWORD *)v125 + 498);
                        if (v1849 == 1)
                        {
                          v1850 = *((_OWORD *)v125 + 249);
                          *(_OWORD *)(v124 + 3993) = *(_OWORD *)(v125 + 3993);
                          *((_OWORD *)v124 + 249) = v1850;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 498) = v1849;
                          v124[3992] = v125[3992];
                          v1851 = *((_QWORD *)v125 + 500);
                          v124[4008] = v125[4008];
                          *((_QWORD *)v124 + 500) = v1851;
                          swift_bridgeObjectRetain(v1849);
                        }
                        v1852 = *((_QWORD *)v125 + 502);
                        if (v1852 == 1)
                        {
                          v1853 = *((_OWORD *)v125 + 251);
                          *(_OWORD *)(v124 + 4025) = *(_OWORD *)(v125 + 4025);
                          *((_OWORD *)v124 + 251) = v1853;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 502) = v1852;
                          v124[4024] = v125[4024];
                          v1854 = *((_QWORD *)v125 + 504);
                          v124[4040] = v125[4040];
                          *((_QWORD *)v124 + 504) = v1854;
                          swift_bridgeObjectRetain(v1852);
                        }
                        v1855 = *((_QWORD *)v125 + 506);
                        if (v1855 == 1)
                        {
                          v1856 = *((_OWORD *)v125 + 253);
                          *(_OWORD *)(v124 + 4057) = *(_OWORD *)(v125 + 4057);
                          *((_OWORD *)v124 + 253) = v1856;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 506) = v1855;
                          v124[4056] = v125[4056];
                          v1857 = *((_QWORD *)v125 + 508);
                          v124[4072] = v125[4072];
                          *((_QWORD *)v124 + 508) = v1857;
                          swift_bridgeObjectRetain(v1855);
                        }
                        v1858 = *((_QWORD *)v125 + 510);
                        if (v1858 == 1)
                        {
                          v1859 = *((_OWORD *)v125 + 255);
                          *(_OWORD *)(v124 + 4089) = *(_OWORD *)(v125 + 4089);
                          *((_OWORD *)v124 + 255) = v1859;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 510) = v1858;
                          v124[4088] = v125[4088];
                          v1860 = *((_QWORD *)v125 + 512);
                          v124[4104] = v125[4104];
                          *((_QWORD *)v124 + 512) = v1860;
                          swift_bridgeObjectRetain(v1858);
                        }
                        v1861 = *((_OWORD *)v125 + 257);
                        v124[4128] = v125[4128];
                        *((_OWORD *)v124 + 257) = v1861;
                        v1862 = v125[4152];
                        *(_OWORD *)(v124 + 4136) = *(_OWORD *)(v125 + 4136);
                        v124[4152] = v1862;
                        v124[4153] = v125[4153];
                        v124[4154] = v125[4154];
                        v124[4155] = v125[4155];
                        v124[4156] = v125[4156];
                        v124[4157] = v125[4157];
                        v124[4158] = v125[4158];
                        v124[4159] = v125[4159];
                        v1863 = *((_QWORD *)v125 + 520);
                        *((_QWORD *)v124 + 520) = v1863;
                        v1864 = *((_QWORD *)v125 + 521);
                        *((_QWORD *)v124 + 521) = v1864;
                        swift_bridgeObjectRetain(v1863);
                        swift_bridgeObjectRetain(v1864);
                        goto LABEL_1781;
                      }
                    }
                    else
                    {
                      if (v1784 != 1)
                      {
                        v1787 = *(_QWORD *)v1782;
                        v1788 = *v1783;
                        if (*(_QWORD *)v1782 == 1)
                        {
                          if (v1788 == 1)
                          {
                            v1789 = *(_OWORD *)v1783;
                            *(_OWORD *)(v124 + 3353) = *(_OWORD *)(v125 + 3353);
                            *v1782 = v1789;
                          }
                          else
                          {
                            *((_QWORD *)v124 + 418) = v1788;
                            v124[3352] = v125[3352];
                            v1865 = *((_QWORD *)v125 + 420);
                            v124[3368] = v125[3368];
                            *((_QWORD *)v124 + 420) = v1865;
                            swift_bridgeObjectRetain(v1788);
                          }
                        }
                        else if (v1788 == 1)
                        {
                          sub_100083F00((_QWORD *)v124 + 418);
                          v1793 = *(_OWORD *)(v125 + 3353);
                          *v1782 = *(_OWORD *)v1783;
                          *(_OWORD *)(v124 + 3353) = v1793;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 418) = v1788;
                          swift_bridgeObjectRetain(v1788);
                          swift_bridgeObjectRelease(v1787);
                          v124[3352] = v125[3352];
                          v1866 = *((_QWORD *)v125 + 420);
                          v124[3368] = v125[3368];
                          *((_QWORD *)v124 + 420) = v1866;
                        }
                        v1867 = (__int128 *)(v124 + 3376);
                        v1868 = (__int128 *)(v125 + 3376);
                        v1869 = *((_QWORD *)v124 + 422);
                        v1870 = *((_QWORD *)v125 + 422);
                        if (v1869 == 1)
                        {
                          if (v1870 == 1)
                          {
                            v1871 = *v1868;
                            *(_OWORD *)(v124 + 3385) = *(_OWORD *)(v125 + 3385);
                            *v1867 = v1871;
                          }
                          else
                          {
                            *((_QWORD *)v124 + 422) = v1870;
                            v124[3384] = v125[3384];
                            v1873 = *((_QWORD *)v125 + 424);
                            v124[3400] = v125[3400];
                            *((_QWORD *)v124 + 424) = v1873;
                            swift_bridgeObjectRetain(v1870);
                          }
                        }
                        else if (v1870 == 1)
                        {
                          sub_100083F00((_QWORD *)v124 + 422);
                          v1872 = *(_OWORD *)(v125 + 3385);
                          *v1867 = *v1868;
                          *(_OWORD *)(v124 + 3385) = v1872;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 422) = v1870;
                          swift_bridgeObjectRetain(v1870);
                          swift_bridgeObjectRelease(v1869);
                          v124[3384] = v125[3384];
                          v1874 = *((_QWORD *)v125 + 424);
                          v124[3400] = v125[3400];
                          *((_QWORD *)v124 + 424) = v1874;
                        }
                        v1875 = (__int128 *)(v124 + 3408);
                        v1876 = (__int128 *)(v125 + 3408);
                        v1877 = *((_QWORD *)v124 + 426);
                        v1878 = *((_QWORD *)v125 + 426);
                        if (v1877 == 1)
                        {
                          if (v1878 == 1)
                          {
                            v1879 = *v1876;
                            *(_OWORD *)(v124 + 3417) = *(_OWORD *)(v125 + 3417);
                            *v1875 = v1879;
                          }
                          else
                          {
                            *((_QWORD *)v124 + 426) = v1878;
                            v124[3416] = v125[3416];
                            v1881 = *((_QWORD *)v125 + 428);
                            v124[3432] = v125[3432];
                            *((_QWORD *)v124 + 428) = v1881;
                            swift_bridgeObjectRetain(v1878);
                          }
                        }
                        else if (v1878 == 1)
                        {
                          sub_100083F00((_QWORD *)v124 + 426);
                          v1880 = *(_OWORD *)(v125 + 3417);
                          *v1875 = *v1876;
                          *(_OWORD *)(v124 + 3417) = v1880;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 426) = v1878;
                          swift_bridgeObjectRetain(v1878);
                          swift_bridgeObjectRelease(v1877);
                          v124[3416] = v125[3416];
                          v1882 = *((_QWORD *)v125 + 428);
                          v124[3432] = v125[3432];
                          *((_QWORD *)v124 + 428) = v1882;
                        }
                        v1883 = (__int128 *)(v124 + 3440);
                        v1884 = (__int128 *)(v125 + 3440);
                        v1885 = *((_QWORD *)v124 + 430);
                        v1886 = *((_QWORD *)v125 + 430);
                        if (v1885 == 1)
                        {
                          if (v1886 == 1)
                          {
                            v1887 = *v1884;
                            *(_OWORD *)(v124 + 3449) = *(_OWORD *)(v125 + 3449);
                            *v1883 = v1887;
                          }
                          else
                          {
                            *((_QWORD *)v124 + 430) = v1886;
                            v124[3448] = v125[3448];
                            v1889 = *((_QWORD *)v125 + 432);
                            v124[3464] = v125[3464];
                            *((_QWORD *)v124 + 432) = v1889;
                            swift_bridgeObjectRetain(v1886);
                          }
                        }
                        else if (v1886 == 1)
                        {
                          sub_100083F00((_QWORD *)v124 + 430);
                          v1888 = *(_OWORD *)(v125 + 3449);
                          *v1883 = *v1884;
                          *(_OWORD *)(v124 + 3449) = v1888;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 430) = v1886;
                          swift_bridgeObjectRetain(v1886);
                          swift_bridgeObjectRelease(v1885);
                          v124[3448] = v125[3448];
                          v1890 = *((_QWORD *)v125 + 432);
                          v124[3464] = v125[3464];
                          *((_QWORD *)v124 + 432) = v1890;
                        }
                        v1891 = (__int128 *)(v124 + 3472);
                        v1892 = (__int128 *)(v125 + 3472);
                        v1893 = *((_QWORD *)v124 + 434);
                        v1894 = *((_QWORD *)v125 + 434);
                        if (v1893 == 1)
                        {
                          if (v1894 == 1)
                          {
                            v1895 = *v1892;
                            *(_OWORD *)(v124 + 3481) = *(_OWORD *)(v125 + 3481);
                            *v1891 = v1895;
                          }
                          else
                          {
                            *((_QWORD *)v124 + 434) = v1894;
                            v124[3480] = v125[3480];
                            v1897 = *((_QWORD *)v125 + 436);
                            v124[3496] = v125[3496];
                            *((_QWORD *)v124 + 436) = v1897;
                            swift_bridgeObjectRetain(v1894);
                          }
                        }
                        else if (v1894 == 1)
                        {
                          sub_100083F00((_QWORD *)v124 + 434);
                          v1896 = *(_OWORD *)(v125 + 3481);
                          *v1891 = *v1892;
                          *(_OWORD *)(v124 + 3481) = v1896;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 434) = v1894;
                          swift_bridgeObjectRetain(v1894);
                          swift_bridgeObjectRelease(v1893);
                          v124[3480] = v125[3480];
                          v1898 = *((_QWORD *)v125 + 436);
                          v124[3496] = v125[3496];
                          *((_QWORD *)v124 + 436) = v1898;
                        }
                        v1899 = (__int128 *)(v124 + 3504);
                        v1900 = (__int128 *)(v125 + 3504);
                        v1901 = *((_QWORD *)v124 + 438);
                        v1902 = *((_QWORD *)v125 + 438);
                        if (v1901 == 1)
                        {
                          if (v1902 == 1)
                          {
                            v1903 = *v1900;
                            *(_OWORD *)(v124 + 3513) = *(_OWORD *)(v125 + 3513);
                            *v1899 = v1903;
                          }
                          else
                          {
                            *((_QWORD *)v124 + 438) = v1902;
                            v124[3512] = v125[3512];
                            v1905 = *((_QWORD *)v125 + 440);
                            v124[3528] = v125[3528];
                            *((_QWORD *)v124 + 440) = v1905;
                            swift_bridgeObjectRetain(v1902);
                          }
                        }
                        else if (v1902 == 1)
                        {
                          sub_100083F00((_QWORD *)v124 + 438);
                          v1904 = *(_OWORD *)(v125 + 3513);
                          *v1899 = *v1900;
                          *(_OWORD *)(v124 + 3513) = v1904;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 438) = v1902;
                          swift_bridgeObjectRetain(v1902);
                          swift_bridgeObjectRelease(v1901);
                          v124[3512] = v125[3512];
                          v1906 = *((_QWORD *)v125 + 440);
                          v124[3528] = v125[3528];
                          *((_QWORD *)v124 + 440) = v1906;
                        }
                        v1907 = (__int128 *)(v124 + 3536);
                        v1908 = (__int128 *)(v125 + 3536);
                        v1909 = *((_QWORD *)v124 + 442);
                        v1910 = *((_QWORD *)v125 + 442);
                        if (v1909 == 1)
                        {
                          if (v1910 == 1)
                          {
                            v1911 = *v1908;
                            *(_OWORD *)(v124 + 3545) = *(_OWORD *)(v125 + 3545);
                            *v1907 = v1911;
                          }
                          else
                          {
                            *((_QWORD *)v124 + 442) = v1910;
                            v124[3544] = v125[3544];
                            v1913 = *((_QWORD *)v125 + 444);
                            v124[3560] = v125[3560];
                            *((_QWORD *)v124 + 444) = v1913;
                            swift_bridgeObjectRetain(v1910);
                          }
                        }
                        else if (v1910 == 1)
                        {
                          sub_100083F00((_QWORD *)v124 + 442);
                          v1912 = *(_OWORD *)(v125 + 3545);
                          *v1907 = *v1908;
                          *(_OWORD *)(v124 + 3545) = v1912;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 442) = v1910;
                          swift_bridgeObjectRetain(v1910);
                          swift_bridgeObjectRelease(v1909);
                          v124[3544] = v125[3544];
                          v1914 = *((_QWORD *)v125 + 444);
                          v124[3560] = v125[3560];
                          *((_QWORD *)v124 + 444) = v1914;
                        }
                        v1915 = (__int128 *)(v124 + 3568);
                        v1916 = (__int128 *)(v125 + 3568);
                        v1917 = *((_QWORD *)v124 + 446);
                        v1918 = *((_QWORD *)v125 + 446);
                        if (v1917 == 1)
                        {
                          if (v1918 == 1)
                          {
                            v1919 = *v1916;
                            *(_OWORD *)(v124 + 3577) = *(_OWORD *)(v125 + 3577);
                            *v1915 = v1919;
                          }
                          else
                          {
                            *((_QWORD *)v124 + 446) = v1918;
                            v124[3576] = v125[3576];
                            v1921 = *((_QWORD *)v125 + 448);
                            v124[3592] = v125[3592];
                            *((_QWORD *)v124 + 448) = v1921;
                            swift_bridgeObjectRetain(v1918);
                          }
                        }
                        else if (v1918 == 1)
                        {
                          sub_100083F00((_QWORD *)v124 + 446);
                          v1920 = *(_OWORD *)(v125 + 3577);
                          *v1915 = *v1916;
                          *(_OWORD *)(v124 + 3577) = v1920;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 446) = v1918;
                          swift_bridgeObjectRetain(v1918);
                          swift_bridgeObjectRelease(v1917);
                          v124[3576] = v125[3576];
                          v1922 = *((_QWORD *)v125 + 448);
                          v124[3592] = v125[3592];
                          *((_QWORD *)v124 + 448) = v1922;
                        }
                        v1923 = (__int128 *)(v124 + 3600);
                        v1924 = (__int128 *)(v125 + 3600);
                        v1925 = *((_QWORD *)v124 + 450);
                        v1926 = *((_QWORD *)v125 + 450);
                        if (v1925 == 1)
                        {
                          if (v1926 == 1)
                          {
                            v1927 = *v1924;
                            *(_OWORD *)(v124 + 3609) = *(_OWORD *)(v125 + 3609);
                            *v1923 = v1927;
                          }
                          else
                          {
                            *((_QWORD *)v124 + 450) = v1926;
                            v124[3608] = v125[3608];
                            v1929 = *((_QWORD *)v125 + 452);
                            v124[3624] = v125[3624];
                            *((_QWORD *)v124 + 452) = v1929;
                            swift_bridgeObjectRetain(v1926);
                          }
                        }
                        else if (v1926 == 1)
                        {
                          sub_100083F00((_QWORD *)v124 + 450);
                          v1928 = *(_OWORD *)(v125 + 3609);
                          *v1923 = *v1924;
                          *(_OWORD *)(v124 + 3609) = v1928;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 450) = v1926;
                          swift_bridgeObjectRetain(v1926);
                          swift_bridgeObjectRelease(v1925);
                          v124[3608] = v125[3608];
                          v1930 = *((_QWORD *)v125 + 452);
                          v124[3624] = v125[3624];
                          *((_QWORD *)v124 + 452) = v1930;
                        }
                        v1931 = (__int128 *)(v124 + 3632);
                        v1932 = (__int128 *)(v125 + 3632);
                        v1933 = *((_QWORD *)v124 + 454);
                        v1934 = *((_QWORD *)v125 + 454);
                        if (v1933 == 1)
                        {
                          if (v1934 == 1)
                          {
                            v1935 = *v1932;
                            *(_OWORD *)(v124 + 3641) = *(_OWORD *)(v125 + 3641);
                            *v1931 = v1935;
                          }
                          else
                          {
                            *((_QWORD *)v124 + 454) = v1934;
                            v124[3640] = v125[3640];
                            v1937 = *((_QWORD *)v125 + 456);
                            v124[3656] = v125[3656];
                            *((_QWORD *)v124 + 456) = v1937;
                            swift_bridgeObjectRetain(v1934);
                          }
                        }
                        else if (v1934 == 1)
                        {
                          sub_100083F00((_QWORD *)v124 + 454);
                          v1936 = *(_OWORD *)(v125 + 3641);
                          *v1931 = *v1932;
                          *(_OWORD *)(v124 + 3641) = v1936;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 454) = v1934;
                          swift_bridgeObjectRetain(v1934);
                          swift_bridgeObjectRelease(v1933);
                          v124[3640] = v125[3640];
                          v1938 = *((_QWORD *)v125 + 456);
                          v124[3656] = v125[3656];
                          *((_QWORD *)v124 + 456) = v1938;
                        }
                        v1939 = (__int128 *)(v124 + 3664);
                        v1940 = (__int128 *)(v125 + 3664);
                        v1941 = *((_QWORD *)v124 + 458);
                        v1942 = *((_QWORD *)v125 + 458);
                        if (v1941 == 1)
                        {
                          if (v1942 == 1)
                          {
                            v1943 = *v1940;
                            *(_OWORD *)(v124 + 3673) = *(_OWORD *)(v125 + 3673);
                            *v1939 = v1943;
                          }
                          else
                          {
                            *((_QWORD *)v124 + 458) = v1942;
                            v124[3672] = v125[3672];
                            v1945 = *((_QWORD *)v125 + 460);
                            v124[3688] = v125[3688];
                            *((_QWORD *)v124 + 460) = v1945;
                            swift_bridgeObjectRetain(v1942);
                          }
                        }
                        else if (v1942 == 1)
                        {
                          sub_100083F00((_QWORD *)v124 + 458);
                          v1944 = *(_OWORD *)(v125 + 3673);
                          *v1939 = *v1940;
                          *(_OWORD *)(v124 + 3673) = v1944;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 458) = v1942;
                          swift_bridgeObjectRetain(v1942);
                          swift_bridgeObjectRelease(v1941);
                          v124[3672] = v125[3672];
                          v1946 = *((_QWORD *)v125 + 460);
                          v124[3688] = v125[3688];
                          *((_QWORD *)v124 + 460) = v1946;
                        }
                        v1947 = (__int128 *)(v124 + 3696);
                        v1948 = (__int128 *)(v125 + 3696);
                        v1949 = *((_QWORD *)v124 + 462);
                        v1950 = *((_QWORD *)v125 + 462);
                        if (v1949 == 1)
                        {
                          if (v1950 == 1)
                          {
                            v1951 = *v1948;
                            *(_OWORD *)(v124 + 3705) = *(_OWORD *)(v125 + 3705);
                            *v1947 = v1951;
                          }
                          else
                          {
                            *((_QWORD *)v124 + 462) = v1950;
                            v124[3704] = v125[3704];
                            v1953 = *((_QWORD *)v125 + 464);
                            v124[3720] = v125[3720];
                            *((_QWORD *)v124 + 464) = v1953;
                            swift_bridgeObjectRetain(v1950);
                          }
                        }
                        else if (v1950 == 1)
                        {
                          sub_100083F00((_QWORD *)v124 + 462);
                          v1952 = *(_OWORD *)(v125 + 3705);
                          *v1947 = *v1948;
                          *(_OWORD *)(v124 + 3705) = v1952;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 462) = v1950;
                          swift_bridgeObjectRetain(v1950);
                          swift_bridgeObjectRelease(v1949);
                          v124[3704] = v125[3704];
                          v1954 = *((_QWORD *)v125 + 464);
                          v124[3720] = v125[3720];
                          *((_QWORD *)v124 + 464) = v1954;
                        }
                        v1955 = (__int128 *)(v124 + 3728);
                        v1956 = (__int128 *)(v125 + 3728);
                        v1957 = *((_QWORD *)v124 + 466);
                        v1958 = *((_QWORD *)v125 + 466);
                        if (v1957 == 1)
                        {
                          if (v1958 == 1)
                          {
                            v1959 = *v1956;
                            *(_OWORD *)(v124 + 3737) = *(_OWORD *)(v125 + 3737);
                            *v1955 = v1959;
                          }
                          else
                          {
                            *((_QWORD *)v124 + 466) = v1958;
                            v124[3736] = v125[3736];
                            v1961 = *((_QWORD *)v125 + 468);
                            v124[3752] = v125[3752];
                            *((_QWORD *)v124 + 468) = v1961;
                            swift_bridgeObjectRetain(v1958);
                          }
                        }
                        else if (v1958 == 1)
                        {
                          sub_100083F00((_QWORD *)v124 + 466);
                          v1960 = *(_OWORD *)(v125 + 3737);
                          *v1955 = *v1956;
                          *(_OWORD *)(v124 + 3737) = v1960;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 466) = v1958;
                          swift_bridgeObjectRetain(v1958);
                          swift_bridgeObjectRelease(v1957);
                          v124[3736] = v125[3736];
                          v1962 = *((_QWORD *)v125 + 468);
                          v124[3752] = v125[3752];
                          *((_QWORD *)v124 + 468) = v1962;
                        }
                        v1963 = (__int128 *)(v124 + 3760);
                        v1964 = (__int128 *)(v125 + 3760);
                        v1965 = *((_QWORD *)v124 + 470);
                        v1966 = *((_QWORD *)v125 + 470);
                        if (v1965 == 1)
                        {
                          if (v1966 == 1)
                          {
                            v1967 = *v1964;
                            *(_OWORD *)(v124 + 3769) = *(_OWORD *)(v125 + 3769);
                            *v1963 = v1967;
                          }
                          else
                          {
                            *((_QWORD *)v124 + 470) = v1966;
                            v124[3768] = v125[3768];
                            v1969 = *((_QWORD *)v125 + 472);
                            v124[3784] = v125[3784];
                            *((_QWORD *)v124 + 472) = v1969;
                            swift_bridgeObjectRetain(v1966);
                          }
                        }
                        else if (v1966 == 1)
                        {
                          sub_100083F00((_QWORD *)v124 + 470);
                          v1968 = *(_OWORD *)(v125 + 3769);
                          *v1963 = *v1964;
                          *(_OWORD *)(v124 + 3769) = v1968;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 470) = v1966;
                          swift_bridgeObjectRetain(v1966);
                          swift_bridgeObjectRelease(v1965);
                          v124[3768] = v125[3768];
                          v1970 = *((_QWORD *)v125 + 472);
                          v124[3784] = v125[3784];
                          *((_QWORD *)v124 + 472) = v1970;
                        }
                        v1971 = (__int128 *)(v124 + 3792);
                        v1972 = (__int128 *)(v125 + 3792);
                        v1973 = *((_QWORD *)v124 + 474);
                        v1974 = *((_QWORD *)v125 + 474);
                        if (v1973 == 1)
                        {
                          if (v1974 == 1)
                          {
                            v1975 = *v1972;
                            *(_OWORD *)(v124 + 3801) = *(_OWORD *)(v125 + 3801);
                            *v1971 = v1975;
                          }
                          else
                          {
                            *((_QWORD *)v124 + 474) = v1974;
                            v124[3800] = v125[3800];
                            v1977 = *((_QWORD *)v125 + 476);
                            v124[3816] = v125[3816];
                            *((_QWORD *)v124 + 476) = v1977;
                            swift_bridgeObjectRetain(v1974);
                          }
                        }
                        else if (v1974 == 1)
                        {
                          sub_100083F00((_QWORD *)v124 + 474);
                          v1976 = *(_OWORD *)(v125 + 3801);
                          *v1971 = *v1972;
                          *(_OWORD *)(v124 + 3801) = v1976;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 474) = v1974;
                          swift_bridgeObjectRetain(v1974);
                          swift_bridgeObjectRelease(v1973);
                          v124[3800] = v125[3800];
                          v1978 = *((_QWORD *)v125 + 476);
                          v124[3816] = v125[3816];
                          *((_QWORD *)v124 + 476) = v1978;
                        }
                        v1979 = (__int128 *)(v124 + 3824);
                        v1980 = (__int128 *)(v125 + 3824);
                        v1981 = *((_QWORD *)v124 + 478);
                        v1982 = *((_QWORD *)v125 + 478);
                        if (v1981 == 1)
                        {
                          if (v1982 == 1)
                          {
                            v1983 = *v1980;
                            *(_OWORD *)(v124 + 3833) = *(_OWORD *)(v125 + 3833);
                            *v1979 = v1983;
                          }
                          else
                          {
                            *((_QWORD *)v124 + 478) = v1982;
                            v124[3832] = v125[3832];
                            v1985 = *((_QWORD *)v125 + 480);
                            v124[3848] = v125[3848];
                            *((_QWORD *)v124 + 480) = v1985;
                            swift_bridgeObjectRetain(v1982);
                          }
                        }
                        else if (v1982 == 1)
                        {
                          sub_100083F00((_QWORD *)v124 + 478);
                          v1984 = *(_OWORD *)(v125 + 3833);
                          *v1979 = *v1980;
                          *(_OWORD *)(v124 + 3833) = v1984;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 478) = v1982;
                          swift_bridgeObjectRetain(v1982);
                          swift_bridgeObjectRelease(v1981);
                          v124[3832] = v125[3832];
                          v1986 = *((_QWORD *)v125 + 480);
                          v124[3848] = v125[3848];
                          *((_QWORD *)v124 + 480) = v1986;
                        }
                        v1987 = (__int128 *)(v124 + 3856);
                        v1988 = (__int128 *)(v125 + 3856);
                        v1989 = *((_QWORD *)v124 + 482);
                        v1990 = *((_QWORD *)v125 + 482);
                        if (v1989 == 1)
                        {
                          if (v1990 == 1)
                          {
                            v1991 = *v1988;
                            *(_OWORD *)(v124 + 3865) = *(_OWORD *)(v125 + 3865);
                            *v1987 = v1991;
                          }
                          else
                          {
                            *((_QWORD *)v124 + 482) = v1990;
                            v124[3864] = v125[3864];
                            v1993 = *((_QWORD *)v125 + 484);
                            v124[3880] = v125[3880];
                            *((_QWORD *)v124 + 484) = v1993;
                            swift_bridgeObjectRetain(v1990);
                          }
                        }
                        else if (v1990 == 1)
                        {
                          sub_100083F00((_QWORD *)v124 + 482);
                          v1992 = *(_OWORD *)(v125 + 3865);
                          *v1987 = *v1988;
                          *(_OWORD *)(v124 + 3865) = v1992;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 482) = v1990;
                          swift_bridgeObjectRetain(v1990);
                          swift_bridgeObjectRelease(v1989);
                          v124[3864] = v125[3864];
                          v1994 = *((_QWORD *)v125 + 484);
                          v124[3880] = v125[3880];
                          *((_QWORD *)v124 + 484) = v1994;
                        }
                        v1995 = (__int128 *)(v124 + 3888);
                        v1996 = (__int128 *)(v125 + 3888);
                        v1997 = *((_QWORD *)v124 + 486);
                        v1998 = *((_QWORD *)v125 + 486);
                        if (v1997 == 1)
                        {
                          if (v1998 == 1)
                          {
                            v1999 = *v1996;
                            *(_OWORD *)(v124 + 3897) = *(_OWORD *)(v125 + 3897);
                            *v1995 = v1999;
                          }
                          else
                          {
                            *((_QWORD *)v124 + 486) = v1998;
                            v124[3896] = v125[3896];
                            v2001 = *((_QWORD *)v125 + 488);
                            v124[3912] = v125[3912];
                            *((_QWORD *)v124 + 488) = v2001;
                            swift_bridgeObjectRetain(v1998);
                          }
                        }
                        else if (v1998 == 1)
                        {
                          sub_100083F00((_QWORD *)v124 + 486);
                          v2000 = *(_OWORD *)(v125 + 3897);
                          *v1995 = *v1996;
                          *(_OWORD *)(v124 + 3897) = v2000;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 486) = v1998;
                          swift_bridgeObjectRetain(v1998);
                          swift_bridgeObjectRelease(v1997);
                          v124[3896] = v125[3896];
                          v2002 = *((_QWORD *)v125 + 488);
                          v124[3912] = v125[3912];
                          *((_QWORD *)v124 + 488) = v2002;
                        }
                        v2003 = (__int128 *)(v124 + 3920);
                        v2004 = (__int128 *)(v125 + 3920);
                        v2005 = *((_QWORD *)v124 + 490);
                        v2006 = *((_QWORD *)v125 + 490);
                        if (v2005 == 1)
                        {
                          if (v2006 == 1)
                          {
                            v2007 = *v2004;
                            *(_OWORD *)(v124 + 3929) = *(_OWORD *)(v125 + 3929);
                            *v2003 = v2007;
                          }
                          else
                          {
                            *((_QWORD *)v124 + 490) = v2006;
                            v124[3928] = v125[3928];
                            v2009 = *((_QWORD *)v125 + 492);
                            v124[3944] = v125[3944];
                            *((_QWORD *)v124 + 492) = v2009;
                            swift_bridgeObjectRetain(v2006);
                          }
                        }
                        else if (v2006 == 1)
                        {
                          sub_100083F00((_QWORD *)v124 + 490);
                          v2008 = *(_OWORD *)(v125 + 3929);
                          *v2003 = *v2004;
                          *(_OWORD *)(v124 + 3929) = v2008;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 490) = v2006;
                          swift_bridgeObjectRetain(v2006);
                          swift_bridgeObjectRelease(v2005);
                          v124[3928] = v125[3928];
                          v2010 = *((_QWORD *)v125 + 492);
                          v124[3944] = v125[3944];
                          *((_QWORD *)v124 + 492) = v2010;
                        }
                        v2011 = (__int128 *)(v124 + 3952);
                        v2012 = (__int128 *)(v125 + 3952);
                        v2013 = *((_QWORD *)v124 + 494);
                        v2014 = *((_QWORD *)v125 + 494);
                        if (v2013 == 1)
                        {
                          if (v2014 == 1)
                          {
                            v2015 = *v2012;
                            *(_OWORD *)(v124 + 3961) = *(_OWORD *)(v125 + 3961);
                            *v2011 = v2015;
                          }
                          else
                          {
                            *((_QWORD *)v124 + 494) = v2014;
                            v124[3960] = v125[3960];
                            v2017 = *((_QWORD *)v125 + 496);
                            v124[3976] = v125[3976];
                            *((_QWORD *)v124 + 496) = v2017;
                            swift_bridgeObjectRetain(v2014);
                          }
                        }
                        else if (v2014 == 1)
                        {
                          sub_100083F00((_QWORD *)v124 + 494);
                          v2016 = *(_OWORD *)(v125 + 3961);
                          *v2011 = *v2012;
                          *(_OWORD *)(v124 + 3961) = v2016;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 494) = v2014;
                          swift_bridgeObjectRetain(v2014);
                          swift_bridgeObjectRelease(v2013);
                          v124[3960] = v125[3960];
                          v2018 = *((_QWORD *)v125 + 496);
                          v124[3976] = v125[3976];
                          *((_QWORD *)v124 + 496) = v2018;
                        }
                        v2019 = (__int128 *)(v124 + 3984);
                        v2020 = (__int128 *)(v125 + 3984);
                        v2021 = *((_QWORD *)v124 + 498);
                        v2022 = *((_QWORD *)v125 + 498);
                        if (v2021 == 1)
                        {
                          if (v2022 == 1)
                          {
                            v2023 = *v2020;
                            *(_OWORD *)(v124 + 3993) = *(_OWORD *)(v125 + 3993);
                            *v2019 = v2023;
                          }
                          else
                          {
                            *((_QWORD *)v124 + 498) = v2022;
                            v124[3992] = v125[3992];
                            v2025 = *((_QWORD *)v125 + 500);
                            v124[4008] = v125[4008];
                            *((_QWORD *)v124 + 500) = v2025;
                            swift_bridgeObjectRetain(v2022);
                          }
                        }
                        else if (v2022 == 1)
                        {
                          sub_100083F00((_QWORD *)v124 + 498);
                          v2024 = *(_OWORD *)(v125 + 3993);
                          *v2019 = *v2020;
                          *(_OWORD *)(v124 + 3993) = v2024;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 498) = v2022;
                          swift_bridgeObjectRetain(v2022);
                          swift_bridgeObjectRelease(v2021);
                          v124[3992] = v125[3992];
                          v2026 = *((_QWORD *)v125 + 500);
                          v124[4008] = v125[4008];
                          *((_QWORD *)v124 + 500) = v2026;
                        }
                        v2027 = (__int128 *)(v124 + 4016);
                        v2028 = (__int128 *)(v125 + 4016);
                        v2029 = *((_QWORD *)v124 + 502);
                        v2030 = *((_QWORD *)v125 + 502);
                        if (v2029 == 1)
                        {
                          if (v2030 == 1)
                          {
                            v2031 = *v2028;
                            *(_OWORD *)(v124 + 4025) = *(_OWORD *)(v125 + 4025);
                            *v2027 = v2031;
                          }
                          else
                          {
                            *((_QWORD *)v124 + 502) = v2030;
                            v124[4024] = v125[4024];
                            v2033 = *((_QWORD *)v125 + 504);
                            v124[4040] = v125[4040];
                            *((_QWORD *)v124 + 504) = v2033;
                            swift_bridgeObjectRetain(v2030);
                          }
                        }
                        else if (v2030 == 1)
                        {
                          sub_100083F00((_QWORD *)v124 + 502);
                          v2032 = *(_OWORD *)(v125 + 4025);
                          *v2027 = *v2028;
                          *(_OWORD *)(v124 + 4025) = v2032;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 502) = v2030;
                          swift_bridgeObjectRetain(v2030);
                          swift_bridgeObjectRelease(v2029);
                          v124[4024] = v125[4024];
                          v2034 = *((_QWORD *)v125 + 504);
                          v124[4040] = v125[4040];
                          *((_QWORD *)v124 + 504) = v2034;
                        }
                        v2035 = (__int128 *)(v124 + 4048);
                        v2036 = (__int128 *)(v125 + 4048);
                        v2037 = *((_QWORD *)v124 + 506);
                        v2038 = *((_QWORD *)v125 + 506);
                        if (v2037 == 1)
                        {
                          if (v2038 == 1)
                          {
                            v2039 = *v2036;
                            *(_OWORD *)(v124 + 4057) = *(_OWORD *)(v125 + 4057);
                            *v2035 = v2039;
                          }
                          else
                          {
                            *((_QWORD *)v124 + 506) = v2038;
                            v124[4056] = v125[4056];
                            v2041 = *((_QWORD *)v125 + 508);
                            v124[4072] = v125[4072];
                            *((_QWORD *)v124 + 508) = v2041;
                            swift_bridgeObjectRetain(v2038);
                          }
                        }
                        else if (v2038 == 1)
                        {
                          sub_100083F00((_QWORD *)v124 + 506);
                          v2040 = *(_OWORD *)(v125 + 4057);
                          *v2035 = *v2036;
                          *(_OWORD *)(v124 + 4057) = v2040;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 506) = v2038;
                          swift_bridgeObjectRetain(v2038);
                          swift_bridgeObjectRelease(v2037);
                          v124[4056] = v125[4056];
                          v2042 = *((_QWORD *)v125 + 508);
                          v124[4072] = v125[4072];
                          *((_QWORD *)v124 + 508) = v2042;
                        }
                        v2043 = (__int128 *)(v124 + 4080);
                        v2044 = (__int128 *)(v125 + 4080);
                        v2045 = *((_QWORD *)v124 + 510);
                        v2046 = *((_QWORD *)v125 + 510);
                        if (v2045 == 1)
                        {
                          if (v2046 == 1)
                          {
                            v2047 = *v2044;
                            *(_OWORD *)(v124 + 4089) = *(_OWORD *)(v125 + 4089);
                            *v2043 = v2047;
                          }
                          else
                          {
                            *((_QWORD *)v124 + 510) = v2046;
                            v124[4088] = v125[4088];
                            v2049 = *((_QWORD *)v125 + 512);
                            v124[4104] = v125[4104];
                            *((_QWORD *)v124 + 512) = v2049;
                            swift_bridgeObjectRetain(v2046);
                          }
                        }
                        else if (v2046 == 1)
                        {
                          sub_100083F00((_QWORD *)v124 + 510);
                          v2048 = *(_OWORD *)(v125 + 4089);
                          *v2043 = *v2044;
                          *(_OWORD *)(v124 + 4089) = v2048;
                        }
                        else
                        {
                          *((_QWORD *)v124 + 510) = v2046;
                          swift_bridgeObjectRetain(v2046);
                          swift_bridgeObjectRelease(v2045);
                          v124[4088] = v125[4088];
                          v2050 = *((_QWORD *)v125 + 512);
                          v124[4104] = v125[4104];
                          *((_QWORD *)v124 + 512) = v2050;
                        }
                        v2051 = *((_OWORD *)v125 + 257);
                        v124[4128] = v125[4128];
                        *((_OWORD *)v124 + 257) = v2051;
                        v2052 = v125[4152];
                        *(_OWORD *)(v124 + 4136) = *(_OWORD *)(v125 + 4136);
                        v124[4152] = v2052;
                        v124[4153] = v125[4153];
                        v124[4154] = v125[4154];
                        v124[4155] = v125[4155];
                        v124[4156] = v125[4156];
                        v124[4157] = v125[4157];
                        v124[4158] = v125[4158];
                        v124[4159] = v125[4159];
                        v2053 = *((_QWORD *)v124 + 520);
                        v2054 = *((_QWORD *)v125 + 520);
                        *((_QWORD *)v124 + 520) = v2054;
                        swift_bridgeObjectRetain(v2054);
                        swift_bridgeObjectRelease(v2053);
                        v2055 = *((_QWORD *)v124 + 521);
                        v2056 = *((_QWORD *)v125 + 521);
                        *((_QWORD *)v124 + 521) = v2056;
                        swift_bridgeObjectRetain(v2056);
                        swift_bridgeObjectRelease(v2055);
LABEL_1781:
                        v2057 = v124 + 4176;
                        v2058 = (uint64_t *)(v125 + 4176);
                        v2059 = *((_QWORD *)v125 + 624);
                        if (*((_QWORD *)v124 + 624) == 1)
                        {
                          if (v2059 != 1)
                          {
                            v2060 = *v2058;
                            if (*v2058 == 1)
                            {
                              v2061 = *(_OWORD *)v2058;
                              *(_OWORD *)(v124 + 4185) = *(_OWORD *)(v125 + 4185);
                              *v2057 = v2061;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 522) = v2060;
                              v124[4184] = v125[4184];
                              v2065 = *((_QWORD *)v125 + 524);
                              v124[4200] = v125[4200];
                              *((_QWORD *)v124 + 524) = v2065;
                              swift_bridgeObjectRetain(v2060);
                            }
                            v2066 = *((_QWORD *)v125 + 526);
                            if (v2066 == 1)
                            {
                              v2067 = *((_OWORD *)v125 + 263);
                              *(_OWORD *)(v124 + 4217) = *(_OWORD *)(v125 + 4217);
                              *((_OWORD *)v124 + 263) = v2067;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 526) = v2066;
                              v124[4216] = v125[4216];
                              v2069 = *((_QWORD *)v125 + 528);
                              v124[4232] = v125[4232];
                              *((_QWORD *)v124 + 528) = v2069;
                              swift_bridgeObjectRetain(v2066);
                            }
                            v2070 = *((_QWORD *)v125 + 530);
                            if (v2070 == 1)
                            {
                              v2071 = *((_OWORD *)v125 + 265);
                              *(_OWORD *)(v124 + 4249) = *(_OWORD *)(v125 + 4249);
                              *((_OWORD *)v124 + 265) = v2071;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 530) = v2070;
                              v124[4248] = v125[4248];
                              v2072 = *((_QWORD *)v125 + 532);
                              v124[4264] = v125[4264];
                              *((_QWORD *)v124 + 532) = v2072;
                              swift_bridgeObjectRetain(v2070);
                            }
                            v2073 = *((_QWORD *)v125 + 534);
                            if (v2073 == 1)
                            {
                              v2074 = *((_OWORD *)v125 + 267);
                              *(_OWORD *)(v124 + 4281) = *(_OWORD *)(v125 + 4281);
                              *((_OWORD *)v124 + 267) = v2074;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 534) = v2073;
                              v124[4280] = v125[4280];
                              v2075 = *((_QWORD *)v125 + 536);
                              v124[4296] = v125[4296];
                              *((_QWORD *)v124 + 536) = v2075;
                              swift_bridgeObjectRetain(v2073);
                            }
                            v2076 = *((_QWORD *)v125 + 538);
                            if (v2076 == 1)
                            {
                              v2077 = *((_OWORD *)v125 + 269);
                              *(_OWORD *)(v124 + 4313) = *(_OWORD *)(v125 + 4313);
                              *((_OWORD *)v124 + 269) = v2077;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 538) = v2076;
                              v124[4312] = v125[4312];
                              v2078 = *((_QWORD *)v125 + 540);
                              v124[4328] = v125[4328];
                              *((_QWORD *)v124 + 540) = v2078;
                              swift_bridgeObjectRetain(v2076);
                            }
                            v2079 = *((_QWORD *)v125 + 542);
                            if (v2079 == 1)
                            {
                              v2080 = *((_OWORD *)v125 + 271);
                              *(_OWORD *)(v124 + 4345) = *(_OWORD *)(v125 + 4345);
                              *((_OWORD *)v124 + 271) = v2080;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 542) = v2079;
                              v124[4344] = v125[4344];
                              v2081 = *((_QWORD *)v125 + 544);
                              v124[4360] = v125[4360];
                              *((_QWORD *)v124 + 544) = v2081;
                              swift_bridgeObjectRetain(v2079);
                            }
                            v2082 = *((_QWORD *)v125 + 546);
                            if (v2082 == 1)
                            {
                              v2083 = *((_OWORD *)v125 + 273);
                              *(_OWORD *)(v124 + 4377) = *(_OWORD *)(v125 + 4377);
                              *((_OWORD *)v124 + 273) = v2083;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 546) = v2082;
                              v124[4376] = v125[4376];
                              v2084 = *((_QWORD *)v125 + 548);
                              v124[4392] = v125[4392];
                              *((_QWORD *)v124 + 548) = v2084;
                              swift_bridgeObjectRetain(v2082);
                            }
                            v2085 = *((_QWORD *)v125 + 550);
                            if (v2085 == 1)
                            {
                              v2086 = *((_OWORD *)v125 + 275);
                              *(_OWORD *)(v124 + 4409) = *(_OWORD *)(v125 + 4409);
                              *((_OWORD *)v124 + 275) = v2086;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 550) = v2085;
                              v124[4408] = v125[4408];
                              v2087 = *((_QWORD *)v125 + 552);
                              v124[4424] = v125[4424];
                              *((_QWORD *)v124 + 552) = v2087;
                              swift_bridgeObjectRetain(v2085);
                            }
                            v2088 = *((_QWORD *)v125 + 554);
                            if (v2088 == 1)
                            {
                              v2089 = *((_OWORD *)v125 + 277);
                              *(_OWORD *)(v124 + 4441) = *(_OWORD *)(v125 + 4441);
                              *((_OWORD *)v124 + 277) = v2089;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 554) = v2088;
                              v124[4440] = v125[4440];
                              v2090 = *((_QWORD *)v125 + 556);
                              v124[4456] = v125[4456];
                              *((_QWORD *)v124 + 556) = v2090;
                              swift_bridgeObjectRetain(v2088);
                            }
                            v2091 = *((_QWORD *)v125 + 558);
                            if (v2091 == 1)
                            {
                              v2092 = *((_OWORD *)v125 + 279);
                              *(_OWORD *)(v124 + 4473) = *(_OWORD *)(v125 + 4473);
                              *((_OWORD *)v124 + 279) = v2092;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 558) = v2091;
                              v124[4472] = v125[4472];
                              v2093 = *((_QWORD *)v125 + 560);
                              v124[4488] = v125[4488];
                              *((_QWORD *)v124 + 560) = v2093;
                              swift_bridgeObjectRetain(v2091);
                            }
                            v2094 = *((_QWORD *)v125 + 562);
                            if (v2094 == 1)
                            {
                              v2095 = *((_OWORD *)v125 + 281);
                              *(_OWORD *)(v124 + 4505) = *(_OWORD *)(v125 + 4505);
                              *((_OWORD *)v124 + 281) = v2095;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 562) = v2094;
                              v124[4504] = v125[4504];
                              v2096 = *((_QWORD *)v125 + 564);
                              v124[4520] = v125[4520];
                              *((_QWORD *)v124 + 564) = v2096;
                              swift_bridgeObjectRetain(v2094);
                            }
                            v2097 = *((_QWORD *)v125 + 566);
                            if (v2097 == 1)
                            {
                              v2098 = *((_OWORD *)v125 + 283);
                              *(_OWORD *)(v124 + 4537) = *(_OWORD *)(v125 + 4537);
                              *((_OWORD *)v124 + 283) = v2098;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 566) = v2097;
                              v124[4536] = v125[4536];
                              v2099 = *((_QWORD *)v125 + 568);
                              v124[4552] = v125[4552];
                              *((_QWORD *)v124 + 568) = v2099;
                              swift_bridgeObjectRetain(v2097);
                            }
                            v2100 = *((_QWORD *)v125 + 570);
                            if (v2100 == 1)
                            {
                              v2101 = *((_OWORD *)v125 + 285);
                              *(_OWORD *)(v124 + 4569) = *(_OWORD *)(v125 + 4569);
                              *((_OWORD *)v124 + 285) = v2101;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 570) = v2100;
                              v124[4568] = v125[4568];
                              v2102 = *((_QWORD *)v125 + 572);
                              v124[4584] = v125[4584];
                              *((_QWORD *)v124 + 572) = v2102;
                              swift_bridgeObjectRetain(v2100);
                            }
                            v2103 = *((_QWORD *)v125 + 574);
                            if (v2103 == 1)
                            {
                              v2104 = *((_OWORD *)v125 + 287);
                              *(_OWORD *)(v124 + 4601) = *(_OWORD *)(v125 + 4601);
                              *((_OWORD *)v124 + 287) = v2104;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 574) = v2103;
                              v124[4600] = v125[4600];
                              v2105 = *((_QWORD *)v125 + 576);
                              v124[4616] = v125[4616];
                              *((_QWORD *)v124 + 576) = v2105;
                              swift_bridgeObjectRetain(v2103);
                            }
                            v2106 = *((_QWORD *)v125 + 578);
                            if (v2106 == 1)
                            {
                              v2107 = *((_OWORD *)v125 + 289);
                              *(_OWORD *)(v124 + 4633) = *(_OWORD *)(v125 + 4633);
                              *((_OWORD *)v124 + 289) = v2107;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 578) = v2106;
                              v124[4632] = v125[4632];
                              v2108 = *((_QWORD *)v125 + 580);
                              v124[4648] = v125[4648];
                              *((_QWORD *)v124 + 580) = v2108;
                              swift_bridgeObjectRetain(v2106);
                            }
                            v2109 = *((_QWORD *)v125 + 582);
                            if (v2109 == 1)
                            {
                              v2110 = *((_OWORD *)v125 + 291);
                              *(_OWORD *)(v124 + 4665) = *(_OWORD *)(v125 + 4665);
                              *((_OWORD *)v124 + 291) = v2110;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 582) = v2109;
                              v124[4664] = v125[4664];
                              v2111 = *((_QWORD *)v125 + 584);
                              v124[4680] = v125[4680];
                              *((_QWORD *)v124 + 584) = v2111;
                              swift_bridgeObjectRetain(v2109);
                            }
                            v2112 = *((_QWORD *)v125 + 586);
                            if (v2112 == 1)
                            {
                              v2113 = *((_OWORD *)v125 + 293);
                              *(_OWORD *)(v124 + 4697) = *(_OWORD *)(v125 + 4697);
                              *((_OWORD *)v124 + 293) = v2113;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 586) = v2112;
                              v124[4696] = v125[4696];
                              v2114 = *((_QWORD *)v125 + 588);
                              v124[4712] = v125[4712];
                              *((_QWORD *)v124 + 588) = v2114;
                              swift_bridgeObjectRetain(v2112);
                            }
                            v2115 = *((_QWORD *)v125 + 590);
                            if (v2115 == 1)
                            {
                              v2116 = *((_OWORD *)v125 + 295);
                              *(_OWORD *)(v124 + 4729) = *(_OWORD *)(v125 + 4729);
                              *((_OWORD *)v124 + 295) = v2116;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 590) = v2115;
                              v124[4728] = v125[4728];
                              v2117 = *((_QWORD *)v125 + 592);
                              v124[4744] = v125[4744];
                              *((_QWORD *)v124 + 592) = v2117;
                              swift_bridgeObjectRetain(v2115);
                            }
                            v2118 = *((_QWORD *)v125 + 594);
                            if (v2118 == 1)
                            {
                              v2119 = *((_OWORD *)v125 + 297);
                              *(_OWORD *)(v124 + 4761) = *(_OWORD *)(v125 + 4761);
                              *((_OWORD *)v124 + 297) = v2119;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 594) = v2118;
                              v124[4760] = v125[4760];
                              v2120 = *((_QWORD *)v125 + 596);
                              v124[4776] = v125[4776];
                              *((_QWORD *)v124 + 596) = v2120;
                              swift_bridgeObjectRetain(v2118);
                            }
                            v2121 = *((_QWORD *)v125 + 598);
                            if (v2121 == 1)
                            {
                              v2122 = *((_OWORD *)v125 + 299);
                              *(_OWORD *)(v124 + 4793) = *(_OWORD *)(v125 + 4793);
                              *((_OWORD *)v124 + 299) = v2122;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 598) = v2121;
                              v124[4792] = v125[4792];
                              v2123 = *((_QWORD *)v125 + 600);
                              v124[4808] = v125[4808];
                              *((_QWORD *)v124 + 600) = v2123;
                              swift_bridgeObjectRetain(v2121);
                            }
                            v2124 = *((_QWORD *)v125 + 602);
                            if (v2124 == 1)
                            {
                              v2125 = *((_OWORD *)v125 + 301);
                              *(_OWORD *)(v124 + 4825) = *(_OWORD *)(v125 + 4825);
                              *((_OWORD *)v124 + 301) = v2125;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 602) = v2124;
                              v124[4824] = v125[4824];
                              v2126 = *((_QWORD *)v125 + 604);
                              v124[4840] = v125[4840];
                              *((_QWORD *)v124 + 604) = v2126;
                              swift_bridgeObjectRetain(v2124);
                            }
                            v2127 = *((_QWORD *)v125 + 606);
                            if (v2127 == 1)
                            {
                              v2128 = *((_OWORD *)v125 + 303);
                              *(_OWORD *)(v124 + 4857) = *(_OWORD *)(v125 + 4857);
                              *((_OWORD *)v124 + 303) = v2128;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 606) = v2127;
                              v124[4856] = v125[4856];
                              v2129 = *((_QWORD *)v125 + 608);
                              v124[4872] = v125[4872];
                              *((_QWORD *)v124 + 608) = v2129;
                              swift_bridgeObjectRetain(v2127);
                            }
                            v2130 = *((_QWORD *)v125 + 610);
                            if (v2130 == 1)
                            {
                              v2131 = *((_OWORD *)v125 + 305);
                              *(_OWORD *)(v124 + 4889) = *(_OWORD *)(v125 + 4889);
                              *((_OWORD *)v124 + 305) = v2131;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 610) = v2130;
                              v124[4888] = v125[4888];
                              v2132 = *((_QWORD *)v125 + 612);
                              v124[4904] = v125[4904];
                              *((_QWORD *)v124 + 612) = v2132;
                              swift_bridgeObjectRetain(v2130);
                            }
                            v2133 = *((_QWORD *)v125 + 614);
                            if (v2133 == 1)
                            {
                              v2134 = *((_OWORD *)v125 + 307);
                              *(_OWORD *)(v124 + 4921) = *(_OWORD *)(v125 + 4921);
                              *((_OWORD *)v124 + 307) = v2134;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 614) = v2133;
                              v124[4920] = v125[4920];
                              v2135 = *((_QWORD *)v125 + 616);
                              v124[4936] = v125[4936];
                              *((_QWORD *)v124 + 616) = v2135;
                              swift_bridgeObjectRetain(v2133);
                            }
                            v2136 = *((_OWORD *)v125 + 309);
                            v124[4960] = v125[4960];
                            *((_OWORD *)v124 + 309) = v2136;
                            v2137 = v125[4984];
                            *(_OWORD *)(v124 + 4968) = *(_OWORD *)(v125 + 4968);
                            v124[4984] = v2137;
                            v124[4985] = v125[4985];
                            v124[4986] = v125[4986];
                            v124[4987] = v125[4987];
                            v124[4988] = v125[4988];
                            v124[4989] = v125[4989];
                            v124[4990] = v125[4990];
                            v124[4991] = v125[4991];
                            v2138 = *((_QWORD *)v125 + 624);
                            *((_QWORD *)v124 + 624) = v2138;
                            v2139 = *((_QWORD *)v125 + 625);
                            *((_QWORD *)v124 + 625) = v2139;
                            swift_bridgeObjectRetain(v2138);
                            swift_bridgeObjectRetain(v2139);
                            goto LABEL_2028;
                          }
                        }
                        else
                        {
                          if (v2059 != 1)
                          {
                            v2062 = *(_QWORD *)v2057;
                            v2063 = *v2058;
                            if (*(_QWORD *)v2057 == 1)
                            {
                              if (v2063 == 1)
                              {
                                v2064 = *(_OWORD *)v2058;
                                *(_OWORD *)(v124 + 4185) = *(_OWORD *)(v125 + 4185);
                                *v2057 = v2064;
                              }
                              else
                              {
                                *((_QWORD *)v124 + 522) = v2063;
                                v124[4184] = v125[4184];
                                v2140 = *((_QWORD *)v125 + 524);
                                v124[4200] = v125[4200];
                                *((_QWORD *)v124 + 524) = v2140;
                                swift_bridgeObjectRetain(v2063);
                              }
                            }
                            else if (v2063 == 1)
                            {
                              sub_100083F00((_QWORD *)v124 + 522);
                              v2068 = *(_OWORD *)(v125 + 4185);
                              *v2057 = *(_OWORD *)v2058;
                              *(_OWORD *)(v124 + 4185) = v2068;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 522) = v2063;
                              swift_bridgeObjectRetain(v2063);
                              swift_bridgeObjectRelease(v2062);
                              v124[4184] = v125[4184];
                              v2141 = *((_QWORD *)v125 + 524);
                              v124[4200] = v125[4200];
                              *((_QWORD *)v124 + 524) = v2141;
                            }
                            v2142 = (__int128 *)(v124 + 4208);
                            v2143 = (__int128 *)(v125 + 4208);
                            v2144 = *((_QWORD *)v124 + 526);
                            v2145 = *((_QWORD *)v125 + 526);
                            if (v2144 == 1)
                            {
                              if (v2145 == 1)
                              {
                                v2146 = *v2143;
                                *(_OWORD *)(v124 + 4217) = *(_OWORD *)(v125 + 4217);
                                *v2142 = v2146;
                              }
                              else
                              {
                                *((_QWORD *)v124 + 526) = v2145;
                                v124[4216] = v125[4216];
                                v2148 = *((_QWORD *)v125 + 528);
                                v124[4232] = v125[4232];
                                *((_QWORD *)v124 + 528) = v2148;
                                swift_bridgeObjectRetain(v2145);
                              }
                            }
                            else if (v2145 == 1)
                            {
                              sub_100083F00((_QWORD *)v124 + 526);
                              v2147 = *(_OWORD *)(v125 + 4217);
                              *v2142 = *v2143;
                              *(_OWORD *)(v124 + 4217) = v2147;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 526) = v2145;
                              swift_bridgeObjectRetain(v2145);
                              swift_bridgeObjectRelease(v2144);
                              v124[4216] = v125[4216];
                              v2149 = *((_QWORD *)v125 + 528);
                              v124[4232] = v125[4232];
                              *((_QWORD *)v124 + 528) = v2149;
                            }
                            v2150 = (__int128 *)(v124 + 4240);
                            v2151 = (__int128 *)(v125 + 4240);
                            v2152 = *((_QWORD *)v124 + 530);
                            v2153 = *((_QWORD *)v125 + 530);
                            if (v2152 == 1)
                            {
                              if (v2153 == 1)
                              {
                                v2154 = *v2151;
                                *(_OWORD *)(v124 + 4249) = *(_OWORD *)(v125 + 4249);
                                *v2150 = v2154;
                              }
                              else
                              {
                                *((_QWORD *)v124 + 530) = v2153;
                                v124[4248] = v125[4248];
                                v2156 = *((_QWORD *)v125 + 532);
                                v124[4264] = v125[4264];
                                *((_QWORD *)v124 + 532) = v2156;
                                swift_bridgeObjectRetain(v2153);
                              }
                            }
                            else if (v2153 == 1)
                            {
                              sub_100083F00((_QWORD *)v124 + 530);
                              v2155 = *(_OWORD *)(v125 + 4249);
                              *v2150 = *v2151;
                              *(_OWORD *)(v124 + 4249) = v2155;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 530) = v2153;
                              swift_bridgeObjectRetain(v2153);
                              swift_bridgeObjectRelease(v2152);
                              v124[4248] = v125[4248];
                              v2157 = *((_QWORD *)v125 + 532);
                              v124[4264] = v125[4264];
                              *((_QWORD *)v124 + 532) = v2157;
                            }
                            v2158 = (__int128 *)(v124 + 4272);
                            v2159 = (__int128 *)(v125 + 4272);
                            v2160 = *((_QWORD *)v124 + 534);
                            v2161 = *((_QWORD *)v125 + 534);
                            if (v2160 == 1)
                            {
                              if (v2161 == 1)
                              {
                                v2162 = *v2159;
                                *(_OWORD *)(v124 + 4281) = *(_OWORD *)(v125 + 4281);
                                *v2158 = v2162;
                              }
                              else
                              {
                                *((_QWORD *)v124 + 534) = v2161;
                                v124[4280] = v125[4280];
                                v2164 = *((_QWORD *)v125 + 536);
                                v124[4296] = v125[4296];
                                *((_QWORD *)v124 + 536) = v2164;
                                swift_bridgeObjectRetain(v2161);
                              }
                            }
                            else if (v2161 == 1)
                            {
                              sub_100083F00((_QWORD *)v124 + 534);
                              v2163 = *(_OWORD *)(v125 + 4281);
                              *v2158 = *v2159;
                              *(_OWORD *)(v124 + 4281) = v2163;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 534) = v2161;
                              swift_bridgeObjectRetain(v2161);
                              swift_bridgeObjectRelease(v2160);
                              v124[4280] = v125[4280];
                              v2165 = *((_QWORD *)v125 + 536);
                              v124[4296] = v125[4296];
                              *((_QWORD *)v124 + 536) = v2165;
                            }
                            v2166 = (__int128 *)(v124 + 4304);
                            v2167 = (__int128 *)(v125 + 4304);
                            v2168 = *((_QWORD *)v124 + 538);
                            v2169 = *((_QWORD *)v125 + 538);
                            if (v2168 == 1)
                            {
                              if (v2169 == 1)
                              {
                                v2170 = *v2167;
                                *(_OWORD *)(v124 + 4313) = *(_OWORD *)(v125 + 4313);
                                *v2166 = v2170;
                              }
                              else
                              {
                                *((_QWORD *)v124 + 538) = v2169;
                                v124[4312] = v125[4312];
                                v2172 = *((_QWORD *)v125 + 540);
                                v124[4328] = v125[4328];
                                *((_QWORD *)v124 + 540) = v2172;
                                swift_bridgeObjectRetain(v2169);
                              }
                            }
                            else if (v2169 == 1)
                            {
                              sub_100083F00((_QWORD *)v124 + 538);
                              v2171 = *(_OWORD *)(v125 + 4313);
                              *v2166 = *v2167;
                              *(_OWORD *)(v124 + 4313) = v2171;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 538) = v2169;
                              swift_bridgeObjectRetain(v2169);
                              swift_bridgeObjectRelease(v2168);
                              v124[4312] = v125[4312];
                              v2173 = *((_QWORD *)v125 + 540);
                              v124[4328] = v125[4328];
                              *((_QWORD *)v124 + 540) = v2173;
                            }
                            v2174 = (__int128 *)(v124 + 4336);
                            v2175 = (__int128 *)(v125 + 4336);
                            v2176 = *((_QWORD *)v124 + 542);
                            v2177 = *((_QWORD *)v125 + 542);
                            if (v2176 == 1)
                            {
                              if (v2177 == 1)
                              {
                                v2178 = *v2175;
                                *(_OWORD *)(v124 + 4345) = *(_OWORD *)(v125 + 4345);
                                *v2174 = v2178;
                              }
                              else
                              {
                                *((_QWORD *)v124 + 542) = v2177;
                                v124[4344] = v125[4344];
                                v2180 = *((_QWORD *)v125 + 544);
                                v124[4360] = v125[4360];
                                *((_QWORD *)v124 + 544) = v2180;
                                swift_bridgeObjectRetain(v2177);
                              }
                            }
                            else if (v2177 == 1)
                            {
                              sub_100083F00((_QWORD *)v124 + 542);
                              v2179 = *(_OWORD *)(v125 + 4345);
                              *v2174 = *v2175;
                              *(_OWORD *)(v124 + 4345) = v2179;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 542) = v2177;
                              swift_bridgeObjectRetain(v2177);
                              swift_bridgeObjectRelease(v2176);
                              v124[4344] = v125[4344];
                              v2181 = *((_QWORD *)v125 + 544);
                              v124[4360] = v125[4360];
                              *((_QWORD *)v124 + 544) = v2181;
                            }
                            v2182 = (__int128 *)(v124 + 4368);
                            v2183 = (__int128 *)(v125 + 4368);
                            v2184 = *((_QWORD *)v124 + 546);
                            v2185 = *((_QWORD *)v125 + 546);
                            if (v2184 == 1)
                            {
                              if (v2185 == 1)
                              {
                                v2186 = *v2183;
                                *(_OWORD *)(v124 + 4377) = *(_OWORD *)(v125 + 4377);
                                *v2182 = v2186;
                              }
                              else
                              {
                                *((_QWORD *)v124 + 546) = v2185;
                                v124[4376] = v125[4376];
                                v2188 = *((_QWORD *)v125 + 548);
                                v124[4392] = v125[4392];
                                *((_QWORD *)v124 + 548) = v2188;
                                swift_bridgeObjectRetain(v2185);
                              }
                            }
                            else if (v2185 == 1)
                            {
                              sub_100083F00((_QWORD *)v124 + 546);
                              v2187 = *(_OWORD *)(v125 + 4377);
                              *v2182 = *v2183;
                              *(_OWORD *)(v124 + 4377) = v2187;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 546) = v2185;
                              swift_bridgeObjectRetain(v2185);
                              swift_bridgeObjectRelease(v2184);
                              v124[4376] = v125[4376];
                              v2189 = *((_QWORD *)v125 + 548);
                              v124[4392] = v125[4392];
                              *((_QWORD *)v124 + 548) = v2189;
                            }
                            v2190 = (__int128 *)(v124 + 4400);
                            v2191 = (__int128 *)(v125 + 4400);
                            v2192 = *((_QWORD *)v124 + 550);
                            v2193 = *((_QWORD *)v125 + 550);
                            if (v2192 == 1)
                            {
                              if (v2193 == 1)
                              {
                                v2194 = *v2191;
                                *(_OWORD *)(v124 + 4409) = *(_OWORD *)(v125 + 4409);
                                *v2190 = v2194;
                              }
                              else
                              {
                                *((_QWORD *)v124 + 550) = v2193;
                                v124[4408] = v125[4408];
                                v2196 = *((_QWORD *)v125 + 552);
                                v124[4424] = v125[4424];
                                *((_QWORD *)v124 + 552) = v2196;
                                swift_bridgeObjectRetain(v2193);
                              }
                            }
                            else if (v2193 == 1)
                            {
                              sub_100083F00((_QWORD *)v124 + 550);
                              v2195 = *(_OWORD *)(v125 + 4409);
                              *v2190 = *v2191;
                              *(_OWORD *)(v124 + 4409) = v2195;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 550) = v2193;
                              swift_bridgeObjectRetain(v2193);
                              swift_bridgeObjectRelease(v2192);
                              v124[4408] = v125[4408];
                              v2197 = *((_QWORD *)v125 + 552);
                              v124[4424] = v125[4424];
                              *((_QWORD *)v124 + 552) = v2197;
                            }
                            v2198 = (__int128 *)(v124 + 4432);
                            v2199 = (__int128 *)(v125 + 4432);
                            v2200 = *((_QWORD *)v124 + 554);
                            v2201 = *((_QWORD *)v125 + 554);
                            if (v2200 == 1)
                            {
                              if (v2201 == 1)
                              {
                                v2202 = *v2199;
                                *(_OWORD *)(v124 + 4441) = *(_OWORD *)(v125 + 4441);
                                *v2198 = v2202;
                              }
                              else
                              {
                                *((_QWORD *)v124 + 554) = v2201;
                                v124[4440] = v125[4440];
                                v2204 = *((_QWORD *)v125 + 556);
                                v124[4456] = v125[4456];
                                *((_QWORD *)v124 + 556) = v2204;
                                swift_bridgeObjectRetain(v2201);
                              }
                            }
                            else if (v2201 == 1)
                            {
                              sub_100083F00((_QWORD *)v124 + 554);
                              v2203 = *(_OWORD *)(v125 + 4441);
                              *v2198 = *v2199;
                              *(_OWORD *)(v124 + 4441) = v2203;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 554) = v2201;
                              swift_bridgeObjectRetain(v2201);
                              swift_bridgeObjectRelease(v2200);
                              v124[4440] = v125[4440];
                              v2205 = *((_QWORD *)v125 + 556);
                              v124[4456] = v125[4456];
                              *((_QWORD *)v124 + 556) = v2205;
                            }
                            v2206 = (__int128 *)(v124 + 4464);
                            v2207 = (__int128 *)(v125 + 4464);
                            v2208 = *((_QWORD *)v124 + 558);
                            v2209 = *((_QWORD *)v125 + 558);
                            if (v2208 == 1)
                            {
                              if (v2209 == 1)
                              {
                                v2210 = *v2207;
                                *(_OWORD *)(v124 + 4473) = *(_OWORD *)(v125 + 4473);
                                *v2206 = v2210;
                              }
                              else
                              {
                                *((_QWORD *)v124 + 558) = v2209;
                                v124[4472] = v125[4472];
                                v2212 = *((_QWORD *)v125 + 560);
                                v124[4488] = v125[4488];
                                *((_QWORD *)v124 + 560) = v2212;
                                swift_bridgeObjectRetain(v2209);
                              }
                            }
                            else if (v2209 == 1)
                            {
                              sub_100083F00((_QWORD *)v124 + 558);
                              v2211 = *(_OWORD *)(v125 + 4473);
                              *v2206 = *v2207;
                              *(_OWORD *)(v124 + 4473) = v2211;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 558) = v2209;
                              swift_bridgeObjectRetain(v2209);
                              swift_bridgeObjectRelease(v2208);
                              v124[4472] = v125[4472];
                              v2213 = *((_QWORD *)v125 + 560);
                              v124[4488] = v125[4488];
                              *((_QWORD *)v124 + 560) = v2213;
                            }
                            v2214 = (__int128 *)(v124 + 4496);
                            v2215 = (__int128 *)(v125 + 4496);
                            v2216 = *((_QWORD *)v124 + 562);
                            v2217 = *((_QWORD *)v125 + 562);
                            if (v2216 == 1)
                            {
                              if (v2217 == 1)
                              {
                                v2218 = *v2215;
                                *(_OWORD *)(v124 + 4505) = *(_OWORD *)(v125 + 4505);
                                *v2214 = v2218;
                              }
                              else
                              {
                                *((_QWORD *)v124 + 562) = v2217;
                                v124[4504] = v125[4504];
                                v2220 = *((_QWORD *)v125 + 564);
                                v124[4520] = v125[4520];
                                *((_QWORD *)v124 + 564) = v2220;
                                swift_bridgeObjectRetain(v2217);
                              }
                            }
                            else if (v2217 == 1)
                            {
                              sub_100083F00((_QWORD *)v124 + 562);
                              v2219 = *(_OWORD *)(v125 + 4505);
                              *v2214 = *v2215;
                              *(_OWORD *)(v124 + 4505) = v2219;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 562) = v2217;
                              swift_bridgeObjectRetain(v2217);
                              swift_bridgeObjectRelease(v2216);
                              v124[4504] = v125[4504];
                              v2221 = *((_QWORD *)v125 + 564);
                              v124[4520] = v125[4520];
                              *((_QWORD *)v124 + 564) = v2221;
                            }
                            v2222 = (__int128 *)(v124 + 4528);
                            v2223 = (__int128 *)(v125 + 4528);
                            v2224 = *((_QWORD *)v124 + 566);
                            v2225 = *((_QWORD *)v125 + 566);
                            if (v2224 == 1)
                            {
                              if (v2225 == 1)
                              {
                                v2226 = *v2223;
                                *(_OWORD *)(v124 + 4537) = *(_OWORD *)(v125 + 4537);
                                *v2222 = v2226;
                              }
                              else
                              {
                                *((_QWORD *)v124 + 566) = v2225;
                                v124[4536] = v125[4536];
                                v2228 = *((_QWORD *)v125 + 568);
                                v124[4552] = v125[4552];
                                *((_QWORD *)v124 + 568) = v2228;
                                swift_bridgeObjectRetain(v2225);
                              }
                            }
                            else if (v2225 == 1)
                            {
                              sub_100083F00((_QWORD *)v124 + 566);
                              v2227 = *(_OWORD *)(v125 + 4537);
                              *v2222 = *v2223;
                              *(_OWORD *)(v124 + 4537) = v2227;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 566) = v2225;
                              swift_bridgeObjectRetain(v2225);
                              swift_bridgeObjectRelease(v2224);
                              v124[4536] = v125[4536];
                              v2229 = *((_QWORD *)v125 + 568);
                              v124[4552] = v125[4552];
                              *((_QWORD *)v124 + 568) = v2229;
                            }
                            v2230 = (__int128 *)(v124 + 4560);
                            v2231 = (__int128 *)(v125 + 4560);
                            v2232 = *((_QWORD *)v124 + 570);
                            v2233 = *((_QWORD *)v125 + 570);
                            if (v2232 == 1)
                            {
                              if (v2233 == 1)
                              {
                                v2234 = *v2231;
                                *(_OWORD *)(v124 + 4569) = *(_OWORD *)(v125 + 4569);
                                *v2230 = v2234;
                              }
                              else
                              {
                                *((_QWORD *)v124 + 570) = v2233;
                                v124[4568] = v125[4568];
                                v2236 = *((_QWORD *)v125 + 572);
                                v124[4584] = v125[4584];
                                *((_QWORD *)v124 + 572) = v2236;
                                swift_bridgeObjectRetain(v2233);
                              }
                            }
                            else if (v2233 == 1)
                            {
                              sub_100083F00((_QWORD *)v124 + 570);
                              v2235 = *(_OWORD *)(v125 + 4569);
                              *v2230 = *v2231;
                              *(_OWORD *)(v124 + 4569) = v2235;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 570) = v2233;
                              swift_bridgeObjectRetain(v2233);
                              swift_bridgeObjectRelease(v2232);
                              v124[4568] = v125[4568];
                              v2237 = *((_QWORD *)v125 + 572);
                              v124[4584] = v125[4584];
                              *((_QWORD *)v124 + 572) = v2237;
                            }
                            v2238 = (__int128 *)(v124 + 4592);
                            v2239 = (__int128 *)(v125 + 4592);
                            v2240 = *((_QWORD *)v124 + 574);
                            v2241 = *((_QWORD *)v125 + 574);
                            if (v2240 == 1)
                            {
                              if (v2241 == 1)
                              {
                                v2242 = *v2239;
                                *(_OWORD *)(v124 + 4601) = *(_OWORD *)(v125 + 4601);
                                *v2238 = v2242;
                              }
                              else
                              {
                                *((_QWORD *)v124 + 574) = v2241;
                                v124[4600] = v125[4600];
                                v2244 = *((_QWORD *)v125 + 576);
                                v124[4616] = v125[4616];
                                *((_QWORD *)v124 + 576) = v2244;
                                swift_bridgeObjectRetain(v2241);
                              }
                            }
                            else if (v2241 == 1)
                            {
                              sub_100083F00((_QWORD *)v124 + 574);
                              v2243 = *(_OWORD *)(v125 + 4601);
                              *v2238 = *v2239;
                              *(_OWORD *)(v124 + 4601) = v2243;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 574) = v2241;
                              swift_bridgeObjectRetain(v2241);
                              swift_bridgeObjectRelease(v2240);
                              v124[4600] = v125[4600];
                              v2245 = *((_QWORD *)v125 + 576);
                              v124[4616] = v125[4616];
                              *((_QWORD *)v124 + 576) = v2245;
                            }
                            v2246 = (__int128 *)(v124 + 4624);
                            v2247 = (__int128 *)(v125 + 4624);
                            v2248 = *((_QWORD *)v124 + 578);
                            v2249 = *((_QWORD *)v125 + 578);
                            if (v2248 == 1)
                            {
                              if (v2249 == 1)
                              {
                                v2250 = *v2247;
                                *(_OWORD *)(v124 + 4633) = *(_OWORD *)(v125 + 4633);
                                *v2246 = v2250;
                              }
                              else
                              {
                                *((_QWORD *)v124 + 578) = v2249;
                                v124[4632] = v125[4632];
                                v2252 = *((_QWORD *)v125 + 580);
                                v124[4648] = v125[4648];
                                *((_QWORD *)v124 + 580) = v2252;
                                swift_bridgeObjectRetain(v2249);
                              }
                            }
                            else if (v2249 == 1)
                            {
                              sub_100083F00((_QWORD *)v124 + 578);
                              v2251 = *(_OWORD *)(v125 + 4633);
                              *v2246 = *v2247;
                              *(_OWORD *)(v124 + 4633) = v2251;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 578) = v2249;
                              swift_bridgeObjectRetain(v2249);
                              swift_bridgeObjectRelease(v2248);
                              v124[4632] = v125[4632];
                              v2253 = *((_QWORD *)v125 + 580);
                              v124[4648] = v125[4648];
                              *((_QWORD *)v124 + 580) = v2253;
                            }
                            v2254 = (__int128 *)(v124 + 4656);
                            v2255 = (__int128 *)(v125 + 4656);
                            v2256 = *((_QWORD *)v124 + 582);
                            v2257 = *((_QWORD *)v125 + 582);
                            if (v2256 == 1)
                            {
                              if (v2257 == 1)
                              {
                                v2258 = *v2255;
                                *(_OWORD *)(v124 + 4665) = *(_OWORD *)(v125 + 4665);
                                *v2254 = v2258;
                              }
                              else
                              {
                                *((_QWORD *)v124 + 582) = v2257;
                                v124[4664] = v125[4664];
                                v2260 = *((_QWORD *)v125 + 584);
                                v124[4680] = v125[4680];
                                *((_QWORD *)v124 + 584) = v2260;
                                swift_bridgeObjectRetain(v2257);
                              }
                            }
                            else if (v2257 == 1)
                            {
                              sub_100083F00((_QWORD *)v124 + 582);
                              v2259 = *(_OWORD *)(v125 + 4665);
                              *v2254 = *v2255;
                              *(_OWORD *)(v124 + 4665) = v2259;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 582) = v2257;
                              swift_bridgeObjectRetain(v2257);
                              swift_bridgeObjectRelease(v2256);
                              v124[4664] = v125[4664];
                              v2261 = *((_QWORD *)v125 + 584);
                              v124[4680] = v125[4680];
                              *((_QWORD *)v124 + 584) = v2261;
                            }
                            v2262 = (__int128 *)(v124 + 4688);
                            v2263 = (__int128 *)(v125 + 4688);
                            v2264 = *((_QWORD *)v124 + 586);
                            v2265 = *((_QWORD *)v125 + 586);
                            if (v2264 == 1)
                            {
                              if (v2265 == 1)
                              {
                                v2266 = *v2263;
                                *(_OWORD *)(v124 + 4697) = *(_OWORD *)(v125 + 4697);
                                *v2262 = v2266;
                              }
                              else
                              {
                                *((_QWORD *)v124 + 586) = v2265;
                                v124[4696] = v125[4696];
                                v2268 = *((_QWORD *)v125 + 588);
                                v124[4712] = v125[4712];
                                *((_QWORD *)v124 + 588) = v2268;
                                swift_bridgeObjectRetain(v2265);
                              }
                            }
                            else if (v2265 == 1)
                            {
                              sub_100083F00((_QWORD *)v124 + 586);
                              v2267 = *(_OWORD *)(v125 + 4697);
                              *v2262 = *v2263;
                              *(_OWORD *)(v124 + 4697) = v2267;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 586) = v2265;
                              swift_bridgeObjectRetain(v2265);
                              swift_bridgeObjectRelease(v2264);
                              v124[4696] = v125[4696];
                              v2269 = *((_QWORD *)v125 + 588);
                              v124[4712] = v125[4712];
                              *((_QWORD *)v124 + 588) = v2269;
                            }
                            v2270 = (__int128 *)(v124 + 4720);
                            v2271 = (__int128 *)(v125 + 4720);
                            v2272 = *((_QWORD *)v124 + 590);
                            v2273 = *((_QWORD *)v125 + 590);
                            if (v2272 == 1)
                            {
                              if (v2273 == 1)
                              {
                                v2274 = *v2271;
                                *(_OWORD *)(v124 + 4729) = *(_OWORD *)(v125 + 4729);
                                *v2270 = v2274;
                              }
                              else
                              {
                                *((_QWORD *)v124 + 590) = v2273;
                                v124[4728] = v125[4728];
                                v2276 = *((_QWORD *)v125 + 592);
                                v124[4744] = v125[4744];
                                *((_QWORD *)v124 + 592) = v2276;
                                swift_bridgeObjectRetain(v2273);
                              }
                            }
                            else if (v2273 == 1)
                            {
                              sub_100083F00((_QWORD *)v124 + 590);
                              v2275 = *(_OWORD *)(v125 + 4729);
                              *v2270 = *v2271;
                              *(_OWORD *)(v124 + 4729) = v2275;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 590) = v2273;
                              swift_bridgeObjectRetain(v2273);
                              swift_bridgeObjectRelease(v2272);
                              v124[4728] = v125[4728];
                              v2277 = *((_QWORD *)v125 + 592);
                              v124[4744] = v125[4744];
                              *((_QWORD *)v124 + 592) = v2277;
                            }
                            v2278 = (__int128 *)(v124 + 4752);
                            v2279 = (__int128 *)(v125 + 4752);
                            v2280 = *((_QWORD *)v124 + 594);
                            v2281 = *((_QWORD *)v125 + 594);
                            if (v2280 == 1)
                            {
                              if (v2281 == 1)
                              {
                                v2282 = *v2279;
                                *(_OWORD *)(v124 + 4761) = *(_OWORD *)(v125 + 4761);
                                *v2278 = v2282;
                              }
                              else
                              {
                                *((_QWORD *)v124 + 594) = v2281;
                                v124[4760] = v125[4760];
                                v2284 = *((_QWORD *)v125 + 596);
                                v124[4776] = v125[4776];
                                *((_QWORD *)v124 + 596) = v2284;
                                swift_bridgeObjectRetain(v2281);
                              }
                            }
                            else if (v2281 == 1)
                            {
                              sub_100083F00((_QWORD *)v124 + 594);
                              v2283 = *(_OWORD *)(v125 + 4761);
                              *v2278 = *v2279;
                              *(_OWORD *)(v124 + 4761) = v2283;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 594) = v2281;
                              swift_bridgeObjectRetain(v2281);
                              swift_bridgeObjectRelease(v2280);
                              v124[4760] = v125[4760];
                              v2285 = *((_QWORD *)v125 + 596);
                              v124[4776] = v125[4776];
                              *((_QWORD *)v124 + 596) = v2285;
                            }
                            v2286 = (__int128 *)(v124 + 4784);
                            v2287 = (__int128 *)(v125 + 4784);
                            v2288 = *((_QWORD *)v124 + 598);
                            v2289 = *((_QWORD *)v125 + 598);
                            if (v2288 == 1)
                            {
                              if (v2289 == 1)
                              {
                                v2290 = *v2287;
                                *(_OWORD *)(v124 + 4793) = *(_OWORD *)(v125 + 4793);
                                *v2286 = v2290;
                              }
                              else
                              {
                                *((_QWORD *)v124 + 598) = v2289;
                                v124[4792] = v125[4792];
                                v2292 = *((_QWORD *)v125 + 600);
                                v124[4808] = v125[4808];
                                *((_QWORD *)v124 + 600) = v2292;
                                swift_bridgeObjectRetain(v2289);
                              }
                            }
                            else if (v2289 == 1)
                            {
                              sub_100083F00((_QWORD *)v124 + 598);
                              v2291 = *(_OWORD *)(v125 + 4793);
                              *v2286 = *v2287;
                              *(_OWORD *)(v124 + 4793) = v2291;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 598) = v2289;
                              swift_bridgeObjectRetain(v2289);
                              swift_bridgeObjectRelease(v2288);
                              v124[4792] = v125[4792];
                              v2293 = *((_QWORD *)v125 + 600);
                              v124[4808] = v125[4808];
                              *((_QWORD *)v124 + 600) = v2293;
                            }
                            v2294 = (__int128 *)(v124 + 4816);
                            v2295 = (__int128 *)(v125 + 4816);
                            v2296 = *((_QWORD *)v124 + 602);
                            v2297 = *((_QWORD *)v125 + 602);
                            if (v2296 == 1)
                            {
                              if (v2297 == 1)
                              {
                                v2298 = *v2295;
                                *(_OWORD *)(v124 + 4825) = *(_OWORD *)(v125 + 4825);
                                *v2294 = v2298;
                              }
                              else
                              {
                                *((_QWORD *)v124 + 602) = v2297;
                                v124[4824] = v125[4824];
                                v2300 = *((_QWORD *)v125 + 604);
                                v124[4840] = v125[4840];
                                *((_QWORD *)v124 + 604) = v2300;
                                swift_bridgeObjectRetain(v2297);
                              }
                            }
                            else if (v2297 == 1)
                            {
                              sub_100083F00((_QWORD *)v124 + 602);
                              v2299 = *(_OWORD *)(v125 + 4825);
                              *v2294 = *v2295;
                              *(_OWORD *)(v124 + 4825) = v2299;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 602) = v2297;
                              swift_bridgeObjectRetain(v2297);
                              swift_bridgeObjectRelease(v2296);
                              v124[4824] = v125[4824];
                              v2301 = *((_QWORD *)v125 + 604);
                              v124[4840] = v125[4840];
                              *((_QWORD *)v124 + 604) = v2301;
                            }
                            v2302 = (__int128 *)(v124 + 4848);
                            v2303 = (__int128 *)(v125 + 4848);
                            v2304 = *((_QWORD *)v124 + 606);
                            v2305 = *((_QWORD *)v125 + 606);
                            if (v2304 == 1)
                            {
                              if (v2305 == 1)
                              {
                                v2306 = *v2303;
                                *(_OWORD *)(v124 + 4857) = *(_OWORD *)(v125 + 4857);
                                *v2302 = v2306;
                              }
                              else
                              {
                                *((_QWORD *)v124 + 606) = v2305;
                                v124[4856] = v125[4856];
                                v2308 = *((_QWORD *)v125 + 608);
                                v124[4872] = v125[4872];
                                *((_QWORD *)v124 + 608) = v2308;
                                swift_bridgeObjectRetain(v2305);
                              }
                            }
                            else if (v2305 == 1)
                            {
                              sub_100083F00((_QWORD *)v124 + 606);
                              v2307 = *(_OWORD *)(v125 + 4857);
                              *v2302 = *v2303;
                              *(_OWORD *)(v124 + 4857) = v2307;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 606) = v2305;
                              swift_bridgeObjectRetain(v2305);
                              swift_bridgeObjectRelease(v2304);
                              v124[4856] = v125[4856];
                              v2309 = *((_QWORD *)v125 + 608);
                              v124[4872] = v125[4872];
                              *((_QWORD *)v124 + 608) = v2309;
                            }
                            v2310 = (__int128 *)(v124 + 4880);
                            v2311 = (__int128 *)(v125 + 4880);
                            v2312 = *((_QWORD *)v124 + 610);
                            v2313 = *((_QWORD *)v125 + 610);
                            if (v2312 == 1)
                            {
                              if (v2313 == 1)
                              {
                                v2314 = *v2311;
                                *(_OWORD *)(v124 + 4889) = *(_OWORD *)(v125 + 4889);
                                *v2310 = v2314;
                              }
                              else
                              {
                                *((_QWORD *)v124 + 610) = v2313;
                                v124[4888] = v125[4888];
                                v2316 = *((_QWORD *)v125 + 612);
                                v124[4904] = v125[4904];
                                *((_QWORD *)v124 + 612) = v2316;
                                swift_bridgeObjectRetain(v2313);
                              }
                            }
                            else if (v2313 == 1)
                            {
                              sub_100083F00((_QWORD *)v124 + 610);
                              v2315 = *(_OWORD *)(v125 + 4889);
                              *v2310 = *v2311;
                              *(_OWORD *)(v124 + 4889) = v2315;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 610) = v2313;
                              swift_bridgeObjectRetain(v2313);
                              swift_bridgeObjectRelease(v2312);
                              v124[4888] = v125[4888];
                              v2317 = *((_QWORD *)v125 + 612);
                              v124[4904] = v125[4904];
                              *((_QWORD *)v124 + 612) = v2317;
                            }
                            v2318 = (__int128 *)(v124 + 4912);
                            v2319 = (__int128 *)(v125 + 4912);
                            v2320 = *((_QWORD *)v124 + 614);
                            v2321 = *((_QWORD *)v125 + 614);
                            if (v2320 == 1)
                            {
                              if (v2321 == 1)
                              {
                                v2322 = *v2319;
                                *(_OWORD *)(v124 + 4921) = *(_OWORD *)(v125 + 4921);
                                *v2318 = v2322;
                              }
                              else
                              {
                                *((_QWORD *)v124 + 614) = v2321;
                                v124[4920] = v125[4920];
                                v2324 = *((_QWORD *)v125 + 616);
                                v124[4936] = v125[4936];
                                *((_QWORD *)v124 + 616) = v2324;
                                swift_bridgeObjectRetain(v2321);
                              }
                            }
                            else if (v2321 == 1)
                            {
                              sub_100083F00((_QWORD *)v124 + 614);
                              v2323 = *(_OWORD *)(v125 + 4921);
                              *v2318 = *v2319;
                              *(_OWORD *)(v124 + 4921) = v2323;
                            }
                            else
                            {
                              *((_QWORD *)v124 + 614) = v2321;
                              swift_bridgeObjectRetain(v2321);
                              swift_bridgeObjectRelease(v2320);
                              v124[4920] = v125[4920];
                              v2325 = *((_QWORD *)v125 + 616);
                              v124[4936] = v125[4936];
                              *((_QWORD *)v124 + 616) = v2325;
                            }
                            v2326 = *((_OWORD *)v125 + 309);
                            v124[4960] = v125[4960];
                            *((_OWORD *)v124 + 309) = v2326;
                            v2327 = v125[4984];
                            *(_OWORD *)(v124 + 4968) = *(_OWORD *)(v125 + 4968);
                            v124[4984] = v2327;
                            v124[4985] = v125[4985];
                            v124[4986] = v125[4986];
                            v124[4987] = v125[4987];
                            v124[4988] = v125[4988];
                            v124[4989] = v125[4989];
                            v124[4990] = v125[4990];
                            v124[4991] = v125[4991];
                            v2328 = *((_QWORD *)v124 + 624);
                            v2329 = *((_QWORD *)v125 + 624);
                            *((_QWORD *)v124 + 624) = v2329;
                            swift_bridgeObjectRetain(v2329);
                            swift_bridgeObjectRelease(v2328);
                            v2330 = *((_QWORD *)v124 + 625);
                            v2331 = *((_QWORD *)v125 + 625);
                            *((_QWORD *)v124 + 625) = v2331;
                            swift_bridgeObjectRetain(v2331);
                            swift_bridgeObjectRelease(v2330);
LABEL_2028:
                            v2332 = v124 + 5008;
                            v2333 = (uint64_t *)(v125 + 5008);
                            v2334 = *((_QWORD *)v125 + 728);
                            if (*((_QWORD *)v124 + 728) == 1)
                            {
                              if (v2334 != 1)
                              {
                                v2335 = *v2333;
                                if (*v2333 == 1)
                                {
                                  v2336 = *(_OWORD *)v2333;
                                  *(_OWORD *)(v124 + 5017) = *(_OWORD *)(v125 + 5017);
                                  *v2332 = v2336;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 626) = v2335;
                                  v124[5016] = v125[5016];
                                  v2340 = *((_QWORD *)v125 + 628);
                                  v124[5032] = v125[5032];
                                  *((_QWORD *)v124 + 628) = v2340;
                                  swift_bridgeObjectRetain(v2335);
                                }
                                v2341 = *((_QWORD *)v125 + 630);
                                if (v2341 == 1)
                                {
                                  v2342 = *((_OWORD *)v125 + 315);
                                  *(_OWORD *)(v124 + 5049) = *(_OWORD *)(v125 + 5049);
                                  *((_OWORD *)v124 + 315) = v2342;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 630) = v2341;
                                  v124[5048] = v125[5048];
                                  v2344 = *((_QWORD *)v125 + 632);
                                  v124[5064] = v125[5064];
                                  *((_QWORD *)v124 + 632) = v2344;
                                  swift_bridgeObjectRetain(v2341);
                                }
                                v2345 = *((_QWORD *)v125 + 634);
                                if (v2345 == 1)
                                {
                                  v2346 = *((_OWORD *)v125 + 317);
                                  *(_OWORD *)(v124 + 5081) = *(_OWORD *)(v125 + 5081);
                                  *((_OWORD *)v124 + 317) = v2346;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 634) = v2345;
                                  v124[5080] = v125[5080];
                                  v2347 = *((_QWORD *)v125 + 636);
                                  v124[5096] = v125[5096];
                                  *((_QWORD *)v124 + 636) = v2347;
                                  swift_bridgeObjectRetain(v2345);
                                }
                                v2348 = *((_QWORD *)v125 + 638);
                                if (v2348 == 1)
                                {
                                  v2349 = *((_OWORD *)v125 + 319);
                                  *(_OWORD *)(v124 + 5113) = *(_OWORD *)(v125 + 5113);
                                  *((_OWORD *)v124 + 319) = v2349;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 638) = v2348;
                                  v124[5112] = v125[5112];
                                  v2350 = *((_QWORD *)v125 + 640);
                                  v124[5128] = v125[5128];
                                  *((_QWORD *)v124 + 640) = v2350;
                                  swift_bridgeObjectRetain(v2348);
                                }
                                v2351 = *((_QWORD *)v125 + 642);
                                if (v2351 == 1)
                                {
                                  v2352 = *((_OWORD *)v125 + 321);
                                  *(_OWORD *)(v124 + 5145) = *(_OWORD *)(v125 + 5145);
                                  *((_OWORD *)v124 + 321) = v2352;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 642) = v2351;
                                  v124[5144] = v125[5144];
                                  v2353 = *((_QWORD *)v125 + 644);
                                  v124[5160] = v125[5160];
                                  *((_QWORD *)v124 + 644) = v2353;
                                  swift_bridgeObjectRetain(v2351);
                                }
                                v2354 = *((_QWORD *)v125 + 646);
                                if (v2354 == 1)
                                {
                                  v2355 = *((_OWORD *)v125 + 323);
                                  *(_OWORD *)(v124 + 5177) = *(_OWORD *)(v125 + 5177);
                                  *((_OWORD *)v124 + 323) = v2355;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 646) = v2354;
                                  v124[5176] = v125[5176];
                                  v2356 = *((_QWORD *)v125 + 648);
                                  v124[5192] = v125[5192];
                                  *((_QWORD *)v124 + 648) = v2356;
                                  swift_bridgeObjectRetain(v2354);
                                }
                                v2357 = *((_QWORD *)v125 + 650);
                                if (v2357 == 1)
                                {
                                  v2358 = *((_OWORD *)v125 + 325);
                                  *(_OWORD *)(v124 + 5209) = *(_OWORD *)(v125 + 5209);
                                  *((_OWORD *)v124 + 325) = v2358;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 650) = v2357;
                                  v124[5208] = v125[5208];
                                  v2359 = *((_QWORD *)v125 + 652);
                                  v124[5224] = v125[5224];
                                  *((_QWORD *)v124 + 652) = v2359;
                                  swift_bridgeObjectRetain(v2357);
                                }
                                v2360 = *((_QWORD *)v125 + 654);
                                if (v2360 == 1)
                                {
                                  v2361 = *((_OWORD *)v125 + 327);
                                  *(_OWORD *)(v124 + 5241) = *(_OWORD *)(v125 + 5241);
                                  *((_OWORD *)v124 + 327) = v2361;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 654) = v2360;
                                  v124[5240] = v125[5240];
                                  v2362 = *((_QWORD *)v125 + 656);
                                  v124[5256] = v125[5256];
                                  *((_QWORD *)v124 + 656) = v2362;
                                  swift_bridgeObjectRetain(v2360);
                                }
                                v2363 = *((_QWORD *)v125 + 658);
                                if (v2363 == 1)
                                {
                                  v2364 = *((_OWORD *)v125 + 329);
                                  *(_OWORD *)(v124 + 5273) = *(_OWORD *)(v125 + 5273);
                                  *((_OWORD *)v124 + 329) = v2364;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 658) = v2363;
                                  v124[5272] = v125[5272];
                                  v2365 = *((_QWORD *)v125 + 660);
                                  v124[5288] = v125[5288];
                                  *((_QWORD *)v124 + 660) = v2365;
                                  swift_bridgeObjectRetain(v2363);
                                }
                                v2366 = *((_QWORD *)v125 + 662);
                                if (v2366 == 1)
                                {
                                  v2367 = *((_OWORD *)v125 + 331);
                                  *(_OWORD *)(v124 + 5305) = *(_OWORD *)(v125 + 5305);
                                  *((_OWORD *)v124 + 331) = v2367;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 662) = v2366;
                                  v124[5304] = v125[5304];
                                  v2368 = *((_QWORD *)v125 + 664);
                                  v124[5320] = v125[5320];
                                  *((_QWORD *)v124 + 664) = v2368;
                                  swift_bridgeObjectRetain(v2366);
                                }
                                v2369 = *((_QWORD *)v125 + 666);
                                if (v2369 == 1)
                                {
                                  v2370 = *((_OWORD *)v125 + 333);
                                  *(_OWORD *)(v124 + 5337) = *(_OWORD *)(v125 + 5337);
                                  *((_OWORD *)v124 + 333) = v2370;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 666) = v2369;
                                  v124[5336] = v125[5336];
                                  v2371 = *((_QWORD *)v125 + 668);
                                  v124[5352] = v125[5352];
                                  *((_QWORD *)v124 + 668) = v2371;
                                  swift_bridgeObjectRetain(v2369);
                                }
                                v2372 = *((_QWORD *)v125 + 670);
                                if (v2372 == 1)
                                {
                                  v2373 = *((_OWORD *)v125 + 335);
                                  *(_OWORD *)(v124 + 5369) = *(_OWORD *)(v125 + 5369);
                                  *((_OWORD *)v124 + 335) = v2373;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 670) = v2372;
                                  v124[5368] = v125[5368];
                                  v2374 = *((_QWORD *)v125 + 672);
                                  v124[5384] = v125[5384];
                                  *((_QWORD *)v124 + 672) = v2374;
                                  swift_bridgeObjectRetain(v2372);
                                }
                                v2375 = *((_QWORD *)v125 + 674);
                                if (v2375 == 1)
                                {
                                  v2376 = *((_OWORD *)v125 + 337);
                                  *(_OWORD *)(v124 + 5401) = *(_OWORD *)(v125 + 5401);
                                  *((_OWORD *)v124 + 337) = v2376;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 674) = v2375;
                                  v124[5400] = v125[5400];
                                  v2377 = *((_QWORD *)v125 + 676);
                                  v124[5416] = v125[5416];
                                  *((_QWORD *)v124 + 676) = v2377;
                                  swift_bridgeObjectRetain(v2375);
                                }
                                v2378 = *((_QWORD *)v125 + 678);
                                if (v2378 == 1)
                                {
                                  v2379 = *((_OWORD *)v125 + 339);
                                  *(_OWORD *)(v124 + 5433) = *(_OWORD *)(v125 + 5433);
                                  *((_OWORD *)v124 + 339) = v2379;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 678) = v2378;
                                  v124[5432] = v125[5432];
                                  v2380 = *((_QWORD *)v125 + 680);
                                  v124[5448] = v125[5448];
                                  *((_QWORD *)v124 + 680) = v2380;
                                  swift_bridgeObjectRetain(v2378);
                                }
                                v2381 = *((_QWORD *)v125 + 682);
                                if (v2381 == 1)
                                {
                                  v2382 = *((_OWORD *)v125 + 341);
                                  *(_OWORD *)(v124 + 5465) = *(_OWORD *)(v125 + 5465);
                                  *((_OWORD *)v124 + 341) = v2382;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 682) = v2381;
                                  v124[5464] = v125[5464];
                                  v2383 = *((_QWORD *)v125 + 684);
                                  v124[5480] = v125[5480];
                                  *((_QWORD *)v124 + 684) = v2383;
                                  swift_bridgeObjectRetain(v2381);
                                }
                                v2384 = *((_QWORD *)v125 + 686);
                                if (v2384 == 1)
                                {
                                  v2385 = *((_OWORD *)v125 + 343);
                                  *(_OWORD *)(v124 + 5497) = *(_OWORD *)(v125 + 5497);
                                  *((_OWORD *)v124 + 343) = v2385;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 686) = v2384;
                                  v124[5496] = v125[5496];
                                  v2386 = *((_QWORD *)v125 + 688);
                                  v124[5512] = v125[5512];
                                  *((_QWORD *)v124 + 688) = v2386;
                                  swift_bridgeObjectRetain(v2384);
                                }
                                v2387 = *((_QWORD *)v125 + 690);
                                if (v2387 == 1)
                                {
                                  v2388 = *((_OWORD *)v125 + 345);
                                  *(_OWORD *)(v124 + 5529) = *(_OWORD *)(v125 + 5529);
                                  *((_OWORD *)v124 + 345) = v2388;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 690) = v2387;
                                  v124[5528] = v125[5528];
                                  v2389 = *((_QWORD *)v125 + 692);
                                  v124[5544] = v125[5544];
                                  *((_QWORD *)v124 + 692) = v2389;
                                  swift_bridgeObjectRetain(v2387);
                                }
                                v2390 = *((_QWORD *)v125 + 694);
                                if (v2390 == 1)
                                {
                                  v2391 = *((_OWORD *)v125 + 347);
                                  *(_OWORD *)(v124 + 5561) = *(_OWORD *)(v125 + 5561);
                                  *((_OWORD *)v124 + 347) = v2391;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 694) = v2390;
                                  v124[5560] = v125[5560];
                                  v2392 = *((_QWORD *)v125 + 696);
                                  v124[5576] = v125[5576];
                                  *((_QWORD *)v124 + 696) = v2392;
                                  swift_bridgeObjectRetain(v2390);
                                }
                                v2393 = *((_QWORD *)v125 + 698);
                                if (v2393 == 1)
                                {
                                  v2394 = *((_OWORD *)v125 + 349);
                                  *(_OWORD *)(v124 + 5593) = *(_OWORD *)(v125 + 5593);
                                  *((_OWORD *)v124 + 349) = v2394;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 698) = v2393;
                                  v124[5592] = v125[5592];
                                  v2395 = *((_QWORD *)v125 + 700);
                                  v124[5608] = v125[5608];
                                  *((_QWORD *)v124 + 700) = v2395;
                                  swift_bridgeObjectRetain(v2393);
                                }
                                v2396 = *((_QWORD *)v125 + 702);
                                if (v2396 == 1)
                                {
                                  v2397 = *((_OWORD *)v125 + 351);
                                  *(_OWORD *)(v124 + 5625) = *(_OWORD *)(v125 + 5625);
                                  *((_OWORD *)v124 + 351) = v2397;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 702) = v2396;
                                  v124[5624] = v125[5624];
                                  v2398 = *((_QWORD *)v125 + 704);
                                  v124[5640] = v125[5640];
                                  *((_QWORD *)v124 + 704) = v2398;
                                  swift_bridgeObjectRetain(v2396);
                                }
                                v2399 = *((_QWORD *)v125 + 706);
                                if (v2399 == 1)
                                {
                                  v2400 = *((_OWORD *)v125 + 353);
                                  *(_OWORD *)(v124 + 5657) = *(_OWORD *)(v125 + 5657);
                                  *((_OWORD *)v124 + 353) = v2400;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 706) = v2399;
                                  v124[5656] = v125[5656];
                                  v2401 = *((_QWORD *)v125 + 708);
                                  v124[5672] = v125[5672];
                                  *((_QWORD *)v124 + 708) = v2401;
                                  swift_bridgeObjectRetain(v2399);
                                }
                                v2402 = *((_QWORD *)v125 + 710);
                                if (v2402 == 1)
                                {
                                  v2403 = *((_OWORD *)v125 + 355);
                                  *(_OWORD *)(v124 + 5689) = *(_OWORD *)(v125 + 5689);
                                  *((_OWORD *)v124 + 355) = v2403;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 710) = v2402;
                                  v124[5688] = v125[5688];
                                  v2404 = *((_QWORD *)v125 + 712);
                                  v124[5704] = v125[5704];
                                  *((_QWORD *)v124 + 712) = v2404;
                                  swift_bridgeObjectRetain(v2402);
                                }
                                v2405 = *((_QWORD *)v125 + 714);
                                if (v2405 == 1)
                                {
                                  v2406 = *((_OWORD *)v125 + 357);
                                  *(_OWORD *)(v124 + 5721) = *(_OWORD *)(v125 + 5721);
                                  *((_OWORD *)v124 + 357) = v2406;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 714) = v2405;
                                  v124[5720] = v125[5720];
                                  v2407 = *((_QWORD *)v125 + 716);
                                  v124[5736] = v125[5736];
                                  *((_QWORD *)v124 + 716) = v2407;
                                  swift_bridgeObjectRetain(v2405);
                                }
                                v2408 = *((_QWORD *)v125 + 718);
                                if (v2408 == 1)
                                {
                                  v2409 = *((_OWORD *)v125 + 359);
                                  *(_OWORD *)(v124 + 5753) = *(_OWORD *)(v125 + 5753);
                                  *((_OWORD *)v124 + 359) = v2409;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 718) = v2408;
                                  v124[5752] = v125[5752];
                                  v2410 = *((_QWORD *)v125 + 720);
                                  v124[5768] = v125[5768];
                                  *((_QWORD *)v124 + 720) = v2410;
                                  swift_bridgeObjectRetain(v2408);
                                }
                                v2411 = *((_OWORD *)v125 + 361);
                                v124[5792] = v125[5792];
                                *((_OWORD *)v124 + 361) = v2411;
                                v2412 = v125[5816];
                                *(_OWORD *)(v124 + 5800) = *(_OWORD *)(v125 + 5800);
                                v124[5816] = v2412;
                                v124[5817] = v125[5817];
                                v124[5818] = v125[5818];
                                v124[5819] = v125[5819];
                                v124[5820] = v125[5820];
                                v124[5821] = v125[5821];
                                v124[5822] = v125[5822];
                                v124[5823] = v125[5823];
                                v2413 = *((_QWORD *)v125 + 728);
                                *((_QWORD *)v124 + 728) = v2413;
                                v2414 = *((_QWORD *)v125 + 729);
                                *((_QWORD *)v124 + 729) = v2414;
                                swift_bridgeObjectRetain(v2413);
                                swift_bridgeObjectRetain(v2414);
                                goto LABEL_2275;
                              }
                            }
                            else
                            {
                              if (v2334 != 1)
                              {
                                v2337 = *(_QWORD *)v2332;
                                v2338 = *v2333;
                                if (*(_QWORD *)v2332 == 1)
                                {
                                  if (v2338 == 1)
                                  {
                                    v2339 = *(_OWORD *)v2333;
                                    *(_OWORD *)(v124 + 5017) = *(_OWORD *)(v125 + 5017);
                                    *v2332 = v2339;
                                  }
                                  else
                                  {
                                    *((_QWORD *)v124 + 626) = v2338;
                                    v124[5016] = v125[5016];
                                    v2415 = *((_QWORD *)v125 + 628);
                                    v124[5032] = v125[5032];
                                    *((_QWORD *)v124 + 628) = v2415;
                                    swift_bridgeObjectRetain(v2338);
                                  }
                                }
                                else if (v2338 == 1)
                                {
                                  sub_100083F00((_QWORD *)v124 + 626);
                                  v2343 = *(_OWORD *)(v125 + 5017);
                                  *v2332 = *(_OWORD *)v2333;
                                  *(_OWORD *)(v124 + 5017) = v2343;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 626) = v2338;
                                  swift_bridgeObjectRetain(v2338);
                                  swift_bridgeObjectRelease(v2337);
                                  v124[5016] = v125[5016];
                                  v2416 = *((_QWORD *)v125 + 628);
                                  v124[5032] = v125[5032];
                                  *((_QWORD *)v124 + 628) = v2416;
                                }
                                v2417 = (__int128 *)(v124 + 5040);
                                v2418 = (__int128 *)(v125 + 5040);
                                v2419 = *((_QWORD *)v124 + 630);
                                v2420 = *((_QWORD *)v125 + 630);
                                if (v2419 == 1)
                                {
                                  if (v2420 == 1)
                                  {
                                    v2421 = *v2418;
                                    *(_OWORD *)(v124 + 5049) = *(_OWORD *)(v125 + 5049);
                                    *v2417 = v2421;
                                  }
                                  else
                                  {
                                    *((_QWORD *)v124 + 630) = v2420;
                                    v124[5048] = v125[5048];
                                    v2423 = *((_QWORD *)v125 + 632);
                                    v124[5064] = v125[5064];
                                    *((_QWORD *)v124 + 632) = v2423;
                                    swift_bridgeObjectRetain(v2420);
                                  }
                                }
                                else if (v2420 == 1)
                                {
                                  sub_100083F00((_QWORD *)v124 + 630);
                                  v2422 = *(_OWORD *)(v125 + 5049);
                                  *v2417 = *v2418;
                                  *(_OWORD *)(v124 + 5049) = v2422;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 630) = v2420;
                                  swift_bridgeObjectRetain(v2420);
                                  swift_bridgeObjectRelease(v2419);
                                  v124[5048] = v125[5048];
                                  v2424 = *((_QWORD *)v125 + 632);
                                  v124[5064] = v125[5064];
                                  *((_QWORD *)v124 + 632) = v2424;
                                }
                                v2425 = (__int128 *)(v124 + 5072);
                                v2426 = (__int128 *)(v125 + 5072);
                                v2427 = *((_QWORD *)v124 + 634);
                                v2428 = *((_QWORD *)v125 + 634);
                                if (v2427 == 1)
                                {
                                  if (v2428 == 1)
                                  {
                                    v2429 = *v2426;
                                    *(_OWORD *)(v124 + 5081) = *(_OWORD *)(v125 + 5081);
                                    *v2425 = v2429;
                                  }
                                  else
                                  {
                                    *((_QWORD *)v124 + 634) = v2428;
                                    v124[5080] = v125[5080];
                                    v2431 = *((_QWORD *)v125 + 636);
                                    v124[5096] = v125[5096];
                                    *((_QWORD *)v124 + 636) = v2431;
                                    swift_bridgeObjectRetain(v2428);
                                  }
                                }
                                else if (v2428 == 1)
                                {
                                  sub_100083F00((_QWORD *)v124 + 634);
                                  v2430 = *(_OWORD *)(v125 + 5081);
                                  *v2425 = *v2426;
                                  *(_OWORD *)(v124 + 5081) = v2430;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 634) = v2428;
                                  swift_bridgeObjectRetain(v2428);
                                  swift_bridgeObjectRelease(v2427);
                                  v124[5080] = v125[5080];
                                  v2432 = *((_QWORD *)v125 + 636);
                                  v124[5096] = v125[5096];
                                  *((_QWORD *)v124 + 636) = v2432;
                                }
                                v2433 = (__int128 *)(v124 + 5104);
                                v2434 = (__int128 *)(v125 + 5104);
                                v2435 = *((_QWORD *)v124 + 638);
                                v2436 = *((_QWORD *)v125 + 638);
                                if (v2435 == 1)
                                {
                                  if (v2436 == 1)
                                  {
                                    v2437 = *v2434;
                                    *(_OWORD *)(v124 + 5113) = *(_OWORD *)(v125 + 5113);
                                    *v2433 = v2437;
                                  }
                                  else
                                  {
                                    *((_QWORD *)v124 + 638) = v2436;
                                    v124[5112] = v125[5112];
                                    v2439 = *((_QWORD *)v125 + 640);
                                    v124[5128] = v125[5128];
                                    *((_QWORD *)v124 + 640) = v2439;
                                    swift_bridgeObjectRetain(v2436);
                                  }
                                }
                                else if (v2436 == 1)
                                {
                                  sub_100083F00((_QWORD *)v124 + 638);
                                  v2438 = *(_OWORD *)(v125 + 5113);
                                  *v2433 = *v2434;
                                  *(_OWORD *)(v124 + 5113) = v2438;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 638) = v2436;
                                  swift_bridgeObjectRetain(v2436);
                                  swift_bridgeObjectRelease(v2435);
                                  v124[5112] = v125[5112];
                                  v2440 = *((_QWORD *)v125 + 640);
                                  v124[5128] = v125[5128];
                                  *((_QWORD *)v124 + 640) = v2440;
                                }
                                v2441 = (__int128 *)(v124 + 5136);
                                v2442 = (__int128 *)(v125 + 5136);
                                v2443 = *((_QWORD *)v124 + 642);
                                v2444 = *((_QWORD *)v125 + 642);
                                if (v2443 == 1)
                                {
                                  if (v2444 == 1)
                                  {
                                    v2445 = *v2442;
                                    *(_OWORD *)(v124 + 5145) = *(_OWORD *)(v125 + 5145);
                                    *v2441 = v2445;
                                  }
                                  else
                                  {
                                    *((_QWORD *)v124 + 642) = v2444;
                                    v124[5144] = v125[5144];
                                    v2447 = *((_QWORD *)v125 + 644);
                                    v124[5160] = v125[5160];
                                    *((_QWORD *)v124 + 644) = v2447;
                                    swift_bridgeObjectRetain(v2444);
                                  }
                                }
                                else if (v2444 == 1)
                                {
                                  sub_100083F00((_QWORD *)v124 + 642);
                                  v2446 = *(_OWORD *)(v125 + 5145);
                                  *v2441 = *v2442;
                                  *(_OWORD *)(v124 + 5145) = v2446;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 642) = v2444;
                                  swift_bridgeObjectRetain(v2444);
                                  swift_bridgeObjectRelease(v2443);
                                  v124[5144] = v125[5144];
                                  v2448 = *((_QWORD *)v125 + 644);
                                  v124[5160] = v125[5160];
                                  *((_QWORD *)v124 + 644) = v2448;
                                }
                                v2449 = (__int128 *)(v124 + 5168);
                                v2450 = (__int128 *)(v125 + 5168);
                                v2451 = *((_QWORD *)v124 + 646);
                                v2452 = *((_QWORD *)v125 + 646);
                                if (v2451 == 1)
                                {
                                  if (v2452 == 1)
                                  {
                                    v2453 = *v2450;
                                    *(_OWORD *)(v124 + 5177) = *(_OWORD *)(v125 + 5177);
                                    *v2449 = v2453;
                                  }
                                  else
                                  {
                                    *((_QWORD *)v124 + 646) = v2452;
                                    v124[5176] = v125[5176];
                                    v2455 = *((_QWORD *)v125 + 648);
                                    v124[5192] = v125[5192];
                                    *((_QWORD *)v124 + 648) = v2455;
                                    swift_bridgeObjectRetain(v2452);
                                  }
                                }
                                else if (v2452 == 1)
                                {
                                  sub_100083F00((_QWORD *)v124 + 646);
                                  v2454 = *(_OWORD *)(v125 + 5177);
                                  *v2449 = *v2450;
                                  *(_OWORD *)(v124 + 5177) = v2454;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 646) = v2452;
                                  swift_bridgeObjectRetain(v2452);
                                  swift_bridgeObjectRelease(v2451);
                                  v124[5176] = v125[5176];
                                  v2456 = *((_QWORD *)v125 + 648);
                                  v124[5192] = v125[5192];
                                  *((_QWORD *)v124 + 648) = v2456;
                                }
                                v2457 = (__int128 *)(v124 + 5200);
                                v2458 = (__int128 *)(v125 + 5200);
                                v2459 = *((_QWORD *)v124 + 650);
                                v2460 = *((_QWORD *)v125 + 650);
                                if (v2459 == 1)
                                {
                                  if (v2460 == 1)
                                  {
                                    v2461 = *v2458;
                                    *(_OWORD *)(v124 + 5209) = *(_OWORD *)(v125 + 5209);
                                    *v2457 = v2461;
                                  }
                                  else
                                  {
                                    *((_QWORD *)v124 + 650) = v2460;
                                    v124[5208] = v125[5208];
                                    v2463 = *((_QWORD *)v125 + 652);
                                    v124[5224] = v125[5224];
                                    *((_QWORD *)v124 + 652) = v2463;
                                    swift_bridgeObjectRetain(v2460);
                                  }
                                }
                                else if (v2460 == 1)
                                {
                                  sub_100083F00((_QWORD *)v124 + 650);
                                  v2462 = *(_OWORD *)(v125 + 5209);
                                  *v2457 = *v2458;
                                  *(_OWORD *)(v124 + 5209) = v2462;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 650) = v2460;
                                  swift_bridgeObjectRetain(v2460);
                                  swift_bridgeObjectRelease(v2459);
                                  v124[5208] = v125[5208];
                                  v2464 = *((_QWORD *)v125 + 652);
                                  v124[5224] = v125[5224];
                                  *((_QWORD *)v124 + 652) = v2464;
                                }
                                v2465 = (__int128 *)(v124 + 5232);
                                v2466 = (__int128 *)(v125 + 5232);
                                v2467 = *((_QWORD *)v124 + 654);
                                v2468 = *((_QWORD *)v125 + 654);
                                if (v2467 == 1)
                                {
                                  if (v2468 == 1)
                                  {
                                    v2469 = *v2466;
                                    *(_OWORD *)(v124 + 5241) = *(_OWORD *)(v125 + 5241);
                                    *v2465 = v2469;
                                  }
                                  else
                                  {
                                    *((_QWORD *)v124 + 654) = v2468;
                                    v124[5240] = v125[5240];
                                    v2471 = *((_QWORD *)v125 + 656);
                                    v124[5256] = v125[5256];
                                    *((_QWORD *)v124 + 656) = v2471;
                                    swift_bridgeObjectRetain(v2468);
                                  }
                                }
                                else if (v2468 == 1)
                                {
                                  sub_100083F00((_QWORD *)v124 + 654);
                                  v2470 = *(_OWORD *)(v125 + 5241);
                                  *v2465 = *v2466;
                                  *(_OWORD *)(v124 + 5241) = v2470;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 654) = v2468;
                                  swift_bridgeObjectRetain(v2468);
                                  swift_bridgeObjectRelease(v2467);
                                  v124[5240] = v125[5240];
                                  v2472 = *((_QWORD *)v125 + 656);
                                  v124[5256] = v125[5256];
                                  *((_QWORD *)v124 + 656) = v2472;
                                }
                                v2473 = (__int128 *)(v124 + 5264);
                                v2474 = (__int128 *)(v125 + 5264);
                                v2475 = *((_QWORD *)v124 + 658);
                                v2476 = *((_QWORD *)v125 + 658);
                                if (v2475 == 1)
                                {
                                  if (v2476 == 1)
                                  {
                                    v2477 = *v2474;
                                    *(_OWORD *)(v124 + 5273) = *(_OWORD *)(v125 + 5273);
                                    *v2473 = v2477;
                                  }
                                  else
                                  {
                                    *((_QWORD *)v124 + 658) = v2476;
                                    v124[5272] = v125[5272];
                                    v2479 = *((_QWORD *)v125 + 660);
                                    v124[5288] = v125[5288];
                                    *((_QWORD *)v124 + 660) = v2479;
                                    swift_bridgeObjectRetain(v2476);
                                  }
                                }
                                else if (v2476 == 1)
                                {
                                  sub_100083F00((_QWORD *)v124 + 658);
                                  v2478 = *(_OWORD *)(v125 + 5273);
                                  *v2473 = *v2474;
                                  *(_OWORD *)(v124 + 5273) = v2478;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 658) = v2476;
                                  swift_bridgeObjectRetain(v2476);
                                  swift_bridgeObjectRelease(v2475);
                                  v124[5272] = v125[5272];
                                  v2480 = *((_QWORD *)v125 + 660);
                                  v124[5288] = v125[5288];
                                  *((_QWORD *)v124 + 660) = v2480;
                                }
                                v2481 = (__int128 *)(v124 + 5296);
                                v2482 = (__int128 *)(v125 + 5296);
                                v2483 = *((_QWORD *)v124 + 662);
                                v2484 = *((_QWORD *)v125 + 662);
                                if (v2483 == 1)
                                {
                                  if (v2484 == 1)
                                  {
                                    v2485 = *v2482;
                                    *(_OWORD *)(v124 + 5305) = *(_OWORD *)(v125 + 5305);
                                    *v2481 = v2485;
                                  }
                                  else
                                  {
                                    *((_QWORD *)v124 + 662) = v2484;
                                    v124[5304] = v125[5304];
                                    v2487 = *((_QWORD *)v125 + 664);
                                    v124[5320] = v125[5320];
                                    *((_QWORD *)v124 + 664) = v2487;
                                    swift_bridgeObjectRetain(v2484);
                                  }
                                }
                                else if (v2484 == 1)
                                {
                                  sub_100083F00((_QWORD *)v124 + 662);
                                  v2486 = *(_OWORD *)(v125 + 5305);
                                  *v2481 = *v2482;
                                  *(_OWORD *)(v124 + 5305) = v2486;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 662) = v2484;
                                  swift_bridgeObjectRetain(v2484);
                                  swift_bridgeObjectRelease(v2483);
                                  v124[5304] = v125[5304];
                                  v2488 = *((_QWORD *)v125 + 664);
                                  v124[5320] = v125[5320];
                                  *((_QWORD *)v124 + 664) = v2488;
                                }
                                v2489 = (__int128 *)(v124 + 5328);
                                v2490 = (__int128 *)(v125 + 5328);
                                v2491 = *((_QWORD *)v124 + 666);
                                v2492 = *((_QWORD *)v125 + 666);
                                if (v2491 == 1)
                                {
                                  if (v2492 == 1)
                                  {
                                    v2493 = *v2490;
                                    *(_OWORD *)(v124 + 5337) = *(_OWORD *)(v125 + 5337);
                                    *v2489 = v2493;
                                  }
                                  else
                                  {
                                    *((_QWORD *)v124 + 666) = v2492;
                                    v124[5336] = v125[5336];
                                    v2495 = *((_QWORD *)v125 + 668);
                                    v124[5352] = v125[5352];
                                    *((_QWORD *)v124 + 668) = v2495;
                                    swift_bridgeObjectRetain(v2492);
                                  }
                                }
                                else if (v2492 == 1)
                                {
                                  sub_100083F00((_QWORD *)v124 + 666);
                                  v2494 = *(_OWORD *)(v125 + 5337);
                                  *v2489 = *v2490;
                                  *(_OWORD *)(v124 + 5337) = v2494;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 666) = v2492;
                                  swift_bridgeObjectRetain(v2492);
                                  swift_bridgeObjectRelease(v2491);
                                  v124[5336] = v125[5336];
                                  v2496 = *((_QWORD *)v125 + 668);
                                  v124[5352] = v125[5352];
                                  *((_QWORD *)v124 + 668) = v2496;
                                }
                                v2497 = (__int128 *)(v124 + 5360);
                                v2498 = (__int128 *)(v125 + 5360);
                                v2499 = *((_QWORD *)v124 + 670);
                                v2500 = *((_QWORD *)v125 + 670);
                                if (v2499 == 1)
                                {
                                  if (v2500 == 1)
                                  {
                                    v2501 = *v2498;
                                    *(_OWORD *)(v124 + 5369) = *(_OWORD *)(v125 + 5369);
                                    *v2497 = v2501;
                                  }
                                  else
                                  {
                                    *((_QWORD *)v124 + 670) = v2500;
                                    v124[5368] = v125[5368];
                                    v2503 = *((_QWORD *)v125 + 672);
                                    v124[5384] = v125[5384];
                                    *((_QWORD *)v124 + 672) = v2503;
                                    swift_bridgeObjectRetain(v2500);
                                  }
                                }
                                else if (v2500 == 1)
                                {
                                  sub_100083F00((_QWORD *)v124 + 670);
                                  v2502 = *(_OWORD *)(v125 + 5369);
                                  *v2497 = *v2498;
                                  *(_OWORD *)(v124 + 5369) = v2502;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 670) = v2500;
                                  swift_bridgeObjectRetain(v2500);
                                  swift_bridgeObjectRelease(v2499);
                                  v124[5368] = v125[5368];
                                  v2504 = *((_QWORD *)v125 + 672);
                                  v124[5384] = v125[5384];
                                  *((_QWORD *)v124 + 672) = v2504;
                                }
                                v2505 = (__int128 *)(v124 + 5392);
                                v2506 = (__int128 *)(v125 + 5392);
                                v2507 = *((_QWORD *)v124 + 674);
                                v2508 = *((_QWORD *)v125 + 674);
                                if (v2507 == 1)
                                {
                                  if (v2508 == 1)
                                  {
                                    v2509 = *v2506;
                                    *(_OWORD *)(v124 + 5401) = *(_OWORD *)(v125 + 5401);
                                    *v2505 = v2509;
                                  }
                                  else
                                  {
                                    *((_QWORD *)v124 + 674) = v2508;
                                    v124[5400] = v125[5400];
                                    v2511 = *((_QWORD *)v125 + 676);
                                    v124[5416] = v125[5416];
                                    *((_QWORD *)v124 + 676) = v2511;
                                    swift_bridgeObjectRetain(v2508);
                                  }
                                }
                                else if (v2508 == 1)
                                {
                                  sub_100083F00((_QWORD *)v124 + 674);
                                  v2510 = *(_OWORD *)(v125 + 5401);
                                  *v2505 = *v2506;
                                  *(_OWORD *)(v124 + 5401) = v2510;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 674) = v2508;
                                  swift_bridgeObjectRetain(v2508);
                                  swift_bridgeObjectRelease(v2507);
                                  v124[5400] = v125[5400];
                                  v2512 = *((_QWORD *)v125 + 676);
                                  v124[5416] = v125[5416];
                                  *((_QWORD *)v124 + 676) = v2512;
                                }
                                v2513 = (__int128 *)(v124 + 5424);
                                v2514 = (__int128 *)(v125 + 5424);
                                v2515 = *((_QWORD *)v124 + 678);
                                v2516 = *((_QWORD *)v125 + 678);
                                if (v2515 == 1)
                                {
                                  if (v2516 == 1)
                                  {
                                    v2517 = *v2514;
                                    *(_OWORD *)(v124 + 5433) = *(_OWORD *)(v125 + 5433);
                                    *v2513 = v2517;
                                  }
                                  else
                                  {
                                    *((_QWORD *)v124 + 678) = v2516;
                                    v124[5432] = v125[5432];
                                    v2519 = *((_QWORD *)v125 + 680);
                                    v124[5448] = v125[5448];
                                    *((_QWORD *)v124 + 680) = v2519;
                                    swift_bridgeObjectRetain(v2516);
                                  }
                                }
                                else if (v2516 == 1)
                                {
                                  sub_100083F00((_QWORD *)v124 + 678);
                                  v2518 = *(_OWORD *)(v125 + 5433);
                                  *v2513 = *v2514;
                                  *(_OWORD *)(v124 + 5433) = v2518;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 678) = v2516;
                                  swift_bridgeObjectRetain(v2516);
                                  swift_bridgeObjectRelease(v2515);
                                  v124[5432] = v125[5432];
                                  v2520 = *((_QWORD *)v125 + 680);
                                  v124[5448] = v125[5448];
                                  *((_QWORD *)v124 + 680) = v2520;
                                }
                                v2521 = (__int128 *)(v124 + 5456);
                                v2522 = (__int128 *)(v125 + 5456);
                                v2523 = *((_QWORD *)v124 + 682);
                                v2524 = *((_QWORD *)v125 + 682);
                                if (v2523 == 1)
                                {
                                  if (v2524 == 1)
                                  {
                                    v2525 = *v2522;
                                    *(_OWORD *)(v124 + 5465) = *(_OWORD *)(v125 + 5465);
                                    *v2521 = v2525;
                                  }
                                  else
                                  {
                                    *((_QWORD *)v124 + 682) = v2524;
                                    v124[5464] = v125[5464];
                                    v2527 = *((_QWORD *)v125 + 684);
                                    v124[5480] = v125[5480];
                                    *((_QWORD *)v124 + 684) = v2527;
                                    swift_bridgeObjectRetain(v2524);
                                  }
                                }
                                else if (v2524 == 1)
                                {
                                  sub_100083F00((_QWORD *)v124 + 682);
                                  v2526 = *(_OWORD *)(v125 + 5465);
                                  *v2521 = *v2522;
                                  *(_OWORD *)(v124 + 5465) = v2526;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 682) = v2524;
                                  swift_bridgeObjectRetain(v2524);
                                  swift_bridgeObjectRelease(v2523);
                                  v124[5464] = v125[5464];
                                  v2528 = *((_QWORD *)v125 + 684);
                                  v124[5480] = v125[5480];
                                  *((_QWORD *)v124 + 684) = v2528;
                                }
                                v2529 = (__int128 *)(v124 + 5488);
                                v2530 = (__int128 *)(v125 + 5488);
                                v2531 = *((_QWORD *)v124 + 686);
                                v2532 = *((_QWORD *)v125 + 686);
                                if (v2531 == 1)
                                {
                                  if (v2532 == 1)
                                  {
                                    v2533 = *v2530;
                                    *(_OWORD *)(v124 + 5497) = *(_OWORD *)(v125 + 5497);
                                    *v2529 = v2533;
                                  }
                                  else
                                  {
                                    *((_QWORD *)v124 + 686) = v2532;
                                    v124[5496] = v125[5496];
                                    v2535 = *((_QWORD *)v125 + 688);
                                    v124[5512] = v125[5512];
                                    *((_QWORD *)v124 + 688) = v2535;
                                    swift_bridgeObjectRetain(v2532);
                                  }
                                }
                                else if (v2532 == 1)
                                {
                                  sub_100083F00((_QWORD *)v124 + 686);
                                  v2534 = *(_OWORD *)(v125 + 5497);
                                  *v2529 = *v2530;
                                  *(_OWORD *)(v124 + 5497) = v2534;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 686) = v2532;
                                  swift_bridgeObjectRetain(v2532);
                                  swift_bridgeObjectRelease(v2531);
                                  v124[5496] = v125[5496];
                                  v2536 = *((_QWORD *)v125 + 688);
                                  v124[5512] = v125[5512];
                                  *((_QWORD *)v124 + 688) = v2536;
                                }
                                v2537 = (__int128 *)(v124 + 5520);
                                v2538 = (__int128 *)(v125 + 5520);
                                v2539 = *((_QWORD *)v124 + 690);
                                v2540 = *((_QWORD *)v125 + 690);
                                if (v2539 == 1)
                                {
                                  if (v2540 == 1)
                                  {
                                    v2541 = *v2538;
                                    *(_OWORD *)(v124 + 5529) = *(_OWORD *)(v125 + 5529);
                                    *v2537 = v2541;
                                  }
                                  else
                                  {
                                    *((_QWORD *)v124 + 690) = v2540;
                                    v124[5528] = v125[5528];
                                    v2543 = *((_QWORD *)v125 + 692);
                                    v124[5544] = v125[5544];
                                    *((_QWORD *)v124 + 692) = v2543;
                                    swift_bridgeObjectRetain(v2540);
                                  }
                                }
                                else if (v2540 == 1)
                                {
                                  sub_100083F00((_QWORD *)v124 + 690);
                                  v2542 = *(_OWORD *)(v125 + 5529);
                                  *v2537 = *v2538;
                                  *(_OWORD *)(v124 + 5529) = v2542;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 690) = v2540;
                                  swift_bridgeObjectRetain(v2540);
                                  swift_bridgeObjectRelease(v2539);
                                  v124[5528] = v125[5528];
                                  v2544 = *((_QWORD *)v125 + 692);
                                  v124[5544] = v125[5544];
                                  *((_QWORD *)v124 + 692) = v2544;
                                }
                                v2545 = (__int128 *)(v124 + 5552);
                                v2546 = (__int128 *)(v125 + 5552);
                                v2547 = *((_QWORD *)v124 + 694);
                                v2548 = *((_QWORD *)v125 + 694);
                                if (v2547 == 1)
                                {
                                  if (v2548 == 1)
                                  {
                                    v2549 = *v2546;
                                    *(_OWORD *)(v124 + 5561) = *(_OWORD *)(v125 + 5561);
                                    *v2545 = v2549;
                                  }
                                  else
                                  {
                                    *((_QWORD *)v124 + 694) = v2548;
                                    v124[5560] = v125[5560];
                                    v2551 = *((_QWORD *)v125 + 696);
                                    v124[5576] = v125[5576];
                                    *((_QWORD *)v124 + 696) = v2551;
                                    swift_bridgeObjectRetain(v2548);
                                  }
                                }
                                else if (v2548 == 1)
                                {
                                  sub_100083F00((_QWORD *)v124 + 694);
                                  v2550 = *(_OWORD *)(v125 + 5561);
                                  *v2545 = *v2546;
                                  *(_OWORD *)(v124 + 5561) = v2550;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 694) = v2548;
                                  swift_bridgeObjectRetain(v2548);
                                  swift_bridgeObjectRelease(v2547);
                                  v124[5560] = v125[5560];
                                  v2552 = *((_QWORD *)v125 + 696);
                                  v124[5576] = v125[5576];
                                  *((_QWORD *)v124 + 696) = v2552;
                                }
                                v2553 = (__int128 *)(v124 + 5584);
                                v2554 = (__int128 *)(v125 + 5584);
                                v2555 = *((_QWORD *)v124 + 698);
                                v2556 = *((_QWORD *)v125 + 698);
                                if (v2555 == 1)
                                {
                                  if (v2556 == 1)
                                  {
                                    v2557 = *v2554;
                                    *(_OWORD *)(v124 + 5593) = *(_OWORD *)(v125 + 5593);
                                    *v2553 = v2557;
                                  }
                                  else
                                  {
                                    *((_QWORD *)v124 + 698) = v2556;
                                    v124[5592] = v125[5592];
                                    v2559 = *((_QWORD *)v125 + 700);
                                    v124[5608] = v125[5608];
                                    *((_QWORD *)v124 + 700) = v2559;
                                    swift_bridgeObjectRetain(v2556);
                                  }
                                }
                                else if (v2556 == 1)
                                {
                                  sub_100083F00((_QWORD *)v124 + 698);
                                  v2558 = *(_OWORD *)(v125 + 5593);
                                  *v2553 = *v2554;
                                  *(_OWORD *)(v124 + 5593) = v2558;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 698) = v2556;
                                  swift_bridgeObjectRetain(v2556);
                                  swift_bridgeObjectRelease(v2555);
                                  v124[5592] = v125[5592];
                                  v2560 = *((_QWORD *)v125 + 700);
                                  v124[5608] = v125[5608];
                                  *((_QWORD *)v124 + 700) = v2560;
                                }
                                v2561 = (__int128 *)(v124 + 5616);
                                v2562 = (__int128 *)(v125 + 5616);
                                v2563 = *((_QWORD *)v124 + 702);
                                v2564 = *((_QWORD *)v125 + 702);
                                if (v2563 == 1)
                                {
                                  if (v2564 == 1)
                                  {
                                    v2565 = *v2562;
                                    *(_OWORD *)(v124 + 5625) = *(_OWORD *)(v125 + 5625);
                                    *v2561 = v2565;
                                  }
                                  else
                                  {
                                    *((_QWORD *)v124 + 702) = v2564;
                                    v124[5624] = v125[5624];
                                    v2567 = *((_QWORD *)v125 + 704);
                                    v124[5640] = v125[5640];
                                    *((_QWORD *)v124 + 704) = v2567;
                                    swift_bridgeObjectRetain(v2564);
                                  }
                                }
                                else if (v2564 == 1)
                                {
                                  sub_100083F00((_QWORD *)v124 + 702);
                                  v2566 = *(_OWORD *)(v125 + 5625);
                                  *v2561 = *v2562;
                                  *(_OWORD *)(v124 + 5625) = v2566;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 702) = v2564;
                                  swift_bridgeObjectRetain(v2564);
                                  swift_bridgeObjectRelease(v2563);
                                  v124[5624] = v125[5624];
                                  v2568 = *((_QWORD *)v125 + 704);
                                  v124[5640] = v125[5640];
                                  *((_QWORD *)v124 + 704) = v2568;
                                }
                                v2569 = (__int128 *)(v124 + 5648);
                                v2570 = (__int128 *)(v125 + 5648);
                                v2571 = *((_QWORD *)v124 + 706);
                                v2572 = *((_QWORD *)v125 + 706);
                                if (v2571 == 1)
                                {
                                  if (v2572 == 1)
                                  {
                                    v2573 = *v2570;
                                    *(_OWORD *)(v124 + 5657) = *(_OWORD *)(v125 + 5657);
                                    *v2569 = v2573;
                                  }
                                  else
                                  {
                                    *((_QWORD *)v124 + 706) = v2572;
                                    v124[5656] = v125[5656];
                                    v2575 = *((_QWORD *)v125 + 708);
                                    v124[5672] = v125[5672];
                                    *((_QWORD *)v124 + 708) = v2575;
                                    swift_bridgeObjectRetain(v2572);
                                  }
                                }
                                else if (v2572 == 1)
                                {
                                  sub_100083F00((_QWORD *)v124 + 706);
                                  v2574 = *(_OWORD *)(v125 + 5657);
                                  *v2569 = *v2570;
                                  *(_OWORD *)(v124 + 5657) = v2574;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 706) = v2572;
                                  swift_bridgeObjectRetain(v2572);
                                  swift_bridgeObjectRelease(v2571);
                                  v124[5656] = v125[5656];
                                  v2576 = *((_QWORD *)v125 + 708);
                                  v124[5672] = v125[5672];
                                  *((_QWORD *)v124 + 708) = v2576;
                                }
                                v2577 = (__int128 *)(v124 + 5680);
                                v2578 = (__int128 *)(v125 + 5680);
                                v2579 = *((_QWORD *)v124 + 710);
                                v2580 = *((_QWORD *)v125 + 710);
                                if (v2579 == 1)
                                {
                                  if (v2580 == 1)
                                  {
                                    v2581 = *v2578;
                                    *(_OWORD *)(v124 + 5689) = *(_OWORD *)(v125 + 5689);
                                    *v2577 = v2581;
                                  }
                                  else
                                  {
                                    *((_QWORD *)v124 + 710) = v2580;
                                    v124[5688] = v125[5688];
                                    v2583 = *((_QWORD *)v125 + 712);
                                    v124[5704] = v125[5704];
                                    *((_QWORD *)v124 + 712) = v2583;
                                    swift_bridgeObjectRetain(v2580);
                                  }
                                }
                                else if (v2580 == 1)
                                {
                                  sub_100083F00((_QWORD *)v124 + 710);
                                  v2582 = *(_OWORD *)(v125 + 5689);
                                  *v2577 = *v2578;
                                  *(_OWORD *)(v124 + 5689) = v2582;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 710) = v2580;
                                  swift_bridgeObjectRetain(v2580);
                                  swift_bridgeObjectRelease(v2579);
                                  v124[5688] = v125[5688];
                                  v2584 = *((_QWORD *)v125 + 712);
                                  v124[5704] = v125[5704];
                                  *((_QWORD *)v124 + 712) = v2584;
                                }
                                v2585 = (__int128 *)(v124 + 5712);
                                v2586 = (__int128 *)(v125 + 5712);
                                v2587 = *((_QWORD *)v124 + 714);
                                v2588 = *((_QWORD *)v125 + 714);
                                if (v2587 == 1)
                                {
                                  if (v2588 == 1)
                                  {
                                    v2589 = *v2586;
                                    *(_OWORD *)(v124 + 5721) = *(_OWORD *)(v125 + 5721);
                                    *v2585 = v2589;
                                  }
                                  else
                                  {
                                    *((_QWORD *)v124 + 714) = v2588;
                                    v124[5720] = v125[5720];
                                    v2591 = *((_QWORD *)v125 + 716);
                                    v124[5736] = v125[5736];
                                    *((_QWORD *)v124 + 716) = v2591;
                                    swift_bridgeObjectRetain(v2588);
                                  }
                                }
                                else if (v2588 == 1)
                                {
                                  sub_100083F00((_QWORD *)v124 + 714);
                                  v2590 = *(_OWORD *)(v125 + 5721);
                                  *v2585 = *v2586;
                                  *(_OWORD *)(v124 + 5721) = v2590;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 714) = v2588;
                                  swift_bridgeObjectRetain(v2588);
                                  swift_bridgeObjectRelease(v2587);
                                  v124[5720] = v125[5720];
                                  v2592 = *((_QWORD *)v125 + 716);
                                  v124[5736] = v125[5736];
                                  *((_QWORD *)v124 + 716) = v2592;
                                }
                                v2593 = (__int128 *)(v124 + 5744);
                                v2594 = (__int128 *)(v125 + 5744);
                                v2595 = *((_QWORD *)v124 + 718);
                                v2596 = *((_QWORD *)v125 + 718);
                                if (v2595 == 1)
                                {
                                  if (v2596 == 1)
                                  {
                                    v2597 = *v2594;
                                    *(_OWORD *)(v124 + 5753) = *(_OWORD *)(v125 + 5753);
                                    *v2593 = v2597;
                                  }
                                  else
                                  {
                                    *((_QWORD *)v124 + 718) = v2596;
                                    v124[5752] = v125[5752];
                                    v2599 = *((_QWORD *)v125 + 720);
                                    v124[5768] = v125[5768];
                                    *((_QWORD *)v124 + 720) = v2599;
                                    swift_bridgeObjectRetain(v2596);
                                  }
                                }
                                else if (v2596 == 1)
                                {
                                  sub_100083F00((_QWORD *)v124 + 718);
                                  v2598 = *(_OWORD *)(v125 + 5753);
                                  *v2593 = *v2594;
                                  *(_OWORD *)(v124 + 5753) = v2598;
                                }
                                else
                                {
                                  *((_QWORD *)v124 + 718) = v2596;
                                  swift_bridgeObjectRetain(v2596);
                                  swift_bridgeObjectRelease(v2595);
                                  v124[5752] = v125[5752];
                                  v2600 = *((_QWORD *)v125 + 720);
                                  v124[5768] = v125[5768];
                                  *((_QWORD *)v124 + 720) = v2600;
                                }
                                v2601 = *((_OWORD *)v125 + 361);
                                v124[5792] = v125[5792];
                                *((_OWORD *)v124 + 361) = v2601;
                                v2602 = v125[5816];
                                *(_OWORD *)(v124 + 5800) = *(_OWORD *)(v125 + 5800);
                                v124[5816] = v2602;
                                v124[5817] = v125[5817];
                                v124[5818] = v125[5818];
                                v124[5819] = v125[5819];
                                v124[5820] = v125[5820];
                                v124[5821] = v125[5821];
                                v124[5822] = v125[5822];
                                v124[5823] = v125[5823];
                                v2603 = *((_QWORD *)v124 + 728);
                                v2604 = *((_QWORD *)v125 + 728);
                                *((_QWORD *)v124 + 728) = v2604;
                                swift_bridgeObjectRetain(v2604);
                                swift_bridgeObjectRelease(v2603);
                                v2605 = *((_QWORD *)v124 + 729);
                                v2606 = *((_QWORD *)v125 + 729);
                                *((_QWORD *)v124 + 729) = v2606;
                                swift_bridgeObjectRetain(v2606);
                                swift_bridgeObjectRelease(v2605);
                                goto LABEL_2275;
                              }
                              sub_100083F28((uint64_t *)v124 + 626);
                            }
                            memcpy(v124 + 5008, v125 + 5008, 0x340uLL);
LABEL_2275:
                            v2607 = *((_QWORD *)v124 + 730);
                            v2608 = *((_QWORD *)v125 + 730);
                            *((_QWORD *)v124 + 730) = v2608;
                            swift_bridgeObjectRetain(v2608);
                            swift_bridgeObjectRelease(v2607);
                            v2609 = v125[5852];
                            *((_DWORD *)v124 + 1462) = *((_DWORD *)v125 + 1462);
                            v124[5852] = v2609;
                            v2610 = *((_QWORD *)v125 + 732);
                            v124[5864] = v125[5864];
                            *((_QWORD *)v124 + 732) = v2610;
                            v2611 = *((_QWORD *)v125 + 734);
                            v124[5880] = v125[5880];
                            *((_QWORD *)v124 + 734) = v2611;
                            v2612 = *((_QWORD *)v125 + 736);
                            v124[5896] = v125[5896];
                            *((_QWORD *)v124 + 736) = v2612;
                            v2613 = *((_QWORD *)v125 + 738);
                            v124[5912] = v125[5912];
                            *((_QWORD *)v124 + 738) = v2613;
                            goto LABEL_2276;
                          }
                          sub_100083F28((uint64_t *)v124 + 522);
                        }
                        memcpy(v124 + 4176, v125 + 4176, 0x340uLL);
                        goto LABEL_2028;
                      }
                      sub_100083F28((uint64_t *)v124 + 418);
                    }
                    memcpy(v124 + 3344, v125 + 3344, 0x340uLL);
                    goto LABEL_1781;
                  }
                  sub_100083F28((uint64_t *)v124 + 314);
                }
                memcpy(v124 + 2512, v125 + 2512, 0x340uLL);
                goto LABEL_1534;
              }
              sub_100083F28((uint64_t *)v124 + 210);
            }
            memcpy(v124 + 1680, v125 + 1680, 0x340uLL);
            goto LABEL_1287;
          }
          sub_100083F28((uint64_t *)v124 + 106);
        }
        memcpy(v124 + 848, v125 + 848, 0x340uLL);
        goto LABEL_1040;
      }
      sub_100083F28((uint64_t *)v124 + 2);
    }
    memcpy(v124 + 16, v125 + 16, 0x340uLL);
    goto LABEL_793;
  }
  if (v127 == 1)
  {
LABEL_20:
    memcpy(v124, v125, 0x1719uLL);
    goto LABEL_2276;
  }
  *(_QWORD *)v124 = *(_QWORD *)v125;
  v128 = *((_QWORD *)v125 + 1);
  *((_QWORD *)v124 + 1) = v128;
  v129 = (uint64_t *)(v125 + 16);
  v130 = *((_QWORD *)v125 + 104);
  swift_bridgeObjectRetain(v128);
  if (v130 == 1)
  {
    memcpy(v124 + 16, v125 + 16, 0x340uLL);
  }
  else
  {
    v137 = *v129;
    if (*v129 == 1)
    {
      v138 = *(_OWORD *)v129;
      *(_OWORD *)(v124 + 25) = *(_OWORD *)(v125 + 25);
      *((_OWORD *)v124 + 1) = v138;
    }
    else
    {
      *((_QWORD *)v124 + 2) = v137;
      v124[24] = v125[24];
      v139 = *((_QWORD *)v125 + 4);
      v124[40] = v125[40];
      *((_QWORD *)v124 + 4) = v139;
      swift_bridgeObjectRetain(v137);
    }
    v140 = *((_QWORD *)v125 + 6);
    if (v140 == 1)
    {
      v141 = *((_OWORD *)v125 + 3);
      *(_OWORD *)(v124 + 57) = *(_OWORD *)(v125 + 57);
      *((_OWORD *)v124 + 3) = v141;
    }
    else
    {
      *((_QWORD *)v124 + 6) = v140;
      v124[56] = v125[56];
      v145 = *((_QWORD *)v125 + 8);
      v124[72] = v125[72];
      *((_QWORD *)v124 + 8) = v145;
      swift_bridgeObjectRetain(v140);
    }
    v146 = *((_QWORD *)v125 + 10);
    if (v146 == 1)
    {
      v147 = *((_OWORD *)v125 + 5);
      *(_OWORD *)(v124 + 89) = *(_OWORD *)(v125 + 89);
      *((_OWORD *)v124 + 5) = v147;
    }
    else
    {
      *((_QWORD *)v124 + 10) = v146;
      v124[88] = v125[88];
      v148 = *((_QWORD *)v125 + 12);
      v124[104] = v125[104];
      *((_QWORD *)v124 + 12) = v148;
      swift_bridgeObjectRetain(v146);
    }
    v149 = *((_QWORD *)v125 + 14);
    if (v149 == 1)
    {
      v150 = *((_OWORD *)v125 + 7);
      *(_OWORD *)(v124 + 121) = *(_OWORD *)(v125 + 121);
      *((_OWORD *)v124 + 7) = v150;
    }
    else
    {
      *((_QWORD *)v124 + 14) = v149;
      v124[120] = v125[120];
      v151 = *((_QWORD *)v125 + 16);
      v124[136] = v125[136];
      *((_QWORD *)v124 + 16) = v151;
      swift_bridgeObjectRetain(v149);
    }
    v152 = *((_QWORD *)v125 + 18);
    if (v152 == 1)
    {
      v153 = *((_OWORD *)v125 + 9);
      *(_OWORD *)(v124 + 153) = *(_OWORD *)(v125 + 153);
      *((_OWORD *)v124 + 9) = v153;
    }
    else
    {
      *((_QWORD *)v124 + 18) = v152;
      v124[152] = v125[152];
      v154 = *((_QWORD *)v125 + 20);
      v124[168] = v125[168];
      *((_QWORD *)v124 + 20) = v154;
      swift_bridgeObjectRetain(v152);
    }
    v155 = *((_QWORD *)v125 + 22);
    if (v155 == 1)
    {
      v156 = *((_OWORD *)v125 + 11);
      *(_OWORD *)(v124 + 185) = *(_OWORD *)(v125 + 185);
      *((_OWORD *)v124 + 11) = v156;
    }
    else
    {
      *((_QWORD *)v124 + 22) = v155;
      v124[184] = v125[184];
      v157 = *((_QWORD *)v125 + 24);
      v124[200] = v125[200];
      *((_QWORD *)v124 + 24) = v157;
      swift_bridgeObjectRetain(v155);
    }
    v158 = *((_QWORD *)v125 + 26);
    if (v158 == 1)
    {
      v159 = *((_OWORD *)v125 + 13);
      *(_OWORD *)(v124 + 217) = *(_OWORD *)(v125 + 217);
      *((_OWORD *)v124 + 13) = v159;
    }
    else
    {
      *((_QWORD *)v124 + 26) = v158;
      v124[216] = v125[216];
      v160 = *((_QWORD *)v125 + 28);
      v124[232] = v125[232];
      *((_QWORD *)v124 + 28) = v160;
      swift_bridgeObjectRetain(v158);
    }
    v161 = *((_QWORD *)v125 + 30);
    if (v161 == 1)
    {
      v162 = *((_OWORD *)v125 + 15);
      *(_OWORD *)(v124 + 249) = *(_OWORD *)(v125 + 249);
      *((_OWORD *)v124 + 15) = v162;
    }
    else
    {
      *((_QWORD *)v124 + 30) = v161;
      v124[248] = v125[248];
      v163 = *((_QWORD *)v125 + 32);
      v124[264] = v125[264];
      *((_QWORD *)v124 + 32) = v163;
      swift_bridgeObjectRetain(v161);
    }
    v164 = *((_QWORD *)v125 + 34);
    if (v164 == 1)
    {
      v165 = *((_OWORD *)v125 + 17);
      *(_OWORD *)(v124 + 281) = *(_OWORD *)(v125 + 281);
      *((_OWORD *)v124 + 17) = v165;
    }
    else
    {
      *((_QWORD *)v124 + 34) = v164;
      v124[280] = v125[280];
      v166 = *((_QWORD *)v125 + 36);
      v124[296] = v125[296];
      *((_QWORD *)v124 + 36) = v166;
      swift_bridgeObjectRetain(v164);
    }
    v167 = *((_QWORD *)v125 + 38);
    if (v167 == 1)
    {
      v168 = *((_OWORD *)v125 + 19);
      *(_OWORD *)(v124 + 313) = *(_OWORD *)(v125 + 313);
      *((_OWORD *)v124 + 19) = v168;
    }
    else
    {
      *((_QWORD *)v124 + 38) = v167;
      v124[312] = v125[312];
      v169 = *((_QWORD *)v125 + 40);
      v124[328] = v125[328];
      *((_QWORD *)v124 + 40) = v169;
      swift_bridgeObjectRetain(v167);
    }
    v170 = *((_QWORD *)v125 + 42);
    if (v170 == 1)
    {
      v171 = *((_OWORD *)v125 + 21);
      *(_OWORD *)(v124 + 345) = *(_OWORD *)(v125 + 345);
      *((_OWORD *)v124 + 21) = v171;
    }
    else
    {
      *((_QWORD *)v124 + 42) = v170;
      v124[344] = v125[344];
      v172 = *((_QWORD *)v125 + 44);
      v124[360] = v125[360];
      *((_QWORD *)v124 + 44) = v172;
      swift_bridgeObjectRetain(v170);
    }
    v173 = *((_QWORD *)v125 + 46);
    if (v173 == 1)
    {
      v174 = *((_OWORD *)v125 + 23);
      *(_OWORD *)(v124 + 377) = *(_OWORD *)(v125 + 377);
      *((_OWORD *)v124 + 23) = v174;
    }
    else
    {
      *((_QWORD *)v124 + 46) = v173;
      v124[376] = v125[376];
      v175 = *((_QWORD *)v125 + 48);
      v124[392] = v125[392];
      *((_QWORD *)v124 + 48) = v175;
      swift_bridgeObjectRetain(v173);
    }
    v176 = *((_QWORD *)v125 + 50);
    if (v176 == 1)
    {
      v177 = *((_OWORD *)v125 + 25);
      *(_OWORD *)(v124 + 409) = *(_OWORD *)(v125 + 409);
      *((_OWORD *)v124 + 25) = v177;
    }
    else
    {
      *((_QWORD *)v124 + 50) = v176;
      v124[408] = v125[408];
      v178 = *((_QWORD *)v125 + 52);
      v124[424] = v125[424];
      *((_QWORD *)v124 + 52) = v178;
      swift_bridgeObjectRetain(v176);
    }
    v179 = *((_QWORD *)v125 + 54);
    if (v179 == 1)
    {
      v180 = *((_OWORD *)v125 + 27);
      *(_OWORD *)(v124 + 441) = *(_OWORD *)(v125 + 441);
      *((_OWORD *)v124 + 27) = v180;
    }
    else
    {
      *((_QWORD *)v124 + 54) = v179;
      v124[440] = v125[440];
      v181 = *((_QWORD *)v125 + 56);
      v124[456] = v125[456];
      *((_QWORD *)v124 + 56) = v181;
      swift_bridgeObjectRetain(v179);
    }
    v182 = *((_QWORD *)v125 + 58);
    if (v182 == 1)
    {
      v183 = *((_OWORD *)v125 + 29);
      *(_OWORD *)(v124 + 473) = *(_OWORD *)(v125 + 473);
      *((_OWORD *)v124 + 29) = v183;
    }
    else
    {
      *((_QWORD *)v124 + 58) = v182;
      v124[472] = v125[472];
      v184 = *((_QWORD *)v125 + 60);
      v124[488] = v125[488];
      *((_QWORD *)v124 + 60) = v184;
      swift_bridgeObjectRetain(v182);
    }
    v185 = *((_QWORD *)v125 + 62);
    if (v185 == 1)
    {
      v186 = *((_OWORD *)v125 + 31);
      *(_OWORD *)(v124 + 505) = *(_OWORD *)(v125 + 505);
      *((_OWORD *)v124 + 31) = v186;
    }
    else
    {
      *((_QWORD *)v124 + 62) = v185;
      v124[504] = v125[504];
      v187 = *((_QWORD *)v125 + 64);
      v124[520] = v125[520];
      *((_QWORD *)v124 + 64) = v187;
      swift_bridgeObjectRetain(v185);
    }
    v188 = *((_QWORD *)v125 + 66);
    if (v188 == 1)
    {
      v189 = *((_OWORD *)v125 + 33);
      *(_OWORD *)(v124 + 537) = *(_OWORD *)(v125 + 537);
      *((_OWORD *)v124 + 33) = v189;
    }
    else
    {
      *((_QWORD *)v124 + 66) = v188;
      v124[536] = v125[536];
      v190 = *((_QWORD *)v125 + 68);
      v124[552] = v125[552];
      *((_QWORD *)v124 + 68) = v190;
      swift_bridgeObjectRetain(v188);
    }
    v191 = *((_QWORD *)v125 + 70);
    if (v191 == 1)
    {
      v192 = *((_OWORD *)v125 + 35);
      *(_OWORD *)(v124 + 569) = *(_OWORD *)(v125 + 569);
      *((_OWORD *)v124 + 35) = v192;
    }
    else
    {
      *((_QWORD *)v124 + 70) = v191;
      v124[568] = v125[568];
      v193 = *((_QWORD *)v125 + 72);
      v124[584] = v125[584];
      *((_QWORD *)v124 + 72) = v193;
      swift_bridgeObjectRetain(v191);
    }
    v194 = *((_QWORD *)v125 + 74);
    if (v194 == 1)
    {
      v195 = *((_OWORD *)v125 + 37);
      *(_OWORD *)(v124 + 601) = *(_OWORD *)(v125 + 601);
      *((_OWORD *)v124 + 37) = v195;
    }
    else
    {
      *((_QWORD *)v124 + 74) = v194;
      v124[600] = v125[600];
      v196 = *((_QWORD *)v125 + 76);
      v124[616] = v125[616];
      *((_QWORD *)v124 + 76) = v196;
      swift_bridgeObjectRetain(v194);
    }
    v197 = *((_QWORD *)v125 + 78);
    if (v197 == 1)
    {
      v198 = *((_OWORD *)v125 + 39);
      *(_OWORD *)(v124 + 633) = *(_OWORD *)(v125 + 633);
      *((_OWORD *)v124 + 39) = v198;
    }
    else
    {
      *((_QWORD *)v124 + 78) = v197;
      v124[632] = v125[632];
      v199 = *((_QWORD *)v125 + 80);
      v124[648] = v125[648];
      *((_QWORD *)v124 + 80) = v199;
      swift_bridgeObjectRetain(v197);
    }
    v200 = *((_QWORD *)v125 + 82);
    if (v200 == 1)
    {
      v201 = *((_OWORD *)v125 + 41);
      *(_OWORD *)(v124 + 665) = *(_OWORD *)(v125 + 665);
      *((_OWORD *)v124 + 41) = v201;
    }
    else
    {
      *((_QWORD *)v124 + 82) = v200;
      v124[664] = v125[664];
      v202 = *((_QWORD *)v125 + 84);
      v124[680] = v125[680];
      *((_QWORD *)v124 + 84) = v202;
      swift_bridgeObjectRetain(v200);
    }
    v203 = *((_QWORD *)v125 + 86);
    if (v203 == 1)
    {
      v204 = *((_OWORD *)v125 + 43);
      *(_OWORD *)(v124 + 697) = *(_OWORD *)(v125 + 697);
      *((_OWORD *)v124 + 43) = v204;
    }
    else
    {
      *((_QWORD *)v124 + 86) = v203;
      v124[696] = v125[696];
      v205 = *((_QWORD *)v125 + 88);
      v124[712] = v125[712];
      *((_QWORD *)v124 + 88) = v205;
      swift_bridgeObjectRetain(v203);
    }
    v206 = *((_QWORD *)v125 + 90);
    if (v206 == 1)
    {
      v207 = *((_OWORD *)v125 + 45);
      *(_OWORD *)(v124 + 729) = *(_OWORD *)(v125 + 729);
      *((_OWORD *)v124 + 45) = v207;
    }
    else
    {
      *((_QWORD *)v124 + 90) = v206;
      v124[728] = v125[728];
      v208 = *((_QWORD *)v125 + 92);
      v124[744] = v125[744];
      *((_QWORD *)v124 + 92) = v208;
      swift_bridgeObjectRetain(v206);
    }
    v209 = *((_QWORD *)v125 + 94);
    if (v209 == 1)
    {
      v210 = *((_OWORD *)v125 + 47);
      *(_OWORD *)(v124 + 761) = *(_OWORD *)(v125 + 761);
      *((_OWORD *)v124 + 47) = v210;
    }
    else
    {
      *((_QWORD *)v124 + 94) = v209;
      v124[760] = v125[760];
      v211 = *((_QWORD *)v125 + 96);
      v124[776] = v125[776];
      *((_QWORD *)v124 + 96) = v211;
      swift_bridgeObjectRetain(v209);
    }
    v212 = *((_OWORD *)v125 + 49);
    v124[800] = v125[800];
    *((_OWORD *)v124 + 49) = v212;
    v213 = *(_OWORD *)(v125 + 808);
    v124[824] = v125[824];
    *(_OWORD *)(v124 + 808) = v213;
    v124[825] = v125[825];
    v124[826] = v125[826];
    v124[827] = v125[827];
    v124[828] = v125[828];
    v124[829] = v125[829];
    v124[830] = v125[830];
    v124[831] = v125[831];
    v214 = *((_QWORD *)v125 + 104);
    *((_QWORD *)v124 + 104) = v214;
    v215 = *((_QWORD *)v125 + 105);
    *((_QWORD *)v124 + 105) = v215;
    swift_bridgeObjectRetain(v214);
    swift_bridgeObjectRetain(v215);
  }
  v216 = v124 + 848;
  v217 = (uint64_t *)(v125 + 848);
  if (*((_QWORD *)v125 + 208) == 1)
  {
    memcpy(v216, v217, 0x340uLL);
  }
  else
  {
    v218 = *v217;
    if (*v217 == 1)
    {
      v219 = *(_OWORD *)v217;
      *(_OWORD *)(v124 + 857) = *(_OWORD *)(v125 + 857);
      *v216 = v219;
    }
    else
    {
      *((_QWORD *)v124 + 106) = v218;
      v124[856] = v125[856];
      v220 = *((_QWORD *)v125 + 108);
      v124[872] = v125[872];
      *((_QWORD *)v124 + 108) = v220;
      swift_bridgeObjectRetain(v218);
    }
    v221 = *((_QWORD *)v125 + 110);
    if (v221 == 1)
    {
      v222 = *((_OWORD *)v125 + 55);
      *(_OWORD *)(v124 + 889) = *(_OWORD *)(v125 + 889);
      *((_OWORD *)v124 + 55) = v222;
    }
    else
    {
      *((_QWORD *)v124 + 110) = v221;
      v124[888] = v125[888];
      v223 = *((_QWORD *)v125 + 112);
      v124[904] = v125[904];
      *((_QWORD *)v124 + 112) = v223;
      swift_bridgeObjectRetain(v221);
    }
    v224 = *((_QWORD *)v125 + 114);
    if (v224 == 1)
    {
      v225 = *((_OWORD *)v125 + 57);
      *(_OWORD *)(v124 + 921) = *(_OWORD *)(v125 + 921);
      *((_OWORD *)v124 + 57) = v225;
    }
    else
    {
      *((_QWORD *)v124 + 114) = v224;
      v124[920] = v125[920];
      v226 = *((_QWORD *)v125 + 116);
      v124[936] = v125[936];
      *((_QWORD *)v124 + 116) = v226;
      swift_bridgeObjectRetain(v224);
    }
    v227 = *((_QWORD *)v125 + 118);
    if (v227 == 1)
    {
      v228 = *((_OWORD *)v125 + 59);
      *(_OWORD *)(v124 + 953) = *(_OWORD *)(v125 + 953);
      *((_OWORD *)v124 + 59) = v228;
    }
    else
    {
      *((_QWORD *)v124 + 118) = v227;
      v124[952] = v125[952];
      v229 = *((_QWORD *)v125 + 120);
      v124[968] = v125[968];
      *((_QWORD *)v124 + 120) = v229;
      swift_bridgeObjectRetain(v227);
    }
    v230 = *((_QWORD *)v125 + 122);
    if (v230 == 1)
    {
      v231 = *((_OWORD *)v125 + 61);
      *(_OWORD *)(v124 + 985) = *(_OWORD *)(v125 + 985);
      *((_OWORD *)v124 + 61) = v231;
    }
    else
    {
      *((_QWORD *)v124 + 122) = v230;
      v124[984] = v125[984];
      v232 = *((_QWORD *)v125 + 124);
      v124[1000] = v125[1000];
      *((_QWORD *)v124 + 124) = v232;
      swift_bridgeObjectRetain(v230);
    }
    v233 = *((_QWORD *)v125 + 126);
    if (v233 == 1)
    {
      v234 = *((_OWORD *)v125 + 63);
      *(_OWORD *)(v124 + 1017) = *(_OWORD *)(v125 + 1017);
      *((_OWORD *)v124 + 63) = v234;
    }
    else
    {
      *((_QWORD *)v124 + 126) = v233;
      v124[1016] = v125[1016];
      v235 = *((_QWORD *)v125 + 128);
      v124[1032] = v125[1032];
      *((_QWORD *)v124 + 128) = v235;
      swift_bridgeObjectRetain(v233);
    }
    v236 = *((_QWORD *)v125 + 130);
    if (v236 == 1)
    {
      v237 = *((_OWORD *)v125 + 65);
      *(_OWORD *)(v124 + 1049) = *(_OWORD *)(v125 + 1049);
      *((_OWORD *)v124 + 65) = v237;
    }
    else
    {
      *((_QWORD *)v124 + 130) = v236;
      v124[1048] = v125[1048];
      v238 = *((_QWORD *)v125 + 132);
      v124[1064] = v125[1064];
      *((_QWORD *)v124 + 132) = v238;
      swift_bridgeObjectRetain(v236);
    }
    v239 = *((_QWORD *)v125 + 134);
    if (v239 == 1)
    {
      v240 = *((_OWORD *)v125 + 67);
      *(_OWORD *)(v124 + 1081) = *(_OWORD *)(v125 + 1081);
      *((_OWORD *)v124 + 67) = v240;
    }
    else
    {
      *((_QWORD *)v124 + 134) = v239;
      v124[1080] = v125[1080];
      v241 = *((_QWORD *)v125 + 136);
      v124[1096] = v125[1096];
      *((_QWORD *)v124 + 136) = v241;
      swift_bridgeObjectRetain(v239);
    }
    v242 = *((_QWORD *)v125 + 138);
    if (v242 == 1)
    {
      v243 = *((_OWORD *)v125 + 69);
      *(_OWORD *)(v124 + 1113) = *(_OWORD *)(v125 + 1113);
      *((_OWORD *)v124 + 69) = v243;
    }
    else
    {
      *((_QWORD *)v124 + 138) = v242;
      v124[1112] = v125[1112];
      v244 = *((_QWORD *)v125 + 140);
      v124[1128] = v125[1128];
      *((_QWORD *)v124 + 140) = v244;
      swift_bridgeObjectRetain(v242);
    }
    v245 = *((_QWORD *)v125 + 142);
    if (v245 == 1)
    {
      v246 = *((_OWORD *)v125 + 71);
      *(_OWORD *)(v124 + 1145) = *(_OWORD *)(v125 + 1145);
      *((_OWORD *)v124 + 71) = v246;
    }
    else
    {
      *((_QWORD *)v124 + 142) = v245;
      v124[1144] = v125[1144];
      v247 = *((_QWORD *)v125 + 144);
      v124[1160] = v125[1160];
      *((_QWORD *)v124 + 144) = v247;
      swift_bridgeObjectRetain(v245);
    }
    v248 = *((_QWORD *)v125 + 146);
    if (v248 == 1)
    {
      v249 = *((_OWORD *)v125 + 73);
      *(_OWORD *)(v124 + 1177) = *(_OWORD *)(v125 + 1177);
      *((_OWORD *)v124 + 73) = v249;
    }
    else
    {
      *((_QWORD *)v124 + 146) = v248;
      v124[1176] = v125[1176];
      v250 = *((_QWORD *)v125 + 148);
      v124[1192] = v125[1192];
      *((_QWORD *)v124 + 148) = v250;
      swift_bridgeObjectRetain(v248);
    }
    v251 = *((_QWORD *)v125 + 150);
    if (v251 == 1)
    {
      v252 = *((_OWORD *)v125 + 75);
      *(_OWORD *)(v124 + 1209) = *(_OWORD *)(v125 + 1209);
      *((_OWORD *)v124 + 75) = v252;
    }
    else
    {
      *((_QWORD *)v124 + 150) = v251;
      v124[1208] = v125[1208];
      v253 = *((_QWORD *)v125 + 152);
      v124[1224] = v125[1224];
      *((_QWORD *)v124 + 152) = v253;
      swift_bridgeObjectRetain(v251);
    }
    v254 = *((_QWORD *)v125 + 154);
    if (v254 == 1)
    {
      v255 = *((_OWORD *)v125 + 77);
      *(_OWORD *)(v124 + 1241) = *(_OWORD *)(v125 + 1241);
      *((_OWORD *)v124 + 77) = v255;
    }
    else
    {
      *((_QWORD *)v124 + 154) = v254;
      v124[1240] = v125[1240];
      v256 = *((_QWORD *)v125 + 156);
      v124[1256] = v125[1256];
      *((_QWORD *)v124 + 156) = v256;
      swift_bridgeObjectRetain(v254);
    }
    v257 = *((_QWORD *)v125 + 158);
    if (v257 == 1)
    {
      v258 = *((_OWORD *)v125 + 79);
      *(_OWORD *)(v124 + 1273) = *(_OWORD *)(v125 + 1273);
      *((_OWORD *)v124 + 79) = v258;
    }
    else
    {
      *((_QWORD *)v124 + 158) = v257;
      v124[1272] = v125[1272];
      v259 = *((_QWORD *)v125 + 160);
      v124[1288] = v125[1288];
      *((_QWORD *)v124 + 160) = v259;
      swift_bridgeObjectRetain(v257);
    }
    v260 = *((_QWORD *)v125 + 162);
    if (v260 == 1)
    {
      v261 = *((_OWORD *)v125 + 81);
      *(_OWORD *)(v124 + 1305) = *(_OWORD *)(v125 + 1305);
      *((_OWORD *)v124 + 81) = v261;
    }
    else
    {
      *((_QWORD *)v124 + 162) = v260;
      v124[1304] = v125[1304];
      v262 = *((_QWORD *)v125 + 164);
      v124[1320] = v125[1320];
      *((_QWORD *)v124 + 164) = v262;
      swift_bridgeObjectRetain(v260);
    }
    v263 = *((_QWORD *)v125 + 166);
    if (v263 == 1)
    {
      v264 = *((_OWORD *)v125 + 83);
      *(_OWORD *)(v124 + 1337) = *(_OWORD *)(v125 + 1337);
      *((_OWORD *)v124 + 83) = v264;
    }
    else
    {
      *((_QWORD *)v124 + 166) = v263;
      v124[1336] = v125[1336];
      v265 = *((_QWORD *)v125 + 168);
      v124[1352] = v125[1352];
      *((_QWORD *)v124 + 168) = v265;
      swift_bridgeObjectRetain(v263);
    }
    v266 = *((_QWORD *)v125 + 170);
    if (v266 == 1)
    {
      v267 = *((_OWORD *)v125 + 85);
      *(_OWORD *)(v124 + 1369) = *(_OWORD *)(v125 + 1369);
      *((_OWORD *)v124 + 85) = v267;
    }
    else
    {
      *((_QWORD *)v124 + 170) = v266;
      v124[1368] = v125[1368];
      v268 = *((_QWORD *)v125 + 172);
      v124[1384] = v125[1384];
      *((_QWORD *)v124 + 172) = v268;
      swift_bridgeObjectRetain(v266);
    }
    v269 = *((_QWORD *)v125 + 174);
    if (v269 == 1)
    {
      v270 = *((_OWORD *)v125 + 87);
      *(_OWORD *)(v124 + 1401) = *(_OWORD *)(v125 + 1401);
      *((_OWORD *)v124 + 87) = v270;
    }
    else
    {
      *((_QWORD *)v124 + 174) = v269;
      v124[1400] = v125[1400];
      v271 = *((_QWORD *)v125 + 176);
      v124[1416] = v125[1416];
      *((_QWORD *)v124 + 176) = v271;
      swift_bridgeObjectRetain(v269);
    }
    v272 = *((_QWORD *)v125 + 178);
    if (v272 == 1)
    {
      v273 = *((_OWORD *)v125 + 89);
      *(_OWORD *)(v124 + 1433) = *(_OWORD *)(v125 + 1433);
      *((_OWORD *)v124 + 89) = v273;
    }
    else
    {
      *((_QWORD *)v124 + 178) = v272;
      v124[1432] = v125[1432];
      v274 = *((_QWORD *)v125 + 180);
      v124[1448] = v125[1448];
      *((_QWORD *)v124 + 180) = v274;
      swift_bridgeObjectRetain(v272);
    }
    v275 = *((_QWORD *)v125 + 182);
    if (v275 == 1)
    {
      v276 = *((_OWORD *)v125 + 91);
      *(_OWORD *)(v124 + 1465) = *(_OWORD *)(v125 + 1465);
      *((_OWORD *)v124 + 91) = v276;
    }
    else
    {
      *((_QWORD *)v124 + 182) = v275;
      v124[1464] = v125[1464];
      v277 = *((_QWORD *)v125 + 184);
      v124[1480] = v125[1480];
      *((_QWORD *)v124 + 184) = v277;
      swift_bridgeObjectRetain(v275);
    }
    v278 = *((_QWORD *)v125 + 186);
    if (v278 == 1)
    {
      v279 = *((_OWORD *)v125 + 93);
      *(_OWORD *)(v124 + 1497) = *(_OWORD *)(v125 + 1497);
      *((_OWORD *)v124 + 93) = v279;
    }
    else
    {
      *((_QWORD *)v124 + 186) = v278;
      v124[1496] = v125[1496];
      v280 = *((_QWORD *)v125 + 188);
      v124[1512] = v125[1512];
      *((_QWORD *)v124 + 188) = v280;
      swift_bridgeObjectRetain(v278);
    }
    v281 = *((_QWORD *)v125 + 190);
    if (v281 == 1)
    {
      v282 = *((_OWORD *)v125 + 95);
      *(_OWORD *)(v124 + 1529) = *(_OWORD *)(v125 + 1529);
      *((_OWORD *)v124 + 95) = v282;
    }
    else
    {
      *((_QWORD *)v124 + 190) = v281;
      v124[1528] = v125[1528];
      v283 = *((_QWORD *)v125 + 192);
      v124[1544] = v125[1544];
      *((_QWORD *)v124 + 192) = v283;
      swift_bridgeObjectRetain(v281);
    }
    v284 = *((_QWORD *)v125 + 194);
    if (v284 == 1)
    {
      v285 = *((_OWORD *)v125 + 97);
      *(_OWORD *)(v124 + 1561) = *(_OWORD *)(v125 + 1561);
      *((_OWORD *)v124 + 97) = v285;
    }
    else
    {
      *((_QWORD *)v124 + 194) = v284;
      v124[1560] = v125[1560];
      v286 = *((_QWORD *)v125 + 196);
      v124[1576] = v125[1576];
      *((_QWORD *)v124 + 196) = v286;
      swift_bridgeObjectRetain(v284);
    }
    v287 = *((_QWORD *)v125 + 198);
    if (v287 == 1)
    {
      v288 = *((_OWORD *)v125 + 99);
      *(_OWORD *)(v124 + 1593) = *(_OWORD *)(v125 + 1593);
      *((_OWORD *)v124 + 99) = v288;
    }
    else
    {
      *((_QWORD *)v124 + 198) = v287;
      v124[1592] = v125[1592];
      v289 = *((_QWORD *)v125 + 200);
      v124[1608] = v125[1608];
      *((_QWORD *)v124 + 200) = v289;
      swift_bridgeObjectRetain(v287);
    }
    v290 = *((_OWORD *)v125 + 101);
    v124[1632] = v125[1632];
    *((_OWORD *)v124 + 101) = v290;
    v291 = *(_OWORD *)(v125 + 1640);
    v124[1656] = v125[1656];
    *(_OWORD *)(v124 + 1640) = v291;
    v124[1657] = v125[1657];
    v124[1658] = v125[1658];
    v124[1659] = v125[1659];
    v124[1660] = v125[1660];
    v124[1661] = v125[1661];
    v124[1662] = v125[1662];
    v124[1663] = v125[1663];
    v292 = *((_QWORD *)v125 + 208);
    *((_QWORD *)v124 + 208) = v292;
    v293 = *((_QWORD *)v125 + 209);
    *((_QWORD *)v124 + 209) = v293;
    swift_bridgeObjectRetain(v292);
    swift_bridgeObjectRetain(v293);
  }
  v294 = v124 + 1680;
  v295 = (uint64_t *)(v125 + 1680);
  if (*((_QWORD *)v125 + 312) == 1)
  {
    memcpy(v294, v295, 0x340uLL);
  }
  else
  {
    v296 = *v295;
    if (*v295 == 1)
    {
      v297 = *(_OWORD *)v295;
      *(_OWORD *)(v124 + 1689) = *(_OWORD *)(v125 + 1689);
      *v294 = v297;
    }
    else
    {
      *((_QWORD *)v124 + 210) = v296;
      v124[1688] = v125[1688];
      v298 = *((_QWORD *)v125 + 212);
      v124[1704] = v125[1704];
      *((_QWORD *)v124 + 212) = v298;
      swift_bridgeObjectRetain(v296);
    }
    v299 = *((_QWORD *)v125 + 214);
    if (v299 == 1)
    {
      v300 = *((_OWORD *)v125 + 107);
      *(_OWORD *)(v124 + 1721) = *(_OWORD *)(v125 + 1721);
      *((_OWORD *)v124 + 107) = v300;
    }
    else
    {
      *((_QWORD *)v124 + 214) = v299;
      v124[1720] = v125[1720];
      v301 = *((_QWORD *)v125 + 216);
      v124[1736] = v125[1736];
      *((_QWORD *)v124 + 216) = v301;
      swift_bridgeObjectRetain(v299);
    }
    v302 = *((_QWORD *)v125 + 218);
    if (v302 == 1)
    {
      v303 = *((_OWORD *)v125 + 109);
      *(_OWORD *)(v124 + 1753) = *(_OWORD *)(v125 + 1753);
      *((_OWORD *)v124 + 109) = v303;
    }
    else
    {
      *((_QWORD *)v124 + 218) = v302;
      v124[1752] = v125[1752];
      v304 = *((_QWORD *)v125 + 220);
      v124[1768] = v125[1768];
      *((_QWORD *)v124 + 220) = v304;
      swift_bridgeObjectRetain(v302);
    }
    v305 = *((_QWORD *)v125 + 222);
    if (v305 == 1)
    {
      v306 = *((_OWORD *)v125 + 111);
      *(_OWORD *)(v124 + 1785) = *(_OWORD *)(v125 + 1785);
      *((_OWORD *)v124 + 111) = v306;
    }
    else
    {
      *((_QWORD *)v124 + 222) = v305;
      v124[1784] = v125[1784];
      v307 = *((_QWORD *)v125 + 224);
      v124[1800] = v125[1800];
      *((_QWORD *)v124 + 224) = v307;
      swift_bridgeObjectRetain(v305);
    }
    v308 = *((_QWORD *)v125 + 226);
    if (v308 == 1)
    {
      v309 = *((_OWORD *)v125 + 113);
      *(_OWORD *)(v124 + 1817) = *(_OWORD *)(v125 + 1817);
      *((_OWORD *)v124 + 113) = v309;
    }
    else
    {
      *((_QWORD *)v124 + 226) = v308;
      v124[1816] = v125[1816];
      v310 = *((_QWORD *)v125 + 228);
      v124[1832] = v125[1832];
      *((_QWORD *)v124 + 228) = v310;
      swift_bridgeObjectRetain(v308);
    }
    v311 = *((_QWORD *)v125 + 230);
    if (v311 == 1)
    {
      v312 = *((_OWORD *)v125 + 115);
      *(_OWORD *)(v124 + 1849) = *(_OWORD *)(v125 + 1849);
      *((_OWORD *)v124 + 115) = v312;
    }
    else
    {
      *((_QWORD *)v124 + 230) = v311;
      v124[1848] = v125[1848];
      v313 = *((_QWORD *)v125 + 232);
      v124[1864] = v125[1864];
      *((_QWORD *)v124 + 232) = v313;
      swift_bridgeObjectRetain(v311);
    }
    v314 = *((_QWORD *)v125 + 234);
    if (v314 == 1)
    {
      v315 = *((_OWORD *)v125 + 117);
      *(_OWORD *)(v124 + 1881) = *(_OWORD *)(v125 + 1881);
      *((_OWORD *)v124 + 117) = v315;
    }
    else
    {
      *((_QWORD *)v124 + 234) = v314;
      v124[1880] = v125[1880];
      v316 = *((_QWORD *)v125 + 236);
      v124[1896] = v125[1896];
      *((_QWORD *)v124 + 236) = v316;
      swift_bridgeObjectRetain(v314);
    }
    v317 = *((_QWORD *)v125 + 238);
    if (v317 == 1)
    {
      v318 = *((_OWORD *)v125 + 119);
      *(_OWORD *)(v124 + 1913) = *(_OWORD *)(v125 + 1913);
      *((_OWORD *)v124 + 119) = v318;
    }
    else
    {
      *((_QWORD *)v124 + 238) = v317;
      v124[1912] = v125[1912];
      v319 = *((_QWORD *)v125 + 240);
      v124[1928] = v125[1928];
      *((_QWORD *)v124 + 240) = v319;
      swift_bridgeObjectRetain(v317);
    }
    v320 = *((_QWORD *)v125 + 242);
    if (v320 == 1)
    {
      v321 = *((_OWORD *)v125 + 121);
      *(_OWORD *)(v124 + 1945) = *(_OWORD *)(v125 + 1945);
      *((_OWORD *)v124 + 121) = v321;
    }
    else
    {
      *((_QWORD *)v124 + 242) = v320;
      v124[1944] = v125[1944];
      v322 = *((_QWORD *)v125 + 244);
      v124[1960] = v125[1960];
      *((_QWORD *)v124 + 244) = v322;
      swift_bridgeObjectRetain(v320);
    }
    v323 = *((_QWORD *)v125 + 246);
    if (v323 == 1)
    {
      v324 = *((_OWORD *)v125 + 123);
      *(_OWORD *)(v124 + 1977) = *(_OWORD *)(v125 + 1977);
      *((_OWORD *)v124 + 123) = v324;
    }
    else
    {
      *((_QWORD *)v124 + 246) = v323;
      v124[1976] = v125[1976];
      v325 = *((_QWORD *)v125 + 248);
      v124[1992] = v125[1992];
      *((_QWORD *)v124 + 248) = v325;
      swift_bridgeObjectRetain(v323);
    }
    v326 = *((_QWORD *)v125 + 250);
    if (v326 == 1)
    {
      v327 = *((_OWORD *)v125 + 125);
      *(_OWORD *)(v124 + 2009) = *(_OWORD *)(v125 + 2009);
      *((_OWORD *)v124 + 125) = v327;
    }
    else
    {
      *((_QWORD *)v124 + 250) = v326;
      v124[2008] = v125[2008];
      v328 = *((_QWORD *)v125 + 252);
      v124[2024] = v125[2024];
      *((_QWORD *)v124 + 252) = v328;
      swift_bridgeObjectRetain(v326);
    }
    v329 = *((_QWORD *)v125 + 254);
    if (v329 == 1)
    {
      v330 = *((_OWORD *)v125 + 127);
      *(_OWORD *)(v124 + 2041) = *(_OWORD *)(v125 + 2041);
      *((_OWORD *)v124 + 127) = v330;
    }
    else
    {
      *((_QWORD *)v124 + 254) = v329;
      v124[2040] = v125[2040];
      v331 = *((_QWORD *)v125 + 256);
      v124[2056] = v125[2056];
      *((_QWORD *)v124 + 256) = v331;
      swift_bridgeObjectRetain(v329);
    }
    v332 = *((_QWORD *)v125 + 258);
    if (v332 == 1)
    {
      v333 = *((_OWORD *)v125 + 129);
      *(_OWORD *)(v124 + 2073) = *(_OWORD *)(v125 + 2073);
      *((_OWORD *)v124 + 129) = v333;
    }
    else
    {
      *((_QWORD *)v124 + 258) = v332;
      v124[2072] = v125[2072];
      v334 = *((_QWORD *)v125 + 260);
      v124[2088] = v125[2088];
      *((_QWORD *)v124 + 260) = v334;
      swift_bridgeObjectRetain(v332);
    }
    v335 = *((_QWORD *)v125 + 262);
    if (v335 == 1)
    {
      v336 = *((_OWORD *)v125 + 131);
      *(_OWORD *)(v124 + 2105) = *(_OWORD *)(v125 + 2105);
      *((_OWORD *)v124 + 131) = v336;
    }
    else
    {
      *((_QWORD *)v124 + 262) = v335;
      v124[2104] = v125[2104];
      v337 = *((_QWORD *)v125 + 264);
      v124[2120] = v125[2120];
      *((_QWORD *)v124 + 264) = v337;
      swift_bridgeObjectRetain(v335);
    }
    v338 = *((_QWORD *)v125 + 266);
    if (v338 == 1)
    {
      v339 = *((_OWORD *)v125 + 133);
      *(_OWORD *)(v124 + 2137) = *(_OWORD *)(v125 + 2137);
      *((_OWORD *)v124 + 133) = v339;
    }
    else
    {
      *((_QWORD *)v124 + 266) = v338;
      v124[2136] = v125[2136];
      v340 = *((_QWORD *)v125 + 268);
      v124[2152] = v125[2152];
      *((_QWORD *)v124 + 268) = v340;
      swift_bridgeObjectRetain(v338);
    }
    v341 = *((_QWORD *)v125 + 270);
    if (v341 == 1)
    {
      v342 = *((_OWORD *)v125 + 135);
      *(_OWORD *)(v124 + 2169) = *(_OWORD *)(v125 + 2169);
      *((_OWORD *)v124 + 135) = v342;
    }
    else
    {
      *((_QWORD *)v124 + 270) = v341;
      v124[2168] = v125[2168];
      v343 = *((_QWORD *)v125 + 272);
      v124[2184] = v125[2184];
      *((_QWORD *)v124 + 272) = v343;
      swift_bridgeObjectRetain(v341);
    }
    v344 = *((_QWORD *)v125 + 274);
    if (v344 == 1)
    {
      v345 = *((_OWORD *)v125 + 137);
      *(_OWORD *)(v124 + 2201) = *(_OWORD *)(v125 + 2201);
      *((_OWORD *)v124 + 137) = v345;
    }
    else
    {
      *((_QWORD *)v124 + 274) = v344;
      v124[2200] = v125[2200];
      v346 = *((_QWORD *)v125 + 276);
      v124[2216] = v125[2216];
      *((_QWORD *)v124 + 276) = v346;
      swift_bridgeObjectRetain(v344);
    }
    v347 = *((_QWORD *)v125 + 278);
    if (v347 == 1)
    {
      v348 = *((_OWORD *)v125 + 139);
      *(_OWORD *)(v124 + 2233) = *(_OWORD *)(v125 + 2233);
      *((_OWORD *)v124 + 139) = v348;
    }
    else
    {
      *((_QWORD *)v124 + 278) = v347;
      v124[2232] = v125[2232];
      v349 = *((_QWORD *)v125 + 280);
      v124[2248] = v125[2248];
      *((_QWORD *)v124 + 280) = v349;
      swift_bridgeObjectRetain(v347);
    }
    v350 = *((_QWORD *)v125 + 282);
    if (v350 == 1)
    {
      v351 = *((_OWORD *)v125 + 141);
      *(_OWORD *)(v124 + 2265) = *(_OWORD *)(v125 + 2265);
      *((_OWORD *)v124 + 141) = v351;
    }
    else
    {
      *((_QWORD *)v124 + 282) = v350;
      v124[2264] = v125[2264];
      v352 = *((_QWORD *)v125 + 284);
      v124[2280] = v125[2280];
      *((_QWORD *)v124 + 284) = v352;
      swift_bridgeObjectRetain(v350);
    }
    v353 = *((_QWORD *)v125 + 286);
    if (v353 == 1)
    {
      v354 = *((_OWORD *)v125 + 143);
      *(_OWORD *)(v124 + 2297) = *(_OWORD *)(v125 + 2297);
      *((_OWORD *)v124 + 143) = v354;
    }
    else
    {
      *((_QWORD *)v124 + 286) = v353;
      v124[2296] = v125[2296];
      v355 = *((_QWORD *)v125 + 288);
      v124[2312] = v125[2312];
      *((_QWORD *)v124 + 288) = v355;
      swift_bridgeObjectRetain(v353);
    }
    v356 = *((_QWORD *)v125 + 290);
    if (v356 == 1)
    {
      v357 = *((_OWORD *)v125 + 145);
      *(_OWORD *)(v124 + 2329) = *(_OWORD *)(v125 + 2329);
      *((_OWORD *)v124 + 145) = v357;
    }
    else
    {
      *((_QWORD *)v124 + 290) = v356;
      v124[2328] = v125[2328];
      v358 = *((_QWORD *)v125 + 292);
      v124[2344] = v125[2344];
      *((_QWORD *)v124 + 292) = v358;
      swift_bridgeObjectRetain(v356);
    }
    v359 = *((_QWORD *)v125 + 294);
    if (v359 == 1)
    {
      v360 = *((_OWORD *)v125 + 147);
      *(_OWORD *)(v124 + 2361) = *(_OWORD *)(v125 + 2361);
      *((_OWORD *)v124 + 147) = v360;
    }
    else
    {
      *((_QWORD *)v124 + 294) = v359;
      v124[2360] = v125[2360];
      v361 = *((_QWORD *)v125 + 296);
      v124[2376] = v125[2376];
      *((_QWORD *)v124 + 296) = v361;
      swift_bridgeObjectRetain(v359);
    }
    v362 = *((_QWORD *)v125 + 298);
    if (v362 == 1)
    {
      v363 = *((_OWORD *)v125 + 149);
      *(_OWORD *)(v124 + 2393) = *(_OWORD *)(v125 + 2393);
      *((_OWORD *)v124 + 149) = v363;
    }
    else
    {
      *((_QWORD *)v124 + 298) = v362;
      v124[2392] = v125[2392];
      v364 = *((_QWORD *)v125 + 300);
      v124[2408] = v125[2408];
      *((_QWORD *)v124 + 300) = v364;
      swift_bridgeObjectRetain(v362);
    }
    v365 = *((_QWORD *)v125 + 302);
    if (v365 == 1)
    {
      v366 = *((_OWORD *)v125 + 151);
      *(_OWORD *)(v124 + 2425) = *(_OWORD *)(v125 + 2425);
      *((_OWORD *)v124 + 151) = v366;
    }
    else
    {
      *((_QWORD *)v124 + 302) = v365;
      v124[2424] = v125[2424];
      v367 = *((_QWORD *)v125 + 304);
      v124[2440] = v125[2440];
      *((_QWORD *)v124 + 304) = v367;
      swift_bridgeObjectRetain(v365);
    }
    v368 = *((_OWORD *)v125 + 153);
    v124[2464] = v125[2464];
    *((_OWORD *)v124 + 153) = v368;
    v369 = *(_OWORD *)(v125 + 2472);
    v124[2488] = v125[2488];
    *(_OWORD *)(v124 + 2472) = v369;
    v124[2489] = v125[2489];
    v124[2490] = v125[2490];
    v124[2491] = v125[2491];
    v124[2492] = v125[2492];
    v124[2493] = v125[2493];
    v124[2494] = v125[2494];
    v124[2495] = v125[2495];
    v370 = *((_QWORD *)v125 + 312);
    *((_QWORD *)v124 + 312) = v370;
    v371 = *((_QWORD *)v125 + 313);
    *((_QWORD *)v124 + 313) = v371;
    swift_bridgeObjectRetain(v370);
    swift_bridgeObjectRetain(v371);
  }
  v372 = v124 + 2512;
  v373 = (uint64_t *)(v125 + 2512);
  if (*((_QWORD *)v125 + 416) == 1)
  {
    memcpy(v372, v373, 0x340uLL);
  }
  else
  {
    v374 = *v373;
    if (*v373 == 1)
    {
      v375 = *(_OWORD *)v373;
      *(_OWORD *)(v124 + 2521) = *(_OWORD *)(v125 + 2521);
      *v372 = v375;
    }
    else
    {
      *((_QWORD *)v124 + 314) = v374;
      v124[2520] = v125[2520];
      v376 = *((_QWORD *)v125 + 316);
      v124[2536] = v125[2536];
      *((_QWORD *)v124 + 316) = v376;
      swift_bridgeObjectRetain(v374);
    }
    v377 = *((_QWORD *)v125 + 318);
    if (v377 == 1)
    {
      v378 = *((_OWORD *)v125 + 159);
      *(_OWORD *)(v124 + 2553) = *(_OWORD *)(v125 + 2553);
      *((_OWORD *)v124 + 159) = v378;
    }
    else
    {
      *((_QWORD *)v124 + 318) = v377;
      v124[2552] = v125[2552];
      v379 = *((_QWORD *)v125 + 320);
      v124[2568] = v125[2568];
      *((_QWORD *)v124 + 320) = v379;
      swift_bridgeObjectRetain(v377);
    }
    v380 = *((_QWORD *)v125 + 322);
    if (v380 == 1)
    {
      v381 = *((_OWORD *)v125 + 161);
      *(_OWORD *)(v124 + 2585) = *(_OWORD *)(v125 + 2585);
      *((_OWORD *)v124 + 161) = v381;
    }
    else
    {
      *((_QWORD *)v124 + 322) = v380;
      v124[2584] = v125[2584];
      v382 = *((_QWORD *)v125 + 324);
      v124[2600] = v125[2600];
      *((_QWORD *)v124 + 324) = v382;
      swift_bridgeObjectRetain(v380);
    }
    v383 = *((_QWORD *)v125 + 326);
    if (v383 == 1)
    {
      v384 = *((_OWORD *)v125 + 163);
      *(_OWORD *)(v124 + 2617) = *(_OWORD *)(v125 + 2617);
      *((_OWORD *)v124 + 163) = v384;
    }
    else
    {
      *((_QWORD *)v124 + 326) = v383;
      v124[2616] = v125[2616];
      v385 = *((_QWORD *)v125 + 328);
      v124[2632] = v125[2632];
      *((_QWORD *)v124 + 328) = v385;
      swift_bridgeObjectRetain(v383);
    }
    v386 = *((_QWORD *)v125 + 330);
    if (v386 == 1)
    {
      v387 = *((_OWORD *)v125 + 165);
      *(_OWORD *)(v124 + 2649) = *(_OWORD *)(v125 + 2649);
      *((_OWORD *)v124 + 165) = v387;
    }
    else
    {
      *((_QWORD *)v124 + 330) = v386;
      v124[2648] = v125[2648];
      v388 = *((_QWORD *)v125 + 332);
      v124[2664] = v125[2664];
      *((_QWORD *)v124 + 332) = v388;
      swift_bridgeObjectRetain(v386);
    }
    v389 = *((_QWORD *)v125 + 334);
    if (v389 == 1)
    {
      v390 = *((_OWORD *)v125 + 167);
      *(_OWORD *)(v124 + 2681) = *(_OWORD *)(v125 + 2681);
      *((_OWORD *)v124 + 167) = v390;
    }
    else
    {
      *((_QWORD *)v124 + 334) = v389;
      v124[2680] = v125[2680];
      v391 = *((_QWORD *)v125 + 336);
      v124[2696] = v125[2696];
      *((_QWORD *)v124 + 336) = v391;
      swift_bridgeObjectRetain(v389);
    }
    v392 = *((_QWORD *)v125 + 338);
    if (v392 == 1)
    {
      v393 = *((_OWORD *)v125 + 169);
      *(_OWORD *)(v124 + 2713) = *(_OWORD *)(v125 + 2713);
      *((_OWORD *)v124 + 169) = v393;
    }
    else
    {
      *((_QWORD *)v124 + 338) = v392;
      v124[2712] = v125[2712];
      v394 = *((_QWORD *)v125 + 340);
      v124[2728] = v125[2728];
      *((_QWORD *)v124 + 340) = v394;
      swift_bridgeObjectRetain(v392);
    }
    v395 = *((_QWORD *)v125 + 342);
    if (v395 == 1)
    {
      v396 = *((_OWORD *)v125 + 171);
      *(_OWORD *)(v124 + 2745) = *(_OWORD *)(v125 + 2745);
      *((_OWORD *)v124 + 171) = v396;
    }
    else
    {
      *((_QWORD *)v124 + 342) = v395;
      v124[2744] = v125[2744];
      v397 = *((_QWORD *)v125 + 344);
      v124[2760] = v125[2760];
      *((_QWORD *)v124 + 344) = v397;
      swift_bridgeObjectRetain(v395);
    }
    v398 = *((_QWORD *)v125 + 346);
    if (v398 == 1)
    {
      v399 = *((_OWORD *)v125 + 173);
      *(_OWORD *)(v124 + 2777) = *(_OWORD *)(v125 + 2777);
      *((_OWORD *)v124 + 173) = v399;
    }
    else
    {
      *((_QWORD *)v124 + 346) = v398;
      v124[2776] = v125[2776];
      v400 = *((_QWORD *)v125 + 348);
      v124[2792] = v125[2792];
      *((_QWORD *)v124 + 348) = v400;
      swift_bridgeObjectRetain(v398);
    }
    v401 = *((_QWORD *)v125 + 350);
    if (v401 == 1)
    {
      v402 = *((_OWORD *)v125 + 175);
      *(_OWORD *)(v124 + 2809) = *(_OWORD *)(v125 + 2809);
      *((_OWORD *)v124 + 175) = v402;
    }
    else
    {
      *((_QWORD *)v124 + 350) = v401;
      v124[2808] = v125[2808];
      v403 = *((_QWORD *)v125 + 352);
      v124[2824] = v125[2824];
      *((_QWORD *)v124 + 352) = v403;
      swift_bridgeObjectRetain(v401);
    }
    v404 = *((_QWORD *)v125 + 354);
    if (v404 == 1)
    {
      v405 = *((_OWORD *)v125 + 177);
      *(_OWORD *)(v124 + 2841) = *(_OWORD *)(v125 + 2841);
      *((_OWORD *)v124 + 177) = v405;
    }
    else
    {
      *((_QWORD *)v124 + 354) = v404;
      v124[2840] = v125[2840];
      v406 = *((_QWORD *)v125 + 356);
      v124[2856] = v125[2856];
      *((_QWORD *)v124 + 356) = v406;
      swift_bridgeObjectRetain(v404);
    }
    v407 = *((_QWORD *)v125 + 358);
    if (v407 == 1)
    {
      v408 = *((_OWORD *)v125 + 179);
      *(_OWORD *)(v124 + 2873) = *(_OWORD *)(v125 + 2873);
      *((_OWORD *)v124 + 179) = v408;
    }
    else
    {
      *((_QWORD *)v124 + 358) = v407;
      v124[2872] = v125[2872];
      v409 = *((_QWORD *)v125 + 360);
      v124[2888] = v125[2888];
      *((_QWORD *)v124 + 360) = v409;
      swift_bridgeObjectRetain(v407);
    }
    v410 = *((_QWORD *)v125 + 362);
    if (v410 == 1)
    {
      v411 = *((_OWORD *)v125 + 181);
      *(_OWORD *)(v124 + 2905) = *(_OWORD *)(v125 + 2905);
      *((_OWORD *)v124 + 181) = v411;
    }
    else
    {
      *((_QWORD *)v124 + 362) = v410;
      v124[2904] = v125[2904];
      v412 = *((_QWORD *)v125 + 364);
      v124[2920] = v125[2920];
      *((_QWORD *)v124 + 364) = v412;
      swift_bridgeObjectRetain(v410);
    }
    v413 = *((_QWORD *)v125 + 366);
    if (v413 == 1)
    {
      v414 = *((_OWORD *)v125 + 183);
      *(_OWORD *)(v124 + 2937) = *(_OWORD *)(v125 + 2937);
      *((_OWORD *)v124 + 183) = v414;
    }
    else
    {
      *((_QWORD *)v124 + 366) = v413;
      v124[2936] = v125[2936];
      v415 = *((_QWORD *)v125 + 368);
      v124[2952] = v125[2952];
      *((_QWORD *)v124 + 368) = v415;
      swift_bridgeObjectRetain(v413);
    }
    v416 = *((_QWORD *)v125 + 370);
    if (v416 == 1)
    {
      v417 = *((_OWORD *)v125 + 185);
      *(_OWORD *)(v124 + 2969) = *(_OWORD *)(v125 + 2969);
      *((_OWORD *)v124 + 185) = v417;
    }
    else
    {
      *((_QWORD *)v124 + 370) = v416;
      v124[2968] = v125[2968];
      v418 = *((_QWORD *)v125 + 372);
      v124[2984] = v125[2984];
      *((_QWORD *)v124 + 372) = v418;
      swift_bridgeObjectRetain(v416);
    }
    v419 = *((_QWORD *)v125 + 374);
    if (v419 == 1)
    {
      v420 = *((_OWORD *)v125 + 187);
      *(_OWORD *)(v124 + 3001) = *(_OWORD *)(v125 + 3001);
      *((_OWORD *)v124 + 187) = v420;
    }
    else
    {
      *((_QWORD *)v124 + 374) = v419;
      v124[3000] = v125[3000];
      v421 = *((_QWORD *)v125 + 376);
      v124[3016] = v125[3016];
      *((_QWORD *)v124 + 376) = v421;
      swift_bridgeObjectRetain(v419);
    }
    v422 = *((_QWORD *)v125 + 378);
    if (v422 == 1)
    {
      v423 = *((_OWORD *)v125 + 189);
      *(_OWORD *)(v124 + 3033) = *(_OWORD *)(v125 + 3033);
      *((_OWORD *)v124 + 189) = v423;
    }
    else
    {
      *((_QWORD *)v124 + 378) = v422;
      v124[3032] = v125[3032];
      v424 = *((_QWORD *)v125 + 380);
      v124[3048] = v125[3048];
      *((_QWORD *)v124 + 380) = v424;
      swift_bridgeObjectRetain(v422);
    }
    v425 = *((_QWORD *)v125 + 382);
    if (v425 == 1)
    {
      v426 = *((_OWORD *)v125 + 191);
      *(_OWORD *)(v124 + 3065) = *(_OWORD *)(v125 + 3065);
      *((_OWORD *)v124 + 191) = v426;
    }
    else
    {
      *((_QWORD *)v124 + 382) = v425;
      v124[3064] = v125[3064];
      v427 = *((_QWORD *)v125 + 384);
      v124[3080] = v125[3080];
      *((_QWORD *)v124 + 384) = v427;
      swift_bridgeObjectRetain(v425);
    }
    v428 = *((_QWORD *)v125 + 386);
    if (v428 == 1)
    {
      v429 = *((_OWORD *)v125 + 193);
      *(_OWORD *)(v124 + 3097) = *(_OWORD *)(v125 + 3097);
      *((_OWORD *)v124 + 193) = v429;
    }
    else
    {
      *((_QWORD *)v124 + 386) = v428;
      v124[3096] = v125[3096];
      v430 = *((_QWORD *)v125 + 388);
      v124[3112] = v125[3112];
      *((_QWORD *)v124 + 388) = v430;
      swift_bridgeObjectRetain(v428);
    }
    v431 = *((_QWORD *)v125 + 390);
    if (v431 == 1)
    {
      v432 = *((_OWORD *)v125 + 195);
      *(_OWORD *)(v124 + 3129) = *(_OWORD *)(v125 + 3129);
      *((_OWORD *)v124 + 195) = v432;
    }
    else
    {
      *((_QWORD *)v124 + 390) = v431;
      v124[3128] = v125[3128];
      v433 = *((_QWORD *)v125 + 392);
      v124[3144] = v125[3144];
      *((_QWORD *)v124 + 392) = v433;
      swift_bridgeObjectRetain(v431);
    }
    v434 = *((_QWORD *)v125 + 394);
    if (v434 == 1)
    {
      v435 = *((_OWORD *)v125 + 197);
      *(_OWORD *)(v124 + 3161) = *(_OWORD *)(v125 + 3161);
      *((_OWORD *)v124 + 197) = v435;
    }
    else
    {
      *((_QWORD *)v124 + 394) = v434;
      v124[3160] = v125[3160];
      v436 = *((_QWORD *)v125 + 396);
      v124[3176] = v125[3176];
      *((_QWORD *)v124 + 396) = v436;
      swift_bridgeObjectRetain(v434);
    }
    v437 = *((_QWORD *)v125 + 398);
    if (v437 == 1)
    {
      v438 = *((_OWORD *)v125 + 199);
      *(_OWORD *)(v124 + 3193) = *(_OWORD *)(v125 + 3193);
      *((_OWORD *)v124 + 199) = v438;
    }
    else
    {
      *((_QWORD *)v124 + 398) = v437;
      v124[3192] = v125[3192];
      v439 = *((_QWORD *)v125 + 400);
      v124[3208] = v125[3208];
      *((_QWORD *)v124 + 400) = v439;
      swift_bridgeObjectRetain(v437);
    }
    v440 = *((_QWORD *)v125 + 402);
    if (v440 == 1)
    {
      v441 = *((_OWORD *)v125 + 201);
      *(_OWORD *)(v124 + 3225) = *(_OWORD *)(v125 + 3225);
      *((_OWORD *)v124 + 201) = v441;
    }
    else
    {
      *((_QWORD *)v124 + 402) = v440;
      v124[3224] = v125[3224];
      v442 = *((_QWORD *)v125 + 404);
      v124[3240] = v125[3240];
      *((_QWORD *)v124 + 404) = v442;
      swift_bridgeObjectRetain(v440);
    }
    v443 = *((_QWORD *)v125 + 406);
    if (v443 == 1)
    {
      v444 = *((_OWORD *)v125 + 203);
      *(_OWORD *)(v124 + 3257) = *(_OWORD *)(v125 + 3257);
      *((_OWORD *)v124 + 203) = v444;
    }
    else
    {
      *((_QWORD *)v124 + 406) = v443;
      v124[3256] = v125[3256];
      v445 = *((_QWORD *)v125 + 408);
      v124[3272] = v125[3272];
      *((_QWORD *)v124 + 408) = v445;
      swift_bridgeObjectRetain(v443);
    }
    v446 = *((_OWORD *)v125 + 205);
    v124[3296] = v125[3296];
    *((_OWORD *)v124 + 205) = v446;
    v447 = *(_OWORD *)(v125 + 3304);
    v124[3320] = v125[3320];
    *(_OWORD *)(v124 + 3304) = v447;
    v124[3321] = v125[3321];
    v124[3322] = v125[3322];
    v124[3323] = v125[3323];
    v124[3324] = v125[3324];
    v124[3325] = v125[3325];
    v124[3326] = v125[3326];
    v124[3327] = v125[3327];
    v448 = *((_QWORD *)v125 + 416);
    *((_QWORD *)v124 + 416) = v448;
    v449 = *((_QWORD *)v125 + 417);
    *((_QWORD *)v124 + 417) = v449;
    swift_bridgeObjectRetain(v448);
    swift_bridgeObjectRetain(v449);
  }
  v450 = v124 + 3344;
  v451 = (uint64_t *)(v125 + 3344);
  if (*((_QWORD *)v125 + 520) == 1)
  {
    memcpy(v450, v451, 0x340uLL);
  }
  else
  {
    v452 = *v451;
    if (*v451 == 1)
    {
      v453 = *(_OWORD *)v451;
      *(_OWORD *)(v124 + 3353) = *(_OWORD *)(v125 + 3353);
      *v450 = v453;
    }
    else
    {
      *((_QWORD *)v124 + 418) = v452;
      v124[3352] = v125[3352];
      v454 = *((_QWORD *)v125 + 420);
      v124[3368] = v125[3368];
      *((_QWORD *)v124 + 420) = v454;
      swift_bridgeObjectRetain(v452);
    }
    v455 = *((_QWORD *)v125 + 422);
    if (v455 == 1)
    {
      v456 = *((_OWORD *)v125 + 211);
      *(_OWORD *)(v124 + 3385) = *(_OWORD *)(v125 + 3385);
      *((_OWORD *)v124 + 211) = v456;
    }
    else
    {
      *((_QWORD *)v124 + 422) = v455;
      v124[3384] = v125[3384];
      v457 = *((_QWORD *)v125 + 424);
      v124[3400] = v125[3400];
      *((_QWORD *)v124 + 424) = v457;
      swift_bridgeObjectRetain(v455);
    }
    v458 = *((_QWORD *)v125 + 426);
    if (v458 == 1)
    {
      v459 = *((_OWORD *)v125 + 213);
      *(_OWORD *)(v124 + 3417) = *(_OWORD *)(v125 + 3417);
      *((_OWORD *)v124 + 213) = v459;
    }
    else
    {
      *((_QWORD *)v124 + 426) = v458;
      v124[3416] = v125[3416];
      v460 = *((_QWORD *)v125 + 428);
      v124[3432] = v125[3432];
      *((_QWORD *)v124 + 428) = v460;
      swift_bridgeObjectRetain(v458);
    }
    v461 = *((_QWORD *)v125 + 430);
    if (v461 == 1)
    {
      v462 = *((_OWORD *)v125 + 215);
      *(_OWORD *)(v124 + 3449) = *(_OWORD *)(v125 + 3449);
      *((_OWORD *)v124 + 215) = v462;
    }
    else
    {
      *((_QWORD *)v124 + 430) = v461;
      v124[3448] = v125[3448];
      v463 = *((_QWORD *)v125 + 432);
      v124[3464] = v125[3464];
      *((_QWORD *)v124 + 432) = v463;
      swift_bridgeObjectRetain(v461);
    }
    v464 = *((_QWORD *)v125 + 434);
    if (v464 == 1)
    {
      v465 = *((_OWORD *)v125 + 217);
      *(_OWORD *)(v124 + 3481) = *(_OWORD *)(v125 + 3481);
      *((_OWORD *)v124 + 217) = v465;
    }
    else
    {
      *((_QWORD *)v124 + 434) = v464;
      v124[3480] = v125[3480];
      v466 = *((_QWORD *)v125 + 436);
      v124[3496] = v125[3496];
      *((_QWORD *)v124 + 436) = v466;
      swift_bridgeObjectRetain(v464);
    }
    v467 = *((_QWORD *)v125 + 438);
    if (v467 == 1)
    {
      v468 = *((_OWORD *)v125 + 219);
      *(_OWORD *)(v124 + 3513) = *(_OWORD *)(v125 + 3513);
      *((_OWORD *)v124 + 219) = v468;
    }
    else
    {
      *((_QWORD *)v124 + 438) = v467;
      v124[3512] = v125[3512];
      v469 = *((_QWORD *)v125 + 440);
      v124[3528] = v125[3528];
      *((_QWORD *)v124 + 440) = v469;
      swift_bridgeObjectRetain(v467);
    }
    v470 = *((_QWORD *)v125 + 442);
    if (v470 == 1)
    {
      v471 = *((_OWORD *)v125 + 221);
      *(_OWORD *)(v124 + 3545) = *(_OWORD *)(v125 + 3545);
      *((_OWORD *)v124 + 221) = v471;
    }
    else
    {
      *((_QWORD *)v124 + 442) = v470;
      v124[3544] = v125[3544];
      v472 = *((_QWORD *)v125 + 444);
      v124[3560] = v125[3560];
      *((_QWORD *)v124 + 444) = v472;
      swift_bridgeObjectRetain(v470);
    }
    v473 = *((_QWORD *)v125 + 446);
    if (v473 == 1)
    {
      v474 = *((_OWORD *)v125 + 223);
      *(_OWORD *)(v124 + 3577) = *(_OWORD *)(v125 + 3577);
      *((_OWORD *)v124 + 223) = v474;
    }
    else
    {
      *((_QWORD *)v124 + 446) = v473;
      v124[3576] = v125[3576];
      v475 = *((_QWORD *)v125 + 448);
      v124[3592] = v125[3592];
      *((_QWORD *)v124 + 448) = v475;
      swift_bridgeObjectRetain(v473);
    }
    v476 = *((_QWORD *)v125 + 450);
    if (v476 == 1)
    {
      v477 = *((_OWORD *)v125 + 225);
      *(_OWORD *)(v124 + 3609) = *(_OWORD *)(v125 + 3609);
      *((_OWORD *)v124 + 225) = v477;
    }
    else
    {
      *((_QWORD *)v124 + 450) = v476;
      v124[3608] = v125[3608];
      v478 = *((_QWORD *)v125 + 452);
      v124[3624] = v125[3624];
      *((_QWORD *)v124 + 452) = v478;
      swift_bridgeObjectRetain(v476);
    }
    v479 = *((_QWORD *)v125 + 454);
    if (v479 == 1)
    {
      v480 = *((_OWORD *)v125 + 227);
      *(_OWORD *)(v124 + 3641) = *(_OWORD *)(v125 + 3641);
      *((_OWORD *)v124 + 227) = v480;
    }
    else
    {
      *((_QWORD *)v124 + 454) = v479;
      v124[3640] = v125[3640];
      v481 = *((_QWORD *)v125 + 456);
      v124[3656] = v125[3656];
      *((_QWORD *)v124 + 456) = v481;
      swift_bridgeObjectRetain(v479);
    }
    v482 = *((_QWORD *)v125 + 458);
    if (v482 == 1)
    {
      v483 = *((_OWORD *)v125 + 229);
      *(_OWORD *)(v124 + 3673) = *(_OWORD *)(v125 + 3673);
      *((_OWORD *)v124 + 229) = v483;
    }
    else
    {
      *((_QWORD *)v124 + 458) = v482;
      v124[3672] = v125[3672];
      v484 = *((_QWORD *)v125 + 460);
      v124[3688] = v125[3688];
      *((_QWORD *)v124 + 460) = v484;
      swift_bridgeObjectRetain(v482);
    }
    v485 = *((_QWORD *)v125 + 462);
    if (v485 == 1)
    {
      v486 = *((_OWORD *)v125 + 231);
      *(_OWORD *)(v124 + 3705) = *(_OWORD *)(v125 + 3705);
      *((_OWORD *)v124 + 231) = v486;
    }
    else
    {
      *((_QWORD *)v124 + 462) = v485;
      v124[3704] = v125[3704];
      v487 = *((_QWORD *)v125 + 464);
      v124[3720] = v125[3720];
      *((_QWORD *)v124 + 464) = v487;
      swift_bridgeObjectRetain(v485);
    }
    v488 = *((_QWORD *)v125 + 466);
    if (v488 == 1)
    {
      v489 = *((_OWORD *)v125 + 233);
      *(_OWORD *)(v124 + 3737) = *(_OWORD *)(v125 + 3737);
      *((_OWORD *)v124 + 233) = v489;
    }
    else
    {
      *((_QWORD *)v124 + 466) = v488;
      v124[3736] = v125[3736];
      v490 = *((_QWORD *)v125 + 468);
      v124[3752] = v125[3752];
      *((_QWORD *)v124 + 468) = v490;
      swift_bridgeObjectRetain(v488);
    }
    v491 = *((_QWORD *)v125 + 470);
    if (v491 == 1)
    {
      v492 = *((_OWORD *)v125 + 235);
      *(_OWORD *)(v124 + 3769) = *(_OWORD *)(v125 + 3769);
      *((_OWORD *)v124 + 235) = v492;
    }
    else
    {
      *((_QWORD *)v124 + 470) = v491;
      v124[3768] = v125[3768];
      v493 = *((_QWORD *)v125 + 472);
      v124[3784] = v125[3784];
      *((_QWORD *)v124 + 472) = v493;
      swift_bridgeObjectRetain(v491);
    }
    v494 = *((_QWORD *)v125 + 474);
    if (v494 == 1)
    {
      v495 = *((_OWORD *)v125 + 237);
      *(_OWORD *)(v124 + 3801) = *(_OWORD *)(v125 + 3801);
      *((_OWORD *)v124 + 237) = v495;
    }
    else
    {
      *((_QWORD *)v124 + 474) = v494;
      v124[3800] = v125[3800];
      v496 = *((_QWORD *)v125 + 476);
      v124[3816] = v125[3816];
      *((_QWORD *)v124 + 476) = v496;
      swift_bridgeObjectRetain(v494);
    }
    v497 = *((_QWORD *)v125 + 478);
    if (v497 == 1)
    {
      v498 = *((_OWORD *)v125 + 239);
      *(_OWORD *)(v124 + 3833) = *(_OWORD *)(v125 + 3833);
      *((_OWORD *)v124 + 239) = v498;
    }
    else
    {
      *((_QWORD *)v124 + 478) = v497;
      v124[3832] = v125[3832];
      v499 = *((_QWORD *)v125 + 480);
      v124[3848] = v125[3848];
      *((_QWORD *)v124 + 480) = v499;
      swift_bridgeObjectRetain(v497);
    }
    v500 = *((_QWORD *)v125 + 482);
    if (v500 == 1)
    {
      v501 = *((_OWORD *)v125 + 241);
      *(_OWORD *)(v124 + 3865) = *(_OWORD *)(v125 + 3865);
      *((_OWORD *)v124 + 241) = v501;
    }
    else
    {
      *((_QWORD *)v124 + 482) = v500;
      v124[3864] = v125[3864];
      v502 = *((_QWORD *)v125 + 484);
      v124[3880] = v125[3880];
      *((_QWORD *)v124 + 484) = v502;
      swift_bridgeObjectRetain(v500);
    }
    v503 = *((_QWORD *)v125 + 486);
    if (v503 == 1)
    {
      v504 = *((_OWORD *)v125 + 243);
      *(_OWORD *)(v124 + 3897) = *(_OWORD *)(v125 + 3897);
      *((_OWORD *)v124 + 243) = v504;
    }
    else
    {
      *((_QWORD *)v124 + 486) = v503;
      v124[3896] = v125[3896];
      v505 = *((_QWORD *)v125 + 488);
      v124[3912] = v125[3912];
      *((_QWORD *)v124 + 488) = v505;
      swift_bridgeObjectRetain(v503);
    }
    v506 = *((_QWORD *)v125 + 490);
    if (v506 == 1)
    {
      v507 = *((_OWORD *)v125 + 245);
      *(_OWORD *)(v124 + 3929) = *(_OWORD *)(v125 + 3929);
      *((_OWORD *)v124 + 245) = v507;
    }
    else
    {
      *((_QWORD *)v124 + 490) = v506;
      v124[3928] = v125[3928];
      v508 = *((_QWORD *)v125 + 492);
      v124[3944] = v125[3944];
      *((_QWORD *)v124 + 492) = v508;
      swift_bridgeObjectRetain(v506);
    }
    v509 = *((_QWORD *)v125 + 494);
    if (v509 == 1)
    {
      v510 = *((_OWORD *)v125 + 247);
      *(_OWORD *)(v124 + 3961) = *(_OWORD *)(v125 + 3961);
      *((_OWORD *)v124 + 247) = v510;
    }
    else
    {
      *((_QWORD *)v124 + 494) = v509;
      v124[3960] = v125[3960];
      v511 = *((_QWORD *)v125 + 496);
      v124[3976] = v125[3976];
      *((_QWORD *)v124 + 496) = v511;
      swift_bridgeObjectRetain(v509);
    }
    v512 = *((_QWORD *)v125 + 498);
    if (v512 == 1)
    {
      v513 = *((_OWORD *)v125 + 249);
      *(_OWORD *)(v124 + 3993) = *(_OWORD *)(v125 + 3993);
      *((_OWORD *)v124 + 249) = v513;
    }
    else
    {
      *((_QWORD *)v124 + 498) = v512;
      v124[3992] = v125[3992];
      v514 = *((_QWORD *)v125 + 500);
      v124[4008] = v125[4008];
      *((_QWORD *)v124 + 500) = v514;
      swift_bridgeObjectRetain(v512);
    }
    v515 = *((_QWORD *)v125 + 502);
    if (v515 == 1)
    {
      v516 = *((_OWORD *)v125 + 251);
      *(_OWORD *)(v124 + 4025) = *(_OWORD *)(v125 + 4025);
      *((_OWORD *)v124 + 251) = v516;
    }
    else
    {
      *((_QWORD *)v124 + 502) = v515;
      v124[4024] = v125[4024];
      v517 = *((_QWORD *)v125 + 504);
      v124[4040] = v125[4040];
      *((_QWORD *)v124 + 504) = v517;
      swift_bridgeObjectRetain(v515);
    }
    v518 = *((_QWORD *)v125 + 506);
    if (v518 == 1)
    {
      v519 = *((_OWORD *)v125 + 253);
      *(_OWORD *)(v124 + 4057) = *(_OWORD *)(v125 + 4057);
      *((_OWORD *)v124 + 253) = v519;
    }
    else
    {
      *((_QWORD *)v124 + 506) = v518;
      v124[4056] = v125[4056];
      v520 = *((_QWORD *)v125 + 508);
      v124[4072] = v125[4072];
      *((_QWORD *)v124 + 508) = v520;
      swift_bridgeObjectRetain(v518);
    }
    v521 = *((_QWORD *)v125 + 510);
    if (v521 == 1)
    {
      v522 = *((_OWORD *)v125 + 255);
      *(_OWORD *)(v124 + 4089) = *(_OWORD *)(v125 + 4089);
      *((_OWORD *)v124 + 255) = v522;
    }
    else
    {
      *((_QWORD *)v124 + 510) = v521;
      v124[4088] = v125[4088];
      v523 = *((_QWORD *)v125 + 512);
      v124[4104] = v125[4104];
      *((_QWORD *)v124 + 512) = v523;
      swift_bridgeObjectRetain(v521);
    }
    v524 = *((_OWORD *)v125 + 257);
    v124[4128] = v125[4128];
    *((_OWORD *)v124 + 257) = v524;
    v525 = v125[4152];
    *(_OWORD *)(v124 + 4136) = *(_OWORD *)(v125 + 4136);
    v124[4152] = v525;
    v124[4153] = v125[4153];
    v124[4154] = v125[4154];
    v124[4155] = v125[4155];
    v124[4156] = v125[4156];
    v124[4157] = v125[4157];
    v124[4158] = v125[4158];
    v124[4159] = v125[4159];
    v526 = *((_QWORD *)v125 + 520);
    *((_QWORD *)v124 + 520) = v526;
    v527 = *((_QWORD *)v125 + 521);
    *((_QWORD *)v124 + 521) = v527;
    swift_bridgeObjectRetain(v526);
    swift_bridgeObjectRetain(v527);
  }
  v528 = v124 + 4176;
  v529 = (uint64_t *)(v125 + 4176);
  if (*((_QWORD *)v125 + 624) == 1)
  {
    memcpy(v528, v529, 0x340uLL);
  }
  else
  {
    v530 = *v529;
    if (*v529 == 1)
    {
      v531 = *(_OWORD *)v529;
      *(_OWORD *)(v124 + 4185) = *(_OWORD *)(v125 + 4185);
      *v528 = v531;
    }
    else
    {
      *((_QWORD *)v124 + 522) = v530;
      v124[4184] = v125[4184];
      v532 = *((_QWORD *)v125 + 524);
      v124[4200] = v125[4200];
      *((_QWORD *)v124 + 524) = v532;
      swift_bridgeObjectRetain(v530);
    }
    v533 = *((_QWORD *)v125 + 526);
    if (v533 == 1)
    {
      v534 = *((_OWORD *)v125 + 263);
      *(_OWORD *)(v124 + 4217) = *(_OWORD *)(v125 + 4217);
      *((_OWORD *)v124 + 263) = v534;
    }
    else
    {
      *((_QWORD *)v124 + 526) = v533;
      v124[4216] = v125[4216];
      v535 = *((_QWORD *)v125 + 528);
      v124[4232] = v125[4232];
      *((_QWORD *)v124 + 528) = v535;
      swift_bridgeObjectRetain(v533);
    }
    v536 = *((_QWORD *)v125 + 530);
    if (v536 == 1)
    {
      v537 = *((_OWORD *)v125 + 265);
      *(_OWORD *)(v124 + 4249) = *(_OWORD *)(v125 + 4249);
      *((_OWORD *)v124 + 265) = v537;
    }
    else
    {
      *((_QWORD *)v124 + 530) = v536;
      v124[4248] = v125[4248];
      v538 = *((_QWORD *)v125 + 532);
      v124[4264] = v125[4264];
      *((_QWORD *)v124 + 532) = v538;
      swift_bridgeObjectRetain(v536);
    }
    v539 = *((_QWORD *)v125 + 534);
    if (v539 == 1)
    {
      v540 = *((_OWORD *)v125 + 267);
      *(_OWORD *)(v124 + 4281) = *(_OWORD *)(v125 + 4281);
      *((_OWORD *)v124 + 267) = v540;
    }
    else
    {
      *((_QWORD *)v124 + 534) = v539;
      v124[4280] = v125[4280];
      v541 = *((_QWORD *)v125 + 536);
      v124[4296] = v125[4296];
      *((_QWORD *)v124 + 536) = v541;
      swift_bridgeObjectRetain(v539);
    }
    v542 = *((_QWORD *)v125 + 538);
    if (v542 == 1)
    {
      v543 = *((_OWORD *)v125 + 269);
      *(_OWORD *)(v124 + 4313) = *(_OWORD *)(v125 + 4313);
      *((_OWORD *)v124 + 269) = v543;
    }
    else
    {
      *((_QWORD *)v124 + 538) = v542;
      v124[4312] = v125[4312];
      v544 = *((_QWORD *)v125 + 540);
      v124[4328] = v125[4328];
      *((_QWORD *)v124 + 540) = v544;
      swift_bridgeObjectRetain(v542);
    }
    v545 = *((_QWORD *)v125 + 542);
    if (v545 == 1)
    {
      v546 = *((_OWORD *)v125 + 271);
      *(_OWORD *)(v124 + 4345) = *(_OWORD *)(v125 + 4345);
      *((_OWORD *)v124 + 271) = v546;
    }
    else
    {
      *((_QWORD *)v124 + 542) = v545;
      v124[4344] = v125[4344];
      v547 = *((_QWORD *)v125 + 544);
      v124[4360] = v125[4360];
      *((_QWORD *)v124 + 544) = v547;
      swift_bridgeObjectRetain(v545);
    }
    v548 = *((_QWORD *)v125 + 546);
    if (v548 == 1)
    {
      v549 = *((_OWORD *)v125 + 273);
      *(_OWORD *)(v124 + 4377) = *(_OWORD *)(v125 + 4377);
      *((_OWORD *)v124 + 273) = v549;
    }
    else
    {
      *((_QWORD *)v124 + 546) = v548;
      v124[4376] = v125[4376];
      v550 = *((_QWORD *)v125 + 548);
      v124[4392] = v125[4392];
      *((_QWORD *)v124 + 548) = v550;
      swift_bridgeObjectRetain(v548);
    }
    v551 = *((_QWORD *)v125 + 550);
    if (v551 == 1)
    {
      v552 = *((_OWORD *)v125 + 275);
      *(_OWORD *)(v124 + 4409) = *(_OWORD *)(v125 + 4409);
      *((_OWORD *)v124 + 275) = v552;
    }
    else
    {
      *((_QWORD *)v124 + 550) = v551;
      v124[4408] = v125[4408];
      v553 = *((_QWORD *)v125 + 552);
      v124[4424] = v125[4424];
      *((_QWORD *)v124 + 552) = v553;
      swift_bridgeObjectRetain(v551);
    }
    v554 = *((_QWORD *)v125 + 554);
    if (v554 == 1)
    {
      v555 = *((_OWORD *)v125 + 277);
      *(_OWORD *)(v124 + 4441) = *(_OWORD *)(v125 + 4441);
      *((_OWORD *)v124 + 277) = v555;
    }
    else
    {
      *((_QWORD *)v124 + 554) = v554;
      v124[4440] = v125[4440];
      v556 = *((_QWORD *)v125 + 556);
      v124[4456] = v125[4456];
      *((_QWORD *)v124 + 556) = v556;
      swift_bridgeObjectRetain(v554);
    }
    v557 = *((_QWORD *)v125 + 558);
    if (v557 == 1)
    {
      v558 = *((_OWORD *)v125 + 279);
      *(_OWORD *)(v124 + 4473) = *(_OWORD *)(v125 + 4473);
      *((_OWORD *)v124 + 279) = v558;
    }
    else
    {
      *((_QWORD *)v124 + 558) = v557;
      v124[4472] = v125[4472];
      v559 = *((_QWORD *)v125 + 560);
      v124[4488] = v125[4488];
      *((_QWORD *)v124 + 560) = v559;
      swift_bridgeObjectRetain(v557);
    }
    v560 = *((_QWORD *)v125 + 562);
    if (v560 == 1)
    {
      v561 = *((_OWORD *)v125 + 281);
      *(_OWORD *)(v124 + 4505) = *(_OWORD *)(v125 + 4505);
      *((_OWORD *)v124 + 281) = v561;
    }
    else
    {
      *((_QWORD *)v124 + 562) = v560;
      v124[4504] = v125[4504];
      v562 = *((_QWORD *)v125 + 564);
      v124[4520] = v125[4520];
      *((_QWORD *)v124 + 564) = v562;
      swift_bridgeObjectRetain(v560);
    }
    v563 = *((_QWORD *)v125 + 566);
    if (v563 == 1)
    {
      v564 = *((_OWORD *)v125 + 283);
      *(_OWORD *)(v124 + 4537) = *(_OWORD *)(v125 + 4537);
      *((_OWORD *)v124 + 283) = v564;
    }
    else
    {
      *((_QWORD *)v124 + 566) = v563;
      v124[4536] = v125[4536];
      v565 = *((_QWORD *)v125 + 568);
      v124[4552] = v125[4552];
      *((_QWORD *)v124 + 568) = v565;
      swift_bridgeObjectRetain(v563);
    }
    v566 = *((_QWORD *)v125 + 570);
    if (v566 == 1)
    {
      v567 = *((_OWORD *)v125 + 285);
      *(_OWORD *)(v124 + 4569) = *(_OWORD *)(v125 + 4569);
      *((_OWORD *)v124 + 285) = v567;
    }
    else
    {
      *((_QWORD *)v124 + 570) = v566;
      v124[4568] = v125[4568];
      v568 = *((_QWORD *)v125 + 572);
      v124[4584] = v125[4584];
      *((_QWORD *)v124 + 572) = v568;
      swift_bridgeObjectRetain(v566);
    }
    v569 = *((_QWORD *)v125 + 574);
    if (v569 == 1)
    {
      v570 = *((_OWORD *)v125 + 287);
      *(_OWORD *)(v124 + 4601) = *(_OWORD *)(v125 + 4601);
      *((_OWORD *)v124 + 287) = v570;
    }
    else
    {
      *((_QWORD *)v124 + 574) = v569;
      v124[4600] = v125[4600];
      v571 = *((_QWORD *)v125 + 576);
      v124[4616] = v125[4616];
      *((_QWORD *)v124 + 576) = v571;
      swift_bridgeObjectRetain(v569);
    }
    v572 = *((_QWORD *)v125 + 578);
    if (v572 == 1)
    {
      v573 = *((_OWORD *)v125 + 289);
      *(_OWORD *)(v124 + 4633) = *(_OWORD *)(v125 + 4633);
      *((_OWORD *)v124 + 289) = v573;
    }
    else
    {
      *((_QWORD *)v124 + 578) = v572;
      v124[4632] = v125[4632];
      v574 = *((_QWORD *)v125 + 580);
      v124[4648] = v125[4648];
      *((_QWORD *)v124 + 580) = v574;
      swift_bridgeObjectRetain(v572);
    }
    v575 = *((_QWORD *)v125 + 582);
    if (v575 == 1)
    {
      v576 = *((_OWORD *)v125 + 291);
      *(_OWORD *)(v124 + 4665) = *(_OWORD *)(v125 + 4665);
      *((_OWORD *)v124 + 291) = v576;
    }
    else
    {
      *((_QWORD *)v124 + 582) = v575;
      v124[4664] = v125[4664];
      v577 = *((_QWORD *)v125 + 584);
      v124[4680] = v125[4680];
      *((_QWORD *)v124 + 584) = v577;
      swift_bridgeObjectRetain(v575);
    }
    v578 = *((_QWORD *)v125 + 586);
    if (v578 == 1)
    {
      v579 = *((_OWORD *)v125 + 293);
      *(_OWORD *)(v124 + 4697) = *(_OWORD *)(v125 + 4697);
      *((_OWORD *)v124 + 293) = v579;
    }
    else
    {
      *((_QWORD *)v124 + 586) = v578;
      v124[4696] = v125[4696];
      v580 = *((_QWORD *)v125 + 588);
      v124[4712] = v125[4712];
      *((_QWORD *)v124 + 588) = v580;
      swift_bridgeObjectRetain(v578);
    }
    v581 = *((_QWORD *)v125 + 590);
    if (v581 == 1)
    {
      v582 = *((_OWORD *)v125 + 295);
      *(_OWORD *)(v124 + 4729) = *(_OWORD *)(v125 + 4729);
      *((_OWORD *)v124 + 295) = v582;
    }
    else
    {
      *((_QWORD *)v124 + 590) = v581;
      v124[4728] = v125[4728];
      v583 = *((_QWORD *)v125 + 592);
      v124[4744] = v125[4744];
      *((_QWORD *)v124 + 592) = v583;
      swift_bridgeObjectRetain(v581);
    }
    v584 = *((_QWORD *)v125 + 594);
    if (v584 == 1)
    {
      v585 = *((_OWORD *)v125 + 297);
      *(_OWORD *)(v124 + 4761) = *(_OWORD *)(v125 + 4761);
      *((_OWORD *)v124 + 297) = v585;
    }
    else
    {
      *((_QWORD *)v124 + 594) = v584;
      v124[4760] = v125[4760];
      v586 = *((_QWORD *)v125 + 596);
      v124[4776] = v125[4776];
      *((_QWORD *)v124 + 596) = v586;
      swift_bridgeObjectRetain(v584);
    }
    v587 = *((_QWORD *)v125 + 598);
    if (v587 == 1)
    {
      v588 = *((_OWORD *)v125 + 299);
      *(_OWORD *)(v124 + 4793) = *(_OWORD *)(v125 + 4793);
      *((_OWORD *)v124 + 299) = v588;
    }
    else
    {
      *((_QWORD *)v124 + 598) = v587;
      v124[4792] = v125[4792];
      v589 = *((_QWORD *)v125 + 600);
      v124[4808] = v125[4808];
      *((_QWORD *)v124 + 600) = v589;
      swift_bridgeObjectRetain(v587);
    }
    v590 = *((_QWORD *)v125 + 602);
    if (v590 == 1)
    {
      v591 = *((_OWORD *)v125 + 301);
      *(_OWORD *)(v124 + 4825) = *(_OWORD *)(v125 + 4825);
      *((_OWORD *)v124 + 301) = v591;
    }
    else
    {
      *((_QWORD *)v124 + 602) = v590;
      v124[4824] = v125[4824];
      v592 = *((_QWORD *)v125 + 604);
      v124[4840] = v125[4840];
      *((_QWORD *)v124 + 604) = v592;
      swift_bridgeObjectRetain(v590);
    }
    v593 = *((_QWORD *)v125 + 606);
    if (v593 == 1)
    {
      v594 = *((_OWORD *)v125 + 303);
      *(_OWORD *)(v124 + 4857) = *(_OWORD *)(v125 + 4857);
      *((_OWORD *)v124 + 303) = v594;
    }
    else
    {
      *((_QWORD *)v124 + 606) = v593;
      v124[4856] = v125[4856];
      v595 = *((_QWORD *)v125 + 608);
      v124[4872] = v125[4872];
      *((_QWORD *)v124 + 608) = v595;
      swift_bridgeObjectRetain(v593);
    }
    v596 = *((_QWORD *)v125 + 610);
    if (v596 == 1)
    {
      v597 = *((_OWORD *)v125 + 305);
      *(_OWORD *)(v124 + 4889) = *(_OWORD *)(v125 + 4889);
      *((_OWORD *)v124 + 305) = v597;
    }
    else
    {
      *((_QWORD *)v124 + 610) = v596;
      v124[4888] = v125[4888];
      v598 = *((_QWORD *)v125 + 612);
      v124[4904] = v125[4904];
      *((_QWORD *)v124 + 612) = v598;
      swift_bridgeObjectRetain(v596);
    }
    v599 = *((_QWORD *)v125 + 614);
    if (v599 == 1)
    {
      v600 = *((_OWORD *)v125 + 307);
      *(_OWORD *)(v124 + 4921) = *(_OWORD *)(v125 + 4921);
      *((_OWORD *)v124 + 307) = v600;
    }
    else
    {
      *((_QWORD *)v124 + 614) = v599;
      v124[4920] = v125[4920];
      v601 = *((_QWORD *)v125 + 616);
      v124[4936] = v125[4936];
      *((_QWORD *)v124 + 616) = v601;
      swift_bridgeObjectRetain(v599);
    }
    v602 = *((_OWORD *)v125 + 309);
    v124[4960] = v125[4960];
    *((_OWORD *)v124 + 309) = v602;
    v603 = v125[4984];
    *(_OWORD *)(v124 + 4968) = *(_OWORD *)(v125 + 4968);
    v124[4984] = v603;
    v124[4985] = v125[4985];
    v124[4986] = v125[4986];
    v124[4987] = v125[4987];
    v124[4988] = v125[4988];
    v124[4989] = v125[4989];
    v124[4990] = v125[4990];
    v124[4991] = v125[4991];
    v604 = *((_QWORD *)v125 + 624);
    *((_QWORD *)v124 + 624) = v604;
    v605 = *((_QWORD *)v125 + 625);
    *((_QWORD *)v124 + 625) = v605;
    swift_bridgeObjectRetain(v604);
    swift_bridgeObjectRetain(v605);
  }
  v606 = v124 + 5008;
  v607 = (uint64_t *)(v125 + 5008);
  if (*((_QWORD *)v125 + 728) == 1)
  {
    memcpy(v606, v607, 0x340uLL);
  }
  else
  {
    v608 = *v607;
    if (*v607 == 1)
    {
      v609 = *(_OWORD *)v607;
      *(_OWORD *)(v124 + 5017) = *(_OWORD *)(v125 + 5017);
      *v606 = v609;
    }
    else
    {
      *((_QWORD *)v124 + 626) = v608;
      v124[5016] = v125[5016];
      v610 = *((_QWORD *)v125 + 628);
      v124[5032] = v125[5032];
      *((_QWORD *)v124 + 628) = v610;
      swift_bridgeObjectRetain(v608);
    }
    v611 = *((_QWORD *)v125 + 630);
    if (v611 == 1)
    {
      v612 = *((_OWORD *)v125 + 315);
      *(_OWORD *)(v124 + 5049) = *(_OWORD *)(v125 + 5049);
      *((_OWORD *)v124 + 315) = v612;
    }
    else
    {
      *((_QWORD *)v124 + 630) = v611;
      v124[5048] = v125[5048];
      v613 = *((_QWORD *)v125 + 632);
      v124[5064] = v125[5064];
      *((_QWORD *)v124 + 632) = v613;
      swift_bridgeObjectRetain(v611);
    }
    v614 = *((_QWORD *)v125 + 634);
    if (v614 == 1)
    {
      v615 = *((_OWORD *)v125 + 317);
      *(_OWORD *)(v124 + 5081) = *(_OWORD *)(v125 + 5081);
      *((_OWORD *)v124 + 317) = v615;
    }
    else
    {
      *((_QWORD *)v124 + 634) = v614;
      v124[5080] = v125[5080];
      v616 = *((_QWORD *)v125 + 636);
      v124[5096] = v125[5096];
      *((_QWORD *)v124 + 636) = v616;
      swift_bridgeObjectRetain(v614);
    }
    v617 = *((_QWORD *)v125 + 638);
    if (v617 == 1)
    {
      v618 = *((_OWORD *)v125 + 319);
      *(_OWORD *)(v124 + 5113) = *(_OWORD *)(v125 + 5113);
      *((_OWORD *)v124 + 319) = v618;
    }
    else
    {
      *((_QWORD *)v124 + 638) = v617;
      v124[5112] = v125[5112];
      v619 = *((_QWORD *)v125 + 640);
      v124[5128] = v125[5128];
      *((_QWORD *)v124 + 640) = v619;
      swift_bridgeObjectRetain(v617);
    }
    v620 = *((_QWORD *)v125 + 642);
    if (v620 == 1)
    {
      v621 = *((_OWORD *)v125 + 321);
      *(_OWORD *)(v124 + 5145) = *(_OWORD *)(v125 + 5145);
      *((_OWORD *)v124 + 321) = v621;
    }
    else
    {
      *((_QWORD *)v124 + 642) = v620;
      v124[5144] = v125[5144];
      v622 = *((_QWORD *)v125 + 644);
      v124[5160] = v125[5160];
      *((_QWORD *)v124 + 644) = v622;
      swift_bridgeObjectRetain(v620);
    }
    v623 = *((_QWORD *)v125 + 646);
    if (v623 == 1)
    {
      v624 = *((_OWORD *)v125 + 323);
      *(_OWORD *)(v124 + 5177) = *(_OWORD *)(v125 + 5177);
      *((_OWORD *)v124 + 323) = v624;
    }
    else
    {
      *((_QWORD *)v124 + 646) = v623;
      v124[5176] = v125[5176];
      v625 = *((_QWORD *)v125 + 648);
      v124[5192] = v125[5192];
      *((_QWORD *)v124 + 648) = v625;
      swift_bridgeObjectRetain(v623);
    }
    v626 = *((_QWORD *)v125 + 650);
    if (v626 == 1)
    {
      v627 = *((_OWORD *)v125 + 325);
      *(_OWORD *)(v124 + 5209) = *(_OWORD *)(v125 + 5209);
      *((_OWORD *)v124 + 325) = v627;
    }
    else
    {
      *((_QWORD *)v124 + 650) = v626;
      v124[5208] = v125[5208];
      v628 = *((_QWORD *)v125 + 652);
      v124[5224] = v125[5224];
      *((_QWORD *)v124 + 652) = v628;
      swift_bridgeObjectRetain(v626);
    }
    v629 = *((_QWORD *)v125 + 654);
    if (v629 == 1)
    {
      v630 = *((_OWORD *)v125 + 327);
      *(_OWORD *)(v124 + 5241) = *(_OWORD *)(v125 + 5241);
      *((_OWORD *)v124 + 327) = v630;
    }
    else
    {
      *((_QWORD *)v124 + 654) = v629;
      v124[5240] = v125[5240];
      v631 = *((_QWORD *)v125 + 656);
      v124[5256] = v125[5256];
      *((_QWORD *)v124 + 656) = v631;
      swift_bridgeObjectRetain(v629);
    }
    v632 = *((_QWORD *)v125 + 658);
    if (v632 == 1)
    {
      v633 = *((_OWORD *)v125 + 329);
      *(_OWORD *)(v124 + 5273) = *(_OWORD *)(v125 + 5273);
      *((_OWORD *)v124 + 329) = v633;
    }
    else
    {
      *((_QWORD *)v124 + 658) = v632;
      v124[5272] = v125[5272];
      v634 = *((_QWORD *)v125 + 660);
      v124[5288] = v125[5288];
      *((_QWORD *)v124 + 660) = v634;
      swift_bridgeObjectRetain(v632);
    }
    v635 = *((_QWORD *)v125 + 662);
    if (v635 == 1)
    {
      v636 = *((_OWORD *)v125 + 331);
      *(_OWORD *)(v124 + 5305) = *(_OWORD *)(v125 + 5305);
      *((_OWORD *)v124 + 331) = v636;
    }
    else
    {
      *((_QWORD *)v124 + 662) = v635;
      v124[5304] = v125[5304];
      v637 = *((_QWORD *)v125 + 664);
      v124[5320] = v125[5320];
      *((_QWORD *)v124 + 664) = v637;
      swift_bridgeObjectRetain(v635);
    }
    v638 = *((_QWORD *)v125 + 666);
    if (v638 == 1)
    {
      v639 = *((_OWORD *)v125 + 333);
      *(_OWORD *)(v124 + 5337) = *(_OWORD *)(v125 + 5337);
      *((_OWORD *)v124 + 333) = v639;
    }
    else
    {
      *((_QWORD *)v124 + 666) = v638;
      v124[5336] = v125[5336];
      v640 = *((_QWORD *)v125 + 668);
      v124[5352] = v125[5352];
      *((_QWORD *)v124 + 668) = v640;
      swift_bridgeObjectRetain(v638);
    }
    v641 = *((_QWORD *)v125 + 670);
    if (v641 == 1)
    {
      v642 = *((_OWORD *)v125 + 335);
      *(_OWORD *)(v124 + 5369) = *(_OWORD *)(v125 + 5369);
      *((_OWORD *)v124 + 335) = v642;
    }
    else
    {
      *((_QWORD *)v124 + 670) = v641;
      v124[5368] = v125[5368];
      v643 = *((_QWORD *)v125 + 672);
      v124[5384] = v125[5384];
      *((_QWORD *)v124 + 672) = v643;
      swift_bridgeObjectRetain(v641);
    }
    v644 = *((_QWORD *)v125 + 674);
    if (v644 == 1)
    {
      v645 = *((_OWORD *)v125 + 337);
      *(_OWORD *)(v124 + 5401) = *(_OWORD *)(v125 + 5401);
      *((_OWORD *)v124 + 337) = v645;
    }
    else
    {
      *((_QWORD *)v124 + 674) = v644;
      v124[5400] = v125[5400];
      v646 = *((_QWORD *)v125 + 676);
      v124[5416] = v125[5416];
      *((_QWORD *)v124 + 676) = v646;
      swift_bridgeObjectRetain(v644);
    }
    v647 = *((_QWORD *)v125 + 678);
    if (v647 == 1)
    {
      v648 = *((_OWORD *)v125 + 339);
      *(_OWORD *)(v124 + 5433) = *(_OWORD *)(v125 + 5433);
      *((_OWORD *)v124 + 339) = v648;
    }
    else
    {
      *((_QWORD *)v124 + 678) = v647;
      v124[5432] = v125[5432];
      v649 = *((_QWORD *)v125 + 680);
      v124[5448] = v125[5448];
      *((_QWORD *)v124 + 680) = v649;
      swift_bridgeObjectRetain(v647);
    }
    v650 = *((_QWORD *)v125 + 682);
    if (v650 == 1)
    {
      v651 = *((_OWORD *)v125 + 341);
      *(_OWORD *)(v124 + 5465) = *(_OWORD *)(v125 + 5465);
      *((_OWORD *)v124 + 341) = v651;
    }
    else
    {
      *((_QWORD *)v124 + 682) = v650;
      v124[5464] = v125[5464];
      v652 = *((_QWORD *)v125 + 684);
      v124[5480] = v125[5480];
      *((_QWORD *)v124 + 684) = v652;
      swift_bridgeObjectRetain(v650);
    }
    v653 = *((_QWORD *)v125 + 686);
    if (v653 == 1)
    {
      v654 = *((_OWORD *)v125 + 343);
      *(_OWORD *)(v124 + 5497) = *(_OWORD *)(v125 + 5497);
      *((_OWORD *)v124 + 343) = v654;
    }
    else
    {
      *((_QWORD *)v124 + 686) = v653;
      v124[5496] = v125[5496];
      v655 = *((_QWORD *)v125 + 688);
      v124[5512] = v125[5512];
      *((_QWORD *)v124 + 688) = v655;
      swift_bridgeObjectRetain(v653);
    }
    v656 = *((_QWORD *)v125 + 690);
    if (v656 == 1)
    {
      v657 = *((_OWORD *)v125 + 345);
      *(_OWORD *)(v124 + 5529) = *(_OWORD *)(v125 + 5529);
      *((_OWORD *)v124 + 345) = v657;
    }
    else
    {
      *((_QWORD *)v124 + 690) = v656;
      v124[5528] = v125[5528];
      v658 = *((_QWORD *)v125 + 692);
      v124[5544] = v125[5544];
      *((_QWORD *)v124 + 692) = v658;
      swift_bridgeObjectRetain(v656);
    }
    v659 = *((_QWORD *)v125 + 694);
    if (v659 == 1)
    {
      v660 = *((_OWORD *)v125 + 347);
      *(_OWORD *)(v124 + 5561) = *(_OWORD *)(v125 + 5561);
      *((_OWORD *)v124 + 347) = v660;
    }
    else
    {
      *((_QWORD *)v124 + 694) = v659;
      v124[5560] = v125[5560];
      v661 = *((_QWORD *)v125 + 696);
      v124[5576] = v125[5576];
      *((_QWORD *)v124 + 696) = v661;
      swift_bridgeObjectRetain(v659);
    }
    v662 = *((_QWORD *)v125 + 698);
    if (v662 == 1)
    {
      v663 = *((_OWORD *)v125 + 349);
      *(_OWORD *)(v124 + 5593) = *(_OWORD *)(v125 + 5593);
      *((_OWORD *)v124 + 349) = v663;
    }
    else
    {
      *((_QWORD *)v124 + 698) = v662;
      v124[5592] = v125[5592];
      v664 = *((_QWORD *)v125 + 700);
      v124[5608] = v125[5608];
      *((_QWORD *)v124 + 700) = v664;
      swift_bridgeObjectRetain(v662);
    }
    v665 = *((_QWORD *)v125 + 702);
    if (v665 == 1)
    {
      v666 = *((_OWORD *)v125 + 351);
      *(_OWORD *)(v124 + 5625) = *(_OWORD *)(v125 + 5625);
      *((_OWORD *)v124 + 351) = v666;
    }
    else
    {
      *((_QWORD *)v124 + 702) = v665;
      v124[5624] = v125[5624];
      v667 = *((_QWORD *)v125 + 704);
      v124[5640] = v125[5640];
      *((_QWORD *)v124 + 704) = v667;
      swift_bridgeObjectRetain(v665);
    }
    v668 = *((_QWORD *)v125 + 706);
    if (v668 == 1)
    {
      v669 = *((_OWORD *)v125 + 353);
      *(_OWORD *)(v124 + 5657) = *(_OWORD *)(v125 + 5657);
      *((_OWORD *)v124 + 353) = v669;
    }
    else
    {
      *((_QWORD *)v124 + 706) = v668;
      v124[5656] = v125[5656];
      v670 = *((_QWORD *)v125 + 708);
      v124[5672] = v125[5672];
      *((_QWORD *)v124 + 708) = v670;
      swift_bridgeObjectRetain(v668);
    }
    v671 = *((_QWORD *)v125 + 710);
    if (v671 == 1)
    {
      v672 = *((_OWORD *)v125 + 355);
      *(_OWORD *)(v124 + 5689) = *(_OWORD *)(v125 + 5689);
      *((_OWORD *)v124 + 355) = v672;
    }
    else
    {
      *((_QWORD *)v124 + 710) = v671;
      v124[5688] = v125[5688];
      v673 = *((_QWORD *)v125 + 712);
      v124[5704] = v125[5704];
      *((_QWORD *)v124 + 712) = v673;
      swift_bridgeObjectRetain(v671);
    }
    v674 = *((_QWORD *)v125 + 714);
    if (v674 == 1)
    {
      v675 = *((_OWORD *)v125 + 357);
      *(_OWORD *)(v124 + 5721) = *(_OWORD *)(v125 + 5721);
      *((_OWORD *)v124 + 357) = v675;
    }
    else
    {
      *((_QWORD *)v124 + 714) = v674;
      v124[5720] = v125[5720];
      v676 = *((_QWORD *)v125 + 716);
      v124[5736] = v125[5736];
      *((_QWORD *)v124 + 716) = v676;
      swift_bridgeObjectRetain(v674);
    }
    v677 = *((_QWORD *)v125 + 718);
    if (v677 == 1)
    {
      v678 = *((_OWORD *)v125 + 359);
      *(_OWORD *)(v124 + 5753) = *(_OWORD *)(v125 + 5753);
      *((_OWORD *)v124 + 359) = v678;
    }
    else
    {
      *((_QWORD *)v124 + 718) = v677;
      v124[5752] = v125[5752];
      v679 = *((_QWORD *)v125 + 720);
      v124[5768] = v125[5768];
      *((_QWORD *)v124 + 720) = v679;
      swift_bridgeObjectRetain(v677);
    }
    v680 = *((_OWORD *)v125 + 361);
    v124[5792] = v125[5792];
    *((_OWORD *)v124 + 361) = v680;
    v681 = v125[5816];
    *(_OWORD *)(v124 + 5800) = *(_OWORD *)(v125 + 5800);
    v124[5816] = v681;
    v124[5817] = v125[5817];
    v124[5818] = v125[5818];
    v124[5819] = v125[5819];
    v124[5820] = v125[5820];
    v124[5821] = v125[5821];
    v124[5822] = v125[5822];
    v124[5823] = v125[5823];
    v682 = *((_QWORD *)v125 + 728);
    *((_QWORD *)v124 + 728) = v682;
    v683 = *((_QWORD *)v125 + 729);
    *((_QWORD *)v124 + 729) = v683;
    swift_bridgeObjectRetain(v682);
    swift_bridgeObjectRetain(v683);
  }
  v684 = *((_QWORD *)v125 + 730);
  *((_QWORD *)v124 + 730) = v684;
  v685 = v125[5852];
  *((_DWORD *)v124 + 1462) = *((_DWORD *)v125 + 1462);
  v124[5852] = v685;
  v686 = *((_QWORD *)v125 + 732);
  v124[5864] = v125[5864];
  *((_QWORD *)v124 + 732) = v686;
  v687 = *((_QWORD *)v125 + 734);
  v124[5880] = v125[5880];
  *((_QWORD *)v124 + 734) = v687;
  v688 = *((_QWORD *)v125 + 736);
  v124[5896] = v125[5896];
  *((_QWORD *)v124 + 736) = v688;
  v689 = *((_QWORD *)v125 + 738);
  v124[5912] = v125[5912];
  *((_QWORD *)v124 + 738) = v689;
  swift_bridgeObjectRetain(v684);
LABEL_2276:
  v2614 = v60[39];
  v2615 = *(_QWORD *)&v34[v2614];
  v2616 = *(_QWORD *)&v35[v2614];
  *(_QWORD *)&v34[v2614] = v2616;
  swift_bridgeObjectRetain(v2616);
  swift_bridgeObjectRelease(v2615);
  v2617 = v60[40];
  v2618 = &v34[v2617];
  v2619 = &v35[v2617];
  *(_QWORD *)v2618 = *(_QWORD *)v2619;
  v2620 = *((_QWORD *)v2619 + 1);
  v2621 = *((_QWORD *)v2618 + 1);
  *((_QWORD *)v2618 + 1) = v2620;
  swift_bridgeObjectRetain(v2620);
  swift_bridgeObjectRelease(v2621);
  v2622 = v60[41];
  v2623 = &v34[v2622];
  v2624 = &v35[v2622];
  *(_QWORD *)v2623 = *(_QWORD *)v2624;
  v2625 = *((_QWORD *)v2624 + 1);
  v2626 = *((_QWORD *)v2623 + 1);
  *((_QWORD *)v2623 + 1) = v2625;
  swift_bridgeObjectRetain(v2625);
  swift_bridgeObjectRelease(v2626);
  return a1;
}

_QWORD *sub_1001D41BC(_QWORD *a1)
{
  destroy for ResponseHeader(a1);
  return a1;
}

_QWORD *sub_1001D41F0(_QWORD *a1)
{
  destroy for IQModel(a1);
  return a1;
}

_OWORD *sub_1001D4224(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;

  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = *(_OWORD *)((char *)a2 + v7 + 16);
  *(_OWORD *)v8 = *(_OWORD *)((char *)a2 + v7);
  *((_OWORD *)v8 + 1) = v10;
  v11 = *(_OWORD *)((char *)a2 + v7 + 48);
  *((_OWORD *)v8 + 2) = *(_OWORD *)((char *)a2 + v7 + 32);
  *((_OWORD *)v8 + 3) = v11;
  v12 = *(_OWORD *)((char *)a2 + v7 + 80);
  *((_OWORD *)v8 + 4) = *(_OWORD *)((char *)a2 + v7 + 64);
  *((_OWORD *)v8 + 5) = v12;
  v8[96] = *((_BYTE *)a2 + v7 + 96);
  *(_OWORD *)(v8 + 104) = *(_OWORD *)((char *)a2 + v7 + 104);
  *(_OWORD *)(v8 + 120) = *(_OWORD *)((char *)a2 + v7 + 120);
  *((_QWORD *)v8 + 17) = *(_QWORD *)((char *)a2 + v7 + 136);
  *((_OWORD *)v8 + 9) = *(_OWORD *)((char *)a2 + v7 + 144);
  *((_QWORD *)v8 + 20) = *(_QWORD *)((char *)a2 + v7 + 160);
  *(_OWORD *)(v8 + 168) = *(_OWORD *)((char *)a2 + v7 + 168);
  v8[184] = *((_BYTE *)a2 + v7 + 184);
  v13 = (int *)type metadata accessor for Workflow(0);
  v14 = v13[18];
  v15 = &v8[v14];
  v16 = &v9[v14];
  v17 = type metadata accessor for HardwareAttestationType(0);
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    v19 = sub_100004828(&qword_1006322F0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  *(_QWORD *)&v8[v13[19]] = *(_QWORD *)&v9[v13[19]];
  *(_QWORD *)&v8[v13[20]] = *(_QWORD *)&v9[v13[20]];
  *(_OWORD *)&v8[v13[21]] = *(_OWORD *)&v9[v13[21]];
  v8[v13[22]] = v9[v13[22]];
  *(_QWORD *)&v8[v13[23]] = *(_QWORD *)&v9[v13[23]];
  *(_QWORD *)&v8[v13[24]] = *(_QWORD *)&v9[v13[24]];
  *(_QWORD *)&v8[v13[25]] = *(_QWORD *)&v9[v13[25]];
  v8[v13[26]] = v9[v13[26]];
  v20 = v13[27];
  v21 = &v8[v20];
  v22 = &v9[v20];
  *(_QWORD *)v21 = *(_QWORD *)v22;
  v21[8] = v22[8];
  *(_QWORD *)&v8[v13[28]] = *(_QWORD *)&v9[v13[28]];
  *(_QWORD *)&v8[v13[29]] = *(_QWORD *)&v9[v13[29]];
  *(_QWORD *)&v8[v13[30]] = *(_QWORD *)&v9[v13[30]];
  v23 = v13[31];
  v24 = &v8[v23];
  v25 = &v9[v23];
  v24[8] = v25[8];
  *(_QWORD *)v24 = *(_QWORD *)v25;
  v26 = v13[32];
  v27 = &v8[v26];
  v28 = &v9[v26];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v28[8];
  v29 = v13[33];
  v30 = &v8[v29];
  v31 = &v9[v29];
  v30[8] = v31[8];
  *(_QWORD *)v30 = *(_QWORD *)v31;
  v32 = v13[34];
  v33 = &v8[v32];
  v34 = &v9[v32];
  v33[8] = v34[8];
  *(_QWORD *)v33 = *(_QWORD *)v34;
  v35 = v13[35];
  v36 = &v8[v35];
  v37 = &v9[v35];
  v36[8] = v37[8];
  *(_QWORD *)v36 = *(_QWORD *)v37;
  v8[v13[36]] = v9[v13[36]];
  v8[v13[37]] = v9[v13[37]];
  memcpy(&v8[v13[38]], &v9[v13[38]], 0x1719uLL);
  *(_QWORD *)&v8[v13[39]] = *(_QWORD *)&v9[v13[39]];
  *(_OWORD *)&v8[v13[40]] = *(_OWORD *)&v9[v13[40]];
  *(_OWORD *)&v8[v13[41]] = *(_OWORD *)&v9[v13[41]];
  return a1;
}

_QWORD *sub_1001D44E4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(char *, uint64_t, uint64_t);
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t *v152;
  _QWORD *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t *v203;
  _QWORD *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t *v254;
  _QWORD *v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t *v305;
  _QWORD *v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t *v356;
  _QWORD *v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t *v407;
  _QWORD *v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  char *v463;
  char *v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  char *v469;
  char *v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;

  if (a1[3])
  {
    if (a2[3])
    {
      v6 = a2[1];
      v7 = a1[1];
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRelease(v7);
      v8 = a2[3];
      v9 = a1[3];
      a1[2] = a2[2];
      a1[3] = v8;
      swift_bridgeObjectRelease(v9);
      v10 = a2[5];
      v11 = a1[5];
      a1[4] = a2[4];
      a1[5] = v10;
      swift_bridgeObjectRelease(v11);
      v12 = a2[7];
      v13 = a1[7];
      a1[6] = a2[6];
      a1[7] = v12;
      swift_bridgeObjectRelease(v13);
      v14 = a2[9];
      v15 = a1[9];
      a1[8] = a2[8];
      a1[9] = v14;
      swift_bridgeObjectRelease(v15);
      v16 = a2[11];
      v17 = a1[11];
      a1[10] = a2[10];
      a1[11] = v16;
      swift_bridgeObjectRelease(v17);
      goto LABEL_6;
    }
    sub_1001D41BC(a1);
  }
  v18 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a1 + 3) = v18;
  v19 = *((_OWORD *)a2 + 5);
  *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
  *((_OWORD *)a1 + 5) = v19;
  v20 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v20;
LABEL_6:
  v21 = *(int *)(a3 + 20);
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = *(_QWORD *)((char *)a2 + v21 + 8);
  v25 = *(_QWORD *)((char *)a1 + v21 + 8);
  *(_QWORD *)v22 = *(_QWORD *)((char *)a2 + v21);
  *((_QWORD *)v22 + 1) = v24;
  swift_bridgeObjectRelease(v25);
  v26 = *((_QWORD *)v23 + 3);
  v27 = *((_QWORD *)v22 + 3);
  *((_QWORD *)v22 + 2) = *((_QWORD *)v23 + 2);
  *((_QWORD *)v22 + 3) = v26;
  swift_bridgeObjectRelease(v27);
  v28 = *((_QWORD *)v23 + 5);
  v29 = *((_QWORD *)v22 + 5);
  *((_QWORD *)v22 + 4) = *((_QWORD *)v23 + 4);
  *((_QWORD *)v22 + 5) = v28;
  swift_bridgeObjectRelease(v29);
  v30 = *((_QWORD *)v23 + 7);
  v31 = *((_QWORD *)v22 + 7);
  *((_QWORD *)v22 + 6) = *((_QWORD *)v23 + 6);
  *((_QWORD *)v22 + 7) = v30;
  swift_bridgeObjectRelease(v31);
  v32 = *((_QWORD *)v23 + 9);
  v33 = *((_QWORD *)v22 + 9);
  *((_QWORD *)v22 + 8) = *((_QWORD *)v23 + 8);
  *((_QWORD *)v22 + 9) = v32;
  swift_bridgeObjectRelease(v33);
  v34 = *((_QWORD *)v23 + 11);
  v35 = *((_QWORD *)v22 + 11);
  *((_QWORD *)v22 + 10) = *((_QWORD *)v23 + 10);
  *((_QWORD *)v22 + 11) = v34;
  swift_bridgeObjectRelease(v35);
  v22[96] = v23[96];
  v36 = *((_QWORD *)v23 + 14);
  v37 = *((_QWORD *)v22 + 14);
  *((_QWORD *)v22 + 13) = *((_QWORD *)v23 + 13);
  *((_QWORD *)v22 + 14) = v36;
  swift_bridgeObjectRelease(v37);
  v38 = *((_QWORD *)v23 + 16);
  v39 = *((_QWORD *)v22 + 16);
  *((_QWORD *)v22 + 15) = *((_QWORD *)v23 + 15);
  *((_QWORD *)v22 + 16) = v38;
  swift_bridgeObjectRelease(v39);
  v40 = *((_QWORD *)v22 + 17);
  *((_QWORD *)v22 + 17) = *((_QWORD *)v23 + 17);
  swift_bridgeObjectRelease(v40);
  v41 = *((_QWORD *)v23 + 19);
  v42 = *((_QWORD *)v22 + 19);
  *((_QWORD *)v22 + 18) = *((_QWORD *)v23 + 18);
  *((_QWORD *)v22 + 19) = v41;
  swift_bridgeObjectRelease(v42);
  v43 = *((_QWORD *)v22 + 20);
  *((_QWORD *)v22 + 20) = *((_QWORD *)v23 + 20);
  swift_bridgeObjectRelease(v43);
  v44 = *((_QWORD *)v23 + 22);
  v45 = *((_QWORD *)v22 + 22);
  *((_QWORD *)v22 + 21) = *((_QWORD *)v23 + 21);
  *((_QWORD *)v22 + 22) = v44;
  swift_bridgeObjectRelease(v45);
  v22[184] = v23[184];
  v46 = (int *)type metadata accessor for Workflow(0);
  v47 = v46[18];
  v48 = &v22[v47];
  v49 = &v23[v47];
  v50 = type metadata accessor for HardwareAttestationType(0);
  v51 = *(_QWORD *)(v50 - 8);
  v52 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48);
  v53 = v52(v48, 1, v50);
  v54 = v52(v49, 1, v50);
  if (v53)
  {
    if (!v54)
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v48, v49, v50);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v54)
  {
    (*(void (**)(char *, uint64_t))(v51 + 8))(v48, v50);
LABEL_11:
    v55 = sub_100004828(&qword_1006322F0);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(char *, char *, uint64_t))(v51 + 40))(v48, v49, v50);
LABEL_12:
  v56 = v46[19];
  v57 = *(_QWORD *)&v22[v56];
  *(_QWORD *)&v22[v56] = *(_QWORD *)&v23[v56];
  swift_bridgeObjectRelease(v57);
  v58 = v46[20];
  v59 = *(_QWORD *)&v22[v58];
  *(_QWORD *)&v22[v58] = *(_QWORD *)&v23[v58];
  swift_bridgeObjectRelease(v59);
  v60 = v46[21];
  v61 = &v22[v60];
  v62 = &v23[v60];
  v64 = *(_QWORD *)v62;
  v63 = *((_QWORD *)v62 + 1);
  v65 = *((_QWORD *)v61 + 1);
  *(_QWORD *)v61 = v64;
  *((_QWORD *)v61 + 1) = v63;
  swift_bridgeObjectRelease(v65);
  v22[v46[22]] = v23[v46[22]];
  v66 = v46[23];
  v67 = *(_QWORD *)&v22[v66];
  *(_QWORD *)&v22[v66] = *(_QWORD *)&v23[v66];
  swift_bridgeObjectRelease(v67);
  v68 = v46[24];
  v69 = *(_QWORD *)&v22[v68];
  *(_QWORD *)&v22[v68] = *(_QWORD *)&v23[v68];
  swift_bridgeObjectRelease(v69);
  v70 = v46[25];
  v71 = *(_QWORD *)&v22[v70];
  *(_QWORD *)&v22[v70] = *(_QWORD *)&v23[v70];
  swift_bridgeObjectRelease(v71);
  v22[v46[26]] = v23[v46[26]];
  v72 = v46[27];
  v73 = &v22[v72];
  v74 = &v23[v72];
  *(_QWORD *)v73 = *(_QWORD *)v74;
  v73[8] = v74[8];
  v75 = v46[28];
  v76 = *(_QWORD *)&v22[v75];
  *(_QWORD *)&v22[v75] = *(_QWORD *)&v23[v75];
  swift_bridgeObjectRelease(v76);
  v77 = v46[29];
  v78 = *(_QWORD *)&v22[v77];
  *(_QWORD *)&v22[v77] = *(_QWORD *)&v23[v77];
  swift_bridgeObjectRelease(v78);
  v79 = v46[30];
  v80 = *(_QWORD *)&v22[v79];
  *(_QWORD *)&v22[v79] = *(_QWORD *)&v23[v79];
  swift_bridgeObjectRelease(v80);
  v81 = v46[31];
  v82 = &v22[v81];
  v83 = &v23[v81];
  *(_QWORD *)v82 = *(_QWORD *)v83;
  v82[8] = v83[8];
  v84 = v46[32];
  v85 = &v22[v84];
  v86 = &v23[v84];
  v85[8] = v86[8];
  *(_QWORD *)v85 = *(_QWORD *)v86;
  v87 = v46[33];
  v88 = &v22[v87];
  v89 = &v23[v87];
  v88[8] = v89[8];
  *(_QWORD *)v88 = *(_QWORD *)v89;
  v90 = v46[34];
  v91 = &v22[v90];
  v92 = &v23[v90];
  v91[8] = v92[8];
  *(_QWORD *)v91 = *(_QWORD *)v92;
  v93 = v46[35];
  v94 = &v22[v93];
  v95 = &v23[v93];
  v94[8] = v95[8];
  *(_QWORD *)v94 = *(_QWORD *)v95;
  v22[v46[36]] = v23[v46[36]];
  v22[v46[37]] = v23[v46[37]];
  v96 = v46[38];
  v97 = &v22[v96];
  v98 = &v23[v96];
  v99 = *(_QWORD *)&v22[v96 + 8];
  if (v99 != 1)
  {
    v100 = *((_QWORD *)v98 + 1);
    if (v100 == 1)
    {
      sub_1001D41F0(v97);
      goto LABEL_15;
    }
    v101 = v98 + 16;
    *(_QWORD *)v97 = *(_QWORD *)v98;
    *((_QWORD *)v97 + 1) = v100;
    swift_bridgeObjectRelease(v99);
    v102 = (uint64_t *)(v97 + 16);
    if (*((_QWORD *)v97 + 104) == 1)
      goto LABEL_19;
    if (*((_QWORD *)v98 + 104) == 1)
    {
      sub_100083F28((uint64_t *)v97 + 2);
LABEL_19:
      memcpy(v97 + 16, v98 + 16, 0x340uLL);
      goto LABEL_142;
    }
    v103 = *v102;
    if (*v102 != 1)
    {
      if (*v101 != 1)
      {
        *((_QWORD *)v97 + 2) = *v101;
        swift_bridgeObjectRelease(v103);
        v97[24] = v98[24];
        *((_QWORD *)v97 + 4) = *((_QWORD *)v98 + 4);
        v97[40] = v98[40];
LABEL_26:
        v104 = *((_QWORD *)v97 + 6);
        v105 = *((_QWORD *)v98 + 6);
        if (v104 != 1)
        {
          if (v105 != 1)
          {
            *((_QWORD *)v97 + 6) = v105;
            swift_bridgeObjectRelease(v104);
            v97[56] = v98[56];
            *((_QWORD *)v97 + 8) = *((_QWORD *)v98 + 8);
            v97[72] = v98[72];
LABEL_31:
            v106 = *((_QWORD *)v97 + 10);
            v107 = *((_QWORD *)v98 + 10);
            if (v106 != 1)
            {
              if (v107 != 1)
              {
                *((_QWORD *)v97 + 10) = v107;
                swift_bridgeObjectRelease(v106);
                v97[88] = v98[88];
                *((_QWORD *)v97 + 12) = *((_QWORD *)v98 + 12);
                v97[104] = v98[104];
LABEL_36:
                v108 = *((_QWORD *)v97 + 14);
                v109 = *((_QWORD *)v98 + 14);
                if (v108 != 1)
                {
                  if (v109 != 1)
                  {
                    *((_QWORD *)v97 + 14) = v109;
                    swift_bridgeObjectRelease(v108);
                    v97[120] = v98[120];
                    *((_QWORD *)v97 + 16) = *((_QWORD *)v98 + 16);
                    v97[136] = v98[136];
LABEL_41:
                    v110 = *((_QWORD *)v97 + 18);
                    v111 = *((_QWORD *)v98 + 18);
                    if (v110 != 1)
                    {
                      if (v111 != 1)
                      {
                        *((_QWORD *)v97 + 18) = v111;
                        swift_bridgeObjectRelease(v110);
                        v97[152] = v98[152];
                        *((_QWORD *)v97 + 20) = *((_QWORD *)v98 + 20);
                        v97[168] = v98[168];
LABEL_46:
                        v112 = *((_QWORD *)v97 + 22);
                        v113 = *((_QWORD *)v98 + 22);
                        if (v112 != 1)
                        {
                          if (v113 != 1)
                          {
                            *((_QWORD *)v97 + 22) = v113;
                            swift_bridgeObjectRelease(v112);
                            v97[184] = v98[184];
                            *((_QWORD *)v97 + 24) = *((_QWORD *)v98 + 24);
                            v97[200] = v98[200];
LABEL_51:
                            v114 = *((_QWORD *)v97 + 26);
                            v115 = *((_QWORD *)v98 + 26);
                            if (v114 != 1)
                            {
                              if (v115 != 1)
                              {
                                *((_QWORD *)v97 + 26) = v115;
                                swift_bridgeObjectRelease(v114);
                                v97[216] = v98[216];
                                *((_QWORD *)v97 + 28) = *((_QWORD *)v98 + 28);
                                v97[232] = v98[232];
LABEL_56:
                                v116 = *((_QWORD *)v97 + 30);
                                v117 = *((_QWORD *)v98 + 30);
                                if (v116 != 1)
                                {
                                  if (v117 != 1)
                                  {
                                    *((_QWORD *)v97 + 30) = v117;
                                    swift_bridgeObjectRelease(v116);
                                    v97[248] = v98[248];
                                    *((_QWORD *)v97 + 32) = *((_QWORD *)v98 + 32);
                                    v97[264] = v98[264];
LABEL_61:
                                    v118 = *((_QWORD *)v97 + 34);
                                    if (v118 != 1)
                                    {
                                      v119 = *((_QWORD *)v98 + 34);
                                      if (v119 != 1)
                                      {
                                        *((_QWORD *)v97 + 34) = v119;
                                        swift_bridgeObjectRelease(v118);
                                        v97[280] = v98[280];
                                        *((_QWORD *)v97 + 36) = *((_QWORD *)v98 + 36);
                                        v97[296] = v98[296];
LABEL_66:
                                        v120 = *((_QWORD *)v97 + 38);
                                        if (v120 != 1)
                                        {
                                          v121 = *((_QWORD *)v98 + 38);
                                          if (v121 != 1)
                                          {
                                            *((_QWORD *)v97 + 38) = v121;
                                            swift_bridgeObjectRelease(v120);
                                            v97[312] = v98[312];
                                            *((_QWORD *)v97 + 40) = *((_QWORD *)v98 + 40);
                                            v97[328] = v98[328];
LABEL_71:
                                            v122 = *((_QWORD *)v97 + 42);
                                            if (v122 != 1)
                                            {
                                              v123 = *((_QWORD *)v98 + 42);
                                              if (v123 != 1)
                                              {
                                                *((_QWORD *)v97 + 42) = v123;
                                                swift_bridgeObjectRelease(v122);
                                                v97[344] = v98[344];
                                                *((_QWORD *)v97 + 44) = *((_QWORD *)v98 + 44);
                                                v97[360] = v98[360];
LABEL_76:
                                                v124 = *((_QWORD *)v97 + 46);
                                                if (v124 != 1)
                                                {
                                                  v125 = *((_QWORD *)v98 + 46);
                                                  if (v125 != 1)
                                                  {
                                                    *((_QWORD *)v97 + 46) = v125;
                                                    swift_bridgeObjectRelease(v124);
                                                    v97[376] = v98[376];
                                                    *((_QWORD *)v97 + 48) = *((_QWORD *)v98 + 48);
                                                    v97[392] = v98[392];
LABEL_81:
                                                    v126 = *((_QWORD *)v97 + 50);
                                                    if (v126 != 1)
                                                    {
                                                      v127 = *((_QWORD *)v98 + 50);
                                                      if (v127 != 1)
                                                      {
                                                        *((_QWORD *)v97 + 50) = v127;
                                                        swift_bridgeObjectRelease(v126);
                                                        v97[408] = v98[408];
                                                        *((_QWORD *)v97 + 52) = *((_QWORD *)v98 + 52);
                                                        v97[424] = v98[424];
LABEL_86:
                                                        v128 = *((_QWORD *)v97 + 54);
                                                        if (v128 != 1)
                                                        {
                                                          v129 = *((_QWORD *)v98 + 54);
                                                          if (v129 != 1)
                                                          {
                                                            *((_QWORD *)v97 + 54) = v129;
                                                            swift_bridgeObjectRelease(v128);
                                                            v97[440] = v98[440];
                                                            *((_QWORD *)v97 + 56) = *((_QWORD *)v98 + 56);
                                                            v97[456] = v98[456];
LABEL_91:
                                                            v130 = *((_QWORD *)v97 + 58);
                                                            if (v130 != 1)
                                                            {
                                                              v131 = *((_QWORD *)v98 + 58);
                                                              if (v131 != 1)
                                                              {
                                                                *((_QWORD *)v97 + 58) = v131;
                                                                swift_bridgeObjectRelease(v130);
                                                                v97[472] = v98[472];
                                                                *((_QWORD *)v97 + 60) = *((_QWORD *)v98 + 60);
                                                                v97[488] = v98[488];
LABEL_96:
                                                                v132 = *((_QWORD *)v97 + 62);
                                                                if (v132 != 1)
                                                                {
                                                                  v133 = *((_QWORD *)v98 + 62);
                                                                  if (v133 != 1)
                                                                  {
                                                                    *((_QWORD *)v97 + 62) = v133;
                                                                    swift_bridgeObjectRelease(v132);
                                                                    v97[504] = v98[504];
                                                                    *((_QWORD *)v97 + 64) = *((_QWORD *)v98 + 64);
                                                                    v97[520] = v98[520];
LABEL_101:
                                                                    v134 = *((_QWORD *)v97 + 66);
                                                                    if (v134 != 1)
                                                                    {
                                                                      v135 = *((_QWORD *)v98 + 66);
                                                                      if (v135 != 1)
                                                                      {
                                                                        *((_QWORD *)v97 + 66) = v135;
                                                                        swift_bridgeObjectRelease(v134);
                                                                        v97[536] = v98[536];
                                                                        *((_QWORD *)v97 + 68) = *((_QWORD *)v98 + 68);
                                                                        v97[552] = v98[552];
LABEL_106:
                                                                        v136 = *((_QWORD *)v97 + 70);
                                                                        if (v136 != 1)
                                                                        {
                                                                          v137 = *((_QWORD *)v98 + 70);
                                                                          if (v137 != 1)
                                                                          {
                                                                            *((_QWORD *)v97 + 70) = v137;
                                                                            swift_bridgeObjectRelease(v136);
                                                                            v97[568] = v98[568];
                                                                            *((_QWORD *)v97 + 72) = *((_QWORD *)v98 + 72);
                                                                            v97[584] = v98[584];
LABEL_111:
                                                                            v138 = *((_QWORD *)v97 + 74);
                                                                            if (v138 != 1)
                                                                            {
                                                                              v139 = *((_QWORD *)v98 + 74);
                                                                              if (v139 != 1)
                                                                              {
                                                                                *((_QWORD *)v97 + 74) = v139;
                                                                                swift_bridgeObjectRelease(v138);
                                                                                v97[600] = v98[600];
                                                                                *((_QWORD *)v97 + 76) = *((_QWORD *)v98 + 76);
                                                                                v97[616] = v98[616];
LABEL_116:
                                                                                v140 = *((_QWORD *)v97 + 78);
                                                                                if (v140 != 1)
                                                                                {
                                                                                  v141 = *((_QWORD *)v98 + 78);
                                                                                  if (v141 != 1)
                                                                                  {
                                                                                    *((_QWORD *)v97 + 78) = v141;
                                                                                    swift_bridgeObjectRelease(v140);
                                                                                    v97[632] = v98[632];
                                                                                    *((_QWORD *)v97 + 80) = *((_QWORD *)v98 + 80);
                                                                                    v97[648] = v98[648];
LABEL_121:
                                                                                    v142 = *((_QWORD *)v97 + 82);
                                                                                    if (v142 != 1)
                                                                                    {
                                                                                      v143 = *((_QWORD *)v98 + 82);
                                                                                      if (v143 != 1)
                                                                                      {
                                                                                        *((_QWORD *)v97 + 82) = v143;
                                                                                        swift_bridgeObjectRelease(v142);
                                                                                        v97[664] = v98[664];
                                                                                        *((_QWORD *)v97 + 84) = *((_QWORD *)v98 + 84);
                                                                                        v97[680] = v98[680];
LABEL_126:
                                                                                        v144 = *((_QWORD *)v97 + 86);
                                                                                        if (v144 != 1)
                                                                                        {
                                                                                          v145 = *((_QWORD *)v98 + 86);
                                                                                          if (v145 != 1)
                                                                                          {
                                                                                            *((_QWORD *)v97 + 86) = v145;
                                                                                            swift_bridgeObjectRelease(v144);
                                                                                            v97[696] = v98[696];
                                                                                            *((_QWORD *)v97 + 88) = *((_QWORD *)v98 + 88);
                                                                                            v97[712] = v98[712];
LABEL_131:
                                                                                            v146 = *((_QWORD *)v97 + 90);
                                                                                            if (v146 != 1)
                                                                                            {
                                                                                              v147 = *((_QWORD *)v98 + 90);
                                                                                              if (v147 != 1)
                                                                                              {
                                                                                                *((_QWORD *)v97 + 90) = v147;
                                                                                                swift_bridgeObjectRelease(v146);
                                                                                                v97[728] = v98[728];
                                                                                                *((_QWORD *)v97 + 92) = *((_QWORD *)v98 + 92);
                                                                                                v97[744] = v98[744];
LABEL_136:
                                                                                                v148 = *((_QWORD *)v97 + 94);
                                                                                                if (v148 != 1)
                                                                                                {
                                                                                                  v149 = *((_QWORD *)v98 + 94);
                                                                                                  if (v149 != 1)
                                                                                                  {
                                                                                                    *((_QWORD *)v97 + 94) = v149;
                                                                                                    swift_bridgeObjectRelease(v148);
                                                                                                    v97[760] = v98[760];
                                                                                                    *((_QWORD *)v97 + 96) = *((_QWORD *)v98 + 96);
                                                                                                    v97[776] = v98[776];
                                                                                                    goto LABEL_141;
                                                                                                  }
                                                                                                  sub_100083F00((_QWORD *)v97 + 94);
                                                                                                }
                                                                                                *((_OWORD *)v97 + 47) = *((_OWORD *)v98 + 47);
                                                                                                *(_OWORD *)(v97 + 761) = *(_OWORD *)(v98 + 761);
LABEL_141:
                                                                                                *((_OWORD *)v97 + 49) = *((_OWORD *)v98 + 49);
                                                                                                v97[800] = v98[800];
                                                                                                v97[824] = v98[824];
                                                                                                *(_OWORD *)(v97 + 808) = *(_OWORD *)(v98 + 808);
                                                                                                *(_DWORD *)(v97 + 825) = *(_DWORD *)(v98 + 825);
                                                                                                *(_WORD *)(v97 + 829) = *(_WORD *)(v98 + 829);
                                                                                                v97[831] = v98[831];
                                                                                                v150 = *((_QWORD *)v97 + 104);
                                                                                                *((_QWORD *)v97 + 104) = *((_QWORD *)v98 + 104);
                                                                                                swift_bridgeObjectRelease(v150);
                                                                                                v151 = *((_QWORD *)v97 + 105);
                                                                                                *((_QWORD *)v97 + 105) = *((_QWORD *)v98 + 105);
                                                                                                swift_bridgeObjectRelease(v151);
LABEL_142:
                                                                                                v152 = (uint64_t *)(v97 + 848);
                                                                                                v153 = v98 + 848;
                                                                                                if (*((_QWORD *)v97 + 208) == 1)
                                                                                                {
LABEL_145:
                                                                                                  memcpy(v97 + 848, v98 + 848, 0x340uLL);
                                                                                                  goto LABEL_267;
                                                                                                }
                                                                                                if (*((_QWORD *)v98 + 208) == 1)
                                                                                                {
                                                                                                  sub_100083F28((uint64_t *)v97 + 106);
                                                                                                  goto LABEL_145;
                                                                                                }
                                                                                                v154 = *v152;
                                                                                                if (*v152 != 1)
                                                                                                {
                                                                                                  if (*v153 != 1)
                                                                                                  {
                                                                                                    *((_QWORD *)v97 + 106) = *v153;
                                                                                                    swift_bridgeObjectRelease(v154);
                                                                                                    v97[856] = v98[856];
                                                                                                    *((_QWORD *)v97 + 108) = *((_QWORD *)v98 + 108);
                                                                                                    v97[872] = v98[872];
LABEL_151:
                                                                                                    v155 = *((_QWORD *)v97 + 110);
                                                                                                    if (v155 != 1)
                                                                                                    {
                                                                                                      v156 = *((_QWORD *)v98 + 110);
                                                                                                      if (v156 != 1)
                                                                                                      {
                                                                                                        *((_QWORD *)v97 + 110) = v156;
                                                                                                        swift_bridgeObjectRelease(v155);
                                                                                                        v97[888] = v98[888];
                                                                                                        *((_QWORD *)v97 + 112) = *((_QWORD *)v98 + 112);
                                                                                                        v97[904] = v98[904];
LABEL_156:
                                                                                                        v157 = *((_QWORD *)v97 + 114);
                                                                                                        if (v157 != 1)
                                                                                                        {
                                                                                                          v158 = *((_QWORD *)v98 + 114);
                                                                                                          if (v158 != 1)
                                                                                                          {
                                                                                                            *((_QWORD *)v97 + 114) = v158;
                                                                                                            swift_bridgeObjectRelease(v157);
                                                                                                            v97[920] = v98[920];
                                                                                                            *((_QWORD *)v97 + 116) = *((_QWORD *)v98 + 116);
                                                                                                            v97[936] = v98[936];
LABEL_161:
                                                                                                            v159 = *((_QWORD *)v97 + 118);
                                                                                                            if (v159 != 1)
                                                                                                            {
                                                                                                              v160 = *((_QWORD *)v98 + 118);
                                                                                                              if (v160 != 1)
                                                                                                              {
                                                                                                                *((_QWORD *)v97 + 118) = v160;
                                                                                                                swift_bridgeObjectRelease(v159);
                                                                                                                v97[952] = v98[952];
                                                                                                                *((_QWORD *)v97 + 120) = *((_QWORD *)v98 + 120);
                                                                                                                v97[968] = v98[968];
LABEL_166:
                                                                                                                v161 = *((_QWORD *)v97 + 122);
                                                                                                                if (v161 != 1)
                                                                                                                {
                                                                                                                  v162 = *((_QWORD *)v98 + 122);
                                                                                                                  if (v162 != 1)
                                                                                                                  {
                                                                                                                    *((_QWORD *)v97 + 122) = v162;
                                                                                                                    swift_bridgeObjectRelease(v161);
                                                                                                                    v97[984] = v98[984];
                                                                                                                    *((_QWORD *)v97 + 124) = *((_QWORD *)v98 + 124);
                                                                                                                    v97[1000] = v98[1000];
LABEL_171:
                                                                                                                    v163 = *((_QWORD *)v97 + 126);
                                                                                                                    if (v163 != 1)
                                                                                                                    {
                                                                                                                      v164 = *((_QWORD *)v98 + 126);
                                                                                                                      if (v164 != 1)
                                                                                                                      {
                                                                                                                        *((_QWORD *)v97 + 126) = v164;
                                                                                                                        swift_bridgeObjectRelease(v163);
                                                                                                                        v97[1016] = v98[1016];
                                                                                                                        *((_QWORD *)v97 + 128) = *((_QWORD *)v98 + 128);
                                                                                                                        v97[1032] = v98[1032];
LABEL_176:
                                                                                                                        v165 = *((_QWORD *)v97 + 130);
                                                                                                                        if (v165 != 1)
                                                                                                                        {
                                                                                                                          v166 = *((_QWORD *)v98 + 130);
                                                                                                                          if (v166 != 1)
                                                                                                                          {
                                                                                                                            *((_QWORD *)v97 + 130) = v166;
                                                                                                                            swift_bridgeObjectRelease(v165);
                                                                                                                            v97[1048] = v98[1048];
                                                                                                                            *((_QWORD *)v97 + 132) = *((_QWORD *)v98 + 132);
                                                                                                                            v97[1064] = v98[1064];
LABEL_181:
                                                                                                                            v167 = *((_QWORD *)v97 + 134);
                                                                                                                            if (v167 != 1)
                                                                                                                            {
                                                                                                                              v168 = *((_QWORD *)v98 + 134);
                                                                                                                              if (v168 != 1)
                                                                                                                              {
                                                                                                                                *((_QWORD *)v97 + 134) = v168;
                                                                                                                                swift_bridgeObjectRelease(v167);
                                                                                                                                v97[1080] = v98[1080];
                                                                                                                                *((_QWORD *)v97 + 136) = *((_QWORD *)v98 + 136);
                                                                                                                                v97[1096] = v98[1096];
LABEL_186:
                                                                                                                                v169 = *((_QWORD *)v97 + 138);
                                                                                                                                if (v169 != 1)
                                                                                                                                {
                                                                                                                                  v170 = *((_QWORD *)v98 + 138);
                                                                                                                                  if (v170 != 1)
                                                                                                                                  {
                                                                                                                                    *((_QWORD *)v97 + 138) = v170;
                                                                                                                                    swift_bridgeObjectRelease(v169);
                                                                                                                                    v97[1112] = v98[1112];
                                                                                                                                    *((_QWORD *)v97 + 140) = *((_QWORD *)v98 + 140);
                                                                                                                                    v97[1128] = v98[1128];
LABEL_191:
                                                                                                                                    v171 = *((_QWORD *)v97 + 142);
                                                                                                                                    if (v171 != 1)
                                                                                                                                    {
                                                                                                                                      v172 = *((_QWORD *)v98 + 142);
                                                                                                                                      if (v172 != 1)
                                                                                                                                      {
                                                                                                                                        *((_QWORD *)v97 + 142) = v172;
                                                                                                                                        swift_bridgeObjectRelease(v171);
                                                                                                                                        v97[1144] = v98[1144];
                                                                                                                                        *((_QWORD *)v97 + 144) = *((_QWORD *)v98 + 144);
                                                                                                                                        v97[1160] = v98[1160];
LABEL_196:
                                                                                                                                        v173 = *((_QWORD *)v97 + 146);
                                                                                                                                        if (v173 != 1)
                                                                                                                                        {
                                                                                                                                          v174 = *((_QWORD *)v98 + 146);
                                                                                                                                          if (v174 != 1)
                                                                                                                                          {
                                                                                                                                            *((_QWORD *)v97 + 146) = v174;
                                                                                                                                            swift_bridgeObjectRelease(v173);
                                                                                                                                            v97[1176] = v98[1176];
                                                                                                                                            *((_QWORD *)v97 + 148) = *((_QWORD *)v98 + 148);
                                                                                                                                            v97[1192] = v98[1192];
LABEL_201:
                                                                                                                                            v175 = *((_QWORD *)v97 + 150);
                                                                                                                                            if (v175 != 1)
                                                                                                                                            {
                                                                                                                                              v176 = *((_QWORD *)v98 + 150);
                                                                                                                                              if (v176 != 1)
                                                                                                                                              {
                                                                                                                                                *((_QWORD *)v97 + 150) = v176;
                                                                                                                                                swift_bridgeObjectRelease(v175);
                                                                                                                                                v97[1208] = v98[1208];
                                                                                                                                                *((_QWORD *)v97 + 152) = *((_QWORD *)v98 + 152);
                                                                                                                                                v97[1224] = v98[1224];
LABEL_206:
                                                                                                                                                v177 = *((_QWORD *)v97 + 154);
                                                                                                                                                if (v177 != 1)
                                                                                                                                                {
                                                                                                                                                  v178 = *((_QWORD *)v98 + 154);
                                                                                                                                                  if (v178 != 1)
                                                                                                                                                  {
                                                                                                                                                    *((_QWORD *)v97 + 154) = v178;
                                                                                                                                                    swift_bridgeObjectRelease(v177);
                                                                                                                                                    v97[1240] = v98[1240];
                                                                                                                                                    *((_QWORD *)v97 + 156) = *((_QWORD *)v98 + 156);
                                                                                                                                                    v97[1256] = v98[1256];
LABEL_211:
                                                                                                                                                    v179 = *((_QWORD *)v97 + 158);
                                                                                                                                                    if (v179 != 1)
                                                                                                                                                    {
                                                                                                                                                      v180 = *((_QWORD *)v98 + 158);
                                                                                                                                                      if (v180 != 1)
                                                                                                                                                      {
                                                                                                                                                        *((_QWORD *)v97 + 158) = v180;
                                                                                                                                                        swift_bridgeObjectRelease(v179);
                                                                                                                                                        v97[1272] = v98[1272];
                                                                                                                                                        *((_QWORD *)v97 + 160) = *((_QWORD *)v98 + 160);
                                                                                                                                                        v97[1288] = v98[1288];
LABEL_216:
                                                                                                                                                        v181 = *((_QWORD *)v97 + 162);
                                                                                                                                                        if (v181 != 1)
                                                                                                                                                        {
                                                                                                                                                          v182 = *((_QWORD *)v98 + 162);
                                                                                                                                                          if (v182 != 1)
                                                                                                                                                          {
                                                                                                                                                            *((_QWORD *)v97 + 162) = v182;
                                                                                                                                                            swift_bridgeObjectRelease(v181);
                                                                                                                                                            v97[1304] = v98[1304];
                                                                                                                                                            *((_QWORD *)v97 + 164) = *((_QWORD *)v98 + 164);
                                                                                                                                                            v97[1320] = v98[1320];
LABEL_221:
                                                                                                                                                            v183 = *((_QWORD *)v97 + 166);
                                                                                                                                                            if (v183 != 1)
                                                                                                                                                            {
                                                                                                                                                              v184 = *((_QWORD *)v98 + 166);
                                                                                                                                                              if (v184 != 1)
                                                                                                                                                              {
                                                                                                                                                                *((_QWORD *)v97 + 166) = v184;
                                                                                                                                                                swift_bridgeObjectRelease(v183);
                                                                                                                                                                v97[1336] = v98[1336];
                                                                                                                                                                *((_QWORD *)v97 + 168) = *((_QWORD *)v98 + 168);
                                                                                                                                                                v97[1352] = v98[1352];
LABEL_226:
                                                                                                                                                                v185 = *((_QWORD *)v97 + 170);
                                                                                                                                                                if (v185 != 1)
                                                                                                                                                                {
                                                                                                                                                                  v186 = *((_QWORD *)v98 + 170);
                                                                                                                                                                  if (v186 != 1)
                                                                                                                                                                  {
                                                                                                                                                                    *((_QWORD *)v97 + 170) = v186;
                                                                                                                                                                    swift_bridgeObjectRelease(v185);
                                                                                                                                                                    v97[1368] = v98[1368];
                                                                                                                                                                    *((_QWORD *)v97 + 172) = *((_QWORD *)v98 + 172);
                                                                                                                                                                    v97[1384] = v98[1384];
LABEL_231:
                                                                                                                                                                    v187 = *((_QWORD *)v97 + 174);
                                                                                                                                                                    if (v187 != 1)
                                                                                                                                                                    {
                                                                                                                                                                      v188 = *((_QWORD *)v98 + 174);
                                                                                                                                                                      if (v188 != 1)
                                                                                                                                                                      {
                                                                                                                                                                        *((_QWORD *)v97 + 174) = v188;
                                                                                                                                                                        swift_bridgeObjectRelease(v187);
                                                                                                                                                                        v97[1400] = v98[1400];
                                                                                                                                                                        *((_QWORD *)v97 + 176) = *((_QWORD *)v98 + 176);
                                                                                                                                                                        v97[1416] = v98[1416];
LABEL_236:
                                                                                                                                                                        v189 = *((_QWORD *)v97 + 178);
                                                                                                                                                                        if (v189 != 1)
                                                                                                                                                                        {
                                                                                                                                                                          v190 = *((_QWORD *)v98 + 178);
                                                                                                                                                                          if (v190 != 1)
                                                                                                                                                                          {
                                                                                                                                                                            *((_QWORD *)v97 + 178) = v190;
                                                                                                                                                                            swift_bridgeObjectRelease(v189);
                                                                                                                                                                            v97[1432] = v98[1432];
                                                                                                                                                                            *((_QWORD *)v97 + 180) = *((_QWORD *)v98 + 180);
                                                                                                                                                                            v97[1448] = v98[1448];
LABEL_241:
                                                                                                                                                                            v191 = *((_QWORD *)v97 + 182);
                                                                                                                                                                            if (v191 != 1)
                                                                                                                                                                            {
                                                                                                                                                                              v192 = *((_QWORD *)v98 + 182);
                                                                                                                                                                              if (v192 != 1)
                                                                                                                                                                              {
                                                                                                                                                                                *((_QWORD *)v97 + 182) = v192;
                                                                                                                                                                                swift_bridgeObjectRelease(v191);
                                                                                                                                                                                v97[1464] = v98[1464];
                                                                                                                                                                                *((_QWORD *)v97 + 184) = *((_QWORD *)v98 + 184);
                                                                                                                                                                                v97[1480] = v98[1480];
LABEL_246:
                                                                                                                                                                                v193 = *((_QWORD *)v97 + 186);
                                                                                                                                                                                if (v193 != 1)
                                                                                                                                                                                {
                                                                                                                                                                                  v194 = *((_QWORD *)v98 + 186);
                                                                                                                                                                                  if (v194 != 1)
                                                                                                                                                                                  {
                                                                                                                                                                                    *((_QWORD *)v97 + 186) = v194;
                                                                                                                                                                                    swift_bridgeObjectRelease(v193);
                                                                                                                                                                                    v97[1496] = v98[1496];
                                                                                                                                                                                    *((_QWORD *)v97 + 188) = *((_QWORD *)v98 + 188);
                                                                                                                                                                                    v97[1512] = v98[1512];
LABEL_251:
                                                                                                                                                                                    v195 = *((_QWORD *)v97 + 190);
                                                                                                                                                                                    if (v195 != 1)
                                                                                                                                                                                    {
                                                                                                                                                                                      v196 = *((_QWORD *)v98 + 190);
                                                                                                                                                                                      if (v196 != 1)
                                                                                                                                                                                      {
                                                                                                                                                                                        *((_QWORD *)v97 + 190) = v196;
                                                                                                                                                                                        swift_bridgeObjectRelease(v195);
                                                                                                                                                                                        v97[1528] = v98[1528];
                                                                                                                                                                                        *((_QWORD *)v97 + 192) = *((_QWORD *)v98 + 192);
                                                                                                                                                                                        v97[1544] = v98[1544];
LABEL_256:
                                                                                                                                                                                        v197 = *((_QWORD *)v97 + 194);
                                                                                                                                                                                        if (v197 != 1)
                                                                                                                                                                                        {
                                                                                                                                                                                          v198 = *((_QWORD *)v98 + 194);
                                                                                                                                                                                          if (v198 != 1)
                                                                                                                                                                                          {
                                                                                                                                                                                            *((_QWORD *)v97 + 194) = v198;
                                                                                                                                                                                            swift_bridgeObjectRelease(v197);
                                                                                                                                                                                            v97[1560] = v98[1560];
                                                                                                                                                                                            *((_QWORD *)v97 + 196) = *((_QWORD *)v98 + 196);
                                                                                                                                                                                            v97[1576] = v98[1576];
LABEL_261:
                                                                                                                                                                                            v199 = *((_QWORD *)v97 + 198);
                                                                                                                                                                                            if (v199 != 1)
                                                                                                                                                                                            {
                                                                                                                                                                                              v200 = *((_QWORD *)v98 + 198);
                                                                                                                                                                                              if (v200 != 1)
                                                                                                                                                                                              {
                                                                                                                                                                                                *((_QWORD *)v97 + 198) = v200;
                                                                                                                                                                                                swift_bridgeObjectRelease(v199);
                                                                                                                                                                                                v97[1592] = v98[1592];
                                                                                                                                                                                                *((_QWORD *)v97 + 200) = *((_QWORD *)v98 + 200);
                                                                                                                                                                                                v97[1608] = v98[1608];
                                                                                                                                                                                                goto LABEL_266;
                                                                                                                                                                                              }
                                                                                                                                                                                              sub_100083F00((_QWORD *)v97 + 198);
                                                                                                                                                                                            }
                                                                                                                                                                                            *((_OWORD *)v97 + 99) = *((_OWORD *)v98 + 99);
                                                                                                                                                                                            *(_OWORD *)(v97 + 1593) = *(_OWORD *)(v98 + 1593);
LABEL_266:
                                                                                                                                                                                            *((_OWORD *)v97 + 101) = *((_OWORD *)v98 + 101);
                                                                                                                                                                                            v97[1632] = v98[1632];
                                                                                                                                                                                            v97[1656] = v98[1656];
                                                                                                                                                                                            *(_OWORD *)(v97 + 1640) = *(_OWORD *)(v98 + 1640);
                                                                                                                                                                                            *(_DWORD *)(v97 + 1657) = *(_DWORD *)(v98 + 1657);
                                                                                                                                                                                            *(_WORD *)(v97 + 1661) = *(_WORD *)(v98 + 1661);
                                                                                                                                                                                            v97[1663] = v98[1663];
                                                                                                                                                                                            v201 = *((_QWORD *)v97 + 208);
                                                                                                                                                                                            *((_QWORD *)v97 + 208) = *((_QWORD *)v98 + 208);
                                                                                                                                                                                            swift_bridgeObjectRelease(v201);
                                                                                                                                                                                            v202 = *((_QWORD *)v97 + 209);
                                                                                                                                                                                            *((_QWORD *)v97 + 209) = *((_QWORD *)v98 + 209);
                                                                                                                                                                                            swift_bridgeObjectRelease(v202);
LABEL_267:
                                                                                                                                                                                            v203 = (uint64_t *)(v97 + 1680);
                                                                                                                                                                                            v204 = v98 + 1680;
                                                                                                                                                                                            if (*((_QWORD *)v97 + 312) == 1)
                                                                                                                                                                                            {
LABEL_270:
                                                                                                                                                                                              memcpy(v97 + 1680, v98 + 1680, 0x340uLL);
                                                                                                                                                                                              goto LABEL_392;
                                                                                                                                                                                            }
                                                                                                                                                                                            if (*((_QWORD *)v98 + 312) == 1)
                                                                                                                                                                                            {
                                                                                                                                                                                              sub_100083F28((uint64_t *)v97 + 210);
                                                                                                                                                                                              goto LABEL_270;
                                                                                                                                                                                            }
                                                                                                                                                                                            v205 = *v203;
                                                                                                                                                                                            if (*v203 != 1)
                                                                                                                                                                                            {
                                                                                                                                                                                              if (*v204 != 1)
                                                                                                                                                                                              {
                                                                                                                                                                                                *((_QWORD *)v97 + 210) = *v204;
                                                                                                                                                                                                swift_bridgeObjectRelease(v205);
                                                                                                                                                                                                v97[1688] = v98[1688];
                                                                                                                                                                                                *((_QWORD *)v97 + 212) = *((_QWORD *)v98 + 212);
                                                                                                                                                                                                v97[1704] = v98[1704];
LABEL_276:
                                                                                                                                                                                                v206 = *((_QWORD *)v97 + 214);
                                                                                                                                                                                                if (v206 != 1)
                                                                                                                                                                                                {
                                                                                                                                                                                                  v207 = *((_QWORD *)v98 + 214);
                                                                                                                                                                                                  if (v207 != 1)
                                                                                                                                                                                                  {
                                                                                                                                                                                                    *((_QWORD *)v97 + 214) = v207;
                                                                                                                                                                                                    swift_bridgeObjectRelease(v206);
                                                                                                                                                                                                    v97[1720] = v98[1720];
                                                                                                                                                                                                    *((_QWORD *)v97 + 216) = *((_QWORD *)v98 + 216);
                                                                                                                                                                                                    v97[1736] = v98[1736];
LABEL_281:
                                                                                                                                                                                                    v208 = *((_QWORD *)v97 + 218);
                                                                                                                                                                                                    if (v208 != 1)
                                                                                                                                                                                                    {
                                                                                                                                                                                                      v209 = *((_QWORD *)v98 + 218);
                                                                                                                                                                                                      if (v209 != 1)
                                                                                                                                                                                                      {
                                                                                                                                                                                                        *((_QWORD *)v97 + 218) = v209;
                                                                                                                                                                                                        swift_bridgeObjectRelease(v208);
                                                                                                                                                                                                        v97[1752] = v98[1752];
                                                                                                                                                                                                        *((_QWORD *)v97 + 220) = *((_QWORD *)v98 + 220);
                                                                                                                                                                                                        v97[1768] = v98[1768];
LABEL_286:
                                                                                                                                                                                                        v210 = *((_QWORD *)v97 + 222);
                                                                                                                                                                                                        if (v210 != 1)
                                                                                                                                                                                                        {
                                                                                                                                                                                                          v211 = *((_QWORD *)v98 + 222);
                                                                                                                                                                                                          if (v211 != 1)
                                                                                                                                                                                                          {
                                                                                                                                                                                                            *((_QWORD *)v97 + 222) = v211;
                                                                                                                                                                                                            swift_bridgeObjectRelease(v210);
                                                                                                                                                                                                            v97[1784] = v98[1784];
                                                                                                                                                                                                            *((_QWORD *)v97 + 224) = *((_QWORD *)v98 + 224);
                                                                                                                                                                                                            v97[1800] = v98[1800];
LABEL_291:
                                                                                                                                                                                                            v212 = *((_QWORD *)v97 + 226);
                                                                                                                                                                                                            if (v212 != 1)
                                                                                                                                                                                                            {
                                                                                                                                                                                                              v213 = *((_QWORD *)v98 + 226);
                                                                                                                                                                                                              if (v213 != 1)
                                                                                                                                                                                                              {
                                                                                                                                                                                                                *((_QWORD *)v97 + 226) = v213;
                                                                                                                                                                                                                swift_bridgeObjectRelease(v212);
                                                                                                                                                                                                                v97[1816] = v98[1816];
                                                                                                                                                                                                                *((_QWORD *)v97 + 228) = *((_QWORD *)v98 + 228);
                                                                                                                                                                                                                v97[1832] = v98[1832];
LABEL_296:
                                                                                                                                                                                                                v214 = *((_QWORD *)v97 + 230);
                                                                                                                                                                                                                if (v214 != 1)
                                                                                                                                                                                                                {
                                                                                                                                                                                                                  v215 = *((_QWORD *)v98 + 230);
                                                                                                                                                                                                                  if (v215 != 1)
                                                                                                                                                                                                                  {
                                                                                                                                                                                                                    *((_QWORD *)v97 + 230) = v215;
                                                                                                                                                                                                                    swift_bridgeObjectRelease(v214);
                                                                                                                                                                                                                    v97[1848] = v98[1848];
                                                                                                                                                                                                                    *((_QWORD *)v97 + 232) = *((_QWORD *)v98 + 232);
                                                                                                                                                                                                                    v97[1864] = v98[1864];
LABEL_301:
                                                                                                                                                                                                                    v216 = *((_QWORD *)v97 + 234);
                                                                                                                                                                                                                    if (v216 != 1)
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                      v217 = *((_QWORD *)v98 + 234);
                                                                                                                                                                                                                      if (v217 != 1)
                                                                                                                                                                                                                      {
                                                                                                                                                                                                                        *((_QWORD *)v97 + 234) = v217;
                                                                                                                                                                                                                        swift_bridgeObjectRelease(v216);
                                                                                                                                                                                                                        v97[1880] = v98[1880];
                                                                                                                                                                                                                        *((_QWORD *)v97 + 236) = *((_QWORD *)v98 + 236);
                                                                                                                                                                                                                        v97[1896] = v98[1896];
LABEL_306:
                                                                                                                                                                                                                        v218 = *((_QWORD *)v97 + 238);
                                                                                                                                                                                                                        if (v218 != 1)
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                          v219 = *((_QWORD *)v98 + 238);
                                                                                                                                                                                                                          if (v219 != 1)
                                                                                                                                                                                                                          {
                                                                                                                                                                                                                            *((_QWORD *)v97 + 238) = v219;
                                                                                                                                                                                                                            swift_bridgeObjectRelease(v218);
                                                                                                                                                                                                                            v97[1912] = v98[1912];
                                                                                                                                                                                                                            *((_QWORD *)v97 + 240) = *((_QWORD *)v98 + 240);
                                                                                                                                                                                                                            v97[1928] = v98[1928];
LABEL_311:
                                                                                                                                                                                                                            v220 = *((_QWORD *)v97 + 242);
                                                                                                                                                                                                                            if (v220 != 1)
                                                                                                                                                                                                                            {
                                                                                                                                                                                                                              v221 = *((_QWORD *)v98 + 242);
                                                                                                                                                                                                                              if (v221 != 1)
                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                *((_QWORD *)v97 + 242) = v221;
                                                                                                                                                                                                                                swift_bridgeObjectRelease(v220);
                                                                                                                                                                                                                                v97[1944] = v98[1944];
                                                                                                                                                                                                                                *((_QWORD *)v97 + 244) = *((_QWORD *)v98 + 244);
                                                                                                                                                                                                                                v97[1960] = v98[1960];
LABEL_316:
                                                                                                                                                                                                                                v222 = *((_QWORD *)v97 + 246);
                                                                                                                                                                                                                                if (v222 != 1)
                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                  v223 = *((_QWORD *)v98 + 246);
                                                                                                                                                                                                                                  if (v223 != 1)
                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                    *((_QWORD *)v97 + 246) = v223;
                                                                                                                                                                                                                                    swift_bridgeObjectRelease(v222);
                                                                                                                                                                                                                                    v97[1976] = v98[1976];
                                                                                                                                                                                                                                    *((_QWORD *)v97 + 248) = *((_QWORD *)v98 + 248);
                                                                                                                                                                                                                                    v97[1992] = v98[1992];
LABEL_321:
                                                                                                                                                                                                                                    v224 = *((_QWORD *)v97 + 250);
                                                                                                                                                                                                                                    if (v224 != 1)
                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                      v225 = *((_QWORD *)v98 + 250);
                                                                                                                                                                                                                                      if (v225 != 1)
                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                        *((_QWORD *)v97 + 250) = v225;
                                                                                                                                                                                                                                        swift_bridgeObjectRelease(v224);
                                                                                                                                                                                                                                        v97[2008] = v98[2008];
                                                                                                                                                                                                                                        *((_QWORD *)v97 + 252) = *((_QWORD *)v98 + 252);
                                                                                                                                                                                                                                        v97[2024] = v98[2024];
LABEL_326:
                                                                                                                                                                                                                                        v226 = *((_QWORD *)v97 + 254);
                                                                                                                                                                                                                                        if (v226 != 1)
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                          v227 = *((_QWORD *)v98 + 254);
                                                                                                                                                                                                                                          if (v227 != 1)
                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                            *((_QWORD *)v97 + 254) = v227;
                                                                                                                                                                                                                                            swift_bridgeObjectRelease(v226);
                                                                                                                                                                                                                                            v97[2040] = v98[2040];
                                                                                                                                                                                                                                            *((_QWORD *)v97 + 256) = *((_QWORD *)v98 + 256);
                                                                                                                                                                                                                                            v97[2056] = v98[2056];
LABEL_331:
                                                                                                                                                                                                                                            v228 = *((_QWORD *)v97 + 258);
                                                                                                                                                                                                                                            if (v228 != 1)
                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                              v229 = *((_QWORD *)v98 + 258);
                                                                                                                                                                                                                                              if (v229 != 1)
                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                *((_QWORD *)v97 + 258) = v229;
                                                                                                                                                                                                                                                swift_bridgeObjectRelease(v228);
                                                                                                                                                                                                                                                v97[2072] = v98[2072];
                                                                                                                                                                                                                                                *((_QWORD *)v97 + 260) = *((_QWORD *)v98 + 260);
                                                                                                                                                                                                                                                v97[2088] = v98[2088];
LABEL_336:
                                                                                                                                                                                                                                                v230 = *((_QWORD *)v97 + 262);
                                                                                                                                                                                                                                                if (v230 != 1)
                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                  v231 = *((_QWORD *)v98 + 262);
                                                                                                                                                                                                                                                  if (v231 != 1)
                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                    *((_QWORD *)v97 + 262) = v231;
                                                                                                                                                                                                                                                    swift_bridgeObjectRelease(v230);
                                                                                                                                                                                                                                                    v97[2104] = v98[2104];
                                                                                                                                                                                                                                                    *((_QWORD *)v97 + 264) = *((_QWORD *)v98 + 264);
                                                                                                                                                                                                                                                    v97[2120] = v98[2120];
LABEL_341:
                                                                                                                                                                                                                                                    v232 = *((_QWORD *)v97 + 266);
                                                                                                                                                                                                                                                    if (v232 != 1)
                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                      v233 = *((_QWORD *)v98 + 266);
                                                                                                                                                                                                                                                      if (v233 != 1)
                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                        *((_QWORD *)v97 + 266) = v233;
                                                                                                                                                                                                                                                        swift_bridgeObjectRelease(v232);
                                                                                                                                                                                                                                                        v97[2136] = v98[2136];
                                                                                                                                                                                                                                                        *((_QWORD *)v97 + 268) = *((_QWORD *)v98 + 268);
                                                                                                                                                                                                                                                        v97[2152] = v98[2152];
LABEL_346:
                                                                                                                                                                                                                                                        v234 = *((_QWORD *)v97 + 270);
                                                                                                                                                                                                                                                        if (v234 != 1)
                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                          v235 = *((_QWORD *)v98 + 270);
                                                                                                                                                                                                                                                          if (v235 != 1)
                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                            *((_QWORD *)v97 + 270) = v235;
                                                                                                                                                                                                                                                            swift_bridgeObjectRelease(v234);
                                                                                                                                                                                                                                                            v97[2168] = v98[2168];
                                                                                                                                                                                                                                                            *((_QWORD *)v97 + 272) = *((_QWORD *)v98 + 272);
                                                                                                                                                                                                                                                            v97[2184] = v98[2184];
LABEL_351:
                                                                                                                                                                                                                                                            v236 = *((_QWORD *)v97 + 274);
                                                                                                                                                                                                                                                            if (v236 != 1)
                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                              v237 = *((_QWORD *)v98 + 274);
                                                                                                                                                                                                                                                              if (v237 != 1)
                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                *((_QWORD *)v97 + 274) = v237;
                                                                                                                                                                                                                                                                swift_bridgeObjectRelease(v236);
                                                                                                                                                                                                                                                                v97[2200] = v98[2200];
                                                                                                                                                                                                                                                                *((_QWORD *)v97 + 276) = *((_QWORD *)v98 + 276);
                                                                                                                                                                                                                                                                v97[2216] = v98[2216];
LABEL_356:
                                                                                                                                                                                                                                                                v238 = *((_QWORD *)v97 + 278);
                                                                                                                                                                                                                                                                if (v238 != 1)
                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                  v239 = *((_QWORD *)v98 + 278);
                                                                                                                                                                                                                                                                  if (v239 != 1)
                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                    *((_QWORD *)v97 + 278) = v239;
                                                                                                                                                                                                                                                                    swift_bridgeObjectRelease(v238);
                                                                                                                                                                                                                                                                    v97[2232] = v98[2232];
                                                                                                                                                                                                                                                                    *((_QWORD *)v97 + 280) = *((_QWORD *)v98 + 280);
                                                                                                                                                                                                                                                                    v97[2248] = v98[2248];
LABEL_361:
                                                                                                                                                                                                                                                                    v240 = *((_QWORD *)v97 + 282);
                                                                                                                                                                                                                                                                    if (v240 != 1)
                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                      v241 = *((_QWORD *)v98 + 282);
                                                                                                                                                                                                                                                                      if (v241 != 1)
                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                        *((_QWORD *)v97 + 282) = v241;
                                                                                                                                                                                                                                                                        swift_bridgeObjectRelease(v240);
                                                                                                                                                                                                                                                                        v97[2264] = v98[2264];
                                                                                                                                                                                                                                                                        *((_QWORD *)v97 + 284) = *((_QWORD *)v98 + 284);
                                                                                                                                                                                                                                                                        v97[2280] = v98[2280];
LABEL_366:
                                                                                                                                                                                                                                                                        v242 = *((_QWORD *)v97 + 286);
                                                                                                                                                                                                                                                                        if (v242 != 1)
                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                          v243 = *((_QWORD *)v98 + 286);
                                                                                                                                                                                                                                                                          if (v243 != 1)
                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                            *((_QWORD *)v97 + 286) = v243;
                                                                                                                                                                                                                                                                            swift_bridgeObjectRelease(v242);
                                                                                                                                                                                                                                                                            v97[2296] = v98[2296];
                                                                                                                                                                                                                                                                            *((_QWORD *)v97 + 288) = *((_QWORD *)v98 + 288);
                                                                                                                                                                                                                                                                            v97[2312] = v98[2312];
LABEL_371:
                                                                                                                                                                                                                                                                            v244 = *((_QWORD *)v97 + 290);
                                                                                                                                                                                                                                                                            if (v244 != 1)
                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                              v245 = *((_QWORD *)v98 + 290);
                                                                                                                                                                                                                                                                              if (v245 != 1)
                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                *((_QWORD *)v97 + 290) = v245;
                                                                                                                                                                                                                                                                                swift_bridgeObjectRelease(v244);
                                                                                                                                                                                                                                                                                v97[2328] = v98[2328];
                                                                                                                                                                                                                                                                                *((_QWORD *)v97 + 292) = *((_QWORD *)v98 + 292);
                                                                                                                                                                                                                                                                                v97[2344] = v98[2344];
LABEL_376:
                                                                                                                                                                                                                                                                                v246 = *((_QWORD *)v97 + 294);
                                                                                                                                                                                                                                                                                if (v246 != 1)
                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                  v247 = *((_QWORD *)v98 + 294);
                                                                                                                                                                                                                                                                                  if (v247 != 1)
                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                    *((_QWORD *)v97 + 294) = v247;
                                                                                                                                                                                                                                                                                    swift_bridgeObjectRelease(v246);
                                                                                                                                                                                                                                                                                    v97[2360] = v98[2360];
                                                                                                                                                                                                                                                                                    *((_QWORD *)v97 + 296) = *((_QWORD *)v98 + 296);
                                                                                                                                                                                                                                                                                    v97[2376] = v98[2376];
LABEL_381:
                                                                                                                                                                                                                                                                                    v248 = *((_QWORD *)v97 + 298);
                                                                                                                                                                                                                                                                                    if (v248 != 1)
                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                      v249 = *((_QWORD *)v98 + 298);
                                                                                                                                                                                                                                                                                      if (v249 != 1)
                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                        *((_QWORD *)v97 + 298) = v249;
                                                                                                                                                                                                                                                                                        swift_bridgeObjectRelease(v248);
                                                                                                                                                                                                                                                                                        v97[2392] = v98[2392];
                                                                                                                                                                                                                                                                                        *((_QWORD *)v97 + 300) = *((_QWORD *)v98 + 300);
                                                                                                                                                                                                                                                                                        v97[2408] = v98[2408];
LABEL_386:
                                                                                                                                                                                                                                                                                        v250 = *((_QWORD *)v97 + 302);
                                                                                                                                                                                                                                                                                        if (v250 != 1)
                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                          v251 = *((_QWORD *)v98 + 302);
                                                                                                                                                                                                                                                                                          if (v251 != 1)
                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                            *((_QWORD *)v97 + 302) = v251;
                                                                                                                                                                                                                                                                                            swift_bridgeObjectRelease(v250);
                                                                                                                                                                                                                                                                                            v97[2424] = v98[2424];
                                                                                                                                                                                                                                                                                            *((_QWORD *)v97 + 304) = *((_QWORD *)v98 + 304);
                                                                                                                                                                                                                                                                                            v97[2440] = v98[2440];
                                                                                                                                                                                                                                                                                            goto LABEL_391;
                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                          sub_100083F00((_QWORD *)v97 + 302);
                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                        *((_OWORD *)v97 + 151) = *((_OWORD *)v98 + 151);
                                                                                                                                                                                                                                                                                        *(_OWORD *)(v97 + 2425) = *(_OWORD *)(v98 + 2425);
LABEL_391:
                                                                                                                                                                                                                                                                                        *((_OWORD *)v97 + 153) = *((_OWORD *)v98 + 153);
                                                                                                                                                                                                                                                                                        v97[2464] = v98[2464];
                                                                                                                                                                                                                                                                                        v97[2488] = v98[2488];
                                                                                                                                                                                                                                                                                        *(_OWORD *)(v97 + 2472) = *(_OWORD *)(v98 + 2472);
                                                                                                                                                                                                                                                                                        *(_DWORD *)(v97 + 2489) = *(_DWORD *)(v98 + 2489);
                                                                                                                                                                                                                                                                                        *(_WORD *)(v97 + 2493) = *(_WORD *)(v98 + 2493);
                                                                                                                                                                                                                                                                                        v97[2495] = v98[2495];
                                                                                                                                                                                                                                                                                        v252 = *((_QWORD *)v97 + 312);
                                                                                                                                                                                                                                                                                        *((_QWORD *)v97 + 312) = *((_QWORD *)v98 + 312);
                                                                                                                                                                                                                                                                                        swift_bridgeObjectRelease(v252);
                                                                                                                                                                                                                                                                                        v253 = *((_QWORD *)v97 + 313);
                                                                                                                                                                                                                                                                                        *((_QWORD *)v97 + 313) = *((_QWORD *)v98 + 313);
                                                                                                                                                                                                                                                                                        swift_bridgeObjectRelease(v253);
LABEL_392:
                                                                                                                                                                                                                                                                                        v254 = (uint64_t *)(v97 + 2512);
                                                                                                                                                                                                                                                                                        v255 = v98 + 2512;
                                                                                                                                                                                                                                                                                        if (*((_QWORD *)v97 + 416) == 1)
                                                                                                                                                                                                                                                                                        {
LABEL_395:
                                                                                                                                                                                                                                                                                          memcpy(v97 + 2512, v98 + 2512, 0x340uLL);
                                                                                                                                                                                                                                                                                          goto LABEL_517;
                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                        if (*((_QWORD *)v98 + 416) == 1)
                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                          sub_100083F28((uint64_t *)v97 + 314);
                                                                                                                                                                                                                                                                                          goto LABEL_395;
                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                        v256 = *v254;
                                                                                                                                                                                                                                                                                        if (*v254 != 1)
                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                          if (*v255 != 1)
                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                            *((_QWORD *)v97 + 314) = *v255;
                                                                                                                                                                                                                                                                                            swift_bridgeObjectRelease(v256);
                                                                                                                                                                                                                                                                                            v97[2520] = v98[2520];
                                                                                                                                                                                                                                                                                            *((_QWORD *)v97 + 316) = *((_QWORD *)v98 + 316);
                                                                                                                                                                                                                                                                                            v97[2536] = v98[2536];
LABEL_401:
                                                                                                                                                                                                                                                                                            v257 = *((_QWORD *)v97 + 318);
                                                                                                                                                                                                                                                                                            if (v257 != 1)
                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                              v258 = *((_QWORD *)v98 + 318);
                                                                                                                                                                                                                                                                                              if (v258 != 1)
                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                *((_QWORD *)v97 + 318) = v258;
                                                                                                                                                                                                                                                                                                swift_bridgeObjectRelease(v257);
                                                                                                                                                                                                                                                                                                v97[2552] = v98[2552];
                                                                                                                                                                                                                                                                                                *((_QWORD *)v97 + 320) = *((_QWORD *)v98 + 320);
                                                                                                                                                                                                                                                                                                v97[2568] = v98[2568];
LABEL_406:
                                                                                                                                                                                                                                                                                                v259 = *((_QWORD *)v97 + 322);
                                                                                                                                                                                                                                                                                                if (v259 != 1)
                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                  v260 = *((_QWORD *)v98 + 322);
                                                                                                                                                                                                                                                                                                  if (v260 != 1)
                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                    *((_QWORD *)v97 + 322) = v260;
                                                                                                                                                                                                                                                                                                    swift_bridgeObjectRelease(v259);
                                                                                                                                                                                                                                                                                                    v97[2584] = v98[2584];
                                                                                                                                                                                                                                                                                                    *((_QWORD *)v97 + 324) = *((_QWORD *)v98 + 324);
                                                                                                                                                                                                                                                                                                    v97[2600] = v98[2600];
LABEL_411:
                                                                                                                                                                                                                                                                                                    v261 = *((_QWORD *)v97 + 326);
                                                                                                                                                                                                                                                                                                    if (v261 != 1)
                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                      v262 = *((_QWORD *)v98 + 326);
                                                                                                                                                                                                                                                                                                      if (v262 != 1)
                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                        *((_QWORD *)v97 + 326) = v262;
                                                                                                                                                                                                                                                                                                        swift_bridgeObjectRelease(v261);
                                                                                                                                                                                                                                                                                                        v97[2616] = v98[2616];
                                                                                                                                                                                                                                                                                                        *((_QWORD *)v97 + 328) = *((_QWORD *)v98 + 328);
                                                                                                                                                                                                                                                                                                        v97[2632] = v98[2632];
LABEL_416:
                                                                                                                                                                                                                                                                                                        v263 = *((_QWORD *)v97 + 330);
                                                                                                                                                                                                                                                                                                        if (v263 != 1)
                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                          v264 = *((_QWORD *)v98 + 330);
                                                                                                                                                                                                                                                                                                          if (v264 != 1)
                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                            *((_QWORD *)v97 + 330) = v264;
                                                                                                                                                                                                                                                                                                            swift_bridgeObjectRelease(v263);
                                                                                                                                                                                                                                                                                                            v97[2648] = v98[2648];
                                                                                                                                                                                                                                                                                                            *((_QWORD *)v97 + 332) = *((_QWORD *)v98 + 332);
                                                                                                                                                                                                                                                                                                            v97[2664] = v98[2664];
LABEL_421:
                                                                                                                                                                                                                                                                                                            v265 = *((_QWORD *)v97 + 334);
                                                                                                                                                                                                                                                                                                            if (v265 != 1)
                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                              v266 = *((_QWORD *)v98 + 334);
                                                                                                                                                                                                                                                                                                              if (v266 != 1)
                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                *((_QWORD *)v97 + 334) = v266;
                                                                                                                                                                                                                                                                                                                swift_bridgeObjectRelease(v265);
                                                                                                                                                                                                                                                                                                                v97[2680] = v98[2680];
                                                                                                                                                                                                                                                                                                                *((_QWORD *)v97 + 336) = *((_QWORD *)v98 + 336);
                                                                                                                                                                                                                                                                                                                v97[2696] = v98[2696];
LABEL_426:
                                                                                                                                                                                                                                                                                                                v267 = *((_QWORD *)v97 + 338);
                                                                                                                                                                                                                                                                                                                if (v267 != 1)
                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                  v268 = *((_QWORD *)v98 + 338);
                                                                                                                                                                                                                                                                                                                  if (v268 != 1)
                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                    *((_QWORD *)v97 + 338) = v268;
                                                                                                                                                                                                                                                                                                                    swift_bridgeObjectRelease(v267);
                                                                                                                                                                                                                                                                                                                    v97[2712] = v98[2712];
                                                                                                                                                                                                                                                                                                                    *((_QWORD *)v97 + 340) = *((_QWORD *)v98 + 340);
                                                                                                                                                                                                                                                                                                                    v97[2728] = v98[2728];
LABEL_431:
                                                                                                                                                                                                                                                                                                                    v269 = *((_QWORD *)v97 + 342);
                                                                                                                                                                                                                                                                                                                    if (v269 != 1)
                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                      v270 = *((_QWORD *)v98 + 342);
                                                                                                                                                                                                                                                                                                                      if (v270 != 1)
                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                        *((_QWORD *)v97 + 342) = v270;
                                                                                                                                                                                                                                                                                                                        swift_bridgeObjectRelease(v269);
                                                                                                                                                                                                                                                                                                                        v97[2744] = v98[2744];
                                                                                                                                                                                                                                                                                                                        *((_QWORD *)v97 + 344) = *((_QWORD *)v98 + 344);
                                                                                                                                                                                                                                                                                                                        v97[2760] = v98[2760];
LABEL_436:
                                                                                                                                                                                                                                                                                                                        v271 = *((_QWORD *)v97 + 346);
                                                                                                                                                                                                                                                                                                                        if (v271 != 1)
                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                          v272 = *((_QWORD *)v98 + 346);
                                                                                                                                                                                                                                                                                                                          if (v272 != 1)
                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                            *((_QWORD *)v97 + 346) = v272;
                                                                                                                                                                                                                                                                                                                            swift_bridgeObjectRelease(v271);
                                                                                                                                                                                                                                                                                                                            v97[2776] = v98[2776];
                                                                                                                                                                                                                                                                                                                            *((_QWORD *)v97 + 348) = *((_QWORD *)v98 + 348);
                                                                                                                                                                                                                                                                                                                            v97[2792] = v98[2792];
LABEL_441:
                                                                                                                                                                                                                                                                                                                            v273 = *((_QWORD *)v97 + 350);
                                                                                                                                                                                                                                                                                                                            if (v273 != 1)
                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                              v274 = *((_QWORD *)v98 + 350);
                                                                                                                                                                                                                                                                                                                              if (v274 != 1)
                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                *((_QWORD *)v97 + 350) = v274;
                                                                                                                                                                                                                                                                                                                                swift_bridgeObjectRelease(v273);
                                                                                                                                                                                                                                                                                                                                v97[2808] = v98[2808];
                                                                                                                                                                                                                                                                                                                                *((_QWORD *)v97 + 352) = *((_QWORD *)v98 + 352);
                                                                                                                                                                                                                                                                                                                                v97[2824] = v98[2824];
LABEL_446:
                                                                                                                                                                                                                                                                                                                                v275 = *((_QWORD *)v97 + 354);
                                                                                                                                                                                                                                                                                                                                if (v275 != 1)
                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                  v276 = *((_QWORD *)v98 + 354);
                                                                                                                                                                                                                                                                                                                                  if (v276 != 1)
                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                    *((_QWORD *)v97 + 354) = v276;
                                                                                                                                                                                                                                                                                                                                    swift_bridgeObjectRelease(v275);
                                                                                                                                                                                                                                                                                                                                    v97[2840] = v98[2840];
                                                                                                                                                                                                                                                                                                                                    *((_QWORD *)v97 + 356) = *((_QWORD *)v98 + 356);
                                                                                                                                                                                                                                                                                                                                    v97[2856] = v98[2856];
LABEL_451:
                                                                                                                                                                                                                                                                                                                                    v277 = *((_QWORD *)v97 + 358);
                                                                                                                                                                                                                                                                                                                                    if (v277 != 1)
                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                      v278 = *((_QWORD *)v98 + 358);
                                                                                                                                                                                                                                                                                                                                      if (v278 != 1)
                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                        *((_QWORD *)v97 + 358) = v278;
                                                                                                                                                                                                                                                                                                                                        swift_bridgeObjectRelease(v277);
                                                                                                                                                                                                                                                                                                                                        v97[2872] = v98[2872];
                                                                                                                                                                                                                                                                                                                                        *((_QWORD *)v97 + 360) = *((_QWORD *)v98 + 360);
                                                                                                                                                                                                                                                                                                                                        v97[2888] = v98[2888];
LABEL_456:
                                                                                                                                                                                                                                                                                                                                        v279 = *((_QWORD *)v97 + 362);
                                                                                                                                                                                                                                                                                                                                        if (v279 != 1)
                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                          v280 = *((_QWORD *)v98 + 362);
                                                                                                                                                                                                                                                                                                                                          if (v280 != 1)
                                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                                            *((_QWORD *)v97 + 362) = v280;
                                                                                                                                                                                                                                                                                                                                            swift_bridgeObjectRelease(v279);
                                                                                                                                                                                                                                                                                                                                            v97[2904] = v98[2904];
                                                                                                                                                                                                                                                                                                                                            *((_QWORD *)v97 + 364) = *((_QWORD *)v98 + 364);
                                                                                                                                                                                                                                                                                                                                            v97[2920] = v98[2920];
LABEL_461:
                                                                                                                                                                                                                                                                                                                                            v281 = *((_QWORD *)v97 + 366);
                                                                                                                                                                                                                                                                                                                                            if (v281 != 1)
                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                              v282 = *((_QWORD *)v98 + 366);
                                                                                                                                                                                                                                                                                                                                              if (v282 != 1)
                                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                                *((_QWORD *)v97 + 366) = v282;
                                                                                                                                                                                                                                                                                                                                                swift_bridgeObjectRelease(v281);
                                                                                                                                                                                                                                                                                                                                                v97[2936] = v98[2936];
                                                                                                                                                                                                                                                                                                                                                *((_QWORD *)v97 + 368) = *((_QWORD *)v98 + 368);
                                                                                                                                                                                                                                                                                                                                                v97[2952] = v98[2952];
LABEL_466:
                                                                                                                                                                                                                                                                                                                                                v283 = *((_QWORD *)v97 + 370);
                                                                                                                                                                                                                                                                                                                                                if (v283 != 1)
                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                  v284 = *((_QWORD *)v98 + 370);
                                                                                                                                                                                                                                                                                                                                                  if (v284 != 1)
                                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                                    *((_QWORD *)v97 + 370) = v284;
                                                                                                                                                                                                                                                                                                                                                    swift_bridgeObjectRelease(v283);
                                                                                                                                                                                                                                                                                                                                                    v97[2968] = v98[2968];
                                                                                                                                                                                                                                                                                                                                                    *((_QWORD *)v97 + 372) = *((_QWORD *)v98 + 372);
                                                                                                                                                                                                                                                                                                                                                    v97[2984] = v98[2984];
LABEL_471:
                                                                                                                                                                                                                                                                                                                                                    v285 = *((_QWORD *)v97 + 374);
                                                                                                                                                                                                                                                                                                                                                    if (v285 != 1)
                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                      v286 = *((_QWORD *)v98 + 374);
                                                                                                                                                                                                                                                                                                                                                      if (v286 != 1)
                                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                                        *((_QWORD *)v97 + 374) = v286;
                                                                                                                                                                                                                                                                                                                                                        swift_bridgeObjectRelease(v285);
                                                                                                                                                                                                                                                                                                                                                        v97[3000] = v98[3000];
                                                                                                                                                                                                                                                                                                                                                        *((_QWORD *)v97 + 376) = *((_QWORD *)v98 + 376);
                                                                                                                                                                                                                                                                                                                                                        v97[3016] = v98[3016];
LABEL_476:
                                                                                                                                                                                                                                                                                                                                                        v287 = *((_QWORD *)v97 + 378);
                                                                                                                                                                                                                                                                                                                                                        if (v287 != 1)
                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                          v288 = *((_QWORD *)v98 + 378);
                                                                                                                                                                                                                                                                                                                                                          if (v288 != 1)
                                                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                                                            *((_QWORD *)v97 + 378) = v288;
                                                                                                                                                                                                                                                                                                                                                            swift_bridgeObjectRelease(v287);
                                                                                                                                                                                                                                                                                                                                                            v97[3032] = v98[3032];
                                                                                                                                                                                                                                                                                                                                                            *((_QWORD *)v97 + 380) = *((_QWORD *)v98 + 380);
                                                                                                                                                                                                                                                                                                                                                            v97[3048] = v98[3048];
LABEL_481:
                                                                                                                                                                                                                                                                                                                                                            v289 = *((_QWORD *)v97 + 382);
                                                                                                                                                                                                                                                                                                                                                            if (v289 != 1)
                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                              v290 = *((_QWORD *)v98 + 382);
                                                                                                                                                                                                                                                                                                                                                              if (v290 != 1)
                                                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                                                *((_QWORD *)v97 + 382) = v290;
                                                                                                                                                                                                                                                                                                                                                                swift_bridgeObjectRelease(v289);
                                                                                                                                                                                                                                                                                                                                                                v97[3064] = v98[3064];
                                                                                                                                                                                                                                                                                                                                                                *((_QWORD *)v97 + 384) = *((_QWORD *)v98 + 384);
                                                                                                                                                                                                                                                                                                                                                                v97[3080] = v98[3080];
LABEL_486:
                                                                                                                                                                                                                                                                                                                                                                v291 = *((_QWORD *)v97 + 386);
                                                                                                                                                                                                                                                                                                                                                                if (v291 != 1)
                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                  v292 = *((_QWORD *)v98 + 386);
                                                                                                                                                                                                                                                                                                                                                                  if (v292 != 1)
                                                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                                                    *((_QWORD *)v97 + 386) = v292;
                                                                                                                                                                                                                                                                                                                                                                    swift_bridgeObjectRelease(v291);
                                                                                                                                                                                                                                                                                                                                                                    v97[3096] = v98[3096];
                                                                                                                                                                                                                                                                                                                                                                    *((_QWORD *)v97 + 388) = *((_QWORD *)v98 + 388);
                                                                                                                                                                                                                                                                                                                                                                    v97[3112] = v98[3112];
LABEL_491:
                                                                                                                                                                                                                                                                                                                                                                    v293 = *((_QWORD *)v97 + 390);
                                                                                                                                                                                                                                                                                                                                                                    if (v293 != 1)
                                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                                      v294 = *((_QWORD *)v98 + 390);
                                                                                                                                                                                                                                                                                                                                                                      if (v294 != 1)
                                                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                                                        *((_QWORD *)v97 + 390) = v294;
                                                                                                                                                                                                                                                                                                                                                                        swift_bridgeObjectRelease(v293);
                                                                                                                                                                                                                                                                                                                                                                        v97[3128] = v98[3128];
                                                                                                                                                                                                                                                                                                                                                                        *((_QWORD *)v97 + 392) = *((_QWORD *)v98 + 392);
                                                                                                                                                                                                                                                                                                                                                                        v97[3144] = v98[3144];
LABEL_496:
                                                                                                                                                                                                                                                                                                                                                                        v295 = *((_QWORD *)v97 + 394);
                                                                                                                                                                                                                                                                                                                                                                        if (v295 != 1)
                                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                                          v296 = *((_QWORD *)v98 + 394);
                                                                                                                                                                                                                                                                                                                                                                          if (v296 != 1)
                                                                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                                                                            *((_QWORD *)v97 + 394) = v296;
                                                                                                                                                                                                                                                                                                                                                                            swift_bridgeObjectRelease(v295);
                                                                                                                                                                                                                                                                                                                                                                            v97[3160] = v98[3160];
                                                                                                                                                                                                                                                                                                                                                                            *((_QWORD *)v97 + 396) = *((_QWORD *)v98 + 396);
                                                                                                                                                                                                                                                                                                                                                                            v97[3176] = v98[3176];
LABEL_501:
                                                                                                                                                                                                                                                                                                                                                                            v297 = *((_QWORD *)v97 + 398);
                                                                                                                                                                                                                                                                                                                                                                            if (v297 != 1)
                                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                                              v298 = *((_QWORD *)v98 + 398);
                                                                                                                                                                                                                                                                                                                                                                              if (v298 != 1)
                                                                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                                                                *((_QWORD *)v97 + 398) = v298;
                                                                                                                                                                                                                                                                                                                                                                                swift_bridgeObjectRelease(v297);
                                                                                                                                                                                                                                                                                                                                                                                v97[3192] = v98[3192];
                                                                                                                                                                                                                                                                                                                                                                                *((_QWORD *)v97 + 400) = *((_QWORD *)v98 + 400);
                                                                                                                                                                                                                                                                                                                                                                                v97[3208] = v98[3208];
LABEL_506:
                                                                                                                                                                                                                                                                                                                                                                                v299 = *((_QWORD *)v97 + 402);
                                                                                                                                                                                                                                                                                                                                                                                if (v299 != 1)
                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                  v300 = *((_QWORD *)v98 + 402);
                                                                                                                                                                                                                                                                                                                                                                                  if (v300 != 1)
                                                                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                                                                    *((_QWORD *)v97 + 402) = v300;
                                                                                                                                                                                                                                                                                                                                                                                    swift_bridgeObjectRelease(v299);
                                                                                                                                                                                                                                                                                                                                                                                    v97[3224] = v98[3224];
                                                                                                                                                                                                                                                                                                                                                                                    *((_QWORD *)v97 + 404) = *((_QWORD *)v98 + 404);
                                                                                                                                                                                                                                                                                                                                                                                    v97[3240] = v98[3240];
LABEL_511:
                                                                                                                                                                                                                                                                                                                                                                                    v301 = *((_QWORD *)v97 + 406);
                                                                                                                                                                                                                                                                                                                                                                                    if (v301 != 1)
                                                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                                                      v302 = *((_QWORD *)v98 + 406);
                                                                                                                                                                                                                                                                                                                                                                                      if (v302 != 1)
                                                                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                                                                        *((_QWORD *)v97 + 406) = v302;
                                                                                                                                                                                                                                                                                                                                                                                        swift_bridgeObjectRelease(v301);
                                                                                                                                                                                                                                                                                                                                                                                        v97[3256] = v98[3256];
                                                                                                                                                                                                                                                                                                                                                                                        *((_QWORD *)v97 + 408) = *((_QWORD *)v98 + 408);
                                                                                                                                                                                                                                                                                                                                                                                        v97[3272] = v98[3272];
                                                                                                                                                                                                                                                                                                                                                                                        goto LABEL_516;
                                                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                                                      sub_100083F00((_QWORD *)v97 + 406);
                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                    *((_OWORD *)v97 + 203) = *((_OWORD *)v98 + 203);
                                                                                                                                                                                                                                                                                                                                                                                    *(_OWORD *)(v97 + 3257) = *(_OWORD *)(v98 + 3257);
LABEL_516:
                                                                                                                                                                                                                                                                                                                                                                                    *((_OWORD *)v97 + 205) = *((_OWORD *)v98 + 205);
                                                                                                                                                                                                                                                                                                                                                                                    v97[3296] = v98[3296];
                                                                                                                                                                                                                                                                                                                                                                                    v97[3320] = v98[3320];
                                                                                                                                                                                                                                                                                                                                                                                    *(_OWORD *)(v97 + 3304) = *(_OWORD *)(v98 + 3304);
                                                                                                                                                                                                                                                                                                                                                                                    *(_DWORD *)(v97 + 3321) = *(_DWORD *)(v98 + 3321);
                                                                                                                                                                                                                                                                                                                                                                                    *(_WORD *)(v97 + 3325) = *(_WORD *)(v98 + 3325);
                                                                                                                                                                                                                                                                                                                                                                                    v97[3327] = v98[3327];
                                                                                                                                                                                                                                                                                                                                                                                    v303 = *((_QWORD *)v97 + 416);
                                                                                                                                                                                                                                                                                                                                                                                    *((_QWORD *)v97 + 416) = *((_QWORD *)v98 + 416);
                                                                                                                                                                                                                                                                                                                                                                                    swift_bridgeObjectRelease(v303);
                                                                                                                                                                                                                                                                                                                                                                                    v304 = *((_QWORD *)v97 + 417);
                                                                                                                                                                                                                                                                                                                                                                                    *((_QWORD *)v97 + 417) = *((_QWORD *)v98 + 417);
                                                                                                                                                                                                                                                                                                                                                                                    swift_bridgeObjectRelease(v304);
LABEL_517:
                                                                                                                                                                                                                                                                                                                                                                                    v305 = (uint64_t *)(v97 + 3344);
                                                                                                                                                                                                                                                                                                                                                                                    v306 = v98 + 3344;
                                                                                                                                                                                                                                                                                                                                                                                    if (*((_QWORD *)v97 + 520) == 1)
                                                                                                                                                                                                                                                                                                                                                                                    {
LABEL_520:
                                                                                                                                                                                                                                                                                                                                                                                      memcpy(v97 + 3344, v98 + 3344, 0x340uLL);
                                                                                                                                                                                                                                                                                                                                                                                      goto LABEL_642;
                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                    if (*((_QWORD *)v98 + 520) == 1)
                                                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                                                      sub_100083F28((uint64_t *)v97 + 418);
                                                                                                                                                                                                                                                                                                                                                                                      goto LABEL_520;
                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                    v307 = *v305;
                                                                                                                                                                                                                                                                                                                                                                                    if (*v305 != 1)
                                                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                                                      if (*v306 != 1)
                                                                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                                                                        *((_QWORD *)v97 + 418) = *v306;
                                                                                                                                                                                                                                                                                                                                                                                        swift_bridgeObjectRelease(v307);
                                                                                                                                                                                                                                                                                                                                                                                        v97[3352] = v98[3352];
                                                                                                                                                                                                                                                                                                                                                                                        *((_QWORD *)v97 + 420) = *((_QWORD *)v98 + 420);
                                                                                                                                                                                                                                                                                                                                                                                        v97[3368] = v98[3368];
LABEL_526:
                                                                                                                                                                                                                                                                                                                                                                                        v308 = *((_QWORD *)v97 + 422);
                                                                                                                                                                                                                                                                                                                                                                                        if (v308 != 1)
                                                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                                                          v309 = *((_QWORD *)v98 + 422);
                                                                                                                                                                                                                                                                                                                                                                                          if (v309 != 1)
                                                                                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                                                                                            *((_QWORD *)v97 + 422) = v309;
                                                                                                                                                                                                                                                                                                                                                                                            swift_bridgeObjectRelease(v308);
                                                                                                                                                                                                                                                                                                                                                                                            v97[3384] = v98[3384];
                                                                                                                                                                                                                                                                                                                                                                                            *((_QWORD *)v97 + 424) = *((_QWORD *)v98 + 424);
                                                                                                                                                                                                                                                                                                                                                                                            v97[3400] = v98[3400];
LABEL_531:
                                                                                                                                                                                                                                                                                                                                                                                            v310 = *((_QWORD *)v97 + 426);
                                                                                                                                                                                                                                                                                                                                                                                            if (v310 != 1)
                                                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                                                              v311 = *((_QWORD *)v98 + 426);
                                                                                                                                                                                                                                                                                                                                                                                              if (v311 != 1)
                                                                                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                                                                                *((_QWORD *)v97 + 426) = v311;
                                                                                                                                                                                                                                                                                                                                                                                                swift_bridgeObjectRelease(v310);
                                                                                                                                                                                                                                                                                                                                                                                                v97[3416] = v98[3416];
                                                                                                                                                                                                                                                                                                                                                                                                *((_QWORD *)v97 + 428) = *((_QWORD *)v98 + 428);
                                                                                                                                                                                                                                                                                                                                                                                                v97[3432] = v98[3432];
LABEL_536:
                                                                                                                                                                                                                                                                                                                                                                                                v312 = *((_QWORD *)v97 + 430);
                                                                                                                                                                                                                                                                                                                                                                                                if (v312 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                                  v313 = *((_QWORD *)v98 + 430);
                                                                                                                                                                                                                                                                                                                                                                                                  if (v313 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                                                                                    *((_QWORD *)v97 + 430) = v313;
                                                                                                                                                                                                                                                                                                                                                                                                    swift_bridgeObjectRelease(v312);
                                                                                                                                                                                                                                                                                                                                                                                                    v97[3448] = v98[3448];
                                                                                                                                                                                                                                                                                                                                                                                                    *((_QWORD *)v97 + 432) = *((_QWORD *)v98 + 432);
                                                                                                                                                                                                                                                                                                                                                                                                    v97[3464] = v98[3464];
LABEL_541:
                                                                                                                                                                                                                                                                                                                                                                                                    v314 = *((_QWORD *)v97 + 434);
                                                                                                                                                                                                                                                                                                                                                                                                    if (v314 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                                                                      v315 = *((_QWORD *)v98 + 434);
                                                                                                                                                                                                                                                                                                                                                                                                      if (v315 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                                                                                        *((_QWORD *)v97 + 434) = v315;
                                                                                                                                                                                                                                                                                                                                                                                                        swift_bridgeObjectRelease(v314);
                                                                                                                                                                                                                                                                                                                                                                                                        v97[3480] = v98[3480];
                                                                                                                                                                                                                                                                                                                                                                                                        *((_QWORD *)v97 + 436) = *((_QWORD *)v98 + 436);
                                                                                                                                                                                                                                                                                                                                                                                                        v97[3496] = v98[3496];
LABEL_546:
                                                                                                                                                                                                                                                                                                                                                                                                        v316 = *((_QWORD *)v97 + 438);
                                                                                                                                                                                                                                                                                                                                                                                                        if (v316 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                                                                          v317 = *((_QWORD *)v98 + 438);
                                                                                                                                                                                                                                                                                                                                                                                                          if (v317 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                                                                                                            *((_QWORD *)v97 + 438) = v317;
                                                                                                                                                                                                                                                                                                                                                                                                            swift_bridgeObjectRelease(v316);
                                                                                                                                                                                                                                                                                                                                                                                                            v97[3512] = v98[3512];
                                                                                                                                                                                                                                                                                                                                                                                                            *((_QWORD *)v97 + 440) = *((_QWORD *)v98 + 440);
                                                                                                                                                                                                                                                                                                                                                                                                            v97[3528] = v98[3528];
LABEL_551:
                                                                                                                                                                                                                                                                                                                                                                                                            v318 = *((_QWORD *)v97 + 442);
                                                                                                                                                                                                                                                                                                                                                                                                            if (v318 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                                                                              v319 = *((_QWORD *)v98 + 442);
                                                                                                                                                                                                                                                                                                                                                                                                              if (v319 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                                                                                                *((_QWORD *)v97 + 442) = v319;
                                                                                                                                                                                                                                                                                                                                                                                                                swift_bridgeObjectRelease(v318);
                                                                                                                                                                                                                                                                                                                                                                                                                v97[3544] = v98[3544];
                                                                                                                                                                                                                                                                                                                                                                                                                *((_QWORD *)v97 + 444) = *((_QWORD *)v98 + 444);
                                                                                                                                                                                                                                                                                                                                                                                                                v97[3560] = v98[3560];
LABEL_556:
                                                                                                                                                                                                                                                                                                                                                                                                                v320 = *((_QWORD *)v97 + 446);
                                                                                                                                                                                                                                                                                                                                                                                                                if (v320 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                                                  v321 = *((_QWORD *)v98 + 446);
                                                                                                                                                                                                                                                                                                                                                                                                                  if (v321 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                                                                                                    *((_QWORD *)v97 + 446) = v321;
                                                                                                                                                                                                                                                                                                                                                                                                                    swift_bridgeObjectRelease(v320);
                                                                                                                                                                                                                                                                                                                                                                                                                    v97[3576] = v98[3576];
                                                                                                                                                                                                                                                                                                                                                                                                                    *((_QWORD *)v97 + 448) = *((_QWORD *)v98 + 448);
                                                                                                                                                                                                                                                                                                                                                                                                                    v97[3592] = v98[3592];
LABEL_561:
                                                                                                                                                                                                                                                                                                                                                                                                                    v322 = *((_QWORD *)v97 + 450);
                                                                                                                                                                                                                                                                                                                                                                                                                    if (v322 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                                                                                      v323 = *((_QWORD *)v98 + 450);
                                                                                                                                                                                                                                                                                                                                                                                                                      if (v323 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                                                                                                        *((_QWORD *)v97 + 450) = v323;
                                                                                                                                                                                                                                                                                                                                                                                                                        swift_bridgeObjectRelease(v322);
                                                                                                                                                                                                                                                                                                                                                                                                                        v97[3608] = v98[3608];
                                                                                                                                                                                                                                                                                                                                                                                                                        *((_QWORD *)v97 + 452) = *((_QWORD *)v98 + 452);
                                                                                                                                                                                                                                                                                                                                                                                                                        v97[3624] = v98[3624];
LABEL_566:
                                                                                                                                                                                                                                                                                                                                                                                                                        v324 = *((_QWORD *)v97 + 454);
                                                                                                                                                                                                                                                                                                                                                                                                                        if (v324 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                                                                                          v325 = *((_QWORD *)v98 + 454);
                                                                                                                                                                                                                                                                                                                                                                                                                          if (v325 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                                                                                                                            *((_QWORD *)v97 + 454) = v325;
                                                                                                                                                                                                                                                                                                                                                                                                                            swift_bridgeObjectRelease(v324);
                                                                                                                                                                                                                                                                                                                                                                                                                            v97[3640] = v98[3640];
                                                                                                                                                                                                                                                                                                                                                                                                                            *((_QWORD *)v97 + 456) = *((_QWORD *)v98 + 456);
                                                                                                                                                                                                                                                                                                                                                                                                                            v97[3656] = v98[3656];
LABEL_571:
                                                                                                                                                                                                                                                                                                                                                                                                                            v326 = *((_QWORD *)v97 + 458);
                                                                                                                                                                                                                                                                                                                                                                                                                            if (v326 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                                                                                              v327 = *((_QWORD *)v98 + 458);
                                                                                                                                                                                                                                                                                                                                                                                                                              if (v327 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                                                                                                                *((_QWORD *)v97 + 458) = v327;
                                                                                                                                                                                                                                                                                                                                                                                                                                swift_bridgeObjectRelease(v326);
                                                                                                                                                                                                                                                                                                                                                                                                                                v97[3672] = v98[3672];
                                                                                                                                                                                                                                                                                                                                                                                                                                *((_QWORD *)v97 + 460) = *((_QWORD *)v98 + 460);
                                                                                                                                                                                                                                                                                                                                                                                                                                v97[3688] = v98[3688];
LABEL_576:
                                                                                                                                                                                                                                                                                                                                                                                                                                v328 = *((_QWORD *)v97 + 462);
                                                                                                                                                                                                                                                                                                                                                                                                                                if (v328 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                                                                  v329 = *((_QWORD *)v98 + 462);
                                                                                                                                                                                                                                                                                                                                                                                                                                  if (v329 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                                                                                                                    *((_QWORD *)v97 + 462) = v329;
                                                                                                                                                                                                                                                                                                                                                                                                                                    swift_bridgeObjectRelease(v328);
                                                                                                                                                                                                                                                                                                                                                                                                                                    v97[3704] = v98[3704];
                                                                                                                                                                                                                                                                                                                                                                                                                                    *((_QWORD *)v97 + 464) = *((_QWORD *)v98 + 464);
                                                                                                                                                                                                                                                                                                                                                                                                                                    v97[3720] = v98[3720];
LABEL_581:
                                                                                                                                                                                                                                                                                                                                                                                                                                    v330 = *((_QWORD *)v97 + 466);
                                                                                                                                                                                                                                                                                                                                                                                                                                    if (v330 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                                                                                                      v331 = *((_QWORD *)v98 + 466);
                                                                                                                                                                                                                                                                                                                                                                                                                                      if (v331 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                                                                                                                        *((_QWORD *)v97 + 466) = v331;
                                                                                                                                                                                                                                                                                                                                                                                                                                        swift_bridgeObjectRelease(v330);
                                                                                                                                                                                                                                                                                                                                                                                                                                        v97[3736] = v98[3736];
                                                                                                                                                                                                                                                                                                                                                                                                                                        *((_QWORD *)v97 + 468) = *((_QWORD *)v98 + 468);
                                                                                                                                                                                                                                                                                                                                                                                                                                        v97[3752] = v98[3752];
LABEL_586:
                                                                                                                                                                                                                                                                                                                                                                                                                                        v332 = *((_QWORD *)v97 + 470);
                                                                                                                                                                                                                                                                                                                                                                                                                                        if (v332 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                                                                                                          v333 = *((_QWORD *)v98 + 470);
                                                                                                                                                                                                                                                                                                                                                                                                                                          if (v333 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                                                                                                                                            *((_QWORD *)v97 + 470) = v333;
                                                                                                                                                                                                                                                                                                                                                                                                                                            swift_bridgeObjectRelease(v332);
                                                                                                                                                                                                                                                                                                                                                                                                                                            v97[3768] = v98[3768];
                                                                                                                                                                                                                                                                                                                                                                                                                                            *((_QWORD *)v97 + 472) = *((_QWORD *)v98 + 472);
                                                                                                                                                                                                                                                                                                                                                                                                                                            v97[3784] = v98[3784];
LABEL_591:
                                                                                                                                                                                                                                                                                                                                                                                                                                            v334 = *((_QWORD *)v97 + 474);
                                                                                                                                                                                                                                                                                                                                                                                                                                            if (v334 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                                                                                                              v335 = *((_QWORD *)v98 + 474);
                                                                                                                                                                                                                                                                                                                                                                                                                                              if (v335 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                                                                                                                                *((_QWORD *)v97 + 474) = v335;
                                                                                                                                                                                                                                                                                                                                                                                                                                                swift_bridgeObjectRelease(v334);
                                                                                                                                                                                                                                                                                                                                                                                                                                                v97[3800] = v98[3800];
                                                                                                                                                                                                                                                                                                                                                                                                                                                *((_QWORD *)v97 + 476) = *((_QWORD *)v98 + 476);
                                                                                                                                                                                                                                                                                                                                                                                                                                                v97[3816] = v98[3816];
LABEL_596:
                                                                                                                                                                                                                                                                                                                                                                                                                                                v336 = *((_QWORD *)v97 + 478);
                                                                                                                                                                                                                                                                                                                                                                                                                                                if (v336 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                                                                                  v337 = *((_QWORD *)v98 + 478);
                                                                                                                                                                                                                                                                                                                                                                                                                                                  if (v337 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                                                                                                                                    *((_QWORD *)v97 + 478) = v337;
                                                                                                                                                                                                                                                                                                                                                                                                                                                    swift_bridgeObjectRelease(v336);
                                                                                                                                                                                                                                                                                                                                                                                                                                                    v97[3832] = v98[3832];
                                                                                                                                                                                                                                                                                                                                                                                                                                                    *((_QWORD *)v97 + 480) = *((_QWORD *)v98 + 480);
                                                                                                                                                                                                                                                                                                                                                                                                                                                    v97[3848] = v98[3848];
LABEL_601:
                                                                                                                                                                                                                                                                                                                                                                                                                                                    v338 = *((_QWORD *)v97 + 482);
                                                                                                                                                                                                                                                                                                                                                                                                                                                    if (v338 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                                                                                                                      v339 = *((_QWORD *)v98 + 482);
                                                                                                                                                                                                                                                                                                                                                                                                                                                      if (v339 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                                                                                                                                        *((_QWORD *)v97 + 482) = v339;
                                                                                                                                                                                                                                                                                                                                                                                                                                                        swift_bridgeObjectRelease(v338);
                                                                                                                                                                                                                                                                                                                                                                                                                                                        v97[3864] = v98[3864];
                                                                                                                                                                                                                                                                                                                                                                                                                                                        *((_QWORD *)v97 + 484) = *((_QWORD *)v98 + 484);
                                                                                                                                                                                                                                                                                                                                                                                                                                                        v97[3880] = v98[3880];
LABEL_606:
                                                                                                                                                                                                                                                                                                                                                                                                                                                        v340 = *((_QWORD *)v97 + 486);
                                                                                                                                                                                                                                                                                                                                                                                                                                                        if (v340 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                                                                                                                          v341 = *((_QWORD *)v98 + 486);
                                                                                                                                                                                                                                                                                                                                                                                                                                                          if (v341 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                                                                                                                                                            *((_QWORD *)v97 + 486) = v341;
                                                                                                                                                                                                                                                                                                                                                                                                                                                            swift_bridgeObjectRelease(v340);
                                                                                                                                                                                                                                                                                                                                                                                                                                                            v97[3896] = v98[3896];
                                                                                                                                                                                                                                                                                                                                                                                                                                                            *((_QWORD *)v97 + 488) = *((_QWORD *)v98 + 488);
                                                                                                                                                                                                                                                                                                                                                                                                                                                            v97[3912] = v98[3912];
LABEL_611:
                                                                                                                                                                                                                                                                                                                                                                                                                                                            v342 = *((_QWORD *)v97 + 490);
                                                                                                                                                                                                                                                                                                                                                                                                                                                            if (v342 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                                                                                                                              v343 = *((_QWORD *)v98 + 490);
                                                                                                                                                                                                                                                                                                                                                                                                                                                              if (v343 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                *((_QWORD *)v97 + 490) = v343;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                swift_bridgeObjectRelease(v342);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                v97[3928] = v98[3928];
                                                                                                                                                                                                                                                                                                                                                                                                                                                                *((_QWORD *)v97 + 492) = *((_QWORD *)v98 + 492);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                v97[3944] = v98[3944];
LABEL_616:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                v344 = *((_QWORD *)v97 + 494);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                if (v344 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                  v345 = *((_QWORD *)v98 + 494);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                  if (v345 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    *((_QWORD *)v97 + 494) = v345;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    swift_bridgeObjectRelease(v344);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    v97[3960] = v98[3960];
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    *((_QWORD *)v97 + 496) = *((_QWORD *)v98 + 496);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    v97[3976] = v98[3976];
LABEL_621:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    v346 = *((_QWORD *)v97 + 498);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    if (v346 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      v347 = *((_QWORD *)v98 + 498);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      if (v347 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        *((_QWORD *)v97 + 498) = v347;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        swift_bridgeObjectRelease(v346);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        v97[3992] = v98[3992];
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        *((_QWORD *)v97 + 500) = *((_QWORD *)v98 + 500);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        v97[4008] = v98[4008];
LABEL_626:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        v348 = *((_QWORD *)v97 + 502);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        if (v348 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          v349 = *((_QWORD *)v98 + 502);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          if (v349 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *((_QWORD *)v97 + 502) = v349;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            swift_bridgeObjectRelease(v348);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            v97[4024] = v98[4024];
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *((_QWORD *)v97 + 504) = *((_QWORD *)v98 + 504);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            v97[4040] = v98[4040];
LABEL_631:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            v350 = *((_QWORD *)v97 + 506);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            if (v350 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                              v351 = *((_QWORD *)v98 + 506);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                              if (v351 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *((_QWORD *)v97 + 506) = v351;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                swift_bridgeObjectRelease(v350);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                v97[4056] = v98[4056];
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *((_QWORD *)v97 + 508) = *((_QWORD *)v98 + 508);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                v97[4072] = v98[4072];
LABEL_636:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                v352 = *((_QWORD *)v97 + 510);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                if (v352 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  v353 = *((_QWORD *)v98 + 510);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  if (v353 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    *((_QWORD *)v97 + 510) = v353;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    swift_bridgeObjectRelease(v352);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    v97[4088] = v98[4088];
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    v97[4104] = v98[4104];
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    *((_QWORD *)v97 + 512) = *((_QWORD *)v98 + 512);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    goto LABEL_641;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  sub_100083F00((_QWORD *)v97 + 510);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *((_OWORD *)v97 + 255) = *((_OWORD *)v98 + 255);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *(_OWORD *)(v97 + 4089) = *(_OWORD *)(v98 + 4089);
LABEL_641:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *((_OWORD *)v97 + 257) = *((_OWORD *)v98 + 257);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                v97[4128] = v98[4128];
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *(_OWORD *)(v97 + 4136) = *(_OWORD *)(v98 + 4136);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                v97[4152] = v98[4152];
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *(_DWORD *)(v97 + 4153) = *(_DWORD *)(v98 + 4153);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *(_WORD *)(v97 + 4157) = *(_WORD *)(v98 + 4157);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                v97[4159] = v98[4159];
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                v354 = *((_QWORD *)v97 + 520);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *((_QWORD *)v97 + 520) = *((_QWORD *)v98 + 520);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                swift_bridgeObjectRelease(v354);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                v355 = *((_QWORD *)v97 + 521);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *((_QWORD *)v97 + 521) = *((_QWORD *)v98 + 521);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                swift_bridgeObjectRelease(v355);
LABEL_642:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                v356 = (uint64_t *)(v97 + 4176);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                v357 = v98 + 4176;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                if (*((_QWORD *)v97 + 624) == 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                {
LABEL_645:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  memcpy(v97 + 4176, v98 + 4176, 0x340uLL);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  goto LABEL_767;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                if (*((_QWORD *)v98 + 624) == 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  sub_100083F28((uint64_t *)v97 + 522);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  goto LABEL_645;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                v358 = *v356;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                if (*v356 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  if (*v357 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    *((_QWORD *)v97 + 522) = *v357;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    swift_bridgeObjectRelease(v358);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    v97[4184] = v98[4184];
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    *((_QWORD *)v97 + 524) = *((_QWORD *)v98 + 524);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    v97[4200] = v98[4200];
LABEL_651:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    v359 = *((_QWORD *)v97 + 526);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    if (v359 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      v360 = *((_QWORD *)v98 + 526);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      if (v360 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        *((_QWORD *)v97 + 526) = v360;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        swift_bridgeObjectRelease(v359);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        v97[4216] = v98[4216];
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        *((_QWORD *)v97 + 528) = *((_QWORD *)v98 + 528);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        v97[4232] = v98[4232];
LABEL_656:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        v361 = *((_QWORD *)v97 + 530);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        if (v361 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          v362 = *((_QWORD *)v98 + 530);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          if (v362 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *((_QWORD *)v97 + 530) = v362;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            swift_bridgeObjectRelease(v361);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            v97[4248] = v98[4248];
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *((_QWORD *)v97 + 532) = *((_QWORD *)v98 + 532);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            v97[4264] = v98[4264];
LABEL_661:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            v363 = *((_QWORD *)v97 + 534);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            if (v363 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              v364 = *((_QWORD *)v98 + 534);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              if (v364 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *((_QWORD *)v97 + 534) = v364;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                swift_bridgeObjectRelease(v363);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                v97[4280] = v98[4280];
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *((_QWORD *)v97 + 536) = *((_QWORD *)v98 + 536);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                v97[4296] = v98[4296];
LABEL_666:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                v365 = *((_QWORD *)v97 + 538);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                if (v365 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  v366 = *((_QWORD *)v98 + 538);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  if (v366 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    *((_QWORD *)v97 + 538) = v366;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    swift_bridgeObjectRelease(v365);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    v97[4312] = v98[4312];
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    *((_QWORD *)v97 + 540) = *((_QWORD *)v98 + 540);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    v97[4328] = v98[4328];
LABEL_671:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    v367 = *((_QWORD *)v97 + 542);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    if (v367 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      v368 = *((_QWORD *)v98 + 542);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      if (v368 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      {
v97 + 542) = v368;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        swift_bridgeObjectRelease(v367);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        v97[4344] = v98[4344];
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        *((_QWORD *)v97 + 544) = *((_QWORD *)v98 + 544);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        v97[4360] = v98[4360];
LABEL_676:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        v369 = *((_QWORD *)v97 + 546);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        if (v369 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          v370 = *((_QWORD *)v98 + 546);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          if (v370 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          {
v97 + 546) = v370;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            swift_bridgeObjectRelease(v369);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            v97[4376] = v98[4376];
v97 + 548) = *((_QWORD *)v98 + 548);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            v97[4392] = v98[4392];
LABEL_681:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            v371 = *((_QWORD *)v97 + 550);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            if (v371 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              v372 = *((_QWORD *)v98 + 550);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              if (v372 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              {
v97 + 550) = v372;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                swift_bridgeObjectRelease(v371);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                v97[4408] = v98[4408];
v97 + 552) = *((_QWORD *)v98 + 552);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                v97[4424] = v98[4424];
LABEL_686:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                v373 = *((_QWORD *)v97 + 554);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                if (v373 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  v374 = *((_QWORD *)v98 + 554);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  if (v374 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  {
v97 + 554) = v374;
swift_bridgeObjectRelease(v373);
v97[4440] = v98[4440];
v97 + 556) = *((_QWORD *)v98 + 556);
v97[4456] = v98[4456];
LABEL_691:
v375 = *((_QWORD *)v97 + 558);
if (v375 != 1)
{
v376 = *((_QWORD *)v98 + 558);
if (v376 != 1)
{
v97 + 558) = v376;
swift_bridgeObjectRelease(v375);
v97[4472] = v98[4472];
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        *((_QWORD *)v97 + 560) = *((_QWORD *)v98 + 560);
v97[4488] = v98[4488];
LABEL_696:
v377 = *((_QWORD *)v97 + 562);
if (v377 != 1)
{
v378 = *((_QWORD *)v98 + 562);
if (v378 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          {
v97 + 562) = v378;
swift_bridgeObjectRelease(v377);
v97[4504] = v98[4504];
v97 + 564) = *((_QWORD *)v98 + 564);
v97[4520] = v98[4520];
LABEL_701:
v379 = *((_QWORD *)v97 + 566);
if (v379 != 1)
{
v380 = *((_QWORD *)v98 + 566);
if (v380 != 1)
{
v97 + 566) = v380;
swift_bridgeObjectRelease(v379);
v97[4536] = v98[4536];
v97 + 568) = *((_QWORD *)v98 + 568);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                v97[4552] = v98[4552];
LABEL_706:
v381 = *((_QWORD *)v97 + 570);
if (v381 != 1)
{
v382 = *((_QWORD *)v98 + 570);
if (v382 != 1)
{
v97 + 570) = v382;
swift_bridgeObjectRelease(v381);
v97[4568] = v98[4568];
v97 + 572) = *((_QWORD *)v98 + 572);
v97[4584] = v98[4584];
LABEL_711:
v383 = *((_QWORD *)v97 + 574);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    if (v383 != 1)
{
v384 = *((_QWORD *)v98 + 574);
if (v384 != 1)
{
v97 + 574) = v384;
swift_bridgeObjectRelease(v383);
v97[4600] = v98[4600];
v97 + 576) = *((_QWORD *)v98 + 576);
v97[4616] = v98[4616];
LABEL_716:
v385 = *((_QWORD *)v97 + 578);
if (v385 != 1)
{
v386 = *((_QWORD *)v98 + 578);
if (v386 != 1)
{
v97 + 578) = v386;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            swift_bridgeObjectRelease(v385);
v97[4632] = v98[4632];
v97 + 580) = *((_QWORD *)v98 + 580);
v97[4648] = v98[4648];
LABEL_721:
v387 = *((_QWORD *)v97 + 582);
if (v387 != 1)
{
v388 = *((_QWORD *)v98 + 582);
if (v388 != 1)
{
v97 + 582) = v388;
swift_bridgeObjectRelease(v387);
v97[4664] = v98[4664];
v97 + 584) = *((_QWORD *)v98 + 584);
v97[4680] = v98[4680];
LABEL_726:
v389 = *((_QWORD *)v97 + 586);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                if (v389 != 1)
{
v390 = *((_QWORD *)v98 + 586);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  if (v390 != 1)
{
v97 + 586) = v390;
swift_bridgeObjectRelease(v389);
v97[4696] = v98[4696];
v97 + 588) = *((_QWORD *)v98 + 588);
v97[4712] = v98[4712];
LABEL_731:
v391 = *((_QWORD *)v97 + 590);
if (v391 != 1)
{
v392 = *((_QWORD *)v98 + 590);
if (v392 != 1)
{
v97 + 590) = v392;
swift_bridgeObjectRelease(v391);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        v97[4728] = v98[4728];
v97 + 592) = *((_QWORD *)v98 + 592);
v97[4744] = v98[4744];
LABEL_736:
v393 = *((_QWORD *)v97 + 594);
if (v393 != 1)
{
v394 = *((_QWORD *)v98 + 594);
if (v394 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          {
v97 + 594) = v394;
swift_bridgeObjectRelease(v393);
v97[4760] = v98[4760];
v97 + 596) = *((_QWORD *)v98 + 596);
v97[4776] = v98[4776];
LABEL_741:
v395 = *((_QWORD *)v97 + 598);
if (v395 != 1)
{
v396 = *((_QWORD *)v98 + 598);
if (v396 != 1)
{
v97 + 598) = v396;
swift_bridgeObjectRelease(v395);
v97[4792] = v98[4792];
v97 + 600) = *((_QWORD *)v98 + 600);
v97[4808] = v98[4808];
LABEL_746:
v397 = *((_QWORD *)v97 + 602);
if (v397 != 1)
{
v398 = *((_QWORD *)v98 + 602);
if (v398 != 1)
{
v97 + 602) = v398;
swift_bridgeObjectRelease(v397);
v97[4824] = v98[4824];
v97 + 604) = *((_QWORD *)v98 + 604);
v97[4840] = v98[4840];
LABEL_751:
v399 = *((_QWORD *)v97 + 606);
if (v399 != 1)
{
v400 = *((_QWORD *)v98 + 606);
if (v400 != 1)
{
v97 + 606) = v400;
swift_bridgeObjectRelease(v399);
v97[4856] = v98[4856];
v97 + 608) = *((_QWORD *)v98 + 608);
v97[4872] = v98[4872];
LABEL_756:
v401 = *((_QWORD *)v97 + 610);
if (v401 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        {
v402 = *((_QWORD *)v98 + 610);
if (v402 != 1)
{
v97 + 610) = v402;
swift_bridgeObjectRelease(v401);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            v97[4888] = v98[4888];
v97 + 612) = *((_QWORD *)v98 + 612);
v97[4904] = v98[4904];
LABEL_761:
v403 = *((_QWORD *)v97 + 614);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            if (v403 != 1)
{
v404 = *((_QWORD *)v98 + 614);
if (v404 != 1)
{
v97 + 614) = v404;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                swift_bridgeObjectRelease(v403);
v97[4920] = v98[4920];
v97 + 616) = *((_QWORD *)v98 + 616);
v97[4936] = v98[4936];
goto LABEL_766;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              }
sub_100083F00((_QWORD *)v97 + 614);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            }
v97 + 307) = *((_OWORD *)v98 + 307);
v97 + 4921) = *(_OWORD *)(v98 + 4921);
LABEL_766:
v97 + 309) = *((_OWORD *)v98 + 309);
v97[4960] = v98[4960];
v97 + 4968) = *(_OWORD *)(v98 + 4968);
v97[4984] = v98[4984];
v97 + 4985) = *(_DWORD *)(v98 + 4985);
v97 + 4989) = *(_WORD *)(v98 + 4989);
v97[4991] = v98[4991];
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            v405 = *((_QWORD *)v97 + 624);
v97 + 624) = *((_QWORD *)v98 + 624);
swift_bridgeObjectRelease(v405);
v406 = *((_QWORD *)v97 + 625);
v97 + 625) = *((_QWORD *)v98 + 625);
swift_bridgeObjectRelease(v406);
LABEL_767:
v407 = (uint64_t *)(v97 + 5008);
v408 = v98 + 5008;
if (*((_QWORD *)v97 + 728) == 1)
{
LABEL_770:
memcpy(v97 + 5008, v98 + 5008, 0x340uLL);
LABEL_892:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              v458 = *((_QWORD *)v97 + 730);
v97 + 730) = *((_QWORD *)v98 + 730);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              swift_bridgeObjectRelease(v458);
v97 + 1462) = *((_DWORD *)v98 + 1462);
v97[5852] = v98[5852];
v97 + 732) = *((_QWORD *)v98 + 732);
v97[5864] = v98[5864];
v97 + 734) = *((_QWORD *)v98 + 734);
v97[5880] = v98[5880];
v97[5896] = v98[5896];
v97 + 736) = *((_QWORD *)v98 + 736);
v459 = *((_QWORD *)v98 + 738);
v97[5912] = v98[5912];
v97 + 738) = v459;
goto LABEL_893;
}
if (*((_QWORD *)v98 + 728) == 1)
{
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              sub_100083F28((uint64_t *)v97 + 626);
goto LABEL_770;
}
v409 = *v407;
if (*v407 != 1)
{
if (*v408 != 1)
{
v97 + 626) = *v408;
swift_bridgeObjectRelease(v409);
v97[5016] = v98[5016];
v97 + 628) = *((_QWORD *)v98 + 628);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                v97[5032] = v98[5032];
LABEL_776:
v410 = *((_QWORD *)v97 + 630);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                if (v410 != 1)
{
v411 = *((_QWORD *)v98 + 630);
if (v411 != 1)
{
v97 + 630) = v411;
swift_bridgeObjectRelease(v410);
v97[5048] = v98[5048];
v97 + 632) = *((_QWORD *)v98 + 632);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    v97[5064] = v98[5064];
LABEL_781:
v412 = *((_QWORD *)v97 + 634);
if (v412 != 1)
{
v413 = *((_QWORD *)v98 + 634);
if (v413 != 1)
{
v97 + 634) = v413;
swift_bridgeObjectRelease(v412);
v97[5080] = v98[5080];
v97 + 636) = *((_QWORD *)v98 + 636);
v97[5096] = v98[5096];
LABEL_786:
v414 = *((_QWORD *)v97 + 638);
if (v414 != 1)
{
v415 = *((_QWORD *)v98 + 638);
if (v415 != 1)
{
v97 + 638) = v415;
swift_bridgeObjectRelease(v414);
v97[5112] = v98[5112];
v97 + 640) = *((_QWORD *)v98 + 640);
v97[5128] = v98[5128];
LABEL_791:
v416 = *((_QWORD *)v97 + 642);
if (v416 != 1)
{
v417 = *((_QWORD *)v98 + 642);
if (v417 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              {
v97 + 642) = v417;
swift_bridgeObjectRelease(v416);
v97[5144] = v98[5144];
v97 + 644) = *((_QWORD *)v98 + 644);
v97[5160] = v98[5160];
LABEL_796:
v418 = *((_QWORD *)v97 + 646);
if (v418 != 1)
{
v419 = *((_QWORD *)v98 + 646);
if (v419 != 1)
{
v97 + 646) = v419;
swift_bridgeObjectRelease(v418);
v97[5176] = v98[5176];
v97 + 648) = *((_QWORD *)v98 + 648);
v97[5192] = v98[5192];
LABEL_801:
v420 = *((_QWORD *)v97 + 650);
if (v420 != 1)
{
v421 = *((_QWORD *)v98 + 650);
if (v421 != 1)
{
v97 + 650) = v421;
swift_bridgeObjectRelease(v420);
v97[5208] = v98[5208];
v97 + 652) = *((_QWORD *)v98 + 652);
v97[5224] = v98[5224];
LABEL_806:
v422 = *((_QWORD *)v97 + 654);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        if (v422 != 1)
{
v423 = *((_QWORD *)v98 + 654);
if (v423 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          {
v97 + 654) = v423;
swift_bridgeObjectRelease(v422);
v97[5240] = v98[5240];
v97 + 656) = *((_QWORD *)v98 + 656);
v97[5256] = v98[5256];
LABEL_811:
v424 = *((_QWORD *)v97 + 658);
if (v424 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            {
v425 = *((_QWORD *)v98 + 658);
if (v425 != 1)
{
v97 + 658) = v425;
swift_bridgeObjectRelease(v424);
v97[5272] = v98[5272];
v97 + 660) = *((_QWORD *)v98 + 660);
v97[5288] = v98[5288];
LABEL_816:
v426 = *((_QWORD *)v97 + 662);
if (v426 != 1)
{
v427 = *((_QWORD *)v98 + 662);
if (v427 != 1)
{
v97 + 662) = v427;
swift_bridgeObjectRelease(v426);
v97[5304] = v98[5304];
v97 + 664) = *((_QWORD *)v98 + 664);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    v97[5320] = v98[5320];
LABEL_821:
v428 = *((_QWORD *)v97 + 666);
if (v428 != 1)
{
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      v429 = *((_QWORD *)v98 + 666);
if (v429 != 1)
{
v97 + 666) = v429;
swift_bridgeObjectRelease(v428);
v97[5336] = v98[5336];
v97 + 668) = *((_QWORD *)v98 + 668);
v97[5352] = v98[5352];
LABEL_826:
v430 = *((_QWORD *)v97 + 670);
if (v430 != 1)
{
v431 = *((_QWORD *)v98 + 670);
if (v431 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          {
v97 + 670) = v431;
swift_bridgeObjectRelease(v430);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            v97[5368] = v98[5368];
v97 + 672) = *((_QWORD *)v98 + 672);
v97[5384] = v98[5384];
LABEL_831:
v432 = *((_QWORD *)v97 + 674);
if (v432 != 1)
{
v433 = *((_QWORD *)v98 + 674);
if (v433 != 1)
{
v97 + 674) = v433;
swift_bridgeObjectRelease(v432);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                v97[5400] = v98[5400];
v97 + 676) = *((_QWORD *)v98 + 676);
v97[5416] = v98[5416];
LABEL_836:
v434 = *((_QWORD *)v97 + 678);
if (v434 != 1)
{
v435 = *((_QWORD *)v98 + 678);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  if (v435 != 1)
{
v97 + 678) = v435;
swift_bridgeObjectRelease(v434);
v97[5432] = v98[5432];
v97 + 680) = *((_QWORD *)v98 + 680);
v97[5448] = v98[5448];
LABEL_841:
v436 = *((_QWORD *)v97 + 682);
if (v436 != 1)
{
v437 = *((_QWORD *)v98 + 682);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      if (v437 != 1)
{
v97 + 682) = v437;
swift_bridgeObjectRelease(v436);
v97[5464] = v98[5464];
v97 + 684) = *((_QWORD *)v98 + 684);
v97[5480] = v98[5480];
LABEL_846:
v438 = *((_QWORD *)v97 + 686);
if (v438 != 1)
{
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          v439 = *((_QWORD *)v98 + 686);
if (v439 != 1)
{
v97 + 686) = v439;
swift_bridgeObjectRelease(v438);
v97[5496] = v98[5496];
v97 + 688) = *((_QWORD *)v98 + 688);
v97[5512] = v98[5512];
LABEL_851:
v440 = *((_QWORD *)v97 + 690);
if (v440 != 1)
{
v441 = *((_QWORD *)v98 + 690);
if (v441 != 1)
{
v97 + 690) = v441;
swift_bridgeObjectRelease(v440);
v97[5528] = v98[5528];
v97 + 692) = *((_QWORD *)v98 + 692);
v97[5544] = v98[5544];
LABEL_856:
v442 = *((_QWORD *)v97 + 694);
if (v442 != 1)
{
v443 = *((_QWORD *)v98 + 694);
if (v443 != 1)
{
v97 + 694) = v443;
swift_bridgeObjectRelease(v442);
v97[5560] = v98[5560];
v97 + 696) = *((_QWORD *)v98 + 696);
v97[5576] = v98[5576];
LABEL_861:
v444 = *((_QWORD *)v97 + 698);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    if (v444 != 1)
{
v445 = *((_QWORD *)v98 + 698);
if (v445 != 1)
{
v97 + 698) = v445;
swift_bridgeObjectRelease(v444);
v97[5592] = v98[5592];
v97 + 700) = *((_QWORD *)v98 + 700);
v97[5608] = v98[5608];
LABEL_866:
v446 = *((_QWORD *)v97 + 702);
if (v446 != 1)
{
v447 = *((_QWORD *)v98 + 702);
if (v447 != 1)
{
v97 + 702) = v447;
swift_bridgeObjectRelease(v446);
v97[5624] = v98[5624];
v97 + 704) = *((_QWORD *)v98 + 704);
v97[5640] = v98[5640];
LABEL_871:
v448 = *((_QWORD *)v97 + 706);
if (v448 != 1)
{
v449 = *((_QWORD *)v98 + 706);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              if (v449 != 1)
{
v97 + 706) = v449;
swift_bridgeObjectRelease(v448);
v97[5656] = v98[5656];
v97 + 708) = *((_QWORD *)v98 + 708);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                v97[5672] = v98[5672];
LABEL_876:
v450 = *((_QWORD *)v97 + 710);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                if (v450 != 1)
{
v451 = *((_QWORD *)v98 + 710);
if (v451 != 1)
{
v97 + 710) = v451;
swift_bridgeObjectRelease(v450);
v97[5688] = v98[5688];
v97 + 712) = *((_QWORD *)v98 + 712);
v97[5704] = v98[5704];
LABEL_881:
v452 = *((_QWORD *)v97 + 714);
if (v452 != 1)
{
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      v453 = *((_QWORD *)v98 + 714);
if (v453 != 1)
{
v97 + 714) = v453;
swift_bridgeObjectRelease(v452);
v97[5720] = v98[5720];
v97 + 716) = *((_QWORD *)v98 + 716);
v97[5736] = v98[5736];
LABEL_886:
v454 = *((_QWORD *)v97 + 718);
if (v454 != 1)
{
v455 = *((_QWORD *)v98 + 718);
if (v455 != 1)
{
v97 + 718) = v455;
swift_bridgeObjectRelease(v454);
v97[5752] = v98[5752];
v97 + 720) = *((_QWORD *)v98 + 720);
v97[5768] = v98[5768];
goto LABEL_891;
}
sub_100083F00((_QWORD *)v97 + 718);
}
v97 + 359) = *((_OWORD *)v98 + 359);
v97 + 5753) = *(_OWORD *)(v98 + 5753);
LABEL_891:
v97 + 361) = *((_OWORD *)v98 + 361);
v97[5792] = v98[5792];
v97 + 5800) = *(_OWORD *)(v98 + 5800);
v97[5816] = v98[5816];
v97 + 5817) = *(_DWORD *)(v98 + 5817);
v97 + 5821) = *(_WORD *)(v98 + 5821);
v97[5823] = v98[5823];
v456 = *((_QWORD *)v97 + 728);
v97 + 728) = *((_QWORD *)v98 + 728);
swift_bridgeObjectRelease(v456);
v457 = *((_QWORD *)v97 + 729);
v97 + 729) = *((_QWORD *)v98 + 729);
swift_bridgeObjectRelease(v457);
goto LABEL_892;
}
sub_100083F00((_QWORD *)v97 + 714);
}
v97 + 357) = *((_OWORD *)v98 + 357);
v97 + 5721) = *(_OWORD *)(v98 + 5721);
goto LABEL_886;
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  sub_100083F00((_QWORD *)v97 + 710);
}
v97 + 355) = *((_OWORD *)v98 + 355);
v97 + 5689) = *(_OWORD *)(v98 + 5689);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                goto LABEL_881;
}
sub_100083F00((_QWORD *)v97 + 706);
}
v97 + 353) = *((_OWORD *)v98 + 353);
v97 + 5657) = *(_OWORD *)(v98 + 5657);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            goto LABEL_876;
}
sub_100083F00((_QWORD *)v97 + 702);
}
v97 + 351) = *((_OWORD *)v98 + 351);
v97 + 5625) = *(_OWORD *)(v98 + 5625);
goto LABEL_871;
}
sub_100083F00((_QWORD *)v97 + 698);
}
v97 + 349) = *((_OWORD *)v98 + 349);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    *(_OWORD *)(v97 + 5593) = *(_OWORD *)(v98 + 5593);
goto LABEL_866;
}
sub_100083F00((_QWORD *)v97 + 694);
}
v97 + 347) = *((_OWORD *)v98 + 347);
v97 + 5561) = *(_OWORD *)(v98 + 5561);
goto LABEL_861;
}
sub_100083F00((_QWORD *)v97 + 690);
}
v97 + 345) = *((_OWORD *)v98 + 345);
v97 + 5529) = *(_OWORD *)(v98 + 5529);
goto LABEL_856;
}
sub_100083F00((_QWORD *)v97 + 686);
}
v97 + 343) = *((_OWORD *)v98 + 343);
v97 + 5497) = *(_OWORD *)(v98 + 5497);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        goto LABEL_851;
}
sub_100083F00((_QWORD *)v97 + 682);
}
v97 + 341) = *((_OWORD *)v98 + 341);
v97 + 5465) = *(_OWORD *)(v98 + 5465);
goto LABEL_846;
}
sub_100083F00((_QWORD *)v97 + 678);
}
v97 + 339) = *((_OWORD *)v98 + 339);
v97 + 5433) = *(_OWORD *)(v98 + 5433);
goto LABEL_841;
}
sub_100083F00((_QWORD *)v97 + 674);
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *((_OWORD *)v97 + 337) = *((_OWORD *)v98 + 337);
v97 + 5401) = *(_OWORD *)(v98 + 5401);
goto LABEL_836;
}
sub_100083F00((_QWORD *)v97 + 670);
}
v97 + 335) = *((_OWORD *)v98 + 335);
v97 + 5369) = *(_OWORD *)(v98 + 5369);
goto LABEL_831;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      sub_100083F00((_QWORD *)v97 + 666);
}
v97 + 333) = *((_OWORD *)v98 + 333);
v97 + 5337) = *(_OWORD *)(v98 + 5337);
goto LABEL_826;
}
sub_100083F00((_QWORD *)v97 + 662);
}
v97 + 331) = *((_OWORD *)v98 + 331);
v97 + 5305) = *(_OWORD *)(v98 + 5305);
goto LABEL_821;
}
sub_100083F00((_QWORD *)v97 + 658);
}
v97 + 329) = *((_OWORD *)v98 + 329);
v97 + 5273) = *(_OWORD *)(v98 + 5273);
goto LABEL_816;
}
sub_100083F00((_QWORD *)v97 + 654);
}
v97 + 327) = *((_OWORD *)v98 + 327);
v97 + 5241) = *(_OWORD *)(v98 + 5241);
goto LABEL_811;
}
sub_100083F00((_QWORD *)v97 + 650);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    }
v97 + 325) = *((_OWORD *)v98 + 325);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    *(_OWORD *)(v97 + 5209) = *(_OWORD *)(v98 + 5209);
goto LABEL_806;
}
sub_100083F00((_QWORD *)v97 + 646);
}
v97 + 323) = *((_OWORD *)v98 + 323);
v97 + 5177) = *(_OWORD *)(v98 + 5177);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                goto LABEL_801;
}
sub_100083F00((_QWORD *)v97 + 642);
}
v97 + 321) = *((_OWORD *)v98 + 321);
v97 + 5145) = *(_OWORD *)(v98 + 5145);
goto LABEL_796;
}
sub_100083F00((_QWORD *)v97 + 638);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        }
v97 + 319) = *((_OWORD *)v98 + 319);
v97 + 5113) = *(_OWORD *)(v98 + 5113);
goto LABEL_791;
}
sub_100083F00((_QWORD *)v97 + 634);
}
v97 + 317) = *((_OWORD *)v98 + 317);
v97 + 5081) = *(_OWORD *)(v98 + 5081);
goto LABEL_786;
}
sub_100083F00((_QWORD *)v97 + 630);
}
v97 + 315) = *((_OWORD *)v98 + 315);
v97 + 5049) = *(_OWORD *)(v98 + 5049);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                goto LABEL_781;
}
sub_100083F00((_QWORD *)v97 + 626);
}
v407 = *(_OWORD *)v408;
v97 + 5017) = *(_OWORD *)(v98 + 5017);
goto LABEL_776;
}
sub_100083F00((_QWORD *)v97 + 610);
}
v97 + 305) = *((_OWORD *)v98 + 305);
v97 + 4889) = *(_OWORD *)(v98 + 4889);
goto LABEL_761;
}
sub_100083F00((_QWORD *)v97 + 606);
}
v97 + 303) = *((_OWORD *)v98 + 303);
v97 + 4857) = *(_OWORD *)(v98 + 4857);
goto LABEL_756;
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  sub_100083F00((_QWORD *)v97 + 602);
}
v97 + 301) = *((_OWORD *)v98 + 301);
v97 + 4825) = *(_OWORD *)(v98 + 4825);
goto LABEL_751;
}
sub_100083F00((_QWORD *)v97 + 598);
}
v97 + 299) = *((_OWORD *)v98 + 299);
v97 + 4793) = *(_OWORD *)(v98 + 4793);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            goto LABEL_746;
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          sub_100083F00((_QWORD *)v97 + 594);
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        *((_OWORD *)v97 + 297) = *((_OWORD *)v98 + 297);
v97 + 4761) = *(_OWORD *)(v98 + 4761);
goto LABEL_741;
}
sub_100083F00((_QWORD *)v97 + 590);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    *((_OWORD *)v97 + 295) = *((_OWORD *)v98 + 295);
v97 + 4729) = *(_OWORD *)(v98 + 4729);
goto LABEL_736;
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  sub_100083F00((_QWORD *)v97 + 586);
}
v97 + 293) = *((_OWORD *)v98 + 293);
v97 + 4697) = *(_OWORD *)(v98 + 4697);
goto LABEL_731;
}
sub_100083F00((_QWORD *)v97 + 582);
}
v97 + 291) = *((_OWORD *)v98 + 291);
v97 + 4665) = *(_OWORD *)(v98 + 4665);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            goto LABEL_726;
}
sub_100083F00((_QWORD *)v97 + 578);
}
v97 + 289) = *((_OWORD *)v98 + 289);
v97 + 4633) = *(_OWORD *)(v98 + 4633);
goto LABEL_721;
}
sub_100083F00((_QWORD *)v97 + 574);
}
v97 + 287) = *((_OWORD *)v98 + 287);
v97 + 4601) = *(_OWORD *)(v98 + 4601);
goto LABEL_716;
}
sub_100083F00((_QWORD *)v97 + 570);
}
v97 + 285) = *((_OWORD *)v98 + 285);
v97 + 4569) = *(_OWORD *)(v98 + 4569);
goto LABEL_711;
}
sub_100083F00((_QWORD *)v97 + 566);
}
v97 + 283) = *((_OWORD *)v98 + 283);
v97 + 4537) = *(_OWORD *)(v98 + 4537);
goto LABEL_706;
}
sub_100083F00((_QWORD *)v97 + 562);
}
v97 + 281) = *((_OWORD *)v98 + 281);
v97 + 4505) = *(_OWORD *)(v98 + 4505);
goto LABEL_701;
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      sub_100083F00((_QWORD *)v97 + 558);
}
v97 + 279) = *((_OWORD *)v98 + 279);
v97 + 4473) = *(_OWORD *)(v98 + 4473);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    goto LABEL_696;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  sub_100083F00((_QWORD *)v97 + 554);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
v97 + 277) = *((_OWORD *)v98 + 277);
v97 + 4441) = *(_OWORD *)(v98 + 4441);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                goto LABEL_691;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              sub_100083F00((_QWORD *)v97 + 550);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            }
v97 + 275) = *((_OWORD *)v98 + 275);
v97 + 4409) = *(_OWORD *)(v98 + 4409);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            goto LABEL_686;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          sub_100083F00((_QWORD *)v97 + 546);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        }
v97 + 273) = *((_OWORD *)v98 + 273);
v97 + 4377) = *(_OWORD *)(v98 + 4377);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        goto LABEL_681;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      sub_100083F00((_QWORD *)v97 + 542);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    *((_OWORD *)v97 + 271) = *((_OWORD *)v98 + 271);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    *(_OWORD *)(v97 + 4345) = *(_OWORD *)(v98 + 4345);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    goto LABEL_676;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  sub_100083F00((_QWORD *)v97 + 538);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *((_OWORD *)v97 + 269) = *((_OWORD *)v98 + 269);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *(_OWORD *)(v97 + 4313) = *(_OWORD *)(v98 + 4313);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                goto LABEL_671;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              sub_100083F00((_QWORD *)v97 + 534);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *((_OWORD *)v97 + 267) = *((_OWORD *)v98 + 267);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *(_OWORD *)(v97 + 4281) = *(_OWORD *)(v98 + 4281);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            goto LABEL_666;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          sub_100083F00((_QWORD *)v97 + 530);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        *((_OWORD *)v97 + 265) = *((_OWORD *)v98 + 265);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        *(_OWORD *)(v97 + 4249) = *(_OWORD *)(v98 + 4249);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        goto LABEL_661;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      sub_100083F00((_QWORD *)v97 + 526);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    *((_OWORD *)v97 + 263) = *((_OWORD *)v98 + 263);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    *(_OWORD *)(v97 + 4217) = *(_OWORD *)(v98 + 4217);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    goto LABEL_656;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  sub_100083F00((_QWORD *)v97 + 522);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *(_OWORD *)v356 = *(_OWORD *)v357;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *(_OWORD *)(v97 + 4185) = *(_OWORD *)(v98 + 4185);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                goto LABEL_651;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                              sub_100083F00((_QWORD *)v97 + 506);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *((_OWORD *)v97 + 253) = *((_OWORD *)v98 + 253);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *(_OWORD *)(v97 + 4057) = *(_OWORD *)(v98 + 4057);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            goto LABEL_636;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          sub_100083F00((_QWORD *)v97 + 502);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        *((_OWORD *)v97 + 251) = *((_OWORD *)v98 + 251);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        *(_OWORD *)(v97 + 4025) = *(_OWORD *)(v98 + 4025);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        goto LABEL_631;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      sub_100083F00((_QWORD *)v97 + 498);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    *((_OWORD *)v97 + 249) = *((_OWORD *)v98 + 249);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    *(_OWORD *)(v97 + 3993) = *(_OWORD *)(v98 + 3993);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    goto LABEL_626;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                  sub_100083F00((_QWORD *)v97 + 494);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                *((_OWORD *)v97 + 247) = *((_OWORD *)v98 + 247);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                *(_OWORD *)(v97 + 3961) = *(_OWORD *)(v98 + 3961);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                goto LABEL_621;
                                                                                                                                                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                                                                                                                                                              sub_100083F00((_QWORD *)v97 + 490);
                                                                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                                                                            *((_OWORD *)v97 + 245) = *((_OWORD *)v98 + 245);
                                                                                                                                                                                                                                                                                                                                                                                                                                                            *(_OWORD *)(v97 + 3929) = *(_OWORD *)(v98 + 3929);
                                                                                                                                                                                                                                                                                                                                                                                                                                                            goto LABEL_616;
                                                                                                                                                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                                                                                                                                                          sub_100083F00((_QWORD *)v97 + 486);
                                                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                                                        *((_OWORD *)v97 + 243) = *((_OWORD *)v98 + 243);
                                                                                                                                                                                                                                                                                                                                                                                                                                                        *(_OWORD *)(v97 + 3897) = *(_OWORD *)(v98 + 3897);
                                                                                                                                                                                                                                                                                                                                                                                                                                                        goto LABEL_611;
                                                                                                                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                                                                                                                      sub_100083F00((_QWORD *)v97 + 482);
                                                                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                                                                    *((_OWORD *)v97 + 241) = *((_OWORD *)v98 + 241);
                                                                                                                                                                                                                                                                                                                                                                                                                                                    *(_OWORD *)(v97 + 3865) = *(_OWORD *)(v98 + 3865);
                                                                                                                                                                                                                                                                                                                                                                                                                                                    goto LABEL_606;
                                                                                                                                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                                                                                                                                  sub_100083F00((_QWORD *)v97 + 478);
                                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                                *((_OWORD *)v97 + 239) = *((_OWORD *)v98 + 239);
                                                                                                                                                                                                                                                                                                                                                                                                                                                *(_OWORD *)(v97 + 3833) = *(_OWORD *)(v98 + 3833);
                                                                                                                                                                                                                                                                                                                                                                                                                                                goto LABEL_601;
                                                                                                                                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                                                                                                                                              sub_100083F00((_QWORD *)v97 + 474);
                                                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                                                            *((_OWORD *)v97 + 237) = *((_OWORD *)v98 + 237);
                                                                                                                                                                                                                                                                                                                                                                                                                                            *(_OWORD *)(v97 + 3801) = *(_OWORD *)(v98 + 3801);
                                                                                                                                                                                                                                                                                                                                                                                                                                            goto LABEL_596;
                                                                                                                                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                                                                                                                                          sub_100083F00((_QWORD *)v97 + 470);
                                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                                        *((_OWORD *)v97 + 235) = *((_OWORD *)v98 + 235);
                                                                                                                                                                                                                                                                                                                                                                                                                                        *(_OWORD *)(v97 + 3769) = *(_OWORD *)(v98 + 3769);
                                                                                                                                                                                                                                                                                                                                                                                                                                        goto LABEL_591;
                                                                                                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                                                                                                      sub_100083F00((_QWORD *)v97 + 466);
                                                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                                                    *((_OWORD *)v97 + 233) = *((_OWORD *)v98 + 233);
                                                                                                                                                                                                                                                                                                                                                                                                                                    *(_OWORD *)(v97 + 3737) = *(_OWORD *)(v98 + 3737);
                                                                                                                                                                                                                                                                                                                                                                                                                                    goto LABEL_586;
                                                                                                                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                                                                                                                  sub_100083F00((_QWORD *)v97 + 462);
                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                *((_OWORD *)v97 + 231) = *((_OWORD *)v98 + 231);
                                                                                                                                                                                                                                                                                                                                                                                                                                *(_OWORD *)(v97 + 3705) = *(_OWORD *)(v98 + 3705);
                                                                                                                                                                                                                                                                                                                                                                                                                                goto LABEL_581;
                                                                                                                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                                                                                                                              sub_100083F00((_QWORD *)v97 + 458);
                                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                                            *((_OWORD *)v97 + 229) = *((_OWORD *)v98 + 229);
                                                                                                                                                                                                                                                                                                                                                                                                                            *(_OWORD *)(v97 + 3673) = *(_OWORD *)(v98 + 3673);
                                                                                                                                                                                                                                                                                                                                                                                                                            goto LABEL_576;
                                                                                                                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                                                                                                                          sub_100083F00((_QWORD *)v97 + 454);
                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                        *((_OWORD *)v97 + 227) = *((_OWORD *)v98 + 227);
                                                                                                                                                                                                                                                                                                                                                                                                                        *(_OWORD *)(v97 + 3641) = *(_OWORD *)(v98 + 3641);
                                                                                                                                                                                                                                                                                                                                                                                                                        goto LABEL_571;
                                                                                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                                                                                      sub_100083F00((_QWORD *)v97 + 450);
                                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                                    *((_OWORD *)v97 + 225) = *((_OWORD *)v98 + 225);
                                                                                                                                                                                                                                                                                                                                                                                                                    *(_OWORD *)(v97 + 3609) = *(_OWORD *)(v98 + 3609);
                                                                                                                                                                                                                                                                                                                                                                                                                    goto LABEL_566;
                                                                                                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                                                                                                  sub_100083F00((_QWORD *)v97 + 446);
                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                *((_OWORD *)v97 + 223) = *((_OWORD *)v98 + 223);
                                                                                                                                                                                                                                                                                                                                                                                                                *(_OWORD *)(v97 + 3577) = *(_OWORD *)(v98 + 3577);
                                                                                                                                                                                                                                                                                                                                                                                                                goto LABEL_561;
                                                                                                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                                                                                                              sub_100083F00((_QWORD *)v97 + 442);
                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                            *((_OWORD *)v97 + 221) = *((_OWORD *)v98 + 221);
                                                                                                                                                                                                                                                                                                                                                                                                            *(_OWORD *)(v97 + 3545) = *(_OWORD *)(v98 + 3545);
                                                                                                                                                                                                                                                                                                                                                                                                            goto LABEL_556;
                                                                                                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                                                                                                          sub_100083F00((_QWORD *)v97 + 438);
                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                        *((_OWORD *)v97 + 219) = *((_OWORD *)v98 + 219);
                                                                                                                                                                                                                                                                                                                                                                                                        *(_OWORD *)(v97 + 3513) = *(_OWORD *)(v98 + 3513);
                                                                                                                                                                                                                                                                                                                                                                                                        goto LABEL_551;
                                                                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                                                                      sub_100083F00((_QWORD *)v97 + 434);
                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                    *((_OWORD *)v97 + 217) = *((_OWORD *)v98 + 217);
                                                                                                                                                                                                                                                                                                                                                                                                    *(_OWORD *)(v97 + 3481) = *(_OWORD *)(v98 + 3481);
                                                                                                                                                                                                                                                                                                                                                                                                    goto LABEL_546;
                                                                                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                                                                                  sub_100083F00((_QWORD *)v97 + 430);
                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                *((_OWORD *)v97 + 215) = *((_OWORD *)v98 + 215);
                                                                                                                                                                                                                                                                                                                                                                                                *(_OWORD *)(v97 + 3449) = *(_OWORD *)(v98 + 3449);
                                                                                                                                                                                                                                                                                                                                                                                                goto LABEL_541;
                                                                                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                                                                                              sub_100083F00((_QWORD *)v97 + 426);
                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                            *((_OWORD *)v97 + 213) = *((_OWORD *)v98 + 213);
                                                                                                                                                                                                                                                                                                                                                                                            *(_OWORD *)(v97 + 3417) = *(_OWORD *)(v98 + 3417);
                                                                                                                                                                                                                                                                                                                                                                                            goto LABEL_536;
                                                                                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                                                                                          sub_100083F00((_QWORD *)v97 + 422);
                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                        *((_OWORD *)v97 + 211) = *((_OWORD *)v98 + 211);
                                                                                                                                                                                                                                                                                                                                                                                        *(_OWORD *)(v97 + 3385) = *(_OWORD *)(v98 + 3385);
                                                                                                                                                                                                                                                                                                                                                                                        goto LABEL_531;
                                                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                                                      sub_100083F00((_QWORD *)v97 + 418);
                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                    *(_OWORD *)v305 = *(_OWORD *)v306;
                                                                                                                                                                                                                                                                                                                                                                                    *(_OWORD *)(v97 + 3353) = *(_OWORD *)(v98 + 3353);
                                                                                                                                                                                                                                                                                                                                                                                    goto LABEL_526;
                                                                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                                                                  sub_100083F00((_QWORD *)v97 + 402);
                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                *((_OWORD *)v97 + 201) = *((_OWORD *)v98 + 201);
                                                                                                                                                                                                                                                                                                                                                                                *(_OWORD *)(v97 + 3225) = *(_OWORD *)(v98 + 3225);
                                                                                                                                                                                                                                                                                                                                                                                goto LABEL_511;
                                                                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                                                                              sub_100083F00((_QWORD *)v97 + 398);
                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                            *((_OWORD *)v97 + 199) = *((_OWORD *)v98 + 199);
                                                                                                                                                                                                                                                                                                                                                                            *(_OWORD *)(v97 + 3193) = *(_OWORD *)(v98 + 3193);
                                                                                                                                                                                                                                                                                                                                                                            goto LABEL_506;
                                                                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                                                                          sub_100083F00((_QWORD *)v97 + 394);
                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                        *((_OWORD *)v97 + 197) = *((_OWORD *)v98 + 197);
                                                                                                                                                                                                                                                                                                                                                                        *(_OWORD *)(v97 + 3161) = *(_OWORD *)(v98 + 3161);
                                                                                                                                                                                                                                                                                                                                                                        goto LABEL_501;
                                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                                      sub_100083F00((_QWORD *)v97 + 390);
                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                    *((_OWORD *)v97 + 195) = *((_OWORD *)v98 + 195);
                                                                                                                                                                                                                                                                                                                                                                    *(_OWORD *)(v97 + 3129) = *(_OWORD *)(v98 + 3129);
                                                                                                                                                                                                                                                                                                                                                                    goto LABEL_496;
                                                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                                                  sub_100083F00((_QWORD *)v97 + 386);
                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                *((_OWORD *)v97 + 193) = *((_OWORD *)v98 + 193);
                                                                                                                                                                                                                                                                                                                                                                *(_OWORD *)(v97 + 3097) = *(_OWORD *)(v98 + 3097);
                                                                                                                                                                                                                                                                                                                                                                goto LABEL_491;
                                                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                                                              sub_100083F00((_QWORD *)v97 + 382);
                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                            *((_OWORD *)v97 + 191) = *((_OWORD *)v98 + 191);
                                                                                                                                                                                                                                                                                                                                                            *(_OWORD *)(v97 + 3065) = *(_OWORD *)(v98 + 3065);
                                                                                                                                                                                                                                                                                                                                                            goto LABEL_486;
                                                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                                                          sub_100083F00((_QWORD *)v97 + 378);
                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                        *((_OWORD *)v97 + 189) = *((_OWORD *)v98 + 189);
                                                                                                                                                                                                                                                                                                                                                        *(_OWORD *)(v97 + 3033) = *(_OWORD *)(v98 + 3033);
                                                                                                                                                                                                                                                                                                                                                        goto LABEL_481;
                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                      sub_100083F00((_QWORD *)v97 + 374);
                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                    *((_OWORD *)v97 + 187) = *((_OWORD *)v98 + 187);
                                                                                                                                                                                                                                                                                                                                                    *(_OWORD *)(v97 + 3001) = *(_OWORD *)(v98 + 3001);
                                                                                                                                                                                                                                                                                                                                                    goto LABEL_476;
                                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                                  sub_100083F00((_QWORD *)v97 + 370);
                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                *((_OWORD *)v97 + 185) = *((_OWORD *)v98 + 185);
                                                                                                                                                                                                                                                                                                                                                *(_OWORD *)(v97 + 2969) = *(_OWORD *)(v98 + 2969);
                                                                                                                                                                                                                                                                                                                                                goto LABEL_471;
                                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                                              sub_100083F00((_QWORD *)v97 + 366);
                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                            *((_OWORD *)v97 + 183) = *((_OWORD *)v98 + 183);
                                                                                                                                                                                                                                                                                                                                            *(_OWORD *)(v97 + 2937) = *(_OWORD *)(v98 + 2937);
                                                                                                                                                                                                                                                                                                                                            goto LABEL_466;
                                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                                          sub_100083F00((_QWORD *)v97 + 362);
                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                        *((_OWORD *)v97 + 181) = *((_OWORD *)v98 + 181);
                                                                                                                                                                                                                                                                                                                                        *(_OWORD *)(v97 + 2905) = *(_OWORD *)(v98 + 2905);
                                                                                                                                                                                                                                                                                                                                        goto LABEL_461;
                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                      sub_100083F00((_QWORD *)v97 + 358);
                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                    *((_OWORD *)v97 + 179) = *((_OWORD *)v98 + 179);
                                                                                                                                                                                                                                                                                                                                    *(_OWORD *)(v97 + 2873) = *(_OWORD *)(v98 + 2873);
                                                                                                                                                                                                                                                                                                                                    goto LABEL_456;
                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                  sub_100083F00((_QWORD *)v97 + 354);
                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                *((_OWORD *)v97 + 177) = *((_OWORD *)v98 + 177);
                                                                                                                                                                                                                                                                                                                                *(_OWORD *)(v97 + 2841) = *(_OWORD *)(v98 + 2841);
                                                                                                                                                                                                                                                                                                                                goto LABEL_451;
                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                              sub_100083F00((_QWORD *)v97 + 350);
                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                            *((_OWORD *)v97 + 175) = *((_OWORD *)v98 + 175);
                                                                                                                                                                                                                                                                                                                            *(_OWORD *)(v97 + 2809) = *(_OWORD *)(v98 + 2809);
                                                                                                                                                                                                                                                                                                                            goto LABEL_446;
                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                          sub_100083F00((_QWORD *)v97 + 346);
                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                        *((_OWORD *)v97 + 173) = *((_OWORD *)v98 + 173);
                                                                                                                                                                                                                                                                                                                        *(_OWORD *)(v97 + 2777) = *(_OWORD *)(v98 + 2777);
                                                                                                                                                                                                                                                                                                                        goto LABEL_441;
                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                      sub_100083F00((_QWORD *)v97 + 342);
                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                    *((_OWORD *)v97 + 171) = *((_OWORD *)v98 + 171);
                                                                                                                                                                                                                                                                                                                    *(_OWORD *)(v97 + 2745) = *(_OWORD *)(v98 + 2745);
                                                                                                                                                                                                                                                                                                                    goto LABEL_436;
                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                  sub_100083F00((_QWORD *)v97 + 338);
                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                *((_OWORD *)v97 + 169) = *((_OWORD *)v98 + 169);
                                                                                                                                                                                                                                                                                                                *(_OWORD *)(v97 + 2713) = *(_OWORD *)(v98 + 2713);
                                                                                                                                                                                                                                                                                                                goto LABEL_431;
                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                              sub_100083F00((_QWORD *)v97 + 334);
                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                            *((_OWORD *)v97 + 167) = *((_OWORD *)v98 + 167);
                                                                                                                                                                                                                                                                                                            *(_OWORD *)(v97 + 2681) = *(_OWORD *)(v98 + 2681);
                                                                                                                                                                                                                                                                                                            goto LABEL_426;
                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                          sub_100083F00((_QWORD *)v97 + 330);
                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                        *((_OWORD *)v97 + 165) = *((_OWORD *)v98 + 165);
                                                                                                                                                                                                                                                                                                        *(_OWORD *)(v97 + 2649) = *(_OWORD *)(v98 + 2649);
                                                                                                                                                                                                                                                                                                        goto LABEL_421;
                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                      sub_100083F00((_QWORD *)v97 + 326);
                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                    *((_OWORD *)v97 + 163) = *((_OWORD *)v98 + 163);
                                                                                                                                                                                                                                                                                                    *(_OWORD *)(v97 + 2617) = *(_OWORD *)(v98 + 2617);
                                                                                                                                                                                                                                                                                                    goto LABEL_416;
                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                  sub_100083F00((_QWORD *)v97 + 322);
                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                *((_OWORD *)v97 + 161) = *((_OWORD *)v98 + 161);
                                                                                                                                                                                                                                                                                                *(_OWORD *)(v97 + 2585) = *(_OWORD *)(v98 + 2585);
                                                                                                                                                                                                                                                                                                goto LABEL_411;
                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                              sub_100083F00((_QWORD *)v97 + 318);
                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                            *((_OWORD *)v97 + 159) = *((_OWORD *)v98 + 159);
                                                                                                                                                                                                                                                                                            *(_OWORD *)(v97 + 2553) = *(_OWORD *)(v98 + 2553);
                                                                                                                                                                                                                                                                                            goto LABEL_406;
                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                          sub_100083F00((_QWORD *)v97 + 314);
                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                        *(_OWORD *)v254 = *(_OWORD *)v255;
                                                                                                                                                                                                                                                                                        *(_OWORD *)(v97 + 2521) = *(_OWORD *)(v98 + 2521);
                                                                                                                                                                                                                                                                                        goto LABEL_401;
                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                      sub_100083F00((_QWORD *)v97 + 298);
                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                    *((_OWORD *)v97 + 149) = *((_OWORD *)v98 + 149);
                                                                                                                                                                                                                                                                                    *(_OWORD *)(v97 + 2393) = *(_OWORD *)(v98 + 2393);
                                                                                                                                                                                                                                                                                    goto LABEL_386;
                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                  sub_100083F00((_QWORD *)v97 + 294);
                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                *((_OWORD *)v97 + 147) = *((_OWORD *)v98 + 147);
                                                                                                                                                                                                                                                                                *(_OWORD *)(v97 + 2361) = *(_OWORD *)(v98 + 2361);
                                                                                                                                                                                                                                                                                goto LABEL_381;
                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                              sub_100083F00((_QWORD *)v97 + 290);
                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                            *((_OWORD *)v97 + 145) = *((_OWORD *)v98 + 145);
                                                                                                                                                                                                                                                                            *(_OWORD *)(v97 + 2329) = *(_OWORD *)(v98 + 2329);
                                                                                                                                                                                                                                                                            goto LABEL_376;
                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                          sub_100083F00((_QWORD *)v97 + 286);
                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                        *((_OWORD *)v97 + 143) = *((_OWORD *)v98 + 143);
                                                                                                                                                                                                                                                                        *(_OWORD *)(v97 + 2297) = *(_OWORD *)(v98 + 2297);
                                                                                                                                                                                                                                                                        goto LABEL_371;
                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                      sub_100083F00((_QWORD *)v97 + 282);
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                    *((_OWORD *)v97 + 141) = *((_OWORD *)v98 + 141);
                                                                                                                                                                                                                                                                    *(_OWORD *)(v97 + 2265) = *(_OWORD *)(v98 + 2265);
                                                                                                                                                                                                                                                                    goto LABEL_366;
                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                  sub_100083F00((_QWORD *)v97 + 278);
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                *((_OWORD *)v97 + 139) = *((_OWORD *)v98 + 139);
                                                                                                                                                                                                                                                                *(_OWORD *)(v97 + 2233) = *(_OWORD *)(v98 + 2233);
                                                                                                                                                                                                                                                                goto LABEL_361;
                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                              sub_100083F00((_QWORD *)v97 + 274);
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            *((_OWORD *)v97 + 137) = *((_OWORD *)v98 + 137);
                                                                                                                                                                                                                                                            *(_OWORD *)(v97 + 2201) = *(_OWORD *)(v98 + 2201);
                                                                                                                                                                                                                                                            goto LABEL_356;
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                          sub_100083F00((_QWORD *)v97 + 270);
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                        *((_OWORD *)v97 + 135) = *((_OWORD *)v98 + 135);
                                                                                                                                                                                                                                                        *(_OWORD *)(v97 + 2169) = *(_OWORD *)(v98 + 2169);
                                                                                                                                                                                                                                                        goto LABEL_351;
                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                      sub_100083F00((_QWORD *)v97 + 266);
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    *((_OWORD *)v97 + 133) = *((_OWORD *)v98 + 133);
                                                                                                                                                                                                                                                    *(_OWORD *)(v97 + 2137) = *(_OWORD *)(v98 + 2137);
                                                                                                                                                                                                                                                    goto LABEL_346;
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                  sub_100083F00((_QWORD *)v97 + 262);
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                *((_OWORD *)v97 + 131) = *((_OWORD *)v98 + 131);
                                                                                                                                                                                                                                                *(_OWORD *)(v97 + 2105) = *(_OWORD *)(v98 + 2105);
                                                                                                                                                                                                                                                goto LABEL_341;
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                              sub_100083F00((_QWORD *)v97 + 258);
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            *((_OWORD *)v97 + 129) = *((_OWORD *)v98 + 129);
                                                                                                                                                                                                                                            *(_OWORD *)(v97 + 2073) = *(_OWORD *)(v98 + 2073);
                                                                                                                                                                                                                                            goto LABEL_336;
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                          sub_100083F00((_QWORD *)v97 + 254);
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                        *((_OWORD *)v97 + 127) = *((_OWORD *)v98 + 127);
                                                                                                                                                                                                                                        *(_OWORD *)(v97 + 2041) = *(_OWORD *)(v98 + 2041);
                                                                                                                                                                                                                                        goto LABEL_331;
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                      sub_100083F00((_QWORD *)v97 + 250);
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    *((_OWORD *)v97 + 125) = *((_OWORD *)v98 + 125);
                                                                                                                                                                                                                                    *(_OWORD *)(v97 + 2009) = *(_OWORD *)(v98 + 2009);
                                                                                                                                                                                                                                    goto LABEL_326;
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                  sub_100083F00((_QWORD *)v97 + 246);
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                *((_OWORD *)v97 + 123) = *((_OWORD *)v98 + 123);
                                                                                                                                                                                                                                *(_OWORD *)(v97 + 1977) = *(_OWORD *)(v98 + 1977);
                                                                                                                                                                                                                                goto LABEL_321;
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                              sub_100083F00((_QWORD *)v97 + 242);
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            *((_OWORD *)v97 + 121) = *((_OWORD *)v98 + 121);
                                                                                                                                                                                                                            *(_OWORD *)(v97 + 1945) = *(_OWORD *)(v98 + 1945);
                                                                                                                                                                                                                            goto LABEL_316;
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                          sub_100083F00((_QWORD *)v97 + 238);
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        *((_OWORD *)v97 + 119) = *((_OWORD *)v98 + 119);
                                                                                                                                                                                                                        *(_OWORD *)(v97 + 1913) = *(_OWORD *)(v98 + 1913);
                                                                                                                                                                                                                        goto LABEL_311;
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                      sub_100083F00((_QWORD *)v97 + 234);
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    *((_OWORD *)v97 + 117) = *((_OWORD *)v98 + 117);
                                                                                                                                                                                                                    *(_OWORD *)(v97 + 1881) = *(_OWORD *)(v98 + 1881);
                                                                                                                                                                                                                    goto LABEL_306;
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                  sub_100083F00((_QWORD *)v97 + 230);
                                                                                                                                                                                                                }
                                                                                                                                                                                                                *((_OWORD *)v97 + 115) = *((_OWORD *)v98 + 115);
                                                                                                                                                                                                                *(_OWORD *)(v97 + 1849) = *(_OWORD *)(v98 + 1849);
                                                                                                                                                                                                                goto LABEL_301;
                                                                                                                                                                                                              }
                                                                                                                                                                                                              sub_100083F00((_QWORD *)v97 + 226);
                                                                                                                                                                                                            }
                                                                                                                                                                                                            *((_OWORD *)v97 + 113) = *((_OWORD *)v98 + 113);
                                                                                                                                                                                                            *(_OWORD *)(v97 + 1817) = *(_OWORD *)(v98 + 1817);
                                                                                                                                                                                                            goto LABEL_296;
                                                                                                                                                                                                          }
                                                                                                                                                                                                          sub_100083F00((_QWORD *)v97 + 222);
                                                                                                                                                                                                        }
                                                                                                                                                                                                        *((_OWORD *)v97 + 111) = *((_OWORD *)v98 + 111);
                                                                                                                                                                                                        *(_OWORD *)(v97 + 1785) = *(_OWORD *)(v98 + 1785);
                                                                                                                                                                                                        goto LABEL_291;
                                                                                                                                                                                                      }
                                                                                                                                                                                                      sub_100083F00((_QWORD *)v97 + 218);
                                                                                                                                                                                                    }
                                                                                                                                                                                                    *((_OWORD *)v97 + 109) = *((_OWORD *)v98 + 109);
                                                                                                                                                                                                    *(_OWORD *)(v97 + 1753) = *(_OWORD *)(v98 + 1753);
                                                                                                                                                                                                    goto LABEL_286;
                                                                                                                                                                                                  }
                                                                                                                                                                                                  sub_100083F00((_QWORD *)v97 + 214);
                                                                                                                                                                                                }
                                                                                                                                                                                                *((_OWORD *)v97 + 107) = *((_OWORD *)v98 + 107);
                                                                                                                                                                                                *(_OWORD *)(v97 + 1721) = *(_OWORD *)(v98 + 1721);
                                                                                                                                                                                                goto LABEL_281;
                                                                                                                                                                                              }
                                                                                                                                                                                              sub_100083F00((_QWORD *)v97 + 210);
                                                                                                                                                                                            }
                                                                                                                                                                                            *(_OWORD *)v203 = *(_OWORD *)v204;
                                                                                                                                                                                            *(_OWORD *)(v97 + 1689) = *(_OWORD *)(v98 + 1689);
                                                                                                                                                                                            goto LABEL_276;
                                                                                                                                                                                          }
                                                                                                                                                                                          sub_100083F00((_QWORD *)v97 + 194);
                                                                                                                                                                                        }
                                                                                                                                                                                        *((_OWORD *)v97 + 97) = *((_OWORD *)v98 + 97);
                                                                                                                                                                                        *(_OWORD *)(v97 + 1561) = *(_OWORD *)(v98 + 1561);
                                                                                                                                                                                        goto LABEL_261;
                                                                                                                                                                                      }
                                                                                                                                                                                      sub_100083F00((_QWORD *)v97 + 190);
                                                                                                                                                                                    }
                                                                                                                                                                                    *((_OWORD *)v97 + 95) = *((_OWORD *)v98 + 95);
                                                                                                                                                                                    *(_OWORD *)(v97 + 1529) = *(_OWORD *)(v98 + 1529);
                                                                                                                                                                                    goto LABEL_256;
                                                                                                                                                                                  }
                                                                                                                                                                                  sub_100083F00((_QWORD *)v97 + 186);
                                                                                                                                                                                }
                                                                                                                                                                                *((_OWORD *)v97 + 93) = *((_OWORD *)v98 + 93);
                                                                                                                                                                                *(_OWORD *)(v97 + 1497) = *(_OWORD *)(v98 + 1497);
                                                                                                                                                                                goto LABEL_251;
                                                                                                                                                                              }
                                                                                                                                                                              sub_100083F00((_QWORD *)v97 + 182);
                                                                                                                                                                            }
                                                                                                                                                                            *((_OWORD *)v97 + 91) = *((_OWORD *)v98 + 91);
                                                                                                                                                                            *(_OWORD *)(v97 + 1465) = *(_OWORD *)(v98 + 1465);
                                                                                                                                                                            goto LABEL_246;
                                                                                                                                                                          }
                                                                                                                                                                          sub_100083F00((_QWORD *)v97 + 178);
                                                                                                                                                                        }
                                                                                                                                                                        *((_OWORD *)v97 + 89) = *((_OWORD *)v98 + 89);
                                                                                                                                                                        *(_OWORD *)(v97 + 1433) = *(_OWORD *)(v98 + 1433);
                                                                                                                                                                        goto LABEL_241;
                                                                                                                                                                      }
                                                                                                                                                                      sub_100083F00((_QWORD *)v97 + 174);
                                                                                                                                                                    }
                                                                                                                                                                    *((_OWORD *)v97 + 87) = *((_OWORD *)v98 + 87);
                                                                                                                                                                    *(_OWORD *)(v97 + 1401) = *(_OWORD *)(v98 + 1401);
                                                                                                                                                                    goto LABEL_236;
                                                                                                                                                                  }
                                                                                                                                                                  sub_100083F00((_QWORD *)v97 + 170);
                                                                                                                                                                }
                                                                                                                                                                *((_OWORD *)v97 + 85) = *((_OWORD *)v98 + 85);
                                                                                                                                                                *(_OWORD *)(v97 + 1369) = *(_OWORD *)(v98 + 1369);
                                                                                                                                                                goto LABEL_231;
                                                                                                                                                              }
                                                                                                                                                              sub_100083F00((_QWORD *)v97 + 166);
                                                                                                                                                            }
                                                                                                                                                            *((_OWORD *)v97 + 83) = *((_OWORD *)v98 + 83);
                                                                                                                                                            *(_OWORD *)(v97 + 1337) = *(_OWORD *)(v98 + 1337);
                                                                                                                                                            goto LABEL_226;
                                                                                                                                                          }
                                                                                                                                                          sub_100083F00((_QWORD *)v97 + 162);
                                                                                                                                                        }
                                                                                                                                                        *((_OWORD *)v97 + 81) = *((_OWORD *)v98 + 81);
                                                                                                                                                        *(_OWORD *)(v97 + 1305) = *(_OWORD *)(v98 + 1305);
                                                                                                                                                        goto LABEL_221;
                                                                                                                                                      }
                                                                                                                                                      sub_100083F00((_QWORD *)v97 + 158);
                                                                                                                                                    }
                                                                                                                                                    *((_OWORD *)v97 + 79) = *((_OWORD *)v98 + 79);
                                                                                                                                                    *(_OWORD *)(v97 + 1273) = *(_OWORD *)(v98 + 1273);
                                                                                                                                                    goto LABEL_216;
                                                                                                                                                  }
                                                                                                                                                  sub_100083F00((_QWORD *)v97 + 154);
                                                                                                                                                }
                                                                                                                                                *((_OWORD *)v97 + 77) = *((_OWORD *)v98 + 77);
                                                                                                                                                *(_OWORD *)(v97 + 1241) = *(_OWORD *)(v98 + 1241);
                                                                                                                                                goto LABEL_211;
                                                                                                                                              }
                                                                                                                                              sub_100083F00((_QWORD *)v97 + 150);
                                                                                                                                            }
                                                                                                                                            *((_OWORD *)v97 + 75) = *((_OWORD *)v98 + 75);
                                                                                                                                            *(_OWORD *)(v97 + 1209) = *(_OWORD *)(v98 + 1209);
                                                                                                                                            goto LABEL_206;
                                                                                                                                          }
                                                                                                                                          sub_100083F00((_QWORD *)v97 + 146);
                                                                                                                                        }
                                                                                                                                        *((_OWORD *)v97 + 73) = *((_OWORD *)v98 + 73);
                                                                                                                                        *(_OWORD *)(v97 + 1177) = *(_OWORD *)(v98 + 1177);
                                                                                                                                        goto LABEL_201;
                                                                                                                                      }
                                                                                                                                      sub_100083F00((_QWORD *)v97 + 142);
                                                                                                                                    }
                                                                                                                                    *((_OWORD *)v97 + 71) = *((_OWORD *)v98 + 71);
                                                                                                                                    *(_OWORD *)(v97 + 1145) = *(_OWORD *)(v98 + 1145);
                                                                                                                                    goto LABEL_196;
                                                                                                                                  }
                                                                                                                                  sub_100083F00((_QWORD *)v97 + 138);
                                                                                                                                }
                                                                                                                                *((_OWORD *)v97 + 69) = *((_OWORD *)v98 + 69);
                                                                                                                                *(_OWORD *)(v97 + 1113) = *(_OWORD *)(v98 + 1113);
                                                                                                                                goto LABEL_191;
                                                                                                                              }
                                                                                                                              sub_100083F00((_QWORD *)v97 + 134);
                                                                                                                            }
                                                                                                                            *((_OWORD *)v97 + 67) = *((_OWORD *)v98 + 67);
                                                                                                                            *(_OWORD *)(v97 + 1081) = *(_OWORD *)(v98 + 1081);
                                                                                                                            goto LABEL_186;
                                                                                                                          }
                                                                                                                          sub_100083F00((_QWORD *)v97 + 130);
                                                                                                                        }
                                                                                                                        *((_OWORD *)v97 + 65) = *((_OWORD *)v98 + 65);
                                                                                                                        *(_OWORD *)(v97 + 1049) = *(_OWORD *)(v98 + 1049);
                                                                                                                        goto LABEL_181;
                                                                                                                      }
                                                                                                                      sub_100083F00((_QWORD *)v97 + 126);
                                                                                                                    }
                                                                                                                    *((_OWORD *)v97 + 63) = *((_OWORD *)v98 + 63);
                                                                                                                    *(_OWORD *)(v97 + 1017) = *(_OWORD *)(v98 + 1017);
                                                                                                                    goto LABEL_176;
                                                                                                                  }
                                                                                                                  sub_100083F00((_QWORD *)v97 + 122);
                                                                                                                }
                                                                                                                *((_OWORD *)v97 + 61) = *((_OWORD *)v98 + 61);
                                                                                                                *(_OWORD *)(v97 + 985) = *(_OWORD *)(v98 + 985);
                                                                                                                goto LABEL_171;
                                                                                                              }
                                                                                                              sub_100083F00((_QWORD *)v97 + 118);
                                                                                                            }
                                                                                                            *((_OWORD *)v97 + 59) = *((_OWORD *)v98 + 59);
                                                                                                            *(_OWORD *)(v97 + 953) = *(_OWORD *)(v98 + 953);
                                                                                                            goto LABEL_166;
                                                                                                          }
                                                                                                          sub_100083F00((_QWORD *)v97 + 114);
                                                                                                        }
                                                                                                        *((_OWORD *)v97 + 57) = *((_OWORD *)v98 + 57);
                                                                                                        *(_OWORD *)(v97 + 921) = *(_OWORD *)(v98 + 921);
                                                                                                        goto LABEL_161;
                                                                                                      }
                                                                                                      sub_100083F00((_QWORD *)v97 + 110);
                                                                                                    }
                                                                                                    *((_OWORD *)v97 + 55) = *((_OWORD *)v98 + 55);
                                                                                                    *(_OWORD *)(v97 + 889) = *(_OWORD *)(v98 + 889);
                                                                                                    goto LABEL_156;
                                                                                                  }
                                                                                                  sub_100083F00((_QWORD *)v97 + 106);
                                                                                                }
                                                                                                *(_OWORD *)v152 = *(_OWORD *)v153;
                                                                                                *(_OWORD *)(v97 + 857) = *(_OWORD *)(v98 + 857);
                                                                                                goto LABEL_151;
                                                                                              }
                                                                                              sub_100083F00((_QWORD *)v97 + 90);
                                                                                            }
                                                                                            *((_OWORD *)v97 + 45) = *((_OWORD *)v98 + 45);
                                                                                            *(_OWORD *)(v97 + 729) = *(_OWORD *)(v98 + 729);
                                                                                            goto LABEL_136;
                                                                                          }
                                                                                          sub_100083F00((_QWORD *)v97 + 86);
                                                                                        }
                                                                                        *((_OWORD *)v97 + 43) = *((_OWORD *)v98 + 43);
                                                                                        *(_OWORD *)(v97 + 697) = *(_OWORD *)(v98 + 697);
                                                                                        goto LABEL_131;
                                                                                      }
                                                                                      sub_100083F00((_QWORD *)v97 + 82);
                                                                                    }
                                                                                    *((_OWORD *)v97 + 41) = *((_OWORD *)v98 + 41);
                                                                                    *(_OWORD *)(v97 + 665) = *(_OWORD *)(v98 + 665);
                                                                                    goto LABEL_126;
                                                                                  }
                                                                                  sub_100083F00((_QWORD *)v97 + 78);
                                                                                }
                                                                                *((_OWORD *)v97 + 39) = *((_OWORD *)v98 + 39);
                                                                                *(_OWORD *)(v97 + 633) = *(_OWORD *)(v98 + 633);
                                                                                goto LABEL_121;
                                                                              }
                                                                              sub_100083F00((_QWORD *)v97 + 74);
                                                                            }
                                                                            *((_OWORD *)v97 + 37) = *((_OWORD *)v98 + 37);
                                                                            *(_OWORD *)(v97 + 601) = *(_OWORD *)(v98 + 601);
                                                                            goto LABEL_116;
                                                                          }
                                                                          sub_100083F00((_QWORD *)v97 + 70);
                                                                        }
                                                                        *((_OWORD *)v97 + 35) = *((_OWORD *)v98 + 35);
                                                                        *(_OWORD *)(v97 + 569) = *(_OWORD *)(v98 + 569);
                                                                        goto LABEL_111;
                                                                      }
                                                                      sub_100083F00((_QWORD *)v97 + 66);
                                                                    }
                                                                    *((_OWORD *)v97 + 33) = *((_OWORD *)v98 + 33);
                                                                    *(_OWORD *)(v97 + 537) = *(_OWORD *)(v98 + 537);
                                                                    goto LABEL_106;
                                                                  }
                                                                  sub_100083F00((_QWORD *)v97 + 62);
                                                                }
                                                                *((_OWORD *)v97 + 31) = *((_OWORD *)v98 + 31);
                                                                *(_OWORD *)(v97 + 505) = *(_OWORD *)(v98 + 505);
                                                                goto LABEL_101;
                                                              }
                                                              sub_100083F00((_QWORD *)v97 + 58);
                                                            }
                                                            *((_OWORD *)v97 + 29) = *((_OWORD *)v98 + 29);
                                                            *(_OWORD *)(v97 + 473) = *(_OWORD *)(v98 + 473);
                                                            goto LABEL_96;
                                                          }
                                                          sub_100083F00((_QWORD *)v97 + 54);
                                                        }
                                                        *((_OWORD *)v97 + 27) = *((_OWORD *)v98 + 27);
                                                        *(_OWORD *)(v97 + 441) = *(_OWORD *)(v98 + 441);
                                                        goto LABEL_91;
                                                      }
                                                      sub_100083F00((_QWORD *)v97 + 50);
                                                    }
                                                    *((_OWORD *)v97 + 25) = *((_OWORD *)v98 + 25);
                                                    *(_OWORD *)(v97 + 409) = *(_OWORD *)(v98 + 409);
                                                    goto LABEL_86;
                                                  }
                                                  sub_100083F00((_QWORD *)v97 + 46);
                                                }
                                                *((_OWORD *)v97 + 23) = *((_OWORD *)v98 + 23);
                                                *(_OWORD *)(v97 + 377) = *(_OWORD *)(v98 + 377);
                                                goto LABEL_81;
                                              }
                                              sub_100083F00((_QWORD *)v97 + 42);
                                            }
                                            *((_OWORD *)v97 + 21) = *((_OWORD *)v98 + 21);
                                            *(_OWORD *)(v97 + 345) = *(_OWORD *)(v98 + 345);
                                            goto LABEL_76;
                                          }
                                          sub_100083F00((_QWORD *)v97 + 38);
                                        }
                                        *((_OWORD *)v97 + 19) = *((_OWORD *)v98 + 19);
                                        *(_OWORD *)(v97 + 313) = *(_OWORD *)(v98 + 313);
                                        goto LABEL_71;
                                      }
                                      sub_100083F00((_QWORD *)v97 + 34);
                                    }
                                    *((_OWORD *)v97 + 17) = *((_OWORD *)v98 + 17);
                                    *(_OWORD *)(v97 + 281) = *(_OWORD *)(v98 + 281);
                                    goto LABEL_66;
                                  }
                                  sub_100083F00((_QWORD *)v97 + 30);
                                }
                                *((_OWORD *)v97 + 15) = *((_OWORD *)v98 + 15);
                                *(_OWORD *)(v97 + 249) = *(_OWORD *)(v98 + 249);
                                goto LABEL_61;
                              }
                              sub_100083F00((_QWORD *)v97 + 26);
                            }
                            *((_OWORD *)v97 + 13) = *((_OWORD *)v98 + 13);
                            *(_OWORD *)(v97 + 217) = *(_OWORD *)(v98 + 217);
                            goto LABEL_56;
                          }
                          sub_100083F00((_QWORD *)v97 + 22);
                        }
                        *((_OWORD *)v97 + 11) = *((_OWORD *)v98 + 11);
                        *(_OWORD *)(v97 + 185) = *(_OWORD *)(v98 + 185);
                        goto LABEL_51;
                      }
                      sub_100083F00((_QWORD *)v97 + 18);
                    }
                    *((_OWORD *)v97 + 9) = *((_OWORD *)v98 + 9);
                    *(_OWORD *)(v97 + 153) = *(_OWORD *)(v98 + 153);
                    goto LABEL_46;
                  }
                  sub_100083F00((_QWORD *)v97 + 14);
                }
                *((_OWORD *)v97 + 7) = *((_OWORD *)v98 + 7);
                *(_OWORD *)(v97 + 121) = *(_OWORD *)(v98 + 121);
                goto LABEL_41;
              }
              sub_100083F00((_QWORD *)v97 + 10);
            }
            *((_OWORD *)v97 + 5) = *((_OWORD *)v98 + 5);
            *(_OWORD *)(v97 + 89) = *(_OWORD *)(v98 + 89);
            goto LABEL_36;
          }
          sub_100083F00((_QWORD *)v97 + 6);
        }
        *((_OWORD *)v97 + 3) = *((_OWORD *)v98 + 3);
        *(_OWORD *)(v97 + 57) = *(_OWORD *)(v98 + 57);
        goto LABEL_31;
      }
      sub_100083F00((_QWORD *)v97 + 2);
    }
    *(_OWORD *)v102 = *(_OWORD *)v101;
    *(_OWORD *)(v97 + 25) = *(_OWORD *)(v98 + 25);
    goto LABEL_26;
  }
LABEL_15:
  memcpy(v97, v98, 0x1719uLL);
LABEL_893:
  v460 = v46[39];
  v461 = *(_QWORD *)&v22[v460];
  *(_QWORD *)&v22[v460] = *(_QWORD *)&v23[v460];
  swift_bridgeObjectRelease(v461);
  v462 = v46[40];
  v463 = &v22[v462];
  v464 = &v23[v462];
  v466 = *(_QWORD *)v464;
  v465 = *((_QWORD *)v464 + 1);
  v467 = *((_QWORD *)v463 + 1);
  *(_QWORD *)v463 = v466;
  *((_QWORD *)v463 + 1) = v465;
  swift_bridgeObjectRelease(v467);
  v468 = v46[41];
  v469 = &v22[v468];
  v470 = &v23[v468];
  v472 = *(_QWORD *)v470;
  v471 = *((_QWORD *)v470 + 1);
  v473 = *((_QWORD *)v469 + 1);
  *(_QWORD *)v469 = v472;
  *((_QWORD *)v469 + 1) = v471;
  swift_bridgeObjectRelease(v473);
  return a1;
}

uint64_t sub_1001D8E94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001D8EA0);
}

uint64_t sub_1001D8EA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = type metadata accessor for Workflow(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v9);
  }
}

uint64_t sub_1001D8F28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001D8F34);
}

uint64_t sub_1001D8F34(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 24) = a2;
  }
  else
  {
    v7 = type metadata accessor for Workflow(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for WorkflowRecommendationResponse(uint64_t a1)
{
  uint64_t result;

  result = qword_100637C20;
  if (!qword_100637C20)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for WorkflowRecommendationResponse);
  return result;
}

uint64_t sub_1001D8FE4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for Workflow(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1001D9058(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1001D9098
                                                            + 4 * asc_100525960[a1]))(0x65736E6F70736572, 0xEE00726564616548);
}

uint64_t sub_1001D9098()
{
  return 0x776F6C666B726F77;
}

unint64_t sub_1001D90B0()
{
  return 0xD000000000000014;
}

unint64_t sub_1001D90D0()
{
  return 0xD000000000000011;
}

uint64_t sub_1001D911C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1001D915C + 4 * byte_100525966[a1]))(0x65736E6F70736572, 0xEE00726564616548);
}

uint64_t sub_1001D915C()
{
  return 0x776F6C666B726F77;
}

unint64_t sub_1001D9174()
{
  return 0xD000000000000014;
}

unint64_t sub_1001D9194()
{
  return 0xD000000000000011;
}

void sub_1001D91E0(char *a1)
{
  sub_1003C0018(*a1);
}

void sub_1001D91EC()
{
  char *v0;

  sub_1003C2578(*v0);
}

void sub_1001D91F4(uint64_t a1)
{
  char *v1;

  sub_100228084(a1, *v1);
}

void sub_1001D91FC(uint64_t a1)
{
  char *v1;

  sub_1003C324C(a1, *v1);
}

unint64_t sub_1001D9204@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1001DC984(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1001D9230@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1001D9058(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1001D9258()
{
  unsigned __int8 *v0;

  return sub_1001D911C(*v0);
}

unint64_t sub_1001D9260@<X0>(Swift::String a1@<X1:X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1001DC984(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1001D9284(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001D981C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001D92AC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001D981C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001D92D4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __n128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  unint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  unint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  _QWORD *v57;
  _BYTE v58[5920];
  uint64_t v59[739];
  char v60;
  _OWORD v61[371];
  uint64_t v62;

  v50 = a2;
  v51 = type metadata accessor for Workflow(0);
  __chkstk_darwin(v51);
  v53 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_100004828(&qword_100637C58);
  v4 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_100004828(&qword_100637C60);
  v7 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin(v54);
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = type metadata accessor for WorkflowRecommendationResponse(0);
  __chkstk_darwin(v55);
  v11 = (uint64_t *)((char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  *((_OWORD *)v11 + 4) = 0u;
  *((_OWORD *)v11 + 5) = 0u;
  *((_OWORD *)v11 + 2) = 0u;
  *((_OWORD *)v11 + 3) = 0u;
  *(_OWORD *)v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  v13 = a1[3];
  v12 = a1[4];
  v57 = a1;
  sub_10000806C(a1, v13);
  v14 = sub_1001D981C();
  v56 = v9;
  v15 = v62;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for WorkflowRecommendationResponse.CodingKeys, &type metadata for WorkflowRecommendationResponse.CodingKeys, v14, v13, v12);
  if (v15)
  {
    _s8coreidvd24DigitalPresentmentHelperVwxx_0(v57);
    return sub_1001D9860(*v11, v11[1], v11[2], v11[3], v11[4], v11[5], v11[6], v11[7], v11[8], v11[9], v11[10], v11[11]);
  }
  else
  {
    v16 = v6;
    v49 = v4;
    v18 = v52;
    v17 = (uint64_t)v53;
    v62 = v7;
    LOBYTE(v59[0]) = 0;
    v19 = sub_1001D98D0();
    v20 = v54;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v61, &type metadata for ResponseHeader, v59, v54, &type metadata for ResponseHeader, v19, v21);
    v22 = v61[1];
    *(_OWORD *)v11 = v61[0];
    *((_OWORD *)v11 + 1) = v22;
    v23 = v61[3];
    *((_OWORD *)v11 + 2) = v61[2];
    *((_OWORD *)v11 + 3) = v23;
    v24 = v61[5];
    *((_OWORD *)v11 + 4) = v61[4];
    *((_OWORD *)v11 + 5) = v24;
    LOBYTE(v61[0]) = 1;
    v25 = sub_1001D9914();
    KeyedDecodingContainer.decode<A>(_:forKey:)(v16, v18, v61, v20, v18, v25);
    JWSSignedJSON.payload.getter(v18);
    (*(void (**)(_QWORD *, uint64_t))(v49 + 8))(v16, v18);
    v27 = (uint64_t)v11 + *(int *)(v55 + 20);
    sub_1001D9960(v17, v27);
    LOBYTE(v61[0]) = 3;
    v28 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(v61, v20);
    v30 = v29;
    v31 = (int *)v51;
    v32 = (uint64_t *)(v27 + *(int *)(v51 + 160));
    swift_bridgeObjectRelease(v32[1]);
    *v32 = v28;
    v32[1] = v30;
    v33 = sub_100004828(&qword_1006368D0);
    LOBYTE(v59[0]) = 4;
    v34 = sub_1001D99A4();
    v35 = v54;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v61, v33, v59, v54, v33, v34, v36);
    v37 = *(_QWORD *)&v61[0];
    v38 = v31[39];
    swift_bridgeObjectRelease(*(_QWORD *)(v27 + v38));
    *(_QWORD *)(v27 + v38) = v37;
    LOBYTE(v61[0]) = 5;
    v39 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(v61, v35);
    v41 = v40;
    v42 = v31[41];
    v53 = (char *)v27;
    v43 = (uint64_t *)(v27 + v42);
    swift_bridgeObjectRelease(*(_QWORD *)(v27 + v42 + 8));
    *v43 = v39;
    v43[1] = v41;
    v60 = 2;
    v44 = sub_1001D9A00();
    v45 = v54;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v61, &type metadata for IQModel, &v60, v54, &type metadata for IQModel, v44, v46);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v56, v45);
    sub_1001D9A44((uint64_t)v61, (uint64_t)v58);
    v47 = (uint64_t)&v53[v31[38]];
    sub_1001D9A44(v47, (uint64_t)v59);
    sub_1001D9A8C(v59);
    sub_1001D9A44((uint64_t)v58, v47);
    sub_1001DC79C((uint64_t)v11, v50);
    _s8coreidvd24DigitalPresentmentHelperVwxx_0(v57);
    return sub_100035DAC((uint64_t)v11, type metadata accessor for WorkflowRecommendationResponse);
  }
}

uint64_t sub_1001D9808@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001D92D4(a1, a2);
}

unint64_t sub_1001D981C()
{
  unint64_t result;

  result = qword_100637C68;
  if (!qword_100637C68)
  {
    result = swift_getWitnessTable(&unk_100525B04, &type metadata for WorkflowRecommendationResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100637C68);
  }
  return result;
}

uint64_t sub_1001D9860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t result;

  if (a4)
  {
    swift_bridgeObjectRelease(a4);
    swift_bridgeObjectRelease(a6);
    swift_bridgeObjectRelease(a8);
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a10);
    return swift_bridgeObjectRelease(a12);
  }
  return result;
}

unint64_t sub_1001D98D0()
{
  unint64_t result;

  result = qword_100637C70;
  if (!qword_100637C70)
  {
    result = swift_getWitnessTable(&unk_100527F74, &type metadata for ResponseHeader);
    atomic_store(result, (unint64_t *)&qword_100637C70);
  }
  return result;
}

unint64_t sub_1001D9914()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100637C78;
  if (!qword_100637C78)
  {
    v1 = sub_100013E24(&qword_100637C58);
    result = swift_getWitnessTable(&protocol conformance descriptor for JWSSignedJSON<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100637C78);
  }
  return result;
}

uint64_t sub_1001D9960(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Workflow(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1001D99A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1006322A8;
  if (!qword_1006322A8)
  {
    v1 = sub_100013E24(&qword_1006368D0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_1006322A8);
  }
  return result;
}

unint64_t sub_1001D9A00()
{
  unint64_t result;

  result = qword_100637C80;
  if (!qword_100637C80)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for IQModel, &type metadata for IQModel);
    atomic_store(result, (unint64_t *)&qword_100637C80);
  }
  return result;
}

uint64_t sub_1001D9A44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100004828(&qword_1006322D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1001D9A8C(uint64_t *a1)
{
  sub_10008FDDC(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23],
    a1[24],
    a1[25],
    a1[26],
    a1[27],
    a1[28],
    a1[29],
    a1[30],
    a1[31],
    a1[32],
    a1[33],
    a1[34],
    a1[35],
    a1[36],
    a1[37],
    a1[38],
    a1[39],
    a1[40],
    a1[41],
    a1[42],
    a1[43],
    a1[44],
    a1[45],
    a1[46],
    a1[47],
    a1[48],
    a1[49],
    a1[50],
    a1[51],
    a1[52],
    a1[53],
    a1[54],
    a1[55],
    a1[56],
    a1[57],
    a1[58],
    a1[59],
    a1[60],
    a1[61],
    a1[62]);
  return a1;
}

uint64_t sub_1001DC79C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WorkflowRecommendationResponse(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for WorkflowRecommendationResponse.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1001DC82C + 4 * byte_100525971[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1001DC860 + 4 * byte_10052596C[v4]))();
}

uint64_t sub_1001DC860(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001DC868(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001DC870);
  return result;
}

uint64_t sub_1001DC87C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001DC884);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1001DC888(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001DC890(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkflowRecommendationResponse.CodingKeys()
{
  return &type metadata for WorkflowRecommendationResponse.CodingKeys;
}

unint64_t sub_1001DC8B0()
{
  unint64_t result;

  result = qword_100637C88;
  if (!qword_100637C88)
  {
    result = swift_getWitnessTable(&unk_100525ADC, &type metadata for WorkflowRecommendationResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100637C88);
  }
  return result;
}

unint64_t sub_1001DC8F8()
{
  unint64_t result;

  result = qword_100637C90;
  if (!qword_100637C90)
  {
    result = swift_getWitnessTable(&unk_100525A14, &type metadata for WorkflowRecommendationResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100637C90);
  }
  return result;
}

unint64_t sub_1001DC940()
{
  unint64_t result;

  result = qword_100637C98;
  if (!qword_100637C98)
  {
    result = swift_getWitnessTable(&unk_100525A3C, &type metadata for WorkflowRecommendationResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100637C98);
  }
  return result;
}

unint64_t sub_1001DC984(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1006012C8, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 6)
    return 6;
  else
    return v3;
}

_QWORD *sub_1001DC9CC(_QWORD *result)
{
  if (__OFADD__(*result, 1))
    __break(1u);
  else
    ++*result;
  return result;
}

_QWORD *sub_1001DC9E4(_QWORD *result)
{
  if (__OFSUB__(*result, 1))
    __break(1u);
  else
    --*result;
  return result;
}

uint64_t type metadata accessor for ThreadSafeUploadTracker()
{
  return objc_opt_self(_TtC8coreidvd23ThreadSafeUploadTracker);
}

uint64_t sub_1001DCA1C@<X0>(uint64_t *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  unsigned int v24;
  unint64_t v25;
  int v26;
  unint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  void *v34;
  char *v35;
  id v36;
  char *v37;
  id v38;
  id v39;
  void *v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  char *v61;
  id v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  unint64_t v68;
  uint8_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint8_t *v73;
  char *v74;
  uint64_t v75;
  NSObject *v76;
  os_log_type_t v77;
  uint8_t *v78;
  id v79;
  char v80;
  char v81;
  char v82;
  id v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  id v87;
  void *v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  id v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  NSObject *v96;
  os_log_type_t v97;
  uint64_t v98;
  uint8_t *v99;
  uint64_t v100;
  uint64_t result;
  uint64_t v102;
  NSObject *v103;
  os_log_type_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  char *v110;
  char *v111;
  char *v112;
  char *v113;
  char *v114;
  id v115;
  uint64_t *v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD v119[3];
  char v120[16];
  id v121;
  unint64_t v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;

  v116 = a1;
  v8 = type metadata accessor for Logger(0);
  v117 = *(_QWORD *)(v8 - 8);
  v118 = v8;
  v9 = __chkstk_darwin(v8);
  v111 = (char *)&v109 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v113 = (char *)&v109 - v12;
  v13 = __chkstk_darwin(v11);
  v110 = (char *)&v109 - v14;
  v15 = __chkstk_darwin(v13);
  v114 = (char *)&v109 - v16;
  __chkstk_darwin(v15);
  v112 = (char *)&v109 - v17;
  v18 = type metadata accessor for AuditToken(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v109 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v4 + OBJC_IVAR____TtC8coreidvd40DigitalPresentmentCallingAppDataProvider_auditToken, v18);
  v23 = AuditToken.wrapped.getter(v22);
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v31 = HIDWORD(v23);
  v32 = HIDWORD(v25);
  v33 = HIDWORD(v27);
  v115 = (id)HIDWORD(v29);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  v34 = (void *)objc_opt_self(LSBundleRecord);
  v121 = 0;
  v122 = __PAIR64__(v31, v24);
  v123 = v26;
  v124 = v32;
  v125 = v28;
  v126 = v33;
  v127 = v30;
  v128 = (int)v115;
  v35 = (char *)objc_msgSend(v34, "bundleRecordForAuditToken:error:", &v122, &v121);
  v36 = v121;
  if (!v35)
  {
    v44 = v121;
    v45 = _convertNSErrorToError(_:)(v36);

    v47 = swift_willThrow(v46);
    v48 = v112;
    defaultLogger()(v47);
    swift_errorRetain(v45);
    v49 = swift_errorRetain(v45);
    v50 = Logger.logObject.getter(v49);
    v51 = static os_log_type_t.debug.getter(v50);
    if (os_log_type_enabled(v50, v51))
    {
      v52 = (uint8_t *)swift_slowAlloc(12, -1);
      v53 = swift_slowAlloc(32, -1);
      v122 = v53;
      *(_DWORD *)v52 = 136315138;
      swift_getErrorValue(v45, v120, v119);
      v54 = Error.localizedDescription.getter(v119[1], v119[2]);
      v56 = v55;
      v121 = (id)sub_1000E3AC8(v54, v55, (uint64_t *)&v122);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v121, &v122, v52 + 4);
      swift_bridgeObjectRelease(v56);
      swift_errorRelease(v45);
      swift_errorRelease(v45);
      _os_log_impl((void *)&_mh_execute_header, v50, v51, "Received an error while retrieving the LSApplicationRecord: %s", v52, 0xCu);
      swift_arrayDestroy(v53, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v53, -1, -1);
      swift_slowDealloc(v52, -1, -1);

      swift_errorRelease(v45);
    }
    else
    {
      swift_errorRelease(v45);
      swift_errorRelease(v45);
      swift_errorRelease(v45);

    }
    goto LABEL_25;
  }
  v37 = v35;
  v38 = v121;
  v39 = objc_msgSend(v37, "applicationIdentifier");
  if (v39)
  {
    v40 = v39;
    v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
    v43 = v42;

  }
  else
  {
    v43 = 0xE500000000000000;
    v41 = 0x3E6C696E3CLL;
  }
  v57 = v114;
  v58 = objc_opt_self(LSApplicationRecord);
  v59 = swift_dynamicCastObjCClass(v37, v58);
  if (v59)
  {
    v60 = (void *)v59;
    v61 = v37;
    v62 = objc_msgSend(v60, "appClipMetadata");

    v64 = v62 != 0;
    if (v62)
    {
      defaultLogger()(v63);
      v65 = swift_bridgeObjectRetain_n(v43, 2);
      v66 = Logger.logObject.getter(v65);
      v67 = static os_log_type_t.debug.getter(v66);
      if (os_log_type_enabled(v66, v67))
      {
        LODWORD(v115) = v64;
        v68 = v43;
        v69 = (uint8_t *)swift_slowAlloc(12, -1);
        v70 = swift_slowAlloc(32, -1);
        v112 = v61;
        v71 = v70;
        v122 = v70;
        *(_DWORD *)v69 = 136315138;
        swift_bridgeObjectRetain(v68);
        v121 = (id)sub_1000E3AC8(v41, v68, (uint64_t *)&v122);
        LOBYTE(v64) = (_BYTE)v115;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v121, &v122, v69 + 4);
        swift_bridgeObjectRelease_n(v68, 3);
        _os_log_impl((void *)&_mh_execute_header, v66, v67, "The application identifier %s is associated with an App Clip", v69, 0xCu);
        swift_arrayDestroy(v71, 1, (char *)&type metadata for Any + 8);
        v72 = v71;
        v61 = v112;
        swift_slowDealloc(v72, -1, -1);
        v73 = v69;
        v43 = v68;
        swift_slowDealloc(v73, -1, -1);

        (*(void (**)(char *, uint64_t))(v117 + 8))(v114, v118);
      }
      else
      {

        swift_bridgeObjectRelease_n(v43, 2);
        (*(void (**)(char *, uint64_t))(v117 + 8))(v57, v118);
      }
    }
    v79 = sub_1001DD6B4(v60);
    v82 = v81;

    v80 = v82 & 1;
  }
  else
  {
    v74 = v110;
    v75 = defaultLogger()(0);
    v76 = Logger.logObject.getter(v75);
    v77 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v76, v77))
    {
      v78 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v78 = 0;
      _os_log_impl((void *)&_mh_execute_header, v76, v77, "Unable to cast bundle record to application record. Calling process is not an app.", v78, 2u);
      swift_slowDealloc(v78, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v117 + 8))(v74, v118);
    LOBYTE(v64) = 0;
    v79 = 0;
    v80 = 1;
  }
  v83 = objc_msgSend(v37, "localizedName");
  v84 = static String._unconditionallyBridgeFromObjectiveC(_:)(v83);
  v86 = v85;

  v87 = objc_msgSend(v37, "bundleIdentifier");
  if (!v87)
  {
    v115 = (id)v41;
    v48 = v111;
    defaultLogger()(0);
    swift_bridgeObjectRetain(v43);
    swift_bridgeObjectRetain(v86);
    v103 = Logger.logObject.getter(v102);
    v104 = static os_log_type_t.debug.getter(v103);
    if (os_log_type_enabled(v103, v104))
    {
      v105 = v43;
      v106 = swift_slowAlloc(22, -1);
      v107 = swift_slowAlloc(64, -1);
      v122 = v107;
      *(_DWORD *)v106 = 136315394;
      swift_bridgeObjectRetain(v86);
      v121 = (id)sub_1000E3AC8(v84, v86, (uint64_t *)&v122);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v121, &v122, v106 + 4);
      swift_bridgeObjectRelease_n(v86, 3);
      *(_WORD *)(v106 + 12) = 2080;
      swift_bridgeObjectRetain(v105);
      v121 = (id)sub_1000E3AC8((uint64_t)v115, v105, (uint64_t *)&v122);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v121, &v122, v106 + 14);
      swift_bridgeObjectRelease_n(v105, 3);
      _os_log_impl((void *)&_mh_execute_header, v103, v104, "Bundle identifier for %s with application identifier %s does not exist", (uint8_t *)v106, 0x16u);
      swift_arrayDestroy(v107, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v107, -1, -1);
      swift_slowDealloc(v106, -1, -1);

      result = (*(uint64_t (**)(char *, uint64_t))(v117 + 8))(v111, v118);
LABEL_26:
      v84 = 0;
      v86 = 0;
      v92 = 0;
      v79 = 0;
      v80 = 0;
      goto LABEL_27;
    }

    swift_bridgeObjectRelease_n(v43, 2);
    swift_bridgeObjectRelease_n(v86, 2);

LABEL_25:
    result = (*(uint64_t (**)(char *, uint64_t))(v117 + 8))(v48, v118);
    goto LABEL_26;
  }
  v88 = v87;
  swift_bridgeObjectRelease(v43);
  v89 = static String._unconditionallyBridgeFromObjectiveC(_:)(v88);
  v91 = v90;

  v92 = sub_1001DD8D4(v89, v91, v64, a2, a3, a4);
  v93 = swift_bridgeObjectRelease(v91);
  v94 = v113;
  defaultLogger()(v93);
  v95 = swift_bridgeObjectRetain_n(v86, 2);
  v96 = Logger.logObject.getter(v95);
  v97 = static os_log_type_t.debug.getter(v96);
  if (os_log_type_enabled(v96, v97))
  {
    v115 = v79;
    v98 = swift_slowAlloc(12, -1);
    v114 = v37;
    v99 = (uint8_t *)v98;
    v100 = swift_slowAlloc(32, -1);
    v122 = v100;
    *(_DWORD *)v99 = 136315138;
    swift_bridgeObjectRetain(v86);
    v121 = (id)sub_1000E3AC8(v84, v86, (uint64_t *)&v122);
    v79 = v115;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v121, &v122, v99 + 4);
    swift_bridgeObjectRelease_n(v86, 3);
    _os_log_impl((void *)&_mh_execute_header, v96, v97, "App name of the calling app is %s", v99, 0xCu);
    swift_arrayDestroy(v100, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v100, -1, -1);
    swift_slowDealloc(v99, -1, -1);

    result = (*(uint64_t (**)(char *, uint64_t))(v117 + 8))(v113, v118);
  }
  else
  {

    swift_bridgeObjectRelease_n(v86, 2);
    result = (*(uint64_t (**)(char *, uint64_t))(v117 + 8))(v94, v118);
  }
LABEL_27:
  v108 = v116;
  *v116 = v84;
  v108[1] = v86;
  v108[2] = (uint64_t)v92;
  v108[3] = (uint64_t)v79;
  *((_BYTE *)v108 + 32) = v80;
  return result;
}

uint64_t sub_1001DD478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8coreidvd40DigitalPresentmentCallingAppDataProvider_auditToken;
  v2 = type metadata accessor for AuditToken(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1001DD4C8()
{
  return type metadata accessor for DigitalPresentmentCallingAppDataProvider(0);
}

uint64_t type metadata accessor for DigitalPresentmentCallingAppDataProvider(uint64_t a1)
{
  uint64_t result;

  result = qword_100637D70;
  if (!qword_100637D70)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DigitalPresentmentCallingAppDataProvider);
  return result;
}

uint64_t sub_1001DD50C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for AuditToken(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 1, &v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

void destroy for DigitalPresentmentCallingAppData(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));

}

uint64_t initializeWithCopy for DigitalPresentmentCallingAppData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v5 = *(void **)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain(v3);
  v6 = v5;
  return a1;
}

uint64_t assignWithCopy for DigitalPresentmentCallingAppData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = *(void **)(a1 + 16);
  v7 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  v8 = v7;

  v9 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v9;
  return a1;
}

uint64_t assignWithTake for DigitalPresentmentCallingAppData(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for DigitalPresentmentCallingAppData()
{
  return &type metadata for DigitalPresentmentCallingAppData;
}

id sub_1001DD6B4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  os_log_type_t v17;
  uint64_t v19;
  id v20;
  uint64_t v21;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v19 - v7;
  v9 = objc_msgSend(a1, "iTunesMetadata");
  v10 = objc_msgSend(v9, "storeItemIdentifier");

  if (!v10)
  {
    v16 = defaultLogger()(v11);
    v13 = Logger.logObject.getter(v16);
    v17 = static os_log_type_t.debug.getter();
    if (!os_log_type_enabled(v13, v17))
    {
      v8 = v6;
      goto LABEL_8;
    }
    v15 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v15 = 134217984;
    v20 = 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21, v15 + 4);
    _os_log_impl((void *)&_mh_execute_header, v13, v17, "adamIdentifier of the %llu app is 0.", v15, 0xCu);
    v8 = v6;
    goto LABEL_6;
  }
  v12 = defaultLogger()(v11);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v15 = 134217984;
    v20 = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21, v15 + 4);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "adamIdentifier of the calling app is %llu.", v15, 0xCu);
LABEL_6:
    swift_slowDealloc(v15, -1, -1);
  }
LABEL_8:

  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  return v10;
}

id sub_1001DD8D4(uint64_t a1, unint64_t a2, char a3, double a4, double a5, double a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  NSObject *v26;
  NSObject *v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  NSString v36;
  NSObject *v37;
  id v38;
  void *v39;
  NSObject *v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  NSObject *v48;
  void (*v49)(char *, uint64_t);
  id v50;
  char *v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  _BOOL4 v55;
  NSObject *v56;
  uint8_t *v57;
  id v58;
  id v59;
  char *v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  _BOOL4 v64;
  NSObject *v65;
  uint8_t *v66;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  NSObject *v73;
  uint64_t v74;
  uint64_t v75;

  v12 = type metadata accessor for Logger(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v14);
  v72 = (char *)&v68 - v18;
  v19 = __chkstk_darwin(v17);
  v71 = (char *)&v68 - v20;
  v21 = __chkstk_darwin(v19);
  v23 = (char *)&v68 - v22;
  __chkstk_darwin(v21);
  v25 = (char *)&v68 - v24;
  v26 = objc_msgSend(objc_allocWithZone((Class)ISImageDescriptor), "initWithSize:scale:", a4, a5, a6);
  v27 = v26;
  if ((a3 & 1) != 0)
  {
    v70 = v13;
    defaultLogger()(v26);
    v28 = swift_bridgeObjectRetain_n(a2, 2);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.debug.getter(v29);
    if (os_log_type_enabled(v29, v30))
    {
      v69 = v12;
      v31 = (uint8_t *)swift_slowAlloc(12, -1);
      v32 = swift_slowAlloc(32, -1);
      v73 = v27;
      v33 = v32;
      v75 = v32;
      v68 = v16;
      *(_DWORD *)v31 = 136315138;
      swift_bridgeObjectRetain(a2);
      v74 = sub_1000E3AC8(a1, a2, &v75);
      v16 = v68;
      v12 = v69;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v74, &v75, v31 + 4);
      swift_bridgeObjectRelease_n(a2, 3);
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "The bundleIdentifier %s is of an App Clip. Setting the icon shape to RoundedRect.", v31, 0xCu);
      swift_arrayDestroy(v33, 1, (char *)&type metadata for Any + 8);
      v34 = v33;
      v27 = v73;
      swift_slowDealloc(v34, -1, -1);
      swift_slowDealloc(v31, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a2, 2);
    }
    v13 = v70;
    (*(void (**)(char *, uint64_t))(v70 + 8))(v25, v12);
    -[NSObject setShape:](v27, "setShape:", 1);
  }
  v35 = objc_allocWithZone((Class)ISIcon);
  swift_bridgeObjectRetain(a2);
  v36 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v37 = objc_msgSend(v35, "initWithBundleIdentifier:", v36);

  v38 = -[NSObject imageForDescriptor:](v37, "imageForDescriptor:", v27);
  if (v38)
  {
    v39 = v38;
    v73 = v27;
    defaultLogger()(v38);
    v40 = v39;
    v41 = Logger.logObject.getter(v40);
    v42 = static os_log_type_t.debug.getter(v41);
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v43 = 67109120;
      LODWORD(v75) = -[NSObject placeholder](v40, "placeholder");
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, (char *)&v75 + 4, v43 + 4);

      _os_log_impl((void *)&_mh_execute_header, v41, v42, "image.placeholder -> %{BOOL}d", v43, 8u);
      swift_slowDealloc(v43, -1, -1);
    }
    else
    {

      v41 = v40;
    }

    v49 = *(void (**)(char *, uint64_t))(v13 + 8);
    v49(v23, v12);
    v50 = -[NSObject placeholder](v40, "placeholder");
    if ((_DWORD)v50)
    {
      v51 = v71;
      v52 = defaultLogger()(v50);
      v53 = Logger.logObject.getter(v52);
      v54 = static os_log_type_t.debug.getter(v53);
      v55 = os_log_type_enabled(v53, v54);
      v56 = v73;
      if (v55)
      {
        v57 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v57 = 0;
        _os_log_impl((void *)&_mh_execute_header, v53, v54, "cached image icon doesnt exist. Will attempt to prepare the image", v57, 2u);
        swift_slowDealloc(v57, -1, -1);
      }

      v49(v51, v12);
      v58 = -[NSObject prepareImageForDescriptor:](v37, "prepareImageForDescriptor:", v56);
      v59 = objc_msgSend(v58, "CGImage");

    }
    else
    {
      v60 = v72;
      v61 = defaultLogger()(v50);
      v62 = Logger.logObject.getter(v61);
      v63 = static os_log_type_t.debug.getter(v62);
      v64 = os_log_type_enabled(v62, v63);
      v65 = v73;
      if (v64)
      {
        v66 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v66 = 0;
        _os_log_impl((void *)&_mh_execute_header, v62, v63, "Returning a cached image icon", v66, 2u);
        swift_slowDealloc(v66, -1, -1);
      }

      v49(v60, v12);
      v59 = -[NSObject CGImage](v40, "CGImage");

    }
  }
  else
  {
    v44 = defaultLogger()(0);
    v45 = Logger.logObject.getter(v44);
    v46 = static os_log_type_t.debug.getter(v45);
    if (os_log_type_enabled(v45, v46))
    {
      v47 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v47 = 0;
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "Image icon for the descriptor doesn't exist", v47, 2u);
      swift_slowDealloc(v47, -1, -1);
      v48 = v27;
    }
    else
    {
      v48 = v45;
      v45 = v37;
      v37 = v27;
    }

    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    return 0;
  }
  return v59;
}

uint64_t sub_1001DDF34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;

  *(_QWORD *)(v7 + 520) = v6;
  *(_QWORD *)(v7 + 504) = a6;
  *(_QWORD *)(v7 + 512) = v20;
  *(_BYTE *)(v7 + 832) = v19;
  *(_QWORD *)(v7 + 488) = a4;
  *(_QWORD *)(v7 + 496) = a5;
  *(_QWORD *)(v7 + 472) = a2;
  *(_QWORD *)(v7 + 480) = a3;
  *(_QWORD *)(v7 + 464) = a1;
  v8 = type metadata accessor for IdentityProofingAttributeConfiguration(0);
  *(_QWORD *)(v7 + 528) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v7 + 536) = v9;
  *(_QWORD *)(v7 + 544) = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Logger(0);
  *(_QWORD *)(v7 + 552) = v10;
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v7 + 560) = v11;
  v12 = (*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v7 + 568) = swift_task_alloc(v12);
  *(_QWORD *)(v7 + 576) = swift_task_alloc(v12);
  *(_QWORD *)(v7 + 584) = swift_task_alloc(v12);
  *(_QWORD *)(v7 + 592) = swift_task_alloc(v12);
  *(_QWORD *)(v7 + 600) = swift_task_alloc(v12);
  *(_QWORD *)(v7 + 608) = swift_task_alloc(v12);
  v13 = type metadata accessor for DIPError.Code(0);
  *(_QWORD *)(v7 + 616) = v13;
  v14 = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v7 + 624) = v14;
  *(_QWORD *)(v7 + 632) = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100004828(&qword_100632BF8);
  *(_QWORD *)(v7 + 640) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for WorkflowRecommendationResponse(0);
  *(_QWORD *)(v7 + 648) = v16;
  v17 = *(_QWORD *)(v16 - 8);
  *(_QWORD *)(v7 + 656) = v17;
  *(_QWORD *)(v7 + 664) = swift_task_alloc((*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001DE08C, 0, 0);
}

uint64_t sub_1001DE08C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  void *v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  _BOOL4 v52;
  uint64_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint8_t *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  NSObject *v85;
  os_log_type_t v86;
  _BOOL4 v87;
  uint64_t v88;
  uint64_t v89;
  uint8_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  NSObject *v103;
  os_log_type_t v104;
  _BOOL4 v105;
  uint64_t v106;
  uint64_t v107;
  uint8_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  NSObject *v121;
  os_log_type_t v122;
  uint8_t *v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD *type;
  os_log_type_t typeb[8];
  os_log_type_t typea;
  uint64_t v136;
  _QWORD *v137;
  uint64_t v138;
  uint64_t (*v139)(uint64_t, uint64_t);
  uint64_t v140;
  uint64_t v141[2];

  if (!*(_QWORD *)(v0 + 504))
  {
    v7 = *(_QWORD *)(v0 + 632);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 624) + 104))(v7, enum case for DIPError.Code.idStateUnavailable(_:), *(_QWORD *)(v0 + 616));
    v8 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v9 = type metadata accessor for DIPError(0);
    v10 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    swift_allocError(v9, v10, 0, 0);
    v11 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000004DLL, 0x8000000100553220, 0, v7, 0, v8, 0xD000000000000087, 0x80000001005530B0, 0xD000000000000067, 0x8000000100553270, 47);
    swift_willThrow(v11);
LABEL_14:
    v72 = *(_QWORD *)(v0 + 640);
    v73 = *(_QWORD *)(v0 + 632);
    v74 = *(_QWORD *)(v0 + 608);
    v75 = *(_QWORD *)(v0 + 600);
    v76 = *(_QWORD *)(v0 + 592);
    v77 = *(_QWORD *)(v0 + 584);
    v78 = *(_QWORD *)(v0 + 576);
    v79 = *(_QWORD *)(v0 + 568);
    v80 = *(_QWORD *)(v0 + 544);
    swift_task_dealloc(*(_QWORD *)(v0 + 664));
    swift_task_dealloc(v72);
    swift_task_dealloc(v73);
    swift_task_dealloc(v74);
    swift_task_dealloc(v75);
    swift_task_dealloc(v76);
    swift_task_dealloc(v77);
    swift_task_dealloc(v78);
    swift_task_dealloc(v79);
    swift_task_dealloc(v80);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v1 = *(_QWORD *)(v0 + 520);
  v2 = *(_QWORD *)(v0 + 488);
  v4 = *(_QWORD *)(v0 + 472);
  v3 = *(_QWORD *)(v0 + 480);
  v5 = String.lowercased()();
  *(_QWORD *)(v0 + 672) = v5._object;
  v6 = *(_QWORD *)(v1 + 16);
  swift_retain(v6);
  v12 = sub_1003CF620(v4, v3, v2, 0);
  v140 = v0 + 200;
  v13 = *(_QWORD *)(v0 + 656);
  v14 = *(_QWORD *)(v0 + 648);
  v15 = *(_QWORD *)(v0 + 640);
  swift_release(v6);
  swift_bridgeObjectRelease(v12);
  v16 = *(_QWORD *)(v1 + 16);
  v17 = v16 + OBJC_IVAR____TtC8coreidvd34IdentityProofingPendingActionsFlow_workflowRecommendationResponse;
  swift_beginAccess(v16 + OBJC_IVAR____TtC8coreidvd34IdentityProofingPendingActionsFlow_workflowRecommendationResponse, v0 + 408, 0, 0);
  sub_100038B24(v17, v15, &qword_100632BF8);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v15, 1, v14);
  if (v18 == 1)
  {
    v19 = *(_QWORD *)(v0 + 640);
    v20 = *(_QWORD *)(v0 + 632);
    v21 = *(_QWORD *)(v0 + 624);
    v22 = *(_QWORD *)(v0 + 616);
    swift_retain(v16);
    sub_100008030(v19, &qword_100632BF8);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v21 + 104))(v20, enum case for DIPError.Code.topekaInternalServerError(_:), v22);
    v23 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v24 = type metadata accessor for DIPError(0);
    v25 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    v26 = swift_allocError(v24, v25, 0, 0);
    v27 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000002DLL, 0x80000001005438E0, 0, v20, 0, v23, 0xD000000000000087, 0x8000000100543910, 0x726F576863746566, 0xEF2928776F6C466BLL, 931);
    swift_willThrow(v27);
    swift_bridgeObjectRelease(v5._object);
    swift_release(v16);
    v28 = 0;
    v29 = (_QWORD *)(v0 + 200);
    goto LABEL_12;
  }
  v30 = *(_QWORD *)(v0 + 664);
  v31 = *(_QWORD *)(v0 + 648);
  sub_1000A80EC(*(_QWORD *)(v0 + 640), v30);
  v32 = v30 + *(int *)(v31 + 20);
  *(_QWORD *)(v0 + 304) = type metadata accessor for Workflow(0);
  *(_QWORD *)(v0 + 312) = &off_10061A0B0;
  v33 = sub_100022234((_QWORD *)(v0 + 280));
  sub_1000A8130(v32, (uint64_t)v33);
  sub_1000A8174(v30);
  v29 = (_QWORD *)(v0 + 200);
  sub_100008018((__int128 *)(v0 + 280), v140);
  v34 = *(_QWORD *)(v1 + 16);
  v35 = *(void **)(v34 + OBJC_IVAR____TtC8coreidvd34IdentityProofingPendingActionsFlow_livenessStepUpConfig);
  *(_QWORD *)(v0 + 680) = v35;
  if (!v35)
  {
    v62 = *(_QWORD *)(v0 + 632);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 624) + 104))(v62, enum case for DIPError.Code.missingLivenessStepUpConfig(_:), *(_QWORD *)(v0 + 616));
    swift_retain(v34);
    v63 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v64 = type metadata accessor for DIPError(0);
    v65 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    v26 = swift_allocError(v64, v65, 0, 0);
    v66 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000023, 0x8000000100553320, 0, v62, 0, v63, 0xD000000000000087, 0x8000000100543910, 0xD00000000000001BLL, 0x8000000100553350, 943);
    swift_willThrow(v66);
    swift_bridgeObjectRelease(v5._object);
    swift_release(v34);
    v28 = 1;
LABEL_12:
    v67 = *(_QWORD *)(v0 + 632);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 624) + 104))(v67, enum case for DIPError.Code.internalError(_:), *(_QWORD *)(v0 + 616));
    swift_errorRetain(v26);
    v68 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v69 = type metadata accessor for DIPError(0);
    v70 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    swift_allocError(v69, v70, 0, 0);
    v71 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000030, 0x80000001005532E0, v26, v67, 0, v68, 0xD000000000000087, 0x80000001005530B0, 0xD000000000000067, 0x8000000100553270, 85);
    swift_willThrow(v71);
    swift_errorRelease(v26);
    if (v28)
      _s8coreidvd24DigitalPresentmentHelperVwxx_0(v29);
    goto LABEL_14;
  }
  v131 = v0 + 456;
  type = (_QWORD *)(v0 + 320);
  v36 = *(void **)(v34 + OBJC_IVAR____TtC8coreidvd34IdentityProofingPendingActionsFlow_livenessStepUpIQSettings);
  *(_QWORD *)(v0 + 688) = v36;
  v37 = v36;
  v38 = v35;
  v39 = v37;
  v40 = defaultLogger()(v38);
  v41 = Logger.logObject.getter(v40);
  v42 = static os_log_type_t.debug.getter(v41);
  if (os_log_type_enabled(v41, v42))
  {
    v43 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v43 = 0;
    _os_log_impl((void *)&_mh_execute_header, v41, v42, "-----BEGIN LOGGING SAVED WORKFLOW-----", v43, 2u);
    swift_slowDealloc(v43, -1, -1);
  }
  v136 = v0 + 448;
  v137 = (_QWORD *)(v0 + 240);
  v44 = *(_QWORD *)(v0 + 608);
  v45 = *(_QWORD *)(v0 + 560);
  v46 = *(_QWORD *)(v0 + 552);

  v47 = *(uint64_t (**)(uint64_t, uint64_t))(v45 + 8);
  *(_QWORD *)(v0 + 696) = v47;
  v48 = v47(v44, v46);
  defaultLogger()(v48);
  v49 = sub_10002581C(v140, v0 + 160);
  v50 = Logger.logObject.getter(v49);
  v51 = static os_log_type_t.debug.getter(v50);
  v52 = os_log_type_enabled(v50, v51);
  v53 = *(_QWORD *)(v0 + 600);
  v129 = *(_QWORD *)(v0 + 552);
  v139 = v47;
  if (v52)
  {
    v128 = *(_QWORD *)(v0 + 600);
    v54 = (uint8_t *)swift_slowAlloc(12, -1);
    v127 = swift_slowAlloc(32, -1);
    v141[0] = v127;
    *(_DWORD *)v54 = 136446210;
    v55 = *(_QWORD *)(v0 + 184);
    v56 = *(_QWORD *)(v0 + 192);
    sub_10000806C((_QWORD *)(v0 + 160), v55);
    v57 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v56 + 8) + 8))(v55);
    v59 = v58;
    *(_QWORD *)(v0 + 456) = sub_1000E3AC8(v57, v58, v141);
    v29 = (_QWORD *)(v0 + 200);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v131, v0 + 464, v54 + 4);
    swift_bridgeObjectRelease(v59);
    _s8coreidvd24DigitalPresentmentHelperVwxx_0((_QWORD *)(v0 + 160));
    _os_log_impl((void *)&_mh_execute_header, v50, v51, " WORKFLOWID: %{public}s", v54, 0xCu);
    swift_arrayDestroy(v127, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v127, -1, -1);
    v60 = v54;
    v47 = v139;
    swift_slowDealloc(v60, -1, -1);

    v61 = v128;
  }
  else
  {
    _s8coreidvd24DigitalPresentmentHelperVwxx_0((_QWORD *)(v0 + 160));

    v61 = v53;
  }
  v82 = v47(v61, v129);
  v83 = (_QWORD *)(v0 + 320);
  defaultLogger()(v82);
  v84 = sub_10002581C((uint64_t)v29, (uint64_t)type);
  v85 = Logger.logObject.getter(v84);
  v86 = static os_log_type_t.debug.getter(v85);
  v87 = os_log_type_enabled(v85, v86);
  v88 = *(_QWORD *)(v0 + 592);
  v89 = *(_QWORD *)(v0 + 552);
  if (v87)
  {
    *(_QWORD *)typeb = *(_QWORD *)(v0 + 592);
    v130 = *(_QWORD *)(v0 + 552);
    v90 = (uint8_t *)swift_slowAlloc(12, -1);
    v91 = swift_slowAlloc(32, -1);
    v141[0] = v91;
    *(_DWORD *)v90 = 136446210;
    v93 = *(_QWORD *)(v0 + 344);
    v92 = *(_QWORD *)(v0 + 352);
    sub_10000806C(v83, v93);
    v94 = v93;
    v47 = v139;
    v95 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v92 + 8) + 16))(v94);
    v97 = v96;
    *(_QWORD *)(v0 + 448) = sub_1000E3AC8(v95, v96, v141);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v136, v131, v90 + 4);
    swift_bridgeObjectRelease(v97);
    _s8coreidvd24DigitalPresentmentHelperVwxx_0(v83);
    _os_log_impl((void *)&_mh_execute_header, v85, v86, " PROVIDERID: %{public}s", v90, 0xCu);
    swift_arrayDestroy(v91, 1, (char *)&type metadata for Any + 8);
    v98 = v91;
    v29 = (_QWORD *)(v0 + 200);
    swift_slowDealloc(v98, -1, -1);
    swift_slowDealloc(v90, -1, -1);

    v99 = *(_QWORD *)typeb;
    v100 = v130;
  }
  else
  {
    _s8coreidvd24DigitalPresentmentHelperVwxx_0(type);

    v99 = v88;
    v100 = v89;
  }
  v101 = v47(v99, v100);
  defaultLogger()(v101);
  v102 = sub_10002581C((uint64_t)v29, (uint64_t)v137);
  v103 = Logger.logObject.getter(v102);
  v104 = static os_log_type_t.debug.getter(v103);
  v105 = os_log_type_enabled(v103, v104);
  v106 = *(_QWORD *)(v0 + 584);
  v107 = *(_QWORD *)(v0 + 552);
  if (v105)
  {
    v138 = *(_QWORD *)(v0 + 584);
    typea = v104;
    v108 = (uint8_t *)swift_slowAlloc(12, -1);
    v132 = swift_slowAlloc(32, -1);
    v141[0] = v132;
    *(_DWORD *)v108 = 136446210;
    v109 = *(_QWORD *)(v0 + 264);
    v110 = *(_QWORD *)(v0 + 272);
    sub_10000806C((_QWORD *)(v0 + 240), v109);
    v111 = (*(uint64_t (**)(uint64_t, uint64_t))(v110 + 104))(v109, v110);
    if (v111)
      v112 = (_QWORD *)v111;
    else
      v112 = _swiftEmptyArrayStorage;
    v113 = Array.description.getter(v112, &type metadata for Page);
    v115 = v114;
    swift_bridgeObjectRelease(v112);
    v116 = v113;
    v29 = (_QWORD *)(v0 + 200);
    *(_QWORD *)(v0 + 440) = sub_1000E3AC8(v116, v115, v141);
    v47 = v139;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 440, v136, v108 + 4);
    swift_bridgeObjectRelease(v115);
    _s8coreidvd24DigitalPresentmentHelperVwxx_0((_QWORD *)(v0 + 240));
    _os_log_impl((void *)&_mh_execute_header, v103, typea, " PAGINATION: %{public}s", v108, 0xCu);
    swift_arrayDestroy(v132, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v132, -1, -1);
    swift_slowDealloc(v108, -1, -1);

    v117 = v138;
    v118 = v107;
  }
  else
  {
    _s8coreidvd24DigitalPresentmentHelperVwxx_0(v137);

    v117 = v106;
    v118 = v107;
  }
  v119 = v47(v117, v118);
  v120 = defaultLogger()(v119);
  v121 = Logger.logObject.getter(v120);
  v122 = static os_log_type_t.debug.getter(v121);
  if (os_log_type_enabled(v121, v122))
  {
    v123 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v123 = 0;
    _os_log_impl((void *)&_mh_execute_header, v121, v122, "-----END LOGGING SAVED WORKFLOW-----", v123, 2u);
    swift_slowDealloc(v123, -1, -1);
  }
  v124 = *(_QWORD *)(v0 + 576);
  v125 = *(_QWORD *)(v0 + 552);

  v47(v124, v125);
  v126 = (_QWORD *)swift_task_alloc(dword_100637E5C);
  *(_QWORD *)(v0 + 704) = v126;
  *v126 = v0;
  v126[1] = sub_1001DED30;
  return sub_1001E04E8((uint64_t)v29, v5._countAndFlagsBits, (uint64_t)v5._object, *(_BYTE *)(v0 + 832));
}

uint64_t sub_1001DED30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t (*v7)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 704);
  v3[89] = a1;
  v3[90] = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = (void *)v3[86];
    v6 = (void *)v3[85];
    swift_bridgeObjectRelease(v3[84]);

    v7 = sub_1001DFF24;
  }
  else
  {
    swift_bridgeObjectRelease(v3[84]);
    v7 = sub_1001DEDC8;
  }
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_1001DEDC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  void *v54;
  uint64_t v55;

  v1 = v0 + 200;
  v2 = *(_QWORD *)(v0 + 712);
  if ((unint64_t)v2 >> 62)
  {
    if (v2 < 0)
      v29 = *(_QWORD *)(v0 + 712);
    else
      v29 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + 712));
    v30 = _CocoaArrayWrapper.endIndex.getter(v29);
    swift_bridgeObjectRelease(v2);
    if (v30 >= 1)
      goto LABEL_3;
LABEL_14:
    v31 = *(void **)(v0 + 680);
    v32 = *(_QWORD *)(v0 + 632);
    v33 = *(_QWORD *)(v0 + 624);
    v34 = *(_QWORD *)(v0 + 616);

    (*(void (**)(uint64_t, _QWORD, uint64_t))(v33 + 104))(v32, enum case for DIPError.Code.invalidWorkflowPackage(_:), v34);
    v35 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v36 = type metadata accessor for DIPError(0);
    v37 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    v38 = swift_allocError(v36, v37, 0, 0);
    v39 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000034, 0x80000001005439A0, 0, v32, 0, v35, 0xD000000000000087, 0x80000001005530B0, 0xD000000000000067, 0x8000000100553270, 68);
    swift_willThrow(v39);
    v54 = *(void **)(v0 + 688);
    v52 = *(_QWORD *)(v0 + 712);
    v53 = *(void **)(v0 + 680);
    v40 = *(_QWORD *)(v0 + 632);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 624) + 104))(v40, enum case for DIPError.Code.internalError(_:), *(_QWORD *)(v0 + 616));
    swift_errorRetain(v38);
    v41 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    swift_allocError(v36, v37, 0, 0);
    v42 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000030, 0x80000001005532E0, v38, v40, 0, v41, 0xD000000000000087, 0x80000001005530B0, 0xD000000000000067, 0x8000000100553270, 85);
    swift_willThrow(v42);
    swift_errorRelease(v38);
    swift_bridgeObjectRelease(v52);

    _s8coreidvd24DigitalPresentmentHelperVwxx_0((_QWORD *)(v0 + 200));
    v43 = *(_QWORD *)(v0 + 640);
    v44 = *(_QWORD *)(v0 + 632);
    v45 = *(_QWORD *)(v0 + 608);
    v46 = *(_QWORD *)(v0 + 600);
    v47 = *(_QWORD *)(v0 + 592);
    v48 = *(_QWORD *)(v0 + 584);
    v49 = *(_QWORD *)(v0 + 576);
    v50 = *(_QWORD *)(v0 + 568);
    v51 = *(_QWORD *)(v0 + 544);
    swift_task_dealloc(*(_QWORD *)(v0 + 664));
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    swift_task_dealloc(v49);
    swift_task_dealloc(v50);
    swift_task_dealloc(v51);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if (*(uint64_t *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
    goto LABEL_14;
LABEL_3:
  v3 = *(_QWORD *)(v0 + 520);
  v4 = *(_QWORD *)(v3 + 40) + OBJC_IVAR____TtC8coreidvd35IdentityProofingFetchedAssetManager_identityKeyPair;
  swift_beginAccess(v4, v0 + 360, 0, 0);
  sub_100038B24(v4, v0 + 64, &qword_100637FA8);
  v5 = *(_QWORD *)(v0 + 88);
  v6 = sub_100008030(v0 + 64, &qword_100637FA8);
  if (v5
    && (v7 = *(_QWORD *)(*(_QWORD *)(v0 + 520) + 32) + 160,
        swift_beginAccess(v7, v0 + 384, 0, 0),
        sub_100038B24(v7, v0 + 112, &qword_100637FA8),
        v8 = *(_QWORD *)(v0 + 136),
        v6 = sub_100008030(v0 + 112, &qword_100637FA8),
        v8))
  {
    v9 = *(_QWORD *)(*(_QWORD *)(v0 + 520) + 24);
    *(_QWORD *)(v0 + 800) = v9;
    v10 = *(_QWORD *)(v0 + 224);
    v11 = *(_QWORD *)(v0 + 232);
    sub_10000806C((_QWORD *)(v0 + 200), v10);
    v12 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 96);
    swift_retain(v9);
    v13 = v12(v10, v11);
    *(_QWORD *)(v0 + 808) = v13;
    v14 = (_QWORD *)swift_task_alloc(dword_100634C0C);
    *(_QWORD *)(v0 + 816) = v14;
    *v14 = v0;
    v14[1] = sub_1001DF900;
    return sub_1000FE8D8(*(_QWORD *)(v0 + 544), v13);
  }
  else
  {
    v16 = defaultLogger()(v6);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.debug.getter(v17);
    v19 = os_log_type_enabled(v17, v18);
    v20 = *(void (**)(uint64_t, uint64_t))(v0 + 696);
    v21 = *(_QWORD *)(v0 + 568);
    v22 = *(_QWORD *)(v0 + 552);
    if (v19)
    {
      v23 = (uint8_t *)swift_slowAlloc(12, -1);
      v24 = swift_slowAlloc(32, -1);
      v55 = v24;
      *(_DWORD *)v23 = 136315138;
      *(_QWORD *)(v0 + 432) = sub_1000E3AC8(0xD000000000000067, 0x8000000100553270, &v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 432, v0 + 440, v23 + 4);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "%s missing identitykeys, refetching", v23, 0xCu);
      swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v24, -1, -1);
      v25 = v23;
      v1 = v0 + 200;
      swift_slowDealloc(v25, -1, -1);

      v20(v21, v22);
    }
    else
    {

      v20(v21, v22);
    }
    v26 = *(_QWORD *)(v3 + 40);
    *(_QWORD *)(v0 + 728) = v26;
    v27 = dword_100640F3C;
    swift_retain(v26);
    v28 = (_QWORD *)swift_task_alloc(v27);
    *(_QWORD *)(v0 + 736) = v28;
    *v28 = v0;
    v28[1] = sub_1001DF3A4;
    return sub_100431248(v0 + 16, v1, 0);
  }
}

uint64_t sub_1001DF3A4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t (*v7)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 736);
  *(_QWORD *)(*(_QWORD *)v1 + 744) = v0;
  swift_task_dealloc(v3);
  v4 = v2[91];
  if (v0)
  {
    v5 = (void *)v2[86];
    v6 = (void *)v2[85];
    swift_release(v4);

    v7 = sub_1001E0100;
  }
  else
  {
    swift_release(v4);
    v7 = sub_1001DF424;
  }
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_1001DF424()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;

  v1 = *(_QWORD *)(v0 + 744);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  sub_10000806C((_QWORD *)(v0 + 16), v2);
  v4 = dispatch thunk of IdentityKey.getIdentityPublicKeyData()(v2, v3);
  *(_QWORD *)(v0 + 752) = v4;
  *(_QWORD *)(v0 + 760) = v5;
  if (v1)
  {
    v6 = v1;
    v7 = *(void **)(v0 + 680);

    sub_1001A496C((_QWORD *)(v0 + 16));
    v8 = *(_QWORD *)(v0 + 712);
    v9 = *(void **)(v0 + 688);
    v10 = *(void **)(v0 + 680);
    v11 = *(_QWORD *)(v0 + 632);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 624) + 104))(v11, enum case for DIPError.Code.internalError(_:), *(_QWORD *)(v0 + 616));
    swift_errorRetain(v6);
    v12 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v13 = type metadata accessor for DIPError(0);
    v14 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    swift_allocError(v13, v14, 0, 0);
    v15 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000030, 0x80000001005532E0, v6, v11, 0, v12, 0xD000000000000087, 0x80000001005530B0, 0xD000000000000067, 0x8000000100553270, 85);
    swift_willThrow(v15);
    swift_errorRelease(v6);
    swift_bridgeObjectRelease(v8);

    _s8coreidvd24DigitalPresentmentHelperVwxx_0((_QWORD *)(v0 + 200));
    v16 = *(_QWORD *)(v0 + 640);
    v17 = *(_QWORD *)(v0 + 632);
    v18 = *(_QWORD *)(v0 + 608);
    v19 = *(_QWORD *)(v0 + 600);
    v20 = *(_QWORD *)(v0 + 592);
    v21 = *(_QWORD *)(v0 + 584);
    v22 = *(_QWORD *)(v0 + 576);
    v23 = *(_QWORD *)(v0 + 568);
    v24 = *(_QWORD *)(v0 + 544);
    swift_task_dealloc(*(_QWORD *)(v0 + 664));
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v26 = v4;
    v27 = v5;
    v28 = *(_QWORD *)(*(_QWORD *)(v0 + 520) + 40);
    v29 = swift_retain(v28);
    v30 = (id)PKPassKitCoreBundle(v29);
    v31 = type metadata accessor for SupplementalDeviceDataFetcher();
    swift_allocObject(v31, 168, 7);
    sub_100022948(v26, v27);
    v32 = sub_100105868(63, v26, v27, v30);
    v33 = OBJC_IVAR____TtC8coreidvd35IdentityProofingFetchedAssetManager_supplementalDataFetcher;
    v34 = *(_QWORD *)(v28 + OBJC_IVAR____TtC8coreidvd35IdentityProofingFetchedAssetManager_supplementalDataFetcher);
    *(_QWORD *)(v28 + OBJC_IVAR____TtC8coreidvd35IdentityProofingFetchedAssetManager_supplementalDataFetcher) = v32;
    swift_release(v34);
    v35 = *(_QWORD *)(v28 + v33);
    if (v35)
    {
      swift_retain(v35);
      sub_100105A2C();
      swift_release(v28);
      v28 = v35;
    }
    v36 = *(_QWORD *)(v0 + 520);
    swift_release(v28);
    v37 = *(_QWORD *)(v36 + 32);
    *(_QWORD *)(v0 + 768) = v37;
    v38 = *(_QWORD *)(*(_QWORD *)(v36 + 40)
                    + OBJC_IVAR____TtC8coreidvd35IdentityProofingFetchedAssetManager_supplementalDataFetcher);
    *(_QWORD *)(v0 + 776) = v38;
    v39 = dword_1006391CC;
    swift_retain(v37);
    swift_retain(v38);
    v40 = (_QWORD *)swift_task_alloc(v39);
    *(_QWORD *)(v0 + 784) = v40;
    *v40 = v0;
    v40[1] = sub_1001DF780;
    return sub_10022284C(v0 + 200, v0 + 16, 0, v38);
  }
}

uint64_t sub_1001DF780()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t (*v8)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 784);
  *(_QWORD *)(*(_QWORD *)v1 + 792) = v0;
  swift_task_dealloc(v3);
  v4 = v2[97];
  v5 = v2[96];
  if (v0)
  {
    v6 = (void *)v2[86];
    v7 = (void *)v2[85];
    swift_release(v5);
    swift_release(v4);

    v8 = sub_1001E02E8;
  }
  else
  {
    swift_release(v5);
    swift_release(v4);
    v8 = sub_1001DF81C;
  }
  return swift_task_switch(v8, 0, 0);
}

uint64_t sub_1001DF81C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  _QWORD *v8;

  v1 = v0[65];
  sub_100007F8C(v0[94], v0[95]);
  v2 = *(_QWORD *)(v1 + 32);
  swift_retain(v2);
  sub_1001A496C(v0 + 2);
  *(_BYTE *)(v2 + 152) = 1;
  swift_release(v2);
  v3 = *(_QWORD *)(v0[65] + 24);
  v0[100] = v3;
  v4 = v0[28];
  v5 = v0[29];
  sub_10000806C(v0 + 25, v4);
  v6 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 96);
  swift_retain(v3);
  v7 = v6(v4, v5);
  v0[101] = v7;
  v8 = (_QWORD *)swift_task_alloc(dword_100634C0C);
  v0[102] = v8;
  *v8 = v0;
  v8[1] = sub_1001DF900;
  return sub_1000FE8D8(v0[68], v7);
}

uint64_t sub_1001DF900()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 816);
  *(_QWORD *)(*(_QWORD *)v1 + 824) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1001DFCD4;
  else
    v3 = sub_1001DF964;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001DF964()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v34;
  char v35;
  int v36;
  char v37;
  char v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v1 = *(_QWORD *)(v0 + 824);
  v2 = *(_QWORD *)(v0 + 544);
  v3 = *(_QWORD *)(v0 + 528);
  v4 = type metadata accessor for JSONEncoder(0);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v5 = JSONEncoder.init()();
  v6 = sub_100004790(&qword_100632C00, (uint64_t (*)(uint64_t))&type metadata accessor for IdentityProofingAttributeConfiguration, (uint64_t)&protocol conformance descriptor for IdentityProofingAttributeConfiguration);
  v7 = dispatch thunk of JSONEncoder.encode<A>(_:)(v2, v3, v6);
  v9 = *(_QWORD *)(v0 + 808);
  if (v1)
  {
    v10 = *(_QWORD *)(v0 + 712);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 536) + 8))(*(_QWORD *)(v0 + 544), *(_QWORD *)(v0 + 528));
    swift_release(v5);
    swift_bridgeObjectRelease(v10);
    swift_bridgeObjectRelease(v9);
    v11 = *(void **)(v0 + 688);
    v12 = *(void **)(v0 + 680);
    swift_release(*(_QWORD *)(v0 + 800));

    v13 = sub_100004828(&qword_100640C30);
    v14 = swift_allocObject(v13, 40, 7);
    *(_OWORD *)(v14 + 16) = xmmword_100523860;
    v15 = objc_allocWithZone((Class)type metadata accessor for IdentityProofingUIConfig(0));
    v40 = 1;
    v39 = 1;
    v38 = 1;
    v16 = IdentityProofingUIConfig.init(view:title:subTitle:url:primaryButtonTitle:secondaryButtonTitle:tertiaryButtonTitle:messages:fields:caption:minLength:maxLength:placeholder:displayName:imageAssetsData:options:isUIEnabled:)(0xD000000000000015, 0x8000000100543A40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            v38,
            0,
            v39,
            0,
            0,
            0,
            0,
            0,
            0,
            v40);
    *(_QWORD *)(v14 + 32) = v16;
    specialized Array._endMutation()(v16);
    v17 = objc_allocWithZone((Class)type metadata accessor for IdentityProofingDisplayInfo(0));
    LOBYTE(v36) = 2;
    LOBYTE(v34) = 1;
    v45 = IdentityProofingDisplayInfo.init(proofingUI:docScan:attributeConfig:learnMoreURL:waitingForWiFiAlertDataThresholdInBytes:lowDataModeAlertDataThresholdInBytes:idType:featureEnablementConfig:supportedRegions:livenessStepUpConfig:livenessStepUpIQSettings:shouldPreFetchLivenessConfig:)(v14, 0, 0, 0xF000000000000000, 0, 0, 0, 1, 0, v34, 0, 0, 0, _swiftEmptyArrayStorage, 0, 0, v36);
    swift_errorRelease(v1);
  }
  else
  {
    v18 = v7;
    v19 = v8;
    v20 = *(_QWORD *)(v0 + 800);
    v21 = *(_QWORD *)(v0 + 712);
    v22 = *(_QWORD *)(v0 + 688);
    v23 = *(_QWORD *)(v0 + 680);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 536) + 8))(*(_QWORD *)(v0 + 544), *(_QWORD *)(v0 + 528));
    swift_release(v5);
    swift_bridgeObjectRelease(v9);
    swift_release(v20);
    v24 = objc_allocWithZone((Class)type metadata accessor for IdentityProofingDisplayInfo(0));
    v37 = 2;
    v35 = 1;
    v45 = IdentityProofingDisplayInfo.init(proofingUI:docScan:attributeConfig:learnMoreURL:waitingForWiFiAlertDataThresholdInBytes:lowDataModeAlertDataThresholdInBytes:idType:featureEnablementConfig:supportedRegions:livenessStepUpConfig:livenessStepUpIQSettings:shouldPreFetchLivenessConfig:)(v21, 0, v18, v19, 0, 0, 0, 1, 0, v35, 0, 0, 0, _swiftEmptyArrayStorage, v23, v22, v37);
  }
  v25 = *(void **)(v0 + 680);
  v26 = *(_QWORD *)(v0 + 664);
  v27 = *(_QWORD *)(v0 + 640);
  v28 = *(_QWORD *)(v0 + 632);
  v29 = *(_QWORD *)(v0 + 608);
  v30 = *(_QWORD *)(v0 + 600);
  v31 = *(_QWORD *)(v0 + 592);
  v41 = *(_QWORD *)(v0 + 584);
  v42 = *(_QWORD *)(v0 + 576);
  v43 = *(_QWORD *)(v0 + 568);
  v44 = *(_QWORD *)(v0 + 544);
  v32 = *(_QWORD *)(v0 + 464);

  sub_10002581C(v0 + 200, v32);
  _s8coreidvd24DigitalPresentmentHelperVwxx_0((_QWORD *)(v0 + 200));
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v45);
}

uint64_t sub_1001DFCD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v20;
  int v21;
  char v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = *(_QWORD *)(v0 + 808);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 712));
  swift_bridgeObjectRelease(v1);
  v2 = *(_QWORD *)(v0 + 824);
  v3 = *(void **)(v0 + 688);
  v4 = *(void **)(v0 + 680);
  swift_release(*(_QWORD *)(v0 + 800));

  v5 = sub_100004828(&qword_100640C30);
  v6 = swift_allocObject(v5, 40, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100523860;
  v7 = objc_allocWithZone((Class)type metadata accessor for IdentityProofingUIConfig(0));
  v24 = 1;
  v23 = 1;
  v22 = 1;
  v8 = IdentityProofingUIConfig.init(view:title:subTitle:url:primaryButtonTitle:secondaryButtonTitle:tertiaryButtonTitle:messages:fields:caption:minLength:maxLength:placeholder:displayName:imageAssetsData:options:isUIEnabled:)(0xD000000000000015, 0x8000000100543A40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         v22,
         0,
         v23,
         0,
         0,
         0,
         0,
         0,
         0,
         v24);
  *(_QWORD *)(v6 + 32) = v8;
  specialized Array._endMutation()(v8);
  v9 = objc_allocWithZone((Class)type metadata accessor for IdentityProofingDisplayInfo(0));
  LOBYTE(v21) = 2;
  LOBYTE(v20) = 1;
  v28 = IdentityProofingDisplayInfo.init(proofingUI:docScan:attributeConfig:learnMoreURL:waitingForWiFiAlertDataThresholdInBytes:lowDataModeAlertDataThresholdInBytes:idType:featureEnablementConfig:supportedRegions:livenessStepUpConfig:livenessStepUpIQSettings:shouldPreFetchLivenessConfig:)(v6, 0, 0, 0xF000000000000000, 0, 0, 0, 1, 0, v20, 0, 0, 0, _swiftEmptyArrayStorage, 0, 0, v21);
  swift_errorRelease(v2);
  v10 = *(void **)(v0 + 680);
  v11 = *(_QWORD *)(v0 + 664);
  v12 = *(_QWORD *)(v0 + 640);
  v13 = *(_QWORD *)(v0 + 632);
  v14 = *(_QWORD *)(v0 + 608);
  v15 = *(_QWORD *)(v0 + 600);
  v16 = *(_QWORD *)(v0 + 592);
  v17 = *(_QWORD *)(v0 + 584);
  v25 = *(_QWORD *)(v0 + 576);
  v26 = *(_QWORD *)(v0 + 568);
  v27 = *(_QWORD *)(v0 + 544);
  v18 = *(_QWORD *)(v0 + 464);

  sub_10002581C(v0 + 200, v18);
  _s8coreidvd24DigitalPresentmentHelperVwxx_0((_QWORD *)(v0 + 200));
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v28);
}

uint64_t sub_1001DFF24()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 720);
  v2 = *(void **)(v0 + 688);
  v3 = *(void **)(v0 + 680);
  v4 = *(_QWORD *)(v0 + 632);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 624) + 104))(v4, enum case for DIPError.Code.internalError(_:), *(_QWORD *)(v0 + 616));
  swift_errorRetain(v1);
  v5 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
  v6 = type metadata accessor for DIPError(0);
  v7 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
  swift_allocError(v6, v7, 0, 0);
  v8 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000030, 0x80000001005532E0, v1, v4, 0, v5, 0xD000000000000087, 0x80000001005530B0, 0xD000000000000067, 0x8000000100553270, 85);
  swift_willThrow(v8);
  swift_errorRelease(v1);

  _s8coreidvd24DigitalPresentmentHelperVwxx_0((_QWORD *)(v0 + 200));
  v9 = *(_QWORD *)(v0 + 640);
  v10 = *(_QWORD *)(v0 + 632);
  v11 = *(_QWORD *)(v0 + 608);
  v12 = *(_QWORD *)(v0 + 600);
  v13 = *(_QWORD *)(v0 + 592);
  v14 = *(_QWORD *)(v0 + 584);
  v15 = *(_QWORD *)(v0 + 576);
  v16 = *(_QWORD *)(v0 + 568);
  v17 = *(_QWORD *)(v0 + 544);
  swift_task_dealloc(*(_QWORD *)(v0 + 664));
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001E0100()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 744);
  v2 = *(_QWORD *)(v0 + 712);
  v3 = *(void **)(v0 + 688);
  v4 = *(void **)(v0 + 680);
  v5 = *(_QWORD *)(v0 + 632);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 624) + 104))(v5, enum case for DIPError.Code.internalError(_:), *(_QWORD *)(v0 + 616));
  swift_errorRetain(v1);
  v6 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
  v7 = type metadata accessor for DIPError(0);
  v8 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
  swift_allocError(v7, v8, 0, 0);
  v9 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000030, 0x80000001005532E0, v1, v5, 0, v6, 0xD000000000000087, 0x80000001005530B0, 0xD000000000000067, 0x8000000100553270, 85);
  swift_willThrow(v9);
  swift_errorRelease(v1);
  swift_bridgeObjectRelease(v2);

  _s8coreidvd24DigitalPresentmentHelperVwxx_0((_QWORD *)(v0 + 200));
  v10 = *(_QWORD *)(v0 + 640);
  v11 = *(_QWORD *)(v0 + 632);
  v12 = *(_QWORD *)(v0 + 608);
  v13 = *(_QWORD *)(v0 + 600);
  v14 = *(_QWORD *)(v0 + 592);
  v15 = *(_QWORD *)(v0 + 584);
  v16 = *(_QWORD *)(v0 + 576);
  v17 = *(_QWORD *)(v0 + 568);
  v18 = *(_QWORD *)(v0 + 544);
  swift_task_dealloc(*(_QWORD *)(v0 + 664));
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001E02E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_100007F8C(*(_QWORD *)(v0 + 752), *(_QWORD *)(v0 + 760));
  sub_1001A496C((_QWORD *)(v0 + 16));
  v1 = *(_QWORD *)(v0 + 792);
  v2 = *(_QWORD *)(v0 + 712);
  v3 = *(void **)(v0 + 688);
  v4 = *(void **)(v0 + 680);
  v5 = *(_QWORD *)(v0 + 632);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 624) + 104))(v5, enum case for DIPError.Code.internalError(_:), *(_QWORD *)(v0 + 616));
  swift_errorRetain(v1);
  v6 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
  v7 = type metadata accessor for DIPError(0);
  v8 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
  swift_allocError(v7, v8, 0, 0);
  v9 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000030, 0x80000001005532E0, v1, v5, 0, v6, 0xD000000000000087, 0x80000001005530B0, 0xD000000000000067, 0x8000000100553270, 85);
  swift_willThrow(v9);
  swift_errorRelease(v1);
  swift_bridgeObjectRelease(v2);

  _s8coreidvd24DigitalPresentmentHelperVwxx_0((_QWORD *)(v0 + 200));
  v10 = *(_QWORD *)(v0 + 640);
  v11 = *(_QWORD *)(v0 + 632);
  v12 = *(_QWORD *)(v0 + 608);
  v13 = *(_QWORD *)(v0 + 600);
  v14 = *(_QWORD *)(v0 + 592);
  v15 = *(_QWORD *)(v0 + 584);
  v16 = *(_QWORD *)(v0 + 576);
  v17 = *(_QWORD *)(v0 + 568);
  v18 = *(_QWORD *)(v0 + 544);
  swift_task_dealloc(*(_QWORD *)(v0 + 664));
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001E04E8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  *(_BYTE *)(v5 + 768) = a4;
  *(_QWORD *)(v5 + 472) = a3;
  *(_QWORD *)(v5 + 480) = v4;
  *(_QWORD *)(v5 + 456) = a1;
  *(_QWORD *)(v5 + 464) = a2;
  v6 = type metadata accessor for DIPError.Code(0);
  *(_QWORD *)(v5 + 488) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 496) = v7;
  *(_QWORD *)(v5 + 504) = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Logger(0);
  *(_QWORD *)(v5 + 512) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v5 + 520) = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v5 + 528) = swift_task_alloc(v10);
  *(_QWORD *)(v5 + 536) = swift_task_alloc(v10);
  *(_QWORD *)(v5 + 544) = swift_task_alloc(v10);
  *(_QWORD *)(v5 + 552) = swift_task_alloc(v10);
  return swift_task_switch(sub_1001E05A0, 0, 0);
}

uint64_t sub_1001E05A0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  _QWORD *v20;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 456);
  v2 = v1[3];
  v3 = v1[4];
  sub_10000806C(v1, v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 104))(v2, v3);
  *(_QWORD *)(v0 + 560) = v4;
  if (!v4)
    goto LABEL_7;
  if (!*(_QWORD *)(v4 + 16))
  {
    swift_bridgeObjectRelease(v4);
LABEL_7:
    v22 = *(_QWORD *)(v0 + 504);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 496) + 104))(v22, enum case for DIPError.Code.workflowPaginationUnavailable(_:), *(_QWORD *)(v0 + 488));
    v23 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v24 = type metadata accessor for DIPError(0);
    v25 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    swift_allocError(v24, v25, 0, 0);
    v26 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001FLL, 0x80000001005435C0, 0, v22, 0, v23, 0xD000000000000087, 0x80000001005530B0, 0xD00000000000002DLL, 0x8000000100553140, 109);
    swift_willThrow(v26);
    v27 = *(_QWORD *)(v0 + 544);
    v28 = *(_QWORD *)(v0 + 536);
    v29 = *(_QWORD *)(v0 + 528);
    v30 = *(_QWORD *)(v0 + 504);
    swift_task_dealloc(*(_QWORD *)(v0 + 552));
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v5 = defaultLogger()(v4);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.debug.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Fetch activeConfig from prepareProofingUI", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }
  v9 = *(_QWORD *)(v0 + 552);
  v10 = *(_QWORD *)(v0 + 520);
  v11 = *(_QWORD *)(v0 + 512);
  v12 = *(_QWORD *)(v0 + 480);
  v13 = *(_QWORD **)(v0 + 456);

  v14 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  *(_QWORD *)(v0 + 568) = v14;
  v14(v9, v11);
  v15 = *(_QWORD *)(v12 + 24);
  *(_QWORD *)(v0 + 576) = v15;
  v17 = v1[3];
  v16 = v1[4];
  sub_10000806C(v13, v17);
  v18 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 96);
  swift_retain(v15);
  v19 = v18(v17, v16);
  *(_QWORD *)(v0 + 584) = v19;
  v31 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_100634CA0 + dword_100634CA0);
  v20 = (_QWORD *)swift_task_alloc(unk_100634CA4);
  *(_QWORD *)(v0 + 592) = v20;
  *v20 = v0;
  v20[1] = sub_1001E088C;
  return v31(v0 + 16, v19);
}

uint64_t sub_1001E088C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(*v1 + 592);
  v3 = *v1;
  swift_task_dealloc(v2);
  v4 = *(_QWORD *)(v3 + 584);
  v5 = *(_QWORD *)(v3 + 576);
  if (v0)
  {
    v6 = *(_QWORD *)(v3 + 560);
    swift_bridgeObjectRelease(*(_QWORD *)(v3 + 584));
    swift_release(v5);
    swift_bridgeObjectRelease(v6);
    v7 = *(_QWORD *)(v3 + 544);
    v8 = *(_QWORD *)(v3 + 536);
    v9 = *(_QWORD *)(v3 + 528);
    v10 = *(_QWORD *)(v3 + 504);
    swift_task_dealloc(*(_QWORD *)(v3 + 552));
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    return (*(uint64_t (**)(void))(v3 + 8))();
  }
  else
  {
    sub_1000A7F60((_QWORD *)(v3 + 16));
    swift_bridgeObjectRelease(v4);
    swift_release(v5);
    return swift_task_switch(sub_1001E0980, 0, 0);
  }
}

uint64_t sub_1001E0980(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  _BOOL4 v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  id v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  _BOOL4 v64;
  unint64_t v65;
  void (*v66)(uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  int v74;
  int v75;
  int v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83[2];

  v2 = *(_BYTE *)(v1 + 768);
  *(_QWORD *)(v1 + 448) = _swiftEmptyArrayStorage;
  if ((v2 & 1) == 0)
  {
    v13 = *(_QWORD *)(v1 + 560);
    *(_QWORD *)(v1 + 616) = v13;
    v14 = *(_QWORD *)(v13 + 16);
    *(_QWORD *)(v1 + 624) = v14;
    if (!v14)
    {
LABEL_19:
      v54 = *(_QWORD *)(v1 + 552);
      v55 = *(_QWORD *)(v1 + 544);
      v56 = *(_QWORD *)(v1 + 536);
      v57 = *(_QWORD *)(v1 + 528);
      v58 = *(_QWORD *)(v1 + 504);
      swift_bridgeObjectRelease(v13);
      v59 = *(_QWORD *)(v1 + 448);
      swift_task_dealloc(v54);
      swift_task_dealloc(v55);
      swift_task_dealloc(v56);
      swift_task_dealloc(v57);
      swift_task_dealloc(v58);
      return (*(uint64_t (**)(uint64_t))(v1 + 8))(v59);
    }
    v15 = 0;
    v77 = (_QWORD *)(v1 + 448);
    while (1)
    {
      *(_QWORD *)(v1 + 632) = v15;
      v16 = (_QWORD *)(v13 + 112 * v15);
      *(_QWORD *)(v1 + 640) = v16[5];
      v17 = v16[6];
      *(_QWORD *)(v1 + 648) = v17;
      *(_QWORD *)(v1 + 656) = v16[7];
      v18 = v16[8];
      *(_QWORD *)(v1 + 664) = v18;
      v19 = v16[9];
      *(_QWORD *)(v1 + 672) = v19;
      v81 = v16[10];
      *(_QWORD *)(v1 + 680) = v81;
      v20 = v16[12];
      *(_QWORD *)(v1 + 688) = v20;
      v21 = v16[14];
      *(_QWORD *)(v1 + 696) = v21;
      v82 = v16[16];
      *(_QWORD *)(v1 + 704) = v82;
      v22 = v16[17];
      *(_QWORD *)(v1 + 712) = v22;
      v23 = sub_1000DEF64(v16[13], v21);
      v25 = v24;
      v80 = v23;
      *(_QWORD *)(v1 + 720) = v23;
      *(_QWORD *)(v1 + 728) = v24;
      if (v22)
      {
        v26 = *(_QWORD *)(v22 + 16);
        swift_bridgeObjectRetain(v82);
        swift_bridgeObjectRetain(v22);
        if (v26)
        {
          swift_bridgeObjectRetain(v22);
          swift_bridgeObjectRetain(v17);
          swift_bridgeObjectRetain(v18);
          swift_bridgeObjectRetain(v19);
          swift_bridgeObjectRetain(v81);
          swift_bridgeObjectRetain(v20);
          swift_bridgeObjectRetain(v21);
          defaultLogger()(v60);
          v61 = swift_bridgeObjectRetain_n(v25, 2);
          v62 = Logger.logObject.getter(v61);
          v63 = static os_log_type_t.debug.getter(v62);
          v64 = os_log_type_enabled(v62, v63);
          v65 = v25;
          v66 = *(void (**)(uint64_t, uint64_t))(v1 + 568);
          v67 = *(_QWORD *)(v1 + 536);
          v68 = *(_QWORD *)(v1 + 512);
          if (v64)
          {
            v69 = swift_slowAlloc(12, -1);
            v70 = swift_slowAlloc(32, -1);
            v83[0] = v70;
            *(_DWORD *)v69 = 136315138;
            swift_bridgeObjectRetain(v65);
            *(_QWORD *)(v69 + 4) = sub_1000E3AC8(v80, v65, v83);
            swift_bridgeObjectRelease_n(v65, 3);
            _os_log_impl((void *)&_mh_execute_header, v62, v63, "Image assets field exists for the page -> %s", (uint8_t *)v69, 0xCu);
            swift_arrayDestroy(v70, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v70, -1, -1);
            swift_slowDealloc(v69, -1, -1);
          }
          else
          {
            swift_bridgeObjectRelease_n(v65, 2);
          }

          v66(v67, v68);
          v71 = *(_QWORD *)(*(_QWORD *)(v1 + 480) + 48);
          *(_QWORD *)(v1 + 736) = v71;
          v72 = dword_10063454C;
          swift_retain(v71);
          v73 = (_QWORD *)swift_task_alloc(v72);
          *(_QWORD *)(v1 + 744) = v73;
          *v73 = v1;
          v73[1] = sub_1001E168C;
          return sub_1000F1E28(*(_QWORD *)(v1 + 464), *(_QWORD *)(v1 + 472), v22);
        }
      }
      else
      {
        swift_bridgeObjectRetain(v82);
      }
      v79 = v22;
      swift_bridgeObjectRetain(v17);
      swift_bridgeObjectRetain(v18);
      swift_bridgeObjectRetain(v19);
      swift_bridgeObjectRetain(v81);
      swift_bridgeObjectRetain(v20);
      swift_bridgeObjectRetain(v21);
      v27 = *(_QWORD *)(v1 + 672);
      v28 = *(_QWORD *)(v1 + 664);
      v29 = *(_QWORD *)(v1 + 656);
      v78 = v20;
      v30 = v25;
      v31 = *(_QWORD *)(v1 + 648);
      v32 = *(_QWORD *)(v1 + 640);
      v33 = objc_allocWithZone((Class)type metadata accessor for IdentityProofingUIConfig(0));
      swift_bridgeObjectRetain(v31);
      swift_bridgeObjectRetain(v28);
      swift_bridgeObjectRetain(v27);
      LOBYTE(v76) = 1;
      LOBYTE(v75) = 1;
      LOBYTE(v74) = 1;
      v34 = (void *)IdentityProofingUIConfig.init(view:title:subTitle:url:primaryButtonTitle:secondaryButtonTitle:tertiaryButtonTitle:messages:fields:caption:minLength:maxLength:placeholder:displayName:imageAssetsData:options:isUIEnabled:)(v80, v30, v32, v31, v29, v28, 0, 0, 0, 0, 0, 0, 0, 0, 0, v27, 0, 0, 0,
                      v74,
                      0,
                      v75,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      v76);
      swift_bridgeObjectRelease(v31);
      swift_bridgeObjectRelease(v28);
      swift_bridgeObjectRelease(v27);
      swift_bridgeObjectRelease(v81);
      swift_bridgeObjectRelease(v78);
      swift_bridgeObjectRelease(v21);
      swift_bridgeObjectRelease(v82);
      v35 = swift_bridgeObjectRelease(v79);
      defaultLogger()(v35);
      v36 = v34;
      v37 = Logger.logObject.getter(v36);
      v38 = static os_log_type_t.debug.getter(v37);
      v39 = os_log_type_enabled(v37, v38);
      v40 = *(void (**)(uint64_t, uint64_t))(v1 + 568);
      v41 = *(_QWORD *)(v1 + 528);
      v42 = *(_QWORD *)(v1 + 512);
      if (v39)
      {
        v43 = swift_slowAlloc(12, -1);
        v44 = swift_slowAlloc(32, -1);
        v83[0] = v44;
        *(_DWORD *)v43 = 136446210;
        v45 = IdentityProofingUIConfig.view.getter();
        v47 = v46;
        *(_QWORD *)(v43 + 4) = sub_1000E3AC8(v45, v46, v83);
        swift_bridgeObjectRelease(v47);

        _os_log_impl((void *)&_mh_execute_header, v37, v38, "%{public}s to be shown to the user", (uint8_t *)v43, 0xCu);
        swift_arrayDestroy(v44, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v44, -1, -1);
        swift_slowDealloc(v43, -1, -1);
      }
      else
      {

      }
      v40(v41, v42);
      v48 = v36;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v48);
      v50 = *(_QWORD *)((*v77 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v49 = *(_QWORD *)((*v77 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v50 >= v49 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v49 > 1, v50 + 1, 1);
      v51 = *(_QWORD *)(v1 + 624);
      v52 = *(_QWORD *)(v1 + 632) + 1;
      v53 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v50, v48);
      specialized Array._endMutation()(v53);

      if (v52 == v51)
      {
        v13 = *(_QWORD *)(v1 + 616);
        goto LABEL_19;
      }
      v15 = *(_QWORD *)(v1 + 632) + 1;
      v13 = *(_QWORD *)(v1 + 616);
    }
  }
  v3 = defaultLogger()(a1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.debug.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "IdentityProofingLivenessStepUpUIProvider adding additional base view to liveness step flow", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }
  v7 = *(void (**)(uint64_t, uint64_t))(v1 + 568);
  v8 = *(_QWORD *)(v1 + 560);
  v9 = *(_QWORD *)(v1 + 544);
  v10 = *(_QWORD *)(v1 + 512);

  v7(v9, v10);
  v11 = (_QWORD *)swift_task_alloc(dword_100637F94);
  *(_QWORD *)(v1 + 600) = v11;
  *v11 = v1;
  v11[1] = sub_1001E1048;
  return sub_1001E2410(v8);
}

uint64_t sub_1001E1048(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 600);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 560);
  *(_QWORD *)(*(_QWORD *)v1 + 608) = a1;
  swift_task_dealloc(v2);
  swift_bridgeObjectRelease(v3);
  return swift_task_switch(sub_1001E10B0, 0, 0);
}

uint64_t sub_1001E10B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  id v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  _BOOL4 v53;
  unint64_t v54;
  void (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  int v63;
  int v64;
  int v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72[2];

  v1 = *(_QWORD *)(v0 + 608);
  *(_QWORD *)(v0 + 616) = v1;
  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 624) = v2;
  if (!v2)
  {
LABEL_15:
    v42 = *(_QWORD *)(v0 + 552);
    v43 = *(_QWORD *)(v0 + 544);
    v44 = *(_QWORD *)(v0 + 536);
    v45 = *(_QWORD *)(v0 + 528);
    v46 = *(_QWORD *)(v0 + 504);
    swift_bridgeObjectRelease(v1);
    v47 = *(_QWORD *)(v0 + 448);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v47);
  }
  v3 = 0;
  v66 = (_QWORD *)(v0 + 448);
  while (1)
  {
    *(_QWORD *)(v0 + 632) = v3;
    v4 = (_QWORD *)(v1 + 112 * v3);
    *(_QWORD *)(v0 + 640) = v4[5];
    v5 = v4[6];
    *(_QWORD *)(v0 + 648) = v5;
    *(_QWORD *)(v0 + 656) = v4[7];
    v6 = v4[8];
    *(_QWORD *)(v0 + 664) = v6;
    v7 = v4[9];
    *(_QWORD *)(v0 + 672) = v7;
    v70 = v4[10];
    *(_QWORD *)(v0 + 680) = v70;
    v8 = v4[12];
    *(_QWORD *)(v0 + 688) = v8;
    v9 = v4[14];
    *(_QWORD *)(v0 + 696) = v9;
    v71 = v4[16];
    *(_QWORD *)(v0 + 704) = v71;
    v10 = v4[17];
    *(_QWORD *)(v0 + 712) = v10;
    v11 = sub_1000DEF64(v4[13], v9);
    v13 = v12;
    v69 = v11;
    *(_QWORD *)(v0 + 720) = v11;
    *(_QWORD *)(v0 + 728) = v12;
    if (v10)
      break;
    swift_bridgeObjectRetain(v71);
LABEL_7:
    v68 = v10;
    swift_bridgeObjectRetain(v5);
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v70);
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    v15 = *(_QWORD *)(v0 + 672);
    v16 = *(_QWORD *)(v0 + 664);
    v17 = *(_QWORD *)(v0 + 656);
    v67 = v8;
    v18 = v13;
    v19 = *(_QWORD *)(v0 + 648);
    v20 = *(_QWORD *)(v0 + 640);
    v21 = objc_allocWithZone((Class)type metadata accessor for IdentityProofingUIConfig(0));
    swift_bridgeObjectRetain(v19);
    swift_bridgeObjectRetain(v16);
    swift_bridgeObjectRetain(v15);
    LOBYTE(v65) = 1;
    LOBYTE(v64) = 1;
    LOBYTE(v63) = 1;
    v22 = (void *)IdentityProofingUIConfig.init(view:title:subTitle:url:primaryButtonTitle:secondaryButtonTitle:tertiaryButtonTitle:messages:fields:caption:minLength:maxLength:placeholder:displayName:imageAssetsData:options:isUIEnabled:)(v69, v18, v20, v19, v17, v16, 0, 0, 0, 0, 0, 0, 0, 0, 0, v15, 0, 0, 0,
                    v63,
                    0,
                    v64,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    v65);
    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease(v70);
    swift_bridgeObjectRelease(v67);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v71);
    v23 = swift_bridgeObjectRelease(v68);
    defaultLogger()(v23);
    v24 = v22;
    v25 = Logger.logObject.getter(v24);
    v26 = static os_log_type_t.debug.getter(v25);
    v27 = os_log_type_enabled(v25, v26);
    v28 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
    v29 = *(_QWORD *)(v0 + 528);
    v30 = *(_QWORD *)(v0 + 512);
    if (v27)
    {
      v31 = swift_slowAlloc(12, -1);
      v32 = swift_slowAlloc(32, -1);
      v72[0] = v32;
      *(_DWORD *)v31 = 136446210;
      v33 = IdentityProofingUIConfig.view.getter();
      v35 = v34;
      *(_QWORD *)(v31 + 4) = sub_1000E3AC8(v33, v34, v72);
      swift_bridgeObjectRelease(v35);

      _os_log_impl((void *)&_mh_execute_header, v25, v26, "%{public}s to be shown to the user", (uint8_t *)v31, 0xCu);
      swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v32, -1, -1);
      swift_slowDealloc(v31, -1, -1);
    }
    else
    {

    }
    v28(v29, v30);
    v36 = v24;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v36);
    v38 = *(_QWORD *)((*v66 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v37 = *(_QWORD *)((*v66 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v38 >= v37 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v37 > 1, v38 + 1, 1);
    v39 = *(_QWORD *)(v0 + 624);
    v40 = *(_QWORD *)(v0 + 632) + 1;
    v41 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v38, v36);
    specialized Array._endMutation()(v41);

    if (v40 == v39)
    {
      v1 = *(_QWORD *)(v0 + 616);
      goto LABEL_15;
    }
    v3 = *(_QWORD *)(v0 + 632) + 1;
    v1 = *(_QWORD *)(v0 + 616);
  }
  v14 = *(_QWORD *)(v10 + 16);
  swift_bridgeObjectRetain(v71);
  swift_bridgeObjectRetain(v10);
  if (!v14)
    goto LABEL_7;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v70);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v9);
  defaultLogger()(v49);
  v50 = swift_bridgeObjectRetain_n(v13, 2);
  v51 = Logger.logObject.getter(v50);
  v52 = static os_log_type_t.debug.getter(v51);
  v53 = os_log_type_enabled(v51, v52);
  v54 = v13;
  v55 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
  v56 = *(_QWORD *)(v0 + 536);
  v57 = *(_QWORD *)(v0 + 512);
  if (v53)
  {
    v58 = swift_slowAlloc(12, -1);
    v59 = swift_slowAlloc(32, -1);
    v72[0] = v59;
    *(_DWORD *)v58 = 136315138;
    swift_bridgeObjectRetain(v54);
    *(_QWORD *)(v58 + 4) = sub_1000E3AC8(v69, v54, v72);
    swift_bridgeObjectRelease_n(v54, 3);
    _os_log_impl((void *)&_mh_execute_header, v51, v52, "Image assets field exists for the page -> %s", (uint8_t *)v58, 0xCu);
    swift_arrayDestroy(v59, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v59, -1, -1);
    swift_slowDealloc(v58, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(v54, 2);
  }

  v55(v56, v57);
  v60 = *(_QWORD *)(*(_QWORD *)(v0 + 480) + 48);
  *(_QWORD *)(v0 + 736) = v60;
  v61 = dword_10063454C;
  swift_retain(v60);
  v62 = (_QWORD *)swift_task_alloc(v61);
  *(_QWORD *)(v0 + 744) = v62;
  *v62 = v0;
  v62[1] = sub_1001E168C;
  return sub_1000F1E28(*(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 472), v10);
}

uint64_t sub_1001E168C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)();
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 744);
  *(_QWORD *)(*(_QWORD *)v2 + 752) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[91];
    v7 = v4[88];
    v8 = v4[87];
    v9 = v4[86];
    v17 = v4[85];
    v18 = v4[89];
    v10 = v4[84];
    v11 = v4[83];
    v12 = v4[81];
    v13 = v4[77];
    swift_release(v4[92]);
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(v11);
    swift_bridgeObjectRelease(v10);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v13);
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease_n(v18, 2);
    swift_bridgeObjectRelease(v4[56]);
    v14 = sub_1001E1DC4;
  }
  else
  {
    v15 = v4[89];
    swift_release(v4[92]);
    swift_bridgeObjectRelease(v15);
    v4[95] = a1;
    v14 = sub_1001E17BC;
  }
  return swift_task_switch(v14, 0, 0);
}

uint64_t sub_1001E17BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  _BOOL4 v53;
  void (*v54)(uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  int v64;
  int v65;
  int v66;
  objc_class *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t, uint64_t);
  uint64_t v77[2];

  v68 = (_QWORD *)(v0 + 448);
  v74 = *(_QWORD *)(v0 + 712);
  v75 = *(_QWORD *)(v0 + 704);
  v1 = *(_QWORD *)(v0 + 696);
  v70 = *(_QWORD *)(v0 + 760);
  v71 = *(_QWORD *)(v0 + 688);
  v2 = *(_QWORD *)(v0 + 680);
  v67 = (objc_class *)type metadata accessor for IdentityProofingUIConfig(0);
  v72 = *(_QWORD *)(v0 + 720);
  v73 = *(_QWORD *)(v0 + 728);
  while (1)
  {
    v3 = *(_QWORD *)(v0 + 672);
    v4 = *(_QWORD *)(v0 + 664);
    v5 = *(_QWORD *)(v0 + 656);
    v6 = *(_QWORD *)(v0 + 648);
    v7 = *(_QWORD *)(v0 + 640);
    v8 = objc_allocWithZone(v67);
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRetain(v4);
    swift_bridgeObjectRetain(v3);
    LOBYTE(v66) = 1;
    LOBYTE(v65) = 1;
    LOBYTE(v64) = 1;
    v9 = (void *)IdentityProofingUIConfig.init(view:title:subTitle:url:primaryButtonTitle:secondaryButtonTitle:tertiaryButtonTitle:messages:fields:caption:minLength:maxLength:placeholder:displayName:imageAssetsData:options:isUIEnabled:)(v72, v73, v7, v6, v5, v4, 0, 0, 0, 0, 0, 0, 0, 0, 0, v3, 0, 0, 0,
                   v64,
                   0,
                   v65,
                   0,
                   0,
                   0,
                   0,
                   v70,
                   0,
                   v66);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v4);
    swift_bridgeObjectRelease(v3);
    swift_bridgeObjectRelease(v2);
    swift_bridgeObjectRelease(v71);
    swift_bridgeObjectRelease(v1);
    swift_bridgeObjectRelease(v75);
    v10 = swift_bridgeObjectRelease(v74);
    defaultLogger()(v10);
    v11 = v9;
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.debug.getter(v12);
    v14 = os_log_type_enabled(v12, v13);
    v15 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
    v16 = *(_QWORD *)(v0 + 528);
    v17 = *(_QWORD *)(v0 + 512);
    if (v14)
    {
      v18 = swift_slowAlloc(12, -1);
      v19 = swift_slowAlloc(32, -1);
      v77[0] = v19;
      *(_DWORD *)v18 = 136446210;
      v20 = IdentityProofingUIConfig.view.getter();
      v22 = v21;
      *(_QWORD *)(v18 + 4) = sub_1000E3AC8(v20, v21, v77);
      swift_bridgeObjectRelease(v22);

      _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s to be shown to the user", (uint8_t *)v18, 0xCu);
      swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1, -1);
      swift_slowDealloc(v18, -1, -1);
    }
    else
    {

    }
    v15(v16, v17);
    v23 = v11;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v23);
    v25 = *(_QWORD *)((*v68 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v24 = *(_QWORD *)((*v68 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v25 >= v24 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v24 > 1, v25 + 1, 1);
    v26 = *(_QWORD *)(v0 + 624);
    v27 = *(_QWORD *)(v0 + 632) + 1;
    v28 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v23);
    specialized Array._endMutation()(v28);

    if (v27 == v26)
    {
      v42 = *(_QWORD *)(v0 + 552);
      v43 = *(_QWORD *)(v0 + 544);
      v44 = *(_QWORD *)(v0 + 536);
      v45 = *(_QWORD *)(v0 + 528);
      v46 = *(_QWORD *)(v0 + 504);
      swift_bridgeObjectRelease(*(_QWORD *)(v0 + 616));
      v47 = *(_QWORD *)(v0 + 448);
      swift_task_dealloc(v42);
      swift_task_dealloc(v43);
      swift_task_dealloc(v44);
      swift_task_dealloc(v45);
      swift_task_dealloc(v46);
      return (*(uint64_t (**)(uint64_t))(v0 + 8))(v47);
    }
    v29 = *(_QWORD *)(v0 + 632) + 1;
    *(_QWORD *)(v0 + 632) = v29;
    v30 = (_QWORD *)(*(_QWORD *)(v0 + 616) + 112 * v29);
    *(_QWORD *)(v0 + 640) = v30[5];
    v31 = v30[6];
    *(_QWORD *)(v0 + 648) = v31;
    *(_QWORD *)(v0 + 656) = v30[7];
    v32 = v30[8];
    *(_QWORD *)(v0 + 664) = v32;
    v33 = v30[9];
    *(_QWORD *)(v0 + 672) = v33;
    v69 = v30[10];
    *(_QWORD *)(v0 + 680) = v69;
    v34 = v30[12];
    *(_QWORD *)(v0 + 688) = v34;
    v1 = v30[14];
    *(_QWORD *)(v0 + 696) = v1;
    v35 = v30[16];
    *(_QWORD *)(v0 + 704) = v35;
    v36 = v30[17];
    *(_QWORD *)(v0 + 712) = v36;
    v37 = sub_1000DEF64(v30[13], v1);
    v39 = v38;
    *(_QWORD *)(v0 + 720) = v37;
    *(_QWORD *)(v0 + 728) = v38;
    v75 = v35;
    if (!v36)
    {
      swift_bridgeObjectRetain(v35);
      goto LABEL_3;
    }
    v40 = v35;
    v41 = *(_QWORD *)(v36 + 16);
    swift_bridgeObjectRetain(v40);
    swift_bridgeObjectRetain(v36);
    if (v41)
      break;
LABEL_3:
    v72 = v37;
    v73 = v39;
    v74 = v36;
    swift_bridgeObjectRetain(v31);
    swift_bridgeObjectRetain(v32);
    swift_bridgeObjectRetain(v33);
    v2 = v69;
    swift_bridgeObjectRetain(v69);
    swift_bridgeObjectRetain(v34);
    swift_bridgeObjectRetain(v1);
    v70 = 0;
    v71 = v34;
  }
  swift_bridgeObjectRetain(v36);
  swift_bridgeObjectRetain(v31);
  swift_bridgeObjectRetain(v32);
  swift_bridgeObjectRetain(v33);
  swift_bridgeObjectRetain(v69);
  swift_bridgeObjectRetain(v34);
  swift_bridgeObjectRetain(v1);
  defaultLogger()(v49);
  v50 = swift_bridgeObjectRetain_n(v39, 2);
  v51 = Logger.logObject.getter(v50);
  v52 = static os_log_type_t.debug.getter(v51);
  v53 = os_log_type_enabled(v51, v52);
  v54 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
  v55 = *(_QWORD *)(v0 + 536);
  v56 = *(_QWORD *)(v0 + 512);
  if (v53)
  {
    v57 = v39;
    v58 = swift_slowAlloc(12, -1);
    v76 = v54;
    v77[0] = swift_slowAlloc(32, -1);
    v59 = v37;
    v60 = v77[0];
    *(_DWORD *)v58 = 136315138;
    swift_bridgeObjectRetain(v57);
    *(_QWORD *)(v58 + 4) = sub_1000E3AC8(v59, v57, v77);
    swift_bridgeObjectRelease_n(v57, 3);
    _os_log_impl((void *)&_mh_execute_header, v51, v52, "Image assets field exists for the page -> %s", (uint8_t *)v58, 0xCu);
    swift_arrayDestroy(v60, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v60, -1, -1);
    swift_slowDealloc(v58, -1, -1);

    v76(v55, v56);
  }
  else
  {
    swift_bridgeObjectRelease_n(v39, 2);

    v54(v55, v56);
  }
  v61 = *(_QWORD *)(*(_QWORD *)(v0 + 480) + 48);
  *(_QWORD *)(v0 + 736) = v61;
  v62 = dword_10063454C;
  swift_retain(v61);
  v63 = (_QWORD *)swift_task_alloc(v62);
  *(_QWORD *)(v0 + 744) = v63;
  *v63 = v0;
  v63[1] = sub_1001E168C;
  return sub_1000F1E28(*(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 472), v36);
}

uint64_t sub_1001E1DC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 544);
  v2 = *(_QWORD *)(v0 + 536);
  v3 = *(_QWORD *)(v0 + 528);
  v4 = *(_QWORD *)(v0 + 504);
  swift_task_dealloc(*(_QWORD *)(v0 + 552));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001E1E38()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  return swift_deallocClassInstance(v0, 56, 7);
}

uint64_t type metadata accessor for IdentityProofingLivenessStepUpUIProvider()
{
  return objc_opt_self(_TtC8coreidvd40IdentityProofingLivenessStepUpUIProvider);
}

_QWORD *sub_1001E1E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD v48[2];
  uint64_t v49;

  v6 = v5;
  v46 = a4;
  v47 = a5;
  v44 = a1;
  v45 = a3;
  v8 = type metadata accessor for DispatchQoS.QoSClass(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for IdentityProofingPendingActionsWebService();
  v13 = swift_allocObject(v12, 24, 7);
  *(_QWORD *)(v13 + 16) = 0;
  v49 = 0;
  memset(v48, 0, sizeof(v48));
  v14 = objc_allocWithZone((Class)PKPaymentService);
  v43 = a2;
  swift_retain(a2);
  v15 = objc_msgSend(v14, "init");
  v16 = type metadata accessor for IdentityProofingConfigProvider();
  v17 = swift_allocObject(v16, 16, 7);
  v18 = type metadata accessor for IdentityProofingTextReplacementProvider(0);
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  v19 = IdentityProofingTextReplacementProvider.init()();
  v20 = type metadata accessor for IdentityProofingDeviceMigrationManagerFactory();
  v21 = swift_allocObject(v20, 16, 7);
  v22 = type metadata accessor for IdentityProofingWorkflowProvider();
  v23 = swift_allocObject(v22, 24, 7);
  *(_QWORD *)(v23 + 16) = v21;
  v24 = type metadata accessor for IdentityProofingUserNotificationProvider(0);
  v25 = swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
  v26 = sub_1004F5BA8((uint64_t)v15, (uint64_t)v48, v17, v19, v23, v25);
  v27 = sub_1004F2CB8();
  v28 = type metadata accessor for IdentityProofingActionNotificationFlow();
  v29 = swift_allocObject(v28, 24, 7);
  *(_QWORD *)(v29 + 16) = 0;
  sub_1000257E0();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for DispatchQoS.QoSClass.default(_:), v8);
  v30 = static OS_dispatch_queue.global(qos:)(v11);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v31 = sub_1004F5D80(0, v29, v30);
  v32 = sub_10001D4D0();
  if (qword_10062F560 != -1)
    swift_once(&qword_10062F560, sub_10041FF94);
  v33 = (void *)qword_1006707A8;
  v34 = type metadata accessor for IdentityWatchProvisioningManagerFactory();
  v35 = swift_allocObject(v34, 16, 7);
  v36 = type metadata accessor for IdentityProofingPendingActionsFlow(0);
  swift_allocObject(v36, *(unsigned int *)(v36 + 48), *(unsigned __int16 *)(v36 + 52));
  v37 = v33;
  v38 = sub_1003C35F8(0, v13, v26, v27, v43, v31, (uint64_t)v32, v37, 0, v35);
  v39 = v44;
  v6[2] = v38;
  v6[3] = v39;
  v40 = v46;
  v6[4] = v45;
  v6[5] = v40;
  v6[6] = v47;
  return v6;
}

uint64_t sub_1001E2154@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  id v9;
  Swift::String v10;
  Swift::Bool v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  unint64_t v17;
  unint64_t v18;
  uint8_t *v19;
  _UNKNOWN **v20;
  uint64_t v21;
  _UNKNOWN **v22;
  uint64_t v23;
  os_log_type_t v24;
  uint64_t result;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = 0xD000000000000016;
  v3 = type metadata accessor for Logger(0);
  v32 = *(_QWORD *)(v3 - 8);
  v33 = v3;
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v28 - v7;
  v9 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v10._countAndFlagsBits = 0xD00000000000002ALL;
  v10._object = (void *)0x8000000100553190;
  v11 = NSUserDefaults.internalBool(forKey:)(v10);

  if (v11)
  {
    v13 = defaultLogger()(v12);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.debug.getter();
    v16 = os_log_type_enabled(v14, v15);
    v30 = 0xD000000000000026;
    v31 = 0xD000000000000024;
    v17 = 0x80000001005470A0;
    v29 = 0x80000001005531F0;
    v18 = 0x80000001005531C0;
    if (!v16)
    {
      v20 = &off_1006013B8;
      v21 = 1;
      v22 = &off_100601378;
      goto LABEL_9;
    }
    v28 = 0x80000001005470A0;
    v19 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "IdentityProofingLivenessStepUpUIProvider injecting base view from internal settings for bridge", v19, 2u);
    v20 = &off_1006013B8;
    v21 = 1;
    v22 = &off_100601378;
  }
  else
  {
    v23 = defaultLogger()(v12);
    v14 = Logger.logObject.getter(v23);
    v24 = static os_log_type_t.debug.getter();
    if (!os_log_type_enabled(v14, v24))
    {
      v21 = 0;
      v30 = 0;
      v31 = 0;
      v18 = 0;
      v29 = 0;
      v22 = 0;
      v2 = 0;
      v17 = 0;
      v20 = 0;
      v8 = v6;
      goto LABEL_9;
    }
    v19 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v24, "IdentityProofingLivenessStepUpUIProvider not injecting base view for bridge; internal setting is off",
      v19,
      2u);
    v21 = 0;
    v30 = 0;
    v31 = 0;
    v18 = 0;
    v28 = 0;
    v29 = 0;
    v22 = 0;
    v2 = 0;
    v20 = 0;
    v8 = v6;
  }
  swift_slowDealloc(v19, -1, -1);
  v17 = v28;
LABEL_9:

  result = (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v8, v33);
  v26 = v31;
  *a1 = v21;
  a1[1] = v26;
  v27 = v30;
  a1[2] = v18;
  a1[3] = v27;
  a1[4] = v29;
  a1[5] = (uint64_t)v22;
  a1[6] = 0;
  a1[7] = 0;
  a1[8] = 0;
  a1[9] = v2;
  a1[10] = v17;
  a1[11] = 0;
  a1[12] = 0;
  a1[13] = (uint64_t)v20;
  return result;
}

uint64_t sub_1001E2410(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1[30] = a1;
  v2 = type metadata accessor for Logger(0);
  v1[31] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[32] = v3;
  v4 = (*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[33] = swift_task_alloc(v4);
  v1[34] = swift_task_alloc(v4);
  v5 = sub_100004828(&qword_100637F98);
  v1[35] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for IdentityProofingUnorderedUIElement(0);
  v1[36] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v1[37] = v7;
  v1[38] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001E24CC, 0, 0);
}

uint64_t sub_1001E24CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v20;
  uint64_t (*v21)(void);

  v1 = *(_QWORD *)(v0 + 240);
  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 312) = v2;
  if (v2)
  {
    v3 = (uint64_t *)(v1 + 112);
    while (1)
    {
      v5 = *v3;
      if (*v3)
      {
        v4 = *(v3 - 1);
        if (v4 == 0xD000000000000016 && v5 == 0x80000001005470A0)
          break;
        v4 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0xD000000000000016, 0x80000001005470A0, 0);
        if ((v4 & 1) != 0)
          break;
      }
      v3 += 14;
      if (!--v2)
        goto LABEL_11;
    }
    v6 = defaultLogger()(v4);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.debug.getter(v7);
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "IdentityProofingLivenessStepUpUIProvider not injecting base view for bridge; page already exists",
        v9,
        2u);
      swift_slowDealloc(v9, -1, -1);
    }
    v11 = *(_QWORD *)(v0 + 256);
    v10 = *(_QWORD *)(v0 + 264);
    v13 = *(_QWORD *)(v0 + 240);
    v12 = *(_QWORD *)(v0 + 248);

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    v14 = *(_QWORD *)(v0 + 240);
    v15 = *(_QWORD *)(v0 + 304);
    v17 = *(_QWORD *)(v0 + 272);
    v16 = *(_QWORD *)(v0 + 280);
    v18 = *(_QWORD *)(v0 + 264);
    swift_bridgeObjectRetain(v13);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v14);
  }
  else
  {
LABEL_11:
    v21 = (uint64_t (*)(void))((char *)&dword_100634CA8 + dword_100634CA8);
    v20 = (_QWORD *)swift_task_alloc(unk_100634CAC);
    *(_QWORD *)(v0 + 320) = v20;
    *v20 = v0;
    v20[1] = sub_1001E2694;
    return v21();
  }
}

uint64_t sub_1001E2694(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 320);
  *(_QWORD *)(*(_QWORD *)v1 + 328) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1001E26F0, 0, 0);
}

void sub_1001E26F0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  __int128 *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  _QWORD *v85;
  uint64_t v86;

  v1 = *(_QWORD *)(v0 + 328);
  if (!v1)
    goto LABEL_17;
  if (*(_QWORD *)(v1 + 16) && (v2 = sub_1004A8604(0xD000000000000018, 0x8000000100553170), (v3 & 1) != 0))
  {
    (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 296) + 16))(*(_QWORD *)(v0 + 280), *(_QWORD *)(v1 + 56) + *(_QWORD *)(*(_QWORD *)(v0 + 296) + 72) * v2, *(_QWORD *)(v0 + 288));
    v4 = 0;
  }
  else
  {
    v4 = 1;
  }
  v5 = *(_QWORD *)(v0 + 288);
  v6 = *(_QWORD *)(v0 + 296);
  v7 = *(_QWORD *)(v0 + 280);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v7, v4, 1, v5);
  swift_bridgeObjectRelease(v1);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5) == 1)
  {
    sub_100008030(*(_QWORD *)(v0 + 280), &qword_100637F98);
    goto LABEL_17;
  }
  v8 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 296) + 32))(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 288));
  v9 = IdentityProofingUnorderedUIElement.title.getter(v8);
  if (!v10)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 296) + 8))(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 288));
    goto LABEL_17;
  }
  v11 = v9;
  v12 = v10;
  v13 = (_QWORD *)IdentityProofingUnorderedUIElement.messages.getter();
  if (!v13)
  {
LABEL_16:
    v26 = *(_QWORD *)(v0 + 296);
    v27 = *(_QWORD *)(v0 + 304);
    v28 = *(_QWORD *)(v0 + 288);
    swift_bridgeObjectRelease(v12);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v27, v28);
    goto LABEL_17;
  }
  v14 = v13;
  if (!v13[2])
  {
    swift_bridgeObjectRelease(v12);
    v12 = v14;
    goto LABEL_16;
  }
  v16 = v13[4];
  v15 = v13[5];
  swift_bridgeObjectRetain(v15);
  v17 = swift_bridgeObjectRelease(v14);
  v18 = IdentityProofingUnorderedUIElement.actions.getter(v17);
  if (v18)
  {
    v19 = v18;
    v20 = IdentityProofingUnorderedUIElement.imageAssets.getter();
    v21 = *(_QWORD *)(v0 + 296);
    v22 = *(_QWORD *)(v0 + 304);
    v23 = *(_QWORD *)(v0 + 288);
    if (v20)
    {
      v24 = v20;
      (*(void (**)(_QWORD, _QWORD))(v21 + 8))(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 288));
      v25 = 0;
      v72 = 0;
      v73 = 0;
      v70 = 0;
      v71 = 0;
      v69 = 0xD000000000000016;
      v67 = 1;
      v68 = 0x80000001005470A0;
      goto LABEL_18;
    }
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease(v19);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v22, v23);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 296) + 8))(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 288));
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease(v12);
  }
LABEL_17:
  sub_1001E2154((uint64_t *)(v0 + 128));
  v11 = *(_QWORD *)(v0 + 136);
  v12 = *(_QWORD **)(v0 + 144);
  v16 = *(_QWORD *)(v0 + 152);
  v15 = *(_QWORD *)(v0 + 160);
  v19 = *(_QWORD *)(v0 + 168);
  v25 = *(_QWORD *)(v0 + 176);
  v72 = *(_QWORD *)(v0 + 192);
  v73 = *(_QWORD *)(v0 + 184);
  v67 = *(_QWORD *)(v0 + 128);
  v68 = *(_QWORD *)(v0 + 208);
  v71 = *(_QWORD *)(v0 + 216);
  v24 = *(_QWORD *)(v0 + 232);
  v69 = *(_QWORD *)(v0 + 200);
  v70 = *(_QWORD *)(v0 + 224);
  v29 = sub_1001E2C5C(v0 + 128, v0 + 16);
  if (!*(_QWORD *)(v0 + 32))
  {
    v49 = defaultLogger()(v29);
    v50 = Logger.logObject.getter(v49);
    v51 = static os_log_type_t.debug.getter(v50);
    if (os_log_type_enabled(v50, v51))
    {
      v52 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v52 = 0;
      _os_log_impl((void *)&_mh_execute_header, v50, v51, "IdentityProofingLivenessStepUpUIProvider not injecting base view for bridge; unorderedUI for this view doesn't exist",
        v52,
        2u);
      swift_slowDealloc(v52, -1, -1);
    }
    v53 = *(_QWORD *)(v0 + 272);
    v54 = *(_QWORD *)(v0 + 248);
    v55 = *(_QWORD *)(v0 + 256);
    v56 = *(_QWORD *)(v0 + 240);

    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v53, v54);
    swift_bridgeObjectRetain(v56);
    v48 = *(_QWORD *)(v0 + 240);
    goto LABEL_29;
  }
LABEL_18:
  v30 = *(_QWORD *)(v0 + 312);
  v31 = _swiftEmptyArrayStorage;
  if (!v30)
  {
LABEL_25:
    v46 = sub_100004828(&qword_100634128);
    v47 = swift_allocObject(v46, 144, 7);
    *(_OWORD *)(v47 + 16) = xmmword_10051FFB0;
    *(_QWORD *)(v47 + 32) = v67;
    *(_QWORD *)(v47 + 40) = v11;
    *(_QWORD *)(v47 + 48) = v12;
    *(_QWORD *)(v47 + 56) = v16;
    *(_QWORD *)(v47 + 64) = v15;
    *(_QWORD *)(v47 + 72) = v19;
    *(_QWORD *)(v47 + 80) = v25;
    *(_QWORD *)(v47 + 88) = v73;
    *(_QWORD *)(v47 + 96) = v72;
    *(_QWORD *)(v47 + 104) = v69;
    *(_QWORD *)(v47 + 112) = v68;
    *(_QWORD *)(v47 + 120) = v71;
    *(_QWORD *)(v47 + 128) = v70;
    *(_QWORD *)(v47 + 136) = v24;
    v86 = v47;
    sub_10012292C((uint64_t)v31);
    v48 = v86;
LABEL_29:
    v58 = *(_QWORD *)(v0 + 272);
    v57 = *(_QWORD *)(v0 + 280);
    v59 = *(_QWORD *)(v0 + 264);
    swift_task_dealloc(*(_QWORD *)(v0 + 304));
    swift_task_dealloc(v57);
    swift_task_dealloc(v58);
    swift_task_dealloc(v59);
    (*(void (**)(uint64_t))(v0 + 8))(v48);
    return;
  }
  v60 = v25;
  v61 = v24;
  v62 = v19;
  v63 = v16;
  v64 = v15;
  v65 = v11;
  v66 = v12;
  v32 = *(_QWORD *)(v0 + 240);
  sub_1000E4320(0, v30, 0);
  v33 = 0;
  v34 = _swiftEmptyArrayStorage;
  v35 = (__int128 *)(v32 + 64);
  v74 = v0;
  while (1)
  {
    v36 = *((_QWORD *)v35 - 4);
    v37 = v36 + 1;
    if (__OFADD__(v36, 1))
      break;
    v79 = *((_QWORD *)v35 - 3);
    v77 = *((_QWORD *)v35 - 1);
    v83 = v35[1];
    v84 = *v35;
    v38 = *((_QWORD *)v35 + 2);
    v81 = v35[3];
    v82 = v35[2];
    v39 = *((_QWORD *)v35 + 4);
    v40 = *((_QWORD *)v35 + 6);
    v41 = *((_QWORD *)v35 + 8);
    v80 = v35[4];
    v42 = v34[2];
    v75 = v34[3];
    v76 = *((_QWORD *)v35 + 9);
    v85 = v34;
    v43 = v34;
    v78 = *((_QWORD *)v35 - 2);
    swift_bridgeObjectRetain(v78);
    swift_bridgeObjectRetain(v84);
    swift_bridgeObjectRetain(*((_QWORD *)&v84 + 1));
    swift_bridgeObjectRetain(v38);
    swift_bridgeObjectRetain(v39);
    swift_bridgeObjectRetain(v40);
    swift_bridgeObjectRetain(v41);
    swift_bridgeObjectRetain(v76);
    v34 = v43;
    if (v42 >= v75 >> 1)
    {
      sub_1000E4320(v75 > 1, v42 + 1, 1);
      v34 = v85;
    }
    v0 = v74;
    v44 = *(_QWORD *)(v74 + 312);
    ++v33;
    v34[2] = v42 + 1;
    v45 = &v34[14 * v42];
    v45[4] = v37;
    v45[5] = v79;
    v45[6] = v78;
    v45[7] = v77;
    *((_OWORD *)v45 + 4) = v84;
    *((_OWORD *)v45 + 5) = v83;
    *((_OWORD *)v45 + 6) = v82;
    *((_OWORD *)v45 + 7) = v81;
    *((_OWORD *)v45 + 8) = v80;
    v35 += 7;
    if (v33 == v44)
    {
      v31 = v34;
      v11 = v65;
      v12 = v66;
      v16 = v63;
      v15 = v64;
      v24 = v61;
      v19 = v62;
      v25 = v60;
      goto LABEL_25;
    }
  }
  __break(1u);
}

uint64_t sub_1001E2C5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100004828(&qword_100637FA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1001E2CA4(void *a1, uint64_t a2, unint64_t a3, int a4, uint64_t a5, void (*a6)(void *, uint64_t), uint64_t a7)
{
  unint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(uint64_t, uint64_t);
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  unint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  char *v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  char *v73;
  Swift::String v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  _BOOL4 v80;
  uint8_t *v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t (*v86)(char *, uint64_t);
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  NSObject *v92;
  os_log_type_t v93;
  uint8_t *v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  NSObject *v101;
  os_log_type_t v102;
  uint8_t *v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  unint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t (*v125)(uint64_t, char *, uint64_t);
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  __int128 v133;
  uint64_t v134;
  uint64_t v135;
  id v136;
  uint64_t v137;
  uint64_t v138;
  id v139;
  void *v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t *v145;
  uint64_t v146;
  objc_class *v147;
  char *v148;
  uint64_t *v149;
  double v150;
  id v151;
  void *v152;
  void (*v153)(_QWORD, _QWORD);
  uint64_t v154;
  uint64_t v155;
  NSObject *v156;
  os_log_type_t v157;
  uint8_t *v158;
  uint64_t v159;
  uint64_t v160;
  void (*v161)(_QWORD, _QWORD);
  void (*v162)(_QWORD, _QWORD);
  char *v163;
  unint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  Swift::String v168;
  Swift::String v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  uint64_t v173;
  NSObject *v174;
  os_log_type_t v175;
  uint64_t v176;
  uint8_t *v177;
  uint8_t *v178;
  _QWORD *v179;
  char v180;
  uint64_t v181;
  uint64_t v182;
  _BYTE *v183;
  uint64_t v184;
  id v185;
  uint64_t v186;
  void *v187;
  unint64_t v188;
  uint64_t v189;
  unint64_t v190;
  uint64_t v191;
  id v192;
  uint64_t v193;
  _QWORD *v194;
  unint64_t v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  NSObject *v199;
  uint64_t v200;
  uint8_t *v201;
  uint8_t *v202;
  uint64_t v203;
  uint64_t v204;
  unint64_t v205;
  unint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  id v211;
  NSString v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  uint64_t v217;
  NSObject *v218;
  os_log_type_t v219;
  uint8_t *v220;
  char *v221;
  uint64_t v222;
  NSObject *v223;
  os_log_type_t v224;
  uint8_t *v225;
  uint64_t v226;
  char *v227;
  uint64_t v228;
  unint64_t *v229;
  uint64_t v230;
  uint64_t v231;
  void *v232;
  void *v233;
  void *v234;
  id v235;
  id v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  NSObject *v240;
  os_log_type_t v241;
  uint8_t *v242;
  uint8_t *v243;
  uint64_t v244;
  char *v245;
  char *v246;
  uint64_t v247;
  NSObject *v248;
  os_log_type_t v249;
  uint8_t *v250;
  uint8_t *v251;
  uint64_t v252;
  void *v253;
  _QWORD *v254;
  unint64_t v255;
  void *v256;
  _QWORD *v257;
  const void *v258;
  id v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  unint64_t v264;
  char *v265;
  char *v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  unint64_t v271;
  unint64_t v272;
  uint64_t v273;
  char *v274;
  uint64_t v275;
  NSObject *v276;
  uint64_t v277;
  uint8_t *v278;
  int v279;
  int v280;
  int v281;
  uint8_t *v282;
  uint64_t v283;
  id v284;
  char *v285;
  void (*v286)(_QWORD, _QWORD);
  char *v287;
  uint64_t v288;
  char *v289;
  uint64_t v290;
  char *v291;
  char *v292;
  uint64_t v293;
  uint64_t v294;
  char *v295;
  uint64_t v296;
  uint64_t v297;
  char *v298;
  char *v299;
  char *v300;
  char *v301;
  uint8_t *v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  char *v306;
  char *v307;
  char *v308;
  char *v309;
  uint64_t v310;
  uint64_t v311;
  void (*v312)(void *, uint64_t);
  void *v313;
  unint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  char *v318;
  uint64_t v319;
  id v320;
  uint64_t v321;
  char *v322;
  char *v323;
  uint64_t v324;
  unint64_t v325;
  unint64_t v326;
  uint64_t v327;
  uint64_t v328;
  _QWORD *v329;
  __int128 v330;
  __int128 v331;
  uint64_t (*v332)();
  _QWORD *v333;
  uint64_t v334;
  _BYTE v335[16];
  objc_super v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  _QWORD v342[3];
  uint64_t v343;
  __int128 v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  unint64_t v348;
  _BYTE v349[16];
  uint64_t v350;
  char v351;

  v311 = a7;
  v312 = a6;
  v302 = (uint8_t *)a5;
  LODWORD(v314) = a4;
  v326 = a3;
  v313 = (void *)a2;
  v319 = type metadata accessor for DIPError(0);
  v324 = *(_QWORD *)(v319 - 8);
  __chkstk_darwin(v319);
  v309 = (char *)&v282 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v310 = type metadata accessor for IdentityProofingStaticWorkflow(0);
  v303 = *(_QWORD *)(v310 - 8);
  v10 = __chkstk_darwin(v310);
  v304 = v11;
  v305 = (uint64_t)&v282 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v321 = (uint64_t)&v282 - v12;
  v13 = sub_100004828(&qword_10062FEC0);
  __chkstk_darwin(v13);
  v306 = (char *)&v282 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DIPError.Code(0);
  v316 = *(_QWORD *)(v15 - 8);
  v317 = v15;
  __chkstk_darwin(v15);
  v318 = (char *)&v282 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for DispatchWorkItemFlags(0);
  v296 = *(_QWORD *)(v17 - 8);
  v297 = v17;
  __chkstk_darwin(v17);
  v295 = (char *)&v282 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for DispatchQoS(0);
  v293 = *(_QWORD *)(v19 - 8);
  v294 = v19;
  __chkstk_darwin(v19);
  v300 = (char *)&v282 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v327 = type metadata accessor for Logger(0);
  v315 = *(_QWORD *)(v327 - 8);
  v21 = __chkstk_darwin(v327);
  v308 = (char *)&v282 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v21);
  v323 = (char *)&v282 - v24;
  v25 = __chkstk_darwin(v23);
  v307 = (char *)&v282 - v26;
  v27 = __chkstk_darwin(v25);
  v322 = (char *)&v282 - v28;
  v29 = __chkstk_darwin(v27);
  v292 = (char *)&v282 - v30;
  v31 = __chkstk_darwin(v29);
  v299 = (char *)&v282 - v32;
  v33 = __chkstk_darwin(v31);
  v301 = (char *)&v282 - v34;
  v35 = __chkstk_darwin(v33);
  v298 = (char *)&v282 - v36;
  v37 = __chkstk_darwin(v35);
  v291 = (char *)&v282 - v38;
  v39 = __chkstk_darwin(v37);
  v41 = (char *)&v282 - v40;
  v42 = __chkstk_darwin(v39);
  v44 = (char *)&v282 - v43;
  __chkstk_darwin(v42);
  v46 = (char *)&v282 - v45;
  v47 = sub_100004828(&qword_1006384E0);
  v48 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v50 = (char *)&v282 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001E5D28(a1, (uint64_t)v313, v326, v314, (uint64_t)v50);
  v325 = v7;
  v320 = a1;
  v286 = (void (*)(_QWORD, _QWORD))v46;
  v287 = v44;
  v285 = v41;
  v289 = v50;
  v290 = v48;
  v288 = v47;
  v51 = *(_QWORD *)(v7 + 120) + 136;
  swift_beginAccess(v51, &v337, 0, 0);
  sub_100038B24(v51, (uint64_t)&v344, &qword_1006384C8);
  if (!v345)
  {
    sub_100008030((uint64_t)&v344, &qword_1006384C8);
    v63 = v318;
    (*(void (**)(char *, _QWORD, uint64_t))(v316 + 104))(v318, enum case for DIPError.Code.missingIdentityWorkFlow(_:), v317);
    v64 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v65 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    v66 = (id)swift_allocError(v319, v65, 0, 0);
    v67 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000024, 0x80000001005535A0, 0, v63, 0, v64, 0xD00000000000007CLL, 0x80000001005535D0, 0xD000000000000079, 0x80000001005547D0, 115);
    swift_willThrow(v67);
    (*(void (**)(char *, uint64_t))(v290 + 8))(v289, v288);
LABEL_7:
    v72 = 0;
    v314 = 0;
LABEL_8:
    v73 = v323;
    v74._countAndFlagsBits = 0xD000000000000010;
    v74._object = (void *)0x80000001005547B0;
    debugLogFootprint(_:)(v74);
    v75 = v322;
    defaultLogger()(v76);
    swift_errorRetain(v66);
    v77 = swift_errorRetain(v66);
    v78 = Logger.logObject.getter(v77);
    v79 = static os_log_type_t.debug.getter(v78);
    v80 = os_log_type_enabled(v78, v79);
    v320 = v66;
    if (v80)
    {
      v81 = (uint8_t *)swift_slowAlloc(12, -1);
      v82 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v330 = v82;
      *(_DWORD *)v81 = 136315138;
      swift_getErrorValue(v66, &v343, v342);
      v83 = Error.localizedDescription.getter(v342[1], v342[2]);
      v85 = v84;
      v338 = sub_1000E3AC8(v83, v84, (uint64_t *)&v330);
      v73 = v323;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v338, &v339, v81 + 4);
      swift_bridgeObjectRelease(v85);
      swift_errorRelease(v66);
      swift_errorRelease(v66);
      _os_log_impl((void *)&_mh_execute_header, v78, v79, "Received an error during the proofing flow %s", v81, 0xCu);
      swift_arrayDestroy(v82, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v82, -1, -1);
      swift_slowDealloc(v81, -1, -1);

      v86 = *(uint64_t (**)(char *, uint64_t))(v315 + 8);
      v87 = v86(v322, v327);
    }
    else
    {
      swift_errorRelease(v66);
      swift_errorRelease(v66);

      v86 = *(uint64_t (**)(char *, uint64_t))(v315 + 8);
      v87 = v86(v75, v327);
    }
    v88 = v321;
    v89 = v325;
    v322 = (char *)v86;
    if (v72)
    {
      v90 = v307;
      v91 = defaultLogger()(v87);
      v92 = Logger.logObject.getter(v91);
      v93 = static os_log_type_t.debug.getter(v92);
      if (os_log_type_enabled(v92, v93))
      {
        v94 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v94 = 0;
        _os_log_impl((void *)&_mh_execute_header, v92, v93, "Calling proofing cancelled to cleanup state due to failure during proofing", v94, 2u);
        v90 = v307;
        swift_slowDealloc(v94, -1, -1);
      }

      v86(v90, v327);
      v95 = type metadata accessor for TaskPriority(0);
      v96 = (uint64_t)v306;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 56))(v306, 1, 1, v95);
      v97 = (_QWORD *)swift_allocObject(&unk_10060B3B0, 48, 7);
      v97[2] = 0;
      v97[3] = 0;
      v98 = v326;
      v97[4] = v89;
      v97[5] = v98;
      swift_retain(v89);
      v99 = sub_1001075D4(v96, (uint64_t)&unk_100638700, (uint64_t)v97);
      swift_release(v99);
    }
    else
    {
      v100 = defaultLogger()(v87);
      v101 = Logger.logObject.getter(v100);
      v102 = static os_log_type_t.debug.getter(v101);
      if (os_log_type_enabled(v101, v102))
      {
        v103 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v103 = 0;
        _os_log_impl((void *)&_mh_execute_header, v101, v102, "Cleaning up orphaned credentials after proofing", v103, 2u);
        swift_slowDealloc(v103, -1, -1);
      }

      v86(v73, v327);
      v104 = *(_QWORD *)(v89 + 56);
      v105 = *(_QWORD *)(v89 + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_phoneCredentialIdentifier);
      v106 = *(_QWORD *)(v89 + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_phoneCredentialIdentifier + 8);
      v107 = *(_QWORD *)(v89 + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_watchCredentialIdentifier);
      v108 = *(_QWORD *)(v89 + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_watchCredentialIdentifier + 8);
      swift_bridgeObjectRetain(v108);
      swift_retain(v104);
      swift_bridgeObjectRetain(v106);
      sub_10038E464(v326, v105, v106, v107, v108);
      swift_release(v104);
      swift_bridgeObjectRelease(v106);
      v109 = v108;
      v89 = v325;
      swift_bridgeObjectRelease(v109);
    }
    swift_retain(v89);
    v110 = v314;
    runAsyncAndBlock<A>(timeout:file:function:line:_:)(0, 1, 0xD00000000000002DLL, 0x8000000100553690, 0xD000000000000079, 0x80000001005547D0, 264, &unk_1006386E0, v89, v310);
    swift_release(v89);
    if (v110)
    {
      v332 = 0;
      v330 = 0u;
      v331 = 0u;
      swift_errorRetain(v110);
      v116 = sub_1001F240C((uint64_t)&v330);
      sub_100008030((uint64_t)&v330, &qword_1006384C8);
      v117 = enum case for DIPError.Code.internalError(_:);
      v316 = *(_QWORD *)(v316 + 104);
      v118 = v318;
      v119 = v110;
      v326 = v110;
      v120 = v317;
      ((void (*)(char *, _QWORD, uint64_t))v316)(v318, enum case for DIPError.Code.internalError(_:), v317);
      v323 = (char *)0xD00000000000007CLL;
      v325 = 0x80000001005547D0;
      v321 = 0x80000001005535D0;
      v121 = v309;
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, v119, v118, 0, v116, 0xD00000000000007CLL, 0x80000001005535D0, 0xD000000000000079, 0x80000001005547D0, 275);
      v122 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
      v123 = v319;
      v124 = swift_allocError(v319, v122, 0, 0);
      v125 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v324 + 16);
      v127 = v125(v126, v121, v123);
      v128 = v308;
      defaultLogger()(v127);
      DIPRecordError(_:message:log:)(v124, 0, 0xE000000000000000, v128);
      ((void (*)(char *, uint64_t))v322)(v128, v327);
      swift_errorRelease(v124);
      v129 = swift_allocError(v123, v122, 0, 0);
      v125(v130, v121, v123);
      ((void (*)(char *, uint64_t, uint64_t))v316)(v118, v117, v120);
      v131 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
      v132 = swift_allocError(v123, v122, 0, 0);
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0x676E69666F6F7250, 0xEE00726F72726520, v129, v118, 0, v131, v323, v321, 0xD000000000000079, v325, 277);
      v312(0, v132);
      swift_errorRelease(v132);
      swift_errorRelease(v326);
      swift_errorRelease(v320);
      (*(void (**)(char *, uint64_t))(v324 + 8))(v121, v123);
    }
    else
    {
      v111 = v305;
      sub_100035DE8(v88, v305, type metadata accessor for IdentityProofingStaticWorkflow);
      v112 = *(unsigned __int8 *)(v303 + 80);
      v113 = (v112 + 24) & ~v112;
      v114 = v89;
      v115 = swift_allocObject(&unk_10060B388, v113 + v304, v112 | 7);
      *(_QWORD *)(v115 + 16) = v114;
      sub_100038AE0(v111, v115 + v113, type metadata accessor for IdentityProofingStaticWorkflow);
      swift_retain(v114);
      runAsyncAndBlock<A>(timeout:file:function:line:_:)(0, 1, 0xD00000000000002DLL, 0x8000000100553690, 0xD000000000000079, 0x80000001005547D0, 267, &unk_1006386F0, v115, &type metadata for Data);
      swift_release(v115);
      v133 = v330;
      v134 = sub_100004828(&qword_100640C30);
      v135 = swift_allocObject(v134, 40, 7);
      *(_OWORD *)(v135 + 16) = xmmword_100523860;
      v136 = objc_allocWithZone((Class)type metadata accessor for IdentityProofingUIConfig(0));
      LOBYTE(v280) = 1;
      v137 = IdentityProofingUIConfig.init(view:title:subTitle:url:primaryButtonTitle:secondaryButtonTitle:tertiaryButtonTitle:messages:fields:caption:minLength:maxLength:placeholder:displayName:imageAssetsData:options:isUIEnabled:)(0x726F727265, 0xE500000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
               1,
               0,
               1,
               0,
               0,
               0,
               0,
               0,
               0,
               v280);
      *(_QWORD *)(v135 + 32) = v137;
      *(_QWORD *)&v330 = v135;
      specialized Array._endMutation()(v137);
      v138 = v330;
      v139 = objc_allocWithZone((Class)type metadata accessor for IdentityProofingDisplayInfo(0));
      sub_100022948(v133, *((unint64_t *)&v133 + 1));
      LOBYTE(v281) = 2;
      LOBYTE(v279) = 1;
      v140 = (void *)IdentityProofingDisplayInfo.init(proofingUI:docScan:attributeConfig:learnMoreURL:waitingForWiFiAlertDataThresholdInBytes:lowDataModeAlertDataThresholdInBytes:idType:featureEnablementConfig:supportedRegions:livenessStepUpConfig:livenessStepUpIQSettings:shouldPreFetchLivenessConfig:)(v138, 0, v133, *((_QWORD *)&v133 + 1), 0, 0, 0, 1, 0, v279, 0, 0, 0, _swiftEmptyArrayStorage, 0, 0, v281);
      v312(v140, 0);

      sub_100007F8C(v133, *((unint64_t *)&v133 + 1));
      swift_errorRelease(v320);
      sub_100035DAC(v321, type metadata accessor for IdentityProofingStaticWorkflow);
    }
    return;
  }
  sub_100008018(&v344, (uint64_t)&v338);
  v52 = v319;
  v53 = v320;
  if (!v320)
  {
    v68 = v318;
    (*(void (**)(char *, _QWORD, uint64_t))(v316 + 104))(v318, enum case for DIPError.Code.proofingConfigurationUnavailable(_:), v317);
    v69 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v70 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    v66 = (id)swift_allocError(v52, v70, 0, 0);
    v71 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000022, 0x8000000100554850, 0, v68, 0, v69, 0xD00000000000007CLL, 0x80000001005535D0, 0xD000000000000079, 0x80000001005547D0, 118);
    swift_willThrow(v71);
    (*(void (**)(char *, uint64_t))(v290 + 8))(v289, v288);
LABEL_6:
    _s8coreidvd24DigitalPresentmentHelperVwxx_0(&v338);
    goto LABEL_7;
  }
  v54 = v340;
  v55 = v341;
  sub_10000806C(&v338, v340);
  v56 = *(_QWORD *)(v55 + 8);
  v57 = *(uint64_t (**)(uint64_t, uint64_t))(v56 + 8);
  v58 = v53;
  v59 = v57(v54, v56);
  v61 = v60;
  v62 = (uint64_t)v289;
  sub_1001F01F4(v59, v60, (uint64_t)v289, (uint64_t)&v344);
  v320 = 0;
  swift_bridgeObjectRelease(v61);
  v141 = v348;
  v142 = v290;
  if (!v348)
  {
    sub_1001FB4E0(&v344);
    v163 = v318;
    (*(void (**)(char *, _QWORD, uint64_t))(v316 + 104))(v318, enum case for DIPError.Code.proofingSessionIDUnavailable(_:), v317);
    v164 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v165 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    v66 = (id)swift_allocError(v319, v165, 0, 0);
    v166 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001DLL, 0x80000001005538A0, 0, v163, 0, v164, 0xD00000000000007CLL, 0x80000001005535D0, 0xD000000000000079, 0x80000001005547D0, 124);
    swift_willThrow(v166);

    (*(void (**)(uint64_t, uint64_t))(v142 + 8))(v62, v288);
    goto LABEL_6;
  }
  v143 = v347;
  v144 = v325;
  v145 = (uint64_t *)(v325 + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_proofingSessionId);
  v146 = *(_QWORD *)(v325 + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_proofingSessionId + 8);
  *v145 = v347;
  v145[1] = v141;
  swift_bridgeObjectRetain_n(v141, 2);
  swift_bridgeObjectRelease(v146);
  v147 = (objc_class *)type metadata accessor for IdentitySelfHealer();
  v148 = (char *)objc_allocWithZone(v147);
  v149 = (uint64_t *)&v148[OBJC_IVAR____TtC8coreidvd18IdentitySelfHealer_proofingSessionID];
  *v149 = v143;
  v149[1] = v141;
  v336.receiver = v148;
  v336.super_class = v147;
  *(_QWORD *)&v150 = swift_bridgeObjectRetain(v141).n128_u64[0];
  v151 = objc_msgSendSuper2(&v336, "init", v150);
  v152 = *(void **)(v144 + 32);
  *(_QWORD *)(v144 + 32) = v151;

  v153 = v286;
  defaultLogger()(v154);
  v155 = swift_bridgeObjectRetain_n(v141, 2);
  v156 = Logger.logObject.getter(v155);
  v157 = static os_log_type_t.debug.getter(v156);
  if (os_log_type_enabled(v156, v157))
  {
    v158 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_QWORD *)&v330 = swift_slowAlloc(32, -1);
    v159 = v330;
    *(_DWORD *)v158 = 136315138;
    v142 = v290;
    v282 = v158 + 4;
    swift_bridgeObjectRetain(v141);
    v334 = sub_1000E3AC8(v143, v141, (uint64_t *)&v330);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v334, v335, v282);
    swift_bridgeObjectRelease_n(v141, 3);
    _os_log_impl((void *)&_mh_execute_header, v156, v157, "Proofing request successful with proofing session id %s", v158, 0xCu);
    swift_arrayDestroy(v159, 1, (char *)&type metadata for Any + 8);
    v160 = v159;
    v62 = (uint64_t)v289;
    swift_slowDealloc(v160, -1, -1);
    swift_slowDealloc(v158, -1, -1);

    v161 = *(void (**)(_QWORD, _QWORD))(v315 + 8);
    v162 = v286;
  }
  else
  {

    swift_bridgeObjectRelease_n(v141, 2);
    v161 = *(void (**)(_QWORD, _QWORD))(v315 + 8);
    v162 = v153;
  }
  v286 = v161;
  v161(v162, v327);
  v167 = (uint64_t)v302;
  v168._countAndFlagsBits = 0xD00000000000001CLL;
  v168._object = (void *)0x8000000100554880;
  v169._countAndFlagsBits = 0x3731363966616631;
  v169._object = (void *)0xE800000000000000;
  logMilestone(tag:description:)(v169, v168);
  sub_1001FB4E0(&v344);
  sub_1000A1F54((uint64_t)&v346, (uint64_t)v349, &qword_100638518);
  v170 = sub_1000A1F54((uint64_t)v349, (uint64_t)&v350, &qword_100638518);
  if ((v351 & 1) == 0)
  {
    v171 = v350;
    v172 = v325 + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_manualCheckInterval;
    *(_QWORD *)v172 = v350;
    *(_BYTE *)(v172 + 8) = 0;
    v173 = defaultLogger()(v170);
    v174 = Logger.logObject.getter(v173);
    v175 = static os_log_type_t.debug.getter(v174);
    if (os_log_type_enabled(v174, v175))
    {
      v176 = v143;
      v177 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v177 = 134217984;
      v142 = v290;
      *(_QWORD *)&v330 = v171;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v330, (char *)&v330 + 8, v177 + 4);
      _os_log_impl((void *)&_mh_execute_header, v174, v175, "Proofing finished, manual check commands instructed at %ld seconds", v177, 0xCu);
      v178 = v177;
      v143 = v176;
      v167 = (uint64_t)v302;
      swift_slowDealloc(v178, -1, -1);
    }

    v286(v287, v327);
  }
  v179 = (_QWORD *)v325;
  v180 = *(_BYTE *)(*(_QWORD *)(v325 + 128) + 152);
  v283 = v143;
  if ((v180 & 1) != 0)
  {
    v181 = v141;
    v284 = v58;
    v182 = swift_allocObject(&unk_10060B450, 17, 7);
    *(_BYTE *)(v182 + 16) = 0;
    v183 = (_BYTE *)(v182 + 16);
    v184 = type metadata accessor for IdentityProofingDataContext();
    swift_allocObject(v184, 24, 7);
    v185 = v320;
    sub_1000D6044();
    v66 = v185;
    if (v185)
    {
      (*(void (**)(uint64_t, uint64_t))(v142 + 8))(v62, v288);

      swift_bridgeObjectRelease(v181);
      swift_release(v182);
LABEL_59:
      _s8coreidvd24DigitalPresentmentHelperVwxx_0(&v338);
      v314 = 0;
      v72 = 1;
      goto LABEL_8;
    }
    v193 = v186;
    v194 = (_QWORD *)swift_allocObject(&unk_10060B478, 40, 7);
    v195 = v326;
    v194[2] = v193;
    v194[3] = v195;
    v194[4] = v182;
    swift_retain(v193);
    swift_retain(v182);
    sub_1000D6570((uint64_t)sub_1001FCE78, (uint64_t)v194);
    v320 = 0;
    swift_release(v194);
    swift_beginAccess(v183, &v328, 0, 0);
    if (*v183 == 1)
    {
      v210 = type metadata accessor for IdentityManagementSessionDelegate();
      v211 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
      v212 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v330 = v210;
      v213 = sub_100004828((uint64_t *)&unk_10063E570);
      v214 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v330, v213);
      objc_msgSend(v211, "postNotificationName:object:", v212, v214);

      v215 = swift_unknownObjectRelease(v214);
      v216 = v298;
      v217 = defaultLogger()(v215);
      v218 = Logger.logObject.getter(v217);
      v219 = static os_log_type_t.debug.getter(v218);
      if (os_log_type_enabled(v218, v219))
      {
        v220 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v220 = 0;
        _os_log_impl((void *)&_mh_execute_header, v218, v219, "livenessStepUp triggered notification for Wallet status update", v220, 2u);
        swift_slowDealloc(v220, -1, -1);
      }

      v209 = ((uint64_t (*)(char *, uint64_t))v286)(v216, v327);
    }
    v221 = v301;
    v222 = defaultLogger()(v209);
    v223 = Logger.logObject.getter(v222);
    v224 = static os_log_type_t.debug.getter(v223);
    if (os_log_type_enabled(v223, v224))
    {
      v225 = (uint8_t *)swift_slowAlloc(12, -1);
      v226 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v330 = v226;
      *(_DWORD *)v225 = 136315138;
      v142 = v290;
      v302 = v225 + 4;
      v334 = sub_1000E3AC8(0xD000000000000079, 0x80000001005547D0, (uint64_t *)&v330);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v334, v335, v302);
      _os_log_impl((void *)&_mh_execute_header, v223, v224, "%s livenessStepUp finished. Don't need to save proofing session", v225, 0xCu);
      swift_arrayDestroy(v226, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v226, -1, -1);
      swift_slowDealloc(v225, -1, -1);
      swift_release(v193);

      v227 = v301;
    }
    else
    {

      swift_release(v193);
      v227 = v221;
    }
    v286(v227, v327);
    swift_release(v182);
    v179 = (_QWORD *)v325;
    v66 = v320;
    v203 = v288;
    v62 = (uint64_t)v289;
    goto LABEL_55;
  }
  if ((v326 & 1) == 0)
  {
    v181 = v141;
    goto LABEL_41;
  }
  v187 = v58;
  v188 = (v326 >> 1) & 1;
  v189 = *(_QWORD *)(v325 + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_phoneCredentialIdentifier);
  v190 = *(_QWORD *)(v325 + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_phoneCredentialIdentifier + 8);
  swift_bridgeObjectRetain(v190);
  v191 = v189;
  v192 = v320;
  sub_1001F07C4(1, v191, v190, 0, 0, v314 & 1, v167, v188);
  v320 = v192;
  if (v192)
  {
    (*(void (**)(uint64_t, uint64_t))(v142 + 8))(v62, v288);

    swift_bridgeObjectRelease(v141);
    swift_bridgeObjectRelease(v190);
    _s8coreidvd24DigitalPresentmentHelperVwxx_0(&v338);
    v314 = 0;
    v72 = 1;
    v66 = v320;
    goto LABEL_8;
  }
  v196 = swift_bridgeObjectRelease(v190);
  v197 = v285;
  v198 = defaultLogger()(v196);
  v199 = Logger.logObject.getter(v198);
  v200 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v199, (os_log_type_t)v200))
  {
    v201 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v201 = 0;
    _os_log_impl((void *)&_mh_execute_header, v199, (os_log_type_t)v200, "Proofing session for phone information successfully saved", v201, 2u);
    v202 = v201;
    v197 = v285;
    swift_slowDealloc(v202, -1, -1);
  }
  v181 = v141;

  v286(v197, v327);
  v58 = v187;
LABEL_41:
  v66 = v320;
  v203 = v288;
  v284 = v58;
  if ((v326 & 2) != 0
    && !*(_QWORD *)((char *)v179 + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_comboProofingWatchFailure))
  {
    swift_retain(v179);
    v204 = sub_100004828((uint64_t *)&unk_100632610);
    runAsyncAndBlock<A>(file:function:line:_:)(&v330, 0xD00000000000002DLL, 0x8000000100553690, 0xD000000000000079, 0x80000001005547D0, 152, &unk_100638720, v179, v204);
    swift_release(v179);
    v205 = *((_QWORD *)&v330 + 1);
    if (*((_QWORD *)&v330 + 1))
    {
      v206 = *(_QWORD *)((char *)v179
                       + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_watchCredentialIdentifier
                       + 8);
      if (v206)
      {
        v207 = v330;
        v208 = *(_QWORD *)((char *)v179
                         + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_watchCredentialIdentifier);
        swift_bridgeObjectRetain(*(_QWORD *)((char *)v179
                                           + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_watchCredentialIdentifier
                                           + 8));
        sub_1001F07C4(2, v208, v206, v207, v205, v314 & 1, (uint64_t)v302, 0);
        if (v66)
        {
          (*(void (**)(uint64_t, uint64_t))(v142 + 8))(v62, v288);

          swift_bridgeObjectRelease(v181);
          swift_bridgeObjectRelease(v206);
LABEL_57:
          swift_bridgeObjectRelease(v205);
          goto LABEL_59;
        }
        swift_bridgeObjectRelease(v206);
        v273 = swift_bridgeObjectRelease(v205);
        v274 = v291;
        v275 = defaultLogger()(v273);
        v276 = Logger.logObject.getter(v275);
        v277 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v276, (os_log_type_t)v277))
        {
          v278 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v278 = 0;
          _os_log_impl((void *)&_mh_execute_header, v276, (os_log_type_t)v277, "Proofing session for watch successfully saved", v278, 2u);
          swift_slowDealloc(v278, -1, -1);
        }

        v286(v274, v327);
        v203 = v288;
      }
      else
      {
        swift_bridgeObjectRelease(*((_QWORD *)&v330 + 1));
        v203 = v288;
      }
    }
  }
LABEL_55:
  v228 = v179[8];
  v229 = (unint64_t *)(v179[16]
                            + OBJC_IVAR____TtC8coreidvd36IdentityProofingProducedAssetManager_cloudKitUploadAssets);
  swift_beginAccess(v229, &v334, 0, 0);
  v205 = *v229;
  swift_retain(v228);
  swift_bridgeObjectRetain(v205);
  sub_1004645B0(v326, v283, v181, v205);
  if (v66)
  {
    (*(void (**)(uint64_t, uint64_t))(v142 + 8))(v62, v203);
    swift_bridgeObjectRelease(v181);

    swift_release(v228);
    goto LABEL_57;
  }
  swift_release(v228);
  swift_bridgeObjectRelease(v205);
  v230 = swift_allocObject(&unk_10060B3D8, 25, 7);
  *(_QWORD *)(v230 + 16) = v179;
  *(_BYTE *)(v230 + 24) = v314 & 1;
  v231 = type metadata accessor for IdentityProofingDisplayInfo(0);
  swift_retain(v179);
  runAsyncAndBlock<A>(timeout:file:function:line:_:)(0, 1, 0xD00000000000002DLL, 0x8000000100553690, 0xD000000000000079, 0x80000001005547D0, 189, &unk_100638710, v230, v231);
  swift_release(v230);
  v232 = (void *)v330;
  v233 = *(void **)((char *)v179 + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_proofingDocuments);
  v234 = v313;
  *(_QWORD *)((char *)v179 + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_proofingDocuments) = v313;
  v235 = v234;

  v236 = v232;
  v312(v232, 0);
  v320 = v236;

  v237 = v299;
  v239 = defaultLogger()(v238);
  v240 = Logger.logObject.getter(v239);
  v241 = static os_log_type_t.debug.getter(v240);
  if (os_log_type_enabled(v240, v241))
  {
    v242 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v242 = 0;
    _os_log_impl((void *)&_mh_execute_header, v240, v241, "Pending state UI shown. Will listen to uploads completion and perform action notification request in the background", v242, 2u);
    v243 = v242;
    v203 = v288;
    swift_slowDealloc(v243, -1, -1);
  }

  v244 = ((uint64_t (*)(char *, uint64_t))v286)(v237, v327);
  v245 = v300;
  if ((v314 & 1) != 0)
  {
    v246 = v292;
    v247 = defaultLogger()(v244);
    v248 = Logger.logObject.getter(v247);
    v249 = static os_log_type_t.debug.getter(v248);
    if (os_log_type_enabled(v248, v249))
    {
      v250 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v250 = 0;
      _os_log_impl((void *)&_mh_execute_header, v248, v249, "shouldScheduleUploads is set to true, will schedule the uploads in the background waiting for an inexpensive network.", v250, 2u);
      v251 = v250;
      v203 = v288;
      swift_slowDealloc(v251, -1, -1);
    }

    v286(v246, v327);
    if (qword_10062F538 != -1)
      swift_once(&qword_10062F538, sub_1003A0698);
    v252 = *(_QWORD *)(qword_100670740 + 16);
    swift_retain(v252);
    sub_1000BC42C();
    swift_release(v252);
    v268 = *(_QWORD *)(v179[16] + 16);
    swift_beginAccess(v268 + 16, &v330, 1, 0);
    v269 = *(_QWORD *)(v268 + 16);
    *(_QWORD *)(v268 + 16) = &_swiftEmptyDictionarySingleton;
    swift_bridgeObjectRelease(v269);
    v270 = v179[8];
    swift_retain(v270);
    sub_100463A20(v283, v181, 9);

    swift_release(v270);
    swift_bridgeObjectRelease(v181);
    (*(void (**)(uint64_t, uint64_t))(v142 + 8))(v62, v203);
    _s8coreidvd24DigitalPresentmentHelperVwxx_0(&v338);
    v271 = 0xD000000000000010;
  }
  else
  {
    v253 = (void *)v179[14];
    v254 = (_QWORD *)swift_allocObject(&unk_10060B400, 48, 7);
    v255 = v326;
    v254[2] = v179;
    v254[3] = v255;
    v254[4] = v283;
    v254[5] = v181;
    v332 = sub_1001FCDE8;
    v333 = v254;
    *(_QWORD *)&v330 = _NSConcreteStackBlock;
    *((_QWORD *)&v330 + 1) = 1107296256;
    *(_QWORD *)&v331 = sub_1004AB190;
    *((_QWORD *)&v331 + 1) = &unk_10060B418;
    v256 = _Block_copy(&v330);
    v257 = v179;
    v258 = v256;
    swift_retain(v257);
    v259 = v253;
    static DispatchQoS.unspecified.getter(v259);
    v329 = _swiftEmptyArrayStorage;
    v260 = v142;
    v261 = v62;
    v262 = sub_100004790((unint64_t *)&unk_100632380, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v263 = sub_100004828((uint64_t *)&unk_1006308D0);
    v264 = sub_100107078();
    v265 = v245;
    v266 = v295;
    v267 = v297;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v329, v263, v264, v297, v262);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v265, v266, v258);

    _Block_release(v258);
    (*(void (**)(char *, uint64_t))(v296 + 8))(v266, v267);
    (*(void (**)(char *, uint64_t))(v293 + 8))(v265, v294);
    (*(void (**)(uint64_t, uint64_t))(v260 + 8))(v261, v288);
    swift_release(v333);
    _s8coreidvd24DigitalPresentmentHelperVwxx_0(&v338);
    v271 = 0xD000000000000010;
  }
  v272 = 0x80000001005547B0;
  debugLogFootprint(_:)(*(Swift::String *)&v271);
}

uint64_t sub_1001E4D40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch(sub_1001E4D58, 0, 0);
}

uint64_t sub_1001E4D58()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_10062FE44);
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_1001E4DB4;
  return sub_1000160E0();
}

uint64_t sub_1001E4DB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 40) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1001FCFD8, 0, 0);
}

void sub_1001E4E10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint8_t *v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  char v26[24];
  void *v27;
  Swift::Int64_optional v28;

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v26[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (a2 == 2)
    v10 = 2;
  else
    v10 = 1;
  sub_1000D6840(v10);
  if (v3)
    return;
  v12 = v11;
  if (!v11)
    return;
  if ((unint64_t)v11 >> 62)
  {
    if (v11 >= 0)
      v23 = v11 & 0xFFFFFFFFFFFFFF8;
    else
      v23 = v11;
    swift_bridgeObjectRetain(v11);
    v24 = _CocoaArrayWrapper.endIndex.getter(v23);
    swift_bridgeObjectRelease(v12);
    if (v24)
      goto LABEL_9;
LABEL_19:
    swift_bridgeObjectRelease(v12);
    return;
  }
  if (!*(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_19;
LABEL_9:
  if ((v12 & 0xC000000000000001) != 0)
  {
    v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v12);
  }
  else
  {
    if (!*(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v13 = *(id *)(v12 + 32);
  }
  v14 = v13;
  swift_bridgeObjectRelease(v12);
  v28.value = IdentityProofingActionStatus.rawValue.getter(1);
  v28.is_nil = 0;
  StoredProofingSession.update(proofingActionStatus:)(v28);
  v16 = defaultLogger()(v15);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.debug.getter(v17);
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc(2, -1);
    v27 = v14;
    v20 = a3;
    v21 = v19;
    *(_WORD *)v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "livenessStepUp proofing session updated to IdentityProofingActionStatus.statusPending", v19, 2u);
    v22 = v21;
    a3 = v20;
    v14 = v27;
    swift_slowDealloc(v22, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1000D6288();

  swift_beginAccess(a3 + 16, v26, 1, 0);
  *(_BYTE *)(a3 + 16) = 1;
}

uint64_t sub_1001E502C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  _QWORD *v5;

  *(_QWORD *)(v3 + 16) = a1;
  v5 = (_QWORD *)swift_task_alloc(dword_100638054);
  *(_QWORD *)(v3 + 24) = v5;
  *v5 = v3;
  v5[1] = sub_10016AB24;
  return sub_1001F2748(a3);
}

uint64_t sub_1001E5084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[3];
  char v41[8];
  uint64_t v42[4];

  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  __chkstk_darwin(v10);
  v12 = (char *)&v34 - v11;
  v13 = *(id *)(*(_QWORD *)(a1 + 128) + 72);
  OS_dispatch_group.wait()();

  v14 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 128) + 16) + 40);
  if (v14)
  {
    v38 = v8;
    v15 = swift_errorRetain(v14);
    defaultLogger()(v15);
    swift_errorRetain(v14);
    v16 = swift_errorRetain(v14);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.debug.getter(v17);
    if (os_log_type_enabled(v17, v18))
    {
      v35 = a2;
      v19 = swift_slowAlloc(12, -1);
      v37 = a4;
      v20 = (uint8_t *)v19;
      v21 = swift_slowAlloc(32, -1);
      v36 = a3;
      v22 = v21;
      v42[0] = v21;
      *(_DWORD *)v20 = 136315138;
      swift_getErrorValue(v14, v41, v40);
      v23 = Error.localizedDescription.getter(v40[1], v40[2]);
      v25 = v24;
      v39 = sub_1000E3AC8(v23, v24, v42);
      a2 = v35;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, v40, v20 + 4);
      swift_bridgeObjectRelease(v25);
      swift_errorRelease(v14);
      swift_errorRelease(v14);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Cloudkit uploads have failed. Will not trigger action notification %s", v20, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      v26 = v22;
      a3 = v36;
      swift_slowDealloc(v26, -1, -1);
      v27 = v20;
      a4 = v37;
      swift_slowDealloc(v27, -1, -1);
    }
    else
    {
      swift_errorRelease(v14);
      swift_errorRelease(v14);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v38);
    sub_1001F83C8(a2, a3, a4);
    return swift_errorRelease(v14);
  }
  else
  {
    v28 = a2;
    v29 = (_QWORD *)swift_allocObject(&unk_10060B4A0, 40, 7);
    v29[2] = a1;
    v29[3] = a3;
    v29[4] = a4;
    swift_retain(a1);
    swift_bridgeObjectRetain(a4);
    runAsyncAndBlock<A>(timeout:file:function:line:_:)(0, 1, 0xD00000000000002DLL, 0x8000000100553690, 0xD000000000000079, 0x80000001005547D0, 223, &unk_100638730, v29, (char *)&type metadata for () + 8);
    swift_release(v29);
    v30 = *(_QWORD *)(a1 + 64);
    swift_retain(v30);
    sub_100463A20(a3, a4, 1);
    swift_release(v30);
    sub_1001F83C8(v28, a3, a4);
    v31 = *(_QWORD *)(*(_QWORD *)(a1 + 128) + 16);
    swift_beginAccess(v31 + 16, v42, 1, 0);
    v32 = *(_QWORD *)(v31 + 16);
    *(_QWORD *)(v31 + 16) = &_swiftEmptyDictionarySingleton;
    return swift_bridgeObjectRelease(v32);
  }
}

uint64_t sub_1001E5438(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[3] = a3;
  v4[4] = a4;
  v4[2] = a2;
  return swift_task_switch(sub_1001E5454, 0, 0);
}

uint64_t sub_1001E5454()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0[2] + 104);
  v0[5] = v1;
  v2 = dword_100640CDC;
  swift_retain(v1);
  v3 = (_QWORD *)swift_task_alloc(v2);
  v0[6] = v3;
  *v3 = v0;
  v3[1] = sub_1001E54B8;
  return sub_100426DC8(v0[3], v0[4]);
}

uint64_t sub_1001E54B8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 48);
  v3 = *v1;
  *(_QWORD *)(v3 + 56) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_1001E552C, 0, 0);
  swift_release(*(_QWORD *)(v3 + 40));
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1001E552C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001E5560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4[7] = a4;
  v5 = type metadata accessor for Logger(0);
  v4[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[9] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[10] = swift_task_alloc(v7);
  v4[11] = swift_task_alloc(v7);
  return swift_task_switch(sub_1001E55D0, 0, 0);
}

uint64_t sub_1001E55D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  v1 = v0[7];
  v2 = *(_QWORD *)(v1 + 88);
  v0[12] = v2;
  v3 = *(void **)(v1 + 16);
  v0[13] = v3;
  v4 = unk_100635B9C;
  v8 = (uint64_t (*)(uint64_t))((char *)&dword_100635B98 + dword_100635B98);
  swift_retain(v2);
  v5 = v3;
  v6 = (_QWORD *)swift_task_alloc(v4);
  v0[14] = v6;
  *v6 = v0;
  v6[1] = sub_1001E5658;
  return v8((uint64_t)v3);
}

uint64_t sub_1001E5658()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 112);
  *(_QWORD *)(*v1 + 120) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1001E5798;
  }
  else
  {
    v5 = *(void **)(v2 + 104);
    swift_release(*(_QWORD *)(v2 + 96));

    v4 = sub_1001E56C8;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1001E56C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = defaultLogger()(a1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Successfully cancelled proofing", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = *(_QWORD *)(v1 + 88);
  v7 = *(_QWORD *)(v1 + 64);
  v8 = *(_QWORD *)(v1 + 72);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  v9 = *(_QWORD *)(v1 + 80);
  swift_task_dealloc(*(_QWORD *)(v1 + 88));
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1001E5798()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(void **)(v0 + 104);
  swift_release(*(_QWORD *)(v0 + 96));

  defaultLogger()(v3);
  swift_errorRetain(v1);
  v4 = swift_errorRetain(v1);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.debug.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    v7 = *(_QWORD *)(v0 + 120);
    v19 = *(_QWORD *)(v0 + 72);
    v20 = *(_QWORD *)(v0 + 64);
    v21 = *(_QWORD *)(v0 + 80);
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v22 = v9;
    *(_DWORD *)v8 = 136315138;
    swift_getErrorValue(v7, v0 + 40, v0 + 16);
    v10 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
    v12 = v11;
    *(_QWORD *)(v0 + 48) = sub_1000E3AC8(v10, v11, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56, v8 + 4);
    swift_bridgeObjectRelease(v12);
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "received an error during proofing cancellation %s. Ignore the error.", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21, v20);
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 120);
    v15 = *(_QWORD *)(v0 + 72);
    v14 = *(_QWORD *)(v0 + 80);
    v16 = *(_QWORD *)(v0 + 64);
    swift_errorRelease(v13);
    swift_errorRelease(v13);
    swift_errorRelease(v13);

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  v17 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001E59A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch(sub_1001E59C0, 0, 0);
}

uint64_t sub_1001E59C0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t **v3;

  v1 = *(_QWORD *)(v0[3] + 120);
  v0[4] = v1;
  v2 = dword_100640F34;
  swift_retain(v1);
  v3 = (uint64_t **)swift_task_alloc(v2);
  v0[5] = (uint64_t)v3;
  *v3 = v0;
  v3[1] = (uint64_t *)sub_1001E5A28;
  return sub_100430D0C(v0[2]);
}

uint64_t sub_1001E5A28()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 40);
  v3 = *v1;
  *(_QWORD *)(v3 + 48) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_1001FCFEC, 0, 0);
  swift_release(*(_QWORD *)(v3 + 32));
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1001E5A9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = type metadata accessor for IdentityProofingAttributeConfiguration(0);
  v3[5] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[6] = v5;
  v3[7] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001E5B00, 0, 0);
}

uint64_t sub_1001E5B00()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[4];
  v2 = *(_QWORD *)(v0[3] + 40);
  v0[8] = v2;
  v3 = *(_QWORD *)(v1 + 64);
  v4 = dword_100634C0C;
  swift_retain(v2);
  v5 = (_QWORD *)swift_task_alloc(v4);
  v0[9] = v5;
  *v5 = v0;
  v5[1] = sub_1001E5B78;
  return sub_1000FE8D8(v0[7], v3);
}

uint64_t sub_1001E5B78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1001E5CEC;
  else
    v3 = sub_1001E5BDC;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001E5BDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = type metadata accessor for JSONEncoder(0);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v5 = JSONEncoder.init()();
  v6 = sub_100004790(&qword_100632C00, (uint64_t (*)(uint64_t))&type metadata accessor for IdentityProofingAttributeConfiguration, (uint64_t)&protocol conformance descriptor for IdentityProofingAttributeConfiguration);
  v7 = dispatch thunk of JSONEncoder.encode<A>(_:)(v2, v3, v6);
  if (v1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 40));
    swift_release(v5);
    v9 = *(_QWORD *)(v0 + 56);
    swift_release(*(_QWORD *)(v0 + 64));
    swift_task_dealloc(v9);
  }
  else
  {
    v10 = v7;
    v11 = v8;
    v13 = *(_QWORD *)(v0 + 56);
    v12 = *(_QWORD *)(v0 + 64);
    v14 = *(uint64_t **)(v0 + 16);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 48) + 8))(v13, *(_QWORD *)(v0 + 40));
    swift_release(v5);
    swift_release(v12);
    *v14 = v10;
    v14[1] = v11;
    swift_task_dealloc(v13);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001E5CEC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 64));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001E5D28@<X0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, int a4@<W4>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  NSObject *isa;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  void *v84;
  void (*v85)(char *, uint64_t);
  NSObject *v86;
  int v87;
  _BOOL4 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  void (*v95)(char *, uint64_t);
  _QWORD *v96;
  void (*v97)(char *, uint64_t);
  id v98;
  unint64_t v99;
  Swift::String v100;
  Swift::Bool v101;
  char *v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t result;
  Swift::String v108;
  void *v109;
  id v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  NSObject *v114;
  os_log_type_t v115;
  uint8_t *v116;
  uint64_t v117;
  id v118;
  void *v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  char *v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _BOOL8 v132;
  uint64_t v133;
  _BOOL8 v134;
  uint64_t v135;
  NSObject *v136;
  os_log_type_t v137;
  uint8_t *v138;
  uint64_t v139;
  id v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  unint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  _QWORD *v176;
  _QWORD *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  NSObject *v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  _QWORD *v188;
  _QWORD *v189;
  NSObject *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  NSObject *v196;
  int v197;
  uint64_t v198;
  _QWORD *v199;
  NSObject *v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  unint64_t v210;
  unint64_t v211;
  uint64_t v212;
  uint64_t v213;
  Swift::String v214;
  uint64_t v215;
  __n128 v216;
  uint64_t v217;
  _QWORD *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  void *v224;
  uint64_t v225;
  void *v226;
  void *v227;
  uint64_t v228;
  void *v229;
  void *v230;
  uint64_t v231;
  void *v232;
  void *v233;
  uint64_t v234;
  void *v235;
  void *v236;
  uint64_t v237;
  void *v238;
  void *v239;
  uint64_t v240;
  void *v241;
  void *v242;
  _QWORD *v243;
  void *v244;
  _QWORD *v245;
  uint64_t v246;
  uint64_t v247;
  void *v248;
  uint64_t v249;
  id v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  unint64_t v262;
  uint64_t v263;
  NSObject *v264;
  os_log_type_t v265;
  _BOOL4 v266;
  void (*v267)(unint64_t, uint64_t);
  uint8_t *v268;
  uint8_t *v269;
  NSObject *v270;
  NSObject *v271;
  char *v272;
  id v273;
  uint8_t *v274;
  uint64_t v275;
  _QWORD *v276;
  char *v277;
  unint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  NSObject *v283;
  uint64_t v284;
  _QWORD *v285;
  int64_t v286;
  _QWORD *v287;
  uint64_t *v288;
  uint64_t v289;
  uint64_t v290;
  unint64_t v291;
  unint64_t v292;
  _QWORD *v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t *v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  void *v305;
  NSObject *v306;
  os_log_type_t v307;
  BOOL v308;
  uint8_t *v309;
  uint64_t v310;
  uint64_t v311;
  unint64_t v312;
  unint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  unint64_t v317;
  uint64_t v318;
  NSObject *v319;
  uint8_t *v320;
  char *v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  _QWORD *v327;
  NSObject *v328;
  uint64_t v329;
  _QWORD *v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  NSObject *v334;
  NSObject *v335;
  char *v336;
  uint64_t v337;
  uint64_t v338;
  _QWORD *v339;
  uint64_t v340;
  uint64_t v341;
  char *v342;
  void *v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint8_t *v349;
  uint64_t v350;
  uint64_t v351;
  char *v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  unint64_t v356;
  uint64_t v357;
  NSObject *v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  unint64_t v366;
  unint64_t v367;
  uint64_t v368;
  uint64_t v369;
  unint64_t v370;
  uint64_t v371;
  NSObject **v372;
  char *v373;
  id v374;
  id v375;
  uint64_t (*v376)(uint64_t);
  uint64_t v377;
  NSObject *v378;
  NSObject *v379;
  char *v380;
  uint64_t v381;
  uint64_t v382;
  _QWORD *v383;
  uint64_t v384;
  uint64_t v385;
  NSObject *v386;
  uint8_t *v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  char v397;
  uint8_t *v398;
  uint64_t v399;
  uint64_t v400;
  __int128 v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  NSObject *v409;
  uint64_t v410;
  uint64_t v411;
  NSObject *v412;
  os_log_type_t v413;
  uint8_t *v414;
  _QWORD *v415;
  uint8_t **v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  _QWORD *v420;
  uint8_t *v421;
  NSObject *v422;
  NSObject *v423;
  uint64_t v424;
  void *v425;
  NSObject *v426;
  os_log_type_t v427;
  uint8_t *v428;
  NSObject *v429;
  NSObject *v430;
  NSObject *v431;
  uint64_t v432;
  Swift::String v433;
  Swift::String v434;
  id v435;
  void *v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  NSObject *v440;
  os_log_type_t v441;
  uint8_t *v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  unint64_t v447;
  unint64_t v448;
  NSObject *v449;
  char *v450;
  unint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  char *v455;
  _QWORD *v456;
  uint64_t v457;
  unint64_t v458;
  unint64_t v459;
  uint64_t v460;
  _QWORD *v461;
  _QWORD *v462;
  NSObject *v463;
  _QWORD *v464;
  uint64_t v465;
  NSObject *v466;
  unint64_t v467;
  NSObject *v468;
  unint64_t v469;
  Swift::String v470;
  void *v471;
  NSObject *v472;
  unint64_t v473;
  unint64_t v474;
  Swift::String *v475;
  uint64_t v476;
  unint64_t v477;
  unint64_t v478;
  _QWORD *v479;
  uint64_t v480;
  uint64_t v481;
  unint64_t v482;
  unint64_t v483;
  NSObject *v484;
  _QWORD *v485;
  uint64_t v486;
  Swift::String v487;
  uint64_t v488;
  void *object;
  _QWORD *v490;
  __int128 v491;
  uint64_t v492;
  uint64_t v493;
  NSObject *v494;
  uint64_t v495;
  NSObject *v496;
  uint64_t v497;
  NSObject *v498;
  uint64_t v499;
  os_log_type_t v500;
  uint8_t *v501;
  uint64_t v502;
  void (*v503)(uint64_t, uint64_t);
  uint64_t v504;
  NSObject *v505;
  uint64_t v506;
  uint64_t v507;
  char *v508;
  unint64_t v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  void *v514;
  NSObject *v515;
  os_log_type_t v516;
  uint8_t *v517;
  NSObject *v518;
  NSObject *v519;
  uint64_t v520;
  uint8_t *v521;
  uint64_t v522;
  __int128 v523;
  Swift::String v524;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v526;
  _QWORD *v527;
  id v528;
  __int128 v529;
  uint64_t v530;
  uint64_t v531;
  id v532;
  uint64_t v533;
  uint64_t v534;
  _QWORD *v535;
  NSObject *v536;
  NSObject *v537;
  uint64_t v538;
  uint64_t v539;
  unint64_t v540;
  unint64_t v541;
  uint64_t v542;
  uint64_t v543;
  unint64_t v544;
  unint64_t v545;
  uint64_t v546;
  _QWORD *v547;
  id v548;
  id v549;
  NSObject *v550;
  Swift::String v551;
  Swift::String v552;
  id v553;
  void *v554;
  uint64_t v555;
  uint64_t v556;
  uint64_t v557;
  NSObject *v558;
  os_log_type_t v559;
  uint8_t *v560;
  char *v561;
  uint64_t v562;
  uint64_t v563;
  unint64_t v564;
  unint64_t v565;
  uint8_t *v566;
  NSObject *v567;
  char *v568;
  unint64_t v569;
  uint64_t v570;
  uint64_t v571;
  NSObject *v572;
  uint64_t v573;
  _QWORD *v574;
  _QWORD *v575;
  uint64_t v576;
  NSObject *v577;
  uint64_t v578;
  uint64_t v579;
  uint64_t v580;
  NSObject *v581;
  uint64_t v582;
  os_log_type_t v583;
  uint8_t *v584;
  _QWORD *v585;
  char v586;
  NSObject *v587;
  _QWORD *v588;
  _QWORD *v589;
  uint64_t v590;
  NSObject *v591;
  NSObject *v592;
  uint64_t v593;
  __int128 v594;
  uint64_t v595;
  NSObject *v596;
  os_log_type_t v597;
  uint8_t *v598;
  uint64_t v599;
  unint64_t v600;
  unint64_t v601;
  uint8_t *v602;
  Swift::String v603;
  NSObject *v604;
  unint64_t v605;
  unint64_t v606;
  Swift::String *v607;
  uint64_t v608;
  uint8_t *v609;
  uint64_t (*v610)(uint64_t, uint64_t, NSObject *);
  _QWORD *v611;
  char *v612;
  char *v613;
  char *v614;
  char *v615;
  uint64_t v616;
  char *v617;
  char *v618;
  uint64_t v619;
  char *v620;
  char *v621;
  char *v622;
  uint64_t v623;
  uint64_t v624;
  uint64_t v625;
  uint64_t v626;
  uint64_t v627;
  uint64_t v628;
  uint64_t v629;
  uint64_t v630;
  uint64_t v631;
  uint64_t v632;
  uint64_t v633;
  char *v634;
  uint64_t v635;
  uint64_t v636;
  uint64_t v637;
  uint64_t countAndFlagsBits;
  __int128 v639;
  __int128 v640;
  _QWORD *v641;
  uint64_t v642;
  uint64_t v643;
  uint8_t *v644;
  uint64_t v645;
  uint64_t v646;
  char *v647;
  unint64_t v648;
  uint64_t v649;
  uint8_t *v650;
  uint64_t v651;
  uint64_t v652;
  NSObject *v653;
  NSObject *v654;
  void *v655;
  char *v656;
  uint64_t v657;
  uint64_t v658;
  char *v659;
  NSObject *v660;
  uint64_t v661;
  char *v662;
  uint64_t v663;
  _QWORD *v664;
  id v665;
  void (*v666)(char *, uint64_t);
  uint64_t v667;
  uint8_t *v668;
  NSObject *v669;
  char *v670;
  uint64_t v671;
  uint64_t v672;
  NSObject *v673;
  _BYTE v674[24];
  uint64_t v675;
  __int128 v676;
  __int128 v677;
  __int128 v678;
  __int128 v679;
  __int128 v680;
  __int128 v681;
  char v682[24];
  _QWORD v683[5];
  char v684[40];
  _QWORD *v685;

  LODWORD(v655) = a4;
  v661 = a3;
  v658 = a2;
  v623 = a5;
  v628 = sub_100004828(&qword_1006384E0);
  v616 = *(_QWORD *)(v628 - 8);
  __chkstk_darwin(v628);
  v618 = (char *)&v610 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)&v639 + 1) = type metadata accessor for TiberiusWrappedAssessment(0);
  v626 = *(_QWORD *)(*((_QWORD *)&v639 + 1) - 8);
  v7 = __chkstk_darwin(*((_QWORD *)&v639 + 1));
  v645 = (uint64_t)&v610 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v630 = (uint64_t)&v610 - v10;
  v627 = v11;
  __chkstk_darwin(v9);
  *(_QWORD *)&v639 = (char *)&v610 - v12;
  v635 = type metadata accessor for ODNAssessmentResult(0);
  v13 = __chkstk_darwin(v635);
  v633 = (uint64_t)&v610 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  countAndFlagsBits = (uint64_t)&v610 - v15;
  v16 = sub_100004828(&qword_1006384E8);
  v624 = *(_QWORD *)(v16 - 8);
  v17 = __chkstk_darwin(v16);
  v629 = (uint64_t)&v610 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v625 = v18;
  __chkstk_darwin(v17);
  v652 = (uint64_t)&v610 - v19;
  v20 = sub_100004828(&qword_1006385B0);
  __chkstk_darwin(v20);
  *((_QWORD *)&v640 + 1) = (char *)&v610 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for IdentityProofingIDType(0);
  v641 = *(_QWORD **)(v22 - 8);
  v642 = v22;
  __chkstk_darwin(v22);
  *(_QWORD *)&v640 = (char *)&v610 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for PDF417Data(0);
  isa = v24[-1].isa;
  v653 = v24;
  v654 = isa;
  v26 = __chkstk_darwin(v24);
  v620 = (char *)&v610 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v646 = (uint64_t)&v610 - v28;
  v29 = sub_100004828(&qword_100633978);
  v30 = __chkstk_darwin(v29);
  v632 = (uint64_t)&v610 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __chkstk_darwin(v30);
  v637 = (uint64_t)&v610 - v33;
  __chkstk_darwin(v32);
  v647 = (char *)&v610 - v34;
  v35 = sub_100004828(&qword_1006385A8);
  v36 = __chkstk_darwin(v35);
  v619 = (uint64_t)&v610 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __chkstk_darwin(v36);
  v631 = (uint64_t)&v610 - v39;
  v40 = __chkstk_darwin(v38);
  v636 = (uint64_t)&v610 - v41;
  v42 = __chkstk_darwin(v40);
  v644 = (uint8_t *)&v610 - v43;
  v44 = __chkstk_darwin(v42);
  v650 = (uint8_t *)&v610 - v45;
  __chkstk_darwin(v44);
  v649 = (uint64_t)&v610 - v46;
  v657 = type metadata accessor for HPKESuiteKwV1(0);
  v47 = *(_QWORD *)(v657 - 8);
  __chkstk_darwin(v657);
  v656 = (char *)&v610 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_100004828(&qword_10062FEC0);
  __chkstk_darwin(v49);
  v659 = (char *)&v610 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = type metadata accessor for DIPError.Code(0);
  v668 = (uint8_t *)v51[-1].isa;
  v669 = v51;
  __chkstk_darwin(v51);
  v670 = (char *)&v610 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for Logger(0);
  v54 = *(_QWORD **)(v53 - 8);
  v55 = __chkstk_darwin(v53);
  v617 = (char *)&v610 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __chkstk_darwin(v55);
  v613 = (char *)&v610 - v58;
  v59 = __chkstk_darwin(v57);
  v612 = (char *)&v610 - v60;
  v61 = __chkstk_darwin(v59);
  v614 = (char *)&v610 - v62;
  v63 = __chkstk_darwin(v61);
  v615 = (char *)&v610 - v64;
  v65 = __chkstk_darwin(v63);
  v622 = (char *)&v610 - v66;
  v67 = __chkstk_darwin(v65);
  v634 = (char *)&v610 - v68;
  v69 = __chkstk_darwin(v67);
  v621 = (char *)&v610 - v70;
  v71 = __chkstk_darwin(v69);
  v643 = (uint64_t)&v610 - v72;
  v73 = __chkstk_darwin(v71);
  v648 = (unint64_t)&v610 - v74;
  v75 = __chkstk_darwin(v73);
  v651 = (uint64_t)&v610 - v76;
  v77 = __chkstk_darwin(v75);
  v662 = (char *)&v610 - v78;
  v79 = __chkstk_darwin(v77);
  v664 = (uint64_t (**)(uint64_t, uint64_t, NSObject *))((char *)&v610 - v80);
  v81 = __chkstk_darwin(v79);
  v83 = (char *)&v610 - v82;
  defaultLogger()(v81);
  v84 = a1;
  v85 = a1;
  v86 = Logger.logObject.getter((void (*)(char *, uint64_t))v85);
  v87 = static os_log_type_t.debug.getter(v86);
  v88 = os_log_type_enabled(v86, (os_log_type_t)v87);
  v667 = v53;
  v665 = v84;
  if (v88)
  {
    LODWORD(v610) = v87;
    v666 = (void (*)(char *, uint64_t))v85;
    v611 = v54;
    v663 = v47;
    v89 = swift_slowAlloc(22, -1);
    v90 = swift_slowAlloc(64, -1);
    *(_QWORD *)&v679 = v90;
    *(_DWORD *)v89 = 136315394;
    *(_QWORD *)&v676 = sub_1000E3AC8(0xD00000000000005BLL, 0x8000000100553C40, (uint64_t *)&v679);
    v91 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v676, (char *)&v676 + 8, v89 + 4);
    *(_WORD *)(v89 + 12) = 2080;
    if (v84 && (v92 = IdentityProofingConfiguration.credentialIdentifier.getter(v91), v93))
    {
      v94 = v93;
    }
    else
    {
      swift_bridgeObjectRelease(0);
      v94 = 0xE300000000000000;
      v92 = 7104878;
    }
    *(_QWORD *)&v676 = sub_1000E3AC8(v92, v94, (uint64_t *)&v679);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v676, (char *)&v676 + 8, v89 + 14);
    v97 = v666;

    swift_bridgeObjectRelease(v94);
    _os_log_impl((void *)&_mh_execute_header, v86, (os_log_type_t)v610, "%s , credentialIdentifier = %s", (uint8_t *)v89, 0x16u);
    swift_arrayDestroy(v90, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v90, -1, -1);
    swift_slowDealloc(v89, -1, -1);

    v95 = (void (*)(char *, uint64_t))v611[1];
    v95(v83, v667);
    v47 = v663;
    v96 = v685;
  }
  else
  {

    v95 = (void (*)(char *, uint64_t))v54[1];
    v95(v83, v53);
    v96 = v685;
    v97 = v85;
  }
  v98 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v99 = 0xD00000000000005BLL;
  v100._countAndFlagsBits = 0xD00000000000001CLL;
  v100._object = (void *)0x8000000100553BD0;
  v101 = NSUserDefaults.internalBool(forKey:)(v100);

  if (v101)
  {
    v102 = v670;
    (*((void (**)(char *, _QWORD, NSObject *))v668 + 13))(v670, enum case for DIPError.Code.unableToAddID(_:), v669);
    v103 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v104 = type metadata accessor for DIPError(0);
    v105 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    swift_allocError(v104, v105, 0, 0);
    v106 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000025, 0x8000000100553F00, 0, v102, 0, v103, 0xD00000000000007CLL, 0x80000001005535D0, 0xD00000000000005BLL, 0x8000000100553C40, 334);
LABEL_11:
    swift_willThrow(v106);
    return sub_1001EA1BC();
  }
  v106 = sub_1001F4E44();
  if (v106)
    goto LABEL_11;
  v108._countAndFlagsBits = 0xD000000000000012;
  v108._object = (void *)0x8000000100553BF0;
  debugLogFootprint(_:)(v108);
  if (!v665)
  {
    v124 = v670;
    (*((void (**)(char *, _QWORD, NSObject *))v668 + 13))(v670, enum case for DIPError.Code.proofingConfigurationUnavailable(_:), v669);
    v125 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v126 = type metadata accessor for DIPError(0);
    v127 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    swift_allocError(v126, v127, 0, 0);
    v106 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000002BLL, 0x8000000100553C10, 0, v124, 0, v125, 0xD00000000000007CLL, 0x80000001005535D0, 0xD00000000000005BLL, 0x8000000100553C40, 342);
    goto LABEL_11;
  }
  v666 = v95;
  v109 = (void *)v96[2];
  v96[2] = v665;
  v110 = v97;

  v111 = v664;
  v113 = defaultLogger()(v112);
  v114 = Logger.logObject.getter(v113);
  v115 = static os_log_type_t.debug.getter(v114);
  if (os_log_type_enabled(v114, v115))
  {
    v665 = v110;
    v663 = v47;
    v116 = (uint8_t *)swift_slowAlloc(12, -1);
    v117 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v679 = v117;
    *(_DWORD *)v116 = 136446210;
    v118 = (id)stringsArrayFromIdentityProofingOptions(v661);
    if (!v118)
    {
      __break(1u);
      goto LABEL_181;
    }
    v119 = v118;
    v120 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v118, &type metadata for String);

    v121 = Array.description.getter(v120, &type metadata for String);
    v123 = v122;
    swift_bridgeObjectRelease(v120);
    *(_QWORD *)&v676 = sub_1000E3AC8(v121, v123, (uint64_t *)&v679);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v676, (char *)&v676 + 8, v116 + 4);
    swift_bridgeObjectRelease(v123);
    _os_log_impl((void *)&_mh_execute_header, v114, v115, "Proof identity called with proofing options: %{public}s", v116, 0xCu);
    swift_arrayDestroy(v117, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v117, -1, -1);
    swift_slowDealloc(v116, -1, -1);

    v666((char *)v664, v667);
    v47 = v663;
    v110 = v665;
    v96 = v685;
  }
  else
  {

    v666((char *)v111, v667);
  }
  v128 = v96[15] + 136;
  swift_beginAccess(v128, v684, 0, 0);
  sub_100038B24(v128, (uint64_t)&v679, &qword_1006384C8);
  v129 = *((_QWORD *)&v680 + 1);
  v130 = sub_100008030((uint64_t)&v679, &qword_1006384C8);
  if (v129)
  {
    v131 = v96[15];
    v132 = *(_QWORD *)(v131 + 88) != 0;
    v133 = v131 + 136;
    swift_beginAccess(v131 + 136, &v671, 0, 0);
    sub_100038B24(v133, (uint64_t)&v679, &qword_1006384C8);
    v134 = *((_QWORD *)&v680 + 1) != 0;
    sub_100008030((uint64_t)&v679, &qword_1006384C8);
    type metadata accessor for DaemonAnalytics(0);
    static DaemonAnalytics.sendDynamicWorkflowNeededEvent(providerID:wasFetchedInTime:didError:)(0x61746E6567616DLL, 0xE700000000000000, v134, v132);
  }
  else
  {
    v135 = defaultLogger()(v130);
    v136 = Logger.logObject.getter(v135);
    v137 = static os_log_type_t.debug.getter(v136);
    if (os_log_type_enabled(v136, v137))
    {
      v138 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v138 = 0;
      _os_log_impl((void *)&_mh_execute_header, v136, v137, "The dynamic workflow is nil. Will attempt to refetch workflow", v138, 2u);
      swift_slowDealloc(v138, -1, -1);
    }

    v666(v662, v667);
    v139 = v96[15];
    swift_retain(v139);
    sub_10042EAC0(v110, 1);
    swift_release(v139);
  }
  v140 = *(id *)(v96[15] + 80);
  OS_dispatch_group.wait()();

  v141 = v96[15];
  v142 = *(_QWORD *)(v141 + 88);
  if (v142)
  {
    v143 = v670;
    (*((void (**)(char *, _QWORD, NSObject *))v668 + 13))(v670, enum case for DIPError.Code.internalError(_:), v669);
    swift_errorRetain(v142);
    swift_errorRetain(v142);
    v144 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v145 = type metadata accessor for DIPError(0);
    v146 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    swift_allocError(v145, v146, 0, 0);
    v147 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001ELL, 0x8000000100553EE0, v142, v143, 0, v144, 0xD00000000000007CLL, 0x80000001005535D0, 0xD00000000000005BLL, 0x8000000100553C40, 366);
    swift_willThrow(v147);
    swift_errorRelease(v142);

    return sub_1001EA1BC();
  }
  swift_beginAccess(v141 + 136, v682, 0, 0);
  sub_100038B24(v141 + 136, (uint64_t)&v679, &qword_1006384C8);
  if (!*((_QWORD *)&v680 + 1))
  {
    sub_100008030((uint64_t)&v679, &qword_1006384C8);
    v154 = v670;
    (*((void (**)(char *, _QWORD, NSObject *))v668 + 13))(v670, enum case for DIPError.Code.missingIdentityWorkFlow(_:), v669);
    v155 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v156 = type metadata accessor for DIPError(0);
    v157 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    swift_allocError(v156, v157, 0, 0);
    v158 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000024, 0x80000001005535A0, 0, v154, 0, v155, 0xD00000000000007CLL, 0x80000001005535D0, 0xD00000000000005BLL, 0x8000000100553C40, 370);
    swift_willThrow(v158);

    return sub_1001EA1BC();
  }
  sub_100008018(&v679, (uint64_t)v683);
  v148 = v141 + OBJC_IVAR____TtC8coreidvd35IdentityProofingFetchedAssetManager_identityKeyPair;
  swift_beginAccess(v141 + OBJC_IVAR____TtC8coreidvd35IdentityProofingFetchedAssetManager_identityKeyPair, &v675, 0, 0);
  sub_100038B24(v148, (uint64_t)&v676, &qword_100637FA8);
  if (!*((_QWORD *)&v677 + 1))
  {
    sub_100008030((uint64_t)&v676, &qword_100637FA8);
    v159 = v670;
    (*((void (**)(char *, _QWORD, NSObject *))v668 + 13))(v670, enum case for DIPError.Code.baaCertificateDoesntExist(_:), v669);
    v160 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v161 = type metadata accessor for DIPError(0);
    v162 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    swift_allocError(v161, v162, 0, 0);
    v163 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000002DLL, 0x8000000100553CA0, 0, v159, 0, v160, 0xD00000000000007CLL, 0x80000001005535D0, 0xD00000000000005BLL, 0x8000000100553C40, 374);
    swift_willThrow(v163);

    _s8coreidvd24DigitalPresentmentHelperVwxx_0(v683);
    return sub_1001EA1BC();
  }
  v679 = v676;
  v680 = v677;
  v681 = v678;
  v149 = *(_QWORD *)(v141 + OBJC_IVAR____TtC8coreidvd35IdentityProofingFetchedAssetManager_supplementalDataFetcher);
  if (!v149)
  {
    v164 = v670;
    (*((void (**)(char *, _QWORD, NSObject *))v668 + 13))(v670, enum case for DIPError.Code.cannotBuildDeviceDataForAssessor(_:), v669);
    v165 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v166 = type metadata accessor for DIPError(0);
    v167 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    swift_allocError(v166, v167, 0, 0);
    v168 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000033, 0x8000000100553CD0, 0, v164, 0, v165, 0xD00000000000007CLL, 0x80000001005535D0, 0xD00000000000005BLL, 0x8000000100553C40, 378);
    swift_willThrow(v168);

LABEL_36:
    _s8coreidvd24DigitalPresentmentHelperVwxx_0(v683);
LABEL_40:
    sub_1001A496C(&v679);
    return sub_1001EA1BC();
  }
  v150 = *(char **)(v96[16] + 96);
  if (!v150)
  {
    v169 = v670;
    (*((void (**)(char *, _QWORD, NSObject *))v668 + 13))(v670, enum case for DIPError.Code.odnNotInitialized(_:), v669);
    swift_retain(v149);
    v170 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v171 = type metadata accessor for DIPError(0);
    v172 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    swift_allocError(v171, v172, 0, 0);
    v173 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000023, 0x8000000100553D10, 0, v169, 0, v170, 0xD00000000000007CLL, 0x80000001005535D0, 0xD00000000000005BLL, 0x8000000100553C40, 382);
    swift_willThrow(v173);

    swift_release(v149);
    goto LABEL_36;
  }
  v151 = *((_QWORD *)v150 + 13);
  v664 = *(_QWORD **)(v141 + OBJC_IVAR____TtC8coreidvd35IdentityProofingFetchedAssetManager_supplementalDataFetcher);
  if (v151)
  {
    v152 = *((_QWORD *)v150 + 12);
    v153 = v151;
  }
  else
  {
    v152 = *((_QWORD *)v150 + 14);
    v153 = *((_QWORD *)v150 + 15);
    swift_bridgeObjectRetain(v153);
  }
  v174 = type metadata accessor for TaskPriority(0);
  v175 = (uint64_t)v659;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v174 - 8) + 56))(v659, 1, 1, v174);
  v176 = (_QWORD *)swift_allocObject(&unk_10060B060, 56, 7);
  v176[2] = 0;
  v176[3] = 0;
  v176[4] = v150;
  v176[5] = v152;
  v176[6] = v153;
  swift_bridgeObjectRetain(v151);
  swift_retain_n(v150, 2);
  v662 = v150;
  v177 = v664;
  swift_retain(v664);
  v178 = sub_1001075D4(v175, (uint64_t)&unk_1006366C8, (uint64_t)v176);
  swift_release(v178);
  v179 = *((_QWORD *)&v680 + 1);
  v180 = v681;
  sub_10000806C(&v679, *((uint64_t *)&v680 + 1));
  v181 = v660;
  v182 = dispatch thunk of IdentityKey.getIdentityPublicKeyData()(v179, v180);
  if (v181)
  {
    _s8coreidvd24DigitalPresentmentHelperVwxx_0(v683);

    swift_release(v662);
    swift_release(v177);
    goto LABEL_40;
  }
  v184 = v662;
  v660 = 0;
  v185 = v656;
  HPKESuiteKwV1.init(pkISm:info:)(v182, v183, 0, 0xC000000000000000);
  v186 = v96[16];
  v187 = v657;
  *((_QWORD *)&v677 + 1) = v657;
  *(_QWORD *)&v678 = &protocol witness table for HPKESuiteKwV1;
  v188 = sub_100022234(&v676);
  v189 = *(_QWORD **)(v47 + 16);
  ((void (*)(_QWORD *, char *, uint64_t))v189)(v188, v185, v187);
  swift_retain(v186);
  v190 = v660;
  sub_100223114(v658, &v676, v655 & 1);
  v660 = v190;
  if (v190)
  {

    swift_release(v664);
    swift_release(v184);
    swift_release(v186);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v185, v187);
LABEL_43:
    _s8coreidvd24DigitalPresentmentHelperVwxx_0(v683);
    sub_1001A496C(&v679);
    _s8coreidvd24DigitalPresentmentHelperVwxx_0(&v676);
    return sub_1001EA1BC();
  }
  v611 = v189;
  swift_release(v186);
  _s8coreidvd24DigitalPresentmentHelperVwxx_0(&v676);
  v191 = v96[16] + OBJC_IVAR____TtC8coreidvd36IdentityProofingProducedAssetManager_pdf417Data;
  swift_beginAccess(v191, v674, 0, 0);
  v192 = v649;
  sub_100038B24(v191, v649, &qword_1006385A8);
  v193 = (uint64_t)v96 + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_pdf417Data;
  swift_beginAccess((char *)v96 + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_pdf417Data, &v676, 33, 0);
  sub_100184E1C(v192, v193, &qword_1006385A8);
  swift_endAccess(&v676);
  v649 = v193;
  v194 = v193;
  v195 = (uint64_t)v650;
  sub_100038B24(v194, (uint64_t)v650, &qword_1006385A8);
  v196 = v653;
  v610 = (uint64_t (*)(uint64_t, uint64_t, NSObject *))v654[6].isa;
  v197 = v610(v195, 1, v653);
  v665 = v110;
  if (v197)
  {
    v198 = sub_100008030(v195, &qword_1006385A8);
  }
  else
  {
    v199 = v96;
    v200 = v654;
    v201 = v646;
    ((void (*)(uint64_t, uint64_t, NSObject *))v654[2].isa)(v646, v195, v196);
    v202 = sub_100008030(v195, &qword_1006385A8);
    v203 = v647;
    PDF417Data.parsedData.getter(v202);
    v204 = (uint64_t)v203;
    ((void (*)(uint64_t, NSObject *))v200[1].isa)(v201, v196);
    v205 = type metadata accessor for PDF417ParsedData(0);
    v206 = *(_QWORD *)(v205 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v206 + 48))(v204, 1, v205) == 1)
    {
      v198 = sub_100008030(v204, &qword_100633978);
    }
    else
    {
      v207 = PDF417ParsedData.docType.getter();
      v208 = v204;
      v209 = v207;
      v211 = v210;
      (*(void (**)(uint64_t, uint64_t))(v206 + 8))(v208, v205);
      v212 = HIBYTE(v211) & 0xF;
      if ((v211 & 0x2000000000000000) == 0)
        v212 = v209 & 0xFFFFFFFFFFFFLL;
      if (v212)
      {
        v213 = v47;
        v214 = String.lowercased()();
        swift_bridgeObjectRelease(v211);
        v215 = *((_QWORD *)&v640 + 1);
        IdentityProofingIDType.init(rawValue:)(v214._countAndFlagsBits, v214._object, v216);
        v218 = v641;
        v217 = v642;
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v641[6])(v215, 1, v642) == 1)
        {
          v219 = v640;
          ((void (*)(_QWORD, _QWORD, uint64_t))v218[13])(v640, enum case for IdentityProofingIDType.generic(_:), v217);
          v220 = sub_100008030(v215, &qword_1006385B0);
        }
        else
        {
          v219 = v640;
          v220 = ((uint64_t (*)(_QWORD, uint64_t, uint64_t))v218[4])(v640, v215, v217);
        }
        v295 = IdentityProofingIDType.rawValue.getter(v220);
        v297 = v296;
        ((void (*)(uint64_t, uint64_t))v218[1])(v219, v217);
        v298 = (_QWORD *)((char *)v199 + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_idType);
        v299 = *(_QWORD *)((char *)v199 + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_idType + 8);
        *v298 = v295;
        v298[1] = v297;
        v198 = swift_bridgeObjectRelease(v299);
        v47 = v213;
      }
      else
      {
        v198 = swift_bridgeObjectRelease(v211);
      }
    }
  }
  v221 = v651;
  defaultLogger()(v198);
  Logger.sensitive(_:)(sub_1001FB9EC);
  v222 = ((uint64_t (*)(uint64_t, uint64_t))v666)(v221, v667);
  v223 = IdentityProofingDocuments.frontID.getter(v222);
  if (v223)
  {
    v224 = (void *)v223;
    v655 = (void *)IdentityDocument.scanMetrics.getter();

  }
  else
  {
    v655 = 0;
  }
  v225 = IdentityProofingDocuments.backID.getter(v223);
  if (v225)
  {
    v226 = (void *)v225;
    v227 = (void *)IdentityDocument.scanMetrics.getter();

  }
  else
  {
    v227 = 0;
  }
  v228 = IdentityProofingDocuments.frontID.getter(v225);
  if (v228)
  {
    v229 = (void *)v228;
    v230 = (void *)IdentityDocument.imageMetrics.getter();

  }
  else
  {
    v230 = 0;
  }
  v231 = IdentityProofingDocuments.backID.getter(v228);
  if (v231)
  {
    v232 = (void *)v231;
    v233 = (void *)IdentityDocument.imageMetrics.getter();

  }
  else
  {
    v233 = 0;
  }
  v663 = v47;
  v234 = IdentityProofingDocuments.selfie.getter();
  if (v234)
  {
    v235 = (void *)v234;
    v236 = (void *)IdentityDocument.imageMetrics.getter();

  }
  else
  {
    v236 = 0;
  }
  v237 = ((uint64_t (*)(void))IdentityProofingDocuments.liveness.getter)();
  if (v237)
  {
    v238 = (void *)v237;
    v239 = (void *)IdentityLivenessResults.activeMetrics.getter();

  }
  else
  {
    v239 = 0;
  }
  v240 = ((uint64_t (*)(void))IdentityProofingDocuments.liveness.getter)();
  if (v240)
  {
    v241 = (void *)v240;
    v242 = (void *)IdentityLivenessResults.passiveMetrics.getter();

  }
  else
  {
    v242 = 0;
  }
  v243 = v664;
  v244 = v655;
  v659 = (char *)sub_10039CD88(v655, v227, (uint64_t)v230, (uint64_t)v233, (uint64_t)v236, (uint64_t)v239, (uint64_t)v242);

  v245 = v685;
  v246 = v685[12];
  v247 = swift_retain(v246);
  v248 = (void *)IdentityProofingDocuments.liveness.getter(v247);
  v249 = v652;
  sub_1003BF5AC(v248, v652);
  swift_release(v246);

  v250 = v665;
  v252 = IdentityProofingConfiguration.state.getter(v251);
  if (!v253)
  {
    v277 = v670;
    (*((void (**)(char *, _QWORD, NSObject *))v668 + 13))(v670, enum case for DIPError.Code.idStateUnavailable(_:), v669);
    v278 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v279 = type metadata accessor for DIPError(0);
    v280 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    swift_allocError(v279, v280, 0, 0);
    v281 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000004DLL, 0x8000000100553D40, 0, v277, 0, v278, 0xD00000000000007CLL, 0x80000001005535D0, 0xD000000000000020, 0x8000000100553D90, 1326);
    swift_willThrow(v281);

    swift_release(v243);
    swift_release(v662);
    swift_bridgeObjectRelease(v659);
    v282 = v249;
LABEL_85:
    sub_100008030(v282, &qword_1006384E8);
    (*(void (**)(char *, uint64_t))(v663 + 8))(v656, v657);
    goto LABEL_36;
  }
  v254 = v252;
  v255 = v253;
  v256 = v245[8];
  if (v661 == 2)
    v257 = 2;
  else
    v257 = 1;
  swift_retain(v245[8]);
  v258 = sub_100463D78(v254, v255, v257);
  swift_release(v256);
  swift_bridgeObjectRelease(v255);
  v259 = IdentityProofingActionStatus.rawValue.getter(v258);
  v260 = IdentityProofingActionStatus.rawValue.getter(12);
  v261 = v663;
  if (v259 == v260)
  {
    v262 = v648;
    v263 = defaultLogger()(v260);
    v264 = Logger.logObject.getter(v263);
    v265 = static os_log_type_t.debug.getter(v264);
    v266 = os_log_type_enabled(v264, v265);
    v267 = (void (*)(unint64_t, uint64_t))v666;
    if (v266)
    {
      v268 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v268 = 0;
      _os_log_impl((void *)&_mh_execute_header, v264, v265, "Preparing proofing request for Async Step Up.", v268, 2u);
      v269 = v268;
      v262 = v648;
      swift_slowDealloc(v269, -1, -1);
    }

    v267(v262, v667);
    v270 = v660;
    sub_1001F56CC((uint64_t)v250, v661);
    if (!v270)
    {
      v669 = v271;
      v670 = v272;
      v273 = *(id *)(v685[16] + 80);
      OS_dispatch_group.wait()();

      v274 = v644;
      ((void (*)(uint8_t *, uint64_t, uint64_t, NSObject *))v654[7].isa)(v644, 1, 1, v653);
      v275 = v657;
      *((_QWORD *)&v677 + 1) = v657;
      *(_QWORD *)&v678 = &protocol witness table for HPKESuiteKwV1;
      v276 = sub_100022234(&v676);
      ((void (*)(_QWORD *, char *, uint64_t))v611)(v276, v656, v275);
      v668 = (uint8_t *)sub_1001F59BC((uint64_t)v274, (uint64_t)&v679, v683, v243, &v676);
      v660 = 0;
      sub_100008030((uint64_t)v274, &qword_1006385A8);
      _s8coreidvd24DigitalPresentmentHelperVwxx_0(&v676);
      v300 = v636;
      sub_100038B24(v649, v636, &qword_1006385A8);
      if (v610(v300, 1, v653))
      {
        sub_100008030(v636, &qword_1006385A8);
        v302 = type metadata accessor for PDF417ParsedData(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v302 - 8) + 56))(v637, 1, 1, v302);
      }
      else
      {
        v334 = v653;
        v335 = v654;
        v336 = v620;
        v337 = v636;
        ((void (*)(char *, uint64_t, NSObject *))v654[2].isa)(v620, v636, v653);
        v338 = sub_100008030(v337, &qword_1006385A8);
        PDF417Data.parsedData.getter(v338);
        ((void (*)(char *, NSObject *))v335[1].isa)(v336, v334);
      }
      v339 = v664;
      swift_retain(v664);
      v341 = v637;
      v340 = countAndFlagsBits;
      sub_100274350(v637, (uint64_t)v339, countAndFlagsBits);
      swift_release(v339);
      sub_100008030(v341, &qword_100633978);
      *(_QWORD *)&v640 = *(_QWORD *)(v340 + 56);
      v342 = *(char **)(v340 + 64);
      v661 = *(_QWORD *)(v340 + 152);
      v658 = *(_QWORD *)(v340 + 160);
      v343 = *(void **)(v340 + 168);
      v654 = *(NSObject **)(v340 + 176);
      v655 = v343;
      v653 = *(NSObject **)(v340 + 184);
      v344 = *(_QWORD *)(v340 + 192);
      v650 = *(uint8_t **)(v340 + 200);
      v651 = v344;
      v345 = *(_QWORD *)(v340 + 208);
      v648 = (unint64_t)v342;
      v649 = v345;
      v346 = *(_QWORD *)(v340 + 88);
      v645 = *(_QWORD *)(v340 + 96);
      v347 = v645;
      v646 = v346;
      v349 = *(uint8_t **)(v340 + 104);
      v643 = *(_QWORD *)(v340 + 112);
      v348 = v643;
      v644 = v349;
      v350 = *(_QWORD *)(v340 + 128);
      v642 = *(_QWORD *)(v340 + 120);
      v351 = v642;
      v666 = *(void (**)(char *, uint64_t))(v340 + 136);
      v667 = v350;
      v352 = *(char **)(v340 + 224);
      *((_QWORD *)&v640 + 1) = *(_QWORD *)(v340 + 216);
      v647 = v352;
      v353 = v340 + *(int *)(v635 + 44);
      v354 = v639;
      v355 = v639 + *(int *)(*((_QWORD *)&v639 + 1) + 32);
      LODWORD(v340) = *(unsigned __int8 *)(v340 + 144);
      LODWORD(v641) = v340;
      sub_100038B24(v353, v355, &qword_100636698);
      v356 = v648;
      *(_QWORD *)v354 = v640;
      *(_QWORD *)(v354 + 8) = v356;
      v357 = v658;
      *(_QWORD *)(v354 + 16) = v661;
      *(_QWORD *)(v354 + 24) = v357;
      v358 = v654;
      *(_QWORD *)(v354 + 32) = v655;
      *(_QWORD *)(v354 + 40) = v358;
      v359 = v651;
      *(_QWORD *)(v354 + 48) = v653;
      *(_QWORD *)(v354 + 56) = v359;
      v360 = v649;
      *(_QWORD *)(v354 + 64) = v650;
      *(_QWORD *)(v354 + 72) = v360;
      *(_QWORD *)(v354 + 80) = v346;
      *(_QWORD *)(v354 + 88) = v347;
      *(_QWORD *)(v354 + 96) = v349;
      *(_QWORD *)(v354 + 104) = v348;
      v361 = v667;
      *(_QWORD *)(v354 + 112) = v351;
      *(_QWORD *)(v354 + 120) = v361;
      *(_QWORD *)(v354 + 128) = v666;
      *(_BYTE *)(v354 + 136) = v340;
      *(_QWORD *)(v354 + 144) = *((_QWORD *)&v640 + 1);
      *(_QWORD *)(v354 + 152) = v352;
      sub_10002581C((uint64_t)v683, (uint64_t)&v676);
      v362 = v630;
      sub_100035DE8(v354, v630, type metadata accessor for TiberiusWrappedAssessment);
      v363 = v629;
      sub_100038B24(v652, v629, &qword_1006384E8);
      v364 = *(unsigned __int8 *)(v626 + 80);
      v365 = (v364 + 72) & ~v364;
      v366 = (v627 + v365 + 7) & 0xFFFFFFFFFFFFFFF8;
      v367 = (v366 + 15) & 0xFFFFFFFFFFFFFFF8;
      v368 = *(unsigned __int8 *)(v624 + 80);
      v369 = (v368 + v367 + 16) & ~v368;
      v370 = (v625 + v369 + 7) & 0xFFFFFFFFFFFFFFF8;
      v371 = swift_allocObject(&unk_10060B1A0, v370 + 8, v364 | v368 | 7);
      *(_QWORD *)(v371 + 16) = v685;
      sub_100008018(&v676, v371 + 24);
      *(_QWORD *)(v371 + 64) = v668;
      sub_100038AE0(v362, v371 + v365, type metadata accessor for TiberiusWrappedAssessment);
      *(_QWORD *)(v371 + v366) = v659;
      v372 = (NSObject **)(v371 + v367);
      v373 = v670;
      *v372 = v669;
      v372[1] = v373;
      sub_1000A1F54(v363, v371 + v369, &qword_1006384E8);
      v374 = v665;
      *(_QWORD *)(v371 + v370) = v665;
      swift_bridgeObjectRetain(v648);
      v375 = v374;
      sub_1001AD7A0(v661, v658, (uint64_t)v655, (uint64_t)v654, (uint64_t)v653, v651, (uint64_t)v650, v649);
      sub_100183888(v646, v645, (uint64_t)v644, v643, v642, v667, (uint64_t)v666);
      swift_bridgeObjectRetain(v647);
      swift_retain(v685);
      runAsyncAndBlock<A>(timeout:file:function:line:_:)(0, 1, 0xD00000000000002DLL, 0x8000000100553690, 0xD00000000000005BLL, 0x8000000100553C40, 445, &unk_1006386A0, v371, v628);

      swift_release(v664);
      swift_release(v662);
      swift_release(v371);
      sub_100035DAC(v639, type metadata accessor for TiberiusWrappedAssessment);
      v376 = type metadata accessor for ODNAssessmentResult;
      v377 = countAndFlagsBits;
      goto LABEL_137;
    }
LABEL_88:

    swift_release(v243);
    swift_release(v662);
    swift_bridgeObjectRelease(v659);
    sub_100008030(v249, &qword_1006384E8);
    (*(void (**)(char *, uint64_t))(v261 + 8))(v656, v657);
    goto LABEL_36;
  }
  v283 = v660;
  v284 = sub_100106DBC();
  if (v283)
  {
    swift_bridgeObjectRelease(&_swiftEmptyDictionarySingleton);
    goto LABEL_88;
  }
  v660 = 0;
  if (v284)
    v285 = (_QWORD *)v284;
  else
    v285 = _swiftEmptyArrayStorage;
  v286 = v285[2];
  if (v286)
  {
    *(_QWORD *)&v676 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v284);
    sub_1000E419C(0, v286, 0);
    v287 = (_QWORD *)v676;
    v288 = v285 + 7;
    do
    {
      v290 = *(v288 - 1);
      v289 = *v288;
      *(_QWORD *)&v676 = v287;
      v292 = v287[2];
      v291 = v287[3];
      swift_bridgeObjectRetain(v289);
      if (v292 >= v291 >> 1)
      {
        sub_1000E419C(v291 > 1, v292 + 1, 1);
        v287 = (_QWORD *)v676;
      }
      v287[2] = v292 + 1;
      v293 = &v287[2 * v292];
      v293[4] = v290;
      v293[5] = v289;
      v288 += 4;
      --v286;
    }
    while (v286);
    v294 = swift_bridgeObjectRelease(v285);
  }
  else
  {
    swift_bridgeObjectRetain(v284);
    v294 = swift_bridgeObjectRelease(v285);
    v287 = _swiftEmptyArrayStorage;
  }
  v303 = v643;
  defaultLogger()(v294);
  v304 = swift_bridgeObjectRetain_n(v287, 2);
  v305 = v287;
  v306 = Logger.logObject.getter(v304);
  v307 = static os_log_type_t.debug.getter(v306);
  v308 = os_log_type_enabled(v306, v307);
  v655 = v305;
  if (v308)
  {
    v309 = (uint8_t *)swift_slowAlloc(12, -1);
    v658 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v676 = v658;
    *(_DWORD *)v309 = 136315138;
    v650 = v309 + 4;
    swift_bridgeObjectRetain(v305);
    v311 = Array.description.getter(v310, &type metadata for String);
    v313 = v312;
    swift_bridgeObjectRelease(v305);
    v673 = sub_1000E3AC8(v311, v313, (uint64_t *)&v676);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v673, v674, v650);
    swift_bridgeObjectRelease_n(v305, 2);
    swift_bridgeObjectRelease(v313);
    _os_log_impl((void *)&_mh_execute_header, v306, v307, "PAC Signatures: %s", v309, 0xCu);
    v314 = v658;
    swift_arrayDestroy(v658, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v314, -1, -1);
    swift_slowDealloc(v309, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v305, 2);
  }
  v315 = ((uint64_t (*)(uint64_t, uint64_t))v666)(v303, v667);
  v673 = _swiftEmptyArrayStorage;
  v316 = IdentityProofingConfiguration.credentialIdentifier.getter(v315);
  if (v317)
  {
    v318 = HIBYTE(v317) & 0xF;
    v650 = (uint8_t *)v316;
    v658 = v317;
    if ((v317 & 0x2000000000000000) == 0)
      v318 = v316 & 0xFFFFFFFFFFFFLL;
    if (v318)
    {
      v320 = v668;
      v319 = v669;
      v321 = v670;
      v322 = (*((uint64_t (**)(char *, _QWORD, NSObject *))v668 + 13))(v670, enum case for DIPError.Code.odnNoAssessmentAvailableForWatch(_:), v669);
      v323 = DIPError.Code.rawValue.getter(v322);
      (*((void (**)(char *, NSObject *))v320 + 1))(v321, v319);
      v324 = v645;
      v325 = v645 + *(int *)(*((_QWORD *)&v639 + 1) + 32);
      v326 = type metadata accessor for AssessmentAdditionalInfo(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v326 - 8) + 56))(v325, 1, 1, v326);
      *(_OWORD *)(v324 + 48) = 0u;
      *(_OWORD *)(v324 + 64) = 0u;
      *(_OWORD *)(v324 + 16) = 0u;
      *(_OWORD *)(v324 + 32) = 0u;
      *(_OWORD *)v324 = 0u;
      *(_QWORD *)(v324 + 80) = v323;
      *(_OWORD *)(v324 + 88) = xmmword_100520950;
      *(_OWORD *)(v324 + 104) = 0u;
      *(_OWORD *)(v324 + 120) = 0u;
      *(_BYTE *)(v324 + 136) = 2;
      *(_QWORD *)(v324 + 144) = 0;
      *(_QWORD *)(v324 + 152) = 0;
      goto LABEL_125;
    }
    swift_bridgeObjectRelease(v658);
  }
  v327 = v685;
  swift_retain(v685);
  v328 = v660;
  runAsyncAndBlock<A>(timeout:file:function:line:_:)(0, 1, 0xD00000000000002DLL, 0x8000000100553690, 0xD00000000000005BLL, 0x8000000100553C40, 478, &unk_1006385C0, v327, &type metadata for String);
  v660 = v328;
  if (v328)
  {
    swift_bridgeObjectRelease(&_swiftEmptyDictionarySingleton);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);

    swift_bridgeObjectRelease(v655);
    swift_release(v664);
    swift_release(v662);
    swift_bridgeObjectRelease(v659);
    swift_release(v327);
    sub_100008030(v652, &qword_1006384E8);
    (*(void (**)(char *, uint64_t))(v663 + 8))(v656, v657);
    _s8coreidvd24DigitalPresentmentHelperVwxx_0(v683);
    sub_1001A496C(&v679);
    return sub_1001EA1BC();
  }
  swift_release(v327);
  v329 = *((_QWORD *)&v676 + 1);
  v330 = (_QWORD *)((char *)v327 + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_phoneCredentialIdentifier);
  v331 = *(_QWORD *)((char *)v327
                   + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_phoneCredentialIdentifier
                   + 8);
  v650 = (uint8_t *)v676;
  *v330 = v676;
  v330[1] = v329;
  v658 = v329;
  swift_bridgeObjectRetain(v329);
  swift_bridgeObjectRelease(v331);
  v332 = v631;
  sub_100038B24(v649, v631, &qword_1006385A8);
  if (v610(v332, 1, v653))
  {
    sub_100008030(v631, &qword_1006385A8);
    v333 = type metadata accessor for PDF417ParsedData(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v333 - 8) + 56))(v632, 1, 1, v333);
  }
  else
  {
    v378 = v653;
    v379 = v654;
    v380 = v620;
    v381 = v631;
    ((void (*)(char *, uint64_t, NSObject *))v654[2].isa)(v620, v631, v653);
    v382 = sub_100008030(v381, &qword_1006385A8);
    PDF417Data.parsedData.getter(v382);
    ((void (*)(char *, NSObject *))v379[1].isa)(v380, v378);
  }
  v383 = v664;
  swift_retain(v664);
  v385 = v632;
  v384 = v633;
  sub_100274350(v632, (uint64_t)v383, v633);
  swift_release(v383);
  sub_100008030(v385, &qword_100633978);
  v386 = *(NSObject **)(v384 + 64);
  v647 = *(char **)(v384 + 56);
  v653 = v386;
  v387 = *(uint8_t **)(v384 + 152);
  v388 = *(_QWORD *)(v384 + 160);
  v389 = *(_QWORD *)(v384 + 168);
  *(_QWORD *)&v640 = *(_QWORD *)(v384 + 176);
  *((_QWORD *)&v640 + 1) = v389;
  v390 = *(_QWORD *)(v384 + 184);
  countAndFlagsBits = *(_QWORD *)(v384 + 192);
  *(_QWORD *)&v639 = v390;
  v391 = *(_QWORD *)(v384 + 200);
  v636 = *(_QWORD *)(v384 + 208);
  v637 = v391;
  v392 = *(_QWORD *)(v384 + 96);
  v643 = *(_QWORD *)(v384 + 88);
  v644 = v387;
  v632 = v392;
  v393 = *(_QWORD *)(v384 + 112);
  v646 = *(_QWORD *)(v384 + 104);
  v395 = *(_QWORD *)(v384 + 120);
  v394 = *(_QWORD *)(v384 + 128);
  v641 = *(_QWORD **)(v384 + 136);
  v642 = v394;
  v648 = *(_QWORD *)(v384 + 216);
  v654 = *(NSObject **)(v384 + 224);
  v396 = v645;
  v397 = *(_BYTE *)(v384 + 144);
  sub_100038B24(v384 + *(int *)(v635 + 44), v645 + *(int *)(*((_QWORD *)&v639 + 1) + 32), &qword_100636698);
  *(_QWORD *)v396 = v647;
  *(_QWORD *)(v396 + 8) = v386;
  v399 = v643;
  v398 = v644;
  *(_QWORD *)(v396 + 16) = v644;
  *(_QWORD *)(v396 + 24) = v388;
  v400 = v388;
  v401 = v640;
  *(_QWORD *)(v396 + 32) = *((_QWORD *)&v640 + 1);
  *(_QWORD *)(v396 + 40) = v401;
  v403 = countAndFlagsBits;
  v402 = v639;
  *(_QWORD *)(v396 + 48) = v639;
  *(_QWORD *)(v396 + 56) = v403;
  v405 = v636;
  v404 = v637;
  *(_QWORD *)(v396 + 64) = v637;
  *(_QWORD *)(v396 + 72) = v405;
  *(_QWORD *)(v396 + 80) = v399;
  *(_QWORD *)(v396 + 88) = v392;
  v406 = v646;
  *(_QWORD *)(v396 + 96) = v646;
  *(_QWORD *)(v396 + 104) = v393;
  v408 = (uint64_t)v641;
  v407 = v642;
  *(_QWORD *)(v396 + 112) = v395;
  *(_QWORD *)(v396 + 120) = v407;
  *(_QWORD *)(v396 + 128) = v408;
  *(_BYTE *)(v396 + 136) = v397;
  v409 = v654;
  *(_QWORD *)(v396 + 144) = v648;
  *(_QWORD *)(v396 + 152) = v409;
  sub_1001AD7A0((uint64_t)v398, v400, *((uint64_t *)&v401 + 1), v401, v402, v403, v404, v405);
  sub_100183888(v399, v632, v406, v393, v395, v407, v408);
  if (v653)
  {
    swift_bridgeObjectRetain(v653);
    swift_bridgeObjectRetain(v654);
    v411 = defaultLogger()(v410);
    v412 = Logger.logObject.getter(v411);
    v413 = static os_log_type_t.debug.getter(v412);
    if (os_log_type_enabled(v412, v413))
    {
      v414 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v414 = 0;
      _os_log_impl((void *)&_mh_execute_header, v412, v413, "deviceConfidenceAssessment: <present>", v414, 2u);
      swift_slowDealloc(v414, -1, -1);
    }

    v666(v621, v667);
  }
  else
  {
    swift_bridgeObjectRetain(v654);
  }
  sub_100035DAC(v633, type metadata accessor for ODNAssessmentResult);
LABEL_125:
  v415 = v685;
  v416 = (uint8_t **)((char *)v685 + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_phoneCredentialIdentifier);
  v417 = *(_QWORD *)((char *)v685
                   + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_phoneCredentialIdentifier
                   + 8);
  v418 = (uint64_t)v650;
  v419 = v658;
  *v416 = v650;
  v416[1] = (uint8_t *)v419;
  swift_bridgeObjectRetain(v419);
  swift_bridgeObjectRelease(v417);
  v420 = (_QWORD *)swift_allocObject(&unk_10060B088, 40, 7);
  v420[2] = v415;
  v420[3] = v418;
  v420[4] = v419;
  v421 = (uint8_t *)sub_10001CFF8(0, (unint64_t *)&qword_10062FEB0, DCCredentialCryptoKey_ptr);
  swift_retain(v415);
  swift_bridgeObjectRetain(v419);
  v644 = v421;
  v609 = v421;
  v646 = (uint64_t)"ons:completion:)";
  v647 = (char *)0xD00000000000002DLL;
  v648 = (unint64_t)"g Configuration unavailable";
  v422 = v660;
  runAsyncAndBlock<A>(timeout:file:function:line:_:)(0, 1, 0xD00000000000002DLL, 0x8000000100553690, 0xD00000000000005BLL, 0x8000000100553C40, 496, &unk_1006385D0, v420, v609);
  v654 = v422;
  if (v422)
  {

    swift_bridgeObjectRelease(v655);
    swift_release(v664);
    swift_bridgeObjectRelease(v658);
    swift_release(v662);
    swift_bridgeObjectRelease(v659);
    swift_release(v420);
    sub_100035DAC(v645, type metadata accessor for TiberiusWrappedAssessment);
    v423 = v673;
    swift_bridgeObjectRelease(&_swiftEmptyDictionarySingleton);
    swift_bridgeObjectRelease(v423);
    sub_100008030(v652, &qword_1006384E8);
    (*(void (**)(char *, uint64_t))(v663 + 8))(v656, v657);
    _s8coreidvd24DigitalPresentmentHelperVwxx_0(v683);
    sub_1001A496C(&v679);
    return sub_1001EA1BC();
  }
  v424 = swift_release(v420);
  v425 = (void *)v676;
  defaultLogger()(v424);
  v653 = v425;
  v426 = Logger.logObject.getter(v653);
  v427 = static os_log_type_t.debug.getter(v426);
  if (os_log_type_enabled(v426, v427))
  {
    v428 = (uint8_t *)swift_slowAlloc(12, -1);
    v660 = swift_slowAlloc(8, -1);
    *(_DWORD *)v428 = 138412290;
    v429 = v653;
    *(_QWORD *)&v676 = v653;
    v430 = v653;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v676, (char *)&v676 + 8, v428 + 4);
    v431 = v660;
    v660->isa = (Class)v429;

    _os_log_impl((void *)&_mh_execute_header, v426, v427, "Successfully generated key signing key for phone : %@.", v428, 0xCu);
    v432 = sub_100004828(&qword_1006308B0);
    swift_arrayDestroy(v431, 1, v432);
    swift_slowDealloc(v431, -1, -1);
    swift_slowDealloc(v428, -1, -1);
  }
  else
  {

    v426 = v653;
  }

  v666(v634, v667);
  v433._countAndFlagsBits = 0xD000000000000020;
  v433._object = (void *)0x8000000100553DC0;
  v434._countAndFlagsBits = 0x6266346138663430;
  v434._object = (void *)0xE800000000000000;
  v642 = 0xD000000000000020;
  logMilestone(tag:description:)(v434, v433);
  v435 = -[NSObject attestation](v653, "attestation");
  if (!v435)
  {
    swift_bridgeObjectRelease(v658);
    swift_bridgeObjectRelease(v655);
    swift_bridgeObjectRelease(v659);
    v449 = v673;
    swift_bridgeObjectRelease(&_swiftEmptyDictionarySingleton);
    swift_bridgeObjectRelease(v449);
    v450 = v670;
    (*((void (**)(char *, _QWORD, NSObject *))v668 + 13))(v670, enum case for DIPError.Code.internalError(_:), v669);
    v451 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v452 = type metadata accessor for DIPError(0);
    v453 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    swift_allocError(v452, v453, 0, 0);
    v454 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000043, 0x8000000100553DF0, 0, v450, 0, v451, 0xD00000000000007CLL, 0x80000001005535D0, 0xD00000000000005BLL, v648 | 0x8000000000000000, 503);
LABEL_134:
    swift_willThrow(v454);

    swift_release(v664);
    v455 = v662;
LABEL_135:
    swift_release(v455);
LABEL_136:
    v376 = type metadata accessor for TiberiusWrappedAssessment;
    v377 = v645;
LABEL_137:
    sub_100035DAC(v377, v376);
    v282 = v652;
    goto LABEL_85;
  }
  v436 = v435;
  v437 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v435, &type metadata for String);

  defaultLogger()(v438);
  v643 = v437;
  v439 = swift_bridgeObjectRetain_n(v437, 2);
  v440 = Logger.logObject.getter(v439);
  v441 = static os_log_type_t.debug.getter(v440);
  if (os_log_type_enabled(v440, v441))
  {
    v442 = (uint8_t *)swift_slowAlloc(12, -1);
    v443 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v676 = v443;
    *(_DWORD *)v442 = 136315138;
    v660 = (v442 + 4);
    v444 = v643;
    swift_bridgeObjectRetain(v643);
    v446 = Array.description.getter(v445, &type metadata for String);
    v448 = v447;
    swift_bridgeObjectRelease(v444);
    v672 = sub_1000E3AC8(v446, v448, (uint64_t *)&v676);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v672, &v673, v660);
    swift_bridgeObjectRelease_n(v444, 2);
    swift_bridgeObjectRelease(v448);
    _os_log_impl((void *)&_mh_execute_header, v440, v441, "kakCertificates created for phone : %s", v442, 0xCu);
    swift_arrayDestroy(v443, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v443, -1, -1);
    swift_slowDealloc(v442, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v643, 2);
  }
  v666(v622, v667);
  v641 = &_swiftEmptyDictionarySingleton;
  if ((v661 & 1) != 0)
  {
    v465 = v685[10];
    swift_retain(v465);
    v466 = v654;
    v660 = sub_10040A760(v653, (uint64_t)&v679);
    if (v466)
    {

      swift_bridgeObjectRelease(v655);
      swift_release(v664);
      swift_bridgeObjectRelease(v658);

      swift_bridgeObjectRelease(v643);
      swift_release(v662);
      swift_bridgeObjectRelease(v659);
      swift_release(v465);
      sub_100035DAC(v645, type metadata accessor for TiberiusWrappedAssessment);
      v468 = v673;
      swift_bridgeObjectRelease(&_swiftEmptyDictionarySingleton);
      swift_bridgeObjectRelease(v468);
      sub_100008030(v652, &qword_1006384E8);
      (*(void (**)(char *, uint64_t))(v663 + 8))(v656, v657);
      _s8coreidvd24DigitalPresentmentHelperVwxx_0(v683);
      sub_1001A496C(&v679);
      return sub_1001EA1BC();
    }
    v469 = v467;
    swift_release(v465);
    v470 = Data.base64EncodedString(options:)(0);
    v471 = (void *)*((_QWORD *)&v681 + 1);
    v472 = v673;
    swift_bridgeObjectRetain(v643);
    swift_bridgeObjectRetain(v471);
    if ((swift_isUniquelyReferenced_nonNull_native(v472) & 1) == 0)
      v472 = sub_1000E35D8(0, (int64_t)v472[2].isa + 1, 1, v472);
    v474 = (unint64_t)v472[2].isa;
    v473 = (unint64_t)v472[3].isa;
    if (v474 >= v473 >> 1)
      v472 = sub_1000E35D8((_QWORD *)(v473 > 1), v474 + 1, 1, v472);
    v472[2].isa = (Class)(v474 + 1);
    v475 = (Swift::String *)&v472[4 * v474];
    v475[2] = v470;
    v475[3]._countAndFlagsBits = v643;
    v475[3]._object = v471;
    v673 = v472;
    v476 = swift_retain(v685);
    v477 = v646 | 0x8000000000000000;
    v478 = v648 | 0x8000000000000000;
    runAsyncAndBlock<A>(timeout:file:function:line:_:)(0, 1, v647, v646 | 0x8000000000000000, 0xD00000000000005BLL, v648 | 0x8000000000000000, 516, &unk_100638660, v476, &type metadata for Data);
    v479 = v685;
    swift_release(v685);
    v640 = v676;
    swift_retain(v479);
    v480 = sub_100004828(&qword_100638678);
    runAsyncAndBlock<A>(timeout:file:function:line:_:)(0, 1, v647, v477, 0xD00000000000005BLL, v478, 519, &unk_100638670, v479, v480);
    swift_release(v685);
    v639 = v676;
    v485 = v664;
    OS_dispatch_group.wait()();
    v486 = v485[16];
    if (!v486)
    {
      swift_bridgeObjectRelease(&_swiftEmptyDictionarySingleton);
      swift_bridgeObjectRelease(v472);
      swift_bridgeObjectRelease(v658);
      swift_bridgeObjectRelease(v655);
      swift_bridgeObjectRelease(v643);
      swift_bridgeObjectRelease(v659);
      v508 = v670;
      (*((void (**)(char *, _QWORD, NSObject *))v668 + 13))(v670, enum case for DIPError.Code.unexpectedDeviceState(_:), v669);
      v509 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
      v510 = type metadata accessor for DIPError(0);
      v511 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
      swift_allocError(v510, v511, 0, 0);
      v512 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000015, 0x8000000100553EC0, 0, v508, 0, v509, 0xD00000000000007CLL, 0x80000001005535D0, 0xD00000000000005BLL, v648 | 0x8000000000000000, 524);
      swift_willThrow(v512);
      sub_100007F8C(v640, *((unint64_t *)&v640 + 1));
      sub_100007F8C((uint64_t)v660, v469);
      swift_release(v662);
      sub_100007F78(v639, *((unint64_t *)&v639 + 1));

      swift_release(v664);
      goto LABEL_136;
    }
    v654 = v664[15];
    swift_bridgeObjectRetain(v486);
    v487 = Data.base16EncodedString()();
    countAndFlagsBits = v487._countAndFlagsBits;
    if (*((_QWORD *)&v639 + 1) >> 60 == 15)
    {
      v488 = 0;
      object = (void *)0xE000000000000000;
    }
    else
    {
      v523 = v639;
      sub_100022948(v639, *((unint64_t *)&v639 + 1));
      v524 = Data.base16EncodedString()();
      v488 = v524._countAndFlagsBits;
      object = v524._object;
      sub_100007F78(v523, *((unint64_t *)&v523 + 1));
    }
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    *(_QWORD *)&v676 = &_swiftEmptyDictionarySingleton;
    sub_1004823C4(countAndFlagsBits, (uint64_t)v487._object, v488, (uint64_t)object, (uint64_t)v654, v486, isUniquelyReferenced_nonNull_native);
    v641 = (_QWORD *)v676;
    swift_bridgeObjectRelease(v486);
    swift_bridgeObjectRelease(0x8000000000000000);
    sub_1001FB2F4((uint64_t)&v679, (uint64_t)&v676);
    v526 = swift_allocObject(&unk_10060B178, 88, 7);
    v527 = v685;
    v528 = v665;
    *(_QWORD *)(v526 + 16) = v685;
    *(_QWORD *)(v526 + 24) = v528;
    v529 = v677;
    *(_OWORD *)(v526 + 32) = v676;
    *(_OWORD *)(v526 + 48) = v529;
    *(_OWORD *)(v526 + 64) = v678;
    v530 = v643;
    *(_QWORD *)(v526 + 80) = v643;
    v528;
    swift_retain(v527);
    swift_bridgeObjectRetain(v530);
    v531 = sub_100004828(&qword_100638690);
    runAsyncAndBlock<A>(timeout:file:function:line:_:)(0, 1, v647, v646 | 0x8000000000000000, 0xD00000000000005BLL, v648 | 0x8000000000000000, 529, &unk_100638688, v526, v531);
    v654 = 0;
    swift_release(v526);
    sub_100122A84(v672);
    sub_100007F78(v639, *((unint64_t *)&v639 + 1));
    sub_100007F8C(v640, *((unint64_t *)&v640 + 1));
    sub_100007F8C((uint64_t)v660, v469);
    if ((v661 & 2) == 0)
      goto LABEL_170;
  }
  else if ((v661 & 2) == 0)
  {
LABEL_170:
    swift_bridgeObjectRelease(v643);
    swift_bridgeObjectRelease(v658);
    goto LABEL_171;
  }
  v456 = v685;
  swift_retain(v685);
  v457 = sub_100004828((uint64_t *)&unk_100632610);
  v458 = v646 | 0x8000000000000000;
  v459 = v648 | 0x8000000000000000;
  runAsyncAndBlock<A>(file:function:line:_:)(&v676, v647, v646 | 0x8000000000000000, 0xD00000000000005BLL, v648 | 0x8000000000000000, 564, &unk_1006385F8, v456, v457);
  swift_release(v456);
  if (!*((_QWORD *)&v676 + 1))
    goto LABEL_170;
  v99 = *((_QWORD *)&v676 + 1);
  v460 = v676;
  v461 = (_QWORD *)swift_allocObject(&unk_10060B0D8, 40, 7);
  v462 = v685;
  v461[2] = v685;
  v461[3] = v460;
  v461[4] = v99;
  swift_retain(v462);
  swift_bridgeObjectRetain(v99);
  v463 = v654;
  runAsyncAndBlock<A>(timeout:file:function:line:_:)(0, 1, v647, v458, 0xD00000000000005BLL, v459, 569, &unk_100638608, v461, (char *)&type metadata for () + 8);
  v660 = v463;
  if (v463)
  {
    swift_bridgeObjectRelease(v99);
    swift_bridgeObjectRelease(v643);
    v464 = v461;
LABEL_158:
    swift_release(v464);
LABEL_159:
    v495 = swift_bridgeObjectRelease(v658);
LABEL_160:
    v654 = 0;
    if ((v661 & 1) == 0)
    {
      swift_bridgeObjectRelease(v655);
      swift_bridgeObjectRelease(v659);
      v496 = v673;
      swift_bridgeObjectRelease(v641);
      v454 = swift_bridgeObjectRelease(v496);
      goto LABEL_134;
    }
    v497 = defaultLogger()(v495);
    v498 = Logger.logObject.getter(v497);
    v500 = static os_log_type_t.info.getter(v498, v499);
    if (os_log_type_enabled(v498, v500))
    {
      v501 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v501 = 0;
      _os_log_impl((void *)&_mh_execute_header, v498, v500, "Encountered a watch specific failure during combo proofing, will skip saving watch proofing session in the database", v501, 2u);
      swift_slowDealloc(v501, -1, -1);
    }

    v503 = (void (*)(uint64_t, uint64_t))v666;
    v502 = v667;
    v666(v617, v667);
    v504 = *(_QWORD *)((char *)v685 + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_comboProofingWatchFailure);
    v505 = v660;
    *(_QWORD *)((char *)v685 + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_comboProofingWatchFailure) = v660;
    swift_errorRetain(v505);
    v506 = swift_errorRelease(v504);
    v507 = v651;
    defaultLogger()(v506);
    DIPRecordError(_:message:log:)(v505, 0, 0xE000000000000000, v507);
    swift_errorRelease(v505);
    v503(v507, v502);
LABEL_171:
    v532 = *(id *)(v685[16] + 80);
    OS_dispatch_group.wait()();

    v533 = v619;
    sub_100038B24(v649, v619, &qword_1006385A8);
    v534 = v657;
    *((_QWORD *)&v677 + 1) = v657;
    *(_QWORD *)&v678 = &protocol witness table for HPKESuiteKwV1;
    v535 = sub_100022234(&v676);
    ((void (*)(_QWORD *, char *, uint64_t))v611)(v535, v656, v534);
    v536 = v654;
    v670 = (char *)sub_1001F59BC(v533, (uint64_t)&v679, v683, v664, &v676);
    v660 = v536;
    if (v536)
    {

      swift_bridgeObjectRelease(v655);
      swift_release(v664);

      swift_release(v662);
      swift_bridgeObjectRelease(v659);
      sub_100008030(v619, &qword_1006385A8);
      sub_100035DAC(v645, type metadata accessor for TiberiusWrappedAssessment);
      v537 = v673;
      swift_bridgeObjectRelease(v641);
      swift_bridgeObjectRelease(v537);
      sub_100008030(v652, &qword_1006384E8);
      (*(void (**)(char *, uint64_t))(v663 + 8))(v656, v657);
      goto LABEL_43;
    }
    sub_100008030(v619, &qword_1006385A8);
    _s8coreidvd24DigitalPresentmentHelperVwxx_0(&v676);
    v669 = v673;
    sub_10002581C((uint64_t)v683, (uint64_t)&v676);
    sub_100035DE8(v645, v630, type metadata accessor for TiberiusWrappedAssessment);
    sub_100038B24(v652, v629, &qword_1006384E8);
    v538 = *(unsigned __int8 *)(v626 + 80);
    v539 = (v538 + 72) & ~v538;
    v668 = (uint8_t *)((v627 + v539 + 7) & 0xFFFFFFFFFFFFFFF8);
    v540 = (unint64_t)(v668 + 15) & 0xFFFFFFFFFFFFFFF8;
    v541 = (v540 + 15) & 0xFFFFFFFFFFFFFFF8;
    v542 = *(unsigned __int8 *)(v624 + 80);
    v543 = (v542 + v541 + 8) & ~v542;
    v544 = (v625 + v543 + 7) & 0xFFFFFFFFFFFFFFF8;
    v545 = (v544 + 15) & 0xFFFFFFFFFFFFFFF8;
    v546 = swift_allocObject(&unk_10060B0B0, v545 + 8, v538 | v542 | 7);
    v547 = v685;
    *(_QWORD *)(v546 + 16) = v685;
    sub_100008018(&v676, v546 + 24);
    *(_QWORD *)(v546 + 64) = v670;
    sub_100038AE0(v630, v546 + v539, type metadata accessor for TiberiusWrappedAssessment);
    *(_QWORD *)&v668[v546] = v655;
    *(_QWORD *)(v546 + v540) = v659;
    *(_QWORD *)(v546 + v541) = v669;
    sub_1000A1F54(v629, v546 + v543, &qword_1006384E8);
    *(_QWORD *)(v546 + v544) = v641;
    v548 = v665;
    *(_QWORD *)(v546 + v545) = v665;
    v549 = v548;
    swift_retain(v547);
    v550 = v660;
    runAsyncAndBlock<A>(timeout:file:function:line:_:)(0, 1, v647, v646 | 0x8000000000000000, 0xD00000000000005BLL, v648 | 0x8000000000000000, 634, &unk_1006385E8, v546, v628);
    if (!v550)
    {

      swift_release(v664);
      swift_release(v662);
      swift_release(v546);
      sub_100035DAC(v645, type metadata accessor for TiberiusWrappedAssessment);
      sub_100008030(v652, &qword_1006384E8);
      (*(void (**)(char *, uint64_t))(v663 + 8))(v656, v657);
      _s8coreidvd24DigitalPresentmentHelperVwxx_0(v683);
      sub_1001A496C(&v679);
      (*(void (**)(uint64_t, char *, uint64_t))(v616 + 32))(v623, v618, v628);
      return sub_1001EA1BC();
    }

    swift_release(v664);
    swift_release(v662);
    v455 = (char *)v546;
    goto LABEL_135;
  }
  swift_release(v461);
  v481 = swift_retain(v685);
  v482 = v646 | 0x8000000000000000;
  v483 = v648 | 0x8000000000000000;
  v484 = v660;
  runAsyncAndBlock<A>(timeout:file:function:line:_:)(0, 1, v647, v646 | 0x8000000000000000, 0xD00000000000005BLL, v648 | 0x8000000000000000, 574, &unk_100638618, v481, &type metadata for String);
  v660 = v484;
  if (v484)
  {
    swift_bridgeObjectRelease(v99);
    swift_bridgeObjectRelease(v643);
    v464 = v685;
    goto LABEL_158;
  }
  v490 = v685;
  swift_release(v685);
  v491 = v676;
  v492 = *(_QWORD *)((char *)v490
                   + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_watchCredentialIdentifier
                   + 8);
  *(_OWORD *)((char *)v490 + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_watchCredentialIdentifier) = v676;
  swift_bridgeObjectRetain(*((_QWORD *)&v491 + 1));
  swift_bridgeObjectRelease(v492);
  v493 = swift_allocObject(&unk_10060B100, 40, 7);
  *(_QWORD *)(v493 + 16) = v490;
  *(_OWORD *)(v493 + 24) = v491;
  swift_retain(v490);
  v494 = v660;
  runAsyncAndBlock<A>(timeout:file:function:line:_:)(0, 1, v647, v482, 0xD00000000000005BLL, v483, 578, &unk_100638628, v493, v644);
  v660 = v494;
  if (v494)
  {
    swift_bridgeObjectRelease(v99);
    swift_bridgeObjectRelease(v643);
    v464 = (_QWORD *)v493;
    goto LABEL_158;
  }
  v513 = swift_release(v493);
  v514 = (void *)v676;
  defaultLogger()(v513);
  v654 = v514;
  v515 = Logger.logObject.getter(v654);
  v516 = static os_log_type_t.debug.getter(v515);
  if (os_log_type_enabled(v515, v516))
  {
    v517 = (uint8_t *)swift_slowAlloc(12, -1);
    *((_QWORD *)&v640 + 1) = swift_slowAlloc(8, -1);
    v644 = v517;
    *(_DWORD *)v517 = 138412290;
    *(_QWORD *)&v640 = v517 + 4;
    v518 = v654;
    *(_QWORD *)&v676 = v654;
    v519 = v654;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v676, (char *)&v676 + 8, v640);
    v520 = *((_QWORD *)&v640 + 1);
    **((_QWORD **)&v640 + 1) = v518;

    v521 = v644;
    _os_log_impl((void *)&_mh_execute_header, v515, v516, "Successfully generated key signing key for watch : %@.", v644, 0xCu);
    v522 = sub_100004828(&qword_1006308B0);
    swift_arrayDestroy(v520, 1, v522);
    swift_slowDealloc(v520, -1, -1);
    swift_slowDealloc(v521, -1, -1);
  }
  else
  {

    v515 = v654;
  }

  v666(v615, v667);
  v551._object = (void *)0x8000000100553E40;
  v552._countAndFlagsBits = 0x3333386162633964;
  v552._object = (void *)0xE800000000000000;
  v551._countAndFlagsBits = v642;
  logMilestone(tag:description:)(v552, v551);
  v553 = -[NSObject attestation](v654, "attestation");
  if (!v553)
  {
LABEL_181:
    swift_bridgeObjectRelease(v99);
    swift_bridgeObjectRelease(v643);
    swift_bridgeObjectRelease(v658);
    v568 = v670;
    (*((void (**)(char *, _QWORD, NSObject *))v668 + 13))(v670, enum case for DIPError.Code.internalError(_:), v669);
    v569 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v570 = type metadata accessor for DIPError(0);
    v571 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    v572 = swift_allocError(v570, v571, 0, 0);
    v573 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000043, 0x8000000100553E70, 0, v568, 0, v569, 0xD00000000000007CLL, 0x80000001005535D0, 0xD00000000000005BLL, v648 | 0x8000000000000000, 585);
    v660 = v572;
    swift_willThrow(v573);

    goto LABEL_160;
  }
  v554 = v553;
  v555 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v553, &type metadata for String);

  defaultLogger()(v556);
  v670 = (char *)v555;
  v557 = swift_bridgeObjectRetain_n(v555, 2);
  v558 = Logger.logObject.getter(v557);
  v559 = static os_log_type_t.debug.getter(v558);
  if (os_log_type_enabled(v558, v559))
  {
    v560 = (uint8_t *)swift_slowAlloc(12, -1);
    v669 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v676 = v669;
    v668 = v560;
    *(_DWORD *)v560 = 136315138;
    v644 = v560 + 4;
    v561 = v670;
    swift_bridgeObjectRetain(v670);
    v563 = Array.description.getter(v562, &type metadata for String);
    v565 = v564;
    swift_bridgeObjectRelease(v561);
    v672 = sub_1000E3AC8(v563, v565, (uint64_t *)&v676);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v672, &v673, v644);
    swift_bridgeObjectRelease_n(v561, 2);
    swift_bridgeObjectRelease(v565);
    v566 = v668;
    _os_log_impl((void *)&_mh_execute_header, v558, v559, "kakCertificates created for watch : %s", v668, 0xCu);
    v567 = v669;
    swift_arrayDestroy(v669, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v567, -1, -1);
    swift_slowDealloc(v566, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v670, 2);
  }
  v666(v614, v667);
  v574 = (_QWORD *)swift_allocObject(&unk_10060B128, 40, 7);
  v575 = v685;
  v574[2] = v685;
  v574[3] = v460;
  v574[4] = v99;
  swift_retain(v575);
  v576 = sub_100004828(&qword_100638640);
  v577 = v660;
  runAsyncAndBlock<A>(timeout:file:function:line:_:)(0, 1, v647, v646 | 0x8000000000000000, 0xD00000000000005BLL, v648 | 0x8000000000000000, 591, &unk_100638638, v574, v576);
  v660 = v577;
  if (v577)
  {
    swift_bridgeObjectRelease(v670);
    swift_bridgeObjectRelease(v643);
    swift_release(v574);

    goto LABEL_159;
  }
  v578 = swift_release(v574);
  v579 = v676;
  if (!(_QWORD)v676)
  {
LABEL_190:
    v588 = (_QWORD *)swift_allocObject(&unk_10060B150, 48, 7);
    v589 = v685;
    v590 = (uint64_t)v650;
    v588[2] = v685;
    v588[3] = v590;
    v591 = v654;
    v588[4] = v658;
    v588[5] = v591;
    swift_retain(v589);
    v669 = v591;
    v592 = v660;
    runAsyncAndBlock<A>(timeout:file:function:line:_:)(0, 1, v647, v646 | 0x8000000000000000, 0xD00000000000005BLL, v648 | 0x8000000000000000, 601, &unk_100638650, v588, &type metadata for Data);
    v654 = v592;
    if (!v592)
    {
      v593 = swift_release(v588);
      v594 = v676;
      defaultLogger()(v593);
      sub_100022948(v594, *((unint64_t *)&v594 + 1));
      v595 = sub_100022948(v594, *((unint64_t *)&v594 + 1));
      v596 = Logger.logObject.getter(v595);
      v597 = static os_log_type_t.debug.getter(v596);
      if (os_log_type_enabled(v596, v597))
      {
        v598 = (uint8_t *)swift_slowAlloc(12, -1);
        v668 = (uint8_t *)swift_slowAlloc(32, -1);
        *(_QWORD *)&v676 = v668;
        *(_DWORD *)v598 = 136315138;
        v661 = (uint64_t)(v598 + 4);
        sub_100022948(v594, *((unint64_t *)&v594 + 1));
        v599 = Data.description.getter(v594, *((_QWORD *)&v594 + 1));
        v601 = v600;
        sub_100007F8C(v594, *((unint64_t *)&v594 + 1));
        v672 = sub_1000E3AC8(v599, v601, (uint64_t *)&v676);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v672, &v673, v661);
        swift_bridgeObjectRelease(v601);
        sub_100007F8C(v594, *((unint64_t *)&v594 + 1));
        sub_100007F8C(v594, *((unint64_t *)&v594 + 1));
        _os_log_impl((void *)&_mh_execute_header, v596, v597, "Key signing data generated for watch : %s", v598, 0xCu);
        v602 = v668;
        swift_arrayDestroy(v668, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v602, -1, -1);
        swift_slowDealloc(v598, -1, -1);
      }
      else
      {
        sub_100007F8C(v594, *((unint64_t *)&v594 + 1));
        sub_100007F8C(v594, *((unint64_t *)&v594 + 1));
      }

      v666(v613, v667);
      v603 = Data.base64EncodedString(options:)(0);
      v604 = v673;
      if ((swift_isUniquelyReferenced_nonNull_native(v673) & 1) == 0)
        v604 = sub_1000E35D8(0, (int64_t)v604[2].isa + 1, 1, v604);
      v606 = (unint64_t)v604[2].isa;
      v605 = (unint64_t)v604[3].isa;
      if (v606 >= v605 >> 1)
        v604 = sub_1000E35D8((_QWORD *)(v605 > 1), v606 + 1, 1, v604);
      v604[2].isa = (Class)(v606 + 1);
      v607 = (Swift::String *)&v604[4 * v606];
      v607[2] = v603;
      v608 = v643;
      v607[3]._countAndFlagsBits = (uint64_t)v670;
      v607[3]._object = (void *)v608;

      sub_100007F8C(v594, *((unint64_t *)&v594 + 1));
      v673 = v604;
      goto LABEL_171;
    }
    swift_release(v588);
    swift_bridgeObjectRelease(v670);
    swift_bridgeObjectRelease(v643);

    v660 = v654;
    goto LABEL_160;
  }
  v580 = defaultLogger()(v578);
  v581 = Logger.logObject.getter(v580);
  v583 = static os_log_type_t.info.getter(v581, v582);
  if (os_log_type_enabled(v581, v583))
  {
    v584 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v584 = 0;
    _os_log_impl((void *)&_mh_execute_header, v581, v583, "watch attestations present, adding in to keyAttestations", v584, 2u);
    swift_slowDealloc(v584, -1, -1);
  }

  v666(v612, v667);
  v585 = v641;
  v586 = swift_isUniquelyReferenced_nonNull_native(v641);
  *(_QWORD *)&v676 = v585;
  v587 = v660;
  sub_1001F4B50(v579, (uint64_t)sub_1001F4E00, 0, v586, &v676);
  v660 = v587;
  if (!v587)
  {
    v641 = (_QWORD *)v676;
    swift_bridgeObjectRelease(0x8000000000000000);
    goto LABEL_190;
  }
  result = swift_bridgeObjectRelease(0x8000000000000000);
  __break(1u);
  return result;
}

uint64_t sub_1001EA1BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v0 = type metadata accessor for Logger(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = defaultLogger()(v2);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.debug.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v12 = v9;
    *(_DWORD *)v8 = 136315138;
    v11 = sub_1000E3AC8(0xD00000000000005BLL, 0x8000000100553C40, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, &v12, v8 + 4);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%s end", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

unint64_t sub_1001EA344(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  Swift::String v17;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;

  v2 = sub_100004828(&qword_100633978);
  __chkstk_darwin(v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PDF417Data(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100004828(&qword_1006385A8);
  __chkstk_darwin(v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = 0;
  v21 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v21);
  v22 = 0xD000000000000012;
  v23 = 0x80000001005545D0;
  v12 = a1 + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_pdf417Data;
  swift_beginAccess(a1 + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_pdf417Data, &v20, 0, 0);
  sub_100038B24(v12, (uint64_t)v11, &qword_1006385A8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5))
  {
    sub_100008030((uint64_t)v11, &qword_1006385A8);
    v13 = 0xD000000000000016;
    v14 = (void *)0x80000001005545F0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
    v15 = sub_100008030((uint64_t)v11, &qword_1006385A8);
    PDF417Data.parsedData.getter(v15);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v13 = Optional.debugDescription.getter(v2);
    v14 = v16;
    sub_100008030((uint64_t)v4, &qword_100633978);
  }
  v17._countAndFlagsBits = v13;
  v17._object = v14;
  String.append(_:)(v17);
  swift_bridgeObjectRelease(v14);
  return v22;
}

uint64_t sub_1001EA560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v8[10] = v11;
  v8[11] = v12;
  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  v9 = sub_100004828(&qword_1006384F0);
  v8[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001EA5D0, 0, 0);
}

uint64_t sub_1001EA5D0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t **v13;

  v1 = v0[12];
  v3 = v0[6];
  v2 = v0[7];
  v4 = (_QWORD *)v0[4];
  v6 = v4[3];
  v5 = v4[4];
  sub_10000806C(v4, v6);
  v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v5 + 8) + 8))(v6);
  v9 = v8;
  v0[13] = v8;
  sub_100035DE8(v3, v1, type metadata accessor for TiberiusWrappedAssessment);
  v10 = type metadata accessor for TiberiusWrappedAssessment(0);
  v11 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v1, 0, 1, v10);
  IdentityProofingConfiguration.accountKeyIdentifier.getter(v11);
  v0[14] = v12;
  v13 = (uint64_t **)swift_task_alloc(dword_10063804C);
  v0[15] = (uint64_t)v13;
  *v13 = v0;
  v13[1] = (uint64_t *)sub_1001EA6F0;
  return sub_1001EE4F0(v0[2], v7, v9, v0[5], v0[12], 0, v2, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t sub_1001EA6F0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(*v1 + 112);
  v2 = *(_QWORD *)(*v1 + 120);
  v5 = *(_QWORD *)(*v1 + 96);
  v4 = *(_QWORD *)(*v1 + 104);
  v6 = *v1;
  *(_QWORD *)(v6 + 128) = v0;
  swift_task_dealloc(v2);
  sub_100008030(v5, &qword_1006384F0);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  if (v0)
    return swift_task_switch(sub_1001EA7A0, 0, 0);
  swift_task_dealloc(*(_QWORD *)(v6 + 96));
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_1001EA7A0()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001EA7D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch(sub_1001EA7EC, 0, 0);
}

uint64_t sub_1001EA7EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0[3] + 80);
  v0[4] = v1;
  v2 = qword_10062F478;
  swift_retain(v1);
  if (v2 != -1)
    swift_once(&qword_10062F478, sub_1000DECC0);
  v3 = *(void **)(qword_100670250 + 16);
  v0[5] = v3;
  v4 = unk_1006386D4;
  v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1006386D0 + dword_1006386D0);
  v5 = v3;
  v6 = (_QWORD *)swift_task_alloc(v4);
  v0[6] = v6;
  *v6 = v0;
  v6[1] = sub_1001EA8AC;
  return v8(1, (uint64_t)v5);
}

uint64_t sub_1001EA8AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *v3;
  v8 = *(void **)(*v3 + 40);
  v7 = *(_QWORD *)(*v3 + 48);
  v9 = *(_QWORD *)(*v3 + 32);
  v10 = *v3;
  swift_task_dealloc(v7);
  swift_release(v9);

  if (v2)
    return (*(uint64_t (**)(void))(v10 + 8))();
  *(_QWORD *)(v6 + 56) = a2;
  *(_QWORD *)(v6 + 64) = a1;
  return swift_task_switch(sub_1001EA948, 0, 0);
}

uint64_t sub_1001EA948()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD **)(v0 + 16);
  *v2 = *(_QWORD *)(v0 + 64);
  v2[1] = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001EA960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch(sub_1001EA97C, 0, 0);
}

uint64_t sub_1001EA97C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  _QWORD *v6;
  char *v8;

  v1 = *(_QWORD *)(v0[3] + 80);
  v0[6] = v1;
  v2 = qword_10062F478;
  swift_retain(v1);
  if (v2 != -1)
    swift_once(&qword_10062F478, sub_1000DECC0);
  v3 = *(void **)(qword_100670250 + 16);
  v0[7] = v3;
  v4 = unk_1006386CC;
  v8 = (char *)&dword_1006386C8 + dword_1006386C8;
  v5 = v3;
  v6 = (_QWORD *)swift_task_alloc(v4);
  v0[8] = v6;
  *v6 = v0;
  v6[1] = sub_1001EAA38;
  return ((uint64_t (*)(_QWORD, _QWORD, id))v8)(v0[4], v0[5], v5);
}

uint64_t sub_1001EAA38(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *v2;
  v6 = *(void **)(*v2 + 56);
  v5 = *(_QWORD *)(*v2 + 64);
  v7 = *(_QWORD *)(*v2 + 48);
  v8 = *v2;
  swift_task_dealloc(v5);
  swift_release(v7);

  if (v1)
    return (*(uint64_t (**)(void))(v8 + 8))();
  *(_QWORD *)(v4 + 72) = a1;
  return swift_task_switch(sub_1001EAAD0, 0, 0);
}

uint64_t sub_1001EAAD0()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 72);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001EAAE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch(sub_1001EAB00, 0, 0);
}

uint64_t sub_1001EAB00()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0[3] + 80);
  v0[4] = v1;
  v2 = dword_1006402E4;
  swift_retain(v1);
  v3 = (_QWORD *)swift_task_alloc(v2);
  v0[5] = v3;
  *v3 = v0;
  v3[1] = sub_1001EAB5C;
  return sub_1004090F8();
}

uint64_t sub_1001EAB5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t (*v8)();

  v6 = *(_QWORD **)v3;
  v7 = *(_QWORD *)(*(_QWORD *)v3 + 40);
  *(_QWORD *)(*(_QWORD *)v3 + 48) = v2;
  swift_task_dealloc(v7);
  if (v2)
  {
    v8 = sub_1001FCFEC;
  }
  else
  {
    swift_release(v6[4]);
    v6[7] = a2;
    v6[8] = a1;
    v8 = sub_1001FCFFC;
  }
  return swift_task_switch(v8, 0, 0);
}

uint64_t sub_1001EABDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch(sub_1001EABF4, 0, 0);
}

uint64_t sub_1001EABF4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0[3] + 80);
  v0[4] = v1;
  v2 = dword_1006402EC;
  swift_retain(v1);
  v3 = (_QWORD *)swift_task_alloc(v2);
  v0[5] = v3;
  *v3 = v0;
  v3[1] = sub_1001EAC50;
  return sub_100409418();
}

uint64_t sub_1001EAC50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t (*v8)();

  v6 = *(_QWORD **)v3;
  v7 = *(_QWORD *)(*(_QWORD *)v3 + 40);
  *(_QWORD *)(*(_QWORD *)v3 + 48) = v2;
  swift_task_dealloc(v7);
  if (v2)
  {
    v8 = sub_1001EACEC;
  }
  else
  {
    swift_release(v6[4]);
    v6[7] = a2;
    v6[8] = a1;
    v8 = sub_1001EACD0;
  }
  return swift_task_switch(v8, 0, 0);
}

uint64_t sub_1001EACD0()
{
  uint64_t v0;

  *(int8x16_t *)*(_QWORD *)(v0 + 16) = vextq_s8(*(int8x16_t *)(v0 + 56), *(int8x16_t *)(v0 + 56), 8uLL);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001EACEC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001EAD20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch(sub_1001EAD40, 0, 0);
}

uint64_t sub_1001EAD40()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[6];
  v2 = *(_QWORD *)(v0[3] + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_phoneCredentialIdentifier + 8);
  v0[7] = v2;
  v3 = dword_1006386AC;
  swift_bridgeObjectRetain(v2);
  v4 = (_QWORD *)swift_task_alloc(v3);
  v0[8] = v4;
  *v4 = v0;
  v4[1] = sub_1001EADC0;
  return sub_1001F8EE8(v0[4], v0[5], v1);
}

uint64_t sub_1001EADC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 64);
  *(_QWORD *)(*v2 + 72) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_1001EAE54;
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v4 + 56));
    *(_QWORD *)(v4 + 80) = a1;
    v6 = sub_1001EAE3C;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_1001EAE3C()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 80);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001EAE54()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001EAE88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch(sub_1001EAEA0, 0, 0);
}

uint64_t sub_1001EAEA0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_10062FE44);
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_1001EAEFC;
  return sub_1000160E0();
}

uint64_t sub_1001EAEFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 40) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1001EAF58, 0, 0);
}

uint64_t sub_1001EAF58()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(void **)(v0 + 40);
  if (v1)
  {
    v2 = objc_msgSend(*(id *)(v0 + 40), "deviceID");

    v1 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v4 = v3;

  }
  else
  {
    v4 = 0;
  }
  v5 = *(_QWORD **)(v0 + 16);
  *v5 = v1;
  v5[1] = v4;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001EAFD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[4] = a3;
  v4[5] = a4;
  v4[3] = a2;
  v5 = type metadata accessor for Logger(0);
  v4[6] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[7] = v6;
  v4[8] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001EB038, 0, 0);
}

uint64_t sub_1001EB038()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0[3] + 72);
  v0[9] = v1;
  v2 = dword_100638D04;
  swift_retain(v1);
  v3 = (_QWORD *)swift_task_alloc(v2);
  v0[10] = v3;
  *v3 = v0;
  v3[1] = sub_1001EB09C;
  return sub_1002133E0(v0[4], v0[5]);
}

uint64_t sub_1001EB09C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  v3[11] = a1;
  v3[12] = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = sub_1001EB2F0;
  }
  else
  {
    swift_release(v3[9]);
    v5 = sub_1001EB110;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1001EB110(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = *(_QWORD *)(v1 + 88);
  defaultLogger()(a1);
  swift_bridgeObjectRetain(v2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.debug.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(_QWORD *)(v1 + 88);
    v17 = *(_QWORD *)(v1 + 56);
    v18 = *(_QWORD *)(v1 + 48);
    v19 = *(_QWORD *)(v1 + 64);
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v20 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_bridgeObjectRetain(v6);
    v10 = Array.description.getter(v9, &type metadata for String);
    v12 = v11;
    swift_bridgeObjectRelease(v6);
    *(_QWORD *)(v1 + 16) = sub_1000E3AC8(v10, v12, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 16, v1 + 24, v7 + 4);
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease_n(v6, 2);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Successfully registered for watch events : %s", v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v19, v18);
  }
  else
  {
    v14 = *(_QWORD *)(v1 + 56);
    v13 = *(_QWORD *)(v1 + 64);
    v15 = *(_QWORD *)(v1 + 48);
    swift_bridgeObjectRelease_n(*(_QWORD *)(v1 + 88), 2);

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  swift_task_dealloc(*(_QWORD *)(v1 + 64));
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1001EB2F0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_release(*(_QWORD *)(v0 + 72));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001EB32C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch(sub_1001EB344, 0, 0);
}

uint64_t sub_1001EB344()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v1 = v0[3];
  v2 = *(_QWORD *)(v1 + 80);
  v0[4] = v2;
  v3 = *(void **)(*(_QWORD *)(v1 + 48)
                + OBJC_IVAR____TtC8coreidvd38IdentityWatchSessionManagementListener_remoteSessionService);
  v0[5] = v3;
  v4 = unk_1006386C4;
  v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1006386C0 + dword_1006386C0);
  swift_retain(v2);
  v5 = v3;
  v6 = (_QWORD *)swift_task_alloc(v4);
  v0[6] = v6;
  *v6 = v0;
  v6[1] = sub_1001EB3E4;
  return v8(2, (uint64_t)v5);
}

uint64_t sub_1001EB3E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *v3;
  v8 = *(void **)(*v3 + 40);
  v7 = *(_QWORD *)(*v3 + 48);
  v9 = *(_QWORD *)(*v3 + 32);
  v10 = *v3;
  swift_task_dealloc(v7);
  swift_release(v9);

  if (v2)
    return (*(uint64_t (**)(void))(v10 + 8))();
  *(_QWORD *)(v6 + 56) = a2;
  *(_QWORD *)(v6 + 64) = a1;
  return swift_task_switch(sub_1001FCFD0, 0, 0);
}

uint64_t sub_1001EB480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch(sub_1001EB49C, 0, 0);
}

uint64_t sub_1001EB49C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  _QWORD *v6;
  char *v8;

  v1 = v0[3];
  v2 = *(_QWORD *)(v1 + 80);
  v0[6] = v2;
  v3 = *(void **)(*(_QWORD *)(v1 + 48)
                + OBJC_IVAR____TtC8coreidvd38IdentityWatchSessionManagementListener_remoteSessionService);
  v0[7] = v3;
  v4 = unk_1006386BC;
  v8 = (char *)&dword_1006386B8 + dword_1006386B8;
  swift_retain(v2);
  v5 = v3;
  v6 = (_QWORD *)swift_task_alloc(v4);
  v0[8] = v6;
  *v6 = v0;
  v6[1] = sub_1001EB538;
  return ((uint64_t (*)(_QWORD, _QWORD, id))v8)(v0[4], v0[5], v5);
}

uint64_t sub_1001EB538(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *v2;
  v6 = *(void **)(*v2 + 56);
  v5 = *(_QWORD *)(*v2 + 64);
  v7 = *(_QWORD *)(*v2 + 48);
  v8 = *v2;
  swift_task_dealloc(v5);
  swift_release(v7);

  if (v1)
    return (*(uint64_t (**)(void))(v8 + 8))();
  *(_QWORD *)(v4 + 72) = a1;
  return swift_task_switch(sub_1001FCFDC, 0, 0);
}

uint64_t sub_1001EB5D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch(sub_1001EB5EC, 0, 0);
}

uint64_t sub_1001EB5EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0[3] + 72);
  v0[6] = v1;
  v2 = dword_100638CFC;
  swift_retain(v1);
  v3 = (_QWORD *)swift_task_alloc(v2);
  v0[7] = v3;
  *v3 = v0;
  v3[1] = sub_1001EB650;
  return sub_100212378(v0[4], v0[5]);
}

uint64_t sub_1001EB650(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 56);
  *(_QWORD *)(*v2 + 64) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_1001EB6CC;
  }
  else
  {
    swift_release(*(_QWORD *)(v4 + 48));
    *(_QWORD *)(v4 + 72) = a1;
    v6 = sub_1001EAAD0;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_1001EB6CC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001EB700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch(sub_1001EB720, 0, 0);
}

uint64_t sub_1001EB720()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  _QWORD *v10;
  char *v12;

  v1 = (void *)v0[6];
  v2 = *(_QWORD *)(v0[3] + 80);
  v0[7] = v2;
  swift_retain(v2);
  v3 = objc_msgSend(v1, "publicKeyCOSEKey");
  v4 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  v0[8] = v4;
  v0[9] = v6;
  if (qword_10062F478 != -1)
    swift_once(&qword_10062F478, sub_1000DECC0);
  v7 = *(void **)(qword_100670250 + 16);
  v0[10] = v7;
  v8 = unk_1006403F4;
  v12 = (char *)&dword_1006403F0 + dword_1006403F0;
  v9 = v7;
  v10 = (_QWORD *)swift_task_alloc(v8);
  v0[11] = v10;
  *v10 = v0;
  v10[1] = sub_1001EB820;
  return ((uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, id))v12)(v0[4], v0[5], v4, v6, v9);
}

uint64_t sub_1001EB820(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *v3;
  v7 = *(_QWORD *)(*v3 + 88);
  *(_QWORD *)(*v3 + 96) = v2;
  swift_task_dealloc(v7);
  if (v2)
  {
    v8 = sub_1001EB8DC;
  }
  else
  {
    v9 = *(_QWORD *)(v6 + 72);
    v11 = *(_QWORD *)(v6 + 56);
    v10 = *(_QWORD *)(v6 + 64);

    *(_QWORD *)(v6 + 104) = a2;
    *(_QWORD *)(v6 + 112) = a1;
    sub_100007F8C(v10, v9);
    swift_release(v11);
    v8 = sub_1001EB8C0;
  }
  return swift_task_switch(v8, 0, 0);
}

uint64_t sub_1001EB8C0()
{
  uint64_t v0;

  *(int8x16_t *)*(_QWORD *)(v0 + 16) = vextq_s8(*(int8x16_t *)(v0 + 104), *(int8x16_t *)(v0 + 104), 8uLL);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001EB8DC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);

  sub_100007F8C(v2, v1);
  swift_release(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001EB930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  uint64_t v12;

  *(_QWORD *)(v8 + 96) = v12;
  *(_OWORD *)(v8 + 80) = v11;
  *(_QWORD *)(v8 + 64) = a7;
  *(_QWORD *)(v8 + 72) = a8;
  *(_QWORD *)(v8 + 48) = a5;
  *(_QWORD *)(v8 + 56) = a6;
  *(_QWORD *)(v8 + 32) = a3;
  *(_QWORD *)(v8 + 40) = a4;
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v9 = sub_100004828(&qword_1006384F0);
  *(_QWORD *)(v8 + 104) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001EB9A8, 0, 0);
}

uint64_t sub_1001EB9A8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t **v14;

  v1 = v0[13];
  v3 = v0[7];
  v2 = v0[8];
  v4 = v0[6];
  v5 = (_QWORD *)v0[4];
  v7 = v5[3];
  v6 = v5[4];
  sub_10000806C(v5, v7);
  v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v6 + 8) + 8))(v7);
  v10 = v9;
  v0[14] = v9;
  sub_100035DE8(v4, v1, type metadata accessor for TiberiusWrappedAssessment);
  v11 = type metadata accessor for TiberiusWrappedAssessment(0);
  v12 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v1, 0, 1, v11);
  IdentityProofingConfiguration.accountKeyIdentifier.getter(v12);
  v0[15] = v13;
  v14 = (uint64_t **)swift_task_alloc(dword_10063804C);
  v0[16] = (uint64_t)v14;
  *v14 = v0;
  v14[1] = (uint64_t *)sub_1001EBAC8;
  return sub_1001EE4F0(v0[2], v8, v10, v0[5], v0[13], v3, v2, v0[9]);
}

uint64_t sub_1001EBAC8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(*v1 + 120);
  v2 = *(_QWORD *)(*v1 + 128);
  v5 = *(_QWORD *)(*v1 + 104);
  v4 = *(_QWORD *)(*v1 + 112);
  v6 = *v1;
  *(_QWORD *)(v6 + 136) = v0;
  swift_task_dealloc(v2);
  sub_100008030(v5, &qword_1006384F0);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  if (v0)
    return swift_task_switch(sub_1001EBB78, 0, 0);
  swift_task_dealloc(*(_QWORD *)(v6 + 104));
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_1001EBB78()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001EBBAC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v1[19] = v0;
  v2 = type metadata accessor for DIPError.Code(0);
  v1[20] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[21] = v3;
  v1[22] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PDF417Data(0);
  v1[23] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[24] = v5;
  v1[25] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (*(_QWORD *)(*(_QWORD *)(sub_100004828(&qword_1006385A8) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[26] = swift_task_alloc(v6);
  v1[27] = swift_task_alloc(v6);
  v7 = sub_100004828(&qword_100633978);
  v1[28] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Logger(0);
  v1[29] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v1[30] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[31] = swift_task_alloc(v10);
  v1[32] = swift_task_alloc(v10);
  v1[33] = swift_task_alloc(v10);
  v1[34] = swift_task_alloc(v10);
  v1[35] = swift_task_alloc(v10);
  return swift_task_switch(sub_1001EBCE8, 0, 0);
}

unint64_t sub_1001EBCE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  __n128 v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t result;
  unint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  unint64_t v46;
  void (*v47)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  _BOOL4 v70;
  uint64_t v71;
  uint64_t v72;
  uint8_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  _BOOL4 v82;
  uint64_t v83;
  uint8_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  NSObject *v88;
  os_log_type_t v89;
  uint64_t v90;
  uint8_t *v91;
  uint64_t v92;
  void *v93;
  id v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  id v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(uint64_t, uint64_t);
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;

  v2 = defaultLogger()(a1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.debug.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "saveBiomeMetadata called", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v7 = (uint64_t *)(v1 + 152);
  v6 = *(_QWORD *)(v1 + 152);
  v8 = *(_QWORD *)(v1 + 280);
  v9 = *(_QWORD *)(v1 + 232);
  v10 = *(_QWORD *)(v1 + 240);

  v11 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v11(v8, v9);
  v12 = OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_proofingDocuments;
  *(_QWORD *)(v1 + 288) = OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_proofingDocuments;
  v13 = *(void **)(v6 + v12);
  *(_QWORD *)(v1 + 296) = v13;
  if (!v13)
  {
    v30 = *(_QWORD *)(v1 + 248);
    v31 = v11;
    v32 = *(_QWORD *)(v1 + 232);
    v33 = *(_QWORD *)(v1 + 208);
    v131 = *(_QWORD *)(v1 + 192);
    v34 = *(_QWORD *)(v1 + 176);
    v133 = *(_QWORD *)(v1 + 184);
    v135 = *(_QWORD *)(v1 + 152);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v1 + 168) + 104))(v34, enum case for DIPError.Code.missingProofingDocuments(_:), *(_QWORD *)(v1 + 160));
    v35 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v36 = type metadata accessor for DIPError(0);
    v37 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    v38 = swift_allocError(v36, v37, 0, 0);
    v39 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000037, 0x8000000100553AF0, 0, v34, 0, v35, 0xD00000000000007CLL, 0x80000001005535D0, 0xD000000000000013, 0x8000000100553B30, 727);
    defaultLogger()(v39);
    DIPRecordError(_:message:log:)(v38, 0, 0xE000000000000000, v30);
    v31(v30, v32);
    swift_errorRelease(v38);
    v40 = *(void **)(v6 + v12);
    *(_QWORD *)(v6 + v12) = 0;
    v41 = v1 + 16;

    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v131 + 56))(v33, 1, 1, v133);
    v42 = v135 + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_pdf417Data;
LABEL_20:
    swift_beginAccess(v42, v41, 33, 0);
    sub_100184E1C(v33, v42, &qword_1006385A8);
    swift_endAccess(v41);
    v57 = *(_QWORD *)(v1 + 272);
    v59 = *(_QWORD *)(v1 + 256);
    v58 = *(_QWORD *)(v1 + 264);
    v60 = *(_QWORD *)(v1 + 248);
    v62 = *(_QWORD *)(v1 + 216);
    v61 = *(_QWORD *)(v1 + 224);
    v64 = *(_QWORD *)(v1 + 200);
    v63 = *(_QWORD *)(v1 + 208);
    v65 = *(_QWORD *)(v1 + 176);
    swift_task_dealloc(*(_QWORD *)(v1 + 280));
    swift_task_dealloc(v57);
    swift_task_dealloc(v58);
    swift_task_dealloc(v59);
    swift_task_dealloc(v60);
    swift_task_dealloc(v61);
    swift_task_dealloc(v62);
    swift_task_dealloc(v63);
    swift_task_dealloc(v64);
    swift_task_dealloc(v65);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  v14 = *(_QWORD *)(v1 + 152);
  v15 = *(_QWORD *)(v14 + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_proofingSessionId);
  v16 = *(_QWORD *)(v14 + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_proofingSessionId + 8);
  *(_QWORD *)(v1 + 304) = v16;
  if (!v16)
  {
    v138 = v1 + 40;
    v43 = *(_QWORD *)(v1 + 248);
    v129 = *(_QWORD *)(v1 + 232);
    v134 = *(_QWORD *)(v1 + 208);
    v132 = *(_QWORD *)(v1 + 192);
    v44 = *(_QWORD *)(v1 + 176);
    v136 = *(_QWORD *)(v1 + 184);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v1 + 168) + 104))(v44, enum case for DIPError.Code.proofingSessionDoesntExist(_:), *(_QWORD *)(v1 + 160));
    v45 = v13;
    v46 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v47 = v11;
    v48 = type metadata accessor for DIPError(0);
    v49 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    v50 = swift_allocError(v48, v49, 0, 0);
    v51 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000035, 0x8000000100553B50, 0, v44, 0, v46, 0xD00000000000007CLL, 0x80000001005535D0, 0xD000000000000013, 0x8000000100553B30, 732);
LABEL_19:
    defaultLogger()(v51);
    DIPRecordError(_:message:log:)(v50, 0, 0xE000000000000000, v43);

    v47(v43, v129);
    swift_errorRelease(v50);
    v56 = *(void **)(v6 + v12);
    *(_QWORD *)(v6 + v12) = 0;
    v41 = v138;

    v33 = v134;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v132 + 56))(v134, 1, 1, v136);
    v42 = v14 + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_pdf417Data;
    goto LABEL_20;
  }
  v17 = *(_QWORD *)(v14 + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_phoneCredentialIdentifier + 8);
  *(_QWORD *)(v1 + 312) = v17;
  if (!v17)
  {
    v138 = v1 + 64;
    v43 = *(_QWORD *)(v1 + 248);
    v129 = *(_QWORD *)(v1 + 232);
    v134 = *(_QWORD *)(v1 + 208);
    v132 = *(_QWORD *)(v1 + 192);
    v52 = *(_QWORD *)(v1 + 176);
    v136 = *(_QWORD *)(v1 + 184);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v1 + 168) + 104))(v52, enum case for DIPError.Code.credentialIdentifierDoesNotExist(_:), *(_QWORD *)(v1 + 160));
    v45 = v13;
    v53 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v47 = v11;
    v54 = type metadata accessor for DIPError(0);
    v55 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    v50 = swift_allocError(v54, v55, 0, 0);
    v51 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000003ALL, 0x8000000100553B90, 0, v52, 0, v53, 0xD00000000000007CLL, 0x80000001005535D0, 0xD000000000000013, 0x8000000100553B30, 737);
    goto LABEL_19;
  }
  v137 = v15;
  v18 = v13;
  swift_bridgeObjectRetain(v16);
  v19 = swift_bridgeObjectRetain(v17);
  v20 = IdentityProofingDocuments.selfie.getter(v19);
  if (!v20)
    goto LABEL_26;
  v21 = (void *)v20;
  v22 = (void *)IdentityDocument.imageMetrics.getter();

  if (!v22)
    goto LABEL_26;
  v23 = IdentityImageQualityMetrics.captureMetrics.getter(v20);

  if (!((unint64_t)v23 >> 62))
  {
    v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v24)
      goto LABEL_10;
LABEL_25:
    v20 = swift_bridgeObjectRelease(v23);
LABEL_26:
    defaultLogger()(v20);
    v67 = swift_bridgeObjectRetain_n(v16, 2);
    v68 = Logger.logObject.getter(v67);
    v69 = static os_log_type_t.default.getter();
    v70 = os_log_type_enabled(v68, v69);
    v71 = *(_QWORD *)(v1 + 272);
    v72 = *(_QWORD *)(v1 + 232);
    v128 = v11;
    if (v70)
    {
      v126 = *(_QWORD *)(v1 + 232);
      v73 = (uint8_t *)swift_slowAlloc(12, -1);
      v74 = swift_slowAlloc(32, -1);
      v139 = v74;
      *(_DWORD *)v73 = 136315138;
      swift_bridgeObjectRetain(v16);
      *(_QWORD *)(v1 + 144) = sub_1000E3AC8(v137, v16, &v139);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 144, v1 + 152, v73 + 4);
      swift_bridgeObjectRelease_n(v16, 3);
      _os_log_impl((void *)&_mh_execute_header, v68, v69, "Trying to persist biome metadata for proofingSessionID: %s", v73, 0xCu);
      swift_arrayDestroy(v74, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v74, -1, -1);
      swift_slowDealloc(v73, -1, -1);

      v75 = v71;
      v76 = v126;
    }
    else
    {
      swift_bridgeObjectRelease_n(v16, 2);

      v75 = v71;
      v76 = v72;
    }
    v77 = ((uint64_t (*)(uint64_t, uint64_t))v11)(v75, v76);
    v78 = *(_QWORD *)(v1 + 152);
    defaultLogger()(v77);
    v79 = swift_retain(v78);
    v80 = Logger.logObject.getter(v79);
    v81 = static os_log_type_t.debug.getter(v80);
    v82 = os_log_type_enabled(v80, v81);
    v83 = *(_QWORD *)(v1 + 152);
    if (v82)
    {
      v84 = (uint8_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v84 = 67109120;
      *(_DWORD *)(v1 + 360) = *(_QWORD *)(*(_QWORD *)(v83 + 120)
                                        + OBJC_IVAR____TtC8coreidvd35IdentityProofingFetchedAssetManager_biomeFedStatsFieldsToCollect) != 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 360, v1 + 364, v84 + 4);
      swift_release(v83);
      _os_log_impl((void *)&_mh_execute_header, v80, v81, "fetchedAssetManager.biomeFedStatsFieldsToCollect -> %{BOOL}d", v84, 8u);
      swift_slowDealloc(v84, -1, -1);
    }
    else
    {
      swift_release(v83);
    }

    v85 = *(_QWORD *)(v1 + 152);
    v86 = ((uint64_t (*)(_QWORD, _QWORD))v11)(*(_QWORD *)(v1 + 264), *(_QWORD *)(v1 + 232));
    defaultLogger()(v86);
    v87 = swift_retain_n(v85, 2);
    v88 = Logger.logObject.getter(v87);
    v89 = static os_log_type_t.debug.getter(v88);
    if (os_log_type_enabled(v88, v89))
    {
      v90 = *v7;
      v91 = (uint8_t *)swift_slowAlloc(12, -1);
      v92 = swift_slowAlloc(32, -1);
      v139 = v92;
      *(_DWORD *)v91 = 136315138;
      v93 = *(void **)(v90 + 16);
      v127 = v92;
      if (!v93
        || (v94 = v93,
            v95 = (_QWORD *)IdentityProofingConfiguration.axSettings.getter(),
            v94,
            !v95))
      {
        swift_bridgeObjectRelease(0);
        v95 = _swiftEmptyArrayStorage;
      }
      v124 = *(_QWORD *)(v1 + 232);
      v125 = *(_QWORD *)(v1 + 256);
      v96 = *(_QWORD *)(v1 + 152);
      v97 = Array.description.getter(v95, &type metadata for String);
      v99 = v98;
      swift_bridgeObjectRelease(v95);
      *(_QWORD *)(v1 + 136) = sub_1000E3AC8(v97, v99, &v139);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 136, v1 + 144, v91 + 4);
      swift_bridgeObjectRelease(v99);
      swift_release_n(v96, 2);
      _os_log_impl((void *)&_mh_execute_header, v88, v89, "Enabled AX Settings %s", v91, 0xCu);
      swift_arrayDestroy(v127, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v127, -1, -1);
      swift_slowDealloc(v91, -1, -1);

      v128(v125, v124);
    }
    else
    {
      v100 = *(_QWORD *)(v1 + 256);
      v101 = *(_QWORD *)(v1 + 232);
      swift_release_n(*(_QWORD *)(v1 + 152), 2);

      v11(v100, v101);
    }
    v102 = *(_QWORD *)(v1 + 216);
    v103 = *(_QWORD *)(v1 + 152);
    v104 = *(_QWORD *)(v103 + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_biomeManager);
    v105 = *(_QWORD *)(v1 + 184);
    v106 = *(_QWORD *)(v1 + 192);
    v107 = OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_pdf417Data;
    *(_QWORD *)(v1 + 320) = v104;
    *(_QWORD *)(v1 + 328) = v107;
    v108 = v103 + v107;
    swift_beginAccess(v103 + v107, v1 + 88, 0, 0);
    sub_100038B24(v108, v102, &qword_1006385A8);
    v109 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v106 + 48))(v102, 1, v105);
    v111 = *(_QWORD *)(v1 + 216);
    v110 = *(_QWORD *)(v1 + 224);
    if (v109)
    {
      swift_retain(v104);
      sub_100008030(v111, &qword_1006385A8);
      v112 = type metadata accessor for PDF417ParsedData(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v112 - 8) + 56))(v110, 1, 1, v112);
    }
    else
    {
      v114 = *(_QWORD *)(v1 + 192);
      v113 = *(_QWORD *)(v1 + 200);
      v115 = *(_QWORD *)(v1 + 184);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v114 + 16))(v113, *(_QWORD *)(v1 + 216), v115);
      swift_retain(v104);
      v116 = sub_100008030(v111, &qword_1006385A8);
      PDF417Data.parsedData.getter(v116);
      (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v113, v115);
    }
    v117 = *v7;
    v118 = *(void **)(*v7 + 16);
    if (v118)
    {
      v119 = v118;
      v120 = IdentityProofingConfiguration.axSettings.getter();

      v117 = *v7;
    }
    else
    {
      v120 = 0;
    }
    *(_QWORD *)(v1 + 336) = v120;
    v121 = *(_QWORD *)(*(_QWORD *)(v117 + 120)
                     + OBJC_IVAR____TtC8coreidvd35IdentityProofingFetchedAssetManager_biomeFedStatsFieldsToCollect);
    *(_QWORD *)(v1 + 344) = v121;
    v122 = unk_100633974;
    v130 = (char *)&dword_100633970 + dword_100633970;
    swift_bridgeObjectRetain(v121);
    v123 = (_QWORD *)swift_task_alloc(v122);
    *(_QWORD *)(v1 + 352) = v123;
    *v123 = v1;
    v123[1] = sub_1001EC98C;
    __asm { BR              X8; sub_1000D3A04 }
  }
  if (v23 < 0)
    v66 = v23;
  else
    v66 = v23 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v23);
  v24 = _CocoaArrayWrapper.endIndex.getter(v66);
  swift_bridgeObjectRelease(v23);
  if (!v24)
    goto LABEL_25;
LABEL_10:
  result = v24 - 1;
  if (__OFSUB__(v24, 1))
  {
    __break(1u);
    goto LABEL_46;
  }
  if ((v23 & 0xC000000000000001) != 0)
  {
LABEL_46:
    v26 = v16;
    v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(result, v23);
    goto LABEL_15;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v26 = v16;
    v27 = *(id *)(v23 + 8 * result + 32);
LABEL_15:
    v28 = v27;
    v29 = swift_bridgeObjectRelease(v23);
    dispatch thunk of ImageQualityMetrics.skinTone.getter(v29);

    v16 = v26;
    goto LABEL_26;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001EC98C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 336);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 312);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 320);
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 304);
  v5 = *(_QWORD *)(*(_QWORD *)v0 + 224);
  if (*(_QWORD *)(*(_QWORD *)v0 + 344))
    v6 = *(void **)(*(_QWORD *)v0 + 344);
  else
    v6 = &_swiftEmptySetSingleton;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 352));
  swift_release(v2);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v1);
  sub_100008030(v5, &qword_100633978);
  return swift_task_switch(sub_1001ECA48, 0, 0);
}

uint64_t sub_1001ECA48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 152);
  v6 = v5 + *(_QWORD *)(v0 + 328);

  v7 = *(void **)(v5 + v1);
  *(_QWORD *)(v5 + v1) = 0;

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  swift_beginAccess(v6, v0 + 112, 33, 0);
  sub_100184E1C(v2, v6, &qword_1006385A8);
  swift_endAccess(v0 + 112);
  v8 = *(_QWORD *)(v0 + 272);
  v10 = *(_QWORD *)(v0 + 256);
  v9 = *(_QWORD *)(v0 + 264);
  v11 = *(_QWORD *)(v0 + 248);
  v13 = *(_QWORD *)(v0 + 216);
  v12 = *(_QWORD *)(v0 + 224);
  v15 = *(_QWORD *)(v0 + 200);
  v14 = *(_QWORD *)(v0 + 208);
  v16 = *(_QWORD *)(v0 + 176);
  swift_task_dealloc(*(_QWORD *)(v0 + 280));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1001ECB68(uint64_t a1, NSObject *a2, unsigned int *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[24];

  v12 = type metadata accessor for DIPError.Code(0);
  __chkstk_darwin(v12);
  v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(char *, _QWORD))(v15 + 104))(v14, *a3);
  v16 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
  v17 = type metadata accessor for DIPError(0);
  v18 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
  v19 = swift_allocError(v17, v18, 0, 0);
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(a4, a5, 0, v14, 0, v16, 0xD00000000000007CLL, 0x80000001005535D0, 0xD000000000000024, 0x8000000100554730, a6);
  swift_beginAccess(a1 + 16, v22, 1, 0);
  v20 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v19;
  swift_errorRelease(v20);
  dispatch_group_leave(a2);
}

uint64_t sub_1001ECCE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch(sub_1001ECD00, 0, 0);
}

uint64_t sub_1001ECD00()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t **v3;

  v1 = *(_QWORD *)(v0[3] + 120);
  v0[5] = v1;
  v2 = dword_100640F3C;
  swift_retain(v1);
  v3 = (uint64_t **)swift_task_alloc(v2);
  v0[6] = (uint64_t)v3;
  *v3 = v0;
  v3[1] = (uint64_t *)sub_1001E54B8;
  return sub_100431248(v0[2], v0[4], 0);
}

void sub_1001ECD6C(void (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, void (*a4)(char *, uint64_t), void *a5, _QWORD *a6, _QWORD *a7, void (*a8)(void *, _QWORD))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  id v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  void *v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  uint8_t *v66;
  void (*v67)(char *, uint64_t);
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  uint8_t *v82;
  uint8_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  int *v100;
  uint64_t *v101;
  char *v102;
  _QWORD *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  _OWORD *v139;
  uint64_t v140;
  __int128 v141;
  uint64_t v142;
  char *v143;
  void (*v144)(uint64_t, uint64_t);
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  unint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  id v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  NSObject *v171;
  os_log_type_t v172;
  uint8_t *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  __int128 v178;
  uint64_t v179;
  uint64_t v180;
  id v181;
  uint64_t v182;
  uint64_t v183;
  id v184;
  void *v185;
  id v186;
  int v187;
  int v188;
  int v189;
  char *v190;
  unint64_t v191;
  uint64_t v192;
  char *v193;
  void (*v194)(uint64_t, uint64_t);
  char *v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  void (*v199)(void *, _QWORD);
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  uint64_t v206;
  char *v207;
  char *v208;
  uint64_t v209;
  char *v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  char *v215;
  uint64_t v216;
  unint64_t v217;
  uint64_t v218;
  char *v219;
  char *v220;
  uint64_t v221;
  void (*v222)(char *, uint64_t);
  id v223;
  uint64_t v224;
  _QWORD *v225;
  uint64_t v226;
  _QWORD *v227;
  _QWORD *v228;
  __int128 v229;
  __int128 v230;
  __int128 v231;
  uint64_t v232;
  char v233[8];
  uint64_t v234;
  uint64_t v235;
  char v236[8];
  uint64_t v237;
  char v238;
  uint64_t v239;
  Swift::Int64_optional v240;

  v199 = a8;
  v228 = a7;
  v225 = a6;
  v223 = a5;
  v222 = a4;
  v224 = a3;
  v203 = type metadata accessor for IdentityProofingStaticWorkflow(0);
  v200 = *(_QWORD *)(v203 - 8);
  v10 = __chkstk_darwin(v203);
  v202 = (uint64_t)&v190 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v201 = v11;
  __chkstk_darwin(v10);
  v204 = (uint64_t)&v190 - v12;
  v13 = sub_100004828(&qword_100633990);
  __chkstk_darwin(v13);
  v205 = (char *)&v190 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v221 = sub_100004828(&qword_1006384E0);
  v209 = *(_QWORD *)(v221 - 8);
  v15 = __chkstk_darwin(v221);
  v207 = (char *)&v190 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v15);
  v208 = (char *)&v190 - v18;
  v206 = v19;
  __chkstk_darwin(v17);
  v220 = (char *)&v190 - v20;
  v217 = type metadata accessor for DeviceInformationProvider(0);
  v216 = *(_QWORD *)(v217 - 8);
  __chkstk_darwin(v217);
  v215 = (char *)&v190 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v213 = type metadata accessor for UUID(0);
  v212 = *(_QWORD *)(v213 - 8);
  __chkstk_darwin(v213);
  v211 = (char *)&v190 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100004828(&qword_1006384E8);
  __chkstk_darwin(v23);
  v214 = (char *)&v190 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_100004828(&qword_1006384F0);
  __chkstk_darwin(v25);
  v210 = (char *)&v190 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v219 = (char *)type metadata accessor for IdentityProofingRequestV2(0);
  v27 = __chkstk_darwin(v219);
  v218 = (uint64_t)&v190 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v227 = (char **)((char *)&v190 - v29);
  v226 = type metadata accessor for Logger(0);
  v30 = *(_QWORD *)(v226 - 8);
  v31 = __chkstk_darwin(v226);
  v33 = (char *)&v190 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __chkstk_darwin(v31);
  v36 = (char *)&v190 - v35;
  __chkstk_darwin(v34);
  v38 = (char *)&v190 - v37;
  v39 = type metadata accessor for DIPError.Code(0);
  v40 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v42 = (char *)&v190 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 == 2)
    v43 = 2;
  else
    v43 = 1;
  v44 = a1;
  v45 = v239;
  sub_1000D6840(v43);
  if (v45)
    return;
  v47 = v46;
  v196 = v38;
  v197 = v30;
  v195 = v36;
  v198 = v40;
  v239 = v39;
  v193 = v33;
  v194 = v44;
  if (!v46)
  {
LABEL_17:
    (*(void (**)(char *, _QWORD, uint64_t))(v198 + 104))(v42, enum case for DIPError.Code.extendedReviewProofingError(_:), v239);
    v70 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v71 = type metadata accessor for DIPError(0);
    v72 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    swift_allocError(v71, v72, 0, 0);
    v73 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000046, 0x80000001005536F0, 0, v42, 0, v70, 0xD00000000000007CLL, 0x80000001005535D0, 0xD000000000000030, 0x8000000100553650, 826);
    swift_willThrow(v73);
    return;
  }
  v48 = v46 & 0xFFFFFFFFFFFFFF8;
  if ((unint64_t)v46 >> 62)
  {
    if (v46 >= 0)
      v168 = v46 & 0xFFFFFFFFFFFFFF8;
    else
      v168 = v46;
    swift_bridgeObjectRetain(v46);
    v49 = _CocoaArrayWrapper.endIndex.getter(v168);
    swift_bridgeObjectRelease(v47);
  }
  else
  {
    v49 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  v50 = v228;
  if (!v49)
  {
    swift_bridgeObjectRelease(v47);
    goto LABEL_17;
  }
  if ((v47 & 0xC000000000000001) != 0)
  {
    v51 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v47);
    goto LABEL_12;
  }
  if (*(_QWORD *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v51 = *(id *)(v47 + 32);
LABEL_12:
    v52 = v51;
    v53 = v226;
    v54 = v239;
    v55 = v198;
    swift_bridgeObjectRelease(v47);
    v56 = objc_msgSend(v52, "proofingSessionID");
    if (!v56)
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v55 + 104))(v42, enum case for DIPError.Code.proofingSessionIDUnavailable(_:), v54);
      v74 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
      v75 = type metadata accessor for DIPError(0);
      v76 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
      swift_allocError(v75, v76, 0, 0);
      v77 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000045, 0x8000000100553740, 0, v42, 0, v74, 0xD00000000000007CLL, 0x80000001005535D0, 0xD000000000000030, 0x8000000100553650, 830);
      swift_willThrow(v77);

      return;
    }
    v57 = v56;
    v192 = static String._unconditionallyBridgeFromObjectiveC(_:)(v56);
    v59 = v58;

    v60 = v196;
    v62 = defaultLogger()(v61);
    v63 = Logger.logObject.getter(v62);
    v64 = static os_log_type_t.debug.getter(v63);
    if (os_log_type_enabled(v63, v64))
    {
      v65 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v65 = 0;
      _os_log_impl((void *)&_mh_execute_header, v63, v64, "ProofingSessionID from the previous proofing attempt exists. Continuing the proofing flow", v65, 2u);
      v66 = v65;
      v53 = v226;
      swift_slowDealloc(v66, -1, -1);
    }

    v67 = *(void (**)(char *, uint64_t))(v197 + 8);
    v67(v60, v53);
    v68 = v224;
    v69 = sub_1001EF050((uint64_t)v222, (uint64_t)v223, v225, v50);
    v191 = v69;
    v196 = v59;
    v223 = v52;
    v222 = v67;
    v190 = v42;
    v197 = 0;
    v78 = v195;
    v79 = defaultLogger()(v69);
    v80 = Logger.logObject.getter(v79);
    v81 = static os_log_type_t.debug.getter(v80);
    if (os_log_type_enabled(v80, v81))
    {
      v82 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v82 = 0;
      _os_log_impl((void *)&_mh_execute_header, v80, v81, "encrypting authcode idv data for issuer complete.", v82, 2u);
      v83 = v82;
      v53 = v226;
      swift_slowDealloc(v83, -1, -1);
    }

    v222(v78, v53);
    v85 = v50[3];
    v84 = v50[4];
    sub_10000806C(v50, v85);
    v86 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v84 + 8) + 8))(v85);
    v88 = v87;
    v89 = type metadata accessor for TiberiusWrappedAssessment(0);
    v90 = (uint64_t)v210;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 56))(v210, 1, 1, v89);
    v91 = type metadata accessor for LivenessDataV2(0);
    v92 = (uint64_t)v214;
    v93 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v214, 1, 1, v91);
    v94 = v211;
    v95 = UUID.init()(v93);
    v96 = UUID.uuidString.getter(v95);
    v98 = v97;
    (*(void (**)(char *, uint64_t))(v212 + 8))(v94, v213);
    v99 = v227;
    *v227 = 0;
    v99[1] = 0xE000000000000000;
    v99[2] = v96;
    v99[3] = v98;
    *((_OWORD *)v99 + 2) = 0u;
    *((_OWORD *)v99 + 3) = 0u;
    *((_OWORD *)v99 + 4) = 0u;
    v99[10] = v86;
    v99[11] = v88;
    v99[12] = 0;
    v99[13] = 0;
    v99[14] = v191;
    v100 = (int *)v219;
    sub_1000A1F54(v90, (uint64_t)v99 + *((int *)v219 + 9), &qword_1006384F0);
    *(_QWORD *)((char *)v99 + v100[10]) = 0;
    *(_QWORD *)((char *)v99 + v100[11]) = 0;
    *(_QWORD *)((char *)v99 + v100[12]) = _swiftEmptyArrayStorage;
    v101 = (_QWORD *)((char *)v99 + v100[13]);
    v102 = v196;
    *v101 = v192;
    v101[1] = (uint64_t)v102;
    sub_1000A1F54(v92, (uint64_t)v99 + v100[14], &qword_1006384E8);
    *(_QWORD *)((char *)v99 + v100[15]) = 0;
    v103 = (_QWORD *)((char *)v99 + v100[16]);
    *v103 = 0;
    v103[1] = 0;
    v104 = *(char **)(v68 + 24);
    v105 = *(_QWORD *)&v104[OBJC_IVAR____TtC8coreidvd13DIPWebService_conversation + 8];
    *v99 = *(_QWORD *)&v104[OBJC_IVAR____TtC8coreidvd13DIPWebService_conversation];
    v99[1] = v105;
    type metadata accessor for DIPAccountManager(0);
    v214 = v104;
    swift_bridgeObjectRetain(v105);
    static DIPAccountManager.sharedInstance.getter(&v229, v106);
    v107 = *((_QWORD *)&v230 + 1);
    v108 = v231;
    sub_10000806C(&v229, *((uint64_t *)&v230 + 1));
    v213 = dispatch thunk of DIPAccountManagerProtocol.appleAuthHeader(_:)(0, 0, v107, v108);
    v212 = v109;
    v110 = _s8coreidvd24DigitalPresentmentHelperVwxx_0(&v229);
    v111 = v215;
    v112 = DeviceInformationProvider.init()(v110);
    v211 = (char *)DeviceInformationProvider.uniqueDeviceID.getter(v112);
    v114 = v113;
    (*(void (**)(char *, unint64_t))(v216 + 8))(v111, v217);
    if (qword_10062F5D8 != -1)
      swift_once(&qword_10062F5D8, sub_1004E424C);
    v115 = qword_100670878;
    v116 = unk_100670880;
    v117 = v99[4];
    v118 = v99[5];
    v119 = v227[6];
    v120 = v227[7];
    v121 = v227[8];
    v122 = v227[9];
    swift_bridgeObjectRetain(unk_100670880);
    v123 = v119;
    v124 = v227;
    sub_10008EF5C(v117, v118, v123, v120, v121, v122);

    v125 = v212;
    v124[4] = v213;
    v124[5] = v125;
    v124[6] = v211;
    v124[7] = v114;
    v124[8] = v115;
    v124[9] = v116;
    v126 = v218;
    sub_100035DE8((uint64_t)v124, v218, type metadata accessor for IdentityProofingRequestV2);
    v127 = sub_100004790(&qword_1006384F8, type metadata accessor for IdentityProofingRequestV2, (uint64_t)&unk_10052BB8C);
    v128 = sub_100004790(&qword_100638500, type metadata accessor for IdentityProofingRequestV2, (uint64_t)&unk_10052BB64);
    v129 = (uint64_t)v220;
    JWSSignedJSON.init(payload:)(v126, v100, v127, v128);
    v130 = v225;
    v131 = v221;
    JWSSignedJSON.setCertificateChain(_:)((Swift::OpaquePointer)v225[5]);
    if (v132)
    {

      (*(void (**)(uint64_t, uint64_t))(v209 + 8))(v129, v131);
      sub_100035DAC((uint64_t)v124, type metadata accessor for IdentityProofingRequestV2);
      return;
    }
    JWSSignedJSON.setKid(_:)(v130, v131);
    v133 = v209;
    v134 = v207;
    (*(void (**)(char *, uint64_t, uint64_t))(v209 + 16))(v207, v129, v131);
    sub_1001FB2F4((uint64_t)v130, (uint64_t)&v229);
    v135 = *(unsigned __int8 *)(v133 + 80);
    v136 = (v135 + 16) & ~v135;
    v137 = (v206 + v136 + 7) & 0xFFFFFFFFFFFFFFF8;
    v138 = swift_allocObject(&unk_10060AFC0, v137 + 48, v135 | 7);
    v225 = *(_QWORD **)(v133 + 32);
    ((void (*)(uint64_t, char *, uint64_t))v225)(v138 + v136, v134, v221);
    v139 = (_OWORD *)(v138 + v137);
    v140 = v221;
    v141 = v230;
    *v139 = v229;
    v139[1] = v141;
    v139[2] = v231;
    v142 = v140;
    v143 = v208;
    runAsyncAndBlock<A>(timeout:file:function:line:_:)(0, 1, 0xD00000000000002DLL, 0x8000000100553690, 0xD000000000000030, 0x8000000100553650, 846, &unk_100638510, v138, v140);
    v217 = (unint64_t)"ons:completion:)";
    v219 = "ProofingRequestManager.swift";
    v218 = 0xD00000000000002DLL;
    v144 = *(void (**)(uint64_t, uint64_t))(v133 + 8);
    v145 = v142;
    v144(v129, v142);
    swift_release(v138);
    ((void (*)(uint64_t, char *, uint64_t))v225)(v129, v143, v142);
    v147 = v228[3];
    v146 = v228[4];
    sub_10000806C(v228, v147);
    v148 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v146 + 8) + 8))(v147);
    v150 = v149;
    sub_1001F01F4(v148, v149, v129, (uint64_t)&v232);
    swift_bridgeObjectRelease(v150);
    v151 = v235;
    if (!v235)
    {
      sub_1001FB4E0(&v232);
      v153 = v219;
      goto LABEL_30;
    }
    v152 = v234;
    sub_1000A1F54((uint64_t)v233, (uint64_t)v236, &qword_100638518);
    swift_bridgeObjectRetain(v151);
    sub_1001FB4E0(&v232);
    sub_1000A1F54((uint64_t)v236, (uint64_t)&v237, &qword_100638518);
    v153 = v219;
    if ((v238 & 1) != 0)
    {
      swift_bridgeObjectRelease(v151);
      v145 = v221;
LABEL_30:
      v154 = v190;
      (*(void (**)(char *, _QWORD, uint64_t))(v198 + 104))(v190, enum case for DIPError.Code.serverResponseInconsistent(_:), v239);
      v155 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
      v156 = type metadata accessor for DIPError(0);
      v157 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
      swift_allocError(v156, v157, 0, 0);
      v158 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000039, 0x8000000100553790, 0, v154, 0, v155, 0xD00000000000007CLL, 0x80000001005535D0, 0xD000000000000030, (unint64_t)v153 | 0x8000000000000000, 856);
      swift_willThrow(v158);

      v144(v129, v145);
      sub_100035DAC((uint64_t)v227, type metadata accessor for IdentityProofingRequestV2);
      return;
    }
    v44 = v144;
    v159 = v237;
    v161 = v228[3];
    v160 = v228[4];
    sub_10000806C(v228, v161);
    v162 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v160 + 8) + 8))(v161);
    v164 = v163;
    v165 = (uint64_t)v205;
    Date.init()(v162);
    v166 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v166 - 8) + 56))(v165, 0, 1, v166);
    StoredProofingSession.update(_:proofingSessionID:manualCheckInterval:createdAt:)(v162, v164, v152, v151, v159, v165);
    swift_bridgeObjectRelease(v164);
    swift_bridgeObjectRelease(v151);
    sub_100008030(v165, &qword_100633990);
    v240.value = IdentityProofingActionStatus.rawValue.getter(1);
    v240.is_nil = 0;
    StoredProofingSession.update(proofingActionStatus:)(v240);
    v167 = sub_1000D6288();
    v169 = v193;
    v170 = defaultLogger()(v167);
    v171 = Logger.logObject.getter(v170);
    v172 = static os_log_type_t.debug.getter(v171);
    if (os_log_type_enabled(v171, v172))
    {
      v173 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v173 = 0;
      _os_log_impl((void *)&_mh_execute_header, v171, v172, "----EXTENDED REVIEW PROOFING REQUEST SUCCESSFULLY COMPLETED----", v173, 2u);
      swift_slowDealloc(v173, -1, -1);
    }

    v222(v169, v226);
    v48 = v224;
    swift_retain(v224);
    v50 = (_QWORD *)(v217 | 0x8000000000000000);
    v47 = (unint64_t)v153 | 0x8000000000000000;
    runAsyncAndBlock<A>(timeout:file:function:line:_:)(0, 1, v218, v217 | 0x8000000000000000, 0xD000000000000030, (unint64_t)v153 | 0x8000000000000000, 868, &unk_100638528, v48, v203);
    v42 = 0;
    goto LABEL_41;
  }
  __break(1u);
LABEL_41:
  swift_release(v48);
  v174 = v202;
  sub_100035DE8(v204, v202, type metadata accessor for IdentityProofingStaticWorkflow);
  v175 = *(unsigned __int8 *)(v200 + 80);
  v176 = (v175 + 24) & ~v175;
  v177 = swift_allocObject(&unk_10060AFE8, v176 + v201, v175 | 7);
  *(_QWORD *)(v177 + 16) = v48;
  sub_100038AE0(v174, v177 + v176, type metadata accessor for IdentityProofingStaticWorkflow);
  swift_retain(v48);
  runAsyncAndBlock<A>(timeout:file:function:line:_:)(0, 1, v218, v50, 0xD000000000000030, v47, 871, &unk_100638538, v177, &type metadata for Data);
  swift_release(v177);
  if (v42)
  {

  }
  else
  {
    v178 = v229;
    v179 = sub_100004828(&qword_100640C30);
    v180 = swift_allocObject(v179, 40, 7);
    *(_OWORD *)(v180 + 16) = xmmword_100523860;
    v181 = objc_allocWithZone((Class)type metadata accessor for IdentityProofingUIConfig(0));
    LOBYTE(v188) = 1;
    v182 = IdentityProofingUIConfig.init(view:title:subTitle:url:primaryButtonTitle:secondaryButtonTitle:tertiaryButtonTitle:messages:fields:caption:minLength:maxLength:placeholder:displayName:imageAssetsData:options:isUIEnabled:)(0x676E69646E6570, 0xE700000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             1,
             0,
             1,
             0,
             0,
             0,
             0,
             0,
             0,
             v188);
    *(_QWORD *)(v180 + 32) = v182;
    *(_QWORD *)&v229 = v180;
    specialized Array._endMutation()(v182);
    v183 = v229;
    v184 = objc_allocWithZone((Class)type metadata accessor for IdentityProofingDisplayInfo(0));
    sub_100022948(v178, *((unint64_t *)&v178 + 1));
    LOBYTE(v189) = 2;
    LOBYTE(v187) = 1;
    v185 = (void *)IdentityProofingDisplayInfo.init(proofingUI:docScan:attributeConfig:learnMoreURL:waitingForWiFiAlertDataThresholdInBytes:lowDataModeAlertDataThresholdInBytes:idType:featureEnablementConfig:supportedRegions:livenessStepUpConfig:livenessStepUpIQSettings:shouldPreFetchLivenessConfig:)(v183, 0, v178, *((_QWORD *)&v178 + 1), 0, 0, 0, 1, 0, v187, 0, 0, 0, _swiftEmptyArrayStorage, 0, 0, v189);
    v186 = v185;
    v199(v185, 0);

    sub_100007F8C(v178, *((unint64_t *)&v178 + 1));
  }
  sub_100035DAC(v204, type metadata accessor for IdentityProofingStaticWorkflow);
  v44((uint64_t)v220, v221);
  sub_100035DAC((uint64_t)v227, type metadata accessor for IdentityProofingRequestV2);
}

uint64_t sub_1001EE300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch(sub_1001EE31C, 0, 0);
}

uint64_t sub_1001EE31C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[2];
  v2 = v0[3];
  v3 = sub_100004828(&qword_1006384E0);
  v0[5] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v0[6] = v4;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, v3);
  v5 = (_QWORD *)swift_task_alloc(async function pointer to JWSSignedJSON.sign(_:)[1]);
  v0[7] = v5;
  *v5 = v0;
  v5[1] = sub_100155E9C;
  return JWSSignedJSON.sign(_:)(v0[4], v3);
}

uint64_t sub_1001EE3B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = type metadata accessor for IdentityProofingAttributeConfiguration(0);
  v3[5] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[6] = v5;
  v3[7] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001EE414, 0, 0);
}

uint64_t sub_1001EE414()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[4];
  v2 = *(_QWORD *)(v0[3] + 40);
  v0[8] = v2;
  v3 = *(_QWORD *)(v1 + 64);
  v4 = dword_100634C0C;
  swift_retain(v2);
  v5 = (_QWORD *)swift_task_alloc(v4);
  v0[9] = v5;
  *v5 = v0;
  v5[1] = sub_1001EE48C;
  return sub_1000FE8D8(v0[7], v3);
}

uint64_t sub_1001EE48C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1001FCFD4;
  else
    v3 = sub_1001FD000;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001EE4F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;

  *(_QWORD *)(v9 + 288) = v26;
  *(_QWORD *)(v9 + 296) = v8;
  *(_QWORD *)(v9 + 280) = v25;
  *(_OWORD *)(v9 + 264) = v24;
  *(_OWORD *)(v9 + 248) = v23;
  *(_QWORD *)(v9 + 232) = a7;
  *(_QWORD *)(v9 + 240) = a8;
  *(_QWORD *)(v9 + 216) = a5;
  *(_QWORD *)(v9 + 224) = a6;
  *(_QWORD *)(v9 + 200) = a3;
  *(_QWORD *)(v9 + 208) = a4;
  *(_QWORD *)(v9 + 184) = a1;
  *(_QWORD *)(v9 + 192) = a2;
  v10 = type metadata accessor for DIPError.Code(0);
  *(_QWORD *)(v9 + 304) = v10;
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v9 + 312) = v11;
  *(_QWORD *)(v9 + 320) = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DeviceInformationProvider(0);
  *(_QWORD *)(v9 + 328) = v12;
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v9 + 336) = v13;
  *(_QWORD *)(v9 + 344) = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for UUID(0);
  *(_QWORD *)(v9 + 352) = v14;
  v15 = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v9 + 360) = v15;
  *(_QWORD *)(v9 + 368) = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100004828(&qword_1006384E8);
  *(_QWORD *)(v9 + 376) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100004828(&qword_1006384F0);
  *(_QWORD *)(v9 + 384) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v17 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for IdentityProofingRequestV2(0);
  *(_QWORD *)(v9 + 392) = v18;
  v19 = (*(_QWORD *)(*(_QWORD *)(v18 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v9 + 400) = swift_task_alloc(v19);
  *(_QWORD *)(v9 + 408) = swift_task_alloc(v19);
  v20 = type metadata accessor for Logger(0);
  *(_QWORD *)(v9 + 416) = v20;
  v21 = *(_QWORD *)(v20 - 8);
  *(_QWORD *)(v9 + 424) = v21;
  *(_QWORD *)(v9 + 432) = swift_task_alloc((*(_QWORD *)(v21 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001EE66C, 0, 0);
}

uint64_t sub_1001EE66C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  unint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  Swift::OpaquePointer v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101[3];

  v2 = *(_QWORD *)(v1 + 200);
  defaultLogger()(a1);
  v3 = swift_bridgeObjectRetain_n(v2, 2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.debug.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v96 = *(_QWORD *)(v1 + 416);
    v99 = *(_QWORD *)(v1 + 432);
    v6 = *(_QWORD *)(v1 + 200);
    v91 = *(_QWORD *)(v1 + 192);
    v94 = *(_QWORD *)(v1 + 424);
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v101[0] = v8;
    *(_DWORD *)v7 = 136446210;
    swift_bridgeObjectRetain(v6);
    *(_QWORD *)(v1 + 176) = sub_1000E3AC8(v91, v6, v101);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 176, v1 + 184, v7 + 4);
    swift_bridgeObjectRelease_n(v6, 3);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Building and signing proofing request for workflow ID %{public}s", v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v99, v96);
  }
  else
  {
    v10 = *(_QWORD *)(v1 + 424);
    v9 = *(_QWORD *)(v1 + 432);
    v11 = *(_QWORD *)(v1 + 416);
    swift_bridgeObjectRelease_n(*(_QWORD *)(v1 + 200), 2);

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  }
  v12 = *(_QWORD *)(*(_QWORD *)(v1 + 296) + 120)
      + OBJC_IVAR____TtC8coreidvd35IdentityProofingFetchedAssetManager_identityKeyPair;
  swift_beginAccess(v12, v1 + 152, 0, 0);
  sub_100038B24(v12, v1 + 64, &qword_100637FA8);
  if (*(_QWORD *)(v1 + 88))
  {
    v13 = *(_QWORD **)(v1 + 408);
    v14 = *(_QWORD *)(v1 + 384);
    v15 = *(int **)(v1 + 392);
    v78 = v14;
    v16 = *(_QWORD *)(v1 + 368);
    v17 = *(_QWORD *)(v1 + 376);
    v80 = *(_QWORD *)(v1 + 360);
    v81 = *(_QWORD *)(v1 + 352);
    v92 = *(_QWORD *)(v1 + 344);
    v95 = *(_QWORD *)(v1 + 336);
    v97 = *(_QWORD *)(v1 + 328);
    v18 = *(_QWORD *)(v1 + 288);
    v86 = *(_QWORD *)(v1 + 280);
    v88 = *(_QWORD *)(v1 + 296);
    v19 = *(_QWORD *)(v1 + 264);
    v75 = *(_QWORD *)(v1 + 256);
    v84 = *(_QWORD *)(v1 + 248);
    v73 = *(_QWORD *)(v1 + 232);
    v74 = *(_QWORD *)(v1 + 240);
    v20 = *(_QWORD *)(v1 + 216);
    v21 = *(_QWORD *)(v1 + 224);
    v76 = v21;
    v77 = *(_QWORD *)(v1 + 272);
    v22 = *(_QWORD *)(v1 + 200);
    v23 = *(_QWORD *)(v1 + 208);
    v79 = *(_QWORD *)(v1 + 192);
    v24 = *(_OWORD *)(v1 + 80);
    *(_OWORD *)(v1 + 16) = *(_OWORD *)(v1 + 64);
    *(_OWORD *)(v1 + 32) = v24;
    v100 = v1 + 16;
    *(_OWORD *)(v1 + 48) = *(_OWORD *)(v1 + 96);
    sub_100038B24(v20, v14, &qword_1006384F0);
    sub_100038B24(v19, v17, &qword_1006384E8);
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v22);
    swift_bridgeObjectRetain(v23);
    swift_bridgeObjectRetain(v21);
    swift_bridgeObjectRetain(v73);
    swift_bridgeObjectRetain(v74);
    swift_bridgeObjectRetain(v75);
    swift_bridgeObjectRetain(v77);
    v26 = UUID.init()(v25);
    v27 = UUID.uuidString.getter(v26);
    v29 = v28;
    (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v16, v81);
    *v13 = 0;
    v13[1] = 0xE000000000000000;
    v13[2] = v27;
    v13[3] = v29;
    *((_OWORD *)v13 + 2) = 0u;
    *((_OWORD *)v13 + 3) = 0u;
    *((_OWORD *)v13 + 4) = 0u;
    v13[10] = v79;
    v13[11] = v22;
    v13[12] = 0;
    v13[13] = 0;
    v13[14] = v23;
    sub_1000A1F54(v78, (uint64_t)v13 + v15[9], &qword_1006384F0);
    *(_QWORD *)((char *)v13 + v15[10]) = v76;
    *(_QWORD *)((char *)v13 + v15[11]) = v73;
    *(_QWORD *)((char *)v13 + v15[12]) = v74;
    v30 = (_QWORD *)((char *)v13 + v15[13]);
    *v30 = v84;
    v30[1] = v75;
    sub_1000A1F54(v17, (uint64_t)v13 + v15[14], &qword_1006384E8);
    *(_QWORD *)((char *)v13 + v15[15]) = v77;
    v31 = (_QWORD *)((char *)v13 + v15[16]);
    *v31 = v86;
    v31[1] = v18;
    v32 = *(char **)(v88 + 24);
    v33 = *(_QWORD *)&v32[OBJC_IVAR____TtC8coreidvd13DIPWebService_conversation + 8];
    *v13 = *(_QWORD *)&v32[OBJC_IVAR____TtC8coreidvd13DIPWebService_conversation];
    v13[1] = v33;
    type metadata accessor for DIPAccountManager(0);
    v89 = v32;
    swift_bridgeObjectRetain(v33);
    static DIPAccountManager.sharedInstance.getter((_QWORD *)(v1 + 112), v34);
    v35 = *(_QWORD *)(v1 + 136);
    v36 = *(_QWORD *)(v1 + 144);
    sub_10000806C((_QWORD *)(v1 + 112), v35);
    v37 = dispatch thunk of DIPAccountManagerProtocol.appleAuthHeader(_:)(0, 0, v35, v36);
    v85 = v38;
    v87 = v37;
    v39 = _s8coreidvd24DigitalPresentmentHelperVwxx_0((_QWORD *)(v1 + 112));
    v40 = DeviceInformationProvider.init()(v39);
    v90 = DeviceInformationProvider.uniqueDeviceID.getter(v40);
    v83 = v41;
    (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v92, v97);
    if (qword_10062F5D8 != -1)
      swift_once(&qword_10062F5D8, sub_1004E424C);
    v93 = *(_QWORD *)(v1 + 408);
    v82 = *(_QWORD *)(v1 + 400);
    v98 = *(_QWORD *)(v1 + 392);
    v43 = qword_100670878;
    v42 = unk_100670880;
    v44 = v13[4];
    v45 = v13[5];
    v46 = v13[6];
    v47 = v13[7];
    v49 = v13[8];
    v48 = v13[9];
    swift_bridgeObjectRetain(unk_100670880);
    sub_10008EF5C(v44, v45, v46, v47, v49, v48);

    v13[4] = v87;
    v13[5] = v85;
    v13[6] = v90;
    v13[7] = v83;
    v13[8] = v43;
    v13[9] = v42;
    sub_100035DE8(v93, v82, type metadata accessor for IdentityProofingRequestV2);
    v50 = sub_100004790(&qword_1006384F8, type metadata accessor for IdentityProofingRequestV2, (uint64_t)&unk_10052BB8C);
    v51 = sub_100004790(&qword_100638500, type metadata accessor for IdentityProofingRequestV2, (uint64_t)&unk_10052BB64);
    JWSSignedJSON.init(payload:)(v82, v98, v50, v51);
    v52._rawValue = *(void **)(v1 + 56);
    swift_bridgeObjectRetain(v52._rawValue);
    v53 = sub_100004828(&qword_1006384E0);
    *(_QWORD *)(v1 + 440) = v53;
    JWSSignedJSON.setCertificateChain(_:)(v52);
    if (!v54)
    {
      swift_bridgeObjectRelease(v52._rawValue);
      JWSSignedJSON.setKid(_:)(v100, v53);
      v71 = (_QWORD *)swift_task_alloc(async function pointer to JWSSignedJSON.sign(_:)[1]);
      *(_QWORD *)(v1 + 448) = v71;
      *v71 = v1;
      v71[1] = sub_1001EEE60;
      return JWSSignedJSON.sign(_:)(v100, v53);
    }
    v55 = *(_QWORD *)(v1 + 408);
    v56 = *(_QWORD *)(v1 + 184);
    swift_bridgeObjectRelease(v52._rawValue);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 8))(v56, v53);
    sub_100035DAC(v55, type metadata accessor for IdentityProofingRequestV2);
    sub_1001A496C((_QWORD *)(v1 + 16));
  }
  else
  {
    v58 = *(_QWORD *)(v1 + 312);
    v57 = *(_QWORD *)(v1 + 320);
    v59 = *(_QWORD *)(v1 + 304);
    sub_100008030(v1 + 64, &qword_100637FA8);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v58 + 104))(v57, enum case for DIPError.Code.internalError(_:), v59);
    v60 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v61 = type metadata accessor for DIPError(0);
    v62 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    swift_allocError(v61, v62, 0, 0);
    v63 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000003CLL, 0x80000001005539D0, 0, v57, 0, v60, 0xD00000000000007CLL, 0x80000001005535D0, 0xD0000000000000D2, 0x8000000100553A10, 909);
    swift_willThrow(v63);
  }
  v64 = *(_QWORD *)(v1 + 400);
  v65 = *(_QWORD *)(v1 + 408);
  v67 = *(_QWORD *)(v1 + 376);
  v66 = *(_QWORD *)(v1 + 384);
  v68 = *(_QWORD *)(v1 + 368);
  v69 = *(_QWORD *)(v1 + 344);
  v70 = *(_QWORD *)(v1 + 320);
  swift_task_dealloc(*(_QWORD *)(v1 + 432));
  swift_task_dealloc(v65);
  swift_task_dealloc(v64);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1001EEE60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 448);
  *(_QWORD *)(*(_QWORD *)v1 + 456) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1001EEF84;
  else
    v3 = sub_1001EEEC4;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001EEEC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 432);
  v3 = *(_QWORD *)(v0 + 400);
  v2 = *(_QWORD *)(v0 + 408);
  v5 = *(_QWORD *)(v0 + 376);
  v4 = *(_QWORD *)(v0 + 384);
  v6 = *(_QWORD *)(v0 + 368);
  v7 = *(_QWORD *)(v0 + 344);
  v8 = *(_QWORD *)(v0 + 320);
  sub_100035DAC(v2, type metadata accessor for IdentityProofingRequestV2);
  sub_1001A496C((_QWORD *)(v0 + 16));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001EEF84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 408);
  (*(void (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)(v0 + 440) - 8) + 8))(*(_QWORD *)(v0 + 184));
  sub_100035DAC(v1, type metadata accessor for IdentityProofingRequestV2);
  sub_1001A496C((_QWORD *)(v0 + 16));
  v3 = *(_QWORD *)(v0 + 400);
  v2 = *(_QWORD *)(v0 + 408);
  v5 = *(_QWORD *)(v0 + 376);
  v4 = *(_QWORD *)(v0 + 384);
  v6 = *(_QWORD *)(v0 + 368);
  v7 = *(_QWORD *)(v0 + 344);
  v8 = *(_QWORD *)(v0 + 320);
  swift_task_dealloc(*(_QWORD *)(v0 + 432));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1001EF050(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  void *v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint8_t *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  _QWORD *v76;
  char *v77;
  _QWORD *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  _QWORD v83[5];
  _QWORD v84[35];
  _BYTE v85[287];
  uint64_t v86;

  v78 = a4;
  v75 = a2;
  v76 = (_QWORD *)a1;
  v5 = type metadata accessor for RecipientEncryptionCertificate(0);
  v70 = *(_QWORD *)(v5 - 8);
  v71 = v5;
  __chkstk_darwin(v5);
  v79 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = type metadata accessor for EncryptedMessageEntity(0);
  v80 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v77 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100004828(&qword_100630278);
  v67 = *(_QWORD *)(v8 - 8);
  v68 = v8;
  v9 = __chkstk_darwin(v8);
  v69 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v72 = (uint64_t)&v64 - v11;
  v12 = type metadata accessor for Logger(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100004828(&qword_100633978);
  __chkstk_darwin(v16);
  v74 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for HPKESuiteKwV1(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v81 = (char *)&v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a3[3];
  v21 = a3[4];
  v23 = (unint64_t)sub_10000806C(a3, v22);
  v24 = v86;
  v25 = dispatch thunk of IdentityKey.getIdentityPublicKeyData()(v22, v21);
  if (!v24)
  {
    v27 = v15;
    v65 = v13;
    v66 = v12;
    v73 = v19;
    v28 = v18;
    v29 = v81;
    HPKESuiteKwV1.init(pkISm:info:)(v25, v26, 0, 0xC000000000000000);
    v30 = type metadata accessor for PDF417ParsedData(0);
    v31 = (uint64_t)v74;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v74, 1, 1, v30);
    swift_bridgeObjectRetain(v75);
    sub_1002AD464(0, 0, v31, 0, 0, 0, 0, 0, v84, 0, 0, 0, 0, (uint64_t)v76, v32);
    memcpy(&v85[7], v84, 0x118uLL);
    v33 = sub_1000E34B0(0, 1, 1, _swiftEmptyArrayStorage);
    v35 = v33[2];
    v34 = v33[3];
    if (v35 >= v34 >> 1)
      v33 = sub_1000E34B0((_QWORD *)(v34 > 1), v35 + 1, 1, v33);
    v36 = v73;
    v37 = v82;
    v86 = 0;
    v33[2] = v35 + 1;
    v76 = v33;
    v38 = &v33[36 * v35];
    *((_BYTE *)v38 + 32) = 4;
    v39 = memcpy((char *)v38 + 33, v85, 0x11FuLL);
    v40 = defaultLogger()(v39);
    v41 = Logger.logObject.getter(v40);
    v42 = static os_log_type_t.debug.getter(v41);
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v43 = 0;
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "encrypting auth code for issuer", v43, 2u);
      v44 = v43;
      v36 = v73;
      swift_slowDealloc(v44, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v65 + 8))(v27, v66);
    v83[3] = v28;
    v83[4] = &protocol witness table for HPKESuiteKwV1;
    v45 = sub_100022234(v83);
    (*(void (**)(_QWORD *, char *, uint64_t))(v36 + 16))(v45, v29, v28);
    v46 = v80;
    v47 = (uint64_t)v77;
    (*(void (**)(char *, _QWORD, uint64_t))(v80 + 104))(v77, enum case for EncryptedMessageEntity.issuer(_:), v37);
    v48 = v78[3];
    v49 = v78[4];
    v50 = sub_10000806C(v78, v48);
    v51 = v79;
    v23 = (unint64_t)v50;
    v52 = v86;
    v53 = (*(uint64_t (**)(uint64_t, uint64_t))(v49 + 40))(v48, v49);
    if (v52)
    {
      swift_bridgeObjectRelease(v76);
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v47, v82);
      (*(void (**)(char *, uint64_t))(v73 + 8))(v29, v28);
      _s8coreidvd24DigitalPresentmentHelperVwxx_0(v83);
    }
    else
    {
      v86 = v28;
      v54 = (void *)RecipientEncryptionCertificate.keyAgreement.getter(v53);
      (*(void (**)(char *, uint64_t))(v70 + 8))(v51, v71);
      v55 = v72;
      v56 = (uint64_t)v76;
      sub_1001EF770(v83, (uint64_t)v76, 0, 0, v47, (uint64_t)v54, v72);
      (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v47, v82);
      swift_bridgeObjectRelease(v56);

      _s8coreidvd24DigitalPresentmentHelperVwxx_0(v83);
      v59 = v67;
      v58 = v68;
      v60 = v69;
      (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v69, v55, v68);
      v23 = sub_1000E349C(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
      v62 = *(_QWORD *)(v23 + 16);
      v61 = *(_QWORD *)(v23 + 24);
      v63 = v86;
      if (v62 >= v61 >> 1)
        v23 = sub_1000E349C(v61 > 1, v62 + 1, 1, v23);
      *(_QWORD *)(v23 + 16) = v62 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v59 + 32))(v23+ ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80))+ *(_QWORD *)(v59 + 72) * v62, v60, v58);
      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v72, v58);
      (*(void (**)(char *, uint64_t))(v73 + 8))(v81, v63);
    }
  }
  return v23;
}

unint64_t sub_1001EF64C()
{
  Swift::String v0;
  void *object;

  _StringGuts.grow(_:)(23);
  swift_bridgeObjectRelease(0xE000000000000000);
  sub_10028325C();
  object = v0._object;
  String.append(_:)(v0);
  swift_bridgeObjectRelease(object);
  return 0xD000000000000015;
}

unint64_t sub_1001EF6C8(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  Swift::String v7;

  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease(0xE000000000000000);
  v2 = *a1;
  v3 = swift_bridgeObjectRetain(v2);
  v4 = Array.debugDescription.getter(v3, &type metadata for IDVData);
  v6 = v5;
  swift_bridgeObjectRelease(v2);
  v7._countAndFlagsBits = v4;
  v7._object = v6;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(v6);
  return 0xD000000000000016;
}

uint64_t sub_1001EF770@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(void);
  uint64_t (*v44)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  void (*v70)(char *, _QWORD, uint64_t);
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  NSObject *v91;
  os_log_type_t v92;
  uint8_t *v93;
  uint8_t *v94;
  char *v95;
  _QWORD *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  NSObject *v100;
  os_log_type_t v101;
  uint8_t *v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  uint8_t *v107;
  uint64_t v108;
  uint64_t v109;
  char *v111;
  uint64_t v112;
  char *v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  Swift::OpaquePointer v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  _QWORD *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char v144[8];
  uint64_t v145;

  v125 = a6;
  v126 = a7;
  v133 = a5;
  v134._rawValue = a4;
  v123 = a3;
  v138 = a1;
  v8 = type metadata accessor for EncryptedMessageEntity(0);
  v131 = *(_QWORD *)(v8 - 8);
  v132 = v8;
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v111 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v9);
  v122 = (char *)&v111 - v13;
  __chkstk_darwin(v12);
  v121 = (char *)&v111 - v14;
  v130 = sub_100004828(&qword_100630278);
  v118 = *(_QWORD *)(v130 - 8);
  __chkstk_darwin(v130);
  v136 = (char *)&v111 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = type metadata accessor for ProofingData(0);
  v16 = __chkstk_darwin(v119);
  v120 = (uint64_t)&v111 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v137 = (uint64_t)&v111 - v18;
  v19 = type metadata accessor for AEADKey(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = __chkstk_darwin(v19);
  v114 = (char *)&v111 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v127 = (char *)&v111 - v23;
  v24 = sub_100004828(&qword_100638568);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = __chkstk_darwin(v24);
  v113 = (char *)&v111 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v29 = (char *)&v111 - v28;
  v140 = type metadata accessor for Logger(0);
  v135 = *(_QWORD *)(v140 - 8);
  v30 = __chkstk_darwin(v140);
  v115 = (char *)&v111 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __chkstk_darwin(v30);
  v111 = (char *)&v111 - v33;
  __chkstk_darwin(v32);
  v35 = (char *)&v111 - v34;
  v36 = sub_100004828(&qword_100638570);
  v37 = __chkstk_darwin(v36);
  v112 = (uint64_t)&v111 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  v40 = (char *)&v111 - v39;
  v41 = sub_100004828(&qword_100638578);
  __chkstk_darwin(v41);
  v128 = v25;
  v129 = v24;
  v43 = *(void (**)(void))(v25 + 56);
  v142 = (uint64_t)&v111 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43();
  v116 = v20;
  v44 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
  v139 = v40;
  v117 = v19;
  v45 = v44(v40, 1, 1, v19);
  v124 = v11;
  if (a2)
  {
    v46 = defaultLogger()(v45);
    v47 = Logger.logObject.getter(v46);
    v48 = static os_log_type_t.debug.getter(v47);
    if (os_log_type_enabled(v47, v48))
    {
      v49 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v49 = 0;
      _os_log_impl((void *)&_mh_execute_header, v47, v48, "encrypt idv data with aead", v49, 2u);
      swift_slowDealloc(v49, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v135 + 8))(v35, v140);
    v50 = v138[3];
    v51 = v138[4];
    sub_10000806C(v138, v50);
    v145 = a2;
    v52 = sub_100004828(&qword_100638580);
    v53 = sub_1001FB90C(&qword_100638588, (void (*)(void))sub_1001FB8C8, (uint64_t)&protocol conformance descriptor for <A> [A]);
    v54 = sub_1001FB90C(&qword_100638598, (void (*)(void))sub_1001FB974, (uint64_t)&protocol conformance descriptor for <A> [A]);
    v55 = v127;
    v56 = v141;
    dispatch thunk of HPKESuite.sealMessageAEAD<A>(message:)(v29, v127, &v145, v52, v53, v54, v50, v51);
    v57 = (uint64_t)v139;
    sub_100008030((uint64_t)v139, &qword_100638570);
    v58 = v142;
    if (v56)
      goto LABEL_20;
    v141 = 0;
    sub_100008030(v142, &qword_100638578);
    v59 = v29;
    v60 = v129;
    (*(void (**)(uint64_t, char *, uint64_t))(v128 + 32))(v58, v59, v129);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v43)(v58, 0, 1, v60);
    v61 = v117;
    (*(void (**)(uint64_t, char *, uint64_t))(v116 + 32))(v57, v55, v117);
    v44((char *)v57, 0, 1, v61);
    v62 = v136;
    v63 = v132;
  }
  else
  {
    v62 = v136;
    v63 = v132;
    v58 = v142;
  }
  v64 = v137;
  sub_100038B24(v58, v137, &qword_100638578);
  v65 = v119;
  v66 = v123;
  *(_QWORD *)(v64 + *(int *)(v119 + 20)) = v123;
  v67 = v131;
  v68 = v121;
  v127 = *(char **)(v131 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v127)(v121, v133, v63);
  v69 = v120;
  sub_100035DE8(v64, v120, type metadata accessor for ProofingData);
  v70 = *(void (**)(char *, _QWORD, uint64_t))(v67 + 104);
  v71 = v122;
  v70(v122, enum case for EncryptedMessageEntity.device(_:), v63);
  v72 = sub_100004790(&qword_100630300, type metadata accessor for ProofingData, (uint64_t)&unk_10052BA74);
  v73 = sub_100004790((unint64_t *)&unk_100630308, type metadata accessor for ProofingData, (uint64_t)&unk_10052BA4C);
  swift_bridgeObjectRetain(v66);
  HPKEEncryptedMessageWithKeyWrap.init(sender:recipient:messages:)(v71, v68, v69, v65, v72, v73);
  v75 = v128;
  v74 = v129;
  v76 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v128 + 48))(v142, 1, v129);
  v77 = v140;
  v78 = v141;
  v79 = v124;
  v80 = v130;
  if (!(_DWORD)v76)
  {
    v81 = v113;
    (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v113, v142, v74);
    v82 = SealedMessage.keyID.getter(v74);
    v84 = v83;
    (*(void (**)(char *, uint64_t))(v75 + 8))(v81, v74);
    v85 = v112;
    sub_100038B24((uint64_t)v139, v112, &qword_100638570);
    v86 = v116;
    v87 = v117;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v116 + 48))(v85, 1, v117) == 1)
    {
      swift_bridgeObjectRelease(v84);
      v76 = sub_100008030(v85, &qword_100638570);
      v62 = v136;
    }
    else
    {
      v88 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v86 + 32))(v114, v85, v87);
      v89 = v111;
      v90 = defaultLogger()(v88);
      v91 = Logger.logObject.getter(v90);
      v92 = static os_log_type_t.debug.getter(v91);
      if (os_log_type_enabled(v91, v92))
      {
        v93 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v93 = 0;
        _os_log_impl((void *)&_mh_execute_header, v91, v92, "add idv data encryption key", v93, 2u);
        v94 = v93;
        v77 = v140;
        v80 = v130;
        swift_slowDealloc(v94, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v135 + 8))(v89, v77);
      v95 = v114;
      v62 = v136;
      HPKEEncryptedMessageWithKeyWrap.addMessageEncryptionKey(keyID:key:)(v82, v84, v114, v80);
      swift_bridgeObjectRelease(v84);
      v76 = (*(uint64_t (**)(char *, uint64_t))(v116 + 8))(v95, v117);
    }
  }
  v96 = v138;
  if (v134._rawValue)
  {
    v97 = v115;
    defaultLogger()(v76);
    v98 = v132;
    v99 = ((uint64_t (*)(char *, uint64_t, uint64_t))v127)(v79, v133, v132);
    v100 = Logger.logObject.getter(v99);
    v101 = static os_log_type_t.debug.getter(v100);
    if (os_log_type_enabled(v100, v101))
    {
      v102 = (uint8_t *)swift_slowAlloc(12, -1);
      v103 = swift_slowAlloc(32, -1);
      v145 = v103;
      *(_DWORD *)v102 = 136315138;
      v104 = EncryptedMessageEntity.rawValue.getter();
      v106 = v105;
      v143 = sub_1000E3AC8(v104, v105, &v145);
      v80 = v130;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v143, v144, v102 + 4);
      swift_bridgeObjectRelease(v106);
      (*(void (**)(char *, uint64_t))(v131 + 8))(v79, v98);
      _os_log_impl((void *)&_mh_execute_header, v100, v101, "add uploaded data encryption keys to encryptedIDVData for %s", v102, 0xCu);
      swift_arrayDestroy(v103, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v103, -1, -1);
      v107 = v102;
      v96 = v138;
      swift_slowDealloc(v107, -1, -1);

      (*(void (**)(char *, uint64_t))(v135 + 8))(v115, v140);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v131 + 8))(v79, v98);

      (*(void (**)(char *, uint64_t))(v135 + 8))(v97, v77);
    }
    v62 = v136;
    v78 = v141;
    HPKEEncryptedMessageWithKeyWrap.addMessageEncryptionKeys(keys:)(v134);
  }
  HPKEEncryptedMessageWithKeyWrap.sealKeys(to:encryptor:)(v125, v96, v80);
  v108 = v126;
  if (!v78)
  {
    sub_100035DAC(v137, type metadata accessor for ProofingData);
    sub_100008030((uint64_t)v139, &qword_100638570);
    (*(void (**)(uint64_t, char *, uint64_t))(v118 + 32))(v108, v62, v80);
    v109 = v142;
    return sub_100008030(v109, &qword_100638578);
  }
  (*(void (**)(char *, uint64_t))(v118 + 8))(v62, v80);
  sub_100035DAC(v137, type metadata accessor for ProofingData);
  sub_100008030((uint64_t)v139, &qword_100638570);
  v58 = v142;
LABEL_20:
  v109 = v58;
  return sub_100008030(v109, &qword_100638578);
}

__n128 sub_1001F01F4@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint8_t *v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 result;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __n128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;

  v42 = a3;
  v46 = a2;
  v44 = a1;
  v39 = a4;
  v41 = type metadata accessor for DIPError.Code(0);
  v40 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_100004828(&qword_1006384E0);
  v6 = *(_QWORD *)(v43 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v43);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = defaultLogger()(v11);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.debug.getter(v15);
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc(2, -1);
    v38 = v5;
    v18 = v17;
    *(_WORD *)v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Performing identity proofing request", v17, 2u);
    v19 = v18;
    v5 = v38;
    swift_slowDealloc(v19, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  v20 = v43;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v42, v43);
  v21 = *(unsigned __int8 *)(v6 + 80);
  v22 = (v21 + 24) & ~v21;
  v23 = (v7 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = swift_allocObject(&unk_10060B038, v23 + 16, v21 | 7);
  v25 = v45;
  *(_QWORD *)(v24 + 16) = v45;
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v24 + v22, v8, v20);
  v26 = (_QWORD *)(v24 + v23);
  v27 = v46;
  *v26 = v44;
  v26[1] = v27;
  swift_retain(v25);
  swift_bridgeObjectRetain(v27);
  v28 = v56;
  runAsyncAndBlock<A>(timeout:file:function:line:_:)(0, 1, 0xD00000000000002DLL, 0x8000000100553690, 0xD000000000000036, 0x8000000100553960, 1161, &unk_100638558, v24, &type metadata for IdentityProofingResponseV2);
  swift_release(v24);
  if (v28)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v40 + 104))(v5, enum case for DIPError.Code.internalError(_:), v41);
    swift_errorRetain(v28);
    v29 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v30 = type metadata accessor for DIPError(0);
    v31 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    swift_allocError(v30, v31, 0, 0);
    v32 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000024, 0x80000001005539A0, v28, v5, 0, v29, 0xD00000000000007CLL, 0x80000001005535D0, 0xD000000000000036, 0x8000000100553960, 1165);
    swift_willThrow(v32);
    swift_errorRelease(v28);
  }
  else
  {
    v34 = v54;
    v35 = v39;
    *(_OWORD *)(v39 + 96) = v53;
    *(_OWORD *)(v35 + 112) = v34;
    *(_OWORD *)(v35 + 128) = v55;
    v36 = v50;
    *(_OWORD *)(v35 + 32) = v49;
    *(_OWORD *)(v35 + 48) = v36;
    v37 = v52;
    *(_OWORD *)(v35 + 64) = v51;
    *(_OWORD *)(v35 + 80) = v37;
    result = v48;
    *(_OWORD *)v35 = v47;
    *(__n128 *)(v35 + 16) = result;
  }
  return result;
}

uint64_t sub_1001F05E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  v6 = sub_100004828(&qword_100638560);
  v5[7] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[8] = v7;
  v5[9] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001F064C, 0, 0);
}

uint64_t sub_1001F064C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(void **)(v0[3] + 24);
  v0[10] = v1;
  v2 = dword_100639B2C;
  v1;
  v3 = (_QWORD *)swift_task_alloc(v2);
  v0[11] = v3;
  *v3 = v0;
  v3[1] = sub_1001F06BC;
  return sub_10024AB38(v0[9], v0[4], v0[5], v0[6]);
}

uint64_t sub_1001F06BC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 88);
  *(_QWORD *)(*v1 + 96) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1001F0788;
  }
  else
  {

    v4 = sub_1001F0728;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1001F0728()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 56);
  JWSSignedJSON.payload.getter(v3);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001F0788()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);

  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1001F07C4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, int a6, uint64_t a7, int a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  _BOOL4 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  Swift::String v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  Swift::String v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  NSObject *v97;
  os_log_type_t v98;
  _BOOL4 v99;
  uint8_t *v100;
  uint64_t v101;
  NSObject *v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  unint64_t v110;
  uint64_t v111;
  NSObject *v112;
  os_log_type_t v113;
  uint8_t *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  NSObject *v121;
  os_log_type_t v122;
  uint8_t *v123;
  void *v124;
  id v125;
  unint64_t v126;
  unint64_t v127;
  unint64_t v128;
  _BOOL4 v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint8_t *v140;
  NSObject *v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  void *object;
  void *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t countAndFlagsBits;
  uint64_t v151;
  int v152;
  uint64_t v153;
  int v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint8_t *v158;
  char *v159;
  uint64_t v160;
  char *v161;
  unint64_t v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char v169[24];
  __int128 v170;
  __int128 v171;
  uint64_t v172;
  __int128 v173;
  __int128 v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;

  v154 = a8;
  v153 = a7;
  v152 = a6;
  v164 = a3;
  v155 = a2;
  v160 = type metadata accessor for IdentityProofingStaticWorkflow(0);
  __chkstk_darwin(v160);
  v161 = (char *)&v140 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DIPError.Code(0);
  v165 = *(_QWORD *)(v12 - 8);
  v166 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v140 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Logger(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v157 = (char *)&v140 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v17);
  v156 = (char *)&v140 - v20;
  v21 = __chkstk_darwin(v19);
  v158 = (uint8_t *)&v140 - v22;
  v23 = __chkstk_darwin(v21);
  v25 = (char *)&v140 - v24;
  defaultLogger()(v23);
  v26 = swift_bridgeObjectRetain_n(a5, 2);
  v27 = Logger.logObject.getter(v26);
  v28 = static os_log_type_t.default.getter();
  v29 = os_log_type_enabled(v27, v28);
  v162 = a5;
  v151 = a4;
  v163 = a1;
  if (v29)
  {
    v30 = swift_slowAlloc(22, -1);
    countAndFlagsBits = v16;
    v31 = a4;
    v32 = v30;
    v148 = swift_slowAlloc(64, -1);
    *(_QWORD *)&v173 = v148;
    *(_DWORD *)v32 = 136446466;
    v149 = v15;
    v33 = IdentityTarget.debugDescription.getter(a1);
    v159 = v14;
    v35 = v34;
    *(_QWORD *)&v170 = sub_1000E3AC8(v33, v34, (uint64_t *)&v173);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v170, (char *)&v170 + 8, v32 + 4);
    swift_bridgeObjectRelease(v35);
    *(_WORD *)(v32 + 12) = 2082;
    if (a5)
      v36 = v31;
    else
      v36 = 7104878;
    if (a5)
      v37 = a5;
    else
      v37 = 0xE300000000000000;
    swift_bridgeObjectRetain(a5);
    *(_QWORD *)&v170 = sub_1000E3AC8(v36, v37, (uint64_t *)&v173);
    v38 = v168;
    v14 = v159;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v170, (char *)&v170 + 8, v32 + 14);
    swift_bridgeObjectRelease_n(a5, 2);
    swift_bridgeObjectRelease(v37);
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "Trying to save proofing session for target : %{public}s with pairingID : %{public}s", (uint8_t *)v32, 0x16u);
    v39 = v148;
    swift_arrayDestroy(v148, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v39, -1, -1);
    swift_slowDealloc(v32, -1, -1);

    v40 = *(void (**)(char *))(countAndFlagsBits + 8);
    v41 = v149;
    v40(v25);
  }
  else
  {

    swift_bridgeObjectRelease_n(a5, 2);
    v40 = *(void (**)(char *))(v16 + 8);
    v41 = v15;
    ((void (*)(char *, uint64_t))v40)(v25, v15);
    v38 = v168;
  }
  v42 = type metadata accessor for IdentityProofingDataContext();
  swift_allocObject(v42, 24, 7);
  v43 = v167;
  sub_1000D6044();
  if (!v43)
  {
    v45 = v44;
    v46 = *(void **)(v38 + 16);
    if (v46
      && (v47 = v46, IdentityProofingConfiguration.state.getter(v47), v49 = v48, v47, v49))
    {
      v167 = v45;
      v50 = String.lowercased()();
      countAndFlagsBits = v50._countAndFlagsBits;
      swift_bridgeObjectRelease(v49);
      v51 = *(void **)(v38 + 16);
      if (v51
        && (v52 = v51, IdentityProofingConfiguration.country.getter(), v54 = v53, v52, v54))
      {
        v55 = String.lowercased()();
        v149 = v55._countAndFlagsBits;
        swift_bridgeObjectRelease(v54);
        v56 = *(_QWORD *)(v38 + 120) + 136;
        swift_beginAccess(v56, v169, 0, 0);
        sub_100038B24(v56, (uint64_t)&v170, &qword_1006384C8);
        if (*((_QWORD *)&v171 + 1))
        {
          sub_100008018(&v170, (uint64_t)&v173);
          v57 = *(_QWORD *)(v38 + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_proofingSessionId + 8);
          if (v57)
          {
            v58 = v164;
            if (v164)
            {
              object = v55._object;
              v147 = v50._object;
              v145 = *(_QWORD *)(v38 + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_proofingSessionId);
              v148 = v57;
              swift_bridgeObjectRetain(v57);
              swift_bridgeObjectRetain(v58);
              v59 = IdentityTarget.rawValue.getter(v163);
              if (v59 != IdentityTarget.rawValue.getter(2) || v162)
              {
                v84 = v167;
                v83 = v168;
                if ((*(_BYTE *)(v168 + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_manualCheckInterval + 8) & 1) == 0)
                {
                  v89 = *(_QWORD *)(v168 + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_manualCheckInterval);
                  swift_retain(v168);
                  v90 = v160;
                  v91 = v161;
                  runAsyncAndBlock<A>(timeout:file:function:line:_:)(0, 1, 0xD00000000000002DLL, 0x8000000100553690, 0xD000000000000087, 0x80000001005537F0, 1209, &unk_100638548, v83, v160);
                  v144 = (unint64_t)"ID State unavailable";
                  v143 = v89;
                  swift_release(v83);
                  v92 = &v91[*(int *)(v90 + 44)];
                  v93 = *((_QWORD *)v92 + 1);
                  if (v93)
                  {
                    v142 = *(_QWORD *)v92;
                    v160 = v93;
                    swift_bridgeObjectRetain(v93);
                    defaultLogger()(v94);
                    v95 = v148;
                    v96 = swift_bridgeObjectRetain_n(v148, 2);
                    v97 = Logger.logObject.getter(v96);
                    v98 = static os_log_type_t.debug.getter(v97);
                    v141 = v97;
                    v99 = os_log_type_enabled(v97, v98);
                    v159 = v14;
                    if (v99)
                    {
                      v100 = (uint8_t *)swift_slowAlloc(12, -1);
                      v101 = swift_slowAlloc(32, -1);
                      *(_QWORD *)&v170 = v101;
                      *(_DWORD *)v100 = 136315138;
                      v140 = v100 + 4;
                      swift_bridgeObjectRetain(v95);
                      v176 = sub_1000E3AC8(v145, v95, (uint64_t *)&v170);
                      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v176, &v177, v140);
                      swift_bridgeObjectRelease_n(v95, 3);
                      v102 = v141;
                      _os_log_impl((void *)&_mh_execute_header, v141, v98, "----- PROOFING SESSION IDENTIFIER -----> %s", v100, 0xCu);
                      swift_arrayDestroy(v101, 1, (char *)&type metadata for Any + 8);
                      swift_slowDealloc(v101, -1, -1);
                      swift_slowDealloc(v100, -1, -1);

                    }
                    else
                    {

                      swift_bridgeObjectRelease_n(v95, 2);
                    }
                    v108 = ((uint64_t (*)(uint8_t *, uint64_t))v40)(v158, v41);
                    v109 = v156;
                    defaultLogger()(v108);
                    v110 = v164;
                    v111 = swift_bridgeObjectRetain_n(v164, 2);
                    v112 = Logger.logObject.getter(v111);
                    v113 = static os_log_type_t.debug.getter(v112);
                    if (os_log_type_enabled(v112, v113))
                    {
                      v114 = (uint8_t *)swift_slowAlloc(12, -1);
                      v115 = swift_slowAlloc(32, -1);
                      *(_QWORD *)&v170 = v115;
                      *(_DWORD *)v114 = 136315138;
                      v158 = v114 + 4;
                      swift_bridgeObjectRetain(v110);
                      v176 = sub_1000E3AC8(v155, v110, (uint64_t *)&v170);
                      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v176, &v177, v158);
                      swift_bridgeObjectRelease_n(v110, 3);
                      _os_log_impl((void *)&_mh_execute_header, v112, v113, "----- CREDENTIAL IDENTIFIER -----> %s", v114, 0xCu);
                      swift_arrayDestroy(v115, 1, (char *)&type metadata for Any + 8);
                      swift_slowDealloc(v115, -1, -1);
                      swift_slowDealloc(v114, -1, -1);

                      v116 = v156;
                    }
                    else
                    {

                      swift_bridgeObjectRelease_n(v110, 2);
                      v116 = v109;
                    }
                    v117 = ((uint64_t (*)(char *, uint64_t))v40)(v116, v41);
                    v118 = v167;
                    defaultLogger()(v117);
                    v119 = v168;
                    v120 = swift_retain_n(v168, 2);
                    v121 = Logger.logObject.getter(v120);
                    v122 = static os_log_type_t.debug.getter(v121);
                    if (os_log_type_enabled(v121, v122))
                    {
                      v123 = (uint8_t *)swift_slowAlloc(8, -1);
                      *(_DWORD *)v123 = 67109120;
                      v124 = *(void **)(v119 + 16);
                      if (v124)
                      {
                        v125 = v124;
                        v158 = (uint8_t *)IdentityProofingConfiguration.supplementalProvisioningData.getter();
                        v127 = v126;

                        sub_100007F78((uint64_t)v158, v127);
                        v128 = v127 >> 60;
                        v118 = v167;
                        v129 = v128 < 0xF;
                        swift_release(v119);
                      }
                      else
                      {
                        swift_release(v119);
                        v129 = 0;
                      }
                      LODWORD(v170) = v129;
                      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v170, (char *)&v170 + 4, v123 + 4);
                      swift_release(v119);
                      _os_log_impl((void *)&_mh_execute_header, v121, v122, "supplementalProvisioningData exists in configuration %{BOOL}d", v123, 8u);
                      swift_slowDealloc(v123, -1, -1);

                      v130 = v164;
                      v131 = v143;
                    }
                    else
                    {

                      swift_release_n(v119, 2);
                      v130 = v164;
                      v131 = v143;
                    }
                    ((void (*)(char *, uint64_t))v40)(v157, v41);
                    sub_10002581C((uint64_t)&v173, (uint64_t)&v170);
                    v132 = swift_allocObject(&unk_10060B010, 201, 7);
                    v133 = v163;
                    *(_QWORD *)(v132 + 16) = v119;
                    *(_QWORD *)(v132 + 24) = v133;
                    v134 = countAndFlagsBits;
                    *(_QWORD *)(v132 + 32) = v118;
                    *(_QWORD *)(v132 + 40) = v134;
                    v135 = v149;
                    *(_QWORD *)(v132 + 48) = v147;
                    *(_QWORD *)(v132 + 56) = v135;
                    v136 = v155;
                    *(_QWORD *)(v132 + 64) = object;
                    *(_QWORD *)(v132 + 72) = v136;
                    *(_QWORD *)(v132 + 80) = v130;
                    sub_100008018(&v170, v132 + 88);
                    v137 = v148;
                    *(_QWORD *)(v132 + 128) = v145;
                    *(_QWORD *)(v132 + 136) = v137;
                    v138 = v162;
                    *(_QWORD *)(v132 + 144) = v151;
                    *(_QWORD *)(v132 + 152) = v138;
                    v139 = v142;
                    *(_QWORD *)(v132 + 160) = v131;
                    *(_QWORD *)(v132 + 168) = v139;
                    *(_QWORD *)(v132 + 176) = v160;
                    *(_BYTE *)(v132 + 184) = v152 & 1;
                    *(_QWORD *)(v132 + 192) = v153;
                    *(_BYTE *)(v132 + 200) = v154 & 1;
                    swift_bridgeObjectRetain(v138);
                    swift_retain(v119);
                    swift_retain(v118);
                    sub_1000D6570((uint64_t)sub_1001FB71C, v132);
                    swift_release(v118);
                    swift_release(v132);
                    v107 = (uint64_t)v161;
                  }
                  else
                  {
                    swift_bridgeObjectRelease(v164);
                    swift_bridgeObjectRelease(v148);
                    swift_bridgeObjectRelease(object);
                    swift_bridgeObjectRelease(v147);
                    (*(void (**)(char *, _QWORD, uint64_t))(v165 + 104))(v14, enum case for DIPError.Code.learnMoreURLDoesntExist(_:), v166);
                    v103 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
                    v104 = type metadata accessor for DIPError(0);
                    v105 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
                    swift_allocError(v104, v105, 0, 0);
                    v106 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001CLL, 0x8000000100553920, 0, v14, 0, v103, 0xD00000000000007CLL, 0x80000001005535D0, 0xD000000000000087, v144 | 0x8000000000000000, 1213);
                    swift_willThrow(v106);
                    swift_release(v167);
                    v107 = (uint64_t)v91;
                  }
                  sub_100035DAC(v107, type metadata accessor for IdentityProofingStaticWorkflow);
                  goto LABEL_31;
                }
                swift_bridgeObjectRelease(v164);
                swift_bridgeObjectRelease(v148);
                swift_bridgeObjectRelease(object);
                swift_bridgeObjectRelease(v147);
                v172 = 0;
                v170 = 0u;
                v171 = 0u;
                v85 = sub_1001F240C((uint64_t)&v170);
                sub_100008030((uint64_t)&v170, &qword_1006384C8);
                (*(void (**)(char *, _QWORD, uint64_t))(v165 + 104))(v14, enum case for DIPError.Code.internalError(_:), v166);
                v86 = type metadata accessor for DIPError(0);
                v87 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
                swift_allocError(v86, v87, 0, 0);
                v88 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000023, 0x80000001005538F0, 0, v14, 0, v85, 0xD00000000000007CLL, 0x80000001005535D0, 0xD000000000000087, 0x80000001005537F0, 1206);
                swift_willThrow(v88);
                v82 = v84;
LABEL_30:
                swift_release(v82);
LABEL_31:
                _s8coreidvd24DigitalPresentmentHelperVwxx_0(&v173);
                return;
              }
              swift_bridgeObjectRelease(v58);
              swift_bridgeObjectRelease(v148);
              swift_bridgeObjectRelease(object);
              swift_bridgeObjectRelease(v147);
              (*(void (**)(char *, _QWORD, uint64_t))(v165 + 104))(v14, enum case for DIPError.Code.watchPairingIDDoesNotExist(_:), v166);
              v172 = 0;
              v170 = 0u;
              v171 = 0u;
              v60 = sub_1001F240C((uint64_t)&v170);
              sub_100008030((uint64_t)&v170, &qword_1006384C8);
              v61 = type metadata accessor for DIPError(0);
              v62 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
              swift_allocError(v61, v62, 0, 0);
              v63 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001ALL, 0x8000000100553940, 0, v14, 0, v60, 0xD00000000000007CLL, 0x80000001005535D0, 0xD000000000000087, 0x80000001005537F0, 1202);
            }
            else
            {
              swift_bridgeObjectRelease(v55._object);
              swift_bridgeObjectRelease(v50._object);
              (*(void (**)(char *, _QWORD, uint64_t))(v165 + 104))(v14, enum case for DIPError.Code.credentialIdentifierDoesNotExist(_:), v166);
              v172 = 0;
              v170 = 0u;
              v171 = 0u;
              v79 = sub_1001F240C((uint64_t)&v170);
              sub_100008030((uint64_t)&v170, &qword_1006384C8);
              v80 = type metadata accessor for DIPError(0);
              v81 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
              swift_allocError(v80, v81, 0, 0);
              v63 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000020, 0x80000001005538C0, 0, v14, 0, v79, 0xD00000000000007CLL, 0x80000001005535D0, 0xD000000000000087, 0x80000001005537F0, 1198);
            }
          }
          else
          {
            swift_bridgeObjectRelease(v55._object);
            swift_bridgeObjectRelease(v50._object);
            (*(void (**)(char *, _QWORD, uint64_t))(v165 + 104))(v14, enum case for DIPError.Code.proofingSessionIDUnavailable(_:), v166);
            v172 = 0;
            v170 = 0u;
            v171 = 0u;
            v76 = sub_1001F240C((uint64_t)&v170);
            sub_100008030((uint64_t)&v170, &qword_1006384C8);
            v77 = type metadata accessor for DIPError(0);
            v78 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
            swift_allocError(v77, v78, 0, 0);
            v63 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001DLL, 0x80000001005538A0, 0, v14, 0, v76, 0xD00000000000007CLL, 0x80000001005535D0, 0xD000000000000087, 0x80000001005537F0, 1194);
          }
          swift_willThrow(v63);
          v82 = v167;
          goto LABEL_30;
        }
        swift_bridgeObjectRelease(v55._object);
        swift_bridgeObjectRelease(v50._object);
        sub_100008030((uint64_t)&v170, &qword_1006384C8);
        (*(void (**)(char *, _QWORD, uint64_t))(v165 + 104))(v14, enum case for DIPError.Code.missingIdentityWorkFlow(_:), v166);
        v175 = 0;
        v173 = 0u;
        v174 = 0u;
        v73 = sub_1001F240C((uint64_t)&v173);
        sub_100008030((uint64_t)&v173, &qword_1006384C8);
        v74 = type metadata accessor for DIPError(0);
        v75 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
        swift_allocError(v74, v75, 0, 0);
        v72 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000016, 0x8000000100553880, 0, v14, 0, v73, 0xD00000000000007CLL, 0x80000001005535D0, 0xD000000000000087, 0x80000001005537F0, 1190);
      }
      else
      {
        swift_bridgeObjectRelease(v50._object);
        (*(void (**)(char *, _QWORD, uint64_t))(v165 + 104))(v14, enum case for DIPError.Code.idCountryUnavailable(_:), v166);
        v175 = 0;
        v173 = 0u;
        v174 = 0u;
        v69 = sub_1001F240C((uint64_t)&v173);
        sub_100008030((uint64_t)&v173, &qword_1006384C8);
        v70 = type metadata accessor for DIPError(0);
        v71 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
        swift_allocError(v70, v71, 0, 0);
        v72 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000014, 0x80000001005537D0, 0, v14, 0, v69, 0xD00000000000007CLL, 0x80000001005535D0, 0xD000000000000087, 0x80000001005537F0, 1186);
      }
      swift_willThrow(v72);
      v68 = v167;
    }
    else
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v165 + 104))(v14, enum case for DIPError.Code.idStateUnavailable(_:), v166);
      v175 = 0;
      v173 = 0u;
      v174 = 0u;
      v64 = sub_1001F240C((uint64_t)&v173);
      sub_100008030((uint64_t)&v173, &qword_1006384C8);
      v65 = type metadata accessor for DIPError(0);
      v66 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
      swift_allocError(v65, v66, 0, 0);
      v67 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000014, 0x80000001005537D0, 0, v14, 0, v64, 0xD00000000000007CLL, 0x80000001005535D0, 0xD000000000000087, 0x80000001005537F0, 1182);
      swift_willThrow(v67);
      v68 = v45;
    }
    swift_release(v68);
  }
}

void sub_1001F1CE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _QWORD *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unsigned __int8 a18, uint64_t a19, unsigned __int8 a20)
{
  uint64_t v20;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void *v34;
  NSString v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t, __n128);
  __n128 v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  id v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;

  v109 = a1;
  v28 = sub_100004828(&qword_100633990);
  v29 = __chkstk_darwin(v28);
  v110 = (char *)&v81 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v32 = (char *)&v81 - v31;
  sub_1004647FC(a2);
  if (!v20)
  {
    v83 = a4;
    v103 = 0;
    v104 = a2;
    v105 = a5;
    v106 = a6;
    v107 = a7;
    v84 = a8;
    v91 = a20;
    v92 = a19;
    v93 = a18;
    v94 = a16;
    v95 = a17;
    v99 = a14;
    v100 = a15;
    v97 = a12;
    v98 = a13;
    v96 = a11;
    v101 = a9;
    v34 = (void *)objc_opt_self(NSEntityDescription);
    v35 = String._bridgeToObjectiveC()();
    v108 = a3;
    v36 = objc_msgSend(v34, "insertNewObjectForEntityForName:inManagedObjectContext:", v35, *(_QWORD *)(a3 + 16));

    v37 = type metadata accessor for StoredProofingSession(0);
    v102 = v36;
    v90 = swift_dynamicCastClassUnconditional(v36, v37, 0, 0, 0);
    v39 = a10[3];
    v38 = a10[4];
    sub_10000806C(a10, a10[3]);
    v88 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v38 + 8) + 8))(v39);
    v89 = v40;
    Date.init()(v88);
    v41 = type metadata accessor for Date(0);
    v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56);
    v42(v32, 0, 1, v41);
    v43 = v109;
    v82 = *(_QWORD *)(*(_QWORD *)(v109 + 120)
                    + OBJC_IVAR____TtC8coreidvd35IdentityProofingFetchedAssetManager_cloudKitUploadsMaxRetryCount);
    v44 = *(_QWORD *)(v109 + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_idType + 8);
    v86 = *(_QWORD *)(v109 + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_idType);
    v46 = a10[3];
    v45 = a10[4];
    sub_10000806C(a10, a10[3]);
    v47 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v45 + 72);
    v87 = v44;
    v48 = swift_bridgeObjectRetain(v44);
    v49 = v47(v46, v45, v48);
    if ((v50 & 1) != 0)
      v51 = 0;
    else
      v51 = v49;
    v52 = a10[3];
    v53 = a10[4];
    sub_10000806C(a10, v52);
    v54 = (*(uint64_t (**)(uint64_t, uint64_t))(v53 + 128))(v52, v53);
    if ((v55 & 1) != 0)
      v56 = 2;
    else
      v56 = v54;
    v42(v110, 1, 1, v41);
    v57 = *(void **)(v43 + 16);
    v85 = v32;
    v58 = v56;
    v59 = v51;
    if (v57)
    {
      v60 = v57;
      v61 = IdentityProofingConfiguration.productIdentifier.getter();
      v63 = v62;

      v64 = *(void **)(v109 + 16);
      if (v64)
      {
        v65 = v64;
        v66 = IdentityProofingConfiguration.supplementalProvisioningData.getter();
        v68 = v67;

LABEL_13:
        v69 = v84;
        v70 = v83;
        v71 = v82;
        v72 = IdentityProofingActionStatus.rawValue.getter(3);
        v80 = v61;
        v79 = v58;
        v78 = v59;
        v77 = v71;
        v73 = (uint64_t)v110;
        v74 = v87;
        v75 = (uint64_t)v85;
        v76 = v89;
        StoredProofingSession.update(_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:cloudKitUploadsMaxRetryCount:idType:learnMoreURLString:shouldScheduleUploads:connectToWifiReminderInDays:shouldShowNotificationOnWatch:canUploadOnExpensiveNetwork:totalUploadAssetsFileSizeInBytes:provisioningRetryTimeout:provisioningAttemptDate:didNotifyOnUploadsCompletion:hasUserConsentToShareBiomeData:productIdentifier:didAttemptComboProofing:supplementalProvisioningData:)(v70, v105, v106, v107, v69, v101, v104, v88, v89, v96, v97, v98, v99, v100, (uint64_t)v85, 0, 0, 0, 0,
          0,
          0,
          v72,
          0,
          0,
          0,
          0,
          0,
          v77,
          v86,
          v87,
          v94,
          v95,
          v93 & 1,
          v78,
          0,
          0,
          0,
          v92,
          v79,
          (uint64_t)v110,
          0,
          0,
          v80,
          v63,
          v91 & 1,
          v66,
          v68);
        sub_100007F78(v66, v68);
        swift_bridgeObjectRelease(v76);
        swift_bridgeObjectRelease(v74);
        swift_bridgeObjectRelease(v63);
        sub_100008030(v73, &qword_100633990);
        sub_100008030(v75, &qword_100633990);
        sub_1000D6288();

        return;
      }
    }
    else
    {
      v63 = 0;
      v61 = 0;
    }
    v66 = 0;
    v68 = 0xF000000000000000;
    goto LABEL_13;
  }
}

void sub_1001F21A4(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  void *v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  _BYTE v32[24];
  _BYTE v33[24];

  v12 = sub_100004828(&qword_100633990);
  v13 = __chkstk_darwin(v12);
  v15 = &v32[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  v17 = &v32[-v16];
  v18 = swift_projectBox(a5);
  if ((a1 & 1) != 0)
  {
    sub_1000D7010(a3, a4, 1);
    if (!v6)
    {
      v20 = v24;
      if (v24)
      {
        v25 = objc_msgSend(v24, "createdAt");
        if (v25)
        {
          v26 = v25;
          static Date._unconditionallyBridgeFromObjectiveC(_:)(v25);

          v27 = type metadata accessor for Date(0);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v17, 0, 1, v27);
        }
        else
        {
          v28 = type metadata accessor for Date(0);
          (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v17, 1, 1, v28);
        }
        swift_beginAccess(v18, v33, 1, 0);
        v29 = (uint64_t)v17;
        goto LABEL_15;
      }
    }
  }
  else if ((a1 & 2) != 0)
  {
    sub_1000D7010(a3, a4, 2);
    if (!v6)
    {
      v20 = v19;
      if (v19)
      {
        v21 = objc_msgSend(v19, "createdAt");
        if (v21)
        {
          v22 = v21;
          static Date._unconditionallyBridgeFromObjectiveC(_:)(v21);

          v23 = type metadata accessor for Date(0);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v15, 0, 1, v23);
        }
        else
        {
          v30 = type metadata accessor for Date(0);
          (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v15, 1, 1, v30);
        }
        swift_beginAccess(v18, v33, 1, 0);
        v29 = (uint64_t)v15;
LABEL_15:
        sub_100184E1C(v29, v18, &qword_100633990);
        v31 = objc_msgSend(v20, "manualCheckInterval");

        swift_beginAccess(a6 + 16, v32, 1, 0);
        *(_QWORD *)(a6 + 16) = v31;
        *(_BYTE *)(a6 + 24) = 0;
      }
    }
  }
}

uint64_t sub_1001F240C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  void (*v9)(char *, _QWORD, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  _OWORD v29[2];
  _QWORD v30[3];
  __int128 v31;
  void *v32;
  __int128 v33;
  void *v34;
  uint64_t v35;

  v2 = v1;
  v4 = type metadata accessor for DIPError.PropertyKey(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10011D314((uint64_t)_swiftEmptyArrayStorage);
  v9 = *(void (**)(char *, _QWORD, uint64_t))(v5 + 104);
  v9(v7, enum case for DIPError.PropertyKey.inoProviderID(_:), v4);
  v34 = &type metadata for String;
  *(_QWORD *)&v33 = 0x61746E6567616DLL;
  *((_QWORD *)&v33 + 1) = 0xE700000000000000;
  sub_10000491C(&v33, &v31);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v8);
  *(_QWORD *)&v29[0] = v8;
  sub_1004811C4(&v31, (uint64_t)v7, isUniquelyReferenced_nonNull_native);
  v11 = *(_QWORD *)&v29[0];
  swift_bridgeObjectRelease(0x8000000000000000);
  v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v7, v4);
  sub_100038B24(a1, (uint64_t)&v31, &qword_1006384C8);
  if (v32)
  {
    sub_100008018(&v31, (uint64_t)&v33);
    v9(v7, enum case for DIPError.PropertyKey.inoWorkflowID(_:), v4);
    v14 = v34;
    v13 = v35;
    sub_10000806C(&v33, (uint64_t)v34);
    v15 = (*(uint64_t (**)(void *))(*(_QWORD *)(v13 + 8) + 8))(v14);
    v32 = &type metadata for String;
    *(_QWORD *)&v31 = v15;
    *((_QWORD *)&v31 + 1) = v16;
    sub_10000491C(&v31, v29);
    v17 = swift_isUniquelyReferenced_nonNull_native(v11);
    v30[0] = v11;
    sub_1004811C4(v29, (uint64_t)v7, v17);
    v11 = v30[0];
  }
  else
  {
    sub_100008030((uint64_t)&v31, &qword_1006384C8);
    v18 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_workflowId + 8);
    if (v18)
    {
      v19 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_workflowId);
      v9(v7, enum case for DIPError.PropertyKey.inoWorkflowID(_:), v4);
      v34 = &type metadata for String;
      *(_QWORD *)&v33 = v19;
      *((_QWORD *)&v33 + 1) = v18;
      sub_10000491C(&v33, &v31);
      swift_bridgeObjectRetain(v18);
      v20 = swift_isUniquelyReferenced_nonNull_native(v11);
      *(_QWORD *)&v29[0] = v11;
      sub_1004811C4(&v31, (uint64_t)v7, v20);
      v11 = *(_QWORD *)&v29[0];
      swift_bridgeObjectRelease(0x8000000000000000);
      v12(v7, v4);
      return v11;
    }
    v22 = *(_QWORD *)(v2 + 120) + 136;
    swift_beginAccess(v22, v30, 0, 0);
    sub_100038B24(v22, (uint64_t)&v31, &qword_1006384C8);
    if (!v32)
    {
      sub_100008030((uint64_t)&v31, &qword_1006384C8);
      return v11;
    }
    sub_100008018(&v31, (uint64_t)&v33);
    v9(v7, enum case for DIPError.PropertyKey.inoWorkflowID(_:), v4);
    v24 = v34;
    v23 = v35;
    sub_10000806C(&v33, (uint64_t)v34);
    v25 = (*(uint64_t (**)(void *))(*(_QWORD *)(v23 + 8) + 8))(v24);
    v32 = &type metadata for String;
    *(_QWORD *)&v31 = v25;
    *((_QWORD *)&v31 + 1) = v26;
    sub_10000491C(&v31, v29);
    v27 = swift_isUniquelyReferenced_nonNull_native(v11);
    v28 = v11;
    sub_1004811C4(v29, (uint64_t)v7, v27);
    v11 = v28;
  }
  swift_bridgeObjectRelease(0x8000000000000000);
  v12(v7, v4);
  _s8coreidvd24DigitalPresentmentHelperVwxx_0(&v33);
  return v11;
}

uint64_t sub_1001F2748(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v2 + 16) = v1;
  *(_BYTE *)(v2 + 136) = a1;
  v3 = type metadata accessor for Logger(0);
  *(_QWORD *)(v2 + 24) = v3;
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 32) = v4;
  *(_QWORD *)(v2 + 40) = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for IdentityProofingAttributeConfiguration(0);
  *(_QWORD *)(v2 + 48) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v2 + 56) = v6;
  *(_QWORD *)(v2 + 64) = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IdentityProofingStaticWorkflow(0);
  *(_QWORD *)(v2 + 72) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001F27F4, 0, 0);
}

uint64_t sub_1001F27F4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0[2] + 120);
  v0[10] = v1;
  v2 = dword_100640F34;
  swift_retain(v1);
  v3 = (_QWORD *)swift_task_alloc(v2);
  v0[11] = v3;
  *v3 = v0;
  v3[1] = sub_1001F285C;
  return sub_100430D0C(v0[9]);
}

uint64_t sub_1001F285C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 88);
  *(_QWORD *)(*v1 + 96) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1001F2DC0;
  }
  else
  {
    swift_release(*(_QWORD *)(v2 + 80));
    v4 = sub_1001F28C8;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1001F28C8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[9];
  v2 = *(_QWORD *)(v0[2] + 40);
  v0[13] = v2;
  v3 = *(_QWORD *)(v1 + 64);
  v0[14] = v3;
  v4 = dword_100634C0C;
  swift_retain(v2);
  swift_bridgeObjectRetain(v3);
  v5 = (_QWORD *)swift_task_alloc(v4);
  v0[15] = v5;
  *v5 = v0;
  v5[1] = sub_1001F2950;
  return sub_1000FE8D8(v0[8], v3);
}

uint64_t sub_1001F2950()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 120);
  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1001F2D50;
  else
    v3 = sub_1001F29B4;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001F29B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  int v36;
  int v37;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 48);
  v7 = type metadata accessor for JSONEncoder(0);
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  v8 = JSONEncoder.init()();
  v9 = sub_100004790(&qword_100632C00, (uint64_t (*)(uint64_t))&type metadata accessor for IdentityProofingAttributeConfiguration, (uint64_t)&protocol conformance descriptor for IdentityProofingAttributeConfiguration);
  v10 = dispatch thunk of JSONEncoder.encode<A>(_:)(v4, v6, v9);
  v12 = v11;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_release(v8);
  swift_bridgeObjectRelease(v3);
  v13 = swift_release(v2);
  if (v1)
  {
    sub_100035DAC(*(_QWORD *)(v0 + 72), type metadata accessor for IdentityProofingStaticWorkflow);
    v14 = *(_QWORD *)(v0 + 64);
    v15 = *(_QWORD *)(v0 + 40);
    swift_task_dealloc(*(_QWORD *)(v0 + 72));
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    if ((*(_BYTE *)(v0 + 136) & 1) != 0)
    {
      v17 = defaultLogger()(v13);
      v18 = Logger.logObject.getter(v17);
      v19 = static os_log_type_t.debug.getter(v18);
      if (os_log_type_enabled(v18, v19))
      {
        v20 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v20 = 0;
        _os_log_impl((void *)&_mh_execute_header, v18, v19, "User has opted to wait for wifi. Show Waiting for Wifi UI", v20, 2u);
        swift_slowDealloc(v20, -1, -1);
      }
      v22 = *(_QWORD *)(v0 + 32);
      v21 = *(_QWORD *)(v0 + 40);
      v23 = *(_QWORD *)(v0 + 24);

      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
      v24 = sub_100004828(&qword_100640C30);
      v25 = swift_allocObject(v24, 40, 7);
      *(_OWORD *)(v25 + 16) = xmmword_100523860;
      v26 = objc_allocWithZone((Class)type metadata accessor for IdentityProofingUIConfig(0));
      v27 = IdentityProofingUIConfig.init(view:title:subTitle:url:primaryButtonTitle:secondaryButtonTitle:tertiaryButtonTitle:messages:fields:caption:minLength:maxLength:placeholder:displayName:imageAssetsData:options:isUIEnabled:)(0x46676E6974696177, 0xEE0069666957726FLL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              1,
              0,
              1,
              0,
              0,
              0,
              0,
              0,
              0,
              1);
    }
    else
    {
      v28 = sub_100004828(&qword_100640C30);
      v25 = swift_allocObject(v28, 40, 7);
      *(_OWORD *)(v25 + 16) = xmmword_100523860;
      v29 = objc_allocWithZone((Class)type metadata accessor for IdentityProofingUIConfig(0));
      v27 = IdentityProofingUIConfig.init(view:title:subTitle:url:primaryButtonTitle:secondaryButtonTitle:tertiaryButtonTitle:messages:fields:caption:minLength:maxLength:placeholder:displayName:imageAssetsData:options:isUIEnabled:)(0x676E69646E6570, 0xE700000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              1,
              0,
              1,
              0,
              0,
              0,
              0,
              0,
              0,
              1);
    }
    *(_QWORD *)(v25 + 32) = v27;
    specialized Array._endMutation()(v27);
    v30 = v25;
    v32 = *(_QWORD *)(v0 + 64);
    v31 = *(_QWORD *)(v0 + 72);
    v33 = *(_QWORD *)(v0 + 40);
    v34 = objc_allocWithZone((Class)type metadata accessor for IdentityProofingDisplayInfo(0));
    LOBYTE(v37) = 2;
    LOBYTE(v36) = 1;
    v35 = IdentityProofingDisplayInfo.init(proofingUI:docScan:attributeConfig:learnMoreURL:waitingForWiFiAlertDataThresholdInBytes:lowDataModeAlertDataThresholdInBytes:idType:featureEnablementConfig:supportedRegions:livenessStepUpConfig:livenessStepUpIQSettings:shouldPreFetchLivenessConfig:)(v30, 0, v10, v12, 0, 0, 0, 1, 0, v36, 0, 0, 0, _swiftEmptyArrayStorage, 0, 0, v37);
    sub_100035DAC(v31, type metadata accessor for IdentityProofingStaticWorkflow);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v35);
  }
}

uint64_t sub_1001F2D50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 104);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 112));
  swift_release(v1);
  sub_100035DAC(*(_QWORD *)(v0 + 72), type metadata accessor for IdentityProofingStaticWorkflow);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 72));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001F2DC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 80));
  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 72));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1001F2E18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  _QWORD *v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v35[24];
  _BYTE v36[24];
  _BYTE v37[24];
  uint64_t v38;

  v38 = a5;
  v9 = type metadata accessor for DIPError.Code(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v35[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  swift_beginAccess(a4 + 16, v37, 0, 0);
  if (*(_QWORD *)(a4 + 16) == 2)
    v13 = 2;
  else
    v13 = 1;
  sub_1000D6B28(a2, a3, v13);
  if (!v5)
  {
    v15 = v14;
    v16 = (_QWORD *)(a4 + 16);
    v17 = v38;
    if (v14)
    {
      v18 = objc_msgSend(v14, "proofingSessionID");
      if (v18)
      {
        v19 = v18;
        v20 = v17;
        v21 = v17 + 16;
        v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
        v24 = v23;

        LOBYTE(v19) = objc_msgSend(v15, "didAttemptComboProofing");
        if ((v19 & 1) == 0)
        {
          swift_beginAccess(v16, v36, 1, 0);
          *v16 = 1;
        }
        swift_beginAccess(v21, v35, 1, 0);
        v25 = *(_QWORD *)(v20 + 24);
        *(_QWORD *)(v20 + 16) = v22;
        *(_QWORD *)(v20 + 24) = v24;
        swift_bridgeObjectRelease(v25);
      }
      else
      {
        (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for DIPError.Code.proofingSessionIDUnavailable(_:), v9);
        v30 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
        v31 = type metadata accessor for DIPError(0);
        v32 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
        swift_allocError(v31, v32, 0, 0);
        v33 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000005CLL, 0x8000000100554010, 0, v12, 0, v30, 0xD00000000000007CLL, 0x80000001005535D0, 0xD000000000000028, 0x8000000100553F80, 1349);
        swift_willThrow(v33);

      }
    }
    else
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for DIPError.Code.proofingSessionDoesntExist(_:), v9);
      v26 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
      v27 = type metadata accessor for DIPError(0);
      v28 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
      swift_allocError(v27, v28, 0, 0);
      v29 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000005CLL, 0x8000000100553FB0, 0, v12, 0, v26, 0xD00000000000007CLL, 0x80000001005535D0, 0xD000000000000028, 0x8000000100553F80, 1345);
      swift_willThrow(v29);
    }
  }
}

uint64_t sub_1001F3174()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 56));
  swift_release(*(_QWORD *)(v0 + 64));
  swift_release(*(_QWORD *)(v0 + 72));
  swift_release(*(_QWORD *)(v0 + 80));
  swift_release(*(_QWORD *)(v0 + 88));
  swift_release(*(_QWORD *)(v0 + 96));
  swift_release(*(_QWORD *)(v0 + 104));

  swift_release(*(_QWORD *)(v0 + 120));
  swift_release(*(_QWORD *)(v0 + 128));
  swift_release(*(_QWORD *)(v0 + 136));
  swift_release(*(_QWORD *)(v0 + 144));
  sub_100008030(v0 + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_pdf417Data, &qword_1006385A8);

  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_biomeManager));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_phoneCredentialIdentifier
                                      + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_workflowId + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_idType + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_proofingSessionId
                                      + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_watchCredentialIdentifier
                                      + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_termsAndConditions
                                      + 8));
  swift_errorRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_comboProofingWatchFailure));
  return v0;
}

uint64_t sub_1001F32D0()
{
  uint64_t v0;

  sub_1001F3174();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1001F32F4()
{
  return type metadata accessor for IdentityProofingRequestManager(0);
}

uint64_t type metadata accessor for IdentityProofingRequestManager(uint64_t a1)
{
  uint64_t result;

  result = qword_100638030;
  if (!qword_100638030)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for IdentityProofingRequestManager);
  return result;
}

void sub_1001F3338(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[28];

  v4[0] = "\b";
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = "\b";
  v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[5] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[6] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[7] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[8] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[9] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[10] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[11] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[12] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[13] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[14] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[15] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[16] = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_1001F3418(319);
  if (v3 <= 0x3F)
  {
    v4[17] = *(_QWORD *)(v2 - 8) + 64;
    v4[18] = "\b";
    v4[19] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[20] = &unk_100525D28;
    v4[21] = &unk_100525D28;
    v4[22] = &unk_100525D40;
    v4[23] = &unk_100525D28;
    v4[24] = &unk_100525D28;
    v4[25] = &unk_100525D58;
    v4[26] = &unk_100525D28;
    v4[27] = "\b";
    swift_updateClassMetadata2(a1, 256, 28, v4, a1 + 80);
  }
}

void sub_1001F3418(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100638058)
  {
    v2 = type metadata accessor for PDF417Data(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100638058);
  }
}

uint64_t sub_1001F346C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v3[41] = a2;
  v3[42] = v2;
  v3[40] = a1;
  v4 = type metadata accessor for DIPError.Code(0);
  v3[43] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[44] = v5;
  v3[45] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  v3[46] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[47] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[48] = swift_task_alloc(v8);
  v3[49] = swift_task_alloc(v8);
  return swift_task_switch(sub_1001F3508, 0, 0);
}

uint64_t sub_1001F3508(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  _QWORD *v38;
  void *v39;
  id v40;
  NSString v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v2 = defaultLogger()(a1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.debug.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v45 = v1[47];
    v46 = v1[46];
    v47 = v1[49];
    v5 = v1[40];
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v48 = v7;
    *(_DWORD *)v6 = 136446210;
    v8 = IdentityTarget.debugDescription.getter(v5);
    v10 = v9;
    v1[39] = sub_1000E3AC8(v8, v9, &v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 39, v1 + 40, v6 + 4);
    swift_bridgeObjectRelease(v10);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "createCredentialIdentifier called for %{public}s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

    v11 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
    v11(v47, v46);
  }
  else
  {
    v12 = v1[49];
    v13 = v1[46];
    v14 = v1[47];

    v11 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v11(v12, v13);
  }
  v1[50] = v11;
  v15 = v1[42];
  v16 = objc_msgSend(objc_allocWithZone((Class)DCCredentialOptions), "init");
  v17 = v16;
  v1[51] = v16;
  v18 = *(_QWORD *)(v15 + 16);
  if (v18)
  {
    v19 = v1 + 10;
    v20 = v1 + 31;
    v21 = v18 + 136;
    swift_beginAccess(v18 + 136, v1 + 28, 0, 0);
    sub_100038B24(v21, (uint64_t)(v1 + 20), &qword_1006384C8);
    v22 = v1[23];
    if (v22)
    {
      v23 = v1[24];
      v24 = sub_10000806C(v1 + 20, v1[23]);
      v25 = *(_QWORD *)(v22 - 8);
      v26 = swift_task_alloc((*(_QWORD *)(v25 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v25 + 16))(v26, v24, v22);
      sub_100008030((uint64_t)(v1 + 20), &qword_1006384C8);
      v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 88))(v22, v23);
      LOBYTE(v23) = v28;
      v29 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
      v20 = v1 + 31;
      v19 = v1 + 10;
      v29(v26, v22);
      swift_task_dealloc(v26);
      if ((v23 & 1) != 0)
        v30 = 60;
      else
        v30 = v27;
    }
    else
    {
      sub_100008030((uint64_t)(v1 + 20), &qword_1006384C8);
      v30 = 60;
    }
    objc_msgSend(v17, "setDeleteInactiveKeysAfterDays:", v30);
    swift_beginAccess(v21, v20, 0, 0);
    sub_100038B24(v21, (uint64_t)v19, &qword_1006384C8);
    v31 = v1[13];
    if (v31)
    {
      v32 = v1[14];
      v33 = sub_10000806C(v19, v1[13]);
      v34 = *(_QWORD *)(v31 - 8);
      v35 = swift_task_alloc((*(_QWORD *)(v34 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v34 + 16))(v35, v33, v31);
      sub_100008030((uint64_t)v19, &qword_1006384C8);
      v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 80))(v31, v32);
      LOBYTE(v33) = v37;
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v35, v31);
      swift_task_dealloc(v35);
      if ((v33 & 1) == 0)
        goto LABEL_16;
    }
    else
    {
      sub_100008030((uint64_t)v19, &qword_1006384C8);
    }
  }
  else
  {
    objc_msgSend(v16, "setDeleteInactiveKeysAfterDays:", 60);
  }
  v36 = 60;
LABEL_16:
  v38 = v1 + 2;
  v39 = (void *)v1[41];
  objc_msgSend(v17, "setDeleteIncompleteCredentialAfterDays:", v36);
  objc_msgSend(v17, "setReaderAuthenticationPolicy:", 1);
  objc_msgSend(v17, "setPresentmentAuthPolicy:", 2);
  objc_msgSend(v17, "setPayloadProtectionPolicy:", 1);
  v40 = v17;
  v41 = String._bridgeToObjectiveC()();
  v1[52] = v41;
  v1[7] = v1 + 34;
  v1[2] = v1;
  v1[3] = sub_1001F399C;
  v42 = swift_continuation_init(v1 + 2, 1);
  v1[15] = _NSConcreteStackBlock;
  v43 = v1 + 15;
  v43[1] = 0x40000000;
  v43[2] = sub_1003A4D14;
  v43[3] = &unk_10060B248;
  v43[4] = v42;
  objc_msgSend(v39, "createCredentialInPartition:options:completion:", v41, v40, v43);
  return swift_continuation_await(v38);
}

uint64_t sub_1001F399C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  v2[53] = v3;
  v4 = (void *)v2[52];
  if (v3)
  {
    swift_willThrow(a1);

    v5 = sub_1001F3D8C;
  }
  else
  {
    v6 = (void *)v2[51];
    v7 = v2[35];
    v2[54] = v2[34];
    v2[55] = v7;

    v5 = sub_1001F3A24;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1001F3A24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  Swift::String v24;
  Swift::String v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  Swift::String v35;
  Swift::String v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  unint64_t v47;

  v2 = *(_QWORD *)(v1 + 440);
  defaultLogger()(a1);
  v3 = swift_bridgeObjectRetain_n(v2, 2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.debug.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(_QWORD *)(v1 + 432);
    v7 = *(_QWORD *)(v1 + 440);
    v44 = *(_QWORD *)(v1 + 384);
    v45 = *(void (**)(uint64_t, uint64_t))(v1 + 400);
    v43 = *(_QWORD *)(v1 + 368);
    v8 = *(_QWORD *)(v1 + 320);
    v9 = swift_slowAlloc(22, -1);
    v10 = swift_slowAlloc(64, -1);
    v46 = v10;
    *(_DWORD *)v9 = 136315394;
    swift_bridgeObjectRetain(v7);
    *(_QWORD *)(v1 + 296) = sub_1000E3AC8(v6, v7, &v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 296, v1 + 304, v9 + 4);
    swift_bridgeObjectRelease_n(v7, 3);
    *(_WORD *)(v9 + 12) = 2082;
    v11 = IdentityTarget.debugDescription.getter(v8);
    v13 = v12;
    *(_QWORD *)(v1 + 288) = sub_1000E3AC8(v11, v12, &v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 288, v1 + 296, v9 + 14);
    swift_bridgeObjectRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Successfully generated credential identifier : %s for %{public}s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy(v10, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

    v45(v44, v43);
  }
  else
  {
    v14 = *(void (**)(uint64_t, uint64_t))(v1 + 400);
    v15 = *(_QWORD *)(v1 + 384);
    v16 = *(_QWORD *)(v1 + 368);
    swift_bridgeObjectRelease_n(*(_QWORD *)(v1 + 440), 2);

    v14(v15, v16);
  }
  v17 = *(_QWORD *)(v1 + 320);
  if (v17 == 2)
  {
    v30 = *(_QWORD *)(v1 + 432);
    v29 = *(void **)(v1 + 440);
    v46 = 0;
    v47 = 0xE000000000000000;
    _StringGuts.grow(_:)(28);
    v31 = v47;
    v32 = IdentityTarget.debugDescription.getter(2);
    v34 = v33;
    swift_bridgeObjectRelease(v31);
    v46 = v32;
    v47 = v34;
    v35._object = (void *)0x8000000100554320;
    v35._countAndFlagsBits = 0xD000000000000018;
    String.append(_:)(v35);
    swift_bridgeObjectRetain(v29);
    v36._countAndFlagsBits = v30;
    v36._object = v29;
    String.append(_:)(v36);
    swift_bridgeObjectRelease(v29);
    v26 = v46;
    v27 = v47;
    v28 = 0x3239343564643663;
    goto LABEL_8;
  }
  if (v17 == 1)
  {
    v19 = *(_QWORD *)(v1 + 432);
    v18 = *(void **)(v1 + 440);
    v46 = 0;
    v47 = 0xE000000000000000;
    _StringGuts.grow(_:)(28);
    v20 = v47;
    v21 = IdentityTarget.debugDescription.getter(1);
    v23 = v22;
    swift_bridgeObjectRelease(v20);
    v46 = v21;
    v47 = v23;
    v24._object = (void *)0x8000000100554320;
    v24._countAndFlagsBits = 0xD000000000000018;
    String.append(_:)(v24);
    swift_bridgeObjectRetain(v18);
    v25._countAndFlagsBits = v19;
    v25._object = v18;
    String.append(_:)(v25);
    swift_bridgeObjectRelease(v18);
    v26 = v46;
    v27 = v47;
    v28 = 0x3964373436373838;
LABEL_8:
    v37 = 0xE800000000000000;
    v38 = v27;
    logMilestone(tag:description:)(*(Swift::String *)&v28, *(Swift::String *)&v26);
    swift_bridgeObjectRelease(v27);
  }
  v39 = *(_QWORD *)(v1 + 384);
  v40 = *(_QWORD *)(v1 + 392);
  v41 = *(_QWORD *)(v1 + 360);

  swift_task_dealloc(v40);
  swift_task_dealloc(v39);
  swift_task_dealloc(v41);
  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 8))(*(_QWORD *)(v1 + 432), *(_QWORD *)(v1 + 440));
}

uint64_t sub_1001F3D8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;
  Swift::String v6;
  void *object;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void (*v16)(uint64_t, _QWORD, uint64_t);
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 424);
  v17 = v1;
  v18 = *(void **)(v0 + 408);
  v19 = *(_QWORD *)(v0 + 392);
  v20 = *(_QWORD *)(v0 + 384);
  v2 = *(_QWORD *)(v0 + 352);
  v3 = *(_QWORD *)(v0 + 360);
  v4 = *(_QWORD *)(v0 + 344);

  _StringGuts.grow(_:)(59);
  v5._countAndFlagsBits = 0xD000000000000039;
  v5._object = (void *)0x80000001005542A0;
  String.append(_:)(v5);
  swift_getErrorValue(v1, v0 + 304, v0 + 200);
  v6._countAndFlagsBits = Error.localizedDescription.getter(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 216));
  object = v6._object;
  String.append(_:)(v6);
  swift_bridgeObjectRelease(object);
  v16 = *(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104);
  v16(v3, enum case for DIPError.Code.unableToGenerateCredentialIdentifier(_:), v4);
  v8 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
  v9 = type metadata accessor for DIPError(0);
  v10 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
  v11 = swift_allocError(v9, v10, 0, 0);
  v12 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, 0, v3, 0, v8, 0xD000000000000081, 0x80000001005541E0, 0xD000000000000030, 0x80000001005542E0, 46);
  swift_willThrow(v12);
  swift_errorRelease(v17);

  v16(v3, enum case for DIPError.Code.internalError(_:), v4);
  swift_errorRetain(v11);
  v13 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
  swift_allocError(v9, v10, 0, 0);
  v14 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, v11, v3, 0, v13, 0xD000000000000081, 0x80000001005541E0, 0xD000000000000030, 0x80000001005542E0, 62);
  swift_willThrow(v14);
  swift_errorRelease(v11);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001F401C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v3[26] = a2;
  v3[27] = v2;
  v3[25] = a1;
  v4 = type metadata accessor for DIPError.Code(0);
  v3[28] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[29] = v5;
  v3[30] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  v3[31] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[32] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[33] = swift_task_alloc(v8);
  v3[34] = swift_task_alloc(v8);
  return swift_task_switch(sub_1001F40B8, 0, 0);
}

uint64_t sub_1001F40B8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  id v41;
  uint64_t **v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v2 = defaultLogger()(a1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.debug.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = v1[32];
    v44 = v1[31];
    v45 = v1[34];
    v6 = v1[25];
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v46 = v8;
    *(_DWORD *)v7 = 136446210;
    v9 = IdentityTarget.debugDescription.getter(v6);
    v11 = v10;
    v1[24] = sub_1000E3AC8(v9, v10, &v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 24, v1 + 25, v7 + 4);
    swift_bridgeObjectRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "createCredentialIdentifier called for %{public}s", v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

    v12 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v12(v45, v44);
  }
  else
  {
    v13 = v1[34];
    v14 = v1[31];
    v15 = v1[32];

    v12 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    v12(v13, v14);
  }
  v1[35] = (uint64_t)v12;
  v16 = v1[27];
  v17 = objc_msgSend(objc_allocWithZone((Class)DCCredentialOptions), "init");
  v18 = v17;
  v1[36] = (uint64_t)v17;
  v19 = *(_QWORD *)(v16 + 16);
  if (v19)
  {
    v20 = v1 + 2;
    v21 = v1 + 18;
    v22 = v19 + 136;
    swift_beginAccess(v19 + 136, v1 + 15, 0, 0);
    sub_100038B24(v22, (uint64_t)(v1 + 7), &qword_1006384C8);
    v23 = v1[10];
    if (v23)
    {
      v24 = v1[11];
      v25 = sub_10000806C(v1 + 7, v1[10]);
      v26 = *(_QWORD *)(v23 - 8);
      v27 = swift_task_alloc((*(_QWORD *)(v26 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v26 + 16))(v27, v25, v23);
      sub_100008030((uint64_t)(v1 + 7), &qword_1006384C8);
      v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 88))(v23, v24);
      LOBYTE(v24) = v29;
      v30 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
      v21 = v1 + 18;
      v20 = v1 + 2;
      v30(v27, v23);
      swift_task_dealloc(v27);
      if ((v24 & 1) != 0)
        v31 = 60;
      else
        v31 = v28;
    }
    else
    {
      sub_100008030((uint64_t)(v1 + 7), &qword_1006384C8);
      v31 = 60;
    }
    objc_msgSend(v18, "setDeleteInactiveKeysAfterDays:", v31, v44);
    swift_beginAccess(v22, v21, 0, 0);
    sub_100038B24(v22, (uint64_t)v20, &qword_1006384C8);
    v32 = v1[5];
    if (v32)
    {
      v33 = v1[6];
      v34 = sub_10000806C(v20, v1[5]);
      v35 = *(_QWORD *)(v32 - 8);
      v36 = swift_task_alloc((*(_QWORD *)(v35 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v35 + 16))(v36, v34, v32);
      sub_100008030((uint64_t)v20, &qword_1006384C8);
      v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 80))(v32, v33);
      v39 = v38;
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v32);
      swift_task_dealloc(v36);
      if ((v39 & 1) == 0)
        goto LABEL_16;
    }
    else
    {
      sub_100008030((uint64_t)v20, &qword_1006384C8);
    }
  }
  else
  {
    objc_msgSend(v17, "setDeleteInactiveKeysAfterDays:", 60);
  }
  v37 = 60;
LABEL_16:
  objc_msgSend(v18, "setDeleteIncompleteCredentialAfterDays:", v37, v44);
  objc_msgSend(v18, "setReaderAuthenticationPolicy:", 1);
  objc_msgSend(v18, "setPresentmentAuthPolicy:", 2);
  objc_msgSend(v18, "setPayloadProtectionPolicy:", 1);
  v40 = dword_10062FE5C;
  v41 = v18;
  v42 = (uint64_t **)swift_task_alloc(v40);
  v1[37] = (uint64_t)v42;
  *v42 = v1;
  v42[1] = (uint64_t *)sub_1001F44E4;
  return sub_10001A9F4(0x797469746E656469, 0xE800000000000000, (uint64_t)v18);
}

uint64_t sub_1001F44E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v4 = *v3;
  v5 = *(_QWORD *)(*v3 + 296);
  *(_QWORD *)(v4 + 304) = a1;
  *(_QWORD *)(v4 + 312) = a2;
  *(_QWORD *)(v4 + 320) = v2;
  swift_task_dealloc(v5);
  if (v2)
  {
    v6 = sub_1001F48C0;
  }
  else
  {

    v6 = sub_1001F455C;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_1001F455C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  Swift::String v25;
  Swift::String v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  Swift::String v36;
  Swift::String v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  unint64_t v47;

  v2 = *(_QWORD *)(v1 + 312);
  defaultLogger()(a1);
  v3 = swift_bridgeObjectRetain_n(v2, 2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.debug.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v7 = *(_QWORD *)(v1 + 304);
    v6 = *(_QWORD *)(v1 + 312);
    v44 = *(_QWORD *)(v1 + 264);
    v45 = *(void (**)(uint64_t, uint64_t))(v1 + 280);
    v8 = *(_QWORD *)(v1 + 248);
    v9 = *(_QWORD *)(v1 + 200);
    v10 = swift_slowAlloc(22, -1);
    v11 = swift_slowAlloc(64, -1);
    v46 = v11;
    *(_DWORD *)v10 = 136315394;
    swift_bridgeObjectRetain(v6);
    *(_QWORD *)(v1 + 184) = sub_1000E3AC8(v7, v6, &v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 184, v1 + 192, v10 + 4);
    swift_bridgeObjectRelease_n(v6, 3);
    *(_WORD *)(v10 + 12) = 2082;
    v12 = IdentityTarget.debugDescription.getter(v9);
    v14 = v13;
    *(_QWORD *)(v1 + 176) = sub_1000E3AC8(v12, v13, &v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 176, v1 + 184, v10 + 14);
    swift_bridgeObjectRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Successfully generated credential identifier : %s for %{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy(v11, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    v45(v44, v8);
  }
  else
  {
    v15 = *(void (**)(uint64_t, uint64_t))(v1 + 280);
    v16 = *(_QWORD *)(v1 + 264);
    v17 = *(_QWORD *)(v1 + 248);
    swift_bridgeObjectRelease_n(*(_QWORD *)(v1 + 312), 2);

    v15(v16, v17);
  }
  v18 = *(_QWORD *)(v1 + 200);
  if (v18 == 2)
  {
    v31 = *(_QWORD *)(v1 + 304);
    v30 = *(void **)(v1 + 312);
    v46 = 0;
    v47 = 0xE000000000000000;
    _StringGuts.grow(_:)(28);
    v32 = v47;
    v33 = IdentityTarget.debugDescription.getter(2);
    v35 = v34;
    swift_bridgeObjectRelease(v32);
    v46 = v33;
    v47 = v35;
    v36._object = (void *)0x8000000100554320;
    v36._countAndFlagsBits = 0xD000000000000018;
    String.append(_:)(v36);
    swift_bridgeObjectRetain(v30);
    v37._countAndFlagsBits = v31;
    v37._object = v30;
    String.append(_:)(v37);
    swift_bridgeObjectRelease(v30);
    v27 = v46;
    v28 = v47;
    v29 = 0x3239343564643663;
    goto LABEL_8;
  }
  if (v18 == 1)
  {
    v20 = *(_QWORD *)(v1 + 304);
    v19 = *(void **)(v1 + 312);
    v46 = 0;
    v47 = 0xE000000000000000;
    _StringGuts.grow(_:)(28);
    v21 = v47;
    v22 = IdentityTarget.debugDescription.getter(1);
    v24 = v23;
    swift_bridgeObjectRelease(v21);
    v46 = v22;
    v47 = v24;
    v25._object = (void *)0x8000000100554320;
    v25._countAndFlagsBits = 0xD000000000000018;
    String.append(_:)(v25);
    swift_bridgeObjectRetain(v19);
    v26._countAndFlagsBits = v20;
    v26._object = v19;
    String.append(_:)(v26);
    swift_bridgeObjectRelease(v19);
    v27 = v46;
    v28 = v47;
    v29 = 0x3964373436373838;
LABEL_8:
    v38 = 0xE800000000000000;
    v39 = v28;
    logMilestone(tag:description:)(*(Swift::String *)&v29, *(Swift::String *)&v27);
    swift_bridgeObjectRelease(v28);
  }
  v40 = *(_QWORD *)(v1 + 264);
  v41 = *(_QWORD *)(v1 + 272);
  v42 = *(_QWORD *)(v1 + 240);

  swift_task_dealloc(v41);
  swift_task_dealloc(v40);
  swift_task_dealloc(v42);
  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 8))(*(_QWORD *)(v1 + 304), *(_QWORD *)(v1 + 312));
}

uint64_t sub_1001F48C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;
  Swift::String v6;
  void *object;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void (*v16)(uint64_t, _QWORD, uint64_t);
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 320);
  v17 = v1;
  v18 = *(void **)(v0 + 288);
  v19 = *(_QWORD *)(v0 + 272);
  v20 = *(_QWORD *)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 224);

  _StringGuts.grow(_:)(59);
  v5._countAndFlagsBits = 0xD000000000000039;
  v5._object = (void *)0x80000001005542A0;
  String.append(_:)(v5);
  swift_getErrorValue(v1, v0 + 168, v0 + 96);
  v6._countAndFlagsBits = Error.localizedDescription.getter(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
  object = v6._object;
  String.append(_:)(v6);
  swift_bridgeObjectRelease(object);
  v16 = *(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104);
  v16(v3, enum case for DIPError.Code.unableToGenerateCredentialIdentifier(_:), v4);
  v8 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
  v9 = type metadata accessor for DIPError(0);
  v10 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
  v11 = swift_allocError(v9, v10, 0, 0);
  v12 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, 0, v3, 0, v8, 0xD000000000000081, 0x80000001005541E0, 0xD000000000000030, 0x80000001005542E0, 46);
  swift_willThrow(v12);
  swift_errorRelease(v17);

  v16(v3, enum case for DIPError.Code.internalError(_:), v4);
  swift_errorRetain(v11);
  v13 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
  swift_allocError(v9, v10, 0, 0);
  v14 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, v11, v3, 0, v13, 0xD000000000000081, 0x80000001005541E0, 0xD000000000000030, 0x80000001005542E0, 62);
  swift_willThrow(v14);
  swift_errorRelease(v11);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001F4B50(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  _BOOL8 v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  _QWORD *v35;
  uint64_t *v36;
  _QWORD *v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[6];
  char v57[8];
  uint64_t v58;
  _QWORD *v59;

  v59 = a5;
  v7 = -1 << *(_BYTE *)(a1 + 32);
  v8 = ~v7;
  v9 = *(_QWORD *)(a1 + 64);
  v10 = -v7;
  v49 = a1;
  v50 = a1 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v51 = v8;
  v52 = 0;
  v53 = v11 & v9;
  v54 = a2;
  v55 = a3;
  swift_bridgeObjectRetain(a1);
  swift_retain(a3);
  sub_100279EBC(v56);
  sub_1000A1F54((uint64_t)v56, (uint64_t)&v43, &qword_1006386B0);
  sub_1000A1F54((uint64_t)v56, (uint64_t)v57, &qword_1006386B0);
  if (v58)
  {
    while (1)
    {
      v22 = v43;
      v21 = v44;
      v23 = v45;
      v42 = v46;
      v24 = v47;
      v25 = v48;
      v26 = (_QWORD *)*v59;
      v28 = sub_1004A8604(v43, v44);
      v29 = v26[2];
      v30 = (v27 & 1) == 0;
      v31 = v29 + v30;
      if (__OFADD__(v29, v30))
        break;
      v32 = v27;
      if (v26[3] >= v31)
      {
        if ((a4 & 1) == 0)
          sub_10012BB24();
      }
      else
      {
        sub_100127B08(v31, a4 & 1);
        v33 = sub_1004A8604(v22, v21);
        if ((v32 & 1) != (v34 & 1))
          goto LABEL_19;
        v28 = v33;
      }
      v35 = (_QWORD *)*v59;
      if ((v32 & 1) != 0)
      {
        v13 = 32 * v28;
        v14 = (uint64_t *)(v35[7] + v13);
        v16 = *v14;
        v15 = v14[1];
        v18 = v14[2];
        v17 = v14[3];
        swift_bridgeObjectRetain(v15);
        swift_bridgeObjectRetain(v17);
        swift_bridgeObjectRelease(v21);
        swift_bridgeObjectRelease(v25);
        swift_bridgeObjectRelease(v42);
        v19 = (_QWORD *)(v35[7] + v13);
        v20 = v19[1];
        swift_bridgeObjectRelease(v19[3]);
        swift_bridgeObjectRelease(v20);
        *v19 = v16;
        v19[1] = v15;
        v19[2] = v18;
        v19[3] = v17;
      }
      else
      {
        v35[(v28 >> 6) + 8] |= 1 << v28;
        v36 = (uint64_t *)(v35[6] + 16 * v28);
        *v36 = v22;
        v36[1] = v21;
        v37 = (_QWORD *)(v35[7] + 32 * v28);
        *v37 = v23;
        v37[1] = v42;
        v37[2] = v24;
        v37[3] = v25;
        v38 = v35[2];
        v39 = __OFADD__(v38, 1);
        v40 = v38 + 1;
        if (v39)
          goto LABEL_18;
        v35[2] = v40;
      }
      sub_100279EBC(v56);
      sub_1000A1F54((uint64_t)v56, (uint64_t)&v43, &qword_1006386B0);
      sub_1000A1F54((uint64_t)v56, (uint64_t)v57, &qword_1006386B0);
      a4 = 1;
      if (!v58)
        goto LABEL_5;
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
    __break(1u);
  }
  else
  {
LABEL_5:
    swift_release(a3);
    swift_bridgeObjectRelease(a1);
    sub_1000FBE78(v49);
    return swift_release(a3);
  }
  return result;
}

uint64_t sub_1001F4E00@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  v5 = a1[4];
  v6 = a1[5];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  a2[4] = v5;
  a2[5] = v6;
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v4);
  return swift_bridgeObjectRetain(v6);
}

uint64_t sub_1001F4E44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  id v12;
  Swift::String v13;
  Swift::Bool v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  NSObject *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void (*v33)(char *, uint64_t);
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  id v38;
  Swift::String v39;
  Swift::Bool v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  void *v45;
  NSObject *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  void (*v59)(char *, uint64_t);
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  id v64;
  Swift::String v65;
  Swift::Bool v66;
  char *v67;
  void *v68;
  uint64_t v69;
  char *v70;
  void (*v71)(char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  void *v74;
  NSObject *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(char *, uint64_t);
  void (*v89)(char *, uint64_t);
  uint64_t v90;
  uint64_t v91;
  char *v92;
  NSObject *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  id v102;
  uint64_t v103;
  _QWORD *v104;
  void **aBlock;
  uint64_t v106;
  uint64_t (*v107)(uint64_t);
  void *v108;
  void (*v109)();
  uint64_t v110;

  v101 = type metadata accessor for DispatchWorkItemFlags(0);
  v97 = *(_QWORD *)(v101 - 8);
  __chkstk_darwin(v101);
  v100 = (char *)&v86 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = type metadata accessor for DispatchQoS(0);
  v99 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin(v96);
  v98 = (char *)&v86 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for DispatchTime(0);
  v2 = *(_QWORD *)(v103 - 8);
  v3 = __chkstk_darwin(v103);
  v5 = (char *)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v95 = (char *)&v86 - v6;
  v7 = type metadata accessor for DispatchQoS.QoSClass(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v92 = (char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = dispatch_group_create();
  v11 = swift_allocObject(&unk_10060B270, 24, 7);
  *(_QWORD *)(v11 + 16) = 0;
  v91 = v11 + 16;
  v102 = (id)objc_opt_self(NSUserDefaults);
  v12 = objc_msgSend(v102, "standardUserDefaults");
  v13._object = (void *)0x8000000100554610;
  v13._countAndFlagsBits = 0xD000000000000032;
  v14 = NSUserDefaults.internalBool(forKey:)(v13);

  v93 = v10;
  v94 = v11;
  v90 = v8;
  if (v14)
  {
    dispatch_group_enter(v10);
    sub_10001CFF8(0, (unint64_t *)&qword_1006308C0, OS_dispatch_queue_ptr);
    v15 = v92;
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v92, enum case for DispatchQoS.QoSClass.default(_:), v7);
    v87 = static OS_dispatch_queue.global(qos:)(v15);
    v16 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v15, v7);
    static DispatchTime.now()(v16);
    v89 = (void (*)(char *, uint64_t))v7;
    v17 = v95;
    + infix(_:_:)(v5, 5.0);
    v88 = *(void (**)(char *, uint64_t))(v2 + 8);
    v88(v5, v103);
    v18 = swift_allocObject(&unk_10060B338, 32, 7);
    *(_QWORD *)(v18 + 16) = v11;
    *(_QWORD *)(v18 + 24) = v10;
    v109 = sub_1001FCA28;
    v110 = v18;
    aBlock = _NSConcreteStackBlock;
    v106 = 1107296256;
    v107 = sub_1004AB190;
    v108 = &unk_10060B350;
    v19 = _Block_copy(&aBlock);
    swift_retain(v11);
    v20 = v10;
    v21 = v98;
    static DispatchQoS.unspecified.getter(v20);
    v104 = _swiftEmptyArrayStorage;
    v22 = sub_100004790((unint64_t *)&unk_100632380, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v23 = sub_100004828((uint64_t *)&unk_1006308D0);
    v24 = sub_100107078();
    v25 = v5;
    v26 = v2;
    v27 = v100;
    v28 = v101;
    v29 = v22;
    v30 = v96;
    v31 = v97;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v104, v23, v24, v101, v29);
    v32 = (void *)v87;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v17, v21, v27, v19);
    _Block_release(v19);

    v33 = *(void (**)(char *, uint64_t))(v31 + 8);
    v8 = v90;
    v34 = v27;
    v2 = v26;
    v5 = v25;
    v35 = v28;
    v11 = v94;
    v33(v34, v35);
    v36 = v21;
    v10 = v93;
    (*(void (**)(char *, uint64_t))(v99 + 8))(v36, v30);
    v37 = v17;
    v7 = (uint64_t)v89;
    v88(v37, v103);
    swift_release(v110);
  }
  v38 = objc_msgSend(v102, "standardUserDefaults");
  v39._countAndFlagsBits = 0xD000000000000033;
  v39._object = (void *)0x8000000100554650;
  v40 = NSUserDefaults.internalBool(forKey:)(v39);

  if (v40)
  {
    dispatch_group_enter(v10);
    sub_10001CFF8(0, (unint64_t *)&qword_1006308C0, OS_dispatch_queue_ptr);
    v41 = v92;
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v92, enum case for DispatchQoS.QoSClass.default(_:), v7);
    v88 = (void (*)(char *, uint64_t))static OS_dispatch_queue.global(qos:)(v41);
    v42 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v41, v7);
    static DispatchTime.now()(v42);
    v43 = v95;
    + infix(_:_:)(v5, 25.0);
    v89 = *(void (**)(char *, uint64_t))(v2 + 8);
    v89(v5, v103);
    v44 = swift_allocObject(&unk_10060B2E8, 32, 7);
    *(_QWORD *)(v44 + 16) = v11;
    *(_QWORD *)(v44 + 24) = v10;
    v109 = sub_1001FC9E8;
    v110 = v44;
    aBlock = _NSConcreteStackBlock;
    v106 = 1107296256;
    v107 = sub_1004AB190;
    v108 = &unk_10060B300;
    v45 = _Block_copy(&aBlock);
    swift_retain(v11);
    v46 = v10;
    v47 = v98;
    static DispatchQoS.unspecified.getter(v46);
    v104 = _swiftEmptyArrayStorage;
    v48 = sub_100004790((unint64_t *)&unk_100632380, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v49 = sub_100004828((uint64_t *)&unk_1006308D0);
    v50 = sub_100107078();
    v87 = (uint64_t)v5;
    v51 = v2;
    v52 = v100;
    v53 = v101;
    v54 = v48;
    v55 = v7;
    v56 = v96;
    v57 = v97;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v104, v49, v50, v101, v54);
    v58 = v88;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v43, v47, v52, v45);
    _Block_release(v45);

    v59 = *(void (**)(char *, uint64_t))(v57 + 8);
    v8 = v90;
    v60 = v52;
    v2 = v51;
    v5 = (char *)v87;
    v61 = v53;
    v11 = v94;
    v59(v60, v61);
    v62 = v47;
    v10 = v93;
    v63 = v56;
    v7 = v55;
    (*(void (**)(char *, uint64_t))(v99 + 8))(v62, v63);
    v89(v43, v103);
    swift_release(v110);
  }
  v64 = objc_msgSend(v102, "standardUserDefaults");
  v65._countAndFlagsBits = 0xD000000000000049;
  v65._object = (void *)0x8000000100554690;
  v66 = NSUserDefaults.internalBool(forKey:)(v65);

  if (v66)
  {
    dispatch_group_enter(v10);
    sub_10001CFF8(0, (unint64_t *)&qword_1006308C0, OS_dispatch_queue_ptr);
    v67 = v92;
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v92, enum case for DispatchQoS.QoSClass.default(_:), v7);
    v68 = (void *)static OS_dispatch_queue.global(qos:)(v67);
    v69 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v67, v7);
    static DispatchTime.now()(v69);
    v70 = v95;
    + infix(_:_:)(v5, 5.0);
    v71 = *(void (**)(char *, uint64_t))(v2 + 8);
    v72 = v103;
    v71(v5, v103);
    v73 = swift_allocObject(&unk_10060B298, 32, 7);
    *(_QWORD *)(v73 + 16) = v11;
    *(_QWORD *)(v73 + 24) = v10;
    v109 = sub_1001FC990;
    v110 = v73;
    aBlock = _NSConcreteStackBlock;
    v106 = 1107296256;
    v107 = sub_1004AB190;
    v108 = &unk_10060B2B0;
    v74 = _Block_copy(&aBlock);
    swift_retain(v11);
    v75 = v10;
    v76 = v98;
    static DispatchQoS.unspecified.getter(v75);
    v104 = _swiftEmptyArrayStorage;
    v77 = sub_100004790((unint64_t *)&unk_100632380, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v78 = sub_100004828((uint64_t *)&unk_1006308D0);
    v79 = sub_100107078();
    v81 = v100;
    v80 = v101;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v104, v78, v79, v101, v77);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v70, v76, v81, v74);
    _Block_release(v74);

    v82 = v81;
    v11 = v94;
    (*(void (**)(char *, uint64_t))(v97 + 8))(v82, v80);
    v83 = v76;
    v10 = v93;
    (*(void (**)(char *, uint64_t))(v99 + 8))(v83, v96);
    v71(v70, v72);
    swift_release(v110);
  }
  OS_dispatch_group.wait()();

  swift_beginAccess(v91, &aBlock, 0, 0);
  v84 = *(_QWORD *)(v11 + 16);
  swift_errorRetain(v84);
  swift_release(v11);
  return v84;
}

unint64_t sub_1001F56CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _BYTE v24[24];
  _BYTE v25[24];

  v4 = type metadata accessor for DIPError.Code(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = &v24[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = IdentityProofingConfiguration.state.getter(v6);
  if (v10)
  {
    v11 = v9;
    v12 = v10;
    v13 = swift_allocObject(&unk_10060B1C8, 24, 7);
    *(_QWORD *)(v13 + 16) = a2;
    v14 = swift_allocObject(&unk_10060B1F0, 32, 7);
    *(_QWORD *)(v14 + 16) = 0;
    *(_QWORD *)(v14 + 24) = 0xE000000000000000;
    v15 = type metadata accessor for IdentityProofingDataContext();
    v16 = swift_allocObject(v15, 24, 7);
    sub_1000D6044();
    if (v2)
    {
      swift_bridgeObjectRelease(v12);
    }
    else
    {
      v21 = v17;
      v22 = (_QWORD *)swift_allocObject(&unk_10060B218, 56, 7);
      v22[2] = v21;
      v22[3] = v11;
      v22[4] = v12;
      v22[5] = v13;
      v22[6] = v14;
      swift_retain(v21);
      swift_retain(v13);
      swift_retain(v14);
      sub_1000D6570((uint64_t)sub_1001FC6DC, (uint64_t)v22);
      swift_release(v22);
      swift_release(v21);
      swift_beginAccess(v13 + 16, v25, 0, 0);
      v16 = *(_QWORD *)(v13 + 16);
      swift_beginAccess(v14 + 16, v24, 0, 0);
      swift_bridgeObjectRetain(*(_QWORD *)(v14 + 24));
    }
    swift_release(v13);
    swift_release(v14);
  }
  else
  {
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v5 + 104))(v8, enum case for DIPError.Code.idStateUnavailable(_:), v4);
    v16 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v18 = type metadata accessor for DIPError(0);
    v19 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    swift_allocError(v18, v19, 0, 0);
    v20 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000004ELL, 0x8000000100553F30, 0, v8, 0, v16, 0xD00000000000007CLL, 0x80000001005535D0, 0xD000000000000028, 0x8000000100553F80, 1337);
    swift_willThrow(v20);
  }
  return v16;
}

uint64_t sub_1001F59BC(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4, _QWORD *a5)
{
  uint64_t v5;
  void (*v6)(uint64_t, unint64_t);
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  __n128 v73;
  uint64_t v74;
  _QWORD *v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t i;
  int64_t v79;
  unint64_t v80;
  int64_t v81;
  uint64_t v82;
  void (*v83)(_QWORD, _QWORD, _QWORD);
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  char v97;
  __n128 v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  void (*v113)(char *, char *, void (*)(uint64_t, unint64_t));
  uint64_t v114;
  char *v115;
  unint64_t v116;
  uint64_t v117;
  NSObject *v118;
  os_log_type_t v119;
  _BOOL4 v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  _QWORD *v131;
  uint64_t v132;
  void (*v133)(_QWORD, _QWORD);
  unint64_t v134;
  void (*v135)(char *, _QWORD *);
  void (*v136)(char *, _QWORD);
  void (*v137)(_QWORD, _QWORD, _QWORD);
  unint64_t v138;
  unint64_t v139;
  uint64_t v140;
  _QWORD *v141;
  void (*v142)(_QWORD, _QWORD, _QWORD);
  void (*v143)(_QWORD, _QWORD);
  char *v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char v158;
  char v159;
  uint64_t v160;
  unint64_t v161;
  unint64_t v162;
  uint64_t v163;
  _QWORD *v164;
  void (*v165)(_QWORD, _QWORD, _QWORD);
  void (*v166)(_QWORD, _QWORD);
  char *v167;
  char *v168;
  uint64_t v169;
  void (*v170)(char *, uint64_t, _QWORD *);
  uint64_t v171;
  uint64_t v172;
  _QWORD *v173;
  void (*v174)(char *, _QWORD *, void (*)(_QWORD, _QWORD));
  char *v175;
  _QWORD *v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  _QWORD *v182;
  void (*v183)(uint64_t, unint64_t);
  char *v184;
  uint64_t v185;
  char v186;
  uint64_t v187;
  uint64_t v188;
  _QWORD *v189;
  _QWORD *v190;
  _QWORD *v191;
  uint64_t v192;
  unint64_t v193;
  unint64_t v194;
  _QWORD *v195;
  _QWORD *v196;
  void (*v197)(_QWORD, _QWORD, _QWORD);
  void (*v198)(_QWORD, _QWORD);
  char *v199;
  unint64_t v200;
  uint64_t v201;
  void (*v202)(unint64_t, _QWORD *, void (*)(_QWORD, _QWORD));
  void (*v203)(_QWORD, _QWORD, _QWORD);
  char *v204;
  char *v205;
  _QWORD *v206;
  char v207;
  uint64_t v208;
  void (*v209)(_QWORD, _QWORD, _QWORD);
  unint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  _QWORD *v215;
  unint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  unint64_t v223;
  unint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  _QWORD *v228;
  void (*v229)(char *, uint64_t, uint64_t);
  uint64_t v230;
  _QWORD *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  _QWORD *v239;
  unint64_t v240;
  unint64_t v241;
  void (*v242)(_QWORD, _QWORD, _QWORD);
  void (*v243)(char *, uint64_t, uint64_t, void (*)(_QWORD, _QWORD, _QWORD));
  _QWORD *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  unsigned int (*v248)(uint64_t, uint64_t, uint64_t);
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  unint64_t v255;
  _QWORD *v256;
  _QWORD *v257;
  unint64_t v258;
  unint64_t v259;
  _QWORD *v260;
  _QWORD *v261;
  unint64_t v262;
  unint64_t v263;
  void *v264;
  char *v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t (*v268)(char *, uint64_t);
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  NSObject *v273;
  os_log_type_t v274;
  uint8_t *v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  char *v280;
  _QWORD *v281;
  uint64_t v282;
  void *v284;
  uint64_t v285;
  void (*v286)(_QWORD, _QWORD, _QWORD);
  _QWORD *v287;
  _QWORD *v288;
  uint64_t v289;
  void (*v290)(char *, uint64_t, uint64_t);
  unint64_t v291;
  unint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  _QWORD *v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  unint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  unint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  NSObject *v312;
  os_log_type_t v313;
  uint8_t *v314;
  uint64_t v315;
  void *v316;
  unint64_t v317;
  unint64_t v318;
  void (*v319)(unint64_t, char *, uint64_t);
  unint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  void (*v325)(uint64_t, uint64_t);
  uint64_t v326;
  uint64_t v327;
  char *v328;
  unint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  void (*v333)(uint64_t, uint64_t);
  void (*v334)(uint64_t, unint64_t);
  uint64_t v335;
  uint64_t v336;
  NSObject *v337;
  os_log_type_t v338;
  uint8_t *v339;
  uint64_t v340;
  uint64_t v341;
  unint64_t v342;
  uint64_t v343;
  void *v344;
  uint64_t v345;
  uint64_t v346;
  void (*v347)(char *, uint64_t);
  uint64_t v348;
  void (*v349)(uint64_t, uint64_t);
  unint64_t v350;
  unint64_t v351;
  uint64_t v352;
  uint64_t v353;
  Swift::String v354;
  Swift::String v355;
  void (*v356)(uint64_t, uint64_t);
  uint64_t v357;
  void (*v358)(char *, uint64_t);
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  void (*v362)(char *, _QWORD *);
  char *v363;
  unint64_t v364;
  uint64_t v365;
  char *v366;
  char *v367;
  uint64_t v368;
  char *v369;
  char *v370;
  char *v371;
  char *v372;
  char *v373;
  uint64_t v374;
  char *v375;
  char *v376;
  char *v377;
  char *v378;
  uint64_t v379;
  uint64_t v380;
  _QWORD *v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  _QWORD *v386;
  uint64_t v387;
  char *v388;
  char *v389;
  char *v390;
  _QWORD *v391;
  char *v392;
  _QWORD *v393;
  uint64_t v394;
  unint64_t v395;
  char *v396;
  uint64_t v397;
  char *v398;
  unint64_t v399;
  unint64_t v400;
  uint64_t v401;
  uint64_t v402;
  char *v403;
  _QWORD *v404;
  _QWORD *v405;
  char *v406;
  __n128 v407;
  unint64_t v408;
  unint64_t v409;
  uint64_t v410;
  uint64_t v411;
  int64_t v412;
  _QWORD *v413;
  char *v414;
  char *v415;
  uint64_t v416;
  uint64_t v417;
  _QWORD *v418;
  uint64_t v419;
  uint64_t v420;
  char *v421;
  char *v422;
  uint64_t v423;
  void (*v424)(char *, uint64_t, _QWORD *, _QWORD *);
  void (*v425)(char *, char *, void (*)(uint64_t, unint64_t));
  unint64_t v426;
  uint64_t v427;
  _QWORD *v428;
  _QWORD *v429;
  void (*v430)(_QWORD, _QWORD, _QWORD);
  uint64_t v431;
  uint64_t v432;
  _QWORD *v433;
  _QWORD *v434;
  id v435;
  void (*v436)(_QWORD, _QWORD);
  void (*v437)(_QWORD, _QWORD);
  uint64_t v438;
  unint64_t v439;
  uint64_t v440;
  uint64_t v441;
  _QWORD *v442;
  void (*v443)(_QWORD, _QWORD, _QWORD);
  _QWORD v444[35];
  _BYTE v445[287];
  uint64_t v446[36];
  _QWORD v447[35];
  _QWORD v448[36];
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  _QWORD v454[35];
  _BYTE v455[288];
  _QWORD *v456;

  v381 = a5;
  v386 = a4;
  v393 = a3;
  v397 = a1;
  v8 = sub_100004828(&qword_1006322E0);
  v9 = __chkstk_darwin(v8);
  v371 = (char *)&v359 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v377 = (char *)&v359 - v11;
  v12 = type metadata accessor for RecipientEncryptionCertificate(0);
  v382 = *(_QWORD *)(v12 - 8);
  v383 = v12;
  v13 = __chkstk_darwin(v12);
  v370 = (char *)&v359 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v376 = (char *)&v359 - v16;
  __chkstk_darwin(v15);
  v389 = (char *)&v359 - v17;
  v18 = type metadata accessor for EncryptedMessageEntity(0);
  v394 = *(_QWORD *)(v18 - 8);
  v395 = v18;
  v19 = __chkstk_darwin(v18);
  v367 = (char *)&v359 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v19);
  v373 = (char *)&v359 - v22;
  __chkstk_darwin(v21);
  v390 = (char *)&v359 - v23;
  v24 = sub_100004828(&qword_100630278);
  v379 = *(_QWORD *)(v24 - 8);
  v380 = v24;
  v25 = __chkstk_darwin(v24);
  v366 = (char *)&v359 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __chkstk_darwin(v25);
  v368 = (uint64_t)&v359 - v28;
  v29 = __chkstk_darwin(v27);
  v372 = (char *)&v359 - v30;
  v31 = __chkstk_darwin(v29);
  v374 = (uint64_t)&v359 - v32;
  v33 = __chkstk_darwin(v31);
  v378 = (char *)&v359 - v34;
  __chkstk_darwin(v33);
  v384 = (uint64_t)&v359 - v35;
  v36 = sub_100004828(&qword_1006385A8);
  v37 = __chkstk_darwin(v36);
  v387 = (uint64_t)&v359 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  v385 = (uint64_t)&v359 - v39;
  v40 = sub_100004828(&qword_100633978);
  v41 = __chkstk_darwin(v40);
  v392 = (char *)&v359 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  v396 = (char *)&v359 - v43;
  v44 = type metadata accessor for DIPError.Code(0);
  v401 = *(_QWORD *)(v44 - 8);
  v402 = v44;
  __chkstk_darwin(v44);
  v403 = (char *)&v359 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = type metadata accessor for AEADKey(0);
  v440 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin(v46);
  v415 = (char *)&v359 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = type metadata accessor for Logger(0);
  v416 = *(_QWORD *)(v48 - 8);
  v417 = v48;
  v49 = __chkstk_darwin(v48);
  v369 = (char *)&v359 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __chkstk_darwin(v49);
  v375 = (char *)&v359 - v52;
  v53 = __chkstk_darwin(v51);
  v398 = (char *)&v359 - v54;
  v55 = __chkstk_darwin(v53);
  v388 = (char *)&v359 - v56;
  __chkstk_darwin(v55);
  v421 = (char *)&v359 - v57;
  v58 = sub_100004828(&qword_100630F80);
  __chkstk_darwin(v58);
  v419 = (uint64_t)&v359 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  v441 = sub_100004828(&qword_100630FA8);
  v60 = *(_QWORD **)(v441 - 8);
  v61 = __chkstk_darwin(v441);
  v414 = (char *)&v359 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __chkstk_darwin(v61);
  v422 = (char *)&v359 - v64;
  __chkstk_darwin(v63);
  v438 = (uint64_t)&v359 - v65;
  v66 = _swiftEmptyArrayStorage;
  v456 = _swiftEmptyArrayStorage;
  v420 = v5;
  v67 = *(_QWORD *)(v5 + 128) + OBJC_IVAR____TtC8coreidvd36IdentityProofingProducedAssetManager_cloudKitUploadAssets;
  swift_beginAccess(v67, &v453, 0, 0);
  v68 = *(_QWORD *)v67;
  v69 = *(_QWORD *)(*(_QWORD *)v67 + 64);
  v411 = *(_QWORD *)v67 + 64;
  v70 = 1 << *(_BYTE *)(v68 + 32);
  v71 = -1;
  if (v70 < 64)
    v71 = ~(-1 << v70);
  v72 = v71 & v69;
  v412 = (unint64_t)(v70 + 63) >> 6;
  v413 = &v448[1];
  v423 = v68;
  v73 = swift_bridgeObjectRetain(v68);
  v74 = 0;
  v75 = &_swiftEmptyDictionarySingleton;
  v73.n128_u64[0] = 136315906;
  v407 = v73;
  v405 = _swiftEmptyArrayStorage;
  v406 = (char *)&type metadata for Any + 8;
  v408 = (unint64_t)"Container for type ";
  v409 = 0x8000000100554440;
  v399 = (unint64_t)"live_selfie_video";
  v400 = 0x8000000100554460;
  v404 = &_swiftEmptyDictionarySingleton;
  v437 = (void (*)(_QWORD, _QWORD))v46;
  v418 = v60;
  v442 = _swiftEmptyArrayStorage;
  if (!v72)
    goto LABEL_5;
LABEL_4:
  v76 = __clz(__rbit64(v72));
  v77 = (v72 - 1) & v72;
  for (i = v76 | (v74 << 6); ; i = __clz(__rbit64(v80)) + (v74 << 6))
  {
    v82 = *(_QWORD *)(v423 + 48) + 16 * i;
    v83 = *(void (**)(_QWORD, _QWORD, _QWORD))(v82 + 8);
    v84 = *(_QWORD *)(*(_QWORD *)(v423 + 56) + 8 * i);
    v85 = *(_QWORD **)(*(_QWORD *)(v420 + 128) + 16);
    v86 = *(unsigned __int8 *)(v84 + 48);
    if ((_DWORD)v86 == 5)
    {
      swift_bridgeObjectRetain(*(_QWORD *)(v82 + 8));
      swift_retain(v84);
      swift_retain(v85);
      swift_bridgeObjectRelease(v405);
      swift_bridgeObjectRelease(v404);
      swift_bridgeObjectRelease(v442);
      swift_bridgeObjectRelease(v75);
      v46 = (uint64_t)v403;
      (*(void (**)(char *, _QWORD, uint64_t))(v401 + 104))(v403, enum case for DIPError.Code.missingCloudKitAssets(_:), v402);
      v210 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
      v211 = v84;
      v212 = type metadata accessor for DIPError(0);
      v213 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
      swift_allocError(v212, v213, 0, 0);
      v214 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001BLL, 0x8000000100554340, 0, v46, 0, v210, 0xD00000000000007CLL, 0x80000001005535D0, 0xD000000000000069, 0x8000000100554360, 980);
      swift_willThrow(v214);
      swift_release(v423);
      swift_release(v211);
      swift_bridgeObjectRelease(v83);
      v215 = v85;
      goto LABEL_93;
    }
    v87 = v75;
    v430 = *(void (**)(_QWORD, _QWORD, _QWORD))v82;
    swift_beginAccess(v85 + 3, &v452, 0, 0);
    v88 = v85[3];
    v89 = *(_QWORD *)(v88 + 16);
    v443 = v83;
    swift_bridgeObjectRetain(v83);
    swift_retain(v84);
    swift_retain(v85);
    v90 = v85;
    if (!v89)
      goto LABEL_66;
    swift_bridgeObjectRetain(v88);
    sub_1004A8934(v86);
    if ((v92 & 1) == 0)
    {
      swift_bridgeObjectRelease(v88);
LABEL_66:
      swift_bridgeObjectRelease(v405);
      swift_bridgeObjectRelease(v404);
      swift_bridgeObjectRelease(v442);
      swift_bridgeObjectRelease(v87);
      v46 = (uint64_t)v403;
      (*(void (**)(char *, _QWORD, uint64_t))(v401 + 104))(v403, enum case for DIPError.Code.missingCloudKitAssets(_:), v402);
      v216 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
      v217 = v84;
      v218 = type metadata accessor for DIPError(0);
      v219 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
      swift_allocError(v218, v219, 0, 0);
      v220 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001BLL, 0x80000001005543D0, 0, v46, 0, v216, 0xD00000000000007CLL, 0x80000001005535D0, 0xD000000000000069, 0x8000000100554360, 983);
      swift_willThrow(v220);
      swift_release(v423);
      v221 = v217;
LABEL_70:
      swift_release(v221);
      swift_bridgeObjectRelease(v443);
      v215 = v90;
LABEL_93:
      swift_release(v215);
LABEL_94:
      swift_bridgeObjectRelease(v456);
      return v46;
    }
    v93 = *(_QWORD *)(v88 + 56) + 16 * v91;
    v94 = *(_QWORD *)(v93 + 8);
    v436 = *(void (**)(_QWORD, _QWORD))v93;
    v439 = v94;
    swift_bridgeObjectRetain(v94);
    swift_bridgeObjectRelease(v88);
    swift_beginAccess(v85 + 4, &v451, 0, 0);
    v95 = v85[4];
    if (!*(_QWORD *)(v95 + 16))
    {
      v222 = v84;
      v223 = v439;
LABEL_69:
      swift_bridgeObjectRelease(v223);
      swift_bridgeObjectRelease(v405);
      swift_bridgeObjectRelease(v404);
      swift_bridgeObjectRelease(v442);
      swift_bridgeObjectRelease(v87);
      v46 = (uint64_t)v403;
      (*(void (**)(char *, _QWORD, uint64_t))(v401 + 104))(v403, enum case for DIPError.Code.missingCloudKitAssets(_:), v402);
      v224 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
      v225 = type metadata accessor for DIPError(0);
      v226 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
      swift_allocError(v225, v226, 0, 0);
      v227 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001BLL, 0x80000001005543F0, 0, v46, 0, v224, 0xD00000000000007CLL, 0x80000001005535D0, 0xD000000000000069, 0x8000000100554360, 986);
      swift_willThrow(v227);
      swift_release(v423);
      v221 = v222;
      goto LABEL_70;
    }
    swift_bridgeObjectRetain(v85[4]);
    sub_1004A8934(v86);
    if ((v97 & 1) == 0)
    {
      v222 = v84;
      swift_bridgeObjectRelease(v439);
      v223 = v95;
      goto LABEL_69;
    }
    v435 = *(id *)(*(_QWORD *)(v95 + 56) + 8 * v96);
    swift_bridgeObjectRelease(v95);
    v98 = swift_beginAccess(v85 + 2, &v450, 0, 0);
    v99 = v85[2];
    v100 = *(_QWORD *)(v99 + 16);
    v429 = v85;
    if (!v100)
    {
      v104 = v419;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))v418[7])(v419, 1, 1, v441, v98);
LABEL_72:
      swift_bridgeObjectRelease(v439);
      swift_bridgeObjectRelease(v405);
      swift_bridgeObjectRelease(v404);
      swift_bridgeObjectRelease(v442);
      swift_bridgeObjectRelease(v87);
      sub_100008030(v104, &qword_100630F80);
      v446[0] = 0;
      v446[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(37);
      swift_bridgeObjectRelease(v446[1]);
      v446[0] = 0xD000000000000023;
      v446[1] = 0x8000000100554410;
      __asm { BR              X9 }
    }
    v427 = v74;
    swift_bridgeObjectRetain(v99);
    sub_1004A8934(v86);
    v102 = v418;
    v426 = v77;
    if ((v103 & 1) != 0)
    {
      v104 = v419;
      sub_100038B24(*(_QWORD *)(v99 + 56) + v418[9] * v101, v419, &qword_100630FA8);
      v105 = 0;
    }
    else
    {
      v105 = 1;
      v104 = v419;
    }
    v106 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v102[7];
    v107 = v102;
    v108 = v441;
    v106(v104, v105, 1, v441);
    swift_bridgeObjectRelease(v99);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v107[6])(v104, 1, v108) == 1)
      goto LABEL_72;
    v428 = v87;
    v109 = *(int *)(v108 + 48);
    v110 = v438;
    v111 = (_QWORD *)(v438 + v109);
    v112 = v104 + v109;
    v434 = (_QWORD *)sub_100004828(&qword_100630F90);
    v432 = *(v434 - 1);
    (*(void (**)(uint64_t, uint64_t, _QWORD *))(v432 + 32))(v110, v104, v434);
    v113 = *(void (**)(char *, char *, void (*)(uint64_t, unint64_t)))(v440 + 32);
    v433 = v111;
    v425 = v113;
    v114 = ((uint64_t (*)(_QWORD *, uint64_t, void (*)(_QWORD, _QWORD)))v113)(v111, v112, v437);
    v115 = v421;
    defaultLogger()(v114);
    swift_bridgeObjectRetain_n(v443, 2);
    swift_retain_n(v84, 2);
    v116 = v439;
    v117 = swift_bridgeObjectRetain_n(v439, 2);
    v118 = Logger.logObject.getter(v117);
    v119 = static os_log_type_t.debug.getter(v118);
    v120 = os_log_type_enabled(v118, v119);
    v431 = v84;
    if (v120)
    {
      v121 = swift_slowAlloc(42, -1);
      v424 = (void (*)(char *, uint64_t, _QWORD *, _QWORD *))swift_slowAlloc(96, -1);
      v446[0] = (uint64_t)v424;
      *(_DWORD *)v121 = v407.n128_u32[0];
      v122 = *(_QWORD *)(v84 + 16);
      v123 = *(_QWORD *)(v84 + 24);
      swift_bridgeObjectRetain(v123);
      v448[0] = sub_1000E3AC8(v122, v123, v446);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v448, v413, v121 + 4);
      swift_release_n(v84, 2);
      swift_bridgeObjectRelease_n(v443, 2);
      swift_bridgeObjectRelease(v123);
      *(_WORD *)(v121 + 12) = 2080;
      __asm { BR              X8 }
    }

    swift_bridgeObjectRelease_n(v116, 2);
    swift_release_n(v84, 2);
    swift_bridgeObjectRelease_n(v443, 2);
    (*(void (**)(char *, uint64_t))(v416 + 8))(v115, v417);
    v124 = v442;
    v125 = *(_QWORD *)(v84 + 24);
    v424 = *(void (**)(char *, uint64_t, _QWORD *, _QWORD *))(v84 + 16);
    swift_bridgeObjectRetain(v125);
    if (shouldIncludeUnencryptedData()())
    {
      v126 = 0;
      v127 = 0xE000000000000000;
    }
    else
    {
      v128 = v422;
      v129 = &v422[*(int *)(v441 + 48)];
      v410 = v125;
      v130 = v432;
      v131 = v434;
      (*(void (**)(char *, uint64_t, _QWORD *))(v432 + 16))(v422, v438, v434);
      v132 = v440;
      v133 = v437;
      (*(void (**)(char *, _QWORD *, void (*)(_QWORD, _QWORD)))(v440 + 16))(v129, v433, v437);
      v126 = SealedMessage.keyID.getter(v131);
      v127 = v134;
      v135 = *(void (**)(char *, _QWORD *))(v130 + 8);
      v125 = v410;
      v135(v128, v131);
      v136 = *(void (**)(char *, _QWORD))(v132 + 8);
      v124 = v442;
      v136(v129, v133);
    }
    v137 = v430;
    if (v430 == (void (*)(_QWORD, _QWORD, _QWORD))0xD000000000000011
      && v443 == (void (*)(_QWORD, _QWORD, _QWORD))v409
      || (_stringCompareWithSmolCheck(_:_:expecting:)(v430, v443, 0xD000000000000011, v408 | 0x8000000000000000, 0) & 1) != 0|| v137 == (void (*)(_QWORD, _QWORD, _QWORD))0xD000000000000014&& v443 == (void (*)(_QWORD, _QWORD, _QWORD))v400|| (_stringCompareWithSmolCheck(_:_:expecting:)(v137, v443, 0xD000000000000014, v399 | 0x8000000000000000, 0) & 1) != 0)
    {
      swift_bridgeObjectRetain(v443);
      if ((swift_isUniquelyReferenced_nonNull_native(v124) & 1) == 0)
        v124 = sub_1000E2230(0, v124[2] + 1, 1, v124);
      v139 = v124[2];
      v138 = v124[3];
      v140 = v441;
      if (v139 >= v138 >> 1)
      {
        v124 = sub_1000E2230((_QWORD *)(v138 > 1), v139 + 1, 1, v124);
        v140 = v441;
      }
      v124[2] = v139 + 1;
      v442 = v124;
      v141 = &v124[9 * v139];
      v141[4] = v126;
      v141[5] = v127;
      v142 = v443;
      v141[6] = v137;
      v141[7] = v142;
      v141[8] = v424;
      v141[9] = v125;
      v143 = v436;
      v141[10] = v435;
      v141[11] = v143;
      v141[12] = v439;
      v144 = v422;
      v145 = (unint64_t)&v422[*(int *)(v140 + 48)];
      v146 = v432;
      v430 = *(void (**)(_QWORD, _QWORD, _QWORD))(v432 + 16);
      v147 = v438;
      v148 = v434;
      v430(v422, v438, v434);
      v7 = *(_QWORD **)(v440 + 16);
      v439 = v145;
      v60 = v433;
      v6 = v437;
      ((void (*)(unint64_t, _QWORD *, void (*)(_QWORD, _QWORD)))v7)(v145, v433, v437);
      v435 = (id)SealedMessage.keyID.getter(v148);
      v46 = v149;
      v436 = *(void (**)(_QWORD, _QWORD))(v146 + 8);
      v436(v144, v148);
      v150 = v414;
      v151 = &v414[*(int *)(v441 + 48)];
      v430(v414, v147, v148);
      ((void (*)(char *, _QWORD *, void (*)(uint64_t, unint64_t)))v7)(v151, v60, v6);
      v152 = (uint64_t)v415;
      v425(v415, v151, v6);
      v153 = (uint64_t)v428;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v428);
      v446[0] = v153;
      sub_100480F00(v152, (uint64_t)v435, v46, isUniquelyReferenced_nonNull_native);
      v75 = (_QWORD *)v446[0];
      swift_release(v431);
      swift_bridgeObjectRelease(v443);
      swift_release(v429);
      swift_bridgeObjectRelease(v46);
      swift_bridgeObjectRelease(0x8000000000000000);
    }
    else
    {
      v365 = v126;
      if (v137 == (void (*)(_QWORD, _QWORD, _QWORD))0x6569666C6573
        && v443 == (void (*)(_QWORD, _QWORD, _QWORD))0xE600000000000000
        || (_stringCompareWithSmolCheck(_:_:expecting:)(v137, v443, 0x6569666C6573, 0xE600000000000000, 0) & 1) != 0)
      {
        v155 = *(_QWORD *)(v420 + 128)
             + OBJC_IVAR____TtC8coreidvd36IdentityProofingProducedAssetManager_cloudKitUploadAssets;
        swift_beginAccess(v155, &v449, 0, 0);
        v156 = *(_QWORD *)v155;
        v157 = *(_QWORD *)(*(_QWORD *)v155 + 16);
        swift_bridgeObjectRetain(v443);
        if (v157)
        {
          swift_bridgeObjectRetain(v156);
          sub_1004A8604(0xD000000000000011, v408 | 0x8000000000000000);
          v159 = v158;
          swift_bridgeObjectRelease(v156);
          if ((v159 & 1) != 0)
          {
            swift_bridgeObjectRetain(v127);
            swift_bridgeObjectRetain(v443);
            swift_bridgeObjectRetain(v125);
            swift_bridgeObjectRetain(v439);
            if ((swift_isUniquelyReferenced_nonNull_native(v124) & 1) == 0)
              v124 = sub_1000E2230(0, v124[2] + 1, 1, v124);
            v160 = v365;
            v162 = v124[2];
            v161 = v124[3];
            v163 = v441;
            if (v162 >= v161 >> 1)
            {
              v124 = sub_1000E2230((_QWORD *)(v161 > 1), v162 + 1, 1, v124);
              v163 = v441;
            }
            v442 = v124;
            v124[2] = v162 + 1;
            v164 = &v124[9 * v162];
            v164[4] = v160;
            v164[5] = v127;
            v165 = v443;
            v164[6] = v137;
            v164[7] = v165;
            v164[8] = v424;
            v164[9] = v125;
            v166 = v436;
            v164[10] = v435;
            v164[11] = v166;
            v164[12] = v439;
            v167 = v422;
            v363 = &v422[*(int *)(v163 + 48)];
            v168 = v363;
            v364 = v127;
            v410 = v125;
            v169 = v432;
            v170 = *(void (**)(char *, uint64_t, _QWORD *))(v432 + 16);
            v171 = v163;
            v172 = v438;
            v173 = v434;
            v170(v422, v438, v434);
            v174 = *(void (**)(char *, _QWORD *, void (*)(_QWORD, _QWORD)))(v440 + 16);
            v175 = v168;
            v176 = v433;
            v174(v175, v433, v437);
            v360 = SealedMessage.keyID.getter(v173);
            v361 = v177;
            v362 = *(void (**)(char *, _QWORD *))(v169 + 8);
            v125 = v410;
            v362(v167, v173);
            v178 = *(int *)(v171 + 48);
            v179 = v414;
            v180 = &v414[v178];
            v181 = v172;
            v137 = v430;
            v170(v414, v181, v173);
            v127 = v364;
            v182 = v176;
            v183 = v437;
            v174(v180, v182, v437);
            v184 = v415;
            v425(v415, v180, v183);
            v185 = (uint64_t)v428;
            v186 = swift_isUniquelyReferenced_nonNull_native(v428);
            v446[0] = v185;
            v187 = (uint64_t)v184;
            v188 = v361;
            sub_100480F00(v187, v360, v361, v186);
            v428 = (_QWORD *)v446[0];
            v189 = v442;
            swift_bridgeObjectRelease(v188);
            swift_bridgeObjectRelease(0x8000000000000000);
            v190 = v173;
            v124 = v189;
            v362(v179, v190);
            (*(void (**)(char *, _QWORD))(v440 + 8))(v363, v183);
          }
        }
      }
      else
      {
        swift_bridgeObjectRetain(v443);
      }
      if ((swift_isUniquelyReferenced_nonNull_native(v405) & 1) != 0)
        v191 = v405;
      else
        v191 = sub_1000E2230(0, v405[2] + 1, 1, v405);
      v192 = v365;
      v194 = v191[2];
      v193 = v191[3];
      v195 = v191;
      v442 = v124;
      if (v194 >= v193 >> 1)
        v191 = sub_1000E2230((_QWORD *)(v193 > 1), v194 + 1, 1, v191);
      v191[2] = v194 + 1;
      v405 = v191;
      v196 = &v191[9 * v194];
      v196[4] = v192;
      v196[5] = v127;
      v197 = v443;
      v196[6] = v137;
      v196[7] = v197;
      v196[8] = v424;
      v196[9] = v125;
      v198 = v436;
      v196[10] = v435;
      v196[11] = v198;
      v196[12] = v439;
      v199 = v422;
      v200 = (unint64_t)&v422[*(int *)(v441 + 48)];
      v201 = v432;
      v424 = *(void (**)(char *, uint64_t, _QWORD *, _QWORD *))(v432 + 16);
      v7 = (_QWORD *)v438;
      v148 = v434;
      v424(v422, v438, v434, v195);
      v202 = *(void (**)(unint64_t, _QWORD *, void (*)(_QWORD, _QWORD)))(v440 + 16);
      v439 = v200;
      v60 = v433;
      v6 = v437;
      v202(v200, v433, v437);
      v46 = (uint64_t)v202;
      v435 = (id)SealedMessage.keyID.getter(v148);
      v430 = v203;
      v436 = *(void (**)(_QWORD, _QWORD))(v201 + 8);
      v436(v199, v148);
      v150 = v414;
      v204 = &v414[*(int *)(v441 + 48)];
      ((void (*)(char *, _QWORD *, _QWORD *))v424)(v414, v7, v148);
      ((void (*)(char *, _QWORD *, void (*)(uint64_t, unint64_t)))v46)(v204, v60, v6);
      v205 = v415;
      v425(v415, v204, v6);
      v206 = v404;
      v207 = swift_isUniquelyReferenced_nonNull_native(v404);
      v446[0] = (uint64_t)v206;
      v208 = (uint64_t)v205;
      v209 = v430;
      sub_100480F00(v208, (uint64_t)v435, (uint64_t)v430, v207);
      v404 = (_QWORD *)v446[0];
      swift_release(v431);
      swift_bridgeObjectRelease(v443);
      swift_release(v429);
      swift_bridgeObjectRelease(v209);
      swift_bridgeObjectRelease(0x8000000000000000);
      v75 = v428;
    }
    sub_100008030(v438, &qword_100630FA8);
    v436(v150, v148);
    (*(void (**)(unint64_t, _QWORD))(v440 + 8))(v439, v6);
    v66 = v442;
    v74 = v427;
    v72 = v426;
    if (v426)
      goto LABEL_4;
LABEL_5:
    v79 = v74 + 1;
    if (__OFADD__(v74, 1))
    {
      __break(1u);
      goto LABEL_107;
    }
    if (v79 >= v412)
      goto LABEL_73;
    v80 = *(_QWORD *)(v411 + 8 * v79);
    ++v74;
    if (!v80)
    {
      v74 = v79 + 1;
      if (v79 + 1 >= v412)
        goto LABEL_73;
      v80 = *(_QWORD *)(v411 + 8 * v74);
      if (!v80)
      {
        v74 = v79 + 2;
        if (v79 + 2 >= v412)
          goto LABEL_73;
        v80 = *(_QWORD *)(v411 + 8 * v74);
        if (!v80)
          break;
      }
    }
LABEL_18:
    v77 = (v80 - 1) & v80;
  }
  v81 = v79 + 3;
  if (v81 < v412)
  {
    v80 = *(_QWORD *)(v411 + 8 * v81);
    if (!v80)
    {
      while (1)
      {
        v74 = v81 + 1;
        if (__OFADD__(v81, 1))
          break;
        if (v74 >= v412)
          goto LABEL_73;
        v80 = *(_QWORD *)(v411 + 8 * v74);
        ++v81;
        if (v80)
          goto LABEL_18;
      }
      __break(1u);
      goto LABEL_113;
    }
    v74 = v81;
    goto LABEL_18;
  }
LABEL_73:
  v428 = v75;
  swift_release(v423);
  v228 = (_QWORD *)type metadata accessor for PDF417ParsedData(0);
  v229 = *(void (**)(char *, uint64_t, uint64_t))(*(v228 - 1) + 56);
  v230 = (uint64_t)v396;
  v443 = (void (*)(_QWORD, _QWORD, _QWORD))v228;
  v441 = (uint64_t)v229;
  v229(v396, 1, 1);
  v231 = v386;
  OS_dispatch_group.wait()();
  v232 = v231[14];
  swift_bridgeObjectRetain(v232);
  OS_dispatch_group.wait()();
  v233 = v231[11];
  v440 = v231[10];
  swift_bridgeObjectRetain(v233);
  OS_dispatch_group.wait()();
  v234 = v231[16];
  v439 = v231[15];
  swift_bridgeObjectRetain(v234);
  OS_dispatch_group.wait()();
  v235 = v231[17];
  v236 = v231[18];
  swift_bridgeObjectRetain(v236);
  OS_dispatch_group.wait()();
  v237 = v231[12];
  swift_bridgeObjectRetain(v231[13]);
  sub_1002AD464(0, 0, v230, v232, v440, v233, v439, v234, v447, v235, v236, v237, v238, 0, 0);
  memcpy((char *)v448 + 7, v447, 0x118uLL);
  v239 = v456;
  if ((swift_isUniquelyReferenced_nonNull_native(v456) & 1) == 0)
    v239 = sub_1000E34B0(0, v239[2] + 1, 1, v239);
  v241 = v239[2];
  v240 = v239[3];
  v242 = v443;
  v243 = (void (*)(char *, uint64_t, uint64_t, void (*)(_QWORD, _QWORD, _QWORD)))v441;
  if (v241 >= v240 >> 1)
    v239 = sub_1000E34B0((_QWORD *)(v240 > 1), v241 + 1, 1, v239);
  v239[2] = v241 + 1;
  v244 = &v239[36 * v241];
  *((_BYTE *)v244 + 32) = 2;
  memcpy((char *)v244 + 33, v448, 0x11FuLL);
  v456 = v239;
  v245 = v385;
  sub_100038B24(v397, v385, &qword_1006385A8);
  v246 = type metadata accessor for PDF417Data(0);
  v247 = *(_QWORD *)(v246 - 8);
  v248 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v247 + 48);
  if (v248(v245, 1, v246) == 1)
  {
    sub_100008030(v245, &qword_1006385A8);
    v249 = 0;
    v250 = 0;
  }
  else
  {
    v249 = PDF417Data.rawData.getter();
    v250 = v251;
    (*(void (**)(uint64_t, uint64_t))(v247 + 8))(v245, v246);
  }
  v252 = (uint64_t)v396;
  v243(v396, 1, 1, v242);
  sub_1002AD464(v249, v250, v252, 0, 0, 0, 0, 0, v454, 0, 0, 0, 0, 0, 0);
  memcpy(&v446[1], v454, 0x118uLL);
  LOBYTE(v446[0]) = 0;
  memcpy(v455, v446, sizeof(v455));
  v253 = v387;
  sub_100038B24(v397, v387, &qword_1006385A8);
  if (v248(v253, 1, v246) == 1)
  {
    sub_100008030(v253, &qword_1006385A8);
    v254 = (uint64_t)v392;
    v243(v392, 1, 1, v242);
  }
  else
  {
    v254 = (uint64_t)v392;
    PDF417Data.parsedData.getter();
    (*(void (**)(uint64_t, uint64_t))(v247 + 8))(v253, v246);
  }
  v255 = v395;
  v256 = v393;
  sub_1002AD464(0, 0, v254, 0, 0, 0, 0, 0, v444, 0, 0, 0, 0, 0, 0);
  memcpy(&v445[7], v444, 0x118uLL);
  v257 = v456;
  if ((swift_isUniquelyReferenced_nonNull_native(v456) & 1) == 0)
    v257 = sub_1000E34B0(0, v257[2] + 1, 1, v257);
  v259 = v257[2];
  v258 = v257[3];
  if (v259 >= v258 >> 1)
    v257 = sub_1000E34B0((_QWORD *)(v258 > 1), v259 + 1, 1, v257);
  v257[2] = v259 + 1;
  v260 = &v257[36 * v259];
  *((_BYTE *)v260 + 32) = 0;
  memcpy((char *)v260 + 33, v445, 0x11FuLL);
  v456 = v257;
  sub_1001FC704(v446);
  v261 = sub_1000E34B0(0, 1, 1, _swiftEmptyArrayStorage);
  v263 = v261[2];
  v262 = v261[3];
  if (v263 >= v262 >> 1)
    v261 = sub_1000E34B0((_QWORD *)(v262 > 1), v263 + 1, 1, v261);
  v261[2] = v263 + 1;
  v443 = (void (*)(_QWORD, _QWORD, _QWORD))v261;
  v264 = memcpy(&v261[36 * v263 + 4], v455, 0x120uLL);
  v265 = v388;
  v266 = defaultLogger()(v264);
  __chkstk_darwin(v266);
  Logger.sensitive(_:)(sub_1001FC82C);
  sub_1001FC834(v454);
  v267 = v417;
  v268 = *(uint64_t (**)(char *, uint64_t))(v416 + 8);
  v269 = v268(v265, v417);
  v270 = defaultLogger()(v269);
  __chkstk_darwin(v270);
  Logger.sensitive(_:)(sub_1001FC960);
  v271 = v268(v265, v267);
  v272 = defaultLogger()(v271);
  v273 = Logger.logObject.getter(v272);
  v274 = static os_log_type_t.debug.getter(v273);
  if (os_log_type_enabled(v273, v274))
  {
    v275 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v275 = 0;
    _os_log_impl((void *)&_mh_execute_header, v273, v274, "encrypting mrz data for issuer", v275, 2u);
    swift_slowDealloc(v275, -1, -1);
  }

  v268(v398, v417);
  v441 = (uint64_t)v268;
  v276 = v394;
  v46 = *(_QWORD *)(v394 + 104);
  v277 = (uint64_t)v390;
  ((void (*)(char *, _QWORD, unint64_t))v46)(v390, enum case for EncryptedMessageEntity.issuer(_:), v255);
  v278 = v256[3];
  v279 = v256[4];
  sub_10000806C(v256, v278);
  v280 = v389;
  v281 = v391;
  v282 = (*(uint64_t (**)(uint64_t, uint64_t))(v279 + 40))(v278, v279);
  v66 = v281;
  if (v281)
  {
    swift_bridgeObjectRelease(v443);
    swift_bridgeObjectRelease(v405);
    swift_bridgeObjectRelease(v404);
    (*(void (**)(uint64_t, unint64_t))(v276 + 8))(v277, v255);
    swift_bridgeObjectRelease(v442);
    swift_bridgeObjectRelease(v428);
    goto LABEL_94;
  }
  v440 = v46;
  v284 = (void *)RecipientEncryptionCertificate.keyAgreement.getter(v282);
  v7 = *(_QWORD **)(v382 + 8);
  ((void (*)(char *, uint64_t))v7)(v280, v383);
  v285 = v384;
  v286 = v443;
  v287 = v404;
  v288 = v405;
  sub_1001EF770(v381, (uint64_t)v443, (uint64_t)v405, v404, v277, (uint64_t)v284, v384);
  v289 = v277;
  v6 = *(void (**)(uint64_t, unint64_t))(v394 + 8);
  v6(v289, v395);
  swift_bridgeObjectRelease(v286);
  swift_bridgeObjectRelease(v288);
  swift_bridgeObjectRelease(v287);

  v290 = *(void (**)(char *, uint64_t, uint64_t))(v379 + 16);
  v290(v378, v285, v380);
  v46 = sub_1000E349C(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
  v292 = *(_QWORD *)(v46 + 16);
  v291 = *(_QWORD *)(v46 + 24);
  if (v292 >= v291 >> 1)
    v46 = sub_1000E349C(v291 > 1, v292 + 1, 1, v46);
  *(_QWORD *)(v46 + 16) = v292 + 1;
  v293 = v379;
  v439 = (*(unsigned __int8 *)(v293 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v293 + 80);
  v438 = *(_QWORD *)(v379 + 72);
  v294 = v46 + v439 + v438 * v292;
  v295 = v380;
  v443 = *(void (**)(_QWORD, _QWORD, _QWORD))(v379 + 32);
  v443(v294, v378, v380);
  v296 = v442;
  if (!v442[2])
  {
    swift_bridgeObjectRelease(v46);
    swift_bridgeObjectRelease(v296);
    swift_bridgeObjectRelease(v428);
    v46 = (uint64_t)v403;
    (*(void (**)(char *, _QWORD, uint64_t))(v401 + 104))(v403, enum case for DIPError.Code.uploadedDataForLivenessDoesntExist(_:), v402);
    v300 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v301 = type metadata accessor for DIPError(0);
    v302 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    swift_allocError(v301, v302, 0, 0);
    v303 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000020, 0x8000000100554560, 0, v46, 0, v300, 0xD00000000000007CLL, 0x80000001005535D0, 0xD000000000000069, 0x8000000100554360, 1040);
    swift_willThrow(v303);
    (*(void (**)(uint64_t, uint64_t))(v293 + 8))(v384, v295);
    goto LABEL_94;
  }
  v437 = (void (*)(_QWORD, _QWORD))v290;
  v297 = v393[3];
  v298 = v393[4];
  sub_10000806C(v393, v297);
  v299 = (uint64_t)v377;
  (*(void (**)(uint64_t, uint64_t))(v298 + 32))(v297, v298);
  v305 = v382;
  v304 = v383;
  v436 = *(void (**)(_QWORD, _QWORD))(v382 + 48);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v436)(v299, 1, v383) == 1)
  {
    swift_bridgeObjectRelease(v46);
    swift_bridgeObjectRelease(v442);
    swift_bridgeObjectRelease(v428);
    sub_100008030(v299, &qword_1006322E0);
    v46 = (uint64_t)v403;
    (*(void (**)(char *, _QWORD, uint64_t))(v401 + 104))(v403, enum case for DIPError.Code.unableToPrepareEncryptedDataForLiveness(_:), v402);
    v306 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v307 = type metadata accessor for DIPError(0);
    v308 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    swift_allocError(v307, v308, 0, 0);
    v309 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000055, 0x8000000100554480, 0, v46, 0, v306, 0xD00000000000007CLL, 0x80000001005535D0, 0xD000000000000069, 0x8000000100554360, 1044);
    swift_willThrow(v309);
    (*(void (**)(uint64_t, uint64_t))(v379 + 8))(v384, v380);
    goto LABEL_94;
  }
  v434 = *(_QWORD **)(v305 + 32);
  v310 = ((uint64_t (*)(char *, uint64_t, uint64_t))v434)(v376, v299, v304);
  v311 = defaultLogger()(v310);
  v312 = Logger.logObject.getter(v311);
  v313 = static os_log_type_t.debug.getter(v312);
  if (os_log_type_enabled(v312, v313))
  {
    v314 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v314 = 0;
    _os_log_impl((void *)&_mh_execute_header, v312, v313, "adding upload data for liveness", v314, 2u);
    swift_slowDealloc(v314, -1, -1);
  }

  ((void (*)(char *, uint64_t))v441)(v375, v417);
  v74 = (uint64_t)v373;
  v72 = v395;
  v315 = ((uint64_t (*)(char *, _QWORD, unint64_t))v440)(v373, enum case for EncryptedMessageEntity.idvServer(_:), v395);
  v316 = (void *)RecipientEncryptionCertificate.keyAgreement.getter(v315);
  v60 = v442;
  v75 = v428;
  v435 = v316;
  sub_1001EF770(v381, 0, (uint64_t)v442, v428, v74, (uint64_t)v316, v374);
LABEL_107:
  v6(v74, v72);
  swift_bridgeObjectRelease(v60);
  swift_bridgeObjectRelease(v75);

  ((void (*)(char *, uint64_t, uint64_t))v437)(v372, v374, v380);
  v318 = *(_QWORD *)(v46 + 16);
  v317 = *(_QWORD *)(v46 + 24);
  if (v318 >= v317 >> 1)
    v46 = sub_1000E349C(v317 > 1, v318 + 1, 1, v46);
  v319 = (void (*)(unint64_t, char *, uint64_t))v443;
  v320 = v439;
  v321 = v438;
  *(_QWORD *)(v46 + 16) = v318 + 1;
  v322 = v380;
  v319(v46 + v320 + v318 * v321, v372, v380);
  v323 = v393[3];
  v324 = v393[4];
  sub_10000806C(v393, v323);
  (*(void (**)(uint64_t, uint64_t))(v324 + 24))(v323, v324);
  if (v66)
  {
    v325 = *(void (**)(uint64_t, uint64_t))(v379 + 8);
    v325(v374, v322);
    ((void (*)(char *, uint64_t))v7)(v376, v383);
    v325(v384, v322);
LABEL_111:
    swift_bridgeObjectRelease(v46);
    goto LABEL_94;
  }
LABEL_113:
  v326 = (uint64_t)v371;
  v327 = v383;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v436)(v371, 1, v383) == 1)
  {
    swift_bridgeObjectRelease(v46);
    sub_100008030(v326, &qword_1006322E0);
    v328 = v403;
    (*(void (**)(char *, _QWORD, uint64_t))(v401 + 104))(v403, enum case for DIPError.Code.unableToPrepareEncryptedDataForLiveness(_:), v402);
    v329 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v330 = type metadata accessor for DIPError(0);
    v331 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    swift_allocError(v330, v331, 0, 0);
    v332 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000043, 0x80000001005544E0, 0, v328, 0, v329, 0xD00000000000007CLL, 0x80000001005535D0, 0xD000000000000069, 0x8000000100554360, 1108);
    swift_willThrow(v332);
    v46 = v380;
    v333 = *(void (**)(uint64_t, uint64_t))(v379 + 8);
    v333(v374, v380);
    ((void (*)(char *, uint64_t))v7)(v376, v327);
    v333(v384, v46);
    goto LABEL_94;
  }
  v334 = v6;
  v442 = v7;
  v335 = ((uint64_t (*)(char *, uint64_t, uint64_t))v434)(v370, v326, v327);
  v336 = defaultLogger()(v335);
  v337 = Logger.logObject.getter(v336);
  v338 = static os_log_type_t.debug.getter(v337);
  if (os_log_type_enabled(v337, v338))
  {
    v339 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v339 = 0;
    _os_log_impl((void *)&_mh_execute_header, v337, v338, "encrypting idv data for assessor", v339, 2u);
    swift_slowDealloc(v339, -1, -1);
  }

  ((void (*)(char *, uint64_t))v441)(v369, v417);
  v340 = (uint64_t)v456;
  v341 = (uint64_t)v367;
  v342 = v395;
  ((void (*)(char *, _QWORD, unint64_t))v440)(v367, enum case for EncryptedMessageEntity.assessor(_:), v395);
  swift_bridgeObjectRetain(v340);
  v344 = (void *)RecipientEncryptionCertificate.keyAgreement.getter(v343);
  v345 = v368;
  sub_1001EF770(v381, v340, 0, 0, v341, (uint64_t)v344, v368);
  if (v66)
  {
    swift_bridgeObjectRelease(v340);

    v334(v341, v342);
    v346 = v383;
    v347 = (void (*)(char *, uint64_t))v442;
    ((void (*)(char *, uint64_t))v442)(v370, v383);
    v348 = v380;
    v349 = *(void (**)(uint64_t, uint64_t))(v379 + 8);
    v349(v374, v380);
    v347(v376, v346);
    v349(v384, v348);
    goto LABEL_111;
  }
  v334(v341, v342);
  swift_bridgeObjectRelease(v340);

  ((void (*)(char *, uint64_t, uint64_t))v437)(v366, v345, v380);
  v351 = *(_QWORD *)(v46 + 16);
  v350 = *(_QWORD *)(v46 + 24);
  if (v351 >= v350 >> 1)
    v46 = sub_1000E349C(v350 > 1, v351 + 1, 1, v46);
  *(_QWORD *)(v46 + 16) = v351 + 1;
  v352 = v46 + v439 + v351 * v438;
  v353 = v380;
  v443(v352, v366, v380);
  v354._countAndFlagsBits = 0xD000000000000025;
  v354._object = (void *)0x8000000100554530;
  v355._countAndFlagsBits = 0x6531313038336265;
  v355._object = (void *)0xE800000000000000;
  logMilestone(tag:description:)(v355, v354);
  v356 = *(void (**)(uint64_t, uint64_t))(v379 + 8);
  v356(v368, v353);
  v357 = v383;
  v358 = (void (*)(char *, uint64_t))v442;
  ((void (*)(char *, uint64_t))v442)(v370, v383);
  v356(v374, v353);
  v358(v376, v357);
  v356(v384, v353);
  swift_bridgeObjectRelease(v456);
  return v46;
}

uint64_t sub_1001F83C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint8_t *v41;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55[3];
  uint64_t v56[3];

  v52 = a3;
  v49 = a1;
  v50 = a2;
  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v54 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v43 - v8;
  __chkstk_darwin(v7);
  v11 = (char *)&v43 - v10;
  v12 = sub_100004828(&qword_100633990);
  __chkstk_darwin(v12);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Date(0);
  v51 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for IdentityProofingDataContext();
  swift_allocObject(v18, 24, 7);
  sub_1000D6044();
  v47 = v14;
  v45 = v17;
  v44 = v11;
  v46 = v9;
  v48 = v4;
  v53 = v3;
  v20 = v19;
  v21 = swift_allocBox(v12);
  v22 = v51;
  v24 = v23;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56))(v23, 1, 1, v15);
  v25 = swift_allocObject(&unk_10060B4C8, 32, 7);
  *(_QWORD *)(v25 + 16) = 0;
  *(_BYTE *)(v25 + 24) = 1;
  v26 = (_QWORD *)swift_allocObject(&unk_10060B4F0, 64, 7);
  v26[2] = v49;
  v26[3] = v20;
  v27 = v52;
  v26[4] = v50;
  v26[5] = v27;
  v26[6] = v21;
  v26[7] = v25;
  swift_retain(v20);
  swift_bridgeObjectRetain(v27);
  swift_retain(v21);
  swift_retain(v25);
  sub_1000D6570((uint64_t)sub_1001FCFB0, (uint64_t)v26);
  v54 = v20;
  swift_release(v26);
  swift_beginAccess(v24, v56, 0, 0);
  v28 = (uint64_t)v47;
  sub_100038B24(v24, (uint64_t)v47, &qword_100633990);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v28, 1, v15) == 1)
  {
    v29 = sub_100008030(v28, &qword_100633990);
    v30 = defaultLogger()(v29);
    v31 = Logger.logObject.getter(v30);
    v32 = static os_log_type_t.debug.getter(v31);
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v33 = 0;
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "createdAtDate for proofing doesn't exist. This is not a fatal error and should not end the proofing process in a failure", v33, 2u);
      swift_slowDealloc(v33, -1, -1);
      swift_release(v54);

    }
    else
    {

      swift_release(v54);
    }
    (*(void (**)(char *, uint64_t))(v48 + 8))(v46, v53);
  }
  else
  {
    v34 = v45;
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 32))(v45, v28, v15);
    swift_beginAccess(v25 + 16, v55, 0, 0);
    if ((*(_BYTE *)(v25 + 24) & 1) != 0)
    {
      v36 = v44;
      v37 = defaultLogger()(v35);
      v38 = Logger.logObject.getter(v37);
      v39 = static os_log_type_t.debug.getter(v38);
      if (os_log_type_enabled(v38, v39))
      {
        v40 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v40 = 0;
        _os_log_impl((void *)&_mh_execute_header, v38, v39, "manualCheckInterval for proofing doesn't exist. This is not a fatal error and should not end the proofing process in a failure", v40, 2u);
        v41 = v40;
        v34 = v45;
        swift_slowDealloc(v41, -1, -1);
      }
      swift_release(v54);

      (*(void (**)(char *, uint64_t))(v48 + 8))(v36, v53);
    }
    else
    {
      sub_1004F2574(v34, *(_QWORD *)(v25 + 16));
      swift_release(v54);
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v34, v15);
  }
  swift_release(v21);
  return swift_release(v25);
}

uint64_t sub_1001F89BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[22] = a2;
  v3[23] = a3;
  v3[21] = a1;
  v4 = type metadata accessor for DIPError.Code(0);
  v3[24] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[25] = v5;
  v3[26] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  v3[27] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[28] = v7;
  v3[29] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001F8A48, 0, 0);
}

uint64_t sub_1001F8A48(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  unint64_t v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  NSString v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = v1[22];
  defaultLogger()(a1);
  v3 = swift_bridgeObjectRetain_n(v2, 2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.debug.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v19 = v1[28];
    v20 = v1[27];
    v21 = v1[29];
    v6 = v1[22];
    v7 = v1[21];
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v22 = v9;
    *(_DWORD *)v8 = 136315138;
    swift_bridgeObjectRetain(v6);
    v1[20] = sub_1000E3AC8(v7, v6, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 20, v1 + 21, v8 + 4);
    swift_bridgeObjectRelease_n(v6, 3);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "getKeySigningKey called for credential identifier : %s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21, v20);
  }
  else
  {
    v11 = v1[28];
    v10 = v1[29];
    v12 = v1[27];
    swift_bridgeObjectRelease_n(v1[22], 2);

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  v13 = v1 + 2;
  v14 = (void *)v1[23];
  v15 = String._bridgeToObjectiveC()();
  v1[30] = v15;
  v1[7] = v1 + 18;
  v1[2] = v1;
  v1[3] = sub_1001F8C80;
  v16 = swift_continuation_init(v1 + 2, 1);
  v1[10] = _NSConcreteStackBlock;
  v17 = v1 + 10;
  v17[1] = 0x40000000;
  v17[2] = sub_1000180F8;
  v17[3] = &unk_10060B230;
  v17[4] = v16;
  objc_msgSend(v14, "generateKeySigningKeyForCredential:completion:", v15, v17);
  return swift_continuation_await(v13);
}

uint64_t sub_1001F8C80(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *v1;
  v3 = *(_QWORD *)(v2 + 48);
  *(_QWORD *)(v2 + 248) = v3;
  v4 = *(void **)(v2 + 240);
  if (v3)
  {
    swift_willThrow(a1);

    return swift_task_switch(sub_1001F8D34, 0, 0);
  }
  else
  {
    v6 = *(_QWORD *)(v2 + 232);
    v7 = *(_QWORD *)(v2 + 208);
    v8 = *(_QWORD *)(v2 + 144);

    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    return (*(uint64_t (**)(uint64_t))(v2 + 8))(v8);
  }
}

uint64_t sub_1001F8D34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  void *object;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 232);
  v4 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 208);
  v5 = *(_QWORD *)(v0 + 192);
  _StringGuts.grow(_:)(51);
  v6._countAndFlagsBits = 0xD000000000000031;
  v6._object = (void *)0x80000001005541A0;
  String.append(_:)(v6);
  swift_getErrorValue(v1, v0 + 152, v0 + 120);
  v7._countAndFlagsBits = Error.localizedDescription.getter(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136));
  object = v7._object;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(object);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v3, enum case for DIPError.Code.unableToGenerateAttestations(_:), v5);
  v9 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
  v10 = type metadata accessor for DIPError(0);
  v11 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
  swift_allocError(v10, v11, 0, 0);
  v12 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, 0, v3, 0, v9, 0xD000000000000081, 0x80000001005541E0, 0xD000000000000026, 0x8000000100554270, 73);
  swift_willThrow(v12);
  swift_errorRelease(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001F8EE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4[20] = a3;
  v4[21] = v3;
  v4[18] = a1;
  v4[19] = a2;
  v5 = type metadata accessor for DIPError.Code(0);
  v4[22] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[23] = v6;
  v4[24] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  v4[25] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[26] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[27] = swift_task_alloc(v9);
  v4[28] = swift_task_alloc(v9);
  v4[29] = swift_task_alloc(v9);
  v4[30] = swift_task_alloc(v9);
  v10 = type metadata accessor for Milestone(0);
  v4[31] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v4[32] = v11;
  v4[33] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001F8FC4, 0, 0);
}

uint64_t sub_1001F8FC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *inited;
  void *v9;
  id v10;
  _QWORD *v11;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = IdentityProofingConfiguration.accountKeyIdentifier.getter();
  *(_QWORD *)(v0 + 272) = v1;
  *(_QWORD *)(v0 + 280) = v2;
  if (v2)
  {
    v3 = IdentityProofingConfiguration.accountKeyIdentifier.getter();
    v5 = v4;
    v6 = type metadata accessor for DIPAccountManager(0);
    static DIPAccountManager.sharedInstance.getter((_QWORD *)(v0 + 104), v6);
    v7 = type metadata accessor for IdentityProofingDeviceMigrationManager();
    inited = (_QWORD *)swift_initStackObject(v7, v0 + 16);
    *(_QWORD *)(v0 + 288) = inited;
    inited[2] = 0;
    if (qword_10062F478 != -1)
      swift_once(&qword_10062F478, sub_1000DECC0);
    v9 = *(void **)(qword_100670250 + 16);
    inited[3] = v9;
    inited[4] = v3;
    inited[5] = v5;
    v10 = v9;
    swift_bridgeObjectRelease(0);
    sub_100008018((__int128 *)(v0 + 104), (uint64_t)(inited + 6));
    v11 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    *(_QWORD *)(v0 + 296) = v11;
    *v11 = v0;
    v11[1] = sub_1001F91FC;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 448, 0, 0, 0xD00000000000001FLL, 0x8000000100554070, sub_1001FC6FC, inited, &type metadata for Bool);
  }
  else
  {
    v13 = defaultLogger()(v1);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.debug.getter(v14);
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "accountKeyIdentifier doesn't exist. Will not generate AccountKAK based authorizations", v16, 2u);
      swift_slowDealloc(v16, -1, -1);
    }
    v18 = *(_QWORD *)(v0 + 208);
    v17 = *(_QWORD *)(v0 + 216);
    v19 = *(_QWORD *)(v0 + 200);

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    v20 = *(_QWORD *)(v0 + 232);
    v21 = *(_QWORD *)(v0 + 240);
    v23 = *(_QWORD *)(v0 + 216);
    v22 = *(_QWORD *)(v0 + 224);
    v24 = *(_QWORD *)(v0 + 192);
    swift_task_dealloc(*(_QWORD *)(v0 + 264));
    swift_task_dealloc(v21);
    swift_task_dealloc(v20);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    return (*(uint64_t (**)(_QWORD *))(v0 + 8))(_swiftEmptyArrayStorage);
  }
}

uint64_t sub_1001F91FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 296);
  *(_QWORD *)(*(_QWORD *)v1 + 304) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1001F93F0;
  else
    v3 = sub_1001F9260;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001F9260()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (*(_BYTE *)(v0 + 448) == 1)
  {
    v1 = (_QWORD *)swift_task_alloc(dword_100635554);
    *(_QWORD *)(v0 + 312) = v1;
    *v1 = v0;
    v1[1] = sub_1001F9478;
    return sub_10011C58C();
  }
  else
  {
    v3 = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 280));
    v4 = defaultLogger()(v3);
    v5 = Logger.logObject.getter(v4);
    v6 = static os_log_type_t.debug.getter(v5);
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "isAccountKeySigningKeyAvailable -> False. Will not generate AccountKAK based authorizations", v7, 2u);
      swift_slowDealloc(v7, -1, -1);
    }
    v8 = *(_QWORD *)(v0 + 288);
    v9 = *(_QWORD *)(v0 + 224);
    v10 = *(_QWORD *)(v0 + 200);
    v11 = *(_QWORD *)(v0 + 208);

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    swift_setDeallocating(v8);

    swift_bridgeObjectRelease(*(_QWORD *)(v8 + 40));
    _s8coreidvd24DigitalPresentmentHelperVwxx_0((_QWORD *)(v8 + 48));
    v12 = *(_QWORD *)(v0 + 232);
    v13 = *(_QWORD *)(v0 + 240);
    v15 = *(_QWORD *)(v0 + 216);
    v14 = *(_QWORD *)(v0 + 224);
    v16 = *(_QWORD *)(v0 + 192);
    swift_task_dealloc(*(_QWORD *)(v0 + 264));
    swift_task_dealloc(v13);
    swift_task_dealloc(v12);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    return (*(uint64_t (**)(_QWORD *))(v0 + 8))(_swiftEmptyArrayStorage);
  }
}

uint64_t sub_1001F93F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 288);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 280));
  swift_release(v1);
  v3 = *(_QWORD *)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 240);
  v5 = *(_QWORD *)(v0 + 216);
  v4 = *(_QWORD *)(v0 + 224);
  v6 = *(_QWORD *)(v0 + 192);
  swift_task_dealloc(*(_QWORD *)(v0 + 264));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001F9478(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 312);
  v3[40] = a1;
  v3[41] = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    swift_bridgeObjectRelease(v3[35]);
    v5 = sub_1001F9F6C;
  }
  else
  {
    v5 = sub_1001F94EC;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1001F94EC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  Swift::String v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t);
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  id v55;
  _QWORD *v56;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t (*v74)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = *(void **)(v0 + 320);
  v3 = *(_QWORD *)(v0 + 256);
  v2 = *(_QWORD *)(v0 + 264);
  v4 = *(_QWORD *)(v0 + 248);
  static DeviceMigrationMilestone.accountKAKRetrieved.getter();
  Milestone.log()();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v5 = objc_msgSend(v1, "casdAttestation");
  if (!v5)
  {
    v23 = *(void **)(v0 + 320);
    v24 = *(_QWORD *)(v0 + 288);
    v26 = *(_QWORD *)(v0 + 184);
    v25 = *(_QWORD *)(v0 + 192);
    v27 = *(_QWORD *)(v0 + 176);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 280));
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v26 + 104))(v25, enum case for DIPError.Code.invalidAccountKeySigningKey(_:), v27);
    v28 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v29 = type metadata accessor for DIPError(0);
    v30 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    swift_allocError(v29, v30, 0, 0);
    v31 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000045, 0x8000000100554090, 0, v25, 0, v28, 0xD00000000000007CLL, 0x80000001005535D0, 0xD000000000000051, 0x80000001005540E0, 676);
    swift_willThrow(v31);

    v32 = v24;
LABEL_10:
    swift_release(v32);
    goto LABEL_11;
  }
  v6 = v5;
  v7 = *(void **)(v0 + 320);
  v8 = *(_QWORD *)(v0 + 328);
  v9 = *(_QWORD *)(v0 + 168);
  v10 = *(_QWORD *)(v0 + 152);
  v11 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v13 = v12;

  v14 = Data.base64EncodedString(options:)(0);
  sub_100007F8C(v11, v13);
  v15 = sub_100004828(&qword_100640CA0);
  v16 = swift_allocObject(v15, 48, 7);
  *(_QWORD *)(v0 + 336) = v16;
  *(_OWORD *)(v16 + 16) = xmmword_10051FFB0;
  *(Swift::String *)(v16 + 32) = v14;
  v17 = *(_QWORD *)(v9 + 80);
  swift_retain(v17);
  v18 = sub_10040AC6C(v7, v10);
  *(_QWORD *)(v0 + 344) = v18;
  *(_QWORD *)(v0 + 352) = v19;
  if (!v8)
  {
    v33 = v18;
    v34 = v19;
    v35 = *(_QWORD *)(v0 + 152);
    swift_release(v17);
    v36 = Data.base64EncodedString(options:)(0);
    *(Swift::String *)(v0 + 360) = v36;
    v37 = *(_QWORD *)(v35 + 40);
    *(_QWORD *)(v0 + 376) = v37;
    swift_bridgeObjectRetain(v16);
    v73 = v37;
    swift_bridgeObjectRetain(v37);
    v39 = defaultLogger()(v38);
    v40 = Logger.logObject.getter(v39);
    v41 = static os_log_type_t.debug.getter(v40);
    if (os_log_type_enabled(v40, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v42 = 0;
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "Proofing Key signing account key signing key authorization generated", v42, 2u);
      swift_slowDealloc(v42, -1, -1);
    }
    v43 = *(_QWORD *)(v0 + 240);
    v45 = *(_QWORD *)(v0 + 200);
    v44 = *(_QWORD *)(v0 + 208);
    v46 = *(_QWORD *)(v0 + 168);

    v47 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
    *(_QWORD *)(v0 + 384) = v47;
    v47(v43, v45);
    v48 = (uint64_t *)(v46 + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_phoneCredentialIdentifier);
    v49 = *(_QWORD *)(v46 + OBJC_IVAR____TtC8coreidvd30IdentityProofingRequestManager_phoneCredentialIdentifier + 8);
    *(_QWORD *)(v0 + 392) = v49;
    if (v49)
    {
      v50 = *(_QWORD *)(v0 + 280);
      v51 = *v48;
      v52 = *(_QWORD *)(v9 + 80);
      *(_QWORD *)(v0 + 400) = v52;
      v53 = *(void **)(qword_100670250 + 16);
      *(_QWORD *)(v0 + 408) = v53;
      v54 = unk_1006403C4;
      v74 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1006403C0
                                                                                + dword_1006403C0);
      swift_bridgeObjectRetain(v49);
      swift_retain(v52);
      v55 = v53;
      v56 = (_QWORD *)swift_task_alloc(v54);
      *(_QWORD *)(v0 + 416) = v56;
      *v56 = v0;
      v56[1] = sub_1001F9A3C;
      return v74(v51, v49, *(_QWORD *)(v0 + 272), v50, (uint64_t)v55);
    }
    v58 = *(void **)(v0 + 320);
    v59 = *(_QWORD *)(v0 + 280);
    v60 = *(_QWORD *)(v0 + 288);
    v61 = *(_QWORD *)(v0 + 184);
    v62 = *(_QWORD *)(v0 + 192);
    v63 = *(_QWORD *)(v0 + 176);
    swift_bridgeObjectRelease_n(v16, 2);
    swift_bridgeObjectRelease(v36._object);
    swift_bridgeObjectRelease(v73);
    swift_bridgeObjectRelease(v59);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v61 + 104))(v62, enum case for DIPError.Code.credentialIdentifierDoesNotExist(_:), v63);
    v64 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v65 = type metadata accessor for DIPError(0);
    v66 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    swift_allocError(v65, v66, 0, 0);
    v67 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000027, 0x8000000100554140, 0, v62, 0, v64, 0xD00000000000007CLL, 0x80000001005535D0, 0xD000000000000051, 0x80000001005540E0, 690);
    swift_willThrow(v67);
    sub_100007F8C(v33, v34);

    v32 = v60;
    goto LABEL_10;
  }
  v20 = *(void **)(v0 + 320);
  v22 = *(_QWORD *)(v0 + 280);
  v21 = *(_QWORD *)(v0 + 288);
  swift_release(v17);
  swift_bridgeObjectRelease(v16);

  swift_release(v21);
  swift_bridgeObjectRelease(v22);
LABEL_11:
  v69 = *(_QWORD *)(v0 + 232);
  v68 = *(_QWORD *)(v0 + 240);
  v71 = *(_QWORD *)(v0 + 216);
  v70 = *(_QWORD *)(v0 + 224);
  v72 = *(_QWORD *)(v0 + 192);
  swift_task_dealloc(*(_QWORD *)(v0 + 264));
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001F9A3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)();
  uint64_t v14;

  v4 = *(_QWORD **)v3;
  v5 = *(_QWORD *)(*(_QWORD *)v3 + 416);
  v4[53] = a1;
  v4[54] = a2;
  v4[55] = v2;
  swift_task_dealloc(v5);
  v7 = v4[50];
  v6 = (void *)v4[51];
  v8 = v4[49];
  if (v2)
  {
    v10 = v4[46];
    v9 = v4[47];
    v11 = v4[42];
    v12 = v4[35];

    swift_release(v7);
    swift_bridgeObjectRelease_n(v11, 2);
    swift_bridgeObjectRelease(v10);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v12);
    v13 = sub_1001F9ED8;
  }
  else
  {
    v14 = v4[35];

    swift_release(v7);
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v14);
    v13 = sub_1001F9B28;
  }
  return swift_task_switch(v13, 0, 0);
}

uint64_t sub_1001F9B28()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  Swift::String v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  void *v45;
  void *v46;
  uint64_t v47;

  v1 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 424);
  v2 = *(_QWORD *)(v0 + 432);
  if (v1)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + 160));
    v4 = Data.base64EncodedString(options:)(0);
    v5 = defaultLogger()(v4._countAndFlagsBits);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.debug.getter(v6);
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Account Key signing key signing device key signing key authorization generated", v8, 2u);
      swift_slowDealloc(v8, -1, -1);
    }
    v9 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
    v40 = *(_QWORD *)(v0 + 376);
    v10 = *(_QWORD *)(v0 + 360);
    v11 = *(_QWORD *)(v0 + 368);
    v43 = *(_QWORD *)(v0 + 352);
    v44 = *(_QWORD *)(v0 + 432);
    v12 = *(_QWORD *)(v0 + 336);
    v41 = *(_QWORD *)(v0 + 344);
    v42 = *(_QWORD *)(v0 + 424);
    v45 = *(void **)(v0 + 320);
    v13 = *(_QWORD *)(v0 + 288);
    v14 = *(_QWORD *)(v0 + 232);
    v15 = *(_QWORD *)(v0 + 200);

    v9(v14, v15);
    v16 = sub_100004828(&qword_100634100);
    v17 = swift_allocObject(v16, 96, 7);
    *(_OWORD *)(v17 + 16) = xmmword_1005208D0;
    *(_QWORD *)(v17 + 32) = v10;
    *(_QWORD *)(v17 + 40) = v11;
    *(_QWORD *)(v17 + 48) = v12;
    *(_QWORD *)(v17 + 56) = v40;
    *(Swift::String *)(v17 + 64) = v4;
    *(_QWORD *)(v17 + 80) = v1;
    *(_QWORD *)(v17 + 88) = v12;
    sub_100007F8C(v42, v44);
    sub_100007F8C(v41, v43);

    swift_setDeallocating(v13);
    swift_bridgeObjectRelease(*(_QWORD *)(v13 + 40));
    _s8coreidvd24DigitalPresentmentHelperVwxx_0((_QWORD *)(v13 + 48));
    v19 = *(_QWORD *)(v0 + 232);
    v18 = *(_QWORD *)(v0 + 240);
    v21 = *(_QWORD *)(v0 + 216);
    v20 = *(_QWORD *)(v0 + 224);
    v22 = *(_QWORD *)(v0 + 192);
    swift_task_dealloc(*(_QWORD *)(v0 + 264));
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v17);
  }
  else
  {
    v25 = *(_QWORD *)(v0 + 368);
    v24 = *(_QWORD *)(v0 + 376);
    v27 = *(_QWORD *)(v0 + 344);
    v26 = *(_QWORD *)(v0 + 352);
    v46 = *(void **)(v0 + 320);
    v47 = *(_QWORD *)(v0 + 288);
    v28 = *(_QWORD *)(v0 + 184);
    v29 = *(_QWORD *)(v0 + 192);
    v30 = *(_QWORD *)(v0 + 176);
    swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 336), 2);
    swift_bridgeObjectRelease(v25);
    swift_bridgeObjectRelease(v24);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v28 + 104))(v29, enum case for DIPError.Code.invalidDeviceKeySigningKeyAttestation(_:), v30);
    v31 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v32 = type metadata accessor for DIPError(0);
    v33 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    swift_allocError(v32, v33, 0, 0);
    v34 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000002ALL, 0x8000000100554170, 0, v29, 0, v31, 0xD00000000000007CLL, 0x80000001005535D0, 0xD000000000000051, 0x80000001005540E0, 699);
    swift_willThrow(v34);
    sub_100007F8C(v3, v2);
    sub_100007F8C(v27, v26);

    swift_release(v47);
    v35 = *(_QWORD *)(v0 + 232);
    v36 = *(_QWORD *)(v0 + 240);
    v38 = *(_QWORD *)(v0 + 216);
    v37 = *(_QWORD *)(v0 + 224);
    v39 = *(_QWORD *)(v0 + 192);
    swift_task_dealloc(*(_QWORD *)(v0 + 264));
    swift_task_dealloc(v36);
    swift_task_dealloc(v35);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1001F9ED8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(void **)(v0 + 320);
  v2 = *(_QWORD *)(v0 + 288);
  sub_100007F8C(*(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 352));

  swift_release(v2);
  v4 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 240);
  v6 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 224);
  v7 = *(_QWORD *)(v0 + 192);
  swift_task_dealloc(*(_QWORD *)(v0 + 264));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001F9F6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_release(*(_QWORD *)(v0 + 288));
  v2 = *(_QWORD *)(v0 + 232);
  v1 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 224);
  v5 = *(_QWORD *)(v0 + 192);
  swift_task_dealloc(*(_QWORD *)(v0 + 264));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001F9FEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[8] = a2;
  v3[9] = a3;
  v3[7] = a1;
  v4 = type metadata accessor for DIPError.Code(0);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v3[12] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  v3[13] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[14] = v7;
  v3[15] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001FA078, 0, 0);
}

uint64_t sub_1001FA078(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  unint64_t v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = v1[8];
  defaultLogger()(a1);
  v3 = swift_bridgeObjectRetain_n(v2, 2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.debug.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v15 = v1[14];
    v16 = v1[13];
    v17 = v1[15];
    v6 = v1[8];
    v7 = v1[7];
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v18 = v9;
    *(_DWORD *)v8 = 136315138;
    swift_bridgeObjectRetain(v6);
    v1[6] = sub_1000E3AC8(v7, v6, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 6, v1 + 7, v8 + 4);
    swift_bridgeObjectRelease_n(v6, 3);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "getKeySigningKey called for credential identifier : %s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v16);
  }
  else
  {
    v11 = v1[14];
    v10 = v1[15];
    v12 = v1[13];
    swift_bridgeObjectRelease_n(v1[8], 2);

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  v13 = (_QWORD *)swift_task_alloc(dword_10062FE6C);
  v1[16] = v13;
  *v13 = v1;
  v13[1] = sub_1001FA258;
  return sub_10001B540(v1[7], v1[8]);
}

uint64_t sub_1001FA258(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = *(_QWORD *)(*v2 + 128);
  v5 = *v2;
  *(_QWORD *)(v5 + 136) = v1;
  swift_task_dealloc(v4);
  if (v1)
    return swift_task_switch(sub_1001FA2F0, 0, 0);
  v7 = *(_QWORD *)(v5 + 96);
  swift_task_dealloc(*(_QWORD *)(v5 + 120));
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(uint64_t))(v5 + 8))(a1);
}

uint64_t sub_1001FA2F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  void *object;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 80);
  _StringGuts.grow(_:)(51);
  v6._countAndFlagsBits = 0xD000000000000031;
  v6._object = (void *)0x80000001005541A0;
  String.append(_:)(v6);
  swift_getErrorValue(v1, v0 + 40, v0 + 16);
  v7._countAndFlagsBits = Error.localizedDescription.getter(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  object = v7._object;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(object);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v3, enum case for DIPError.Code.unableToGenerateAttestations(_:), v5);
  v9 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
  v10 = type metadata accessor for DIPError(0);
  v11 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
  swift_allocError(v10, v11, 0, 0);
  v12 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, 0, v3, 0, v9, 0xD000000000000081, 0x80000001005541E0, 0xD000000000000026, 0x8000000100554270, 73);
  swift_willThrow(v12);
  swift_errorRelease(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1001FA4A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, const void *a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t (*v37)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t (*v55)(char *, uint64_t);
  uint8_t *v56;
  uint8_t *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint64_t (*v63)(char *, uint64_t);
  uint8_t *v64;
  uint8_t *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  unint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  const void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  const void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  const void *v97;
  uint64_t (*v98)(_QWORD, _QWORD);
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __int128 v105[2];
  __int128 v106[3];
  __int128 v107;
  __int128 v108;
  char v109[8];
  uint64_t v110;

  v104 = a4;
  v85 = a3;
  v87 = a2;
  v86 = a1;
  v94 = type metadata accessor for DIPError.Code(0);
  v93 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin(v94);
  v95 = (char *)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = type metadata accessor for DIPError(0);
  v99 = *(_QWORD *)(v102 - 8);
  v7 = __chkstk_darwin(v102);
  v90 = (char *)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v100 = (char *)&v85 - v10;
  __chkstk_darwin(v9);
  v88 = (char *)&v85 - v11;
  v98 = (uint64_t (*)(_QWORD, _QWORD))type metadata accessor for DIPHTTPSession.Configuration(0);
  __chkstk_darwin(v98);
  v13 = (char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for UUID(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for Logger(0);
  v18 = *(_QWORD *)(v103 - 8);
  v19 = __chkstk_darwin(v103);
  v92 = (char *)&v85 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v19);
  v89 = (char *)&v85 - v22;
  v23 = __chkstk_darwin(v21);
  v91 = (char *)&v85 - v24;
  v25 = __chkstk_darwin(v23);
  v27 = (char *)&v85 - v26;
  __chkstk_darwin(v25);
  v29 = (char *)&v85 - v28;
  v30 = swift_allocObject(&unk_10060AF20, 24, 7);
  *(_QWORD *)(v30 + 16) = a5;
  v31 = swift_allocObject(&unk_10060AF48, 32, 7);
  *(_QWORD *)(v31 + 16) = sub_1001FB220;
  *(_QWORD *)(v31 + 24) = v30;
  v101 = v31;
  _Block_copy(a5);
  v97 = a5;
  _Block_copy(a5);
  v96 = v30;
  v32 = swift_retain(v30);
  v33 = defaultLogger()(v32);
  v34 = Logger.logObject.getter(v33);
  v35 = static os_log_type_t.debug.getter(v34);
  if (os_log_type_enabled(v34, v35))
  {
    v36 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v36 = 0;
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "----STARTING EXTENDED REVIEW PROOFING REQUEST----", v36, 2u);
    swift_slowDealloc(v36, -1, -1);
  }

  v37 = *(uint64_t (**)(char *, uint64_t))(v18 + 8);
  v38 = v103;
  v39 = v37(v29, v103);
  v40 = UUID.init()(v39);
  v41 = UUID.uuidString.getter(v40);
  v43 = v42;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  if (qword_10062F5C8 != -1)
    swift_once(&qword_10062F5C8, sub_1004E0C10);
  v44 = sub_1000352C0((uint64_t)v98, (uint64_t)qword_100670848);
  sub_100035DE8(v44, (uint64_t)v13, type metadata accessor for DIPHTTPSession.Configuration);
  v45 = objc_allocWithZone((Class)type metadata accessor for DIPTopekaWebService(0));
  v46 = sub_10024000C(v41, v43, (uint64_t)v13);
  v47 = v104;
  v48 = *(void **)(v104 + 24);
  *(_QWORD *)(v104 + 24) = v46;

  v49 = *(_QWORD *)(v47 + 120) + 136;
  swift_beginAccess(v49, v109, 0, 0);
  sub_100038B24(v49, (uint64_t)&v107, &qword_1006384C8);
  v50 = v99;
  if (*((_QWORD *)&v108 + 1))
  {
    v51 = sub_100008018(&v107, (uint64_t)&v110);
    v52 = defaultLogger()(v51);
    v53 = Logger.logObject.getter(v52);
    v54 = static os_log_type_t.debug.getter(v53);
    if (os_log_type_enabled(v53, v54))
    {
      v55 = v37;
      v56 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v56 = 0;
      _os_log_impl((void *)&_mh_execute_header, v53, v54, "Workflow exists, going forward with proofing", v56, 2u);
      v57 = v56;
      v37 = v55;
      swift_slowDealloc(v57, -1, -1);
    }

    v58 = v37(v27, v38);
    v59 = v91;
    v60 = defaultLogger()(v58);
    v61 = Logger.logObject.getter(v60);
    v62 = static os_log_type_t.debug.getter(v61);
    if (os_log_type_enabled(v61, v62))
    {
      v63 = v37;
      v64 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v64 = 0;
      _os_log_impl((void *)&_mh_execute_header, v61, v62, "encrypting authcode idv data for issuer", v64, 2u);
      v65 = v64;
      v37 = v63;
      swift_slowDealloc(v65, -1, -1);
    }

    v98 = (uint64_t (*)(_QWORD, _QWORD))v37;
    v37(v59, v38);
    sub_10002581C((uint64_t)&v110, (uint64_t)v106);
    v66 = swift_allocObject(&unk_10060AF70, 64, 7);
    *(_QWORD *)(v66 + 16) = v47;
    sub_100008018(v106, v66 + 24);
    swift_retain(v47);
    runAsyncAndBlock<A>(timeout:file:function:line:_:)(0, 1, 0xD00000000000002DLL, 0x8000000100553690, 0xD000000000000030, 0x8000000100553650, 818, &unk_1006384D8, v66, &type metadata for IdentityKeyPair);
    v67 = v101;
    swift_release(v66);
    v76 = type metadata accessor for IdentityProofingDataContext();
    swift_allocObject(v76, 24, 7);
    sub_1000D6044();
    v78 = v77;
    sub_1001FB2F4((uint64_t)&v107, (uint64_t)v106);
    sub_10002581C((uint64_t)&v110, (uint64_t)v105);
    v79 = swift_allocObject(&unk_10060AF98, 160, 7);
    v80 = v85;
    *(_QWORD *)(v79 + 16) = v78;
    *(_QWORD *)(v79 + 24) = v80;
    v81 = v86;
    *(_QWORD *)(v79 + 32) = v47;
    *(_QWORD *)(v79 + 40) = v81;
    v82 = v87;
    *(_QWORD *)(v79 + 48) = v87;
    v83 = v106[1];
    *(_OWORD *)(v79 + 56) = v106[0];
    *(_OWORD *)(v79 + 72) = v83;
    *(_OWORD *)(v79 + 88) = v106[2];
    sub_100008018(v105, v79 + 104);
    *(_QWORD *)(v79 + 144) = sub_1001FB24C;
    *(_QWORD *)(v79 + 152) = v67;
    swift_retain(v47);
    swift_retain(v78);
    swift_bridgeObjectRetain(v82);
    swift_retain(v67);
    sub_1000D6570((uint64_t)sub_1001FB384, v79);
    swift_release(v78);
    swift_release(v79);
    sub_1001A496C(&v107);
    _s8coreidvd24DigitalPresentmentHelperVwxx_0(&v110);
    swift_release(v96);
    swift_release(v67);
    v84 = v97;
  }
  else
  {
    sub_100008030((uint64_t)&v107, &qword_1006384C8);
    v68 = v95;
    (*(void (**)(char *, _QWORD, uint64_t))(v93 + 104))(v95, enum case for DIPError.Code.missingIdentityWorkFlow(_:), v94);
    v69 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v70 = v88;
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000024, 0x80000001005535A0, 0, v68, 0, v69, 0xD00000000000007CLL, 0x80000001005535D0, 0xD000000000000030, 0x8000000100553650, 808);
    v71 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    v72 = v102;
    v73 = swift_allocError(v102, v71, 0, 0);
    (*(void (**)(uint64_t, char *, uint64_t))(v50 + 16))(v74, v70, v72);
    v75 = v97;
    _Block_copy(v97);
    sub_100438830(0, v73, (uint64_t)v75);
    _Block_release(v75);
    swift_errorRelease(v73);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v70, v72);
    swift_release(v96);
    swift_release(v101);
    v84 = v75;
  }
  _Block_release(v84);
}

uint64_t sub_1001FB1FC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_1001FB220(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1004AE85C(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1001FB228()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001FB24C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100436DEC(a1, a2, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 16));
}

uint64_t sub_1001FB254()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  _s8coreidvd24DigitalPresentmentHelperVwxx_0((_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1001FB280(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1006384D4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10001D0A0;
  v5[3] = v4;
  v5[4] = v1 + 24;
  v5[2] = a1;
  return swift_task_switch(sub_1001ECD00, 0, 0);
}

uint64_t sub_1001FB2F4(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for IdentityKeyPair(a2, a1);
  return a2;
}

uint64_t sub_1001FB330()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[6]);
  _s8coreidvd24DigitalPresentmentHelperVwxx_0(v0 + 7);
  swift_bridgeObjectRelease(v0[12]);
  _s8coreidvd24DigitalPresentmentHelperVwxx_0(v0 + 13);
  swift_release(v0[19]);
  return swift_deallocObject(v0, 160, 7);
}

void sub_1001FB384()
{
  uint64_t v0;

  sub_1001ECD6C(*(void (**)(uint64_t, uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void (**)(char *, uint64_t))(v0 + 40), *(void **)(v0 + 48), (_QWORD *)(v0 + 56), (_QWORD *)(v0 + 104), *(void (**)(void *, _QWORD))(v0 + 144));
}

uint64_t sub_1001FB3BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;

  v1 = sub_100004828(&qword_1006384E0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v6 + 48;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  v8 = (_QWORD *)(v0 + v6);
  _s8coreidvd24DigitalPresentmentHelperVwxx_0(v8);
  swift_bridgeObjectRelease(v8[5]);
  return swift_deallocObject(v0, v7, v5);
}

uint64_t sub_1001FB440(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(sub_100004828(&qword_1006384E0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1 + v5;
  v7 = v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)swift_task_alloc(dword_10063850C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10001D0A0;
  v8[3] = v6;
  v8[4] = v7;
  v8[2] = a1;
  return swift_task_switch(sub_1001EE31C, 0, 0);
}

_QWORD *sub_1001FB4E0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[5];
  v5 = a1[9];
  v6 = a1[11];
  v7 = a1[13];
  v8 = a1[17];
  swift_bridgeObjectRelease(a1[7]);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v8);
  return a1;
}

uint64_t sub_1001FB574(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc(dword_100638524);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10001D0A0;
  v4[2] = a1;
  v4[3] = v1;
  return swift_task_switch(sub_1001E59C0, 0, 0);
}

uint64_t sub_1001FB5D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IdentityProofingStaticWorkflow(0) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = v1 + ((v4 + 24) & ~v4);
  v7 = (_QWORD *)swift_task_alloc(dword_100638534);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10001D0A0;
  return sub_1001EE3B0(a1, v5, v6);
}

uint64_t sub_1001FB658(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc(dword_100638544);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10001D0A0;
  v4[2] = a1;
  v4[3] = v1;
  return swift_task_switch(sub_1001E59C0, 0, 0);
}

uint64_t sub_1001FB6B8()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[6]);
  swift_bridgeObjectRelease(v0[8]);
  swift_bridgeObjectRelease(v0[10]);
  _s8coreidvd24DigitalPresentmentHelperVwxx_0(v0 + 11);
  swift_bridgeObjectRelease(v0[17]);
  swift_bridgeObjectRelease(v0[19]);
  swift_bridgeObjectRelease(v0[22]);
  return swift_deallocObject(v0, 201, 7);
}

void sub_1001FB71C()
{
  uint64_t v0;

  sub_1001F1CE0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), (_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_BYTE *)(v0 + 184), *(_QWORD *)(v0 + 192),
    *(_BYTE *)(v0 + 200));
}

uint64_t sub_1001FB784()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = sub_100004828(&qword_1006384E0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_1001FB81C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(_QWORD *)(sub_100004828(&qword_1006384E0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = v1 + v5;
  v8 = (uint64_t *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v9 = *v8;
  v10 = v8[1];
  v11 = (_QWORD *)swift_task_alloc(dword_100638554);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_10001D0A0;
  return sub_1001F05E0(a1, v6, v7, v9, v10);
}

unint64_t sub_1001FB8C8()
{
  unint64_t result;

  result = qword_100638590;
  if (!qword_100638590)
  {
    result = swift_getWitnessTable(&unk_10052BA24, &type metadata for IDVData);
    atomic_store(result, (unint64_t *)&qword_100638590);
  }
  return result;
}

uint64_t sub_1001FB90C(unint64_t *a1, void (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_100013E24(&qword_100638580);
    a2();
    result = swift_getWitnessTable(a3, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001FB974()
{
  unint64_t result;

  result = qword_1006385A0;
  if (!qword_1006385A0)
  {
    result = swift_getWitnessTable(&unk_10052B9FC, &type metadata for IDVData);
    atomic_store(result, (unint64_t *)&qword_1006385A0);
  }
  return result;
}

uint64_t sub_1001FB9B8()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

unint64_t sub_1001FB9EC()
{
  uint64_t v0;

  return sub_1001EA344(v0);
}

uint64_t sub_1001FB9F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc(dword_1006385BC);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10001D0A0;
  v4[2] = a1;
  v4[3] = v1;
  return swift_task_switch(sub_1001EA7EC, 0, 0);
}

uint64_t sub_1001FBA54()
{
  return sub_1001FCEAC((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease, 40);
}

uint64_t sub_1001FBA6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;

  v7 = *(_OWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = swift_task_alloc(dword_1006385CC);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_10001D0A0;
  *(_QWORD *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v7;
  *(_QWORD *)(v5 + 16) = a1;
  return swift_task_switch(sub_1001EA97C, 0, 0);
}

uint64_t sub_1001FBAEC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v25;

  v1 = type metadata accessor for TiberiusWrappedAssessment(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 72) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(sub_100004828(&qword_1006384E8) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v25 = *(_QWORD *)(v8 + 64);
  swift_release(*((_QWORD *)v0 + 2));
  _s8coreidvd24DigitalPresentmentHelperVwxx_0((_QWORD *)v0 + 3);
  swift_bridgeObjectRelease(*((_QWORD *)v0 + 8));
  v10 = &v0[v4];
  swift_bridgeObjectRelease(*((_QWORD *)v10 + 1));
  v11 = *((_QWORD *)v10 + 3);
  if (v11)
  {
    swift_bridgeObjectRelease(v11);
    swift_bridgeObjectRelease(*((_QWORD *)v10 + 5));
    swift_bridgeObjectRelease(*((_QWORD *)v10 + 7));
    swift_bridgeObjectRelease(*((_QWORD *)v10 + 9));
  }
  v12 = *((_QWORD *)v10 + 14);
  if (v12 != 1)
  {
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(*((_QWORD *)v10 + 16));
  }
  v13 = (v9 + v7 + 8) & ~v9;
  swift_bridgeObjectRelease(*((_QWORD *)v10 + 19));
  v14 = &v10[*(int *)(v1 + 32)];
  v15 = type metadata accessor for AssessmentAdditionalInfo(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
  {
    swift_bridgeObjectRelease(*((_QWORD *)v14 + 1));
    v16 = &v14[*(int *)(v15 + 28)];
    v17 = sub_100004828(&qword_1006385E0);
    v18 = *(_QWORD *)(v17 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      (*(void (**)(char *, uint64_t))(v18 + 8))(v16, v17);
  }
  swift_bridgeObjectRelease(*(_QWORD *)&v0[v5]);
  swift_bridgeObjectRelease(*(_QWORD *)&v0[v6]);
  swift_bridgeObjectRelease(*(_QWORD *)&v0[v7]);
  v19 = type metadata accessor for LivenessDataV2(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(&v0[v13], 1, v19))
  {
    v20 = sub_100004828(&qword_100633968);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(&v0[v13], v20);
    v21 = &v0[v13 + *(int *)(v19 + 20)];
    swift_bridgeObjectRelease(*((_QWORD *)v21 + 2));
    swift_bridgeObjectRelease(*((_QWORD *)v21 + 3));
    swift_bridgeObjectRelease(*((_QWORD *)v21 + 9));
    swift_bridgeObjectRelease(*((_QWORD *)v21 + 11));
    swift_bridgeObjectRelease(*((_QWORD *)v21 + 12));
    swift_bridgeObjectRelease(*((_QWORD *)v21 + 13));
  }
  v22 = (v25 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease(*(_QWORD *)&v0[v22]);

  return swift_deallocObject(v0, v23 + 8, v3 | v9 | 7);
}

uint64_t sub_1001FBD50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;

  v3 = *(_QWORD *)(type metadata accessor for TiberiusWrappedAssessment(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_100004828(&qword_1006384E8);
  v14 = *(_QWORD *)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 64);
  v9 = *(_QWORD *)(v1 + v5);
  v10 = *(_QWORD *)(v1 + v6);
  v11 = *(_QWORD *)(v1 + v7);
  v12 = (_QWORD *)swift_task_alloc(dword_1006385DC);
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_10001D0A0;
  return sub_1001EB930(a1, v14, v1 + 24, v8, v1 + v4, v9, v10, v11);
}

uint64_t sub_1001FBE80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc(dword_1006385F4);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10001D0A0;
  v4[2] = a1;
  v4[3] = v1;
  return swift_task_switch(sub_1001EAEA0, 0, 0);
}

uint64_t sub_1001FBEE0()
{
  return sub_1001FCEAC((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease, 40);
}

uint64_t sub_1001FBEF8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_100638604);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10001D0A0;
  return sub_1001EAFD4(a1, v4, v5, v6);
}

uint64_t sub_1001FBF64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc(dword_100638614);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10001D0A0;
  v4[2] = a1;
  v4[3] = v1;
  return swift_task_switch(sub_1001EB344, 0, 0);
}

uint64_t sub_1001FBFC4()
{
  return sub_1001FCEAC((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease, 40);
}

uint64_t sub_1001FBFDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;

  v7 = *(_OWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = swift_task_alloc(dword_100638624);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_10001D0A0;
  *(_QWORD *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v7;
  *(_QWORD *)(v5 + 16) = a1;
  return swift_task_switch(sub_1001EB49C, 0, 0);
}

uint64_t sub_1001FC05C()
{
  return sub_1001FCEAC((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease, 40);
}

uint64_t sub_1001FC074(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;

  v7 = *(_OWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = swift_task_alloc(dword_100638634);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_10001D0A0;
  *(_QWORD *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v7;
  *(_QWORD *)(v5 + 16) = a1;
  return swift_task_switch(sub_1001EB5EC, 0, 0);
}

uint64_t sub_1001FC0F4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001FC128(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = swift_task_alloc(dword_10063864C);
  v7 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v6;
  *(_QWORD *)v6 = v2;
  *(_QWORD *)(v6 + 8) = sub_10001D0A0;
  *(_OWORD *)(v6 + 40) = v7;
  *(_QWORD *)(v6 + 24) = v4;
  *(_QWORD *)(v6 + 32) = v5;
  *(_QWORD *)(v6 + 16) = a1;
  return swift_task_switch(sub_1001EB720, 0, 0);
}

uint64_t sub_1001FC1A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc(dword_10063865C);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10001D0A0;
  v4[2] = a1;
  v4[3] = v1;
  return swift_task_switch(sub_1001EAB00, 0, 0);
}

uint64_t sub_1001FC200(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc(dword_10063866C);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_100007EE8;
  v4[2] = a1;
  v4[3] = v1;
  return swift_task_switch(sub_1001EABF4, 0, 0);
}

uint64_t sub_1001FC260()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  _s8coreidvd24DigitalPresentmentHelperVwxx_0((_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  return swift_deallocObject(v0, 88, 7);
}

uint64_t sub_1001FC2A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(v1 + 80);
  v5 = swift_task_alloc(dword_100638684);
  v6 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_10001D0A0;
  *(_QWORD *)(v5 + 40) = v1 + 32;
  *(_QWORD *)(v5 + 48) = v4;
  *(_OWORD *)(v5 + 24) = v6;
  *(_QWORD *)(v5 + 16) = a1;
  return swift_task_switch(sub_1001EAD40, 0, 0);
}

uint64_t sub_1001FC320()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  unint64_t v23;

  v1 = type metadata accessor for TiberiusWrappedAssessment(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 72) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(sub_100004828(&qword_1006384E8) - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  swift_release(*((_QWORD *)v0 + 2));
  _s8coreidvd24DigitalPresentmentHelperVwxx_0((_QWORD *)v0 + 3);
  swift_bridgeObjectRelease(*((_QWORD *)v0 + 8));
  v10 = &v0[v4];
  swift_bridgeObjectRelease(*((_QWORD *)v10 + 1));
  v11 = *((_QWORD *)v10 + 3);
  if (v11)
  {
    swift_bridgeObjectRelease(v11);
    swift_bridgeObjectRelease(*((_QWORD *)v10 + 5));
    swift_bridgeObjectRelease(*((_QWORD *)v10 + 7));
    swift_bridgeObjectRelease(*((_QWORD *)v10 + 9));
  }
  v12 = *((_QWORD *)v10 + 14);
  if (v12 != 1)
  {
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(*((_QWORD *)v10 + 16));
  }
  v13 = (v8 + v6 + 16) & ~v8;
  swift_bridgeObjectRelease(*((_QWORD *)v10 + 19));
  v14 = &v10[*(int *)(v1 + 32)];
  v15 = type metadata accessor for AssessmentAdditionalInfo(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
  {
    swift_bridgeObjectRelease(*((_QWORD *)v14 + 1));
    v16 = &v14[*(int *)(v15 + 28)];
    v17 = sub_100004828(&qword_1006385E0);
    v18 = *(_QWORD *)(v17 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      (*(void (**)(char *, uint64_t))(v18 + 8))(v16, v17);
  }
  swift_bridgeObjectRelease(*(_QWORD *)&v0[v5]);
  swift_bridgeObjectRelease(*(_QWORD *)&v0[v6 + 8]);
  v19 = type metadata accessor for LivenessDataV2(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(&v0[v13], 1, v19))
  {
    v20 = sub_100004828(&qword_100633968);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(&v0[v13], v20);
    v21 = &v0[v13 + *(int *)(v19 + 20)];
    swift_bridgeObjectRelease(*((_QWORD *)v21 + 2));
    swift_bridgeObjectRelease(*((_QWORD *)v21 + 3));
    swift_bridgeObjectRelease(*((_QWORD *)v21 + 9));
    swift_bridgeObjectRelease(*((_QWORD *)v21 + 11));
    swift_bridgeObjectRelease(*((_QWORD *)v21 + 12));
    swift_bridgeObjectRelease(*((_QWORD *)v21 + 13));
  }
  v22 = (v9 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = v22 + 8;

  return swift_deallocObject(v0, v23, v3 | v8 | 7);
}

uint64_t sub_1001FC558(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v3 = *(_QWORD *)(type metadata accessor for TiberiusWrappedAssessment(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_100004828(&qword_1006384E8);
  v7 = *(_QWORD *)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 64);
  v9 = *(_QWORD *)(v1 + v5);
  v10 = v1 + v6;
  v11 = *(_QWORD *)(v1 + v6);
  v12 = *(_QWORD *)(v10 + 8);
  v13 = (_QWORD *)swift_task_alloc(dword_10063869C);
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_10001D0A0;
  return sub_1001EA560(a1, v7, v1 + 24, v8, v1 + v4, v9, v11, v12);
}

uint64_t sub_1001FC66C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001FC67C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001FC6A0()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[4]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

void sub_1001FC6DC()
{
  uint64_t *v0;

  sub_1001F2E18(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

void sub_1001FC6FC(uint64_t a1)
{
  uint64_t v1;

  sub_10011C2C4(a1, v1);
}

_QWORD *sub_1001FC704(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a1[5];
  v5 = a1[7];
  v6 = a1[9];
  v7 = a1[11];
  v8 = a1[13];
  v9 = a1[15];
  v10 = a1[17];
  v12 = a1[19];
  v13 = a1[21];
  v14 = a1[23];
  v15 = a1[25];
  v16 = a1[27];
  v17 = a1[29];
  v18 = a1[31];
  v19 = a1[33];
  swift_bridgeObjectRetain(a1[35]);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRetain(v19);
  return a1;
}

unint64_t sub_1001FC82C()
{
  return sub_1001EF64C();
}

_QWORD *sub_1001FC834(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = a1[2];
  v3 = a1[4];
  v4 = a1[6];
  v5 = a1[8];
  v6 = a1[10];
  v7 = a1[12];
  v8 = a1[14];
  v9 = a1[16];
  v10 = a1[18];
  v12 = a1[20];
  v13 = a1[22];
  v14 = a1[24];
  v15 = a1[26];
  v16 = a1[28];
  v17 = a1[30];
  v18 = a1[32];
  v19 = a1[34];
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v15);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(v19);
  return a1;
}

unint64_t sub_1001FC960()
{
  uint64_t v0;

  return sub_1001EF6C8(*(uint64_t **)(v0 + 16));
}

uint64_t sub_1001FC968()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_1001FC990()
{
  uint64_t v0;

  sub_1001ECB68(*(_QWORD *)(v0 + 16), *(NSObject **)(v0 + 24), &enum case for DIPError.Code.idAlreadyProvisionedOnTheICloudAccount(_:), 0xD000000000000041, 0x8000000100554760, 788);
}

uint64_t sub_1001FC9CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001FC9DC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_1001FC9E8()
{
  uint64_t v0;

  sub_1001ECB68(*(_QWORD *)(v0 + 16), *(NSObject **)(v0 + 24), (unsigned int *)&enum case for DIPError.Code.provisioningIdentityFailed(_:), 0xD000000000000041, 0x8000000100554760, 779);
}

void sub_1001FCA28()
{
  uint64_t v0;

  sub_1001ECB68(*(_QWORD *)(v0 + 16), *(NSObject **)(v0 + 24), (unsigned int *)&enum case for DIPError.Code.topekaInternalServerError(_:), 0xD000000000000045, 0x80000001005546E0, 770);
}

uint64_t sub_1001FCA64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc(dword_1006386DC);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10001D0A0;
  v4[2] = a1;
  v4[3] = v1;
  return swift_task_switch(sub_1001E59C0, 0, 0);
}

uint64_t sub_1001FCAC8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = (int *)type metadata accessor for IdentityProofingStaticWorkflow(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  v6 = v0 + v4;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 64));
  v7 = v0 + v4 + v1[9];
  v8 = type metadata accessor for HardwareAttestationType(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[10]));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[11] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[12]));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[16] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[18]));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[19]));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[20]));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1001FCC04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IdentityProofingStaticWorkflow(0) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = v1 + ((v4 + 24) & ~v4);
  v7 = (_QWORD *)swift_task_alloc(dword_1006386EC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10001D0A0;
  return sub_1001E5A9C(a1, v5, v6);
}

uint64_t sub_1001FCC84()
{
  return sub_1001FCEAC((void (*)(_QWORD))&_swift_unknownObjectRelease, (void (*)(_QWORD))&_swift_release, 48);
}

uint64_t sub_1001FCC9C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1006386FC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10001D0A0;
  return sub_1001E5560(a1, v4, v5, v6);
}

uint64_t sub_1001FCD14()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

uint64_t sub_1001FCD38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  _QWORD *v5;
  _QWORD *v6;

  v4 = *(_BYTE *)(v1 + 24);
  v5 = (_QWORD *)swift_task_alloc(dword_10063870C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10001D0A0;
  v5[2] = a1;
  v6 = (_QWORD *)swift_task_alloc(dword_100638054);
  v5[3] = v6;
  *v6 = v5;
  v6[1] = sub_10016AB24;
  return sub_1001F2748(v4);
}

uint64_t sub_1001FCDBC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001FCDE8()
{
  uint64_t *v0;

  return sub_1001E5084(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1001FCDF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc(dword_10063871C);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10001D0A0;
  v4[2] = a1;
  v4[3] = v1;
  return swift_task_switch(sub_1001E4D58, 0, 0);
}

uint64_t sub_1001FCE54()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001FCE64()
{
  return sub_1001FCEAC((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release, 40);
}

void sub_1001FCE78()
{
  uint64_t *v0;

  sub_1001E4E10(v0[2], v0[3], v0[4]);
}

uint64_t sub_1001FCE94()
{
  return sub_1001FCEAC((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease, 40);
}

uint64_t sub_1001FCEAC(void (*a1)(_QWORD), void (*a2)(_QWORD), uint64_t a3)
{
  uint64_t v3;

  a1(*(_QWORD *)(v3 + 16));
  a2(*(_QWORD *)(v3 + 32));
  return swift_deallocObject(v3, a3, 7);
}

uint64_t sub_1001FCEF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *(_OWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = swift_task_alloc(dword_10063872C);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_10001D0A0;
  *(_QWORD *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v5;
  return swift_task_switch(sub_1001E5454, 0, 0);
}

uint64_t sub_1001FCF64()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001FCF74()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_bridgeObjectRelease(v0[5]);
  swift_release(v0[6]);
  swift_release(v0[7]);
  return swift_deallocObject(v0, 64, 7);
}

void sub_1001FCFB0()
{
  _QWORD *v0;

  sub_1001F21A4(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7]);
}

uint64_t sub_1001FD004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int128 a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v20;
  uint64_t v21;

  *(_QWORD *)(v14 + 16) = 0;
  v20 = type metadata accessor for IdentityProofingDatabaseProvider();
  v21 = swift_allocObject(v20, 16, 7);
  *(_QWORD *)(v14 + 48) = a3;
  *(_QWORD *)(v14 + 56) = v21;
  *(_QWORD *)(v14 + 32) = a1;
  *(_QWORD *)(v14 + 40) = a2;
  *(_QWORD *)(v14 + 128) = a5;
  *(_QWORD *)(v14 + 136) = a7;
  *(_QWORD *)(v14 + 24) = a8;
  *(_QWORD *)(v14 + 144) = a9;
  *(_OWORD *)(v14 + 64) = a10;
  *(_QWORD *)(v14 + 80) = a11;
  *(_QWORD *)(v14 + 88) = a12;
  *(_QWORD *)(v14 + 96) = a4;
  *(_QWORD *)(v14 + 104) = a6;
  *(_QWORD *)(v14 + 112) = a13;
  *(_QWORD *)(v14 + 120) = a14;
  return v14;
}

uint64_t sub_1001FD0D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v4[18] = a3;
  v4[19] = v3;
  v4[16] = a1;
  v4[17] = a2;
  v5 = type metadata accessor for DIPError.Code(0);
  v4[20] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[21] = v6;
  v4[22] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v4[23] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[24] = v8;
  v4[25] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v4[26] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v4[27] = v10;
  v4[28] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Logger(0);
  v4[29] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v4[30] = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[31] = swift_task_alloc(v13);
  v4[32] = swift_task_alloc(v13);
  v4[33] = swift_task_alloc(v13);
  v4[34] = swift_task_alloc(v13);
  return swift_task_switch(sub_1001FD1D4, 0, 0);
}

uint64_t sub_1001FD1D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  _BOOL4 v24;
  uint64_t v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  NSObject *v82;
  os_log_type_t v83;
  uint8_t *v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t (*v97)();
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  uint64_t v116;
  void (*v117)(uint64_t, uint64_t);
  uint64_t (*v118)(uint64_t, uint64_t, uint64_t, uint64_t, char, uint64_t);
  uint64_t v119;
  char v120;
  uint64_t v121;

  v2 = defaultLogger()(a1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.debug.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "STARTING prepareForProofingDisplay", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = *(void **)(v1 + 128);
  v7 = *(_QWORD *)(v1 + 272);
  v8 = *(_QWORD *)(v1 + 232);
  v9 = *(_QWORD *)(v1 + 240);
  v10 = *(_QWORD *)(v1 + 152);

  v11 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v11(v7, v8);
  v12 = *(void **)(v10 + 16);
  *(_QWORD *)(v10 + 16) = v6;
  v13 = v6;

  IdentityProofingConfiguration.state.getter(v14);
  if (!v15)
  {
    v34 = *(_QWORD *)(v1 + 176);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v1 + 168) + 104))(v34, enum case for DIPError.Code.idStateUnavailable(_:), *(_QWORD *)(v1 + 160));
    v35 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v36 = type metadata accessor for DIPError(0);
    v37 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    swift_allocError(v36, v37, 0, 0);
    v38 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000003DLL, 0x8000000100554EF0, 0, v34, 0, v35, 0xD00000000000007CLL, 0x80000001005549D0, 0xD000000000000034, 0x8000000100554F30, 84);
    goto LABEL_10;
  }
  v16 = v15;
  v17 = *(_QWORD *)(v1 + 136);
  v18 = String.lowercased()();
  v19 = swift_bridgeObjectRelease(v16);
  *(Swift::String *)(v1 + 280) = v18;
  if (v17 == 2)
    v20 = 2;
  else
    v20 = 1;
  v21 = defaultLogger()(v19);
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.debug.getter(v22);
  v24 = os_log_type_enabled(v22, v23);
  v25 = *(_QWORD *)(v1 + 264);
  v26 = *(_QWORD *)(v1 + 232);
  v117 = v11;
  v116 = v20;
  if (v24)
  {
    v114 = *(_QWORD *)(v1 + 264);
    v27 = (uint8_t *)swift_slowAlloc(12, -1);
    v28 = swift_slowAlloc(32, -1);
    v119 = v28;
    *(_DWORD *)v27 = 136446210;
    v29 = IdentityTarget.debugDescription.getter(v20);
    v31 = v30;
    *(_QWORD *)(v1 + 120) = sub_1000E3AC8(v29, v30, &v119);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 120, v1 + 128, v27 + 4);
    swift_bridgeObjectRelease(v31);
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "The proofing target is %{public}s", v27, 0xCu);
    swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v28, -1, -1);
    swift_slowDealloc(v27, -1, -1);

    v32 = v114;
    v33 = v26;
  }
  else
  {

    v32 = v25;
    v33 = v26;
  }
  v39 = ((uint64_t (*)(uint64_t, uint64_t))v11)(v32, v33);
  v40 = IdentityProofingConfiguration.credentialIdentifier.getter(v39);
  if (!v41)
    goto LABEL_19;
  v42 = v40;
  v43 = v41;
  v44 = swift_bridgeObjectRelease(v41);
  v45 = HIBYTE(v43) & 0xF;
  if ((v43 & 0x2000000000000000) == 0)
    v45 = v42 & 0xFFFFFFFFFFFFLL;
  if (v45)
  {
    v46 = defaultLogger()(v44);
    v47 = Logger.logObject.getter(v46);
    v48 = static os_log_type_t.debug.getter(v47);
    if (os_log_type_enabled(v47, v48))
    {
      v49 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v49 = 0;
      _os_log_impl((void *)&_mh_execute_header, v47, v48, "Proofing has been invoked with a credential identifier, This is the XMAS watch scenario", v49, 2u);
      swift_slowDealloc(v49, -1, -1);
    }
    v50 = *(_QWORD *)(v1 + 256);
    v51 = *(_QWORD *)(v1 + 232);

    v11(v50, v51);
    v52 = 1;
  }
  else
  {
LABEL_19:
    v52 = 0;
  }
  *(_BYTE *)(v1 + 448) = v52;
  v53 = *(_QWORD *)(v1 + 152);
  v54 = *(_QWORD *)(v53 + 56);
  v55 = type metadata accessor for IdentityProofingDataContext();
  swift_allocObject(v55, 24, 7);
  swift_retain(v54);
  sub_1000D6044();
  v57 = v56;
  v115 = v52;
  v58 = (_QWORD *)swift_allocObject(&unk_10060B5C0, 40, 7);
  v58[2] = 0;
  v58[3] = 0;
  v58[4] = 0;
  v59 = swift_allocObject(&unk_10060B5E8, 72, 7);
  *(_QWORD *)(v59 + 16) = v57;
  *(Swift::String *)(v59 + 24) = v18;
  *(_QWORD *)(v59 + 40) = v116;
  *(_QWORD *)(v59 + 48) = 0;
  *(_QWORD *)(v59 + 56) = 0;
  *(_QWORD *)(v59 + 64) = v58;
  swift_retain(v57);
  swift_bridgeObjectRetain(v18._object);
  swift_retain(v58);
  sub_1000D6570((uint64_t)sub_10020A3F0, v59);
  swift_release(v59);
  swift_release(v57);
  swift_beginAccess(v58 + 2, v1 + 64, 0, 0);
  v67 = v58[2];
  v68 = v58[3];
  *(_QWORD *)(v1 + 296) = v67;
  *(_QWORD *)(v1 + 304) = v68;
  v69 = v58[4];
  *(_QWORD *)(v1 + 312) = v69;
  if (v68)
  {
    swift_bridgeObjectRetain(v68);
    swift_release(v54);
    swift_release(v58);
    v70 = *(_QWORD *)(v53 + 56);
    swift_retain(v70);
    v71 = sub_1004649D4(v67, v68);
    v73 = v72;
    swift_release(v70);
    *(_QWORD *)(v1 + 320) = v71;
    *(_QWORD *)(v1 + 328) = v73;
    v74 = *(_QWORD *)(v53 + 56);
    swift_bridgeObjectRetain(v68);
    swift_retain(v74);
    v75 = sub_100464BCC(v67, v68, v69, 0);
    swift_release(v74);
    swift_bridgeObjectRelease(v68);
    v76 = IdentityProofingActionStatus.rawValue.getter(v75);
    if (v76 == IdentityProofingActionStatus.rawValue.getter(2))
    {
      v77 = *(_QWORD *)(*(_QWORD *)(v1 + 152) + 120);
      *(_QWORD *)(v1 + 336) = v77;
      v78 = dword_10063DC8C;
      swift_retain(v77);
      v79 = (_QWORD *)swift_task_alloc(v78);
      *(_QWORD *)(v1 + 344) = v79;
      *v79 = v1;
      v79[1] = sub_1001FDDE0;
      return sub_100374B3C(v67, v68, v116);
    }
    v88 = IdentityProofingActionStatus.rawValue.getter(v75);
    if (v88 == IdentityProofingActionStatus.rawValue.getter(9))
    {
      swift_bridgeObjectRelease(v68);
      v89 = (_QWORD *)swift_task_alloc(dword_1006387A4);
      *(_QWORD *)(v1 + 376) = v89;
      *v89 = v1;
      v89[1] = sub_1001FE090;
      return sub_100207700(v18._countAndFlagsBits, (uint64_t)v18._object, v71, v73, 1, 0, *(_QWORD *)(v1 + 144));
    }
    v90 = v69;
    v91 = IdentityProofingActionStatus.rawValue.getter(v75);
    if (v91 == IdentityProofingActionStatus.rawValue.getter(1))
    {
      v92 = (_QWORD *)swift_task_alloc(dword_10063878C);
      *(_QWORD *)(v1 + 384) = v92;
      *v92 = v1;
      v92[1] = sub_1001FE154;
      return sub_100200AA4(v67, v68, v69);
    }
    v93 = IdentityProofingActionStatus.rawValue.getter(v75);
    if (v93 == IdentityProofingActionStatus.rawValue.getter(4)
      || (v94 = IdentityProofingActionStatus.rawValue.getter(v75),
          v94 == IdentityProofingActionStatus.rawValue.getter(10)))
    {
      swift_bridgeObjectRelease(v18._object);
      v95 = (_QWORD *)swift_task_alloc(dword_100638774);
      *(_QWORD *)(v1 + 400) = v95;
      *v95 = v1;
      v95[1] = sub_1001FE454;
      v96 = *(_QWORD *)(v1 + 152);
      v95[33] = *(_QWORD *)(v1 + 144);
      v95[34] = v96;
      v95[31] = v71;
      v95[32] = v73;
      v95[29] = v68;
      v95[30] = v90;
      v95[28] = v67;
      v97 = sub_1001FF700;
      return swift_task_switch(v97, 0, 0);
    }
    v98 = IdentityProofingActionStatus.rawValue.getter(v75);
    if (v98 == IdentityProofingActionStatus.rawValue.getter(12))
    {
      swift_bridgeObjectRelease(v18._object);
      v99 = swift_task_alloc(dword_10063877C);
      *(_QWORD *)(v1 + 408) = v99;
      *(_QWORD *)v99 = v1;
      *(_QWORD *)(v99 + 8) = sub_1001FE518;
      v100 = *(_QWORD *)(v1 + 152);
      v101 = *(_QWORD *)(v1 + 128);
      *(_QWORD *)(v99 + 160) = *(_QWORD *)(v1 + 144);
      *(_QWORD *)(v99 + 168) = v100;
      *(_BYTE *)(v99 + 216) = v115;
      *(_QWORD *)(v99 + 144) = v71;
      *(_QWORD *)(v99 + 152) = v73;
      *(_QWORD *)(v99 + 128) = v68;
      *(_QWORD *)(v99 + 136) = v90;
      *(_QWORD *)(v99 + 112) = v101;
      *(_QWORD *)(v99 + 120) = v67;
      v97 = sub_1001FF96C;
      return swift_task_switch(v97, 0, 0);
    }
    v102 = IdentityProofingActionStatus.rawValue.getter(v75);
    if (v102 == IdentityProofingActionStatus.rawValue.getter(0))
    {
      v103 = (_QWORD *)swift_task_alloc(dword_1006387B4);
      *(_QWORD *)(v1 + 416) = v103;
      *v103 = v1;
      v103[1] = sub_1001FE5DC;
      v121 = *(_QWORD *)(v1 + 144);
      v120 = v115;
      return sub_1002091C4(v75, v18._countAndFlagsBits, (uint64_t)v18._object, v67, v68, v90, v71, v73);
    }
    v104 = IdentityProofingActionStatus.rawValue.getter(v75);
    if (v104 == IdentityProofingActionStatus.rawValue.getter(6))
    {
      v105 = (_QWORD *)swift_task_alloc(dword_1006387B4);
      *(_QWORD *)(v1 + 424) = v105;
      *v105 = v1;
      v105[1] = sub_1001FE6AC;
      v121 = *(_QWORD *)(v1 + 144);
      v120 = 0;
      return sub_1002091C4(v75, v18._countAndFlagsBits, (uint64_t)v18._object, v67, v68, v90, v71, v73);
    }
    swift_bridgeObjectRelease(v18._object);
    v106 = IdentityProofingActionStatus.rawValue.getter(v75);
    if (v106 == IdentityProofingActionStatus.rawValue.getter(7))
    {
      v118 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char, uint64_t))((char *)&dword_100638AE8
                                                                                       + dword_100638AE8);
      v107 = (_QWORD *)swift_task_alloc(unk_100638AEC);
      *(_QWORD *)(v1 + 432) = v107;
      *v107 = v1;
      v107[1] = sub_1001FE8A4;
      return v118(v67, v68, v71, v73, v115, *(_QWORD *)(v1 + 144));
    }
    v109 = *(_QWORD *)(v1 + 168);
    v108 = *(_QWORD *)(v1 + 176);
    v110 = *(_QWORD *)(v1 + 160);
    swift_bridgeObjectRelease(v68);
    swift_bridgeObjectRelease(v73);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v109 + 104))(v108, enum case for DIPError.Code.serverUnavailable(_:), v110);
    v111 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v112 = type metadata accessor for DIPError(0);
    v113 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    swift_allocError(v112, v113, 0, 0);
    v38 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000003ELL, 0x8000000100554F70, 0, v108, 0, v111, 0xD00000000000007CLL, 0x80000001005549D0, 0xD000000000000034, 0x8000000100554F30, 190);
LABEL_10:
    swift_willThrow(v38);
    v60 = *(_QWORD *)(v1 + 264);
    v62 = *(_QWORD *)(v1 + 248);
    v61 = *(_QWORD *)(v1 + 256);
    v63 = *(_QWORD *)(v1 + 224);
    v64 = *(_QWORD *)(v1 + 200);
    v65 = *(_QWORD *)(v1 + 176);
    swift_task_dealloc(*(_QWORD *)(v1 + 272));
    swift_task_dealloc(v60);
    swift_task_dealloc(v61);
    swift_task_dealloc(v62);
    swift_task_dealloc(v63);
    swift_task_dealloc(v64);
    swift_task_dealloc(v65);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  swift_release(v54);
  v80 = swift_release(v58);
  v81 = defaultLogger()(v80);
  v82 = Logger.logObject.getter(v81);
  v83 = static os_log_type_t.debug.getter(v82);
  if (os_log_type_enabled(v82, v83))
  {
    v84 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v84 = 0;
    _os_log_impl((void *)&_mh_execute_header, v82, v83, "No proofing attempt made", v84, 2u);
    swift_slowDealloc(v84, -1, -1);
  }
  v85 = *(_QWORD *)(v1 + 248);
  v86 = *(_QWORD *)(v1 + 232);

  v117(v85, v86);
  v87 = (_QWORD *)swift_task_alloc(dword_100638784);
  *(_QWORD *)(v1 + 440) = v87;
  *v87 = v1;
  v87[1] = sub_1001FE968;
  return sub_1001FFB70(*(_QWORD *)(v1 + 144), *(_QWORD *)(v1 + 128), v115, v18._countAndFlagsBits, (uint64_t)v18._object);
}

uint64_t sub_1001FDDE0(char a1)
{
  uint64_t v1;
  uint64_t **v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t **v11;
  uint64_t **v12;

  v4 = (*v2)[43];
  v5 = *v2;
  v5[44] = v1;
  swift_task_dealloc(v4);
  v6 = v5[42];
  if (v1)
  {
    v7 = v5[41];
    v8 = v5[36];
    swift_release(v6);
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v7);
    return swift_task_switch(sub_1001FEA20, 0, 0);
  }
  else
  {
    v10 = v5[38];
    swift_release(v6);
    swift_bridgeObjectRelease(v10);
    if ((a1 & 1) != 0)
    {
      v11 = (uint64_t **)swift_task_alloc(dword_1006387A4);
      v5[45] = (uint64_t)v11;
      *v11 = v5;
      v11[1] = (uint64_t *)sub_1001FDF08;
      return sub_100207700(v5[35], v5[36], v5[40], v5[41], 0, 0, v5[18]);
    }
    else
    {
      v12 = (uint64_t **)swift_task_alloc(dword_10063876C);
      v5[46] = (uint64_t)v12;
      *v12 = v5;
      v12[1] = (uint64_t *)sub_1001FDFCC;
      return sub_1001FEDC8(v5[35], v5[36], v5[40], v5[41], v5[18]);
    }
  }
}

uint64_t sub_1001FDF08(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)(*v2 + 360);
  v5 = *v2;
  swift_task_dealloc(v4);
  v6 = *(_QWORD *)(v5 + 328);
  swift_bridgeObjectRelease(*(_QWORD *)(v5 + 288));
  swift_bridgeObjectRelease(v6);
  v7 = *(_QWORD *)(v5 + 264);
  v9 = *(_QWORD *)(v5 + 248);
  v8 = *(_QWORD *)(v5 + 256);
  v10 = *(_QWORD *)(v5 + 224);
  v11 = *(_QWORD *)(v5 + 200);
  v12 = *(_QWORD *)(v5 + 176);
  swift_task_dealloc(*(_QWORD *)(v5 + 272));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  v13 = swift_task_dealloc(v12);
  if (!v1)
    v13 = a1;
  return (*(uint64_t (**)(uint64_t))(v5 + 8))(v13);
}

uint64_t sub_1001FDFCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)(*v2 + 368);
  v5 = *v2;
  swift_task_dealloc(v4);
  v6 = *(_QWORD *)(v5 + 328);
  swift_bridgeObjectRelease(*(_QWORD *)(v5 + 288));
  swift_bridgeObjectRelease(v6);
  v7 = *(_QWORD *)(v5 + 264);
  v9 = *(_QWORD *)(v5 + 248);
  v8 = *(_QWORD *)(v5 + 256);
  v10 = *(_QWORD *)(v5 + 224);
  v11 = *(_QWORD *)(v5 + 200);
  v12 = *(_QWORD *)(v5 + 176);
  swift_task_dealloc(*(_QWORD *)(v5 + 272));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  v13 = swift_task_dealloc(v12);
  if (!v1)
    v13 = a1;
  return (*(uint64_t (**)(uint64_t))(v5 + 8))(v13);
}

uint64_t sub_1001FE090(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)(*v2 + 376);
  v5 = *v2;
  swift_task_dealloc(v4);
  v6 = *(_QWORD *)(v5 + 328);
  swift_bridgeObjectRelease(*(_QWORD *)(v5 + 288));
  swift_bridgeObjectRelease(v6);
  v7 = *(_QWORD *)(v5 + 264);
  v9 = *(_QWORD *)(v5 + 248);
  v8 = *(_QWORD *)(v5 + 256);
  v10 = *(_QWORD *)(v5 + 224);
  v11 = *(_QWORD *)(v5 + 200);
  v12 = *(_QWORD *)(v5 + 176);
  swift_task_dealloc(*(_QWORD *)(v5 + 272));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  v13 = swift_task_dealloc(v12);
  if (!v1)
    v13 = a1;
  return (*(uint64_t (**)(uint64_t))(v5 + 8))(v13);
}

uint64_t sub_1001FE154(char a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 384);
  *(_BYTE *)(*(_QWORD *)v1 + 449) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1001FE1B0, 0, 0);
}

uint64_t sub_1001FE1B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 312);
  v17 = *(_OWORD *)(v0 + 296);
  v2 = *(_QWORD *)(v0 + 224);
  v18 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);
  v19 = *(_QWORD *)(v0 + 208);
  v5 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 152);
  v7 = *(void **)(v6 + 24);
  v8 = swift_allocObject(&unk_10060B610, 48, 7);
  *(_QWORD *)(v8 + 16) = v6;
  *(_OWORD *)(v8 + 24) = v17;
  *(_QWORD *)(v8 + 40) = v1;
  *(_QWORD *)(v0 + 48) = sub_10020A444;
  *(_QWORD *)(v0 + 56) = v8;
  *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = sub_1004AB190;
  *(_QWORD *)(v0 + 40) = &unk_10060B628;
  v9 = _Block_copy((const void *)(v0 + 16));
  v10 = v7;
  v11 = swift_retain(v6);
  static DispatchQoS.unspecified.getter(v11);
  *(_QWORD *)(v0 + 112) = _swiftEmptyArrayStorage;
  v12 = sub_100004790((unint64_t *)&unk_100632380, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v13 = sub_100004828((uint64_t *)&unk_1006308D0);
  v14 = sub_100107078();
  dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 112, v13, v14, v5, v12);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v2, v3, v9);
  _Block_release(v9);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v2, v19);
  swift_release(*(_QWORD *)(v0 + 56));
  v15 = (_QWORD *)swift_task_alloc(dword_1006387A4);
  *(_QWORD *)(v0 + 392) = v15;
  *v15 = v0;
  v15[1] = sub_1001FE390;
  return sub_100207700(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 328), *(_BYTE *)(v0 + 449), *(_BYTE *)(v0 + 448), *(_QWORD *)(v0 + 144));
}

uint64_t sub_1001FE390(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)(*v2 + 392);
  v5 = *v2;
  swift_task_dealloc(v4);
  v6 = *(_QWORD *)(v5 + 328);
  swift_bridgeObjectRelease(*(_QWORD *)(v5 + 288));
  swift_bridgeObjectRelease(v6);
  v7 = *(_QWORD *)(v5 + 264);
  v9 = *(_QWORD *)(v5 + 248);
  v8 = *(_QWORD *)(v5 + 256);
  v10 = *(_QWORD *)(v5 + 224);
  v11 = *(_QWORD *)(v5 + 200);
  v12 = *(_QWORD *)(v5 + 176);
  swift_task_dealloc(*(_QWORD *)(v5 + 272));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  v13 = swift_task_dealloc(v12);
  if (!v1)
    v13 = a1;
  return (*(uint64_t (**)(uint64_t))(v5 + 8))(v13);
}

uint64_t sub_1001FE454(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)(*v2 + 400);
  v5 = *v2;
  swift_task_dealloc(v4);
  v6 = *(_QWORD *)(v5 + 328);
  swift_bridgeObjectRelease(*(_QWORD *)(v5 + 304));
  swift_bridgeObjectRelease(v6);
  v7 = *(_QWORD *)(v5 + 264);
  v9 = *(_QWORD *)(v5 + 248);
  v8 = *(_QWORD *)(v5 + 256);
  v10 = *(_QWORD *)(v5 + 224);
  v11 = *(_QWORD *)(v5 + 200);
  v12 = *(_QWORD *)(v5 + 176);
  swift_task_dealloc(*(_QWORD *)(v5 + 272));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  v13 = swift_task_dealloc(v12);
  if (!v1)
    v13 = a1;
  return (*(uint64_t (**)(uint64_t))(v5 + 8))(v13);
}

uint64_t sub_1001FE518(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)(*v2 + 408);
  v5 = *v2;
  swift_task_dealloc(v4);
  v6 = *(_QWORD *)(v5 + 328);
  swift_bridgeObjectRelease(*(_QWORD *)(v5 + 304));
  swift_bridgeObjectRelease(v6);
  v7 = *(_QWORD *)(v5 + 264);
  v9 = *(_QWORD *)(v5 + 248);
  v8 = *(_QWORD *)(v5 + 256);
  v10 = *(_QWORD *)(v5 + 224);
  v11 = *(_QWORD *)(v5 + 200);
  v12 = *(_QWORD *)(v5 + 176);
  swift_task_dealloc(*(_QWORD *)(v5 + 272));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  v13 = swift_task_dealloc(v12);
  if (!v1)
    v13 = a1;
  return (*(uint64_t (**)(uint64_t))(v5 + 8))(v13);
}

uint64_t sub_1001FE5DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_QWORD *)(*v2 + 416);
  v5 = *v2;
  swift_task_dealloc(v4);
  v6 = *(_QWORD *)(v5 + 328);
  v7 = *(_QWORD *)(v5 + 304);
  swift_bridgeObjectRelease(*(_QWORD *)(v5 + 288));
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v6);
  v8 = *(_QWORD *)(v5 + 264);
  v10 = *(_QWORD *)(v5 + 248);
  v9 = *(_QWORD *)(v5 + 256);
  v11 = *(_QWORD *)(v5 + 224);
  v12 = *(_QWORD *)(v5 + 200);
  v13 = *(_QWORD *)(v5 + 176);
  swift_task_dealloc(*(_QWORD *)(v5 + 272));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  v14 = swift_task_dealloc(v13);
  if (!v1)
    v14 = a1;
  return (*(uint64_t (**)(uint64_t))(v5 + 8))(v14);
}

uint64_t sub_1001FE6AC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = (_QWORD *)*v2;
  v3[11] = v2;
  v3[12] = a1;
  v3[13] = v1;
  v4 = (_QWORD *)*v2;
  swift_task_dealloc(v3[53]);
  if (!v1)
    return swift_task_switch(sub_1001FE7A8, 0, 0);
  v5 = v3[41];
  v6 = v3[38];
  swift_bridgeObjectRelease(v3[36]);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v5);
  v8 = v3[33];
  v7 = v3[34];
  v10 = v3[31];
  v9 = v3[32];
  v11 = v3[28];
  v12 = v3[25];
  v13 = v3[22];
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  return ((uint64_t (*)(void))v4[1])();
}

uint64_t sub_1001FE7A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (*(_BYTE *)(v0 + 448) == 1)
  {
    v2 = *(_QWORD *)(v0 + 296);
    v1 = *(_QWORD *)(v0 + 304);
    v3 = *(_QWORD *)(v0 + 288);
    v4 = *(_QWORD *)(*(_QWORD *)(v0 + 152) + 104);
    swift_retain(v4);
    sub_10038FC94(v2, v1, 2, 0);
    swift_release(v4);
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 288);
  }
  swift_bridgeObjectRelease(v3);
  v5 = *(_QWORD *)(v0 + 328);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 304));
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(v0 + 96);
  v7 = *(_QWORD *)(v0 + 264);
  v9 = *(_QWORD *)(v0 + 248);
  v8 = *(_QWORD *)(v0 + 256);
  v10 = *(_QWORD *)(v0 + 224);
  v11 = *(_QWORD *)(v0 + 200);
  v12 = *(_QWORD *)(v0 + 176);
  swift_task_dealloc(*(_QWORD *)(v0 + 272));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v6);
}

uint64_t sub_1001FE8A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)(*v2 + 432);
  v5 = *v2;
  swift_task_dealloc(v4);
  v6 = *(_QWORD *)(v5 + 328);
  swift_bridgeObjectRelease(*(_QWORD *)(v5 + 304));
  swift_bridgeObjectRelease(v6);
  v7 = *(_QWORD *)(v5 + 264);
  v9 = *(_QWORD *)(v5 + 248);
  v8 = *(_QWORD *)(v5 + 256);
  v10 = *(_QWORD *)(v5 + 224);
  v11 = *(_QWORD *)(v5 + 200);
  v12 = *(_QWORD *)(v5 + 176);
  swift_task_dealloc(*(_QWORD *)(v5 + 272));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  v13 = swift_task_dealloc(v12);
  if (!v1)
    v13 = a1;
  return (*(uint64_t (**)(uint64_t))(v5 + 8))(v13);
}

uint64_t sub_1001FE968(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)(*v2 + 440);
  v5 = *v2;
  swift_task_dealloc(v4);
  swift_bridgeObjectRelease(*(_QWORD *)(v5 + 288));
  v6 = *(_QWORD *)(v5 + 264);
  v8 = *(_QWORD *)(v5 + 248);
  v7 = *(_QWORD *)(v5 + 256);
  v9 = *(_QWORD *)(v5 + 224);
  v10 = *(_QWORD *)(v5 + 200);
  v11 = *(_QWORD *)(v5 + 176);
  swift_task_dealloc(*(_QWORD *)(v5 + 272));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  v12 = swift_task_dealloc(v11);
  if (!v1)
    v12 = a1;
  return (*(uint64_t (**)(uint64_t))(v5 + 8))(v12);
}

uint64_t sub_1001FEA20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 304));
  v1 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 256);
  v4 = *(_QWORD *)(v0 + 224);
  v5 = *(_QWORD *)(v0 + 200);
  v6 = *(_QWORD *)(v0 + 176);
  swift_task_dealloc(*(_QWORD *)(v0 + 272));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001FEAB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  v7 = *(_QWORD *)(a1 + 64);
  swift_retain(v7);
  sub_100023380(a2, a3, 0, 0, a4, 1, 0, (uint64_t)sub_1001FEB28, 0);
  return swift_release(v7);
}

uint64_t sub_1001FEB28(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t (*v25)(char *, uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[3];
  char v31[8];
  uint64_t v32;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v4);
  v9 = (char *)&v27 - v8;
  if (a1)
  {
    v10 = swift_errorRetain(a1);
    defaultLogger()(v10);
    swift_errorRetain(a1);
    v11 = swift_errorRetain(a1);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.debug.getter(v12);
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc(12, -1);
      v28 = v2;
      v15 = (uint8_t *)v14;
      v16 = swift_slowAlloc(32, -1);
      v32 = v16;
      *(_DWORD *)v15 = 136315138;
      swift_getErrorValue(a1, v31, v30);
      v17 = Error.localizedDescription.getter(v30[1], v30[2]);
      v19 = v18;
      v29 = sub_1000E3AC8(v17, v18, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, v30, v15 + 4);
      swift_bridgeObjectRelease(v19);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "received an error during proofing updating. Igonore the error as this is an opportunistic update attempt. %s", v15, 0xCu);
      swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v16, -1, -1);
      swift_slowDealloc(v15, -1, -1);

      swift_errorRelease(a1);
      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v28);
    }
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    swift_errorRelease(a1);

    v25 = *(uint64_t (**)(char *, uint64_t))(v3 + 8);
    v26 = v6;
  }
  else
  {
    v21 = defaultLogger()(v7);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.debug.getter(v22);
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Opportunistic update attempt successful", v24, 2u);
      swift_slowDealloc(v24, -1, -1);
    }

    v25 = *(uint64_t (**)(char *, uint64_t))(v3 + 8);
    v26 = v9;
  }
  return v25(v26, v2);
}

uint64_t sub_1001FEDC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[12] = a5;
  v6[13] = v5;
  v6[10] = a3;
  v6[11] = a4;
  v6[8] = a1;
  v6[9] = a2;
  v7 = type metadata accessor for IdentityProofingAttributeConfiguration(0);
  v6[14] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[15] = v8;
  v6[16] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for IdentityProofingStaticWorkflow(0);
  v6[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001FEE50, 0, 0);
}

uint64_t sub_1001FEE50()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0[13] + 144);
  v0[18] = v1;
  v2 = dword_100640F4C;
  swift_retain(v1);
  v3 = (_QWORD *)swift_task_alloc(v2);
  v0[19] = v3;
  *v3 = v0;
  v3[1] = sub_1001FEEAC;
  return sub_100433740();
}

uint64_t sub_1001FEEAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t (*v8)();

  v6 = *(_QWORD **)v3;
  v7 = *(_QWORD *)(*(_QWORD *)v3 + 152);
  *(_QWORD *)(*(_QWORD *)v3 + 160) = v2;
  swift_task_dealloc(v7);
  if (v2)
  {
    v8 = sub_1001FF5EC;
  }
  else
  {
    swift_release(v6[18]);
    v6[21] = a2;
    v6[22] = a1;
    v8 = sub_1001FEF2C;
  }
  return swift_task_switch(v8, 0, 0);
}

uint64_t sub_1001FEF2C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t **v7;

  v2 = v0[21];
  v1 = v0[22];
  v3 = *(_QWORD *)(v0[13] + 136);
  v0[23] = v3;
  v4 = sub_100004828(&qword_100640CA0);
  inited = swift_initStackObject(v4, v0 + 2);
  v0[24] = inited;
  *(_OWORD *)(inited + 16) = xmmword_10051FFB0;
  *(_QWORD *)(inited + 32) = v1;
  *(_QWORD *)(inited + 40) = v2;
  v6 = dword_10063454C;
  swift_retain(v3);
  v7 = (uint64_t **)swift_task_alloc(v6);
  v0[25] = (uint64_t)v7;
  *v7 = v0;
  v7[1] = (uint64_t *)sub_1001FEFD4;
  return sub_1000F1E28(v0[8], v0[9], inited);
}

uint64_t sub_1001FEFD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 200);
  v3[26] = a1;
  v3[27] = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = sub_1001FF630;
  }
  else
  {
    v8 = v3 + 23;
    v6 = v3[23];
    v7 = v8[1];
    swift_setDeallocating(v7);
    swift_arrayDestroy(v7 + 32, *(_QWORD *)(v7 + 16), &type metadata for String);
    swift_release(v6);
    v5 = sub_1001FF074;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1001FF074()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0[13] + 144);
  v0[28] = v1;
  v2 = dword_100640F34;
  swift_retain(v1);
  v3 = (_QWORD *)swift_task_alloc(v2);
  v0[29] = v3;
  *v3 = v0;
  v3[1] = sub_1001FF0DC;
  return sub_100430D0C(v0[17]);
}

uint64_t sub_1001FF0DC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 232);
  *(_QWORD *)(*v1 + 240) = v0;
  swift_task_dealloc(v3);
  v4 = *(_QWORD *)(v2 + 224);
  if (v0)
  {
    v5 = *(_QWORD *)(v2 + 208);
    swift_release(v4);
    swift_bridgeObjectRelease(v5);
    v6 = sub_1001FF6A0;
  }
  else
  {
    swift_release(v4);
    v6 = sub_1001FF158;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_1001FF158()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  objc_class *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char v12;
  int v13;
  char v14;
  int v15;
  char v16;
  int v17;

  v1 = v0[26];
  v2 = v0[17];
  v3 = v0[13];
  v4 = (objc_class *)type metadata accessor for IdentityProofingUIConfig(0);
  v5 = objc_allocWithZone(v4);
  swift_bridgeObjectRetain(v1);
  v16 = 1;
  v14 = 1;
  v12 = 1;
  v0[31] = IdentityProofingUIConfig.init(view:title:subTitle:url:primaryButtonTitle:secondaryButtonTitle:tertiaryButtonTitle:messages:fields:caption:minLength:maxLength:placeholder:displayName:imageAssetsData:options:isUIEnabled:)(0x6464417972746572, 0xED00004449676E69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             v12,
             0,
             v14,
             0,
             0,
             0,
             0,
             v1,
             0,
             v16);
  v6 = objc_allocWithZone(v4);
  LOBYTE(v17) = 1;
  LOBYTE(v15) = 1;
  LOBYTE(v13) = 1;
  v0[32] = IdentityProofingUIConfig.init(view:title:subTitle:url:primaryButtonTitle:secondaryButtonTitle:tertiaryButtonTitle:messages:fields:caption:minLength:maxLength:placeholder:displayName:imageAssetsData:options:isUIEnabled:)(0x416F547964616572, 0xEC00000044496464, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             v13,
             0,
             v15,
             0,
             0,
             0,
             0,
             v1,
             0,
             v17);
  v7 = *(_QWORD *)(v3 + 128);
  v0[33] = v7;
  v8 = *(_QWORD *)(v2 + 64);
  v0[34] = v8;
  v9 = dword_100634C0C;
  swift_retain(v7);
  swift_bridgeObjectRetain(v8);
  v10 = (_QWORD *)swift_task_alloc(v9);
  v0[35] = v10;
  *v10 = v0;
  v10[1] = sub_1001FF2F4;
  return sub_1000FE8D8(v0[16], v8);
}

uint64_t sub_1001FF2F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 280);
  *(_QWORD *)(*(_QWORD *)v1 + 288) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1001FF580;
  else
    v3 = sub_1001FF358;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001FF358()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = type metadata accessor for JSONEncoder(0);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v6 = JSONEncoder.init()(v5);
  v7 = sub_100004790(&qword_100632C00, (uint64_t (*)(uint64_t))&type metadata accessor for IdentityProofingAttributeConfiguration, (uint64_t)&protocol conformance descriptor for IdentityProofingAttributeConfiguration);
  v8 = dispatch thunk of JSONEncoder.encode<A>(_:)(v2, v3, v7);
  v10 = *(_QWORD *)(v0 + 264);
  v11 = *(_QWORD *)(v0 + 272);
  if (v1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
    swift_release(v6);
    swift_bridgeObjectRelease(v11);
    swift_release(v10);
    v12 = *(void **)(v0 + 248);
    v13 = *(_QWORD *)(v0 + 136);

    sub_100006350(v13);
    v14 = *(_QWORD *)(v0 + 128);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v14);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v16 = v8;
    v17 = v9;
    v18 = *(_QWORD *)(v0 + 128);
    v19 = *(_QWORD *)(v0 + 136);
    v21 = *(_QWORD *)(v0 + 80);
    v20 = *(_QWORD *)(v0 + 88);
    v25 = *(_OWORD *)(v0 + 248);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(v18, *(_QWORD *)(v0 + 112));
    swift_release(v6);
    swift_bridgeObjectRelease(v11);
    swift_release(v10);
    v22 = sub_100004828(&qword_100640C30);
    v23 = swift_allocObject(v22, 48, 7);
    *(_OWORD *)(v23 + 16) = xmmword_100524030;
    *(_OWORD *)(v23 + 32) = v25;
    v26 = v23;
    specialized Array._endMutation()(v23);
    objc_allocWithZone((Class)type metadata accessor for IdentityProofingDisplayInfo(0));
    swift_bridgeObjectRetain(v20);
    v24 = IdentityProofingDisplayInfo.init(proofingUI:docScan:attributeConfig:learnMoreURL:waitingForWiFiAlertDataThresholdInBytes:lowDataModeAlertDataThresholdInBytes:idType:featureEnablementConfig:supportedRegions:livenessStepUpConfig:livenessStepUpIQSettings:shouldPreFetchLivenessConfig:)(v26, 0, v16, v17, v21, v20, 0, 1, 0, 1, 0, 0, 0, _swiftEmptyArrayStorage, 0, 0, 2);
    sub_100006350(v19);
    swift_task_dealloc(v19);
    swift_task_dealloc(v18);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v24);
  }
}

uint64_t sub_1001FF580()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 264);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 272));
  swift_release(v1);
  v2 = *(void **)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 136);

  sub_100006350(v3);
  v4 = *(_QWORD *)(v0 + 128);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001FF5EC()
{
  uint64_t v0;
  uint64_t v1;

  swift_release(*(_QWORD *)(v0 + 144));
  v1 = *(_QWORD *)(v0 + 128);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001FF630()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  swift_setDeallocating(v2);
  swift_arrayDestroy(v2 + 32, *(_QWORD *)(v2 + 16), &type metadata for String);
  swift_release(v1);
  v3 = *(_QWORD *)(v0 + 128);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001FF6A0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 128);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001FF6DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;

  v7[33] = a6;
  v7[34] = v6;
  v7[31] = a4;
  v7[32] = a5;
  v7[29] = a2;
  v7[30] = a3;
  v7[28] = a1;
  return swift_task_switch(sub_1001FF700, 0, 0);
}

uint64_t sub_1001FF700()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t **v7;

  v1 = v0[34];
  v2 = *(_QWORD *)(v1 + 40);
  v0[35] = v2;
  v3 = *(void **)(v1 + 16);
  swift_retain(v2);
  if (v3)
  {
    v4 = v3;
    v3 = (void *)IdentityProofingConfiguration.state.getter(v4);
    v6 = v5;

  }
  else
  {
    v6 = 0;
  }
  v0[36] = v6;
  v7 = (uint64_t **)swift_task_alloc(dword_100632ACC);
  v0[37] = (uint64_t)v7;
  *v7 = v0;
  v7[1] = (uint64_t *)sub_1001FF7C0;
  return sub_1000A48F8((uint64_t)(v0 + 3), v0[28], v0[29], v0[30], (uint64_t)v3, v6, v0[31], v0[32]);
}

uint64_t sub_1001FF7C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 296);
  v6 = *(_QWORD *)(*v2 + 280);
  *(_QWORD *)(*v2 + 304) = v1;
  swift_task_dealloc(v5);
  swift_release(v6);
  v7 = *(_QWORD *)(v4 + 288);
  if (v1)
  {
    swift_bridgeObjectRelease(v7);
    v8 = sub_1001FF938;
  }
  else
  {
    *(_QWORD *)(v4 + 312) = a1;
    swift_bridgeObjectRelease(v7);
    v8 = sub_1001FF84C;
  }
  return swift_task_switch(v8, 0, 0);
}

uint64_t sub_1001FF84C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 312);
  v2 = *(_QWORD *)(v0 + 272);
  *(_QWORD *)(v0 + 16) = v1;
  v3 = *(_QWORD *)(v2 + 144);
  *(_QWORD *)(v0 + 64) = v1;
  sub_10020A300(v0 + 24, v0 + 72);
  sub_1000A1F54(v0 + 72, v0 + 160, &qword_1006384C8);
  swift_beginAccess(v3 + 136, v0 + 200, 33, 0);
  swift_retain(v3);
  sub_10020A348(v0 + 160, v3 + 136);
  swift_endAccess(v0 + 200);
  swift_release(v3);
  v4 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 112) = v4;
  sub_1000A1F54(v0 + 24, v0 + 120, &qword_1006384C8);
  sub_100008030(v0 + 120, &qword_1006384C8);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v4);
}

uint64_t sub_1001FF938()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001FF944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v9 + 160) = a8;
  *(_QWORD *)(v9 + 168) = v8;
  *(_BYTE *)(v9 + 216) = a7;
  *(_QWORD *)(v9 + 144) = a5;
  *(_QWORD *)(v9 + 152) = a6;
  *(_QWORD *)(v9 + 128) = a3;
  *(_QWORD *)(v9 + 136) = a4;
  *(_QWORD *)(v9 + 112) = a1;
  *(_QWORD *)(v9 + 120) = a2;
  return swift_task_switch(sub_1001FF96C, 0, 0);
}

uint64_t sub_1001FF96C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t **v6;

  v1 = *(_QWORD *)(v0[21] + 48);
  v0[22] = v1;
  v2 = swift_retain(v1);
  v3 = IdentityProofingConfiguration.state.getter(v2);
  v5 = v4;
  v0[23] = v4;
  v6 = (uint64_t **)swift_task_alloc(dword_100637E54);
  v0[24] = (uint64_t)v6;
  *v6 = v0;
  v6[1] = (uint64_t *)sub_1001FFA10;
  return sub_1001DDF34((uint64_t)(v0 + 3), v0[15], v0[16], v0[17], v3, v5);
}

uint64_t sub_1001FFA10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 192);
  *(_QWORD *)(*(_QWORD *)v2 + 200) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_1001FFB34;
  }
  else
  {
    v7 = v4[23];
    swift_release(v4[22]);
    v4[26] = a1;
    swift_bridgeObjectRelease(v7);
    v6 = sub_1001FFA94;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_1001FFA94()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v1 = *(void **)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 168);
  *(_QWORD *)(v0 + 16) = v1;
  v3 = *(_QWORD *)(v2 + 144);
  swift_retain(v3);
  sub_10042E6F8(v0 + 24);
  swift_release(v3);
  *(_QWORD *)(v0 + 64) = v1;
  sub_10020A300(v0 + 24, v0 + 72);
  v4 = v1;
  sub_100008030(v0 + 72, &qword_1006384C8);
  sub_100008030(v0 + 16, &qword_100638AE0);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 208));
}

uint64_t sub_1001FFB34()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 184);
  swift_release(*(_QWORD *)(v0 + 176));
  swift_bridgeObjectRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001FFB70(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  *(_QWORD *)(v6 + 152) = a5;
  *(_QWORD *)(v6 + 160) = v5;
  *(_QWORD *)(v6 + 136) = a2;
  *(_QWORD *)(v6 + 144) = a4;
  *(_BYTE *)(v6 + 281) = a3;
  *(_QWORD *)(v6 + 128) = a1;
  v7 = type metadata accessor for DIPError.Code(0);
  *(_QWORD *)(v6 + 168) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 176) = v8;
  *(_QWORD *)(v6 + 184) = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Logger(0);
  *(_QWORD *)(v6 + 192) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v6 + 200) = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v6 + 208) = swift_task_alloc(v11);
  *(_QWORD *)(v6 + 216) = swift_task_alloc(v11);
  return swift_task_switch(sub_1001FFC14, 0, 0);
}

uint64_t sub_1001FFC14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  id v12;
  Swift::String v13;
  Swift::Bool v14;
  void *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  Swift::String v34;
  Swift::String v35;
  Swift::String v36;
  Swift::String v37;
  void (*v38)(uint64_t, _QWORD, uint64_t);
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v1 + 112);
  if (v2)
  {
    v3 = swift_retain(*(_QWORD *)(v1 + 112));
    v4 = IdentityProofingConfiguration.accountKeyIdentifier.getter(v3);
    v6 = v5;
    type metadata accessor for DIPAccountManager(0);
    swift_bridgeObjectRetain(v6);
    static DIPAccountManager.sharedInstance.getter((_QWORD *)(v0 + 16), v7);
    v8 = type metadata accessor for IdentityProofingDeviceMigrationManager();
    v9 = (_QWORD *)swift_allocObject(v8, 88, 7);
    v9[2] = 0;
    if (qword_10062F478 != -1)
      swift_once(&qword_10062F478, sub_1000DECC0);
    v10 = *(void **)(qword_100670250 + 16);
    v9[3] = v10;
    v9[4] = v4;
    v9[5] = v6;
    v11 = v10;
    swift_bridgeObjectRelease(0);
    sub_100008018((__int128 *)(v0 + 16), (uint64_t)(v9 + 6));
    swift_bridgeObjectRelease(v6);
    swift_release(v2);
  }
  else
  {
    v9 = 0;
  }
  *(_QWORD *)(v0 + 224) = v9;
  v12 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v13._countAndFlagsBits = 0xD000000000000024;
  v13._object = (void *)0x8000000100554DD0;
  v14 = NSUserDefaults.internalBool(forKey:)(v13);

  if (!v14)
  {
    v15 = *(void **)(v0 + 136);
    v16 = *(_QWORD *)(*(_QWORD *)(v0 + 160) + 144);
    swift_retain(v16);
    sub_10042EAC0(v15, 0);
    swift_release(v16);
  }
  if (v9)
  {
    swift_unknownObjectRetain(v9);
    v17 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    *(_QWORD *)(v0 + 232) = v17;
    *v17 = v0;
    v17[1] = sub_100200224;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 280, 0, 0, 0xD00000000000001FLL, 0x8000000100554070, sub_1001FC6FC, v9, &type metadata for Bool);
  }
  v19 = *(_QWORD *)(*(_QWORD *)(v0 + 160) + 56);
  v20 = swift_allocObject(&unk_10060B570, 48, 7);
  v21 = type metadata accessor for IdentityProofingDataContext();
  *(_OWORD *)(v20 + 16) = 0u;
  *(_OWORD *)(v20 + 32) = 0u;
  swift_allocObject(v21, 24, 7);
  swift_retain(v19);
  sub_1000D6044();
  v23 = v22;
  v25 = *(_QWORD *)(v0 + 144);
  v24 = *(_QWORD *)(v0 + 152);
  v26 = (_QWORD *)swift_allocObject(&unk_10060B598, 48, 7);
  v26[2] = v23;
  v26[3] = v25;
  v26[4] = v24;
  v26[5] = v20;
  swift_retain(v23);
  swift_bridgeObjectRetain(v24);
  swift_retain(v20);
  sub_1000D6570((uint64_t)sub_10020A2E4, (uint64_t)v26);
  swift_release(v26);
  swift_release(v23);
  swift_beginAccess(v20 + 16, v0 + 56, 0, 0);
  v28 = *(_QWORD *)(v20 + 16);
  v27 = *(void **)(v20 + 24);
  v30 = *(_QWORD *)(v20 + 32);
  v29 = *(void **)(v20 + 40);
  sub_10020A280(v28, (uint64_t)v27, v30, (uint64_t)v29);
  swift_release(v20);
  swift_release(v19);
  if (v27)
  {
    v51 = *(_QWORD *)(v0 + 224);
    v31 = *(_QWORD *)(v0 + 176);
    v32 = *(_QWORD *)(v0 + 184);
    v33 = *(_QWORD *)(v0 + 168);
    _StringGuts.grow(_:)(102);
    v34._countAndFlagsBits = 0xD00000000000004DLL;
    v34._object = (void *)0x8000000100554E80;
    String.append(_:)(v34);
    v35._countAndFlagsBits = v30;
    v35._object = v29;
    String.append(_:)(v35);
    v36._countAndFlagsBits = 0xD000000000000015;
    v36._object = (void *)0x8000000100554ED0;
    String.append(_:)(v36);
    v37._countAndFlagsBits = v28;
    v37._object = v27;
    String.append(_:)(v37);
    swift_bridgeObjectRelease(v27);
    swift_bridgeObjectRelease(v29);
    v38 = *(void (**)(uint64_t, _QWORD, uint64_t))(v31 + 104);
    v39 = v51;
    v38(v32, enum case for DIPError.Code.proofingInProgressError(_:), v33);
    v40 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v41 = type metadata accessor for DIPError(0);
    v42 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    swift_allocError(v41, v42, 0, 0);
    v43 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, 0, v32, 0, v40, 0xD00000000000007CLL, 0x80000001005549D0, 0xD000000000000044, 0x8000000100554E30, 323);
LABEL_14:
    swift_willThrow(v43);
    swift_unknownObjectRelease(v39);
    v48 = *(_QWORD *)(v0 + 208);
    v49 = *(_QWORD *)(v0 + 184);
    swift_task_dealloc(*(_QWORD *)(v0 + 216));
    swift_task_dealloc(v48);
    swift_task_dealloc(v49);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if (*(_QWORD *)(v0 + 128))
  {
    v39 = *(_QWORD *)(v0 + 224);
    v44 = *(_QWORD *)(v0 + 184);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 176) + 104))(v44, enum case for DIPError.Code.invalidStaticWorkflow(_:), *(_QWORD *)(v0 + 168));
    v45 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v46 = type metadata accessor for DIPError(0);
    v47 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    swift_allocError(v46, v47, 0, 0);
    v43 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000002DLL, 0x8000000100554E00, 0, v44, 0, v45, 0xD00000000000007CLL, 0x80000001005549D0, 0xD000000000000044, 0x8000000100554E30, 342);
    goto LABEL_14;
  }
  v50 = (_QWORD *)swift_task_alloc(dword_100638794);
  *(_QWORD *)(v0 + 264) = v50;
  *v50 = v0;
  v50[1] = sub_100200928;
  return sub_100202014(*(_QWORD *)(v0 + 136), *(_BYTE *)(v0 + 281), 0);
}

uint64_t sub_100200224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 232);
  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100200800;
  else
    v3 = sub_100200288;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100200288()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  Swift::String v34;
  Swift::String v35;
  Swift::String v36;
  Swift::String v37;
  void (*v38)(uint64_t, _QWORD, uint64_t);
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;

  v1 = v0 + 280;
  v2 = *(unsigned __int8 *)(v0 + 280);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 224));
  if (v2 != 1
    || (v3 = IdentityType.rawValue.getter(*(_QWORD *)(v0 + 128)), v4 = IdentityType.rawValue.getter(0), v3 != v4))
  {
    v14 = v0 + 56;
    v15 = *(_QWORD *)(v0 + 240);
    v16 = *(_QWORD *)(*(_QWORD *)(v0 + 160) + 56);
    v17 = swift_allocObject(&unk_10060B570, 48, 7);
    v18 = type metadata accessor for IdentityProofingDataContext();
    *(_OWORD *)(v17 + 16) = 0u;
    *(_OWORD *)(v17 + 32) = 0u;
    swift_allocObject(v18, 24, 7);
    swift_retain(v16);
    sub_1000D6044();
    if (v15)
    {
      v25 = *(_QWORD *)(v0 + 200);
      v24 = *(_QWORD *)(v0 + 208);
      v26 = *(_QWORD *)(v0 + 192);
      defaultLogger()(v19);
      DIPRecordError(_:message:log:)(v15, 0, 0xE000000000000000, v24);
      swift_errorRelease(v15);
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
    }
    else
    {
      v20 = v19;
      v22 = *(_QWORD *)(v0 + 144);
      v21 = *(_QWORD *)(v0 + 152);
      v23 = (_QWORD *)swift_allocObject(&unk_10060B598, 48, 7);
      v23[2] = v20;
      v23[3] = v22;
      v1 = v0 + 280;
      v14 = v0 + 56;
      v23[4] = v21;
      v23[5] = v17;
      swift_retain(v20);
      swift_bridgeObjectRetain(v21);
      swift_retain(v17);
      sub_1000D6570((uint64_t)sub_10020A2E4, (uint64_t)v23);
      swift_release(v23);
      swift_release(v20);
    }
    swift_beginAccess(v17 + 16, v14, 0, 0);
    v28 = *(_QWORD *)(v17 + 16);
    v27 = *(void **)(v17 + 24);
    v30 = *(_QWORD *)(v17 + 32);
    v29 = *(void **)(v17 + 40);
    sub_10020A280(v28, (uint64_t)v27, v30, (uint64_t)v29);
    swift_release(v17);
    swift_release(v16);
    if (v27)
    {
      v51 = *(_QWORD *)(v0 + 224);
      v31 = *(_QWORD *)(v0 + 176);
      v32 = *(_QWORD *)(v0 + 184);
      v33 = *(_QWORD *)(v0 + 168);
      _StringGuts.grow(_:)(102);
      v34._countAndFlagsBits = 0xD00000000000004DLL;
      v34._object = (void *)0x8000000100554E80;
      String.append(_:)(v34);
      v35._countAndFlagsBits = v30;
      v35._object = v29;
      String.append(_:)(v35);
      v36._countAndFlagsBits = 0xD000000000000015;
      v36._object = (void *)0x8000000100554ED0;
      String.append(_:)(v36);
      v37._countAndFlagsBits = v28;
      v37._object = v27;
      String.append(_:)(v37);
      swift_bridgeObjectRelease(v27);
      swift_bridgeObjectRelease(v29);
      v38 = *(void (**)(uint64_t, _QWORD, uint64_t))(v31 + 104);
      v39 = v51;
      v38(v32, enum case for DIPError.Code.proofingInProgressError(_:), v33);
      v40 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
      v41 = type metadata accessor for DIPError(0);
      v42 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
      swift_allocError(v41, v42, 0, 0);
      v43 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, 0, v32, 0, v40, 0xD00000000000007CLL, 0x80000001005549D0, 0xD000000000000044, 0x8000000100554E30, 323);
    }
    else
    {
      if (!*(_QWORD *)(v0 + 128))
      {
        v50 = (_QWORD *)swift_task_alloc(dword_100638794);
        *(_QWORD *)(v0 + 264) = v50;
        *v50 = v0;
        v50[1] = sub_100200928;
        return sub_100202014(*(_QWORD *)(v0 + 136), *(_BYTE *)(v1 + 1), 0);
      }
      v39 = *(_QWORD *)(v0 + 224);
      v44 = *(_QWORD *)(v0 + 184);
      (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 176) + 104))(v44, enum case for DIPError.Code.invalidStaticWorkflow(_:), *(_QWORD *)(v0 + 168));
      v45 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
      v46 = type metadata accessor for DIPError(0);
      v47 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
      swift_allocError(v46, v47, 0, 0);
      v43 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000002DLL, 0x8000000100554E00, 0, v44, 0, v45, 0xD00000000000007CLL, 0x80000001005549D0, 0xD000000000000044, 0x8000000100554E30, 342);
    }
    swift_willThrow(v43);
    swift_unknownObjectRelease(v39);
    v48 = *(_QWORD *)(v0 + 208);
    v49 = *(_QWORD *)(v0 + 184);
    swift_task_dealloc(*(_QWORD *)(v0 + 216));
    swift_task_dealloc(v48);
    swift_task_dealloc(v49);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v5 = defaultLogger()(v4);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.debug.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Device Migration Flow starts", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }
  v9 = *(_QWORD *)(v0 + 216);
  v10 = *(_QWORD *)(v0 + 192);
  v11 = *(_QWORD *)(v0 + 200);

  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  v12 = (_QWORD *)swift_task_alloc(dword_100638794);
  *(_QWORD *)(v0 + 248) = v12;
  *v12 = v0;
  v12[1] = sub_10020085C;
  return sub_100202014(*(_QWORD *)(v0 + 136), *(_BYTE *)(v0 + 281), 1);
}

uint64_t sub_100200800()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_unknownObjectRelease_n(*(_QWORD *)(v0 + 224), 2);
  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10020085C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = (_QWORD *)*v2;
  v3[10] = v2;
  v3[11] = a1;
  v3[12] = v1;
  v4 = v3[31];
  v3[32] = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_1002009F4;
  else
    v5 = sub_1002008C8;
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1002008C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 224));
  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_100200928(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = (_QWORD *)*v2;
  v3[13] = v2;
  v3[14] = a1;
  v3[15] = v1;
  v4 = v3[33];
  v3[34] = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_100200A4C;
  else
    v5 = sub_100200994;
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_100200994()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 224));
  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1002009F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 224));
  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100200A4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 224));
  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100200AA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v4[9] = a3;
  v4[10] = v3;
  v4[7] = a1;
  v4[8] = a2;
  v5 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType(0);
  v4[11] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[12] = v6;
  v4[13] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  v4[14] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[15] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[16] = swift_task_alloc(v9);
  v4[17] = swift_task_alloc(v9);
  v4[18] = swift_task_alloc(v9);
  v4[19] = swift_task_alloc(v9);
  return swift_task_switch(sub_100200B58, 0, 0);
}

uint64_t sub_100200B58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  v2 = defaultLogger()(a1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.debug.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "check if there are assets left to be uploaded and if the device is on an expensive network and if the shouldScheduleUploads have been set to true", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = *(_QWORD *)(v1 + 152);
  v7 = *(_QWORD *)(v1 + 112);
  v8 = *(_QWORD *)(v1 + 120);

  v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  *(_QWORD *)(v1 + 160) = v9;
  v9(v6, v7);
  *(_BYTE *)(v1 + 49) = 0;
  v10 = type metadata accessor for IdentityProofingDataContext();
  swift_allocObject(v10, 24, 7);
  sub_1000D6044();
  *(_QWORD *)(v1 + 168) = v11;
  v12 = v11;
  v13 = *(_QWORD *)(v1 + 96);
  v14 = *(_QWORD *)(v1 + 104);
  v15 = *(_QWORD *)(v1 + 88);
  v17 = *(_QWORD *)(v1 + 64);
  v16 = *(_QWORD *)(v1 + 72);
  v18 = *(_QWORD *)(v1 + 56);
  v19 = (_QWORD *)swift_allocObject(&unk_10060B520, 48, 7);
  *(_QWORD *)(v1 + 176) = v19;
  v19[2] = v12;
  v19[3] = v18;
  v19[4] = v17;
  v19[5] = v16;
  v20 = swift_allocObject(&unk_10060B548, 32, 7);
  *(_QWORD *)(v1 + 184) = v20;
  *(_QWORD *)(v20 + 16) = sub_10020A1CC;
  *(_QWORD *)(v20 + 24) = v19;
  v21 = enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:);
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v13 + 104);
  swift_retain(v12);
  v23 = swift_bridgeObjectRetain(v17);
  v22(v14, v21, v15, v23);
  v24 = async function pointer to NSManagedObjectContext.perform<A>(schedule:_:)[1];
  swift_retain(v19);
  v25 = (_QWORD *)swift_task_alloc(v24);
  *(_QWORD *)(v1 + 192) = v25;
  v26 = sub_100004828(&qword_100638AD8);
  *v25 = v1;
  v25[1] = sub_100200EC0;
  return NSManagedObjectContext.perform<A>(schedule:_:)(v1 + 40, *(_QWORD *)(v1 + 104), sub_10020A20C, v20, v26);
}

uint64_t sub_100200EC0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v6;
  uint64_t v7;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 192);
  *(_QWORD *)(*v1 + 200) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 184);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 + 96) + 8))(*(_QWORD *)(v2 + 104), *(_QWORD *)(v2 + 88));
    swift_release(v4);
    v5 = sub_1002013F4;
  }
  else
  {
    v6 = *(_QWORD *)(v2 + 176);
    v7 = *(_QWORD *)(v2 + 184);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 + 96) + 8))(*(_QWORD *)(v2 + 104), *(_QWORD *)(v2 + 88));
    swift_release(v7);
    swift_release(v6);
    *(_QWORD *)(v2 + 208) = *(_QWORD *)(v2 + 40);
    *(_BYTE *)(v2 + 50) = *(_BYTE *)(v2 + 48);
    v5 = sub_100200F7C;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_100200F7C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;

  v1 = *(unsigned __int8 *)(v0 + 50);
  if (v1 == 2)
  {
    v2 = swift_release(*(_QWORD *)(v0 + 168));
    v3 = defaultLogger()(v2);
    v4 = *(unsigned __int8 *)(v0 + 49);
    v5 = Logger.logObject.getter(v3);
    v6 = static os_log_type_t.debug.getter(v5);
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v7 = 67109120;
      *(_DWORD *)(v0 + 52) = v4;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 52, v0 + 56, v7 + 4);
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Should change the proofing status to isWaitingForWifi: -> %{BOOL}d", v7, 8u);
      swift_slowDealloc(v7, -1, -1);
    }
    v9 = *(_QWORD *)(v0 + 152);
    v8 = *(void (**)(uint64_t, uint64_t))(v0 + 160);
    v11 = *(_QWORD *)(v0 + 136);
    v10 = *(_QWORD *)(v0 + 144);
    v12 = *(_QWORD *)(v0 + 128);
    v14 = *(_QWORD *)(v0 + 104);
    v13 = *(_QWORD *)(v0 + 112);

    v8(v11, v13);
    swift_beginAccess(v0 + 49, v0 + 16, 0, 0);
    v15 = *(unsigned __int8 *)(v0 + 49);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v14);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v15);
  }
  else
  {
    v17 = v1 & 1;
    v18 = *(_QWORD *)(*(_QWORD *)(v0 + 80) + 80);
    *(_QWORD *)(v0 + 216) = v18;
    v19 = dword_10062FAEC;
    swift_retain(v18);
    v20 = (_QWORD *)swift_task_alloc(v19);
    *(_QWORD *)(v0 + 224) = v20;
    *v20 = v0;
    v20[1] = sub_100201154;
    return sub_1000055A4(*(_QWORD *)(v0 + 208), v17);
  }
}

uint64_t sub_100201154(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 216);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 224);
  *(_BYTE *)(*(_QWORD *)v1 + 51) = a1;
  swift_task_dealloc(v2);
  swift_release(v3);
  return swift_task_switch(sub_1002011B8, 0, 0);
}

uint64_t sub_1002011B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if (*(_BYTE *)(v1 + 51) == 1)
  {
    v2 = defaultLogger()(a1);
    v3 = Logger.logObject.getter(v2);
    v4 = static os_log_type_t.debug.getter(v3);
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "The device is on an expensive network AND the data size is greater than the threshold AND the user has not given consent to upload on cellular network. Update the proofing status to wait for wifi", v5, 2u);
      swift_slowDealloc(v5, -1, -1);
    }
    v7 = *(void (**)(uint64_t, uint64_t))(v1 + 160);
    v6 = *(_QWORD *)(v1 + 168);
    v8 = *(_QWORD *)(v1 + 144);
    v9 = *(_QWORD *)(v1 + 112);
    v10 = *(_QWORD *)(v1 + 80);
    v12 = *(_QWORD *)(v1 + 56);
    v11 = *(_QWORD *)(v1 + 64);

    v7(v8, v9);
    v13 = *(_QWORD *)(v10 + 56);
    swift_retain(v13);
    sub_100463A20(v12, v11, 9);
    swift_release(v6);
    v14 = swift_release(v13);
    *(_BYTE *)(v1 + 49) = 1;
  }
  else
  {
    v14 = swift_release(*(_QWORD *)(v1 + 168));
  }
  v15 = defaultLogger()(v14);
  v16 = *(unsigned __int8 *)(v1 + 49);
  v17 = Logger.logObject.getter(v15);
  v18 = static os_log_type_t.debug.getter(v17);
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v19 = 67109120;
    *(_DWORD *)(v1 + 52) = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 52, v1 + 56, v19 + 4);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Should change the proofing status to isWaitingForWifi: -> %{BOOL}d", v19, 8u);
    swift_slowDealloc(v19, -1, -1);
  }
  v21 = *(_QWORD *)(v1 + 152);
  v20 = *(void (**)(uint64_t, uint64_t))(v1 + 160);
  v23 = *(_QWORD *)(v1 + 136);
  v22 = *(_QWORD *)(v1 + 144);
  v24 = *(_QWORD *)(v1 + 128);
  v26 = *(_QWORD *)(v1 + 104);
  v25 = *(_QWORD *)(v1 + 112);

  v20(v23, v25);
  swift_beginAccess(v1 + 49, v1 + 16, 0, 0);
  v27 = *(unsigned __int8 *)(v1 + 49);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(v27);
}

uint64_t sub_1002013F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 168);
  swift_release(*(_QWORD *)(v0 + 176));
  v2 = swift_release(v1);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 160);
  v5 = *(_QWORD *)(v0 + 128);
  v6 = *(_QWORD *)(v0 + 112);
  defaultLogger()(v2);
  DIPRecordError(_:message:log:)(v3, 0, 0xE000000000000000, v5);
  swift_errorRelease(v3);
  v7 = v4(v5, v6);
  v8 = defaultLogger()(v7);
  v9 = *(unsigned __int8 *)(v0 + 49);
  v10 = Logger.logObject.getter(v8);
  v11 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v12 = 67109120;
    *(_DWORD *)(v0 + 52) = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 52, v0 + 56, v12 + 4);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Should change the proofing status to isWaitingForWifi: -> %{BOOL}d", v12, 8u);
    swift_slowDealloc(v12, -1, -1);
  }
  v14 = *(_QWORD *)(v0 + 152);
  v13 = *(void (**)(uint64_t, uint64_t))(v0 + 160);
  v16 = *(_QWORD *)(v0 + 136);
  v15 = *(_QWORD *)(v0 + 144);
  v17 = *(_QWORD *)(v0 + 128);
  v19 = *(_QWORD *)(v0 + 104);
  v18 = *(_QWORD *)(v0 + 112);

  v13(v16, v18);
  swift_beginAccess(v0 + 49, v0 + 16, 0, 0);
  v20 = *(unsigned __int8 *)(v0 + 49);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v20);
}

void sub_100201598(uint64_t a1@<X0>, NSObject *a2@<X1>, uint64_t a3@<X2>, NSObject *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  NSObject *v22;
  uint64_t v23;
  id v24;
  NSObject *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  id v33;
  void *v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  unint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  BOOL v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unsigned __int8 v60;
  id v61;
  unint64_t v62;
  uint64_t v63;
  char *v64;
  NSObject *v65;
  uint64_t v66;
  uint64_t v67;
  NSObject *v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  NSObject *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  uint8_t *v82;
  uint64_t v83;
  char *v84;
  NSObject *v85;
  NSObject *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;

  v94 = a1;
  v91 = a5;
  v8 = sub_100004828(&qword_100630A48);
  __chkstk_darwin(v8);
  v90 = (char *)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = type metadata accessor for URL(0);
  v96 = *(_QWORD *)(v92 - 8);
  __chkstk_darwin(v92);
  v93 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Logger(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v84 - v17;
  __chkstk_darwin(v16);
  v20 = (char *)&v84 - v19;
  v21 = v95;
  sub_1000D7010((uint64_t)a2, a3, (uint64_t)a4);
  if (v21)
    return;
  v85 = a2;
  v86 = a4;
  v94 = 0;
  v95 = a3;
  v87 = v15;
  v88 = v11;
  v23 = v92;
  v84 = v18;
  v89 = v12;
  if (!v22)
  {
    v48 = v20;
    defaultLogger()(0);
    v49 = v95;
    v50 = swift_bridgeObjectRetain_n(v95, 2);
    v51 = Logger.logObject.getter(v50);
    v52 = static os_log_type_t.debug.getter(v51);
    v53 = os_log_type_enabled(v51, v52);
    v54 = v88;
    if (v53)
    {
      v55 = swift_slowAlloc(22, -1);
      v56 = (_QWORD *)swift_slowAlloc(64, -1);
      v99 = v56;
      *(_DWORD *)v55 = 136315394;
      swift_bridgeObjectRetain(v49);
      v97 = sub_1000E3AC8((uint64_t)v85, v49, (uint64_t *)&v99);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v97, &v98, v55 + 4);
      swift_bridgeObjectRelease_n(v49, 3);
      *(_WORD *)(v55 + 12) = 2080;
      v57 = IdentityTarget.debugDescription.getter(v86);
      v59 = v58;
      v97 = sub_1000E3AC8(v57, v58, (uint64_t *)&v99);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v97, &v98, v55 + 14);
      swift_bridgeObjectRelease(v59);
      _os_log_impl((void *)&_mh_execute_header, v51, v52, "No proofing session for proofingSessionID %s and target %s", (uint8_t *)v55, 0x16u);
      v60 = 2;
      swift_arrayDestroy(v56, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v56, -1, -1);
      swift_slowDealloc(v55, -1, -1);

    }
    else
    {

      v60 = 2;
      swift_bridgeObjectRelease_n(v49, 2);
    }
    (*(void (**)(char *, uint64_t))(v89 + 8))(v48, v54);
    v61 = 0;
LABEL_46:
    v74 = v91;
    goto LABEL_47;
  }
  v86 = v22;
  v24 = -[NSObject uploadAssets](v22, "uploadAssets");
  if (!v24)
  {
LABEL_43:
    v78 = v87;
    v79 = defaultLogger()(v24);
    v80 = Logger.logObject.getter(v79);
    v81 = static os_log_type_t.debug.getter(v80);
    if (os_log_type_enabled(v80, v81))
    {
      v82 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v82 = 0;
      _os_log_impl((void *)&_mh_execute_header, v80, v81, "Upload assets doesn't exist to be uploaded.", v82, 2u);
      swift_slowDealloc(v82, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v89 + 8))(v78, v88);
    v61 = 0;
    v60 = 2;
    goto LABEL_46;
  }
  v25 = v24;
  sub_10045A180(v25);
  v27 = v26;

  v28 = (uint64_t)sub_1004589E4(v27);
  swift_release(v27);
  if (!v28)
  {

    goto LABEL_43;
  }
  v85 = v25;
  v95 = v28;
  if ((unint64_t)v28 >> 62)
  {
    if (v28 >= 0)
      v75 = v28 & 0xFFFFFFFFFFFFFF8;
    else
      v75 = v28;
    swift_bridgeObjectRetain(v28);
    v76 = _CocoaArrayWrapper.endIndex.getter(v75);
    swift_bridgeObjectRelease(v28);
    if (v76 > 0)
    {
      v99 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain(v28);
      v77 = _CocoaArrayWrapper.endIndex.getter(v75);
      swift_bridgeObjectRelease(v28);
      if (!v77)
      {
        swift_bridgeObjectRelease(v95);
        v62 = (unint64_t)_swiftEmptyArrayStorage;
        goto LABEL_25;
      }
      v30 = v77;
      if (v77 >= 1)
      {
        v28 = v95;
        v29 = (uint64_t)v90;
        goto LABEL_8;
      }
      __break(1u);
    }
    goto LABEL_42;
  }
  v29 = (uint64_t)v90;
  if (!*(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_42:

    v24 = (id)swift_bridgeObjectRelease(v28);
    goto LABEL_43;
  }
  v30 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v99 = _swiftEmptyArrayStorage;
LABEL_8:
  v31 = 0;
  v32 = v28 & 0xC000000000000001;
  do
  {
    if (v32)
      v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v31, v28);
    else
      v33 = *(id *)(v28 + 8 * v31 + 32);
    v34 = v33;
    v35 = objc_msgSend(v33, "assetFileURL", v84);
    if (!v35)
    {

      goto LABEL_10;
    }
    v36 = v35;
    v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
    v39 = v38;

    v40 = v37;
    v41 = v96;
    URL.init(string:)(v40, v39);
    swift_bridgeObjectRelease(v39);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v29, 1, v23) == 1)
    {
      sub_100008030(v29, &qword_100630A48);
    }
    else
    {
      v42 = v93;
      v43 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 32))(v93, v29, v23);
      v44 = URL.isFileOnDisk.getter(v43);
      v45 = (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v42, v23);
      if ((v44 & 1) != 0)
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v45);
        v46 = v99[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v46);
        v47 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v46, v34);
        specialized ContiguousArray._endMutation()(v47);
        v28 = v95;
        goto LABEL_10;
      }
    }

    v28 = v95;
LABEL_10:
    ++v31;
  }
  while (v30 != v31);
  swift_bridgeObjectRelease(v28);
  v62 = (unint64_t)v99;
LABEL_25:
  v63 = v89;
  v64 = v84;
  v65 = v85;
  if ((v62 & 0x8000000000000000) != 0 || (v62 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain(v62);
    v66 = _CocoaArrayWrapper.endIndex.getter(v83);
    swift_release(v62);
  }
  else
  {
    v66 = *(_QWORD *)(v62 + 16);
  }
  v67 = swift_release(v62);
  if (v66 > 0)
  {
    v68 = v86;
    v61 = -[NSObject totalUploadAssetsFileSizeInBytes](v86, "totalUploadAssetsFileSizeInBytes");
    v60 = -[NSObject canUploadOnExpensiveNetwork](v68, "canUploadOnExpensiveNetwork");

    goto LABEL_46;
  }
  v69 = defaultLogger()(v67);
  v70 = Logger.logObject.getter(v69);
  v71 = static os_log_type_t.debug.getter(v70);
  if (os_log_type_enabled(v70, v71))
  {
    v72 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v72 = 0;
    _os_log_impl((void *)&_mh_execute_header, v70, v71, "Upload assets doesn't exist to be uploaded.", v72, 2u);
    swift_slowDealloc(v72, -1, -1);
    v73 = v65;
    v65 = v86;
  }
  else
  {
    v73 = v70;
    v70 = v86;
  }
  v74 = v91;

  (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v88);
  v61 = 0;
  v60 = 2;
LABEL_47:
  *(_QWORD *)v74 = v61;
  *(_BYTE *)(v74 + 8) = v60;
}

uint64_t sub_100201CD8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;

  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v26 - v11;
  if (a2)
  {
    v13 = *(_QWORD *)(v2 + 88);
    swift_retain(v13);
    swift_bridgeObjectRetain(a2);
    v14 = sub_1001A4CC0(a1, a2);
    v15 = swift_release(v13);
    if (v14)
    {
      swift_bridgeObjectRelease(a2);
      __asm { BR              X10 }
    }
    defaultLogger()(v15);
    swift_bridgeObjectRetain(a2);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.debug.getter(v21);
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc(12, -1);
      v24 = swift_slowAlloc(32, -1);
      v29 = v24;
      *(_DWORD *)v23 = 136315138;
      v27 = v23 + 4;
      swift_bridgeObjectRetain(a2);
      v28 = sub_1000E3AC8(a1, a2, &v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29, v27);
      swift_bridgeObjectRelease_n(a2, 3);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "No pass exists with the credential identifier - %s ", v23, 0xCu);
      swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v24, -1, -1);
      swift_slowDealloc(v23, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a2, 2);
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  }
  else
  {
    v16 = defaultLogger()(v10);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.debug.getter(v17);
    if (os_log_type_enabled(v17, (os_log_type_t)v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, (os_log_type_t)v18, "Credential Identifier is nil, cannot fetch the ID Type", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  return 0;
}

void sub_100201FB0()
{
  uint64_t v0;

  swift_release(v0);
  JUMPOUT(0x100201F90);
}

void sub_100201FC4()
{
  uint64_t v0;

  swift_release(v0);
  JUMPOUT(0x100201F90);
}

void sub_100201FE4()
{
  uint64_t v0;

  swift_release(v0);
  JUMPOUT(0x100201F90);
}

void sub_100202008()
{
  uint64_t v0;

  swift_release(v0);
  JUMPOUT(0x100201F88);
}

uint64_t sub_100202014(uint64_t a1, char a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;

  *(_BYTE *)(v4 + 58) = a3;
  *(_BYTE *)(v4 + 57) = a2;
  *(_QWORD *)(v4 + 96) = a1;
  *(_QWORD *)(v4 + 104) = v3;
  v5 = type metadata accessor for DIPError.Code(0);
  *(_QWORD *)(v4 + 112) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 120) = v6;
  *(_QWORD *)(v4 + 128) = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IdentityProofingAttributeConfiguration(0);
  *(_QWORD *)(v4 + 136) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 144) = v8;
  *(_QWORD *)(v4 + 152) = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Logger(0);
  *(_QWORD *)(v4 + 160) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v4 + 168) = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 176) = swift_task_alloc(v11);
  *(_QWORD *)(v4 + 184) = swift_task_alloc(v11);
  *(_QWORD *)(v4 + 192) = swift_task_alloc(v11);
  *(_QWORD *)(v4 + 200) = swift_task_alloc(v11);
  *(_QWORD *)(v4 + 208) = swift_task_alloc(v11);
  *(_QWORD *)(v4 + 216) = swift_task_alloc(v11);
  *(_QWORD *)(v4 + 224) = swift_task_alloc(v11);
  *(_QWORD *)(v4 + 232) = swift_task_alloc(v11);
  *(_QWORD *)(v4 + 240) = swift_task_alloc(v11);
  v12 = type metadata accessor for IdentityProofingStaticWorkflow(0);
  *(_QWORD *)(v4 + 248) = v12;
  v13 = (*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 256) = swift_task_alloc(v13);
  *(_QWORD *)(v4 + 264) = swift_task_alloc(v13);
  return swift_task_switch(sub_100202164, 0, 0);
}

uint64_t sub_100202164(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  IdentityProofingConfiguration.state.getter(a1);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)(v1 + 104);
    v5 = String.lowercased()();
    swift_bridgeObjectRelease(v3);
    *(Swift::String *)(v1 + 272) = v5;
    v6 = *(_QWORD *)(v4 + 144);
    *(_QWORD *)(v1 + 288) = v6;
    v7 = dword_100640F34;
    swift_retain(v6);
    v8 = (_QWORD *)swift_task_alloc(v7);
    *(_QWORD *)(v1 + 296) = v8;
    *v8 = v1;
    v8[1] = sub_10020247C;
    return sub_100430D0C(*(_QWORD *)(v1 + 264));
  }
  else
  {
    v10 = *(_QWORD *)(v1 + 128);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v1 + 120) + 104))(v10, enum case for DIPError.Code.idStateUnavailable(_:), *(_QWORD *)(v1 + 112));
    v11 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v12 = type metadata accessor for DIPError(0);
    v13 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    v14 = swift_allocError(v12, v13, 0, 0);
    v15 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000043, 0x8000000100554BD0, 0, v10, 0, v11, 0xD00000000000007CLL, 0x80000001005549D0, 0xD000000000000057, 0x8000000100554C20, 434);
    swift_willThrow(v15);
    v19 = *(_QWORD *)(v1 + 264);
    v20 = *(_QWORD *)(v1 + 256);
    v21 = *(_QWORD *)(v1 + 240);
    v22 = *(_QWORD *)(v1 + 232);
    v23 = *(_QWORD *)(v1 + 224);
    v24 = *(_QWORD *)(v1 + 216);
    v25 = *(_QWORD *)(v1 + 208);
    v26 = *(_QWORD *)(v1 + 200);
    v27 = *(_QWORD *)(v1 + 192);
    v28 = *(_QWORD *)(v1 + 184);
    v29 = *(_QWORD *)(v1 + 176);
    v30 = *(_QWORD *)(v1 + 152);
    v16 = *(_QWORD *)(v1 + 128);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v1 + 120) + 104))(v16, enum case for DIPError.Code.internalError(_:), *(_QWORD *)(v1 + 112));
    swift_errorRetain(v14);
    v17 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    swift_allocError(v12, v13, 0, 0);
    v18 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000002DLL, 0x8000000100554C80, v14, v16, 0, v17, 0xD00000000000007CLL, 0x80000001005549D0, 0xD000000000000057, 0x8000000100554C20, 523);
    swift_willThrow(v18);
    swift_errorRelease(v14);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v16);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_10020247C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 296);
  *(_QWORD *)(*v1 + 304) = v0;
  swift_task_dealloc(v3);
  v4 = *(_QWORD *)(v2 + 288);
  if (v0)
  {
    v5 = *(_QWORD *)(v2 + 280);
    swift_release(v4);
    swift_bridgeObjectRelease(v5);
    v6 = sub_100206B04;
  }
  else
  {
    swift_release(v4);
    v6 = sub_1002024F8;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_1002024F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  _QWORD *v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  Swift::String v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  id v89;
  NSObject *v90;
  os_log_type_t v91;
  _BOOL4 v92;
  uint64_t v93;
  uint64_t v94;
  void (**v95)(uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t (*v102)(uint64_t, uint64_t);
  unint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  NSObject *v130;
  os_log_type_t v131;
  _BOOL4 v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint8_t *v136;
  uint64_t v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  NSObject *v144;
  os_log_type_t v145;
  uint8_t *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  _QWORD *v152;
  uint64_t v154;
  uint64_t v155;
  NSObject *v156;
  os_log_type_t v157;
  _BOOL4 v158;
  unint64_t v159;
  uint64_t v160;
  void (*v161)(uint64_t, uint64_t);
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  unint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  unint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  void (*v183)(uint64_t, uint64_t);
  void (*v184)(uint64_t, uint64_t);
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  _QWORD *v190;
  uint64_t v191;
  _QWORD *v192;
  uint64_t v193;
  unint64_t v194;
  int v195;
  int v196;
  int v197;
  uint64_t v198;
  char v199;
  unint64_t v200;
  uint64_t v201;
  uint64_t v202;
  _QWORD *v203;
  uint64_t v204;
  _QWORD *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  _QWORD *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  void (*v224)(uint64_t, uint64_t);
  uint64_t v225;
  uint64_t (*v226)(uint64_t, uint64_t);
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232[3];

  *(_QWORD *)(v0 + 64) = _swiftEmptyArrayStorage;
  v1 = v0 + 64;
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v2 + *(int *)(*(_QWORD *)(v0 + 248) + 40));
  *(_QWORD *)(v0 + 312) = v3;
  if (!v3)
  {
    v118 = *(_QWORD *)(v0 + 120);
    v117 = *(_QWORD *)(v0 + 128);
    v119 = *(_QWORD *)(v0 + 112);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 280));
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v118 + 104))(v117, enum case for DIPError.Code.invalidStaticWorkflow(_:), v119);
    v120 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v121 = type metadata accessor for DIPError(0);
    v122 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    v123 = swift_allocError(v121, v122, 0, 0);
    v124 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000004CLL, 0x8000000100554CB0, 0, v117, 0, v120, 0xD00000000000007CLL, 0x80000001005549D0, 0xD000000000000057, 0x8000000100554C20, 444);
    swift_willThrow(v124);
    v125 = v2;
    goto LABEL_69;
  }
  v4 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)(v0 + 320) = v4;
  if (!v4)
  {
    v114 = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 280));
    v112 = 0;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    v116 = 0;
    v115 = 0;
    v11 = 0xE000000000000000;
    v5 = (uint64_t)_swiftEmptyArrayStorage;
    v10 = 1;
LABEL_57:
    *(_BYTE *)(v0 + 748) = v115;
    *(_QWORD *)(v0 + 680) = v116;
    *(_QWORD *)(v0 + 672) = v8;
    *(_QWORD *)(v0 + 664) = v7;
    *(_QWORD *)(v0 + 656) = v6;
    *(_QWORD *)(v0 + 648) = v10;
    *(_QWORD *)(v0 + 640) = v11;
    *(_QWORD *)(v0 + 632) = v112;
    *(_QWORD *)(v0 + 16) = v10;
    *(_QWORD *)(v0 + 24) = v6;
    *(_QWORD *)(v0 + 32) = v7;
    *(_QWORD *)(v0 + 40) = v8;
    *(_QWORD *)(v0 + 48) = v116;
    *(_BYTE *)(v0 + 56) = v115;
    if ((unint64_t)v5 >> 62)
    {
LABEL_77:
      if (v5 < 0)
        v193 = v5;
      else
        v193 = v5 & 0xFFFFFFFFFFFFFF8;
      v231 = v10;
      v194 = v11;
      swift_bridgeObjectRetain(v5);
      v126 = _CocoaArrayWrapper.endIndex.getter(v193);
      v114 = swift_bridgeObjectRelease(v5);
      v11 = v194;
      v10 = v231;
    }
    else
    {
      v126 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v127 = *(_QWORD *)(v0 + 264);
    if (v126 >= 1)
    {
      v128 = *(_QWORD *)(v0 + 256);
      defaultLogger()(v114);
      v129 = sub_100209818(v127, v128);
      v130 = Logger.logObject.getter(v129);
      v131 = static os_log_type_t.debug.getter(v130);
      v132 = os_log_type_enabled(v130, v131);
      v133 = *(_QWORD *)(v0 + 256);
      if (v132)
      {
        v134 = v1 + 24;
        v135 = *(_QWORD *)(v0 + 248);
        v136 = (uint8_t *)swift_slowAlloc(12, -1);
        v137 = swift_slowAlloc(32, -1);
        v232[0] = v137;
        *(_DWORD *)v136 = 136315138;
        v138 = (uint64_t *)(v133 + *(int *)(v135 + 44));
        v139 = v138[1];
        if (v139)
        {
          v140 = *v138;
          v141 = v138[1];
        }
        else
        {
          v141 = 0xE300000000000000;
          v140 = 7104878;
        }
        v191 = *(_QWORD *)(v0 + 256);
        v218 = *(_QWORD *)(v0 + 168);
        v222 = *(_QWORD *)(v0 + 160);
        v230 = *(_QWORD *)(v0 + 184);
        swift_bridgeObjectRetain(v139);
        *(_QWORD *)(v0 + 88) = sub_1000E3AC8(v140, v141, v232);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v134, v0 + 96, v136 + 4);
        swift_bridgeObjectRelease(v141);
        sub_100006350(v191);
        _os_log_impl((void *)&_mh_execute_header, v130, v131, "The learnMoreURL is %s", v136, 0xCu);
        swift_arrayDestroy(v137, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v137, -1, -1);
        swift_slowDealloc(v136, -1, -1);

        v183 = *(void (**)(uint64_t, uint64_t))(v218 + 8);
        v183(v230, v222);
      }
      else
      {
        v180 = *(_QWORD *)(v0 + 184);
        v181 = *(_QWORD *)(v0 + 160);
        v182 = *(_QWORD *)(v0 + 168);
        sub_100006350(*(_QWORD *)(v0 + 256));

        v183 = *(void (**)(uint64_t, uint64_t))(v182 + 8);
        v183(v180, v181);
      }
      *(_QWORD *)(v0 + 688) = v183;
      v192 = (_QWORD *)swift_task_alloc(dword_10063879C);
      *(_QWORD *)(v0 + 696) = v192;
      *v192 = v0;
      v192[1] = sub_1002060EC;
      return sub_1002070C0();
    }
    v228 = *(_QWORD *)(v0 + 264);
    v166 = *(_QWORD *)(v0 + 120);
    v167 = *(_QWORD *)(v0 + 128);
    v168 = *(_QWORD *)(v0 + 112);
    swift_bridgeObjectRelease(v11);
    sub_10008F45C(v10);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v166 + 104))(v167, enum case for DIPError.Code.invalidStaticWorkflow(_:), v168);
    v169 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v121 = type metadata accessor for DIPError(0);
    v170 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    v123 = swift_allocError(v121, v170, 0, 0);
    v171 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000036, 0x8000000100554D00, 0, v167, 0, v169, 0xD00000000000007CLL, 0x80000001005549D0, 0xD000000000000057, 0x8000000100554C20, 500);
    swift_willThrow(v171);
    v125 = v228;
LABEL_69:
    sub_100006350(v125);
    v172 = *(_QWORD *)(v0 + 256);
    v173 = *(_QWORD *)(v0 + 264);
    v174 = *(_QWORD *)(v0 + 232);
    v175 = *(_QWORD *)(v0 + 240);
    v204 = *(_QWORD *)(v0 + 224);
    v206 = *(_QWORD *)(v0 + 216);
    v209 = *(_QWORD *)(v0 + 208);
    v211 = *(_QWORD *)(v0 + 200);
    v214 = *(_QWORD *)(v0 + 192);
    v217 = *(_QWORD *)(v0 + 184);
    v221 = *(_QWORD *)(v0 + 176);
    v229 = *(_QWORD *)(v0 + 152);
    v176 = *(_QWORD *)(v0 + 128);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 104))(v176, enum case for DIPError.Code.internalError(_:), *(_QWORD *)(v0 + 112));
    swift_errorRetain(v123);
    v177 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    type metadata accessor for DIPError(0);
    v178 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    swift_allocError(v121, v178, 0, 0);
    v179 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000002DLL, 0x8000000100554C80, v123, v176, 0, v177, 0xD00000000000007CLL, 0x80000001005549D0, 0xD000000000000057, 0x8000000100554C20, 523);
    swift_willThrow(v179);
    swift_errorRelease(v123);
    swift_task_dealloc(v173);
    swift_task_dealloc(v172);
    swift_task_dealloc(v175);
    swift_task_dealloc(v174);
    swift_task_dealloc(v204);
    swift_task_dealloc(v206);
    swift_task_dealloc(v209);
    swift_task_dealloc(v211);
    swift_task_dealloc(v214);
    swift_task_dealloc(v217);
    swift_task_dealloc(v221);
    swift_task_dealloc(v229);
    swift_task_dealloc(v176);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  swift_bridgeObjectRetain(v3);
  v5 = 0;
  v6 = 0;
  v7 = 0;
  v8 = 0;
  v198 = 0;
  v199 = 0;
  v9 = 0;
  v200 = 0xE000000000000000;
  v10 = 1;
  v205 = (_QWORD *)(v0 + 64);
  while (1)
  {
    *(_QWORD *)(v0 + 328) = v9;
    v11 = *(_QWORD *)(v0 + 312);
    if (v9 >= *(_QWORD *)(v11 + 16))
    {
      __break(1u);
      goto LABEL_77;
    }
    v223 = v10;
    v201 = v5;
    v207 = v7;
    v12 = v11 + 96 * v9;
    v13 = *(_QWORD *)(v12 + 40);
    v202 = *(_QWORD *)(v12 + 32);
    *(_QWORD *)(v0 + 336) = v13;
    *(_QWORD *)(v0 + 344) = *(_QWORD *)(v12 + 48);
    v14 = *(_QWORD **)(v12 + 56);
    *(_QWORD *)(v0 + 352) = v14;
    v15 = *(_QWORD *)(v12 + 64);
    *(_QWORD *)(v0 + 360) = v15;
    *(_QWORD *)(v0 + 368) = *(_QWORD *)(v12 + 72);
    *(_QWORD *)(v0 + 376) = *(_QWORD *)(v12 + 80);
    *(_QWORD *)(v0 + 384) = *(_QWORD *)(v12 + 88);
    *(_QWORD *)(v0 + 392) = *(_QWORD *)(v12 + 96);
    *(_BYTE *)(v0 + 59) = *(_BYTE *)(v12 + 104);
    v16 = *(_QWORD **)(v12 + 112);
    *(_QWORD *)(v0 + 400) = v16;
    v17 = *(_QWORD **)(v12 + 120);
    *(_QWORD *)(v0 + 408) = v17;
    v212 = v13;
    swift_bridgeObjectRetain_n(v13, 2);
    v203 = v14;
    swift_bridgeObjectRetain(v14);
    sub_10008F4B0(v15);
    swift_bridgeObjectRetain(v17);
    swift_bridgeObjectRetain(v16);
    v19 = IdentityProofingConfiguration.state.getter(v18);
    if (!v20)
    {
      swift_bridgeObjectRelease_n(v212, 2);
      swift_bridgeObjectRelease(v14);
      sub_10008F45C(v15);
      v22 = v16;
      goto LABEL_24;
    }
    v21 = v20;
    v219 = v16;
    if (v202 == v19 && v20 == v212)
      break;
    v23 = _stringCompareWithSmolCheck(_:_:expecting:)(v202, v212, v19, v20, 0);
    swift_bridgeObjectRelease(v21);
    swift_bridgeObjectRelease(v212);
    if ((v23 & 1) != 0)
      goto LABEL_11;
    swift_bridgeObjectRelease(v212);
    swift_bridgeObjectRelease(v14);
    sub_10008F45C(v15);
    v22 = v219;
LABEL_24:
    swift_bridgeObjectRelease(v22);
    swift_bridgeObjectRelease(v17);
    v7 = v207;
    v5 = v201;
    v10 = v223;
LABEL_53:
    v9 = *(_QWORD *)(v0 + 328) + 1;
    v1 = v0 + 64;
    if (v9 == *(_QWORD *)(v0 + 320))
    {
      v112 = v5;
      v113 = *(_QWORD *)(v0 + 312);
      swift_bridgeObjectRelease(*(_QWORD *)(v0 + 280));
      v114 = swift_bridgeObjectRelease(v113);
      v5 = *(_QWORD *)(v0 + 64);
      v11 = v200;
      v115 = v199;
      v116 = v198;
      goto LABEL_57;
    }
  }
  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v212);
LABEL_11:
  v24 = *(unsigned __int8 *)(v0 + 57);
  sub_10008F45C(v223);
  v25 = swift_bridgeObjectRelease(v200);
  if (v24 == 1)
  {
    if (*(_BYTE *)(v0 + 58))
    {
      v26 = defaultLogger()(v25);
      v27 = Logger.logObject.getter(v26);
      v28 = static os_log_type_t.debug.getter(v27);
      v29 = v219;
      if (os_log_type_enabled(v27, v28))
      {
        v30 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v30 = 0;
        _os_log_impl((void *)&_mh_execute_header, v27, v28, "Preparing UI for watch device migration flow", v30, 2u);
        swift_slowDealloc(v30, -1, -1);
      }
      v31 = *(_QWORD *)(v0 + 240);
    }
    else
    {
      v42 = defaultLogger()(v25);
      v27 = Logger.logObject.getter(v42);
      v43 = static os_log_type_t.debug.getter(v27);
      v29 = v219;
      if (os_log_type_enabled(v27, v43))
      {
        v44 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v44 = 0;
        _os_log_impl((void *)&_mh_execute_header, v27, v43, "Preparing UI from static workflow for watch", v44, 2u);
        swift_slowDealloc(v44, -1, -1);
      }
      v31 = *(_QWORD *)(v0 + 232);
    }
    v45 = *(_QWORD *)(v0 + 160);
    v46 = *(_QWORD *)(v0 + 168);

    v39 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
    v39(v31, v45);
    if (v29)
      v40 = v29;
    else
      v40 = _swiftEmptyArrayStorage;
    v41 = v29;
  }
  else if (*(_BYTE *)(v0 + 58))
  {
    v32 = defaultLogger()(v25);
    v33 = Logger.logObject.getter(v32);
    v34 = static os_log_type_t.debug.getter(v33);
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v35 = 0;
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "Preparing UI from static workflow for device migration", v35, 2u);
      swift_slowDealloc(v35, -1, -1);
    }
    v36 = *(_QWORD *)(v0 + 224);
    v37 = *(_QWORD *)(v0 + 160);
    v38 = *(_QWORD *)(v0 + 168);

    v39 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
    v39(v36, v37);
    if (v17)
      v40 = v17;
    else
      v40 = _swiftEmptyArrayStorage;
    v41 = v17;
  }
  else
  {
    v47 = defaultLogger()(v25);
    v48 = Logger.logObject.getter(v47);
    v49 = static os_log_type_t.debug.getter(v48);
    if (os_log_type_enabled(v48, v49))
    {
      v50 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v50 = 0;
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "Preparing UI from static workflow for phone", v50, 2u);
      swift_slowDealloc(v50, -1, -1);
    }
    v51 = *(_QWORD *)(v0 + 216);
    v52 = *(_QWORD *)(v0 + 160);
    v53 = *(_QWORD *)(v0 + 168);

    v39 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
    v39(v51, v52);
    v41 = v203;
    v40 = v203;
  }
  *(_QWORD *)(v0 + 416) = v39;
  *(_QWORD *)(v0 + 424) = v40;
  v54 = v40[2];
  *(_QWORD *)(v0 + 432) = v54;
  swift_bridgeObjectRetain(v41);
  if (!v54)
  {
LABEL_52:
    v220 = *(_QWORD *)(v0 + 400);
    v227 = *(_QWORD *)(v0 + 408);
    v108 = *(_QWORD *)(v0 + 360);
    v109 = *(_QWORD *)(v0 + 344);
    v216 = *(_QWORD *)(v0 + 352);
    v110 = *(_QWORD *)(v0 + 336);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease(v40);
    *(_QWORD *)(v0 + 80) = v109;
    sub_10008F4B0(v108);
    v5 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v200 = v111;
    swift_bridgeObjectRelease(v110);
    swift_bridgeObjectRelease(v216);
    sub_10008F45C(v108);
    swift_bridgeObjectRelease(v220);
    swift_bridgeObjectRelease(v227);
    v199 = *(_BYTE *)(v0 + 59);
    v8 = *(_QWORD *)(v0 + 384);
    v198 = *(_QWORD *)(v0 + 392);
    v6 = *(_QWORD *)(v0 + 368);
    v7 = *(_QWORD *)(v0 + 376);
    v10 = *(_QWORD *)(v0 + 360);
    goto LABEL_53;
  }
  v55 = (void *)objc_opt_self(NSUserDefaults);
  v56 = 0;
  for (*(_QWORD *)(v0 + 440) = v55; ; v55 = *(void **)(v0 + 440))
  {
    v224 = v39;
    *(_QWORD *)(v0 + 448) = v39;
    *(_QWORD *)(v0 + 456) = v56;
    v57 = (_QWORD *)(*(_QWORD *)(v0 + 424) + 112 * v56);
    *(_QWORD *)(v0 + 464) = v57[5];
    v58 = v57[6];
    *(_QWORD *)(v0 + 472) = v58;
    *(_QWORD *)(v0 + 480) = v57[7];
    v59 = v57[8];
    *(_QWORD *)(v0 + 488) = v59;
    v60 = v57[9];
    *(_QWORD *)(v0 + 496) = v60;
    *(_QWORD *)(v0 + 504) = v57[15];
    v61 = v57[16];
    *(_QWORD *)(v0 + 512) = v61;
    v62 = v57[17];
    *(_QWORD *)(v0 + 520) = v62;
    v63 = v57[14];
    *(_QWORD *)(v0 + 528) = v63;
    v65 = v57[12];
    v64 = v57[13];
    *(_QWORD *)(v0 + 536) = v65;
    v66 = v57[10];
    *(_QWORD *)(v0 + 544) = v66;
    *(_QWORD *)(v0 + 552) = sub_1000DEF64(v64, v63);
    *(_QWORD *)(v0 + 560) = v67;
    swift_bridgeObjectRetain(v62);
    swift_bridgeObjectRetain(v58);
    swift_bridgeObjectRetain(v59);
    swift_bridgeObjectRetain(v60);
    swift_bridgeObjectRetain(v66);
    swift_bridgeObjectRetain(v65);
    swift_bridgeObjectRetain(v63);
    v68 = objc_msgSend(v55, "standardUserDefaults", swift_bridgeObjectRetain(v61).n128_f64[0]);
    v69._countAndFlagsBits = 0xD00000000000001CLL;
    v69._object = (void *)0x80000001005491E0;
    LOBYTE(v58) = NSUserDefaults.internalBool(forKey:)(v69);

    if ((v58 & 1) != 0)
      break;
    v70 = *(_QWORD *)(v0 + 520);
    v71 = *(_QWORD *)(v0 + 560);
    if (v70)
    {
      swift_bridgeObjectRetain(v70);
      v154 = swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
      defaultLogger()(v154);
      v155 = swift_bridgeObjectRetain_n(v71, 2);
      v156 = Logger.logObject.getter(v155);
      v157 = static os_log_type_t.debug.getter(v156);
      v158 = os_log_type_enabled(v156, v157);
      v159 = *(_QWORD *)(v0 + 560);
      if (v158)
      {
        v160 = *(_QWORD *)(v0 + 552);
        v161 = *(void (**)(uint64_t, uint64_t))(v0 + 448);
        v162 = *(_QWORD *)(v0 + 200);
        v163 = *(_QWORD *)(v0 + 160);
        v164 = swift_slowAlloc(12, -1);
        v165 = swift_slowAlloc(32, -1);
        v232[0] = v165;
        *(_DWORD *)v164 = 136315138;
        swift_bridgeObjectRetain(v159);
        *(_QWORD *)(v164 + 4) = sub_1000E3AC8(v160, v159, v232);
        swift_bridgeObjectRelease_n(v159, 3);
        _os_log_impl((void *)&_mh_execute_header, v156, v157, "Image assets field exists for the page -> %s", (uint8_t *)v164, 0xCu);
        swift_arrayDestroy(v165, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v165, -1, -1);
        swift_slowDealloc(v164, -1, -1);

        v161(v162, v163);
      }
      else
      {
        v184 = *(void (**)(uint64_t, uint64_t))(v0 + 448);
        v185 = *(_QWORD *)(v0 + 200);
        v186 = *(_QWORD *)(v0 + 160);
        swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 560), 2);

        v184(v185, v186);
      }
      v187 = *(_QWORD *)(v0 + 520);
      v188 = *(_QWORD *)(*(_QWORD *)(v0 + 104) + 136);
      *(_QWORD *)(v0 + 600) = v188;
      v189 = dword_10063454C;
      swift_retain(v188);
      v190 = (_QWORD *)swift_task_alloc(v189);
      *(_QWORD *)(v0 + 608) = v190;
      *v190 = v0;
      v190[1] = sub_100204CF8;
      return sub_1000F1E28(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 280), v187);
    }
    v72 = *(_QWORD *)(v0 + 552);
    if (v72 == 0xD000000000000012 && v71 == 0x8000000100547140
      || (_stringCompareWithSmolCheck(_:_:expecting:)(v72, *(_QWORD *)(v0 + 560), 0xD000000000000012, 0x8000000100547140, 0) & 1) != 0)
    {
      v73 = *(_QWORD **)(v0 + 496);
      if (v73[2] >= 2uLL)
      {
        v74 = *(_QWORD *)(*(_QWORD *)(v0 + 104) + 144);
        v75 = v73[6];
        v76 = v73[7];
        swift_retain(v74);
        swift_bridgeObjectRetain(v76);
        sub_1004340C0(v75, v76);
        swift_release(v74);
        swift_bridgeObjectRelease(v76);
      }
    }
    v77 = *(_QWORD *)(v0 + 552);
    v208 = *(_QWORD *)(v0 + 560);
    v210 = *(_QWORD *)(v0 + 544);
    v213 = *(_QWORD *)(v0 + 536);
    v215 = *(_QWORD *)(v0 + 528);
    v79 = *(_QWORD *)(v0 + 504);
    v78 = *(_QWORD *)(v0 + 512);
    v81 = *(_QWORD *)(v0 + 488);
    v80 = *(_QWORD *)(v0 + 496);
    v82 = *(_QWORD *)(v0 + 472);
    v83 = *(_QWORD *)(v0 + 480);
    v84 = *(_QWORD *)(v0 + 464);
    v225 = *(_QWORD *)(v0 + 520);
    v85 = objc_allocWithZone((Class)type metadata accessor for IdentityProofingUIConfig(0));
    swift_bridgeObjectRetain(v82);
    swift_bridgeObjectRetain(v81);
    swift_bridgeObjectRetain(v80);
    swift_bridgeObjectRetain(v78);
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    LOBYTE(v197) = 1;
    LOBYTE(v196) = 1;
    LOBYTE(v195) = 1;
    v87 = (void *)IdentityProofingUIConfig.init(view:title:subTitle:url:primaryButtonTitle:secondaryButtonTitle:tertiaryButtonTitle:messages:fields:caption:minLength:maxLength:placeholder:displayName:imageAssetsData:options:isUIEnabled:)(v77, v208, v84, v82, v83, v81, 0, 0, 0, 0, 0, 0, 0, 0, 0, v80, v79, v78, 0,
                    v195,
                    0,
                    v196,
                    0,
                    0,
                    0,
                    0,
                    v86,
                    0,
                    v197);
    swift_bridgeObjectRelease(v82);
    swift_bridgeObjectRelease(v81);
    swift_bridgeObjectRelease(v80);
    swift_bridgeObjectRelease(v210);
    swift_bridgeObjectRelease(v213);
    swift_bridgeObjectRelease(v215);
    swift_bridgeObjectRelease(v78);
    v88 = swift_bridgeObjectRelease(v225);
    defaultLogger()(v88);
    v89 = v87;
    v90 = Logger.logObject.getter(v89);
    v91 = static os_log_type_t.debug.getter(v90);
    v92 = os_log_type_enabled(v90, v91);
    v93 = *(_QWORD *)(v0 + 192);
    v94 = *(_QWORD *)(v0 + 160);
    if (v92)
    {
      v95 = (void (**)(uint64_t, uint64_t))(v0 + 416);
      v226 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 416);
      v96 = swift_slowAlloc(12, -1);
      v97 = swift_slowAlloc(32, -1);
      v232[0] = v97;
      *(_DWORD *)v96 = 136446210;
      v98 = IdentityProofingUIConfig.view.getter();
      v100 = v99;
      *(_QWORD *)(v96 + 4) = sub_1000E3AC8(v98, v99, v232);
      swift_bridgeObjectRelease(v100);

      _os_log_impl((void *)&_mh_execute_header, v90, v91, "%{public}s to be shown to the user from static views", (uint8_t *)v96, 0xCu);
      swift_arrayDestroy(v97, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v97, -1, -1);
      swift_slowDealloc(v96, -1, -1);

      v101 = v226(v93, v94);
    }
    else
    {
      v95 = (void (**)(uint64_t, uint64_t))(v0 + 448);
      v102 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 448);

      v101 = v102(v93, v94);
    }
    v39 = *v95;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v101);
    v104 = *(_QWORD *)((*v205 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v103 = *(_QWORD *)((*v205 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v104 >= v103 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v103 > 1, v104 + 1, 1);
    v105 = *(_QWORD *)(v0 + 432);
    v106 = *(_QWORD *)(v0 + 456) + 1;
    v107 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v104, v89);
    specialized Array._endMutation()(v107);
    if (v106 == v105)
    {
      v40 = *(_QWORD **)(v0 + 424);
      goto LABEL_52;
    }
    v56 = *(_QWORD *)(v0 + 456) + 1;
  }
  v142 = swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  v143 = defaultLogger()(v142);
  v144 = Logger.logObject.getter(v143);
  v145 = static os_log_type_t.debug.getter(v144);
  if (os_log_type_enabled(v144, v145))
  {
    v146 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v146 = 0;
    _os_log_impl((void *)&_mh_execute_header, v144, v145, "Adding assets to the page as the internal setting is switched on", v146, 2u);
    swift_slowDealloc(v146, -1, -1);
  }
  v147 = *(_QWORD *)(v0 + 208);
  v148 = *(_QWORD *)(v0 + 160);
  v149 = *(_QWORD *)(v0 + 104);

  v224(v147, v148);
  v150 = *(_QWORD *)(v149 + 136);
  *(_QWORD *)(v0 + 568) = v150;
  v151 = dword_10063454C;
  swift_retain(v150);
  v152 = (_QWORD *)swift_task_alloc(v151);
  *(_QWORD *)(v0 + 576) = v152;
  *v152 = v0;
  v152[1] = sub_1002038D4;
  return sub_1000F1E28(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 280), (uint64_t)&off_1006013E8);
}

uint64_t sub_1002038D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)();
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 576);
  *(_QWORD *)(*(_QWORD *)v2 + 584) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[71];
    v26 = v4[70];
    v7 = v4[68];
    v8 = v4[67];
    v17 = v4[66];
    v21 = v4[65];
    v19 = v4[64];
    v9 = v4[61];
    v10 = v4[62];
    v11 = v4[59];
    v25 = v4[53];
    v22 = v4[50];
    v23 = v4[51];
    v20 = v4[45];
    v18 = v4[44];
    v12 = v4[42];
    v24 = v4[39];
    v13 = v4[35];
    swift_arrayDestroy(&unk_100601408, 1, &type metadata for String);
    swift_release(v6);
    swift_bridgeObjectRelease(v13);
    swift_bridgeObjectRelease(v11);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v10);
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(v21);
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(v18);
    sub_10008F45C(v20);
    swift_bridgeObjectRelease(v22);
    swift_bridgeObjectRelease(v23);
    swift_bridgeObjectRelease(v26);
    swift_bridgeObjectRelease(v25);
    swift_bridgeObjectRelease(v24);
    swift_bridgeObjectRelease(v4[8]);
    v14 = sub_100206CE8;
  }
  else
  {
    v15 = v4[71];
    v4[74] = a1;
    swift_arrayDestroy(&unk_100601408, 1, &type metadata for String);
    swift_release(v15);
    v14 = sub_100203AC8;
  }
  return swift_task_switch(v14, 0, 0);
}

uint64_t sub_100203AC8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  _BOOL4 v24;
  uint64_t v25;
  uint64_t v26;
  void (**v27)(uint64_t, uint64_t);
  uint64_t (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t);
  void (*v36)(uint64_t, uint64_t);
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  uint8_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  NSObject *v75;
  os_log_type_t v76;
  uint8_t *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  os_log_type_t v84;
  uint8_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  NSObject *v89;
  os_log_type_t v90;
  uint8_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  void *v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  Swift::String v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  NSObject *v120;
  os_log_type_t v121;
  _BOOL4 v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint8_t *v126;
  uint64_t v127;
  uint64_t *v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  uint64_t v143;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  void (*v148)(uint64_t, uint64_t);
  uint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  uint64_t v152;
  uint64_t v153;
  NSObject *v154;
  os_log_type_t v155;
  _BOOL4 v156;
  unint64_t v157;
  uint64_t v158;
  void (*v159)(uint64_t, uint64_t);
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  NSObject *v166;
  os_log_type_t v167;
  uint8_t *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  _QWORD *v175;
  void (*v176)(uint64_t, uint64_t);
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  _QWORD *v182;
  uint64_t v183;
  int v184;
  int v185;
  int v186;
  _QWORD *v187;
  _QWORD *v188;
  void (**v189)(uint64_t, uint64_t);
  void (**v190)(uint64_t, uint64_t);
  uint64_t v191;
  _QWORD *v192;
  _QWORD *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  char v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  _QWORD *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  _QWORD *v220;
  uint64_t v221;
  uint64_t v222;
  _QWORD *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228[3];

  v192 = v0 + 8;
  v193 = v0 + 10;
  v188 = v0 + 11;
  v223 = (_QWORD *)v0[74];
  v189 = (void (**)(uint64_t, uint64_t))(v0 + 52);
  v190 = (void (**)(uint64_t, uint64_t))(v0 + 56);
  v187 = v0 + 12;
  while (1)
  {
    v1 = v0[65];
    v2 = v0[70];
    if (v1)
    {
      swift_bridgeObjectRetain(v1);
      v152 = swift_bridgeObjectRelease(v223);
      defaultLogger()(v152);
      v153 = swift_bridgeObjectRetain_n(v2, 2);
      v154 = Logger.logObject.getter(v153);
      v155 = static os_log_type_t.debug.getter(v154);
      v156 = os_log_type_enabled(v154, v155);
      v157 = *(_QWORD *)(v207 + 560);
      if (v156)
      {
        v158 = *(_QWORD *)(v207 + 552);
        v159 = *(void (**)(uint64_t, uint64_t))(v207 + 448);
        v160 = *(_QWORD *)(v207 + 200);
        v161 = *(_QWORD *)(v207 + 160);
        v162 = swift_slowAlloc(12, -1);
        v163 = swift_slowAlloc(32, -1);
        v228[0] = v163;
        *(_DWORD *)v162 = 136315138;
        swift_bridgeObjectRetain(v157);
        *(_QWORD *)(v162 + 4) = sub_1000E3AC8(v158, v157, v228);
        swift_bridgeObjectRelease_n(v157, 3);
        _os_log_impl((void *)&_mh_execute_header, v154, v155, "Image assets field exists for the page -> %s", (uint8_t *)v162, 0xCu);
        swift_arrayDestroy(v163, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v163, -1, -1);
        swift_slowDealloc(v162, -1, -1);

        v159(v160, v161);
      }
      else
      {
        v176 = *(void (**)(uint64_t, uint64_t))(v207 + 448);
        v177 = *(_QWORD *)(v207 + 200);
        v178 = *(_QWORD *)(v207 + 160);
        swift_bridgeObjectRelease_n(*(_QWORD *)(v207 + 560), 2);

        v176(v177, v178);
      }
      v179 = *(_QWORD *)(v207 + 520);
      v180 = *(_QWORD *)(*(_QWORD *)(v207 + 104) + 136);
      *(_QWORD *)(v207 + 600) = v180;
      v181 = dword_10063454C;
      swift_retain(v180);
      v182 = (_QWORD *)swift_task_alloc(v181);
      *(_QWORD *)(v207 + 608) = v182;
      *v182 = v207;
      v182[1] = sub_100204CF8;
      return sub_1000F1E28(*(_QWORD *)(v207 + 272), *(_QWORD *)(v207 + 280), v179);
    }
    v3 = v0[69];
    if (v3 == 0xD000000000000012 && v2 == 0x8000000100547140
      || (v4 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v0[70], 0xD000000000000012, 0x8000000100547140, 0),
          v0 = (_QWORD *)v207,
          (v4 & 1) != 0))
    {
      v5 = (_QWORD *)v0[62];
      if (v5[2] >= 2uLL)
      {
        v6 = *(_QWORD *)(v0[13] + 144);
        v8 = v5[6];
        v7 = v5[7];
        swift_retain(v6);
        swift_bridgeObjectRetain(v7);
        sub_1004340C0(v8, v7);
        swift_release(v6);
        swift_bridgeObjectRelease(v7);
        v0 = (_QWORD *)v207;
      }
    }
    v204 = v0[70];
    v9 = v0[69];
    v209 = v0[68];
    v212 = v0[67];
    v218 = v0[65];
    v11 = v0[63];
    v10 = v0[64];
    v13 = v0[61];
    v12 = v0[62];
    v14 = v0[59];
    v15 = v0[60];
    v16 = v0[58];
    v214 = v0[66];
    v17 = objc_allocWithZone((Class)type metadata accessor for IdentityProofingUIConfig(0));
    swift_bridgeObjectRetain(v14);
    swift_bridgeObjectRetain(v13);
    swift_bridgeObjectRetain(v12);
    swift_bridgeObjectRetain(v10);
    swift_bridgeObjectRetain(v223);
    LOBYTE(v186) = 1;
    LOBYTE(v185) = 1;
    LOBYTE(v184) = 1;
    v19 = (void *)IdentityProofingUIConfig.init(view:title:subTitle:url:primaryButtonTitle:secondaryButtonTitle:tertiaryButtonTitle:messages:fields:caption:minLength:maxLength:placeholder:displayName:imageAssetsData:options:isUIEnabled:)(v9, v204, v16, v14, v15, v13, 0, 0, 0, 0, 0, 0, 0, 0, 0, v12, v11, v10, 0,
                    v184,
                    0,
                    v185,
                    0,
                    0,
                    0,
                    0,
                    v18,
                    0,
                    v186);
    swift_bridgeObjectRelease(v14);
    swift_bridgeObjectRelease(v13);
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(v209);
    swift_bridgeObjectRelease(v212);
    swift_bridgeObjectRelease(v214);
    swift_bridgeObjectRelease(v10);
    v20 = swift_bridgeObjectRelease(v218);
    defaultLogger()(v20);
    v21 = v19;
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.debug.getter(v22);
    v24 = os_log_type_enabled(v22, v23);
    v25 = v0[24];
    v26 = v0[20];
    if (v24)
    {
      v27 = v189;
      v28 = (uint64_t (*)(uint64_t, uint64_t))*v189;
      v29 = swift_slowAlloc(12, -1);
      v30 = swift_slowAlloc(32, -1);
      v228[0] = v30;
      *(_DWORD *)v29 = 136446210;
      v31 = IdentityProofingUIConfig.view.getter();
      v33 = v32;
      *(_QWORD *)(v29 + 4) = sub_1000E3AC8(v31, v32, v228);
      swift_bridgeObjectRelease(v33);

      _os_log_impl((void *)&_mh_execute_header, v22, v23, "%{public}s to be shown to the user from static views", (uint8_t *)v29, 0xCu);
      swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v30, -1, -1);
      swift_slowDealloc(v29, -1, -1);

      v34 = v28(v25, v26);
    }
    else
    {
      v27 = v190;
      v35 = (uint64_t (*)(uint64_t, uint64_t))*v190;

      v34 = v35(v25, v26);
    }
    v36 = *v27;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v34);
    v38 = *(_QWORD *)((*v192 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v37 = *(_QWORD *)((*v192 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v38 >= v37 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v37 > 1, v38 + 1, 1);
    v39 = *(_QWORD *)(v207 + 432);
    v40 = *(_QWORD *)(v207 + 456) + 1;
    v41 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v38, v21);
    specialized Array._endMutation()(v41);
    if (v40 == v39)
      break;
    v99 = *(_QWORD *)(v207 + 456) + 1;
    v98 = *(void **)(v207 + 440);
    v97 = (_QWORD *)v207;
LABEL_49:
    v97[56] = v36;
    v97[57] = v99;
    v100 = (_QWORD *)(v97[53] + 112 * v99);
    v97[58] = v100[5];
    v101 = v100[6];
    v97[59] = v101;
    v97[60] = v100[7];
    v102 = v100[8];
    v97[61] = v102;
    v103 = v100[9];
    v97[62] = v103;
    v97[63] = v100[15];
    v104 = v100[16];
    v97[64] = v104;
    v105 = v100[17];
    v97[65] = v105;
    v106 = v100[14];
    v97[66] = v106;
    v108 = v100[12];
    v107 = v100[13];
    v97[67] = v108;
    v109 = v100[10];
    v97[68] = v109;
    *(_QWORD *)(v207 + 552) = sub_1000DEF64(v107, v106);
    *(_QWORD *)(v207 + 560) = v110;
    swift_bridgeObjectRetain(v105);
    swift_bridgeObjectRetain(v101);
    swift_bridgeObjectRetain(v102);
    swift_bridgeObjectRetain(v103);
    swift_bridgeObjectRetain(v109);
    swift_bridgeObjectRetain(v108);
    swift_bridgeObjectRetain(v106);
    v111 = objc_msgSend(v98, "standardUserDefaults", swift_bridgeObjectRetain(v104).n128_f64[0]);
    v112._countAndFlagsBits = 0xD00000000000001CLL;
    v112._object = (void *)0x80000001005491E0;
    LOBYTE(v102) = NSUserDefaults.internalBool(forKey:)(v112);

    v0 = (_QWORD *)v207;
    if ((v102 & 1) != 0)
    {
      v164 = swift_bridgeObjectRelease(v223);
      v165 = defaultLogger()(v164);
      v166 = Logger.logObject.getter(v165);
      v167 = static os_log_type_t.debug.getter(v166);
      if (os_log_type_enabled(v166, v167))
      {
        v169 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v169 = 0;
        _os_log_impl((void *)&_mh_execute_header, v166, v167, "Adding assets to the page as the internal setting is switched on", v169, 2u);
        swift_slowDealloc(v169, -1, -1);
      }
      v170 = *(_QWORD *)(v207 + 208);
      v171 = *(_QWORD *)(v207 + 160);
      v172 = *(_QWORD *)(v207 + 104);

      v36(v170, v171);
      v173 = *(_QWORD *)(v172 + 136);
      *(_QWORD *)(v207 + 568) = v173;
      v174 = dword_10063454C;
      swift_retain(v173);
      v175 = (_QWORD *)swift_task_alloc(v174);
      *(_QWORD *)(v207 + 576) = v175;
      *v175 = v207;
      v175[1] = sub_1002038D4;
      return sub_1000F1E28(*(_QWORD *)(v207 + 272), *(_QWORD *)(v207 + 280), (uint64_t)&off_1006013E8);
    }
  }
  v42 = *(_QWORD **)(v207 + 424);
  v43 = (_QWORD *)v207;
  v44 = v223;
LABEL_15:
  v219 = v43[50];
  v224 = v43[51];
  v45 = v43[48];
  v46 = v43[45];
  v47 = v43[43];
  v48 = v43[44];
  v49 = v43[42];
  swift_bridgeObjectRelease(v44);
  swift_bridgeObjectRelease(v42);
  *(_QWORD *)(v207 + 80) = v47;
  sub_10008F4B0(v46);
  v50 = (uint64_t)v193;
  v191 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v194 = v51;
  swift_bridgeObjectRelease(v49);
  swift_bridgeObjectRelease(v48);
  sub_10008F45C(v46);
  swift_bridgeObjectRelease(v219);
  swift_bridgeObjectRelease(v224);
  v52 = v207;
  v205 = *(_BYTE *)(v207 + 59);
  v200 = *(_QWORD *)(v207 + 384);
  v202 = *(_QWORD *)(v207 + 392);
  v196 = *(_QWORD *)(v207 + 368);
  v198 = *(_QWORD *)(v207 + 376);
  v195 = *(_QWORD *)(v207 + 360);
  while (1)
  {
    v54 = *(_QWORD *)(v52 + 328) + 1;
    if (v54 == *(_QWORD *)(v52 + 320))
      break;
    *(_QWORD *)(v52 + 328) = v54;
    v55 = *(_QWORD *)(v52 + 312);
    if (v54 >= *(_QWORD *)(v55 + 16))
    {
      __break(1u);
      goto LABEL_70;
    }
    v50 = *(_QWORD *)(v52 + 96);
    v56 = v55 + 96 * v54;
    v57 = *(_QWORD *)(v56 + 40);
    v210 = *(_QWORD *)(v56 + 32);
    *(_QWORD *)(v52 + 336) = v57;
    *(_QWORD *)(v52 + 344) = *(_QWORD *)(v56 + 48);
    v58 = *(_QWORD **)(v56 + 56);
    *(_QWORD *)(v52 + 352) = v58;
    v59 = *(_QWORD *)(v56 + 64);
    *(_QWORD *)(v52 + 360) = v59;
    *(_QWORD *)(v52 + 368) = *(_QWORD *)(v56 + 72);
    *(_QWORD *)(v52 + 376) = *(_QWORD *)(v56 + 80);
    v45 = *(_QWORD *)(v56 + 88);
    *(_QWORD *)(v52 + 384) = v45;
    *(_QWORD *)(v52 + 392) = *(_QWORD *)(v56 + 96);
    *(_BYTE *)(v52 + 59) = *(_BYTE *)(v56 + 104);
    v60 = *(_QWORD **)(v56 + 112);
    *(_QWORD *)(v52 + 400) = v60;
    v61 = *(_QWORD **)(v56 + 120);
    *(_QWORD *)(v52 + 408) = v61;
    v225 = v57;
    swift_bridgeObjectRetain_n(v57, 2);
    v216 = v58;
    swift_bridgeObjectRetain(v58);
    sub_10008F4B0(v59);
    swift_bridgeObjectRetain(v61);
    v220 = v60;
    swift_bridgeObjectRetain(v60);
    v63 = IdentityProofingConfiguration.state.getter(v62);
    if (v64)
    {
      v50 = v64;
      v65 = v225;
      if (v210 == v63 && v64 == v225)
      {
        swift_bridgeObjectRelease(v64);
        swift_bridgeObjectRelease(v225);
LABEL_25:
        v66 = *(unsigned __int8 *)(v207 + 57);
        sub_10008F45C(v195);
        v67 = swift_bridgeObjectRelease(v194);
        if (v66 == 1)
        {
          if (*(_BYTE *)(v207 + 58))
          {
            v68 = defaultLogger()(v67);
            v69 = Logger.logObject.getter(v68);
            v70 = static os_log_type_t.debug.getter(v69);
            if (os_log_type_enabled(v69, v70))
            {
              v71 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v71 = 0;
              _os_log_impl((void *)&_mh_execute_header, v69, v70, "Preparing UI for watch device migration flow", v71, 2u);
              swift_slowDealloc(v71, -1, -1);
            }
            v72 = v207;
            v73 = *(_QWORD *)(v207 + 240);
          }
          else
          {
            v83 = defaultLogger()(v67);
            v69 = Logger.logObject.getter(v83);
            v84 = static os_log_type_t.debug.getter(v69);
            if (os_log_type_enabled(v69, v84))
            {
              v85 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v85 = 0;
              _os_log_impl((void *)&_mh_execute_header, v69, v84, "Preparing UI from static workflow for watch", v85, 2u);
              swift_slowDealloc(v85, -1, -1);
            }
            v72 = v207;
            v73 = *(_QWORD *)(v207 + 232);
          }
          v86 = *(_QWORD *)(v72 + 160);
          v87 = *(_QWORD *)(v72 + 168);

          v36 = *(void (**)(uint64_t, uint64_t))(v87 + 8);
          v36(v73, v86);
          if (v220)
            v42 = v220;
          else
            v42 = _swiftEmptyArrayStorage;
          v82 = v220;
          v78 = (_QWORD *)v207;
        }
        else if (*(_BYTE *)(v207 + 58))
        {
          v74 = defaultLogger()(v67);
          v75 = Logger.logObject.getter(v74);
          v76 = static os_log_type_t.debug.getter(v75);
          if (os_log_type_enabled(v75, v76))
          {
            v77 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v77 = 0;
            _os_log_impl((void *)&_mh_execute_header, v75, v76, "Preparing UI from static workflow for device migration", v77, 2u);
            swift_slowDealloc(v77, -1, -1);
          }
          v78 = (_QWORD *)v207;
          v79 = *(_QWORD *)(v207 + 224);
          v80 = *(_QWORD *)(v207 + 160);
          v81 = *(_QWORD *)(v207 + 168);

          v36 = *(void (**)(uint64_t, uint64_t))(v81 + 8);
          v36(v79, v80);
          v82 = v61;
          if (v61)
            v42 = v61;
          else
            v42 = _swiftEmptyArrayStorage;
        }
        else
        {
          v88 = defaultLogger()(v67);
          v89 = Logger.logObject.getter(v88);
          v90 = static os_log_type_t.debug.getter(v89);
          if (os_log_type_enabled(v89, v90))
          {
            v91 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v91 = 0;
            _os_log_impl((void *)&_mh_execute_header, v89, v90, "Preparing UI from static workflow for phone", v91, 2u);
            swift_slowDealloc(v91, -1, -1);
          }
          v78 = (_QWORD *)v207;
          v92 = *(_QWORD *)(v207 + 216);
          v93 = *(_QWORD *)(v207 + 160);
          v94 = *(_QWORD *)(v207 + 168);

          v36 = *(void (**)(uint64_t, uint64_t))(v94 + 8);
          v36(v92, v93);
          v82 = v216;
          v42 = v216;
        }
        v78[52] = v36;
        v78[53] = v42;
        v95 = v42[2];
        v78[54] = v95;
        swift_bridgeObjectRetain(v82);
        v44 = _swiftEmptyArrayStorage;
        v43 = v78;
        if (v95)
        {
          v96 = objc_opt_self(NSUserDefaults);
          v97 = (_QWORD *)v207;
          v98 = (void *)v96;
          v99 = 0;
          *(_QWORD *)(v207 + 440) = v96;
          v223 = _swiftEmptyArrayStorage;
          goto LABEL_49;
        }
        goto LABEL_15;
      }
      v53 = _stringCompareWithSmolCheck(_:_:expecting:)(v210, v225, v63, v64, 0);
      swift_bridgeObjectRelease(v50);
      swift_bridgeObjectRelease(v225);
      if ((v53 & 1) != 0)
        goto LABEL_25;
    }
    else
    {
      v65 = v225;
      swift_bridgeObjectRelease(v225);
    }
    swift_bridgeObjectRelease(v65);
    swift_bridgeObjectRelease(v216);
    sub_10008F45C(v59);
    swift_bridgeObjectRelease(v220);
    swift_bridgeObjectRelease(v61);
    v52 = v207;
  }
  v113 = *(_QWORD *)(v52 + 312);
  swift_bridgeObjectRelease(*(_QWORD *)(v52 + 280));
  v114 = swift_bridgeObjectRelease(v113);
  v115 = (_QWORD *)v207;
  v50 = *(_QWORD *)(v207 + 64);
  *(_BYTE *)(v207 + 748) = v205;
  *(_QWORD *)(v207 + 680) = v202;
  *(_QWORD *)(v207 + 672) = v200;
  *(_QWORD *)(v207 + 664) = v198;
  *(_QWORD *)(v207 + 656) = v196;
  v45 = v194;
  *(_QWORD *)(v207 + 648) = v195;
  *(_QWORD *)(v207 + 640) = v194;
  *(_QWORD *)(v207 + 632) = v191;
  *(_QWORD *)(v207 + 16) = v195;
  *(_QWORD *)(v207 + 24) = v196;
  *(_QWORD *)(v207 + 32) = v198;
  *(_QWORD *)(v207 + 40) = v200;
  *(_QWORD *)(v207 + 48) = v202;
  *(_BYTE *)(v207 + 56) = v205;
  if (!((unint64_t)v50 >> 62))
  {
    v116 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_53;
  }
LABEL_70:
  if (v50 < 0)
    v183 = v50;
  else
    v183 = v50 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v50);
  v116 = _CocoaArrayWrapper.endIndex.getter(v183);
  v114 = swift_bridgeObjectRelease(v50);
  v115 = (_QWORD *)v207;
LABEL_53:
  v117 = v115[33];
  if (v116 < 1)
  {
    v132 = v115[15];
    v133 = v115[16];
    v134 = v115[14];
    v135 = v115;
    swift_bridgeObjectRelease(v45);
    sub_10008F45C(v195);
    swift_bridgeObjectRelease(v135[8]);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v132 + 104))(v133, enum case for DIPError.Code.invalidStaticWorkflow(_:), v134);
    v136 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v137 = type metadata accessor for DIPError(0);
    v138 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    v139 = swift_allocError(v137, v138, 0, 0);
    v140 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000036, 0x8000000100554D00, 0, v133, 0, v136, 0xD00000000000007CLL, 0x80000001005549D0, 0xD000000000000057, 0x8000000100554C20, 500);
    swift_willThrow(v140);
    sub_100006350(v117);
    v197 = v135[33];
    v199 = v135[32];
    v201 = v135[30];
    v203 = v135[29];
    v206 = v135[28];
    v208 = v135[27];
    v211 = v135[26];
    v213 = v135[25];
    v215 = v135[24];
    v217 = v135[23];
    v221 = v135[22];
    v226 = v135[19];
    v141 = v135[16];
    (*(void (**)(uint64_t, _QWORD, _QWORD))(v135[15] + 104))(v141, enum case for DIPError.Code.internalError(_:), v135[14]);
    swift_errorRetain(v139);
    v142 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    swift_allocError(v137, v138, 0, 0);
    v143 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000002DLL, 0x8000000100554C80, v139, v141, 0, v142, 0xD00000000000007CLL, 0x80000001005549D0, 0xD000000000000057, 0x8000000100554C20, 523);
    swift_willThrow(v143);
    swift_errorRelease(v139);
    swift_task_dealloc(v197);
    swift_task_dealloc(v199);
    swift_task_dealloc(v201);
    swift_task_dealloc(v203);
    swift_task_dealloc(v206);
    swift_task_dealloc(v208);
    swift_task_dealloc(v211);
    swift_task_dealloc(v213);
    swift_task_dealloc(v215);
    swift_task_dealloc(v217);
    swift_task_dealloc(v221);
    swift_task_dealloc(v226);
    swift_task_dealloc(v141);
    return ((uint64_t (*)(void))v135[1])();
  }
  else
  {
    v118 = v115[32];
    defaultLogger()(v114);
    v119 = sub_100209818(v117, v118);
    v120 = Logger.logObject.getter(v119);
    v121 = static os_log_type_t.debug.getter(v120);
    v122 = os_log_type_enabled(v120, v121);
    v123 = v207;
    v124 = *(_QWORD *)(v207 + 256);
    if (v122)
    {
      v125 = *(_QWORD *)(v207 + 248);
      v126 = (uint8_t *)swift_slowAlloc(12, -1);
      v127 = swift_slowAlloc(32, -1);
      v228[0] = v127;
      *(_DWORD *)v126 = 136315138;
      v128 = (uint64_t *)(v124 + *(int *)(v125 + 44));
      v129 = v128[1];
      if (v129)
      {
        v130 = *v128;
        v131 = v128[1];
      }
      else
      {
        v131 = 0xE300000000000000;
        v130 = 7104878;
      }
      v123 = v207;
      v149 = *(_QWORD *)(v207 + 256);
      v150 = *(_QWORD *)(v207 + 168);
      v222 = *(_QWORD *)(v207 + 160);
      v227 = *(_QWORD *)(v207 + 184);
      swift_bridgeObjectRetain(v129);
      *(_QWORD *)(v207 + 88) = sub_1000E3AC8(v130, v131, v228);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v188, v187, v126 + 4);
      swift_bridgeObjectRelease(v131);
      sub_100006350(v149);
      _os_log_impl((void *)&_mh_execute_header, v120, v121, "The learnMoreURL is %s", v126, 0xCu);
      swift_arrayDestroy(v127, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v127, -1, -1);
      swift_slowDealloc(v126, -1, -1);

      v148 = *(void (**)(uint64_t, uint64_t))(v150 + 8);
      v148(v227, v222);
    }
    else
    {
      v145 = *(_QWORD *)(v207 + 184);
      v146 = *(_QWORD *)(v207 + 160);
      v147 = *(_QWORD *)(v207 + 168);
      sub_100006350(*(_QWORD *)(v207 + 256));

      v148 = *(void (**)(uint64_t, uint64_t))(v147 + 8);
      v148(v145, v146);
    }
    *(_QWORD *)(v123 + 688) = v148;
    v151 = (_QWORD *)swift_task_alloc(dword_10063879C);
    *(_QWORD *)(v123 + 696) = v151;
    *v151 = v123;
    v151[1] = sub_1002060EC;
    return sub_1002070C0();
  }
}

uint64_t sub_100204CF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)();
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 608);
  *(_QWORD *)(*(_QWORD *)v2 + 616) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v25 = v4[70];
    v20 = v4[68];
    v19 = v4[67];
    v18 = v4[66];
    v6 = v4[65];
    v7 = v4[64];
    v9 = v4[61];
    v8 = v4[62];
    v10 = v4[59];
    v24 = v4[53];
    v21 = v4[50];
    v22 = v4[51];
    v11 = v4[44];
    v17 = v4[45];
    v12 = v4[42];
    v23 = v4[39];
    v13 = v4[35];
    swift_release(v4[75]);
    swift_bridgeObjectRelease(v13);
    swift_bridgeObjectRelease(v10);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(v11);
    swift_bridgeObjectRelease_n(v6, 2);
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v18);
    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(v20);
    sub_10008F45C(v17);
    swift_bridgeObjectRelease(v21);
    swift_bridgeObjectRelease(v22);
    swift_bridgeObjectRelease(v25);
    swift_bridgeObjectRelease(v24);
    swift_bridgeObjectRelease(v23);
    swift_bridgeObjectRelease(v4[8]);
    v14 = sub_100206ED4;
  }
  else
  {
    v15 = v4[65];
    swift_release(v4[75]);
    swift_bridgeObjectRelease(v15);
    v4[78] = a1;
    v14 = sub_100204EC4;
  }
  return swift_task_switch(v14, 0, 0);
}

uint64_t sub_100204EC4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint64_t v23;
  uint64_t v24;
  void (**v25)(uint64_t, uint64_t);
  uint64_t (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t);
  void (*v34)(uint64_t, uint64_t);
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  uint8_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  os_log_type_t v83;
  uint8_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  NSObject *v88;
  os_log_type_t v89;
  uint8_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  id v108;
  Swift::String v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  NSObject *v118;
  os_log_type_t v119;
  _BOOL4 v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint8_t *v124;
  uint64_t v125;
  uint64_t *v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  void (*v146)(uint64_t, uint64_t);
  uint64_t v147;
  uint64_t v148;
  _QWORD *v149;
  uint64_t v150;
  uint64_t v151;
  NSObject *v152;
  os_log_type_t v153;
  uint8_t *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  _QWORD *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  NSObject *v164;
  os_log_type_t v165;
  _BOOL4 v166;
  unint64_t v167;
  uint64_t v168;
  void (*v169)(uint64_t, uint64_t);
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  void (*v174)(uint64_t, uint64_t);
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  _QWORD *v180;
  uint64_t v181;
  int v182;
  int v183;
  int v184;
  _QWORD *v185;
  _QWORD *v186;
  void (**v187)(uint64_t, uint64_t);
  void (**v188)(uint64_t, uint64_t);
  _QWORD *v189;
  uint64_t v190;
  _QWORD *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  _QWORD *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  _QWORD *v218;
  void (*v219)(uint64_t, uint64_t);
  uint64_t v220;
  uint64_t v221;
  _QWORD *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227[3];

  v189 = v0 + 8;
  v191 = v0 + 10;
  v186 = v0 + 11;
  v222 = (_QWORD *)v0[78];
  v187 = (void (**)(uint64_t, uint64_t))(v0 + 52);
  v188 = (void (**)(uint64_t, uint64_t))(v0 + 56);
  v185 = v0 + 12;
  while (1)
  {
    v1 = v0[70];
    v2 = v0[69];
    if (v2 == 0xD000000000000012 && v1 == 0x8000000100547140
      || (v0 = (_QWORD *)v205,
          (_stringCompareWithSmolCheck(_:_:expecting:)(v2, v1, 0xD000000000000012, 0x8000000100547140, 0) & 1) != 0))
    {
      v3 = (_QWORD *)v0[62];
      if (v3[2] >= 2uLL)
      {
        v4 = *(_QWORD *)(v0[13] + 144);
        v6 = v3[6];
        v5 = v3[7];
        swift_retain(v4);
        swift_bridgeObjectRetain(v5);
        sub_1004340C0(v6, v5);
        swift_release(v4);
        swift_bridgeObjectRelease(v5);
        v0 = (_QWORD *)v205;
      }
    }
    v202 = v0[70];
    v7 = v0[69];
    v207 = v0[68];
    v210 = v0[67];
    v216 = v0[65];
    v9 = v0[63];
    v8 = v0[64];
    v11 = v0[61];
    v10 = v0[62];
    v12 = v0[59];
    v13 = v0[60];
    v14 = v0[58];
    v212 = v0[66];
    v15 = objc_allocWithZone((Class)type metadata accessor for IdentityProofingUIConfig(0));
    swift_bridgeObjectRetain(v12);
    swift_bridgeObjectRetain(v11);
    swift_bridgeObjectRetain(v10);
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v222);
    LOBYTE(v184) = 1;
    LOBYTE(v183) = 1;
    LOBYTE(v182) = 1;
    v17 = (void *)IdentityProofingUIConfig.init(view:title:subTitle:url:primaryButtonTitle:secondaryButtonTitle:tertiaryButtonTitle:messages:fields:caption:minLength:maxLength:placeholder:displayName:imageAssetsData:options:isUIEnabled:)(v7, v202, v14, v12, v13, v11, 0, 0, 0, 0, 0, 0, 0, 0, 0, v10, v9, v8, 0,
                    v182,
                    0,
                    v183,
                    0,
                    0,
                    0,
                    0,
                    v16,
                    0,
                    v184);
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(v11);
    swift_bridgeObjectRelease(v10);
    swift_bridgeObjectRelease(v207);
    swift_bridgeObjectRelease(v210);
    swift_bridgeObjectRelease(v212);
    swift_bridgeObjectRelease(v8);
    v18 = swift_bridgeObjectRelease(v216);
    defaultLogger()(v18);
    v19 = v17;
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.debug.getter(v20);
    v22 = os_log_type_enabled(v20, v21);
    v23 = v0[24];
    v24 = v0[20];
    if (v22)
    {
      v25 = v187;
      v26 = (uint64_t (*)(uint64_t, uint64_t))*v187;
      v27 = swift_slowAlloc(12, -1);
      v28 = swift_slowAlloc(32, -1);
      v227[0] = v28;
      *(_DWORD *)v27 = 136446210;
      v29 = IdentityProofingUIConfig.view.getter();
      v31 = v30;
      *(_QWORD *)(v27 + 4) = sub_1000E3AC8(v29, v30, v227);
      swift_bridgeObjectRelease(v31);

      _os_log_impl((void *)&_mh_execute_header, v20, v21, "%{public}s to be shown to the user from static views", (uint8_t *)v27, 0xCu);
      swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v28, -1, -1);
      swift_slowDealloc(v27, -1, -1);

      v32 = v26(v23, v24);
    }
    else
    {
      v25 = v188;
      v33 = (uint64_t (*)(uint64_t, uint64_t))*v188;

      v32 = v33(v23, v24);
    }
    v34 = *v25;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v32);
    v36 = *(_QWORD *)((*v189 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v35 = *(_QWORD *)((*v189 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v36 >= v35 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v35 > 1, v36 + 1, 1);
    v37 = (_QWORD *)v205;
    v38 = *(_QWORD *)(v205 + 432);
    v39 = *(_QWORD *)(v205 + 456) + 1;
    v40 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v36, v19);
    specialized Array._endMutation()(v40);
    if (v39 == v38)
      break;
    v96 = *(_QWORD *)(v205 + 456) + 1;
    v95 = *(void **)(v205 + 440);
LABEL_48:
    v219 = v34;
    v37[56] = v34;
    v37[57] = v96;
    v97 = (_QWORD *)(v37[53] + 112 * v96);
    v37[58] = v97[5];
    v98 = v97[6];
    v37[59] = v98;
    v37[60] = v97[7];
    v99 = v97[8];
    v37[61] = v99;
    v100 = v97[9];
    v37[62] = v100;
    v37[63] = v97[15];
    v101 = v97[16];
    v37[64] = v101;
    v102 = v97[17];
    v37[65] = v102;
    v103 = v97[14];
    v37[66] = v103;
    v105 = v97[12];
    v104 = v97[13];
    v37[67] = v105;
    v106 = v97[10];
    v37[68] = v106;
    v37[69] = sub_1000DEF64(v104, v103);
    v37[70] = v107;
    swift_bridgeObjectRetain(v102);
    swift_bridgeObjectRetain(v98);
    swift_bridgeObjectRetain(v99);
    swift_bridgeObjectRetain(v100);
    swift_bridgeObjectRetain(v106);
    swift_bridgeObjectRetain(v105);
    swift_bridgeObjectRetain(v103);
    v108 = objc_msgSend(v95, "standardUserDefaults", swift_bridgeObjectRetain(v101).n128_f64[0]);
    v109._countAndFlagsBits = 0xD00000000000001CLL;
    v109._object = (void *)0x80000001005491E0;
    LOBYTE(v98) = NSUserDefaults.internalBool(forKey:)(v109);

    if ((v98 & 1) != 0)
    {
      v150 = swift_bridgeObjectRelease(v222);
      v151 = defaultLogger()(v150);
      v152 = Logger.logObject.getter(v151);
      v153 = static os_log_type_t.debug.getter(v152);
      if (os_log_type_enabled(v152, v153))
      {
        v154 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v154 = 0;
        _os_log_impl((void *)&_mh_execute_header, v152, v153, "Adding assets to the page as the internal setting is switched on", v154, 2u);
        swift_slowDealloc(v154, -1, -1);
      }
      v155 = v37[26];
      v156 = v37[20];
      v157 = v37[13];

      v219(v155, v156);
      v158 = *(_QWORD *)(v157 + 136);
      v37[71] = v158;
      v159 = dword_10063454C;
      swift_retain(v158);
      v160 = (_QWORD *)swift_task_alloc(v159);
      v37[72] = v160;
      *v160 = v37;
      v160[1] = sub_1002038D4;
      return sub_1000F1E28(v37[34], v37[35], (uint64_t)&off_1006013E8);
    }
    v110 = v37[65];
    v0 = v37;
    if (v110)
    {
      v161 = v37[70];
      swift_bridgeObjectRetain(v110);
      v162 = swift_bridgeObjectRelease(v222);
      defaultLogger()(v162);
      v163 = swift_bridgeObjectRetain_n(v161, 2);
      v164 = Logger.logObject.getter(v163);
      v165 = static os_log_type_t.debug.getter(v164);
      v166 = os_log_type_enabled(v164, v165);
      v167 = *(_QWORD *)(v205 + 560);
      if (v166)
      {
        v168 = *(_QWORD *)(v205 + 552);
        v169 = *(void (**)(uint64_t, uint64_t))(v205 + 448);
        v170 = *(_QWORD *)(v205 + 200);
        v171 = *(_QWORD *)(v205 + 160);
        v172 = swift_slowAlloc(12, -1);
        v173 = swift_slowAlloc(32, -1);
        v227[0] = v173;
        *(_DWORD *)v172 = 136315138;
        swift_bridgeObjectRetain(v167);
        *(_QWORD *)(v172 + 4) = sub_1000E3AC8(v168, v167, v227);
        swift_bridgeObjectRelease_n(v167, 3);
        _os_log_impl((void *)&_mh_execute_header, v164, v165, "Image assets field exists for the page -> %s", (uint8_t *)v172, 0xCu);
        swift_arrayDestroy(v173, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v173, -1, -1);
        swift_slowDealloc(v172, -1, -1);

        v169(v170, v171);
      }
      else
      {
        v174 = *(void (**)(uint64_t, uint64_t))(v205 + 448);
        v175 = *(_QWORD *)(v205 + 200);
        v176 = *(_QWORD *)(v205 + 160);
        swift_bridgeObjectRelease_n(*(_QWORD *)(v205 + 560), 2);

        v174(v175, v176);
      }
      v177 = *(_QWORD *)(v205 + 520);
      v178 = *(_QWORD *)(*(_QWORD *)(v205 + 104) + 136);
      *(_QWORD *)(v205 + 600) = v178;
      v179 = dword_10063454C;
      swift_retain(v178);
      v180 = (_QWORD *)swift_task_alloc(v179);
      *(_QWORD *)(v205 + 608) = v180;
      *v180 = v205;
      v180[1] = sub_100204CF8;
      return sub_1000F1E28(*(_QWORD *)(v205 + 272), *(_QWORD *)(v205 + 280), v177);
    }
  }
  v41 = *(_QWORD **)(v205 + 424);
  v42 = (_QWORD *)v205;
  v43 = v222;
LABEL_14:
  v217 = v42[50];
  v223 = v42[51];
  v44 = v42[48];
  v45 = v42[45];
  v46 = v42[43];
  v47 = v42[44];
  v48 = v42[42];
  swift_bridgeObjectRelease(v43);
  swift_bridgeObjectRelease(v41);
  *(_QWORD *)(v205 + 80) = v46;
  sub_10008F4B0(v45);
  v49 = (uint64_t)v191;
  v190 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v192 = v50;
  swift_bridgeObjectRelease(v48);
  swift_bridgeObjectRelease(v47);
  sub_10008F45C(v45);
  swift_bridgeObjectRelease(v217);
  swift_bridgeObjectRelease(v223);
  v51 = v205;
  v203 = *(_BYTE *)(v205 + 59);
  v198 = *(_QWORD *)(v205 + 384);
  v200 = *(_QWORD *)(v205 + 392);
  v194 = *(_QWORD *)(v205 + 368);
  v196 = *(_QWORD *)(v205 + 376);
  v193 = *(_QWORD *)(v205 + 360);
  while (1)
  {
    v53 = *(_QWORD *)(v51 + 328) + 1;
    if (v53 == *(_QWORD *)(v51 + 320))
      break;
    *(_QWORD *)(v51 + 328) = v53;
    v54 = *(_QWORD *)(v51 + 312);
    if (v53 >= *(_QWORD *)(v54 + 16))
    {
      __break(1u);
      goto LABEL_70;
    }
    v49 = *(_QWORD *)(v51 + 96);
    v55 = v54 + 96 * v53;
    v56 = *(_QWORD *)(v55 + 40);
    v208 = *(_QWORD *)(v55 + 32);
    *(_QWORD *)(v51 + 336) = v56;
    *(_QWORD *)(v51 + 344) = *(_QWORD *)(v55 + 48);
    v57 = *(_QWORD **)(v55 + 56);
    *(_QWORD *)(v51 + 352) = v57;
    v58 = *(_QWORD *)(v55 + 64);
    *(_QWORD *)(v51 + 360) = v58;
    *(_QWORD *)(v51 + 368) = *(_QWORD *)(v55 + 72);
    *(_QWORD *)(v51 + 376) = *(_QWORD *)(v55 + 80);
    v44 = *(_QWORD *)(v55 + 88);
    *(_QWORD *)(v51 + 384) = v44;
    *(_QWORD *)(v51 + 392) = *(_QWORD *)(v55 + 96);
    *(_BYTE *)(v51 + 59) = *(_BYTE *)(v55 + 104);
    v59 = *(_QWORD **)(v55 + 112);
    *(_QWORD *)(v51 + 400) = v59;
    v60 = *(_QWORD **)(v55 + 120);
    *(_QWORD *)(v51 + 408) = v60;
    v224 = v56;
    swift_bridgeObjectRetain_n(v56, 2);
    v214 = v57;
    swift_bridgeObjectRetain(v57);
    sub_10008F4B0(v58);
    swift_bridgeObjectRetain(v60);
    v218 = v59;
    swift_bridgeObjectRetain(v59);
    v62 = IdentityProofingConfiguration.state.getter(v61);
    if (v63)
    {
      v49 = v63;
      v64 = v224;
      if (v208 == v62 && v63 == v224)
      {
        swift_bridgeObjectRelease(v63);
        swift_bridgeObjectRelease(v224);
LABEL_24:
        v65 = *(unsigned __int8 *)(v205 + 57);
        sub_10008F45C(v193);
        v66 = swift_bridgeObjectRelease(v192);
        if (v65 == 1)
        {
          if (*(_BYTE *)(v205 + 58))
          {
            v67 = defaultLogger()(v66);
            v68 = Logger.logObject.getter(v67);
            v69 = static os_log_type_t.debug.getter(v68);
            if (os_log_type_enabled(v68, v69))
            {
              v70 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v70 = 0;
              _os_log_impl((void *)&_mh_execute_header, v68, v69, "Preparing UI for watch device migration flow", v70, 2u);
              swift_slowDealloc(v70, -1, -1);
            }
            v71 = v205;
            v72 = *(_QWORD *)(v205 + 240);
          }
          else
          {
            v82 = defaultLogger()(v66);
            v68 = Logger.logObject.getter(v82);
            v83 = static os_log_type_t.debug.getter(v68);
            if (os_log_type_enabled(v68, v83))
            {
              v84 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v84 = 0;
              _os_log_impl((void *)&_mh_execute_header, v68, v83, "Preparing UI from static workflow for watch", v84, 2u);
              swift_slowDealloc(v84, -1, -1);
            }
            v71 = v205;
            v72 = *(_QWORD *)(v205 + 232);
          }
          v85 = *(_QWORD *)(v71 + 160);
          v86 = *(_QWORD *)(v71 + 168);

          v34 = *(void (**)(uint64_t, uint64_t))(v86 + 8);
          v34(v72, v85);
          if (v218)
            v41 = v218;
          else
            v41 = _swiftEmptyArrayStorage;
          v81 = v218;
          v77 = (_QWORD *)v205;
        }
        else if (*(_BYTE *)(v205 + 58))
        {
          v73 = defaultLogger()(v66);
          v74 = Logger.logObject.getter(v73);
          v75 = static os_log_type_t.debug.getter(v74);
          if (os_log_type_enabled(v74, v75))
          {
            v76 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v76 = 0;
            _os_log_impl((void *)&_mh_execute_header, v74, v75, "Preparing UI from static workflow for device migration", v76, 2u);
            swift_slowDealloc(v76, -1, -1);
          }
          v77 = (_QWORD *)v205;
          v78 = *(_QWORD *)(v205 + 224);
          v79 = *(_QWORD *)(v205 + 160);
          v80 = *(_QWORD *)(v205 + 168);

          v34 = *(void (**)(uint64_t, uint64_t))(v80 + 8);
          v34(v78, v79);
          v81 = v60;
          if (v60)
            v41 = v60;
          else
            v41 = _swiftEmptyArrayStorage;
        }
        else
        {
          v87 = defaultLogger()(v66);
          v88 = Logger.logObject.getter(v87);
          v89 = static os_log_type_t.debug.getter(v88);
          if (os_log_type_enabled(v88, v89))
          {
            v90 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v90 = 0;
            _os_log_impl((void *)&_mh_execute_header, v88, v89, "Preparing UI from static workflow for phone", v90, 2u);
            swift_slowDealloc(v90, -1, -1);
          }
          v77 = (_QWORD *)v205;
          v91 = *(_QWORD *)(v205 + 216);
          v92 = *(_QWORD *)(v205 + 160);
          v93 = *(_QWORD *)(v205 + 168);

          v34 = *(void (**)(uint64_t, uint64_t))(v93 + 8);
          v34(v91, v92);
          v81 = v214;
          v41 = v214;
        }
        v77[52] = v34;
        v77[53] = v41;
        v94 = v41[2];
        v77[54] = v94;
        swift_bridgeObjectRetain(v81);
        v43 = _swiftEmptyArrayStorage;
        v42 = v77;
        if (v94)
        {
          v37 = (_QWORD *)v205;
          v95 = (void *)objc_opt_self(NSUserDefaults);
          v96 = 0;
          *(_QWORD *)(v205 + 440) = v95;
          v222 = _swiftEmptyArrayStorage;
          goto LABEL_48;
        }
        goto LABEL_14;
      }
      v52 = _stringCompareWithSmolCheck(_:_:expecting:)(v208, v224, v62, v63, 0);
      swift_bridgeObjectRelease(v49);
      swift_bridgeObjectRelease(v224);
      if ((v52 & 1) != 0)
        goto LABEL_24;
    }
    else
    {
      v64 = v224;
      swift_bridgeObjectRelease(v224);
    }
    swift_bridgeObjectRelease(v64);
    swift_bridgeObjectRelease(v214);
    sub_10008F45C(v58);
    swift_bridgeObjectRelease(v218);
    swift_bridgeObjectRelease(v60);
    v51 = v205;
  }
  v111 = *(_QWORD *)(v51 + 312);
  swift_bridgeObjectRelease(*(_QWORD *)(v51 + 280));
  v112 = swift_bridgeObjectRelease(v111);
  v113 = (_QWORD *)v205;
  v49 = *(_QWORD *)(v205 + 64);
  *(_BYTE *)(v205 + 748) = v203;
  *(_QWORD *)(v205 + 680) = v200;
  *(_QWORD *)(v205 + 672) = v198;
  *(_QWORD *)(v205 + 664) = v196;
  *(_QWORD *)(v205 + 656) = v194;
  v44 = v192;
  *(_QWORD *)(v205 + 648) = v193;
  *(_QWORD *)(v205 + 640) = v192;
  *(_QWORD *)(v205 + 632) = v190;
  *(_QWORD *)(v205 + 16) = v193;
  *(_QWORD *)(v205 + 24) = v194;
  *(_QWORD *)(v205 + 32) = v196;
  *(_QWORD *)(v205 + 40) = v198;
  *(_QWORD *)(v205 + 48) = v200;
  *(_BYTE *)(v205 + 56) = v203;
  if (!((unint64_t)v49 >> 62))
  {
    v114 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_53;
  }
LABEL_70:
  if (v49 < 0)
    v181 = v49;
  else
    v181 = v49 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v49);
  v114 = _CocoaArrayWrapper.endIndex.getter(v181);
  v112 = swift_bridgeObjectRelease(v49);
  v113 = (_QWORD *)v205;
LABEL_53:
  v115 = v113[33];
  if (v114 < 1)
  {
    v130 = v113[15];
    v131 = v113[16];
    v132 = v113[14];
    v133 = v113;
    swift_bridgeObjectRelease(v44);
    sub_10008F45C(v193);
    swift_bridgeObjectRelease(v133[8]);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v130 + 104))(v131, enum case for DIPError.Code.invalidStaticWorkflow(_:), v132);
    v134 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v135 = type metadata accessor for DIPError(0);
    v136 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    v137 = swift_allocError(v135, v136, 0, 0);
    v138 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000036, 0x8000000100554D00, 0, v131, 0, v134, 0xD00000000000007CLL, 0x80000001005549D0, 0xD000000000000057, 0x8000000100554C20, 500);
    swift_willThrow(v138);
    sub_100006350(v115);
    v195 = v133[33];
    v197 = v133[32];
    v199 = v133[30];
    v201 = v133[29];
    v204 = v133[28];
    v206 = v133[27];
    v209 = v133[26];
    v211 = v133[25];
    v213 = v133[24];
    v215 = v133[23];
    v220 = v133[22];
    v225 = v133[19];
    v139 = v133[16];
    (*(void (**)(uint64_t, _QWORD, _QWORD))(v133[15] + 104))(v139, enum case for DIPError.Code.internalError(_:), v133[14]);
    swift_errorRetain(v137);
    v140 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    swift_allocError(v135, v136, 0, 0);
    v141 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000002DLL, 0x8000000100554C80, v137, v139, 0, v140, 0xD00000000000007CLL, 0x80000001005549D0, 0xD000000000000057, 0x8000000100554C20, 523);
    swift_willThrow(v141);
    swift_errorRelease(v137);
    swift_task_dealloc(v195);
    swift_task_dealloc(v197);
    swift_task_dealloc(v199);
    swift_task_dealloc(v201);
    swift_task_dealloc(v204);
    swift_task_dealloc(v206);
    swift_task_dealloc(v209);
    swift_task_dealloc(v211);
    swift_task_dealloc(v213);
    swift_task_dealloc(v215);
    swift_task_dealloc(v220);
    swift_task_dealloc(v225);
    swift_task_dealloc(v139);
    return ((uint64_t (*)(void))v133[1])();
  }
  else
  {
    v116 = v113[32];
    defaultLogger()(v112);
    v117 = sub_100209818(v115, v116);
    v118 = Logger.logObject.getter(v117);
    v119 = static os_log_type_t.debug.getter(v118);
    v120 = os_log_type_enabled(v118, v119);
    v121 = v205;
    v122 = *(_QWORD *)(v205 + 256);
    if (v120)
    {
      v123 = *(_QWORD *)(v205 + 248);
      v124 = (uint8_t *)swift_slowAlloc(12, -1);
      v125 = swift_slowAlloc(32, -1);
      v227[0] = v125;
      *(_DWORD *)v124 = 136315138;
      v126 = (uint64_t *)(v122 + *(int *)(v123 + 44));
      v127 = v126[1];
      if (v127)
      {
        v128 = *v126;
        v129 = v126[1];
      }
      else
      {
        v129 = 0xE300000000000000;
        v128 = 7104878;
      }
      v121 = v205;
      v147 = *(_QWORD *)(v205 + 256);
      v148 = *(_QWORD *)(v205 + 168);
      v221 = *(_QWORD *)(v205 + 160);
      v226 = *(_QWORD *)(v205 + 184);
      swift_bridgeObjectRetain(v127);
      *(_QWORD *)(v205 + 88) = sub_1000E3AC8(v128, v129, v227);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v186, v185, v124 + 4);
      swift_bridgeObjectRelease(v129);
      sub_100006350(v147);
      _os_log_impl((void *)&_mh_execute_header, v118, v119, "The learnMoreURL is %s", v124, 0xCu);
      swift_arrayDestroy(v125, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v125, -1, -1);
      swift_slowDealloc(v124, -1, -1);

      v146 = *(void (**)(uint64_t, uint64_t))(v148 + 8);
      v146(v226, v221);
    }
    else
    {
      v143 = *(_QWORD *)(v205 + 184);
      v144 = *(_QWORD *)(v205 + 160);
      v145 = *(_QWORD *)(v205 + 168);
      sub_100006350(*(_QWORD *)(v205 + 256));

      v146 = *(void (**)(uint64_t, uint64_t))(v145 + 8);
      v146(v143, v144);
    }
    *(_QWORD *)(v121 + 688) = v146;
    v149 = (_QWORD *)swift_task_alloc(dword_10063879C);
    *(_QWORD *)(v121 + 696) = v149;
    *v149 = v121;
    v149[1] = sub_1002060EC;
    return sub_1002070C0();
  }
}

uint64_t sub_1002060EC(char a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 696);
  *(_BYTE *)(*(_QWORD *)v1 + 749) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100206148, 0, 0);
}

uint64_t sub_100206148()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;

  v1 = *(unsigned __int8 *)(v0 + 749);
  v2 = objc_allocWithZone((Class)type metadata accessor for IdentityProofingFeatureEnablementConfig(0));
  v3 = IdentityProofingFeatureEnablementConfig.init(isFedStatsOptinEnabled:)(v1);
  *(_QWORD *)(v0 + 704) = v3;
  v4 = defaultLogger()(v3);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.debug.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    v21 = *(_QWORD *)(v0 + 176);
    v22 = *(void (**)(uint64_t, uint64_t))(v0 + 688);
    v7 = *(_QWORD *)(v0 + 160);
    v8 = *(unsigned __int8 *)(v0 + 58);
    v9 = *(unsigned __int8 *)(v0 + 57);
    v10 = swift_slowAlloc(24, -1);
    v11 = swift_slowAlloc(32, -1);
    v23 = v11;
    *(_DWORD *)v10 = 136315650;
    *(_QWORD *)(v0 + 72) = sub_1000E3AC8(0xD000000000000057, 0x8000000100554C20, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 72, v0 + 80, v10 + 4);
    *(_WORD *)(v10 + 12) = 1024;
    *(_DWORD *)(v0 + 744) = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 744, v0 + 748, v10 + 14);
    *(_WORD *)(v10 + 18) = 1024;
    *(_DWORD *)(v0 + 60) = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 60, v0 + 64, v10 + 20);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "%s isWatchModeOnly = %{BOOL}d, isDeviceMigration = %{BOOL}d", (uint8_t *)v10, 0x18u);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    v22(v21, v7);
  }
  else
  {
    v12 = *(void (**)(uint64_t, uint64_t))(v0 + 688);
    v13 = *(_QWORD *)(v0 + 176);
    v14 = *(_QWORD *)(v0 + 160);

    v12(v13, v14);
  }
  v15 = *(_QWORD *)(v0 + 264);
  v16 = *(_QWORD *)(*(_QWORD *)(v0 + 104) + 128);
  *(_QWORD *)(v0 + 712) = v16;
  v17 = *(_QWORD *)(v15 + 64);
  *(_QWORD *)(v0 + 720) = v17;
  v18 = dword_100634C0C;
  swift_retain(v16);
  swift_bridgeObjectRetain(v17);
  v19 = (_QWORD *)swift_task_alloc(v18);
  *(_QWORD *)(v0 + 728) = v19;
  *v19 = v0;
  v19[1] = sub_100206390;
  return sub_1000FE8D8(*(_QWORD *)(v0 + 152), v17);
}

uint64_t sub_100206390()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 728);
  *(_QWORD *)(*(_QWORD *)v1 + 736) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100206874;
  else
    v3 = sub_1002063F4;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1002063F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  unsigned __int8 v58;
  unsigned __int8 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v1 = *(_QWORD *)(v0 + 736);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);
  v4 = type metadata accessor for JSONEncoder(0);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v6 = JSONEncoder.init()(v5);
  v7 = sub_100004790(&qword_100632C00, (uint64_t (*)(uint64_t))&type metadata accessor for IdentityProofingAttributeConfiguration, (uint64_t)&protocol conformance descriptor for IdentityProofingAttributeConfiguration);
  v8 = dispatch thunk of JSONEncoder.encode<A>(_:)(v2, v3, v7);
  v10 = *(_QWORD *)(v0 + 720);
  v11 = *(_QWORD *)(v0 + 712);
  if (v1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136));
    swift_release(v6);
    swift_bridgeObjectRelease(v10);
    swift_release(v11);
    v65 = *(void **)(v0 + 704);
    v12 = *(_QWORD *)(v0 + 648);
    v13 = *(_QWORD *)(v0 + 264);
    v14 = *(_QWORD *)(v0 + 248);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 640));
    sub_10008F45C(v12);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
    v15 = sub_100004828(&qword_100640C30);
    v16 = swift_allocObject(v15, 40, 7);
    *(_OWORD *)(v16 + 16) = xmmword_100523860;
    v17 = objc_allocWithZone((Class)type metadata accessor for IdentityProofingUIConfig(0));
    v18 = IdentityProofingUIConfig.init(view:title:subTitle:url:primaryButtonTitle:secondaryButtonTitle:tertiaryButtonTitle:messages:fields:caption:minLength:maxLength:placeholder:displayName:imageAssetsData:options:isUIEnabled:)(0xD000000000000015, 0x8000000100543A40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            1);
    *(_QWORD *)(v16 + 32) = v18;
    specialized Array._endMutation()(v18);
    v19 = v16;
    v20 = (uint64_t *)(v13 + *(int *)(v14 + 44));
    v21 = *v20;
    v22 = v20[1];
    objc_allocWithZone((Class)type metadata accessor for IdentityProofingDisplayInfo(0));
    swift_bridgeObjectRetain(v22);
    LOBYTE(v55) = 2;
    LOBYTE(v54) = 1;
    v68 = IdentityProofingDisplayInfo.init(proofingUI:docScan:attributeConfig:learnMoreURL:waitingForWiFiAlertDataThresholdInBytes:lowDataModeAlertDataThresholdInBytes:idType:featureEnablementConfig:supportedRegions:livenessStepUpConfig:livenessStepUpIQSettings:shouldPreFetchLivenessConfig:)(v19, 0, 0, 0xF000000000000000, v21, v22, 0, 1, 0, v54, 0, 0, 0, _swiftEmptyArrayStorage, 0, 0, v55);
    swift_errorRelease(v1);

  }
  else
  {
    v69 = *(_QWORD *)(v0 + 704);
    v56 = *(_QWORD *)(v0 + 648);
    v23 = *(_QWORD *)(v0 + 640);
    v24 = *(_QWORD *)(v0 + 632);
    v25 = *(_QWORD *)(v0 + 264);
    v26 = *(int **)(v0 + 248);
    v63 = v9;
    v66 = v8;
    v58 = *(_BYTE *)(v0 + 57);
    v59 = *(_BYTE *)(v0 + 58);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136));
    swift_release(v6);
    swift_bridgeObjectRelease(v10);
    swift_release(v11);
    v61 = *(_QWORD *)(v0 + 64);
    v57 = sub_100209E20(v0 + 16, v24, v23);
    swift_bridgeObjectRelease(v23);
    sub_10008F45C(v56);
    v27 = (uint64_t *)(v25 + v26[11]);
    v28 = *v27;
    v29 = v27[1];
    v30 = (uint64_t *)(v25 + v26[13]);
    v31 = *v30;
    v32 = *((unsigned __int8 *)v30 + 8);
    v33 = (uint64_t *)(v25 + v26[14]);
    v34 = *v33;
    v35 = *((_BYTE *)v33 + 8);
    swift_bridgeObjectRetain(v29);
    v37 = IdentityProofingConfiguration.credentialIdentifier.getter(v36);
    v39 = v38;
    v40 = sub_100201CD8(v37, v38);
    v42 = v41;
    swift_bridgeObjectRelease(v39);
    v43 = objc_allocWithZone((Class)type metadata accessor for IdentityProofingDisplayInfo(0));
    v68 = IdentityProofingDisplayInfo.init(proofingUI:docScan:attributeConfig:learnMoreURL:waitingForWiFiAlertDataThresholdInBytes:lowDataModeAlertDataThresholdInBytes:idType:featureEnablementConfig:supportedRegions:livenessStepUpConfig:livenessStepUpIQSettings:shouldPreFetchLivenessConfig:)(v61, v57, v66, v63, v28, v29, v31, v32, v34, v35, v40, v42, v69, _swiftEmptyArrayStorage, 0, 0, (v58 | v59) & 1);
  }
  v45 = *(_QWORD *)(v0 + 256);
  v44 = *(_QWORD *)(v0 + 264);
  v47 = *(_QWORD *)(v0 + 232);
  v46 = *(_QWORD *)(v0 + 240);
  v49 = *(_QWORD *)(v0 + 216);
  v48 = *(_QWORD *)(v0 + 224);
  v51 = *(_QWORD *)(v0 + 200);
  v50 = *(_QWORD *)(v0 + 208);
  v52 = *(_QWORD *)(v0 + 192);
  v60 = *(_QWORD *)(v0 + 184);
  v62 = *(_QWORD *)(v0 + 176);
  v64 = *(_QWORD *)(v0 + 152);
  v67 = *(_QWORD *)(v0 + 128);
  sub_100006350(v44);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v60);
  swift_task_dealloc(v62);
  swift_task_dealloc(v64);
  swift_task_dealloc(v67);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v68);
}

uint64_t sub_100206874()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;

  v1 = *(_QWORD *)(v0 + 712);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 720));
  swift_release(v1);
  v2 = *(_QWORD *)(v0 + 736);
  v31 = *(void **)(v0 + 704);
  v3 = *(_QWORD *)(v0 + 648);
  v4 = *(_QWORD *)(v0 + 264);
  v5 = *(_QWORD *)(v0 + 248);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 640));
  sub_10008F45C(v3);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  v6 = sub_100004828(&qword_100640C30);
  v7 = swift_allocObject(v6, 40, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100523860;
  v8 = objc_allocWithZone((Class)type metadata accessor for IdentityProofingUIConfig(0));
  v9 = IdentityProofingUIConfig.init(view:title:subTitle:url:primaryButtonTitle:secondaryButtonTitle:tertiaryButtonTitle:messages:fields:caption:minLength:maxLength:placeholder:displayName:imageAssetsData:options:isUIEnabled:)(0xD000000000000015, 0x8000000100543A40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         1,
         0,
         1,
         0,
         0,
         0,
         0,
         0,
         0,
         1);
  *(_QWORD *)(v7 + 32) = v9;
  specialized Array._endMutation()(v9);
  v10 = v7;
  v11 = (uint64_t *)(v4 + *(int *)(v5 + 44));
  v12 = *v11;
  v13 = v11[1];
  v14 = objc_allocWithZone((Class)type metadata accessor for IdentityProofingDisplayInfo(0));
  swift_bridgeObjectRetain(v13);
  LOBYTE(v26) = 2;
  LOBYTE(v25) = 1;
  v30 = IdentityProofingDisplayInfo.init(proofingUI:docScan:attributeConfig:learnMoreURL:waitingForWiFiAlertDataThresholdInBytes:lowDataModeAlertDataThresholdInBytes:idType:featureEnablementConfig:supportedRegions:livenessStepUpConfig:livenessStepUpIQSettings:shouldPreFetchLivenessConfig:)(v10, 0, 0, 0xF000000000000000, v12, v13, 0, 1, 0, v25, 0, 0, 0, _swiftEmptyArrayStorage, 0, 0, v26);
  swift_errorRelease(v2);

  v16 = *(_QWORD *)(v0 + 256);
  v15 = *(_QWORD *)(v0 + 264);
  v18 = *(_QWORD *)(v0 + 232);
  v17 = *(_QWORD *)(v0 + 240);
  v20 = *(_QWORD *)(v0 + 216);
  v19 = *(_QWORD *)(v0 + 224);
  v22 = *(_QWORD *)(v0 + 200);
  v21 = *(_QWORD *)(v0 + 208);
  v23 = *(_QWORD *)(v0 + 192);
  v27 = *(_QWORD *)(v0 + 184);
  v28 = *(_QWORD *)(v0 + 176);
  v29 = *(_QWORD *)(v0 + 152);
  v32 = *(_QWORD *)(v0 + 128);
  sub_100006350(v15);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v30);
}

uint64_t sub_100206B04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 304);
  v2 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 264);
  v4 = *(_QWORD *)(v0 + 232);
  v5 = *(_QWORD *)(v0 + 240);
  v6 = *(_QWORD *)(v0 + 224);
  v13 = *(_QWORD *)(v0 + 216);
  v14 = *(_QWORD *)(v0 + 208);
  v15 = *(_QWORD *)(v0 + 200);
  v16 = *(_QWORD *)(v0 + 192);
  v17 = *(_QWORD *)(v0 + 184);
  v18 = *(_QWORD *)(v0 + 176);
  v19 = *(_QWORD *)(v0 + 152);
  v7 = *(_QWORD *)(v0 + 128);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 104))(v7, enum case for DIPError.Code.internalError(_:), *(_QWORD *)(v0 + 112));
  swift_errorRetain(v1);
  v8 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
  v9 = type metadata accessor for DIPError(0);
  v10 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
  swift_allocError(v9, v10, 0, 0);
  v11 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000002DLL, 0x8000000100554C80, v1, v7, 0, v8, 0xD00000000000007CLL, 0x80000001005549D0, 0xD000000000000057, 0x8000000100554C20, 523);
  swift_willThrow(v11);
  swift_errorRelease(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v5);
  swift_task_dealloc(v4);
  swift_task_dealloc(v6);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100206CE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_100006350(*(_QWORD *)(v0 + 264));
  v1 = *(_QWORD *)(v0 + 584);
  v2 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 264);
  v4 = *(_QWORD *)(v0 + 232);
  v5 = *(_QWORD *)(v0 + 240);
  v6 = *(_QWORD *)(v0 + 224);
  v13 = *(_QWORD *)(v0 + 216);
  v14 = *(_QWORD *)(v0 + 208);
  v15 = *(_QWORD *)(v0 + 200);
  v16 = *(_QWORD *)(v0 + 192);
  v17 = *(_QWORD *)(v0 + 184);
  v18 = *(_QWORD *)(v0 + 176);
  v19 = *(_QWORD *)(v0 + 152);
  v7 = *(_QWORD *)(v0 + 128);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 104))(v7, enum case for DIPError.Code.internalError(_:), *(_QWORD *)(v0 + 112));
  swift_errorRetain(v1);
  v8 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
  v9 = type metadata accessor for DIPError(0);
  v10 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
  swift_allocError(v9, v10, 0, 0);
  v11 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000002DLL, 0x8000000100554C80, v1, v7, 0, v8, 0xD00000000000007CLL, 0x80000001005549D0, 0xD000000000000057, 0x8000000100554C20, 523);
  swift_willThrow(v11);
  swift_errorRelease(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v5);
  swift_task_dealloc(v4);
  swift_task_dealloc(v6);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100206ED4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_100006350(*(_QWORD *)(v0 + 264));
  v1 = *(_QWORD *)(v0 + 616);
  v2 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 264);
  v4 = *(_QWORD *)(v0 + 232);
  v5 = *(_QWORD *)(v0 + 240);
  v6 = *(_QWORD *)(v0 + 224);
  v13 = *(_QWORD *)(v0 + 216);
  v14 = *(_QWORD *)(v0 + 208);
  v15 = *(_QWORD *)(v0 + 200);
  v16 = *(_QWORD *)(v0 + 192);
  v17 = *(_QWORD *)(v0 + 184);
  v18 = *(_QWORD *)(v0 + 176);
  v19 = *(_QWORD *)(v0 + 152);
  v7 = *(_QWORD *)(v0 + 128);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 104))(v7, enum case for DIPError.Code.internalError(_:), *(_QWORD *)(v0 + 112));
  swift_errorRetain(v1);
  v8 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
  v9 = type metadata accessor for DIPError(0);
  v10 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
  swift_allocError(v9, v10, 0, 0);
  v11 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000002DLL, 0x8000000100554C80, v1, v7, 0, v8, 0xD00000000000007CLL, 0x80000001005549D0, 0xD000000000000057, 0x8000000100554C20, 523);
  swift_willThrow(v11);
  swift_errorRelease(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v5);
  swift_task_dealloc(v4);
  swift_task_dealloc(v6);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002070C0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v1[7] = v0;
  v2 = type metadata accessor for IdentityProofingStaticWorkflow(0);
  v1[8] = v2;
  v1[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Logger(0);
  v1[10] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v1[11] = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[12] = swift_task_alloc(v5);
  v1[13] = swift_task_alloc(v5);
  v1[14] = swift_task_alloc(v5);
  return swift_task_switch(sub_100207160, 0, 0);
}

uint64_t sub_100207160()
{
  uint64_t v0;
  id v1;
  Swift::String v2;
  Swift::Bool v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v1 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v2._countAndFlagsBits = 0xD00000000000002CLL;
  v2._object = (void *)0x8000000100554BA0;
  v3 = NSUserDefaults.internalBool(forKey:)(v2);

  if (v3)
  {
    v5 = defaultLogger()(v4);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.debug.getter(v6);
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Disabling Biome Fed Stats using the static workflow", v8, 2u);
      swift_slowDealloc(v8, -1, -1);
    }
    v9 = *(_QWORD *)(v0 + 112);
    v10 = *(_QWORD *)(v0 + 80);
    v11 = *(_QWORD *)(v0 + 88);

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    v12 = *(_QWORD *)(v0 + 104);
    v13 = *(_QWORD *)(v0 + 96);
    v14 = *(_QWORD *)(v0 + 72);
    swift_task_dealloc(*(_QWORD *)(v0 + 112));
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  else
  {
    v16 = *(_QWORD *)(*(_QWORD *)(v0 + 56) + 96);
    *(_QWORD *)(v0 + 120) = v16;
    swift_retain(v16);
    v17 = sub_1004585BC();
    swift_release(v17);
    *(_QWORD *)(v0 + 128) = sub_1004585BC();
    v18 = (_QWORD *)swift_task_alloc(dword_10064212C);
    *(_QWORD *)(v0 + 136) = v18;
    *v18 = v0;
    v18[1] = sub_100207328;
    return sub_100457E5C(*(_QWORD *)(v0 + 72), 0xD000000000000024, 0x800000010053AEF0, 0xD000000000000027, 0x800000010053AF20);
  }
}

uint64_t sub_100207328()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 136);
  *(_QWORD *)(*v1 + 144) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1002074D0;
  }
  else
  {
    swift_release(*(_QWORD *)(v2 + 128));
    v4 = sub_100207394;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100207394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 120));
  LODWORD(v2) = *(unsigned __int8 *)(v1 + *(int *)(v2 + 68));
  v3 = sub_100006350(v1);
  v4 = ((_DWORD)v2 == 2) | v2;
  v5 = defaultLogger()(v3);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.debug.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 67109120;
    *(_DWORD *)(v0 + 152) = v4 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 152, v0 + 156, v8 + 4);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Fed Stats Enabled from static workflow -> %{BOOL}d", v8, 8u);
    swift_slowDealloc(v8, -1, -1);
  }

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 80));
  v9 = *(_QWORD *)(v0 + 104);
  v10 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 112));
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(v4 & 1);
}

uint64_t sub_1002074D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 120);
  swift_release(*(_QWORD *)(v0 + 128));
  v3 = swift_release(v2);
  defaultLogger()(v3);
  swift_errorRetain(v1);
  v4 = swift_errorRetain(v1);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.debug.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    v7 = *(_QWORD *)(v0 + 144);
    v21 = *(_QWORD *)(v0 + 88);
    v22 = *(_QWORD *)(v0 + 80);
    v23 = *(_QWORD *)(v0 + 96);
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v24 = v9;
    *(_DWORD *)v8 = 136315138;
    swift_getErrorValue(v7, v0 + 40, v0 + 16);
    v10 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
    v12 = v11;
    *(_QWORD *)(v0 + 48) = sub_1000E3AC8(v10, v11, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56, v8 + 4);
    swift_bridgeObjectRelease(v12);
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Received an error when fetching the static workflow %s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v23, v22);
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 144);
    v15 = *(_QWORD *)(v0 + 88);
    v14 = *(_QWORD *)(v0 + 96);
    v16 = *(_QWORD *)(v0 + 80);
    swift_errorRelease(v13);
    swift_errorRelease(v13);
    swift_errorRelease(v13);

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  v17 = *(_QWORD *)(v0 + 104);
  v18 = *(_QWORD *)(v0 + 96);
  v19 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 112));
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_100207700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v8 + 96) = a7;
  *(_QWORD *)(v8 + 104) = v7;
  *(_BYTE *)(v8 + 289) = a6;
  *(_BYTE *)(v8 + 288) = a5;
  *(_QWORD *)(v8 + 80) = a3;
  *(_QWORD *)(v8 + 88) = a4;
  *(_QWORD *)(v8 + 64) = a1;
  *(_QWORD *)(v8 + 72) = a2;
  v9 = type metadata accessor for IdentityProofingAttributeConfiguration(0);
  *(_QWORD *)(v8 + 112) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 120) = v10;
  *(_QWORD *)(v8 + 128) = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for IdentityProofingStaticWorkflow(0);
  *(_QWORD *)(v8 + 136) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100207790, 0, 0);
}

uint64_t sub_100207790()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0[13] + 144);
  v0[18] = v1;
  v2 = dword_100640F54;
  swift_retain(v1);
  v3 = (_QWORD *)swift_task_alloc(v2);
  v0[19] = v3;
  *v3 = v0;
  v3[1] = sub_1002077EC;
  return sub_100433C30();
}

uint64_t sub_1002077EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *(_QWORD **)v3;
  v5 = *(_QWORD *)(*(_QWORD *)v3 + 152);
  v4[20] = a1;
  v4[21] = a2;
  v4[22] = v2;
  swift_task_dealloc(v5);
  if (v2)
  {
    v6 = sub_100207F94;
  }
  else
  {
    swift_release(v4[18]);
    v6 = sub_100207864;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_100207864()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0[13] + 144);
  v0[23] = v1;
  v2 = dword_100640F34;
  swift_retain(v1);
  v3 = (_QWORD *)swift_task_alloc(v2);
  v0[24] = v3;
  *v3 = v0;
  v3[1] = sub_1002078CC;
  return sub_100430D0C(v0[17]);
}

uint64_t sub_1002078CC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 192);
  *(_QWORD *)(*v1 + 200) = v0;
  swift_task_dealloc(v3);
  v4 = *(_QWORD *)(v2 + 184);
  if (v0)
  {
    v5 = *(_QWORD *)(v2 + 168);
    swift_release(v4);
    swift_bridgeObjectRelease(v5);
    v6 = sub_100207FD8;
  }
  else
  {
    swift_release(v4);
    v6 = sub_100207948;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_100207948()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t **v7;

  v2 = v0[20];
  v1 = v0[21];
  v3 = *(_QWORD *)(v0[13] + 136);
  v0[26] = v3;
  v4 = sub_100004828(&qword_100640CA0);
  inited = swift_initStackObject(v4, v0 + 2);
  v0[27] = inited;
  *(_OWORD *)(inited + 16) = xmmword_10051FFB0;
  *(_QWORD *)(inited + 32) = v2;
  *(_QWORD *)(inited + 40) = v1;
  v6 = dword_10063454C;
  swift_retain(v3);
  v7 = (uint64_t **)swift_task_alloc(v6);
  v0[28] = (uint64_t)v7;
  *v7 = v0;
  v7[1] = (uint64_t *)sub_1002079F0;
  return sub_1000F1E28(v0[8], v0[9], inited);
}

uint64_t sub_1002079F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v8)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 224);
  v3[29] = a1;
  v3[30] = v1;
  swift_task_dealloc(v4);
  v7 = v3 + 26;
  v6 = v3[26];
  v5 = v7[1];
  swift_setDeallocating(v5);
  swift_arrayDestroy(v5 + 32, *(_QWORD *)(v5 + 16), &type metadata for String);
  swift_release(v6);
  if (v1)
    v8 = sub_100208014;
  else
    v8 = sub_100207A90;
  return swift_task_switch(v8, 0, 0);
}

uint64_t sub_100207A90()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  objc_class *v5;
  void *v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  int v17;
  int v18;
  int v19;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(unsigned __int8 *)(v0 + 288);
  if (*(_BYTE *)(v0 + 289))
    v3 = 0xD000000000000027;
  else
    v3 = 0x676E69646E6570;
  if (*(_BYTE *)(v0 + 289))
    v4 = 0x8000000100554B70;
  else
    v4 = 0xE700000000000000;
  v5 = (objc_class *)type metadata accessor for IdentityProofingUIConfig(0);
  objc_allocWithZone(v5);
  swift_bridgeObjectRetain(v1);
  v6 = (void *)IdentityProofingUIConfig.init(view:title:subTitle:url:primaryButtonTitle:secondaryButtonTitle:tertiaryButtonTitle:messages:fields:caption:minLength:maxLength:placeholder:displayName:imageAssetsData:options:isUIEnabled:)(v3, v4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                 1,
                 0,
                 1,
                 0,
                 0,
                 0,
                 0,
                 v1,
                 0,
                 1);
  if (v2 == 1)
  {
    if (*(_BYTE *)(v0 + 289))
      v7 = 0xD00000000000001FLL;
    else
      v7 = 0xD000000000000018;
    if (*(_BYTE *)(v0 + 289))
      v8 = 0x8000000100554B50;
    else
      v8 = 0x8000000100554B30;
    v9 = objc_allocWithZone(v5);
    LOBYTE(v19) = 1;
    LOBYTE(v18) = 1;
    LOBYTE(v17) = 1;
    v10 = IdentityProofingUIConfig.init(view:title:subTitle:url:primaryButtonTitle:secondaryButtonTitle:tertiaryButtonTitle:messages:fields:caption:minLength:maxLength:placeholder:displayName:imageAssetsData:options:isUIEnabled:)(v7, v8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            v17,
            0,
            v18,
            0,
            0,
            0,
            0,
            v1,
            0,
            v19);

    v6 = (void *)v10;
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 232));
  }
  *(_QWORD *)(v0 + 248) = v6;
  v11 = *(_QWORD *)(v0 + 136);
  v12 = *(_QWORD *)(*(_QWORD *)(v0 + 104) + 128);
  *(_QWORD *)(v0 + 256) = v12;
  v13 = *(_QWORD *)(v11 + 64);
  *(_QWORD *)(v0 + 264) = v13;
  v14 = dword_100634C0C;
  swift_retain(v12);
  swift_bridgeObjectRetain(v13);
  v15 = (_QWORD *)swift_task_alloc(v14);
  *(_QWORD *)(v0 + 272) = v15;
  *v15 = v0;
  v15[1] = sub_100207CAC;
  return sub_1000FE8D8(*(_QWORD *)(v0 + 128), v13);
}

uint64_t sub_100207CAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 272);
  *(_QWORD *)(*(_QWORD *)v1 + 280) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100207F34;
  else
    v3 = sub_100207D10;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100207D10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 280);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = type metadata accessor for JSONEncoder(0);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v6 = JSONEncoder.init()(v5);
  v7 = sub_100004790(&qword_100632C00, (uint64_t (*)(uint64_t))&type metadata accessor for IdentityProofingAttributeConfiguration, (uint64_t)&protocol conformance descriptor for IdentityProofingAttributeConfiguration);
  v8 = dispatch thunk of JSONEncoder.encode<A>(_:)(v2, v3, v7);
  v10 = *(_QWORD *)(v0 + 256);
  v11 = *(_QWORD *)(v0 + 264);
  if (v1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
    swift_release(v6);
    swift_bridgeObjectRelease(v11);
    swift_release(v10);
    v12 = *(_QWORD *)(v0 + 136);

    sub_100006350(v12);
    v13 = *(_QWORD *)(v0 + 128);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v13);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v15 = v8;
    v16 = v9;
    v17 = *(_QWORD *)(v0 + 248);
    v18 = *(_QWORD *)(v0 + 128);
    v19 = *(_QWORD *)(v0 + 136);
    v20 = *(_QWORD *)(v0 + 88);
    v24 = *(_QWORD *)(v0 + 80);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(v18, *(_QWORD *)(v0 + 112));
    swift_release(v6);
    swift_bridgeObjectRelease(v11);
    swift_release(v10);
    v21 = sub_100004828(&qword_100640C30);
    v22 = swift_allocObject(v21, 40, 7);
    *(_OWORD *)(v22 + 16) = xmmword_100523860;
    *(_QWORD *)(v22 + 32) = v17;
    v25 = v22;
    specialized Array._endMutation()(v22);
    objc_allocWithZone((Class)type metadata accessor for IdentityProofingDisplayInfo(0));
    swift_bridgeObjectRetain(v20);
    v23 = IdentityProofingDisplayInfo.init(proofingUI:docScan:attributeConfig:learnMoreURL:waitingForWiFiAlertDataThresholdInBytes:lowDataModeAlertDataThresholdInBytes:idType:featureEnablementConfig:supportedRegions:livenessStepUpConfig:livenessStepUpIQSettings:shouldPreFetchLivenessConfig:)(v25, 0, v15, v16, v24, v20, 0, 1, 0, 1, 0, 0, 0, _swiftEmptyArrayStorage, 0, 0, 2);
    sub_100006350(v19);
    swift_task_dealloc(v19);
    swift_task_dealloc(v18);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v23);
  }
}

uint64_t sub_100207F34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 256);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 264));
  swift_release(v1);
  v2 = *(_QWORD *)(v0 + 136);

  sub_100006350(v2);
  v3 = *(_QWORD *)(v0 + 128);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100207F94()
{
  uint64_t v0;
  uint64_t v1;

  swift_release(*(_QWORD *)(v0 + 144));
  v1 = *(_QWORD *)(v0 + 128);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100207FD8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 128);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100208014()
{
  uint64_t v0;
  uint64_t v1;

  sub_100006350(*(_QWORD *)(v0 + 136));
  v1 = *(_QWORD *)(v0 + 128);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100208058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v9 + 160) = a8;
  *(_QWORD *)(v9 + 168) = v8;
  *(_BYTE *)(v9 + 368) = a7;
  *(_QWORD *)(v9 + 144) = a5;
  *(_QWORD *)(v9 + 152) = a6;
  *(_QWORD *)(v9 + 128) = a3;
  *(_QWORD *)(v9 + 136) = a4;
  *(_QWORD *)(v9 + 112) = a1;
  *(_QWORD *)(v9 + 120) = a2;
  v10 = type metadata accessor for IdentityProofingAttributeConfiguration(0);
  *(_QWORD *)(v9 + 176) = v10;
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v9 + 184) = v11;
  *(_QWORD *)(v9 + 192) = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for IdentityProofingStaticWorkflow(0);
  *(_QWORD *)(v9 + 200) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Logger(0);
  *(_QWORD *)(v9 + 208) = v13;
  v14 = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v9 + 216) = v14;
  *(_QWORD *)(v9 + 224) = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100208110, 0, 0);
}

uint64_t sub_100208110()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = 0x676E69646E6570;
  v2 = *(_QWORD *)(v0 + 136);
  *(_QWORD *)(v0 + 88) = 0x676E69646E6570;
  *(_QWORD *)(v0 + 96) = 0xE700000000000000;
  v3 = IdentityProofingActionStatus.rawValue.getter(v2);
  v4 = IdentityProofingActionStatus.rawValue.getter(0);
  if (v3 == v4)
  {
    if (*(_BYTE *)(v0 + 368))
      v1 = 0xD00000000000001FLL;
    else
      v1 = 0x6465646E65747865;
    if (*(_BYTE *)(v0 + 368))
      v5 = 0x8000000100554B10;
    else
      v5 = 0xEE00776569766552;
    goto LABEL_10;
  }
  v6 = IdentityProofingActionStatus.rawValue.getter(*(_QWORD *)(v0 + 136));
  v4 = IdentityProofingActionStatus.rawValue.getter(6);
  if (v6 == v4)
  {
    v5 = 0x8000000100554AF0;
    v1 = 0xD000000000000016;
LABEL_10:
    *(_QWORD *)(v0 + 88) = v1;
    *(_QWORD *)(v0 + 96) = v5;
    goto LABEL_12;
  }
  v5 = 0xE700000000000000;
LABEL_12:
  defaultLogger()(v4);
  v7 = swift_bridgeObjectRetain_n(v5, 2);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.debug.getter(v8);
  v10 = os_log_type_enabled(v8, v9);
  v12 = *(_QWORD *)(v0 + 216);
  v11 = *(_QWORD *)(v0 + 224);
  v13 = *(_QWORD *)(v0 + 208);
  if (v10)
  {
    v21 = *(_QWORD *)(v0 + 208);
    v20 = *(_QWORD *)(v0 + 224);
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v15 = swift_slowAlloc(32, -1);
    v22 = v15;
    *(_DWORD *)v14 = 136315138;
    swift_bridgeObjectRetain(v5);
    *(_QWORD *)(v0 + 104) = sub_1000E3AC8(v1, v5, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 104, v0 + 112, v14 + 4);
    swift_bridgeObjectRelease_n(v5, 3);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Based on the action status, will show %s state UI.", v14, 0xCu);
    swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v20, v21);
  }
  else
  {
    swift_bridgeObjectRelease_n(v5, 2);

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  v16 = *(_QWORD *)(*(_QWORD *)(v0 + 168) + 144);
  *(_QWORD *)(v0 + 232) = v16;
  v17 = dword_100640F54;
  swift_retain(v16);
  v18 = (_QWORD *)swift_task_alloc(v17);
  *(_QWORD *)(v0 + 240) = v18;
  *v18 = v0;
  v18[1] = sub_1002083A8;
  return sub_100433C30();
}

uint64_t sub_1002083A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();

  v6 = *(_QWORD **)v3;
  v7 = *(_QWORD *)(*(_QWORD *)v3 + 240);
  *(_QWORD *)(*(_QWORD *)v3 + 248) = v2;
  swift_task_dealloc(v7);
  v8 = v6[29];
  if (v2)
  {
    swift_bridgeObjectRelease(v6[12]);
    swift_release(v8);
    v9 = sub_100208D5C;
  }
  else
  {
    swift_release(v6[29]);
    v6[32] = a2;
    v6[33] = a1;
    v9 = sub_100208444;
  }
  return swift_task_switch(v9, 0, 0);
}

uint64_t sub_100208444()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t **v7;

  v2 = v0[32];
  v1 = v0[33];
  v3 = *(_QWORD *)(v0[21] + 136);
  v0[34] = v3;
  v4 = sub_100004828(&qword_100640CA0);
  inited = swift_initStackObject(v4, v0 + 2);
  v0[35] = inited;
  *(_OWORD *)(inited + 16) = xmmword_10051FFB0;
  *(_QWORD *)(inited + 32) = v1;
  *(_QWORD *)(inited + 40) = v2;
  v6 = dword_10063454C;
  swift_retain(v3);
  v7 = (uint64_t **)swift_task_alloc(v6);
  v0[36] = (uint64_t)v7;
  *v7 = v0;
  v7[1] = (uint64_t *)sub_1002084EC;
  return sub_1000F1E28(v0[15], v0[16], inited);
}

uint64_t sub_1002084EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 288);
  v3[37] = a1;
  v3[38] = v1;
  swift_task_dealloc(v4);
  v6 = v3[34];
  v5 = v3[35];
  if (v1)
  {
    swift_bridgeObjectRelease(v3[12]);
    swift_setDeallocating(v5);
    swift_arrayDestroy(v5 + 32, *(_QWORD *)(v5 + 16), &type metadata for String);
    swift_release(v6);
    v7 = sub_100208ED4;
  }
  else
  {
    swift_setDeallocating(v3[35]);
    swift_arrayDestroy(v5 + 32, *(_QWORD *)(v5 + 16), &type metadata for String);
    swift_release(v6);
    v7 = sub_1002085C0;
  }
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_1002085C0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0[21] + 144);
  v0[39] = v1;
  v2 = dword_100640F34;
  swift_retain(v1);
  v3 = (_QWORD *)swift_task_alloc(v2);
  v0[40] = v3;
  *v3 = v0;
  v3[1] = sub_100208628;
  return sub_100430D0C(v0[25]);
}

uint64_t sub_100208628()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 320);
  *(_QWORD *)(*(_QWORD *)v1 + 328) = v0;
  swift_task_dealloc(v3);
  v4 = v2[39];
  if (v0)
  {
    v5 = v2[37];
    swift_bridgeObjectRelease(v2[12]);
    swift_release(v4);
    swift_bridgeObjectRelease(v5);
    v6 = sub_10020904C;
  }
  else
  {
    swift_release(v2[39]);
    v6 = sub_1002086BC;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_1002086BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[25];
  v2 = *(_QWORD *)(v0[21] + 128);
  v0[42] = v2;
  v3 = *(_QWORD *)(v1 + 64);
  v0[43] = v3;
  v4 = dword_100634C0C;
  swift_retain(v2);
  swift_bridgeObjectRetain(v3);
  v5 = (_QWORD *)swift_task_alloc(v4);
  v0[44] = v5;
  *v5 = v0;
  v5[1] = sub_100208744;
  return sub_1000FE8D8(v0[24], v3);
}

uint64_t sub_100208744()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 352);
  *(_QWORD *)(*(_QWORD *)v1 + 360) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100208BB0;
  else
    v3 = sub_1002087A8;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1002087A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v42;
  int v43;
  int v44;
  int v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v1 = *(_QWORD *)(v0 + 360);
  v2 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 176);
  v4 = type metadata accessor for JSONEncoder(0);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v6 = JSONEncoder.init()(v5);
  v7 = sub_100004790(&qword_100632C00, (uint64_t (*)(uint64_t))&type metadata accessor for IdentityProofingAttributeConfiguration, (uint64_t)&protocol conformance descriptor for IdentityProofingAttributeConfiguration);
  v8 = dispatch thunk of JSONEncoder.encode<A>(_:)(v2, v3, v7);
  if (v1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
    swift_release(v6);
    v10 = *(_QWORD *)(v0 + 336);
    v11 = *(_QWORD *)(v0 + 344);
    v12 = *(_QWORD *)(v0 + 296);
    v13 = *(_QWORD *)(v0 + 200);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));
    swift_bridgeObjectRelease(v11);
    swift_release(v10);
    swift_bridgeObjectRelease(v12);
    sub_100006350(v13);
    v14 = sub_100004828(&qword_100640C30);
    v15 = swift_allocObject(v14, 40, 7);
    *(_OWORD *)(v15 + 16) = xmmword_100523860;
    v16 = objc_allocWithZone((Class)type metadata accessor for IdentityProofingUIConfig(0));
    v50 = 1;
    v48 = 1;
    v46 = 1;
    v17 = IdentityProofingUIConfig.init(view:title:subTitle:url:primaryButtonTitle:secondaryButtonTitle:tertiaryButtonTitle:messages:fields:caption:minLength:maxLength:placeholder:displayName:imageAssetsData:options:isUIEnabled:)(0xD000000000000015, 0x8000000100543A40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            v46,
            0,
            v48,
            0,
            0,
            0,
            0,
            0,
            0,
            v50);
    *(_QWORD *)(v15 + 32) = v17;
    specialized Array._endMutation()(v17);
    v18 = objc_allocWithZone((Class)type metadata accessor for IdentityProofingDisplayInfo(0));
    LOBYTE(v44) = 2;
    LOBYTE(v42) = 1;
    v19 = IdentityProofingDisplayInfo.init(proofingUI:docScan:attributeConfig:learnMoreURL:waitingForWiFiAlertDataThresholdInBytes:lowDataModeAlertDataThresholdInBytes:idType:featureEnablementConfig:supportedRegions:livenessStepUpConfig:livenessStepUpIQSettings:shouldPreFetchLivenessConfig:)(v15, 0, 0, 0xF000000000000000, 0, 0, 0, 1, 0, v42, 0, 0, 0, _swiftEmptyArrayStorage, 0, 0, v44);
    swift_errorRelease(v1);
  }
  else
  {
    v20 = *(_QWORD *)(v0 + 336);
    v21 = *(_QWORD *)(v0 + 344);
    v59 = v8;
    v60 = *(_QWORD *)(v0 + 200);
    v58 = v9;
    v55 = *(_QWORD *)(v0 + 296);
    v56 = *(_QWORD *)(v0 + 152);
    v57 = *(_QWORD *)(v0 + 144);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
    swift_release(v6);
    swift_bridgeObjectRelease(v21);
    swift_release(v20);
    v22 = swift_beginAccess(v0 + 88, v0 + 64, 0, 0);
    v53 = *(_QWORD *)(v0 + 96);
    v54 = *(_QWORD *)(v0 + 88);
    v52 = IdentityProofingDisplayMessage.title.getter(v22);
    v24 = v23;
    v25 = IdentityProofingDisplayMessage.url.getter();
    v27 = v26;
    v28 = IdentityProofingDisplayMessage.primaryButtonTitle.getter();
    v30 = v29;
    v31 = IdentityProofingDisplayMessage.secondaryButtonTitle.getter();
    v33 = v32;
    v34 = IdentityProofingDisplayMessage.messages.getter();
    v35 = objc_allocWithZone((Class)type metadata accessor for IdentityProofingUIConfig(0));
    v51 = 1;
    v49 = 1;
    v47 = 1;
    v36 = IdentityProofingUIConfig.init(view:title:subTitle:url:primaryButtonTitle:secondaryButtonTitle:tertiaryButtonTitle:messages:fields:caption:minLength:maxLength:placeholder:displayName:imageAssetsData:options:isUIEnabled:)(v54, v53, v52, v24, 0, 0, v25, v27, v28, v30, v31, v33, 0, 0, v34, 0, 0, 0, 0,
            v47,
            0,
            v49,
            0,
            0,
            0,
            0,
            v55,
            0,
            v51);
    v37 = sub_100004828(&qword_100640C30);
    v38 = swift_allocObject(v37, 40, 7);
    *(_OWORD *)(v38 + 16) = xmmword_100523860;
    *(_QWORD *)(v38 + 32) = v36;
    v61 = v38;
    specialized Array._endMutation()(v38);
    objc_allocWithZone((Class)type metadata accessor for IdentityProofingDisplayInfo(0));
    swift_bridgeObjectRetain(v56);
    LOBYTE(v45) = 2;
    LOBYTE(v43) = 1;
    v19 = IdentityProofingDisplayInfo.init(proofingUI:docScan:attributeConfig:learnMoreURL:waitingForWiFiAlertDataThresholdInBytes:lowDataModeAlertDataThresholdInBytes:idType:featureEnablementConfig:supportedRegions:livenessStepUpConfig:livenessStepUpIQSettings:shouldPreFetchLivenessConfig:)(v61, 0, v59, v58, v57, v56, 0, 1, 0, v43, 0, 0, 0, _swiftEmptyArrayStorage, 0, 0, v45);
    sub_100006350(v60);
  }
  v40 = *(_QWORD *)(v0 + 192);
  v39 = *(_QWORD *)(v0 + 200);
  swift_task_dealloc(*(_QWORD *)(v0 + 224));
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v19);
}

uint64_t sub_100208BB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v15;
  int v16;
  char v17;
  char v18;
  char v19;

  v1 = *(_QWORD *)(v0 + 360);
  v3 = *(_QWORD *)(v0 + 336);
  v2 = *(_QWORD *)(v0 + 344);
  v4 = *(_QWORD *)(v0 + 296);
  v5 = *(_QWORD *)(v0 + 200);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));
  swift_bridgeObjectRelease(v2);
  swift_release(v3);
  swift_bridgeObjectRelease(v4);
  sub_100006350(v5);
  v6 = sub_100004828(&qword_100640C30);
  v7 = swift_allocObject(v6, 40, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100523860;
  v8 = objc_allocWithZone((Class)type metadata accessor for IdentityProofingUIConfig(0));
  v19 = 1;
  v18 = 1;
  v17 = 1;
  v9 = IdentityProofingUIConfig.init(view:title:subTitle:url:primaryButtonTitle:secondaryButtonTitle:tertiaryButtonTitle:messages:fields:caption:minLength:maxLength:placeholder:displayName:imageAssetsData:options:isUIEnabled:)(0xD000000000000015, 0x8000000100543A40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         v17,
         0,
         v18,
         0,
         0,
         0,
         0,
         0,
         0,
         v19);
  *(_QWORD *)(v7 + 32) = v9;
  specialized Array._endMutation()(v9);
  v10 = objc_allocWithZone((Class)type metadata accessor for IdentityProofingDisplayInfo(0));
  LOBYTE(v16) = 2;
  LOBYTE(v15) = 1;
  v11 = IdentityProofingDisplayInfo.init(proofingUI:docScan:attributeConfig:learnMoreURL:waitingForWiFiAlertDataThresholdInBytes:lowDataModeAlertDataThresholdInBytes:idType:featureEnablementConfig:supportedRegions:livenessStepUpConfig:livenessStepUpIQSettings:shouldPreFetchLivenessConfig:)(v7, 0, 0, 0xF000000000000000, 0, 0, 0, 1, 0, v15, 0, 0, 0, _swiftEmptyArrayStorage, 0, 0, v16);
  swift_errorRelease(v1);
  v13 = *(_QWORD *)(v0 + 192);
  v12 = *(_QWORD *)(v0 + 200);
  swift_task_dealloc(*(_QWORD *)(v0 + 224));
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v11);
}

uint64_t sub_100208D5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v11;
  int v12;
  char v13;
  char v14;
  char v15;

  v1 = *(_QWORD *)(v0 + 248);
  v2 = sub_100004828(&qword_100640C30);
  v3 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100523860;
  v4 = objc_allocWithZone((Class)type metadata accessor for IdentityProofingUIConfig(0));
  v15 = 1;
  v14 = 1;
  v13 = 1;
  v5 = IdentityProofingUIConfig.init(view:title:subTitle:url:primaryButtonTitle:secondaryButtonTitle:tertiaryButtonTitle:messages:fields:caption:minLength:maxLength:placeholder:displayName:imageAssetsData:options:isUIEnabled:)(0xD000000000000015, 0x8000000100543A40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         v13,
         0,
         v14,
         0,
         0,
         0,
         0,
         0,
         0,
         v15);
  *(_QWORD *)(v3 + 32) = v5;
  specialized Array._endMutation()(v5);
  v6 = objc_allocWithZone((Class)type metadata accessor for IdentityProofingDisplayInfo(0));
  LOBYTE(v12) = 2;
  LOBYTE(v11) = 1;
  v7 = IdentityProofingDisplayInfo.init(proofingUI:docScan:attributeConfig:learnMoreURL:waitingForWiFiAlertDataThresholdInBytes:lowDataModeAlertDataThresholdInBytes:idType:featureEnablementConfig:supportedRegions:livenessStepUpConfig:livenessStepUpIQSettings:shouldPreFetchLivenessConfig:)(v3, 0, 0, 0xF000000000000000, 0, 0, 0, 1, 0, v11, 0, 0, 0, _swiftEmptyArrayStorage, 0, 0, v12);
  swift_errorRelease(v1);
  v9 = *(_QWORD *)(v0 + 192);
  v8 = *(_QWORD *)(v0 + 200);
  swift_task_dealloc(*(_QWORD *)(v0 + 224));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v7);
}

uint64_t sub_100208ED4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v11;
  int v12;
  char v13;
  char v14;
  char v15;

  v1 = *(_QWORD *)(v0 + 304);
  v2 = sub_100004828(&qword_100640C30);
  v3 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100523860;
  v4 = objc_allocWithZone((Class)type metadata accessor for IdentityProofingUIConfig(0));
  v15 = 1;
  v14 = 1;
  v13 = 1;
  v5 = IdentityProofingUIConfig.init(view:title:subTitle:url:primaryButtonTitle:secondaryButtonTitle:tertiaryButtonTitle:messages:fields:caption:minLength:maxLength:placeholder:displayName:imageAssetsData:options:isUIEnabled:)(0xD000000000000015, 0x8000000100543A40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         v13,
         0,
         v14,
         0,
         0,
         0,
         0,
         0,
         0,
         v15);
  *(_QWORD *)(v3 + 32) = v5;
  specialized Array._endMutation()(v5);
  v6 = objc_allocWithZone((Class)type metadata accessor for IdentityProofingDisplayInfo(0));
  LOBYTE(v12) = 2;
  LOBYTE(v11) = 1;
  v7 = IdentityProofingDisplayInfo.init(proofingUI:docScan:attributeConfig:learnMoreURL:waitingForWiFiAlertDataThresholdInBytes:lowDataModeAlertDataThresholdInBytes:idType:featureEnablementConfig:supportedRegions:livenessStepUpConfig:livenessStepUpIQSettings:shouldPreFetchLivenessConfig:)(v3, 0, 0, 0xF000000000000000, 0, 0, 0, 1, 0, v11, 0, 0, 0, _swiftEmptyArrayStorage, 0, 0, v12);
  swift_errorRelease(v1);
  v9 = *(_QWORD *)(v0 + 192);
  v8 = *(_QWORD *)(v0 + 200);
  swift_task_dealloc(*(_QWORD *)(v0 + 224));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v7);
}

uint64_t sub_10020904C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v11;
  int v12;
  char v13;
  char v14;
  char v15;

  v1 = *(_QWORD *)(v0 + 328);
  v2 = sub_100004828(&qword_100640C30);
  v3 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100523860;
  v4 = objc_allocWithZone((Class)type metadata accessor for IdentityProofingUIConfig(0));
  v15 = 1;
  v14 = 1;
  v13 = 1;
  v5 = IdentityProofingUIConfig.init(view:title:subTitle:url:primaryButtonTitle:secondaryButtonTitle:tertiaryButtonTitle:messages:fields:caption:minLength:maxLength:placeholder:displayName:imageAssetsData:options:isUIEnabled:)(0xD000000000000015, 0x8000000100543A40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         v13,
         0,
         v14,
         0,
         0,
         0,
         0,
         0,
         0,
         v15);
  *(_QWORD *)(v3 + 32) = v5;
  specialized Array._endMutation()(v5);
  v6 = objc_allocWithZone((Class)type metadata accessor for IdentityProofingDisplayInfo(0));
  LOBYTE(v12) = 2;
  LOBYTE(v11) = 1;
  v7 = IdentityProofingDisplayInfo.init(proofingUI:docScan:attributeConfig:learnMoreURL:waitingForWiFiAlertDataThresholdInBytes:lowDataModeAlertDataThresholdInBytes:idType:featureEnablementConfig:supportedRegions:livenessStepUpConfig:livenessStepUpIQSettings:shouldPreFetchLivenessConfig:)(v3, 0, 0, 0xF000000000000000, 0, 0, 0, 1, 0, v11, 0, 0, 0, _swiftEmptyArrayStorage, 0, 0, v12);
  swift_errorRelease(v1);
  v9 = *(_QWORD *)(v0 + 192);
  v8 = *(_QWORD *)(v0 + 200);
  swift_task_dealloc(*(_QWORD *)(v0 + 224));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v7);
}

uint64_t sub_1002091C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;

  *(_QWORD *)(v9 + 88) = v16;
  *(_QWORD *)(v9 + 96) = v8;
  *(_BYTE *)(v9 + 176) = v15;
  *(_QWORD *)(v9 + 72) = a7;
  *(_QWORD *)(v9 + 80) = a8;
  *(_QWORD *)(v9 + 56) = a5;
  *(_QWORD *)(v9 + 64) = a6;
  *(_QWORD *)(v9 + 40) = a3;
  *(_QWORD *)(v9 + 48) = a4;
  *(_QWORD *)(v9 + 24) = a1;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = type metadata accessor for DIPError.Code(0);
  *(_QWORD *)(v9 + 104) = v10;
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v9 + 112) = v11;
  *(_QWORD *)(v9 + 120) = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Logger(0);
  *(_QWORD *)(v9 + 128) = v12;
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v9 + 136) = v13;
  *(_QWORD *)(v9 + 144) = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100209268, 0, 0);
}

uint64_t sub_100209268()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, _QWORD, _QWORD);
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v1 + 32);
  swift_retain(v5);
  v6 = sub_1003CF620(v4, v2, v3, 0);
  swift_release(v5);
  swift_bridgeObjectRelease(v6);
  v14 = *(_QWORD *)(*(_QWORD *)(v1 + 32) + 24);
  *(_QWORD *)(v0 + 152) = v14;
  if (v14)
  {
    v15 = swift_retain(v14);
    v16 = defaultLogger()(v15);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.debug.getter(v17);
    v19 = os_log_type_enabled(v17, v18);
    v21 = *(_QWORD *)(v0 + 136);
    v20 = *(_QWORD *)(v0 + 144);
    v22 = *(_QWORD *)(v0 + 128);
    if (v19)
    {
      v23 = *(_QWORD *)(v0 + 24);
      v24 = (uint8_t *)swift_slowAlloc(12, -1);
      v37 = v20;
      v25 = swift_slowAlloc(32, -1);
      v38 = v25;
      *(_DWORD *)v24 = 136446210;
      v26 = IdentityProofingActionStatus.debugDescription.getter(v23);
      v28 = v27;
      *(_QWORD *)(v0 + 16) = sub_1000E3AC8(v26, v27, &v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v24 + 4);
      swift_bridgeObjectRelease(v28);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Display message exists for action status %{public}s", v24, 0xCu);
      swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1, -1);
      swift_slowDealloc(v24, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v37, v22);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
    }
    v36 = (_QWORD *)swift_task_alloc(dword_1006387AC);
    *(_QWORD *)(v0 + 160) = v36;
    *v36 = v0;
    v36[1] = sub_100209694;
    return sub_100208058(v14, *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_BYTE *)(v0 + 176), *(_QWORD *)(v0 + 88));
  }
  else
  {
    v29 = *(_QWORD *)(v0 + 120);
    v30 = *(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 112) + 104);
    v30(v29, enum case for DIPError.Code.displayMessageDataUnavailable(_:), *(_QWORD *)(v0 + 104));
    v31 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v32 = type metadata accessor for DIPError(0);
    v33 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    v34 = swift_allocError(v32, v33, 0, 0);
    v35 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000022, 0x8000000100554AC0, 0, v29, 0, v31, 0xD00000000000007CLL, 0x80000001005549D0, 0xD00000000000006BLL, 0x8000000100554A50, 632);
    swift_willThrow(v35);
    v7 = *(_QWORD *)(v0 + 144);
    v8 = *(_QWORD *)(v0 + 120);
    v30(v8, enum case for DIPError.Code.internalError(_:), *(_QWORD *)(v0 + 104));
    swift_errorRetain(v34);
    v9 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v10 = type metadata accessor for DIPError(0);
    v11 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    swift_allocError(v10, v11, 0, 0);
    v12 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, v34, v8, 0, v9, 0xD00000000000007CLL, 0x80000001005549D0, 0xD00000000000006BLL, 0x8000000100554A50, 639);
    swift_willThrow(v12);
    swift_errorRelease(v34);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100209694(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 160);
  *(_QWORD *)(*(_QWORD *)v1 + 168) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1002096F0, 0, 0);
}

uint64_t sub_1002096F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 120);
  swift_release(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 168));
}

uint64_t sub_10020973C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 56));
  swift_release(*(_QWORD *)(v0 + 64));
  swift_release(*(_QWORD *)(v0 + 72));
  swift_release(*(_QWORD *)(v0 + 80));
  swift_release(*(_QWORD *)(v0 + 88));
  swift_release(*(_QWORD *)(v0 + 96));
  swift_release(*(_QWORD *)(v0 + 104));
  swift_release(*(_QWORD *)(v0 + 112));
  swift_release(*(_QWORD *)(v0 + 120));
  swift_release(*(_QWORD *)(v0 + 128));
  swift_release(*(_QWORD *)(v0 + 136));
  swift_release(*(_QWORD *)(v0 + 144));
  return v0;
}

uint64_t sub_1002097D8()
{
  uint64_t v0;

  sub_10020973C();
  return swift_deallocClassInstance(v0, 152, 7);
}

uint64_t type metadata accessor for IdentityProofingDisplayManager()
{
  return objc_opt_self(_TtC8coreidvd30IdentityProofingDisplayManager);
}

uint64_t sub_100209818(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IdentityProofingStaticWorkflow(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10020985C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v7 + 48) = a6;
  *(_QWORD *)(v7 + 56) = v6;
  *(_BYTE *)(v7 + 160) = a5;
  *(_QWORD *)(v7 + 32) = a3;
  *(_QWORD *)(v7 + 40) = a4;
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  v8 = type metadata accessor for IdentityProofingAttributeConfiguration(0);
  *(_QWORD *)(v7 + 64) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v7 + 72) = v9;
  *(_QWORD *)(v7 + 80) = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for IdentityProofingStaticWorkflow(0);
  *(_QWORD *)(v7 + 88) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1002098E8, 0, 0);
}

uint64_t sub_1002098E8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0[7] + 144);
  v0[12] = v1;
  v2 = dword_100640F34;
  swift_retain(v1);
  v3 = (_QWORD *)swift_task_alloc(v2);
  v0[13] = v3;
  *v3 = v0;
  v3[1] = sub_100209950;
  return sub_100430D0C(v0[11]);
}

uint64_t sub_100209950()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 104);
  *(_QWORD *)(*v1 + 112) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100209DDC;
  }
  else
  {
    swift_release(*(_QWORD *)(v2 + 96));
    v4 = sub_1002099BC;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1002099BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char v9;
  char v10;
  char v11;

  v1 = v0[11];
  v2 = v0[7];
  v3 = objc_allocWithZone((Class)type metadata accessor for IdentityProofingUIConfig(0));
  v11 = 1;
  v10 = 1;
  v9 = 1;
  v0[15] = IdentityProofingUIConfig.init(view:title:subTitle:url:primaryButtonTitle:secondaryButtonTitle:tertiaryButtonTitle:messages:fields:caption:minLength:maxLength:placeholder:displayName:imageAssetsData:options:isUIEnabled:)(0x6441746F6E6E6163, 0xEB00000000444964, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             v9,
             0,
             v10,
             0,
             0,
             0,
             0,
             0,
             0,
             v11);
  v4 = *(_QWORD *)(v2 + 128);
  v0[16] = v4;
  v5 = *(_QWORD *)(v1 + 64);
  v0[17] = v5;
  v6 = dword_100634C0C;
  swift_retain(v4);
  swift_bridgeObjectRetain(v5);
  v7 = (_QWORD *)swift_task_alloc(v6);
  v0[18] = v7;
  *v7 = v0;
  v7[1] = sub_100209AC0;
  return sub_1000FE8D8(v0[10], v5);
}

uint64_t sub_100209AC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100209D7C;
  else
    v3 = sub_100209B24;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100209B24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 64);
  v7 = type metadata accessor for JSONEncoder(0);
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  v9 = JSONEncoder.init()(v8);
  v10 = sub_100004790(&qword_100632C00, (uint64_t (*)(uint64_t))&type metadata accessor for IdentityProofingAttributeConfiguration, (uint64_t)&protocol conformance descriptor for IdentityProofingAttributeConfiguration);
  v11 = dispatch thunk of JSONEncoder.encode<A>(_:)(v4, v6, v10);
  v13 = v12;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_release(v9);
  swift_bridgeObjectRelease(v3);
  swift_release(v2);
  v14 = *(void **)(v0 + 120);
  if (v1)
  {
    v15 = *(_QWORD *)(v0 + 88);

    sub_100006350(v15);
    v16 = *(_QWORD *)(v0 + 80);
    swift_task_dealloc(*(_QWORD *)(v0 + 88));
    swift_task_dealloc(v16);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v18 = *(unsigned __int8 *)(v0 + 160);
    v20 = *(_QWORD *)(v0 + 32);
    v19 = *(_QWORD *)(v0 + 40);
    v21 = sub_100004828(&qword_100640C30);
    v22 = swift_allocObject(v21, 40, 7);
    *(_OWORD *)(v22 + 16) = xmmword_100523860;
    *(_QWORD *)(v22 + 32) = v14;
    v31 = v22;
    specialized Array._endMutation()(v22);
    objc_allocWithZone((Class)type metadata accessor for IdentityProofingDisplayInfo(0));
    v23 = v14;
    sub_100022948(v11, v13);
    swift_bridgeObjectRetain(v19);
    v24 = IdentityProofingDisplayInfo.init(proofingUI:docScan:attributeConfig:learnMoreURL:waitingForWiFiAlertDataThresholdInBytes:lowDataModeAlertDataThresholdInBytes:idType:featureEnablementConfig:supportedRegions:livenessStepUpConfig:livenessStepUpIQSettings:shouldPreFetchLivenessConfig:)(v31, 0, v11, v13, v20, v19, 0, 1, 0, 1, 0, 0, 0, _swiftEmptyArrayStorage, 0, 0, 2);
    if (v18 == 1)
    {
      v26 = *(_QWORD *)(v0 + 16);
      v25 = *(_QWORD *)(v0 + 24);
      v27 = *(_QWORD *)(*(_QWORD *)(v0 + 56) + 104);
      swift_retain(v27);
      sub_10038FC94(v26, v25, 2, 0);
      swift_release(v27);
    }
    v28 = *(void **)(v0 + 120);
    v30 = *(_QWORD *)(v0 + 80);
    v29 = *(_QWORD *)(v0 + 88);
    sub_100007F8C(v11, v13);

    sub_100006350(v29);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v24);
  }
}

uint64_t sub_100209D7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 128);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 136));
  swift_release(v1);
  v2 = *(_QWORD *)(v0 + 88);

  sub_100006350(v2);
  v3 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100209DDC()
{
  uint64_t v0;
  uint64_t v1;

  swift_release(*(_QWORD *)(v0 + 96));
  v1 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100209E20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  void *v14;
  id v15;
  Swift::String v16;
  Swift::Bool v17;
  uint64_t v18;
  id v19;
  Swift::String v20;
  Swift::Bool v21;
  uint64_t v22;
  id v23;
  Swift::String v24;
  Swift::Bool v25;
  uint64_t v26;
  id v27;
  Swift::String v28;
  Swift::Int value;
  Swift::Bool is_nil;
  int v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v37;
  _QWORD v38[3];
  char v39;
  _QWORD v40[5];
  char v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;
  unsigned __int8 v45;
  uint64_t v46;
  unsigned __int8 v47;
  _QWORD v48[7];
  Swift::Int_optional v49;

  v37 = a2;
  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v38[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000A1F54(a1, (uint64_t)v48, &qword_100638AD0);
  if (v48[0] == 1)
  {
    v10 = defaultLogger()(v9);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.error.getter(v11);
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Workflow did not contain doc scan settings, using default config.", v13, 2u);
      swift_slowDealloc(v13, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  v14 = (void *)objc_opt_self(NSUserDefaults);
  v15 = objc_msgSend(v14, "standardUserDefaults");
  v16._object = (void *)0x8000000100554D40;
  v16._countAndFlagsBits = 0xD000000000000019;
  v17 = NSUserDefaults.internalBool(forKey:)(v16);

  if (v17)
  {
    v18 = 0;
  }
  else
  {
    sub_1000A1F54(a1, (uint64_t)&v46, &qword_100638AD0);
    if (v46 == 1)
      v18 = 2;
    else
      v18 = v47;
  }
  v19 = objc_msgSend(v14, "standardUserDefaults", v37);
  v20._countAndFlagsBits = 0xD000000000000022;
  v20._object = (void *)0x8000000100554D60;
  v21 = NSUserDefaults.internalBool(forKey:)(v20);

  if (v21)
  {
    v22 = 0;
  }
  else
  {
    sub_1000A1F54(a1, (uint64_t)&v44, &qword_100638AD0);
    if (v44 == 1)
      v22 = 2;
    else
      v22 = v45;
  }
  v23 = objc_msgSend(v14, "standardUserDefaults");
  v24._countAndFlagsBits = 0xD00000000000001ELL;
  v24._object = (void *)0x8000000100554D90;
  v25 = NSUserDefaults.internalBool(forKey:)(v24);

  if (v25)
  {
    v26 = 0;
  }
  else
  {
    sub_1000A1F54(a1, (uint64_t)&v42, &qword_100638AD0);
    if (v42 == 1)
      v26 = 2;
    else
      v26 = v43;
  }
  v27 = objc_msgSend(v14, "standardUserDefaults");
  v28._countAndFlagsBits = 0xD00000000000001FLL;
  v28._object = (void *)0x8000000100554DB0;
  v49 = NSUserDefaults.internalInt(forKey:)(v28);
  value = v49.value;
  is_nil = v49.is_nil;

  if (is_nil)
  {
    sub_1000A1F54(a1, (uint64_t)v40, &qword_100638AD0);
    if (v40[0] == 1)
    {
      value = 0;
      v31 = 1;
    }
    else
    {
      value = v40[4];
      v31 = v41 & 1;
    }
  }
  else
  {
    v31 = 0;
  }
  sub_1000A1F54(a1, (uint64_t)v38, &qword_100638AD0);
  if (v38[0] == 1)
    v32 = 0;
  else
    v32 = v38[2];
  v33 = (v38[0] == 1) | v39;
  if (v31)
    v34 = 0;
  else
    v34 = value & ~(value >> 63);
  if (value < 0)
    LOBYTE(v31) = 1;
  type metadata accessor for IdentityDocScanConfig(0);
  v35 = swift_bridgeObjectRetain(a3);
  return IdentityDocScanConfig.__allocating_init(pdf417ParsingConfigs:requiresPDF417:requiresAAMVACompliant:requiresStateMatch:issuerIdentificationNumber:crTimeout:maxRetakeCount:)(0, v18, v22, v26, v37, a3, v32, v33 & 1, v35, v34, (_BYTE)v31);
}

void sub_10020A1CC(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_100201598(*(_QWORD *)(v1 + 16), *(NSObject **)(v1 + 24), *(_QWORD *)(v1 + 32), *(NSObject **)(v1 + 40), a1);
}

uint64_t sub_10020A1E8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

_QWORD *sub_10020A20C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *result;
  char v5;
  uint64_t v6;
  char v7;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr))(v1 + 16))(&v6);
  if (!v2)
  {
    v5 = v7;
    *(_QWORD *)a1 = v6;
    *(_BYTE *)(a1 + 8) = v5;
  }
  return result;
}

uint64_t sub_10020A250()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1)
  {
    swift_bridgeObjectRelease(v1);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  }
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10020A280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain(a2);
    return swift_bridgeObjectRetain(a4);
  }
  return result;
}

uint64_t sub_10020A2B0()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[4]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

void sub_10020A2E4()
{
  uint64_t v0;

  sub_10045E5E0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD **)(v0 + 40));
}

uint64_t sub_10020A300(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100004828(&qword_1006384C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10020A348(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100004828(&qword_1006384C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10020A390()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10020A3B4()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v0[7]);
  swift_release(v0[8]);
  return swift_deallocObject(v0, 72, 7);
}

void sub_10020A3F0()
{
  uint64_t v0;

  sub_10045DD04(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD **)(v0 + 64));
}

uint64_t sub_10020A418()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10020A444()
{
  uint64_t *v0;

  return sub_1001FEAB4(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_10020A450(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10020A460(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10020A468(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t result;
  id v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  char *v55;
  _QWORD v56[3];
  char v57[8];
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;

  v5 = type metadata accessor for DIPError.Code(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v55 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_allocWithZone((Class)NSFetchRequest);
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(v8, "initWithEntityName:", v9);

  objc_msgSend(v10, "setFetchLimit:", 1);
  sub_1000C000C();
  v11 = sub_100004828((uint64_t *)&unk_100636410);
  v12 = swift_allocObject(v11, 72, 7);
  v54 = xmmword_10051FFB0;
  *(_OWORD *)(v12 + 16) = xmmword_10051FFB0;
  *(_QWORD *)(v12 + 56) = &type metadata for String;
  *(_QWORD *)(v12 + 64) = sub_1000C0048();
  *(_QWORD *)(v12 + 32) = a1;
  *(_QWORD *)(v12 + 40) = a2;
  swift_bridgeObjectRetain(a2);
  v13 = (void *)NSPredicate.init(format:_:)(0x49676E6972696170, 0xEF4025203D3D2044, v12);
  objc_msgSend(v10, "setPredicate:", v13);

  v14 = sub_100004828(&qword_1006332D0);
  v15 = NSManagedObjectContext.fetch<A>(_:)(v10, v14);
  if (v2)
  {

    v58 = 0;
    v59 = 0xE000000000000000;
    _StringGuts.grow(_:)(68);
    v16._countAndFlagsBits = 0xD000000000000037;
    v16._object = (void *)0x8000000100546AF0;
    String.append(_:)(v16);
    v17._countAndFlagsBits = a1;
    v17._object = a2;
    String.append(_:)(v17);
    v18._countAndFlagsBits = 0x3A726F727265203ALL;
    v18._object = (void *)0xE900000000000020;
    String.append(_:)(v18);
    v60 = v2;
    v19 = sub_100004828((uint64_t *)&unk_100633430);
    _print_unlocked<A, B>(_:_:)(&v60, &v58, v19, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v20 = v58;
    v21 = v59;
    v22 = v55;
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v55, enum case for DIPError.Code.coreDataError(_:), v5);
    v23 = sub_100004828((uint64_t *)&unk_1006325A0);
    v24 = sub_100004828((uint64_t *)&unk_100633440);
    v25 = *(_QWORD *)(v24 - 8);
    v26 = *(_QWORD *)(v25 + 72);
    v27 = *(unsigned __int8 *)(v25 + 80);
    v28 = (v27 + 32) & ~v27;
    v29 = swift_allocObject(v23, v28 + v26, v27 | 7);
    *(_OWORD *)(v29 + 16) = v54;
    v30 = v29 + v28;
    v31 = (uint64_t *)(v29 + v28 + *(int *)(v24 + 48));
    v32 = enum case for DIPError.PropertyKey.underlyingErrno(_:);
    v33 = type metadata accessor for DIPError.PropertyKey(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v30, v32, v33);
    swift_getErrorValue(v2, v57, v56);
    v34 = v56[1];
    v35 = v56[2];
    swift_errorRetain(v2);
    v36 = dispatch thunk of Error._code.getter(v34, v35);
    v31[3] = (uint64_t)&type metadata for Int;
    *v31 = v36;
    v37 = sub_10011D314(v29);
    v38 = type metadata accessor for DIPError(0);
    v39 = sub_100007F30();
    swift_allocError(v38, v39, 0, 0);
    v40 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v20, v21, v2, v22, 0, v37, 0xD000000000000075, 0x8000000100554FB0, 0xD000000000000020, 0x8000000100546B30, 30);
    swift_willThrow(v40);
    swift_errorRelease(v2);
    return v37;
  }
  v41 = v15;
  if ((unint64_t)v15 >> 62)
  {
    if (v15 < 0)
      v50 = v15;
    else
      v50 = v15 & 0xFFFFFFFFFFFFFF8;
    v51 = type metadata accessor for StoredPrearmTrust(0);
    swift_bridgeObjectRetain(v41);
    v52 = _bridgeCocoaArray<A>(_:)(v50, v51);
    result = swift_bridgeObjectRelease_n(v41, 2);
    v41 = v52;
  }
  else
  {
    v42 = v15 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v15);
    v44 = dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v43);
    v45 = type metadata accessor for StoredPrearmTrust(0);
    if (swift_dynamicCastMetatype(v44, v45) || (v48 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
    {
LABEL_5:
      result = swift_bridgeObjectRelease(v41);
    }
    else
    {
      v49 = (_QWORD *)(v42 + 32);
      while (swift_dynamicCastClass(*v49, v45))
      {
        ++v49;
        if (!--v48)
          goto LABEL_5;
      }
      result = swift_bridgeObjectRelease(v41);
      v41 = v42 | 1;
    }
  }
  if ((unint64_t)v41 >> 62)
  {
    if (v41 < 0)
      v53 = v41;
    else
      v53 = v41 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v41);
    v37 = _CocoaArrayWrapper.endIndex.getter(v53);
    result = swift_bridgeObjectRelease(v41);
    if (!v37)
      goto LABEL_12;
  }
  else
  {
    v37 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v37)
    {
LABEL_12:
      swift_bridgeObjectRelease(v41);

      return v37;
    }
  }
  if ((v41 & 0xC000000000000001) != 0)
  {
    v47 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v41);
    goto LABEL_11;
  }
  if (*(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v47 = *(id *)(v41 + 32);
LABEL_11:
    v37 = (unint64_t)v47;
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

void sub_10020A9A0(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  void *v34;
  _QWORD v35[3];
  _BYTE v36[8];
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;

  v6 = type metadata accessor for DIPError.Code(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10020A468(a1, a2);
  if (v3)
  {
    v37 = 0;
    v38 = 0xE000000000000000;
    _StringGuts.grow(_:)(75);
    v11._countAndFlagsBits = 0xD00000000000003FLL;
    v11._object = (void *)0x8000000100546A80;
    String.append(_:)(v11);
    v12._countAndFlagsBits = a1;
    v12._object = a2;
    String.append(_:)(v12);
    v13._countAndFlagsBits = 0x203A726F72726520;
    v13._object = (void *)0xE800000000000000;
    String.append(_:)(v13);
    v39 = v3;
    v14 = sub_100004828((uint64_t *)&unk_100633430);
    _print_unlocked<A, B>(_:_:)(&v39, &v37, v14, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v15 = v37;
    v16 = v38;
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for DIPError.Code.coreDataError(_:), v6);
    v17 = sub_100004828((uint64_t *)&unk_1006325A0);
    v18 = sub_100004828((uint64_t *)&unk_100633440);
    v19 = *(_QWORD *)(v18 - 8);
    v20 = *(_QWORD *)(v19 + 72);
    v21 = *(unsigned __int8 *)(v19 + 80);
    v22 = (v21 + 32) & ~v21;
    v23 = swift_allocObject(v17, v22 + v20, v21 | 7);
    *(_OWORD *)(v23 + 16) = xmmword_10051FFB0;
    v24 = (uint64_t *)(v23 + v22 + *(int *)(v18 + 48));
    v25 = enum case for DIPError.PropertyKey.underlyingErrno(_:);
    v26 = type metadata accessor for DIPError.PropertyKey(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v23 + v22, v25, v26);
    swift_getErrorValue(v3, v36, v35);
    v27 = v35[1];
    v28 = v35[2];
    swift_errorRetain(v3);
    v29 = dispatch thunk of Error._code.getter(v27, v28);
    v24[3] = (uint64_t)&type metadata for Int;
    *v24 = v29;
    v30 = sub_10011D314(v23);
    v31 = type metadata accessor for DIPError(0);
    v32 = sub_100007F30();
    swift_allocError(v31, v32, 0, 0);
    v33 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v15, v16, v3, v9, 0, v30, 0xD000000000000075, 0x8000000100554FB0, 0xD000000000000021, 0x8000000100546AC0, 41);
    swift_willThrow(v33);
    swift_errorRelease(v3);
  }
  else
  {
    v34 = (void *)v10;
    if (v10)
    {
      objc_msgSend(*(id *)(v2 + 16), "deleteObject:", v10);

    }
  }
}

uint64_t type metadata accessor for TermsAndConditionsFetcher()
{
  return objc_opt_self(_TtC8coreidvd25TermsAndConditionsFetcher);
}

uint64_t sub_10020ACA8()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t (*v4)(_QWORD *);
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD v10[5];
  uint64_t (*v11)(_QWORD *);
  uint64_t v12;

  if (qword_10062F490 != -1)
    swift_once(&qword_10062F490, sub_100139C84);
  v0 = qword_1006702A0;
  v1 = *(os_unfair_lock_s **)(qword_1006702A0 + 16);
  v2 = (uint64_t)&v1[4];
  v3 = v1 + 52;
  os_unfair_lock_lock(v1 + 52);
  sub_100139D14(v2, v0, v10);
  os_unfair_lock_unlock(v3);
  v4 = v11;
  v5 = v12;
  sub_10002EF2C((uint64_t)v11, v12);
  v6 = sub_10001D410(v10);
  if (v4)
  {
    v7 = v4(v6);
    sub_10002F034((uint64_t)v4, v5);
  }
  else
  {
    v8 = type metadata accessor for TermsAndConditionsFetcher();
    return swift_allocObject(v8, 16, 7);
  }
  return v7;
}

uint64_t sub_10020AD84(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v2[6] = a1;
  v2[7] = a2;
  v3 = type metadata accessor for DIPError.Code(0);
  v2[8] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[9] = v4;
  v2[10] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100004828(&qword_1006354A8);
  v2[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DIPSignpost.Config(0);
  v2[12] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[13] = v7;
  v2[14] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DIPSignpost(0);
  v2[15] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[16] = v9;
  v2[17] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UUID(0);
  v2[18] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v2[19] = v11;
  v2[20] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Logger(0);
  v2[21] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v2[22] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[23] = swift_task_alloc(v14);
  v2[24] = swift_task_alloc(v14);
  return swift_task_switch(sub_10020AEB8, 0, 0);
}

uint64_t sub_10020AEB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  _QWORD *v25;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v2 = defaultLogger()(a1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.debug.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Will attempt to get Identity Proofing Static asset meta data", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = *(_QWORD *)(v1 + 192);
  v7 = *(_QWORD *)(v1 + 168);
  v8 = *(_QWORD *)(v1 + 176);
  v10 = *(_QWORD *)(v1 + 152);
  v9 = *(_QWORD *)(v1 + 160);
  v11 = *(_QWORD *)(v1 + 144);

  v12 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
  *(_QWORD *)(v1 + 200) = v12;
  v13 = v12(v6, v7);
  v14 = UUID.init()(v13);
  UUID.uuidString.getter(v14);
  v16 = v15;
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  v17 = sub_10011BB14(1);
  *(_QWORD *)(v1 + 208) = v17;
  v18 = swift_bridgeObjectRelease(v16);
  if (v17)
  {
    v20 = *(_QWORD *)(v1 + 104);
    v19 = *(_QWORD *)(v1 + 112);
    v22 = *(_QWORD *)(v1 + 88);
    v21 = *(_QWORD *)(v1 + 96);
    v23 = *(_QWORD *)(v1 + 56);
    static DaemonSignposts.fetchIdentityStaticTCTotal.getter(v18);
    DIPSignpost.init(_:)(v19);
    v24 = swift_bridgeObjectRetain(v23);
    static DaemonSignposts.fetchIdentityStaticTCRequest.getter(v24);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v20 + 56))(v22, 0, 1, v21);
    v25 = (_QWORD *)swift_task_alloc(dword_1006354BC);
    *(_QWORD *)(v1 + 216) = v25;
    *v25 = v1;
    v25[1] = sub_10020B1A0;
    return sub_10011A888(0xD000000000000024, 0x800000010053AEF0, *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 88));
  }
  else
  {
    v27 = *(_QWORD *)(v1 + 80);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v1 + 72) + 104))(v27, enum case for DIPError.Code.staticWebServiceUnavailable(_:), *(_QWORD *)(v1 + 64));
    v28 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v29 = type metadata accessor for DIPError(0);
    v30 = sub_100007F30();
    swift_allocError(v29, v30, 0, 0);
    v31 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001DLL, 0x8000000100555060, 0, v27, 0, v28, 0xD00000000000005ALL, 0x8000000100555080, 0xD00000000000002ALL, 0x80000001005550E0, 28);
    swift_willThrow(v31);
    v32 = *(_QWORD *)(v1 + 184);
    v33 = *(_QWORD *)(v1 + 160);
    v34 = *(_QWORD *)(v1 + 136);
    v35 = *(_QWORD *)(v1 + 112);
    v37 = *(_QWORD *)(v1 + 80);
    v36 = *(_QWORD *)(v1 + 88);
    swift_task_dealloc(*(_QWORD *)(v1 + 192));
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_10020B1A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v4 = (_QWORD *)*v3;
  v4[2] = v3;
  v4[3] = a1;
  v4[4] = a2;
  v4[5] = v2;
  v5 = v4[27];
  v6 = v4[11];
  v7 = v4[7];
  v4[28] = v2;
  swift_task_dealloc(v5);
  sub_10020B524(v6);
  swift_bridgeObjectRelease(v7);
  if (v2)
    v8 = sub_10020B394;
  else
    v8 = sub_10020B22C;
  return swift_task_switch(v8, 0, 0);
}

uint64_t sub_10020B22C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = defaultLogger()(a1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "TC downloaded successfully", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v19 = *(_QWORD *)(v1 + 32);
  v20 = *(_QWORD *)(v1 + 24);
  v6 = *(void (**)(uint64_t, uint64_t))(v1 + 200);
  v7 = *(_QWORD *)(v1 + 208);
  v9 = *(_QWORD *)(v1 + 184);
  v8 = *(_QWORD *)(v1 + 192);
  v10 = *(_QWORD *)(v1 + 168);
  v11 = *(_QWORD *)(v1 + 128);
  v12 = *(_QWORD *)(v1 + 136);
  v13 = *(_QWORD *)(v1 + 120);
  v15 = *(_QWORD *)(v1 + 160);
  v16 = *(_QWORD *)(v1 + 112);
  v17 = *(_QWORD *)(v1 + 88);
  v18 = *(_QWORD *)(v1 + 80);

  v6(v9, v10);
  DIPSignpost.end(workflowID:isBackground:)((Swift::String_optional)0, (Swift::Bool_optional)2);
  swift_release(v7);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v13);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v15);
  swift_task_dealloc(v12);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v20, v19);
}

uint64_t sub_10020B394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 208);
  v4 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 80);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 104))(v6, enum case for DIPError.Code.invalidStaticTC(_:), *(_QWORD *)(v0 + 64));
  v7 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
  v8 = type metadata accessor for DIPError(0);
  v9 = sub_100007F30();
  swift_allocError(v8, v9, 0, 0);
  v10 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001CLL, 0x8000000100555110, 0, v6, 0, v7, 0xD00000000000005ALL, 0x8000000100555080, 0xD00000000000002ALL, 0x80000001005550E0, 40);
  swift_willThrow(v10);
  swift_release(v2);
  swift_errorRelease(v1);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v11 = *(_QWORD *)(v0 + 184);
  v12 = *(_QWORD *)(v0 + 160);
  v13 = *(_QWORD *)(v0 + 136);
  v14 = *(_QWORD *)(v0 + 112);
  v16 = *(_QWORD *)(v0 + 80);
  v15 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10020B524(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100004828(&qword_1006354A8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for DIPCryptoSecureElement(uint64_t a1)
{
  return sub_100038B7C(a1, (uint64_t *)&unk_100638B98, (uint64_t)&nominal type descriptor for DIPCryptoSecureElement);
}

uint64_t sub_10020B578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10020B748(a1, a2, a3, qword_1006702E8);
}

uint64_t sub_10020B584(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v8;

  v4[2] = a2;
  v4[3] = a3;
  swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
  sub_100028034(a2, a3);
  v8 = (_QWORD *)swift_task_alloc(async function pointer to DIPKeystoreKeychain.init(requireUserAuth:externalizedLAContext:)[1]);
  v4[4] = v8;
  *v8 = v4;
  v8[1] = sub_10020B610;
  return DIPKeystoreKeychain.init(requireUserAuth:externalizedLAContext:)(a1, a2, a3);
}

uint64_t sub_10020B610(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 32);
  *(_QWORD *)(*v2 + 40) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_10020B6BC;
  }
  else
  {
    *(_QWORD *)(v4 + 48) = a1;
    v6 = sub_10020B684;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_10020B684()
{
  uint64_t v0;

  sub_100007F78(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 48));
}

uint64_t sub_10020B6BC()
{
  uint64_t v0;

  sub_100007F78(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10020B6F0(uint64_t a1, uint64_t a2)
{
  return sub_10020C9C0(a1, a2);
}

uint64_t sub_10020B704()
{
  uint64_t v0;

  v0 = DIPCryptoKeychain.deinit();
  return swift_deallocClassInstance(v0, 16, 7);
}

uint64_t sub_10020B720()
{
  return type metadata accessor for DIPCryptoSecureElement(0);
}

uint64_t type metadata accessor for DIPKeystoreSecureElement(uint64_t a1)
{
  return sub_100038B7C(a1, qword_100638BE8, (uint64_t)&nominal type descriptor for DIPKeystoreSecureElement);
}

uint64_t sub_10020B73C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10020B748(a1, a2, a3, qword_1006702F8);
}

uint64_t sub_10020B748(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  _BYTE v5[8];

  return swift_initClassMetadata2(a1, 0, 0, v5, a1 + *a4);
}

uint64_t sub_10020B780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(v7 + 80) = a5;
  *(_QWORD *)(v7 + 88) = v6;
  *(_BYTE *)(v7 + 168) = a6;
  *(_QWORD *)(v7 + 64) = a2;
  *(_QWORD *)(v7 + 72) = a3;
  *(_QWORD *)(v7 + 56) = a1;
  v8 = type metadata accessor for DIPError.Code(0);
  *(_QWORD *)(v7 + 96) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v7 + 104) = v9;
  *(_QWORD *)(v7 + 112) = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DIPSignpost.Config(0);
  *(_QWORD *)(v7 + 120) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DIPSignpost(0);
  *(_QWORD *)(v7 + 128) = v11;
  v12 = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v7 + 136) = v12;
  *(_QWORD *)(v7 + 144) = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10020B834, 0, 0);
}

uint64_t sub_10020B834()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 120);
  static DaemonSignposts.fetchSEABAASCert.getter();
  DIPSignpost.init(_:)(v1);
  v2 = (_QWORD *)swift_task_alloc(dword_100638C4C);
  *(_QWORD *)(v0 + 152) = v2;
  *v2 = v0;
  v2[1] = sub_10020B8A0;
  return sub_10020CBC4(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_BYTE *)(v0 + 168));
}

uint64_t sub_10020B8A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10020BADC;
  else
    v3 = sub_10020B904;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10020B904()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 160);
  sub_10020C144(*(_QWORD *)(v0 + 64), *(void **)(v0 + 72), *(_QWORD *)(v0 + 80), 1, (uint64_t *)(v0 + 16));
  if (!v1)
  {
    if (*(_QWORD *)(v0 + 40))
    {
      v7 = *(_QWORD *)(v0 + 136);
      v6 = *(_QWORD *)(v0 + 144);
      v9 = *(_QWORD *)(v0 + 120);
      v8 = *(_QWORD *)(v0 + 128);
      v10 = *(_QWORD *)(v0 + 112);
      sub_100008018((__int128 *)(v0 + 16), *(_QWORD *)(v0 + 56));
      DIPSignpost.end(workflowID:isBackground:)((Swift::String_optional)0, (Swift::Bool_optional)2);
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
      swift_task_dealloc(v6);
      swift_task_dealloc(v9);
      swift_task_dealloc(v10);
      v5 = *(uint64_t (**)(void))(v0 + 8);
      return v5();
    }
    v13 = *(_QWORD *)(v0 + 104);
    v12 = *(_QWORD *)(v0 + 112);
    v14 = *(_QWORD *)(v0 + 96);
    sub_10020D3CC(v0 + 16);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v13 + 104))(v12, enum case for DIPError.Code.unexpectedDaemonState(_:), v14);
    v15 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v16 = type metadata accessor for DIPError(0);
    v17 = sub_100007F30();
    swift_allocError(v16, v17, 0, 0);
    v18 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000046, 0x8000000100555190, 0, v12, 0, v15, 0xD00000000000005ALL, 0x80000001005551E0, 0xD000000000000049, 0x8000000100555240, 55);
    swift_willThrow(v18);
  }
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 112);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(v2, *(_QWORD *)(v0 + 128));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_10020BADC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(_QWORD *)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = (void *)_convertErrorToNSError(_:)(*(_QWORD *)(v0 + 160));
  v5 = objc_msgSend(v4, "code");
  v6 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, enum case for DIPError.Code.keychainSEKeyCreateFailure(_:), v3);
  v7 = DIPError.Code.rawValue.getter(v6);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (v5 == (id)v7)
    v8 = sub_100282D04();
  swift_willThrow(v8);

  v9 = *(_QWORD *)(v0 + 144);
  v10 = *(_QWORD *)(v0 + 120);
  v11 = *(_QWORD *)(v0 + 112);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(v9, *(_QWORD *)(v0 + 128));
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10020BBC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  v5 = type metadata accessor for DIPError(0);
  v4[7] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[8] = v6;
  v4[9] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DIPError.Code(0);
  v4[10] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[11] = v8;
  v4[12] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10020BC78, 0, 0);
}

uint64_t sub_10020BC78()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t Attestation;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  const __CFData *isa;
  SecCertificateRef v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  unsigned int *v46;
  uint64_t v47;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = (os_unfair_lock_s *)(v1 + 32);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 32));
  v3 = *(void **)(v1 + 16);
  v4 = *(void **)(v1 + 24);
  v5 = v3;
  v6 = v4;
  os_unfair_lock_unlock(v2);
  *(_QWORD *)(v0 + 16) = 0;
  Attestation = SecKeyCreateAttestation(v5, v6, v0 + 16);
  if (Attestation)
  {
    v8 = (void *)Attestation;
    v9 = static Data._unconditionallyBridgeFromObjectiveC(_:)(Attestation);
    v11 = v10;

    isa = Data._bridgeToObjectiveC()().super.isa;
    v13 = SecCertificateCreateWithData(kCFAllocatorDefault, isa);

    if (v13)
    {
      v47 = v9;
      v14 = *(_QWORD *)(v0 + 40);
      v15 = *(_QWORD *)(v0 + 48);
      type metadata accessor for DIPKeystoreKeychain(0);
      v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(kSecClassKey);
      v18 = v17;
      static DIPKeystoreKeychain.deleteKeychainItem(label:serialNumber:secClass:)(v14, v15, 0, 0xF000000000000000, v16, v17);
      v19 = *(_QWORD *)(v0 + 40);
      swift_bridgeObjectRelease(v18);
      v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(kSecClassCertificate);
      v22 = v21;
      static DIPKeystoreKeychain.deleteKeychainItem(label:serialNumber:secClass:)(v19, v15, 0, 0xF000000000000000, v20, v21);
      v44 = *(_QWORD *)(v0 + 40);
      v43 = *(_QWORD *)(v0 + 48);
      swift_bridgeObjectRelease(v22);
      static DIPKeystoreKeychain.storeKeychainKey(_:label:)(v6, v44, v43);
      static DIPKeystoreKeychain.storeKeychainCertificate(_:label:failIfDuplicate:)(v13, *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), 1);
      v45 = *(uint64_t **)(v0 + 24);

      sub_100007F8C(v47, v11);
      v46 = (unsigned int *)&enum case for DIPRetrier.RetryResult.success<A>(_:);
    }
    else
    {
      v31 = *(_QWORD *)(v0 + 96);
      v32 = *(_QWORD *)(v0 + 72);
      v34 = *(_QWORD *)(v0 + 56);
      v33 = *(_QWORD *)(v0 + 64);
      v45 = *(uint64_t **)(v0 + 24);
      (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 104))(v31, enum case for DIPError.Code.certificateDecodingFailed(_:), *(_QWORD *)(v0 + 80));
      v35 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000029, 0x8000000100555360, 0, v31, 0, v35, 0xD00000000000005ALL, 0x80000001005551E0, 0xD000000000000020, 0x8000000100555390, 88);
      v36 = sub_100007F30();
      v37 = swift_allocError(v34, v36, 0, 0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 32))(v38, v32, v34);

      sub_100007F8C(v9, v11);
      *v45 = v37;
      v46 = (unsigned int *)&enum case for DIPRetrier.RetryResult.failure<A>(_:);
    }
    v39 = *v46;
    v40 = sub_100004828(&qword_100638C68);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 104))(v45, v39, v40);
  }
  else
  {
    v24 = *(_QWORD *)(v0 + 88);
    v23 = *(_QWORD *)(v0 + 96);
    v25 = *(_QWORD *)(v0 + 80);
    v27 = *(_QWORD *)(v0 + 16);
    v26 = *(_QWORD *)(v0 + 24);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v24 + 104))(v23, enum case for DIPError.Code.seAttestationFailure(_:), v25);
    v28 = errorFromCFError(_:_:_:)(v27, 0xD00000000000002FLL, 0x8000000100555330, v23);

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
    *(_QWORD *)v26 = v28;
    *(_QWORD *)(v26 + 8) = 0;
    *(_BYTE *)(v26 + 16) = 1;
    v29 = enum case for DIPRetrier.RetryResult.retry<A>(_:);
    v30 = sub_100004828(&qword_100638C68);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v26, v29, v30);
  }
  v41 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v41);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10020C144@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  const __CFString *v25;
  unint64_t v26;
  const __CFDictionary *isa;
  OSStatus v28;
  uint64_t v29;
  __n128 v30;
  unint64_t v31;
  char v32;
  uint64_t *v33;
  unint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, __n128);
  CFTypeRef v37;
  uint64_t *v38;
  Swift::String v40;
  Swift::String v41;
  Swift::String v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  CFTypeRef v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned __int8 *v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  uint64_t v60;
  unsigned __int8 *v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  unsigned __int8 *v65;
  unsigned int v66;
  uint64_t v67;
  uint64_t v68;
  unsigned __int8 *v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  CFTypeRef v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  __n128 v79;
  uint64_t v80;
  uint64_t v81;
  void *object;
  __n128 v83;
  uint64_t v84;
  uint64_t *v85;
  char v86;
  char v87;
  _QWORD v88[2];
  uint64_t v89;
  char *v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t *v97;
  Swift::String v98;
  OSStatus v99;
  uint64_t v100;
  uint64_t v101;
  CFTypeRef v102;
  uint64_t v103;

  v6 = v5;
  v91 = a4;
  v93 = a3;
  v97 = a5;
  v9 = type metadata accessor for DIPError.Code(0);
  v94 = *(_QWORD *)(v9 - 8);
  v95 = v9;
  __chkstk_darwin(v9);
  v96 = (char *)v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = type metadata accessor for HardwareAttestationType(0);
  v89 = *(_QWORD *)(v92 - 8);
  __chkstk_darwin(v92);
  v90 = (char *)v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for IdentityKeyGenerationOption(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100004828(&qword_100634838);
  inited = swift_initStackObject(v16, &v103);
  *(_OWORD *)(inited + 16) = xmmword_1005208B0;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(kSecAttrLabel);
  *(_QWORD *)(inited + 40) = v18;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  v98._countAndFlagsBits = a1;
  *(_QWORD *)(inited + 48) = a1;
  *(_QWORD *)(inited + 56) = a2;
  *(_QWORD *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(kSecUseAuthenticationContext);
  *(_QWORD *)(inited + 88) = v19;
  v98._object = a2;
  v20 = swift_bridgeObjectRetain(a2);
  v88[1] = v6;
  v21 = DIPKeystoreKeychain.laContext.getter(v20);
  *(_QWORD *)(inited + 120) = sub_10004BBDC();
  *(_QWORD *)(inited + 96) = v21;
  *(_QWORD *)(inited + 128) = static String._unconditionallyBridgeFromObjectiveC(_:)(kSecClass);
  *(_QWORD *)(inited + 136) = v22;
  type metadata accessor for CFString(0);
  *(_QWORD *)(inited + 168) = v23;
  *(_QWORD *)(inited + 144) = kSecClassKey;
  *(_QWORD *)(inited + 176) = static String._unconditionallyBridgeFromObjectiveC(_:)(kSecReturnRef);
  *(_QWORD *)(inited + 184) = v24;
  *(_QWORD *)(inited + 216) = &type metadata for Bool;
  *(_BYTE *)(inited + 192) = 1;
  v25 = (id)kSecClassKey;
  v26 = sub_10011D1E0(inited);
  v102 = 0;
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v26);
  v28 = SecItemCopyMatching(isa, &v102);

  if (v28 == -25300)
  {
    v37 = v102;
    v38 = v97;
    *(_OWORD *)v97 = 0u;
    *((_OWORD *)v38 + 1) = 0u;
    v38[4] = 0;
    return swift_unknownObjectRelease(v37);
  }
  if (!v28)
  {
    v29 = v93;
    if (v93)
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for IdentityKeyGenerationOption.validity(_:), v12);
      if (*(_QWORD *)(v29 + 16) && (v31 = sub_1004A8820((uint64_t)v15), (v32 & 1) != 0))
      {
        v33 = (uint64_t *)(*(_QWORD *)(v29 + 56) + 16 * v31);
        v35 = *v33;
        v34 = v33[1];
        v36 = *(void (**)(char *, uint64_t, __n128))(v13 + 8);
        v30 = swift_bridgeObjectRetain(v34);
      }
      else
      {
        v35 = 0;
        v36 = *(void (**)(char *, uint64_t, __n128))(v13 + 8);
        v34 = 0xE000000000000000;
      }
      v36(v15, v12, v30);
    }
    else
    {
      v35 = 0;
      v34 = 0xE000000000000000;
    }
    v52 = HIBYTE(v34) & 0xF;
    v53 = v35 & 0xFFFFFFFFFFFFLL;
    if ((v34 & 0x2000000000000000) != 0)
      v54 = HIBYTE(v34) & 0xF;
    else
      v54 = v35 & 0xFFFFFFFFFFFFLL;
    if (!v54)
    {
      v72 = swift_bridgeObjectRelease(v34);
      goto LABEL_72;
    }
    if ((v34 & 0x1000000000000000) != 0)
    {
      v57 = (uint64_t)sub_1004E5510(v35, v34, 10);
      v87 = v86;
      v72 = swift_bridgeObjectRelease(v34);
      if ((v87 & 1) != 0)
        goto LABEL_72;
      v56 = v92;
      v73 = v102;
      if (!v102)
        goto LABEL_71;
LABEL_66:
      type metadata accessor for SecKey(0);
      v75 = v74;
      v76 = swift_unknownObjectRetain(v73);
      v77 = swift_dynamicCastUnknownClassUnconditional(v76, v75, 0, 0, 0);
      v78 = v90;
      (*(void (**)(char *, _QWORD, uint64_t))(v89 + 104))(v90, enum case for HardwareAttestationType.SE(_:), v56);
      v80 = DIPKeystoreKeychain.laContext.getter(v79);
      v81 = type metadata accessor for IdentityKeyWithKeychain(0);
      swift_allocObject(v81, *(unsigned int *)(v81 + 48), *(unsigned __int16 *)(v81 + 52));
      object = v98._object;
      v83 = swift_bridgeObjectRetain(v98._object);
      v84 = IdentityKeyWithKeychain.init(label:privateKey:attestationType:laContext:validity:isTemporary:)(v98._countAndFlagsBits, object, v77, v78, v80, v57, 0, v91 & 1, v83);
      v85 = v97;
      v97[3] = v81;
      v85[4] = (uint64_t)&protocol witness table for IdentityKeyWithKeychain;
      *v85 = v84;
      v51 = v73;
      return swift_unknownObjectRelease(v51);
    }
    if ((v34 & 0x2000000000000000) == 0)
    {
      if ((v35 & 0x1000000000000000) != 0)
        v55 = (unsigned __int8 *)((v34 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v55 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v35, v34);
      v56 = v92;
      v57 = (uint64_t)sub_1004E54FC(v55, v53, 10);
      v59 = v58 & 1;
      goto LABEL_63;
    }
    v100 = v35;
    v101 = v34 & 0xFFFFFFFFFFFFFFLL;
    if (v35 == 43)
    {
      if (!v52)
        goto LABEL_75;
      if (v52 == 1 || (BYTE1(v35) - 48) > 9u)
        goto LABEL_42;
      v57 = (BYTE1(v35) - 48);
      if (v52 == 2)
        goto LABEL_44;
      if ((BYTE2(v35) - 48) > 9u)
        goto LABEL_42;
      v57 = 10 * (BYTE1(v35) - 48) + (BYTE2(v35) - 48);
      v60 = v52 - 3;
      v56 = v92;
      if (v60)
      {
        v61 = (unsigned __int8 *)&v100 + 3;
        while (1)
        {
          v62 = *v61 - 48;
          if (v62 > 9)
            goto LABEL_62;
          v63 = 10 * v57;
          if ((unsigned __int128)(v57 * (__int128)10) >> 64 != (10 * v57) >> 63)
            goto LABEL_62;
          v57 = v63 + v62;
          if (__OFADD__(v63, v62))
            goto LABEL_62;
          v59 = 0;
          ++v61;
          if (!--v60)
            goto LABEL_63;
        }
      }
    }
    else
    {
      if (v35 == 45)
      {
        if (v52)
        {
          if (v52 != 1 && (BYTE1(v35) - 48) <= 9u)
          {
            if (v52 == 2)
            {
              v59 = 0;
              v57 = -(uint64_t)(BYTE1(v35) - 48);
              v56 = v92;
LABEL_63:
              v72 = swift_bridgeObjectRelease(v34);
              if ((v59 & 1) == 0)
                goto LABEL_65;
              while (1)
              {
                v72 = DEFAULT_BAA_CERTIFICATE_VALIDITY_IN_MINUTES.getter(v72);
                v57 = v72;
LABEL_65:
                v73 = v102;
                if (v102)
                  break;
LABEL_71:
                __break(1u);
LABEL_72:
                v56 = v92;
              }
              goto LABEL_66;
            }
            if ((BYTE2(v35) - 48) <= 9u)
            {
              v57 = -10 * (BYTE1(v35) - 48) - (BYTE2(v35) - 48);
              v68 = v52 - 3;
              v56 = v92;
              if (!v68)
                goto LABEL_55;
              v69 = (unsigned __int8 *)&v100 + 3;
              while (1)
              {
                v70 = *v69 - 48;
                if (v70 > 9)
                  break;
                v71 = 10 * v57;
                if ((unsigned __int128)(v57 * (__int128)10) >> 64 != (10 * v57) >> 63)
                  break;
                v57 = v71 - v70;
                if (__OFSUB__(v71, v70))
                  break;
                v59 = 0;
                ++v69;
                if (!--v68)
                  goto LABEL_63;
              }
LABEL_62:
              v57 = 0;
              v59 = 1;
              goto LABEL_63;
            }
          }
LABEL_42:
          v57 = 0;
          v59 = 1;
          v56 = v92;
          goto LABEL_63;
        }
        __break(1u);
LABEL_75:
        __break(1u);
      }
      if (!v52 || (v35 - 48) > 9u)
        goto LABEL_42;
      v57 = (v35 - 48);
      if (v52 == 1)
      {
LABEL_44:
        v59 = 0;
        v56 = v92;
        goto LABEL_63;
      }
      if ((BYTE1(v35) - 48) > 9u)
        goto LABEL_42;
      v57 = 10 * (v35 - 48) + (BYTE1(v35) - 48);
      v64 = v52 - 2;
      v56 = v92;
      if (v64)
      {
        v65 = (unsigned __int8 *)&v100 + 2;
        while (1)
        {
          v66 = *v65 - 48;
          if (v66 > 9)
            goto LABEL_62;
          v67 = 10 * v57;
          if ((unsigned __int128)(v57 * (__int128)10) >> 64 != (10 * v57) >> 63)
            goto LABEL_62;
          v57 = v67 + v66;
          if (__OFADD__(v67, v66))
            goto LABEL_62;
          v59 = 0;
          ++v65;
          if (!--v64)
            goto LABEL_63;
        }
      }
    }
LABEL_55:
    v59 = 0;
    goto LABEL_63;
  }
  v100 = 0;
  v101 = 0xE000000000000000;
  _StringGuts.grow(_:)(56);
  v40._object = (void *)0x8000000100548330;
  v40._countAndFlagsBits = 0xD000000000000025;
  String.append(_:)(v40);
  String.append(_:)(v98);
  v41._countAndFlagsBits = 0x7473206874697720;
  v41._object = (void *)0xEF203D2073757461;
  String.append(_:)(v41);
  v99 = v28;
  v42._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int32, &protocol witness table for Int32);
  v43 = v42._object;
  String.append(_:)(v42);
  swift_bridgeObjectRelease(v43);
  v44 = v100;
  v45 = v101;
  v46 = v96;
  (*(void (**)(char *, _QWORD, uint64_t))(v94 + 104))(v96, enum case for DIPError.Code.keychainFailureQueryKey(_:), v95);
  v47 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
  v48 = type metadata accessor for DIPError(0);
  v49 = sub_100007F30();
  swift_allocError(v48, v49, 0, 0);
  v50 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v44, v45, 0, v46, 0, v47, 0xD00000000000005ALL, 0x80000001005551E0, 0xD000000000000031, 0x8000000100555410, 119);
  swift_willThrow(v50);
  v51 = v102;
  return swift_unknownObjectRelease(v51);
}

uint64_t sub_10020C99C()
{
  uint64_t v0;

  v0 = DIPKeystoreKeychain.deinit();
  return swift_deallocClassInstance(v0, 16, 7);
}

uint64_t sub_10020C9B8()
{
  return type metadata accessor for DIPKeystoreSecureElement(0);
}

uint64_t sub_10020C9C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[3];
  _BYTE v25[8];

  v5 = type metadata accessor for DIPError.Code(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DIPError(0);
  v23 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DIPCryptoKeychain(0);
  result = dispatch thunk of static DIPCryptoKeychain.generateKeyAsym(_:_:useSecureElement:)(a1, a2, 1);
  if (v2)
  {
    v22 = result;
    swift_getErrorValue(v2, v25, v24);
    v13 = Error.localizedDescription.getter(v24[1], v24[2]);
    v15 = v14;
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for DIPError.Code.keychainSEKeyCreateFailure(_:), v5);
    v16 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v13, v15, 0, v8, 0, v16, 0xD00000000000005ALL, 0x80000001005551E0, 0xD000000000000015, 0x80000001005553F0, 23);
    v17 = sub_100007F30();
    swift_allocError(v9, v17, 0, 0);
    v18 = v23;
    v20 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v23 + 16))(v19, v11, v9);
    swift_willThrow(v20);
    swift_errorRelease(v2);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v11, v9);
    return v22;
  }
  return result;
}

uint64_t sub_10020CBC4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_BYTE *)(v3 + 52) = a3;
  *(_QWORD *)(v3 + 64) = a1;
  *(_QWORD *)(v3 + 72) = a2;
  v4 = type metadata accessor for DIPError.Code(0);
  *(_QWORD *)(v3 + 80) = v4;
  v5 = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 + 88) = v5;
  *(_QWORD *)(v3 + 96) = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DIPBackoffStrategy(0);
  *(_QWORD *)(v3 + 104) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 112) = v7;
  *(_QWORD *)(v3 + 120) = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DIPRetrier(0);
  *(_QWORD *)(v3 + 128) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v3 + 136) = v9;
  *(_QWORD *)(v3 + 144) = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for KeyUsage(0);
  *(_QWORD *)(v3 + 152) = v10;
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v3 + 160) = v11;
  *(_QWORD *)(v3 + 168) = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DIPKeyAlgorithm(0);
  *(_QWORD *)(v3 + 176) = v12;
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v3 + 184) = v13;
  *(_QWORD *)(v3 + 192) = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10020CCF4, 0, 0);
}

id sub_10020CCF4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id result;
  void *v24;
  id v25;
  NSString v26;
  int v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t inited;
  _QWORD *v35;
  uint64_t v36;
  id v37;
  id v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  *(_QWORD *)(v0 + 56) = 0;
  v1 = DIPSecKeyCopyAttestationKey(4, v0 + 56);
  *(_QWORD *)(v0 + 200) = v1;
  if (!v1)
  {
    v11 = *(_QWORD *)(v0 + 88);
    v10 = *(_QWORD *)(v0 + 96);
    v12 = *(_QWORD *)(v0 + 80);
    v13 = *(_QWORD *)(v0 + 56);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v11 + 104))(v10, enum case for DIPError.Code.internalError(_:), v12);
    errorFromCFError(_:_:_:)(v13, 0xD000000000000030, 0x8000000100555290, v10);
    v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    swift_willThrow(v14);
LABEL_4:
    v19 = *(_QWORD *)(v0 + 168);
    v20 = *(_QWORD *)(v0 + 144);
    v21 = *(_QWORD *)(v0 + 120);
    v22 = *(_QWORD *)(v0 + 96);
    swift_task_dealloc(*(_QWORD *)(v0 + 192));
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  v2 = (void *)v1;
  v3 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 160);
  v6 = *(unsigned __int8 *)(v0 + 52);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 104))(*(_QWORD *)(v0 + 192), enum case for DIPKeyAlgorithm.ECC256(_:), *(_QWORD *)(v0 + 176));
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v3, enum case for KeyUsage.signature(_:), v4);
  v7 = createBAAKeyACLWithDefaultLAContext(enableUAM:keyUsage:requireUserAuth:forSecureElement:)(v6, v3, 0, 0);
  v9 = *(_QWORD *)(v0 + 184);
  v8 = *(_QWORD *)(v0 + 192);
  v15 = (void *)v7;
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 160) + 8))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 152));
  v16 = (void *)sub_10020C9C0(v8, (uint64_t)v15);
  v18 = v17;
  *(_QWORD *)(v0 + 208) = v16;
  (*(void (**)(_QWORD, _QWORD))(v9 + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));

  result = (id)getSEABASSOIDS();
  *(_QWORD *)(v0 + 216) = result;
  if (!result)
  {
    __break(1u);
    return result;
  }
  v24 = result;
  v25 = v2;
  v26 = String._bridgeToObjectiveC()();
  v27 = SecKeySetParameter(v25, v26, v24, v0 + 56);

  if (!v27)
  {
    v41 = *(_QWORD *)(v0 + 88);
    v40 = *(_QWORD *)(v0 + 96);
    v42 = *(_QWORD *)(v0 + 80);
    v43 = *(_QWORD *)(v0 + 56);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v41 + 104))(v40, enum case for DIPError.Code.internalError(_:), v42);
    errorFromCFError(_:_:_:)(v43, 0xD00000000000002ALL, 0x8000000100555300, v40);
    v44 = (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 8))(v40, v42);
    swift_willThrow(v44);

    goto LABEL_4;
  }
  if (qword_10062F4C0 != -1)
    swift_once(&qword_10062F4C0, sub_1002354CC);
  v29 = *(_QWORD *)(v0 + 112);
  v28 = *(_QWORD **)(v0 + 120);
  v30 = *(_QWORD *)(v0 + 104);
  v45 = *(_QWORD *)(v0 + 64);
  v46 = *(_QWORD *)(v0 + 72);
  v31 = sub_1002352D0();
  sub_1002353CC();
  *v28 = v32;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v29 + 104))(v28, enum case for DIPBackoffStrategy.linear(_:), v30);
  DIPRetrier.init(maxRetries:backoffStrategy:asyncTimeout:)(v31, v28, 0, 1);
  v33 = sub_100004828(&qword_100638C50);
  inited = swift_initStackObject(v33, v0 + 16);
  *(_QWORD *)(v0 + 224) = inited;
  *(_DWORD *)(inited + 32) = 0;
  *(_QWORD *)(inited + 16) = v25;
  *(_QWORD *)(inited + 24) = v16;
  v35 = (_QWORD *)swift_task_alloc(48);
  *(_QWORD *)(v0 + 232) = v35;
  v35[2] = inited;
  v35[3] = v45;
  v35[4] = v46;
  v36 = async function pointer to DIPRetrier.retry<A>(operation:)[1];
  v37 = v25;
  v38 = v16;
  v39 = (_QWORD *)swift_task_alloc(v36);
  *(_QWORD *)(v0 + 240) = v39;
  *v39 = v0;
  v39[1] = sub_10020D15C;
  return (id)DIPRetrier.retry<A>(operation:)(v39, &unk_100638C60, v35, (char *)&type metadata for () + 8);
}

uint64_t sub_10020D15C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 240);
  *(_QWORD *)(*v1 + 248) = v0;
  swift_task_dealloc(v3);
  swift_task_dealloc(*(_QWORD *)(v2 + 232));
  if (v0)
    v4 = sub_10020D2F4;
  else
    v4 = sub_10020D214;
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10020D214()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(void **)(v0 + 216);
  v3 = *(void **)(v0 + 200);
  v2 = *(void **)(v0 + 208);
  v4 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 136);
  v6 = *(_QWORD *)(v0 + 144);
  v9 = *(_QWORD *)(v0 + 120);
  v8 = *(_QWORD *)(v0 + 128);
  v11 = *(_QWORD *)(v0 + 96);
  swift_release(*(_QWORD *)(v0 + 224));

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10020D2F4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(void **)(v0 + 216);
  v3 = *(void **)(v0 + 200);
  v2 = *(void **)(v0 + 208);
  v5 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 144);
  v6 = *(_QWORD *)(v0 + 128);
  swift_release(*(_QWORD *)(v0 + 224));

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  v7 = *(_QWORD *)(v0 + 168);
  v8 = *(_QWORD *)(v0 + 144);
  v9 = *(_QWORD *)(v0 + 120);
  v10 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10020D3CC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100004828(&qword_100636508);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10020D40C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_100638C5C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_100007EE8;
  return sub_10020BBC0(a1, v4, v5, v6);
}

_QWORD *destroy for DigitalPresentmentEnvironment(_QWORD *result)
{
  _QWORD *v1;

  v1 = result;
  if (*result)
    result = (_QWORD *)swift_release(result[1]);
  if (v1[2])
    result = (_QWORD *)swift_release(v1[3]);
  if (v1[4])
    result = (_QWORD *)swift_release(v1[5]);
  if (v1[6])
    result = (_QWORD *)swift_release(v1[7]);
  if (v1[8])
    result = (_QWORD *)swift_release(v1[9]);
  if (v1[10])
    result = (_QWORD *)swift_release(v1[11]);
  if (v1[12])
    result = (_QWORD *)swift_release(v1[13]);
  if (v1[14])
    result = (_QWORD *)swift_release(v1[15]);
  if (v1[16])
    result = (_QWORD *)swift_release(v1[17]);
  if (v1[18])
    return (_QWORD *)swift_release(v1[19]);
  return result;
}

_QWORD *initializeWithCopy for DigitalPresentmentEnvironment(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  if (*a2)
  {
    v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    swift_retain(v4);
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  v5 = a2[2];
  if (v5)
  {
    v6 = a2[3];
    a1[2] = v5;
    a1[3] = v6;
    swift_retain(v6);
  }
  else
  {
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
  }
  v7 = a2[4];
  if (v7)
  {
    v8 = a2[5];
    a1[4] = v7;
    a1[5] = v8;
    swift_retain(v8);
  }
  else
  {
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  }
  v9 = a2[6];
  if (v9)
  {
    v10 = a2[7];
    a1[6] = v9;
    a1[7] = v10;
    swift_retain(v10);
  }
  else
  {
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
  }
  v11 = a2[8];
  if (v11)
  {
    v12 = a2[9];
    a1[8] = v11;
    a1[9] = v12;
    swift_retain(v12);
  }
  else
  {
    *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
  }
  v13 = a2[10];
  if (v13)
  {
    v14 = a2[11];
    a1[10] = v13;
    a1[11] = v14;
    swift_retain(v14);
  }
  else
  {
    *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
  }
  v15 = a2[12];
  if (v15)
  {
    v16 = a2[13];
    a1[12] = v15;
    a1[13] = v16;
    swift_retain(v16);
  }
  else
  {
    *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
  }
  v17 = a2[14];
  if (v17)
  {
    v18 = a2[15];
    a1[14] = v17;
    a1[15] = v18;
    swift_retain(v18);
  }
  else
  {
    *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
  }
  v19 = a2[16];
  if (v19)
  {
    v20 = a2[17];
    a1[16] = v19;
    a1[17] = v20;
    swift_retain(v20);
  }
  else
  {
    *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
  }
  v21 = a2[18];
  if (v21)
  {
    v22 = a2[19];
    a1[18] = v21;
    a1[19] = v22;
    swift_retain(v22);
  }
  else
  {
    *((_OWORD *)a1 + 9) = *((_OWORD *)a2 + 9);
  }
  return a1;
}

_QWORD *assignWithCopy for DigitalPresentmentEnvironment(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v4 = *a2;
  if (*a1)
  {
    if (v4)
    {
      v5 = a2[1];
      v6 = a1[1];
      *a1 = v4;
      a1[1] = v5;
      swift_retain(v5);
      swift_release(v6);
      goto LABEL_8;
    }
    swift_release(a1[1]);
  }
  else if (v4)
  {
    v7 = a2[1];
    *a1 = v4;
    a1[1] = v7;
    swift_retain(v7);
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  v8 = a2[2];
  if (a1[2])
  {
    if (v8)
    {
      v9 = a2[3];
      v10 = a1[3];
      a1[2] = v8;
      a1[3] = v9;
      swift_retain(v9);
      swift_release(v10);
      goto LABEL_15;
    }
    swift_release(a1[3]);
  }
  else if (v8)
  {
    v11 = a2[3];
    a1[2] = v8;
    a1[3] = v11;
    swift_retain(v11);
    goto LABEL_15;
  }
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
LABEL_15:
  v12 = a2[4];
  if (a1[4])
  {
    if (v12)
    {
      v13 = a2[5];
      v14 = a1[5];
      a1[4] = v12;
      a1[5] = v13;
      swift_retain(v13);
      swift_release(v14);
      goto LABEL_22;
    }
    swift_release(a1[5]);
  }
  else if (v12)
  {
    v15 = a2[5];
    a1[4] = v12;
    a1[5] = v15;
    swift_retain(v15);
    goto LABEL_22;
  }
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
LABEL_22:
  v16 = a2[6];
  if (a1[6])
  {
    if (v16)
    {
      v17 = a2[7];
      v18 = a1[7];
      a1[6] = v16;
      a1[7] = v17;
      swift_retain(v17);
      swift_release(v18);
      goto LABEL_29;
    }
    swift_release(a1[7]);
  }
  else if (v16)
  {
    v19 = a2[7];
    a1[6] = v16;
    a1[7] = v19;
    swift_retain(v19);
    goto LABEL_29;
  }
  *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
LABEL_29:
  v20 = a2[8];
  if (a1[8])
  {
    if (v20)
    {
      v21 = a2[9];
      v22 = a1[9];
      a1[8] = v20;
      a1[9] = v21;
      swift_retain(v21);
      swift_release(v22);
      goto LABEL_36;
    }
    swift_release(a1[9]);
  }
  else if (v20)
  {
    v23 = a2[9];
    a1[8] = v20;
    a1[9] = v23;
    swift_retain(v23);
    goto LABEL_36;
  }
  *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
LABEL_36:
  v24 = a2[10];
  if (a1[10])
  {
    if (v24)
    {
      v25 = a2[11];
      v26 = a1[11];
      a1[10] = v24;
      a1[11] = v25;
      swift_retain(v25);
      swift_release(v26);
      goto LABEL_43;
    }
    swift_release(a1[11]);
  }
  else if (v24)
  {
    v27 = a2[11];
    a1[10] = v24;
    a1[11] = v27;
    swift_retain(v27);
    goto LABEL_43;
  }
  *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
LABEL_43:
  v28 = a2[12];
  if (a1[12])
  {
    if (v28)
    {
      v29 = a2[13];
      v30 = a1[13];
      a1[12] = v28;
      a1[13] = v29;
      swift_retain(v29);
      swift_release(v30);
      goto LABEL_50;
    }
    swift_release(a1[13]);
  }
  else if (v28)
  {
    v31 = a2[13];
    a1[12] = v28;
    a1[13] = v31;
    swift_retain(v31);
    goto LABEL_50;
  }
  *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
LABEL_50:
  v32 = a2[14];
  if (a1[14])
  {
    if (v32)
    {
      v33 = a2[15];
      v34 = a1[15];
      a1[14] = v32;
      a1[15] = v33;
      swift_retain(v33);
      swift_release(v34);
      goto LABEL_57;
    }
    swift_release(a1[15]);
  }
  else if (v32)
  {
    v35 = a2[15];
    a1[14] = v32;
    a1[15] = v35;
    swift_retain(v35);
    goto LABEL_57;
  }
  *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
LABEL_57:
  v36 = a2[16];
  if (a1[16])
  {
    if (v36)
    {
      v37 = a2[17];
      v38 = a1[17];
      a1[16] = v36;
      a1[17] = v37;
      swift_retain(v37);
      swift_release(v38);
      goto LABEL_64;
    }
    swift_release(a1[17]);
  }
  else if (v36)
  {
    v39 = a2[17];
    a1[16] = v36;
    a1[17] = v39;
    swift_retain(v39);
    goto LABEL_64;
  }
  *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
LABEL_64:
  v40 = a2[18];
  if (!a1[18])
  {
    if (v40)
    {
      v43 = a2[19];
      a1[18] = v40;
      a1[19] = v43;
      swift_retain(v43);
      return a1;
    }
LABEL_70:
    *((_OWORD *)a1 + 9) = *((_OWORD *)a2 + 9);
    return a1;
  }
  if (!v40)
  {
    swift_release(a1[19]);
    goto LABEL_70;
  }
  v41 = a2[19];
  v42 = a1[19];
  a1[18] = v40;
  a1[19] = v41;
  swift_retain(v41);
  swift_release(v42);
  return a1;
}

_QWORD *assignWithTake for DigitalPresentmentEnvironment(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v4 = *a2;
  if (*a1)
  {
    if (v4)
    {
      v5 = a2[1];
      v6 = a1[1];
      *a1 = v4;
      a1[1] = v5;
      swift_release(v6);
      goto LABEL_8;
    }
    swift_release(a1[1]);
  }
  else if (v4)
  {
    v7 = a2[1];
    *a1 = v4;
    a1[1] = v7;
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  v8 = a2[2];
  if (a1[2])
  {
    if (v8)
    {
      v9 = a2[3];
      v10 = a1[3];
      a1[2] = v8;
      a1[3] = v9;
      swift_release(v10);
      goto LABEL_15;
    }
    swift_release(a1[3]);
  }
  else if (v8)
  {
    v11 = a2[3];
    a1[2] = v8;
    a1[3] = v11;
    goto LABEL_15;
  }
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
LABEL_15:
  v12 = a2[4];
  if (a1[4])
  {
    if (v12)
    {
      v13 = a2[5];
      v14 = a1[5];
      a1[4] = v12;
      a1[5] = v13;
      swift_release(v14);
      goto LABEL_22;
    }
    swift_release(a1[5]);
  }
  else if (v12)
  {
    v15 = a2[5];
    a1[4] = v12;
    a1[5] = v15;
    goto LABEL_22;
  }
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
LABEL_22:
  v16 = a2[6];
  if (a1[6])
  {
    if (v16)
    {
      v17 = a2[7];
      v18 = a1[7];
      a1[6] = v16;
      a1[7] = v17;
      swift_release(v18);
      goto LABEL_29;
    }
    swift_release(a1[7]);
  }
  else if (v16)
  {
    v19 = a2[7];
    a1[6] = v16;
    a1[7] = v19;
    goto LABEL_29;
  }
  *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
LABEL_29:
  v20 = a2[8];
  if (a1[8])
  {
    if (v20)
    {
      v21 = a2[9];
      v22 = a1[9];
      a1[8] = v20;
      a1[9] = v21;
      swift_release(v22);
      goto LABEL_36;
    }
    swift_release(a1[9]);
  }
  else if (v20)
  {
    v23 = a2[9];
    a1[8] = v20;
    a1[9] = v23;
    goto LABEL_36;
  }
  *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
LABEL_36:
  v24 = a2[10];
  if (a1[10])
  {
    if (v24)
    {
      v25 = a2[11];
      v26 = a1[11];
      a1[10] = v24;
      a1[11] = v25;
      swift_release(v26);
      goto LABEL_43;
    }
    swift_release(a1[11]);
  }
  else if (v24)
  {
    v27 = a2[11];
    a1[10] = v24;
    a1[11] = v27;
    goto LABEL_43;
  }
  *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
LABEL_43:
  v28 = a2[12];
  if (a1[12])
  {
    if (v28)
    {
      v29 = a2[13];
      v30 = a1[13];
      a1[12] = v28;
      a1[13] = v29;
      swift_release(v30);
      goto LABEL_50;
    }
    swift_release(a1[13]);
  }
  else if (v28)
  {
    v31 = a2[13];
    a1[12] = v28;
    a1[13] = v31;
    goto LABEL_50;
  }
  *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
LABEL_50:
  v32 = a2[14];
  if (a1[14])
  {
    if (v32)
    {
      v33 = a2[15];
      v34 = a1[15];
      a1[14] = v32;
      a1[15] = v33;
      swift_release(v34);
      goto LABEL_57;
    }
    swift_release(a1[15]);
  }
  else if (v32)
  {
    v35 = a2[15];
    a1[14] = v32;
    a1[15] = v35;
    goto LABEL_57;
  }
  *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
LABEL_57:
  v36 = a2[16];
  if (a1[16])
  {
    if (v36)
    {
      v37 = a2[17];
      v38 = a1[17];
      a1[16] = v36;
      a1[17] = v37;
      swift_release(v38);
      goto LABEL_64;
    }
    swift_release(a1[17]);
  }
  else if (v36)
  {
    v39 = a2[17];
    a1[16] = v36;
    a1[17] = v39;
    goto LABEL_64;
  }
  *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
LABEL_64:
  v40 = a2[18];
  if (!a1[18])
  {
    if (v40)
    {
      v43 = a2[19];
      a1[18] = v40;
      a1[19] = v43;
      return a1;
    }
LABEL_70:
    *((_OWORD *)a1 + 9) = *((_OWORD *)a2 + 9);
    return a1;
  }
  if (!v40)
  {
    swift_release(a1[19]);
    goto LABEL_70;
  }
  v41 = a2[19];
  v42 = a1[19];
  a1[18] = v40;
  a1[19] = v41;
  swift_release(v42);
  return a1;
}

uint64_t getEnumTagSinglePayload for DigitalPresentmentEnvironment(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 160))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DigitalPresentmentEnvironment(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 160) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 160) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DigitalPresentmentEnvironment()
{
  return &type metadata for DigitalPresentmentEnvironment;
}

uint64_t sub_10020DE80(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  char v25;

  v3 = v1;
  v5 = sub_100004828(&qword_100638C80);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10000806C(a1, v9);
  v11 = sub_100211328();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for DIPClientGUIDSeeds.CodingKeys, &type metadata for DIPClientGUIDSeeds.CodingKeys, v11, v9, v10);
  v12 = *v3;
  v13 = v3[1];
  v25 = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v12, v13, &v25, v5);
  if (!v2)
  {
    v14 = v3[2];
    v15 = v3[3];
    v24 = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v14, v15, &v24, v5);
    v16 = v3[4];
    v17 = v3[5];
    v23 = 2;
    KeyedEncodingContainer.encode(_:forKey:)(v16, v17, &v23, v5);
    v18 = v3[6];
    v19 = v3[7];
    v22 = 3;
    KeyedEncodingContainer.encode(_:forKey:)(v18, v19, &v22, v5);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10020DFE4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  _QWORD v5[2];

  v3 = v1[1];
  v5[0] = *v1;
  v5[1] = v3;
  swift_bridgeObjectRetain(v3);
  return String.init<A>(_:)(v5, a1, &protocol witness table for String, &protocol witness table for String);
}

uint64_t destroy for DIPClientGUIDSeeds(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[5]);
  return swift_bridgeObjectRelease(a1[7]);
}

_QWORD *initializeWithCopy for DIPClientGUIDSeeds(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  return a1;
}

_QWORD *assignWithCopy for DIPClientGUIDSeeds(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[4] = a2[4];
  v8 = a2[5];
  v9 = a1[5];
  a1[5] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  a1[6] = a2[6];
  v10 = a2[7];
  v11 = a1[7];
  a1[7] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  return a1;
}

_QWORD *assignWithTake for DIPClientGUIDSeeds(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[5];
  v9 = a1[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = a2[7];
  v11 = a1[7];
  a1[6] = a2[6];
  a1[7] = v10;
  swift_bridgeObjectRelease(v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for DIPClientGUIDSeeds(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DIPClientGUIDSeeds(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DIPClientGUIDSeeds()
{
  return &type metadata for DIPClientGUIDSeeds;
}

uint64_t destroy for DIPClientGUIDFactory(_QWORD *a1)
{
  swift_release(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[5]);
  swift_bridgeObjectRelease(a1[7]);
  return swift_bridgeObjectRelease(a1[9]);
}

_QWORD *initializeWithCopy for DIPClientGUIDFactory(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  swift_retain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  return a1;
}

_QWORD *assignWithCopy for DIPClientGUIDFactory(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[4] = a2[4];
  v8 = a2[5];
  v9 = a1[5];
  a1[5] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  a1[6] = a2[6];
  v10 = a2[7];
  v11 = a1[7];
  a1[7] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  a1[8] = a2[8];
  v12 = a2[9];
  v13 = a1[9];
  a1[9] = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  return a1;
}

__n128 initializeWithTake for DIPClientGUIDFactory(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for DIPClientGUIDFactory(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease(v6);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  swift_bridgeObjectRelease(v8);
  v9 = *(_QWORD *)(a2 + 56);
  v10 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  swift_bridgeObjectRelease(v10);
  v11 = *(_QWORD *)(a2 + 72);
  v12 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v11;
  swift_bridgeObjectRelease(v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for DIPClientGUIDFactory(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DIPClientGUIDFactory(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DIPClientGUIDFactory()
{
  return &type metadata for DIPClientGUIDFactory;
}

uint64_t sub_10020E540()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_10020E570 + 4 * byte_100525ED0[*v0]))(0x6E6F6973726576, 0xE700000000000000);
}

uint64_t sub_10020E570()
{
  return 0x656D697473;
}

uint64_t sub_10020E588()
{
  return 0x656D697464;
}

uint64_t sub_10020E59C()
{
  return 1684955506;
}

uint64_t sub_10020E5AC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100210EC4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10020E5D0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100211328();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10020E5F8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100211328();
  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_10020E620@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[2];
  __int128 v8;
  __int128 v9;

  sub_100211050(a1, (uint64_t *)v7);
  if (!v2)
  {
    v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    result = *(double *)&v8;
    v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_10020E660(_QWORD *a1)
{
  return sub_10020DE80(a1);
}

uint64_t sub_10020E674(char *a1, char *a2)
{
  return sub_1003C2120(*a1, *a2);
}

Swift::Int sub_10020E680()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  _QWORD v4[9];

  v1 = *v0;
  Hasher.init(_seed:)(v4, 0);
  if (v1)
    v2 = 50;
  else
    v2 = 49;
  String.hash(into:)(v4, v2, 0xE100000000000000);
  swift_bridgeObjectRelease(0xE100000000000000);
  return Hasher._finalize()();
}

uint64_t sub_10020E6D8(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;

  if (*v1)
    v2 = 50;
  else
    v2 = 49;
  String.hash(into:)(a1, v2, 0xE100000000000000);
  return swift_bridgeObjectRelease(0xE100000000000000);
}

Swift::Int sub_10020E704(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  _QWORD v5[9];

  v2 = *v1;
  Hasher.init(_seed:)(v5, a1);
  if (v2)
    v3 = 50;
  else
    v3 = 49;
  String.hash(into:)(v5, v3, 0xE100000000000000);
  swift_bridgeObjectRelease(0xE100000000000000);
  return Hasher._finalize()();
}

uint64_t sub_10020E758@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100601418, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_10020E7B4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 49;
  if (*v1)
    v2 = 50;
  *a1 = v2;
  a1[1] = 0xE100000000000000;
}

uint64_t sub_10020E7D0()
{
  char *v0;
  Swift::String v1;
  uint64_t v2;
  void *v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;
  uint64_t v7;
  void *v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  void *v12;
  Swift::String v13;
  Swift::String v14;
  uint64_t v15;
  void *v16;
  Swift::String v17;
  Swift::String v18;
  uint64_t v19;
  void *v20;
  Swift::String v21;
  Swift::String v22;
  uint64_t v23;
  void *v24;
  Swift::String v25;
  Swift::String v26;
  uint64_t v27;
  void *v28;
  Swift::String v29;
  Swift::String v30;
  void *v31;
  uint64_t v32;
  Swift::String v33;
  char v35;
  _QWORD v36[2];

  v36[0] = 0;
  v36[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(117);
  v1._object = (void *)0xEB00000000204449;
  v1._countAndFlagsBits = 0x5547746E65696C43;
  String.append(_:)(v1);
  v2 = *((_QWORD *)v0 + 15);
  v3 = (void *)*((_QWORD *)v0 + 16);
  swift_bridgeObjectRetain(v3);
  v4._countAndFlagsBits = v2;
  v4._object = v3;
  String.append(_:)(v4);
  swift_bridgeObjectRelease(v3);
  v5._countAndFlagsBits = 0x6F6973726576202ELL;
  v5._object = (void *)0xEC000000203D206ELL;
  String.append(_:)(v5);
  v35 = *v0;
  _print_unlocked<A, B>(_:_:)(&v35, v36, &type metadata for DIPClientGUID.GUIDSeedVersion, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v6._countAndFlagsBits = 0x3D2064697364202CLL;
  v6._object = (void *)0xE900000000000020;
  String.append(_:)(v6);
  v7 = *((_QWORD *)v0 + 1);
  v8 = (void *)*((_QWORD *)v0 + 2);
  swift_bridgeObjectRetain(v8);
  v9._countAndFlagsBits = v7;
  v9._object = v8;
  String.append(_:)(v9);
  swift_bridgeObjectRelease(v8);
  v10._countAndFlagsBits = 0x203D2064696D202CLL;
  v10._object = (void *)0xE800000000000000;
  String.append(_:)(v10);
  v11 = *((_QWORD *)v0 + 3);
  v12 = (void *)*((_QWORD *)v0 + 4);
  swift_bridgeObjectRetain(v12);
  v13._countAndFlagsBits = v11;
  v13._object = v12;
  String.append(_:)(v13);
  swift_bridgeObjectRelease(v12);
  v14._countAndFlagsBits = 0x444970696863202CLL;
  v14._object = (void *)0xEB00000000203D20;
  String.append(_:)(v14);
  v15 = *((_QWORD *)v0 + 5);
  v16 = (void *)*((_QWORD *)v0 + 6);
  swift_bridgeObjectRetain(v16);
  v17._countAndFlagsBits = v15;
  v17._object = v16;
  String.append(_:)(v17);
  swift_bridgeObjectRelease(v16);
  v18._countAndFlagsBits = 0x3D2064696365202CLL;
  v18._object = (void *)0xE900000000000020;
  String.append(_:)(v18);
  v19 = *((_QWORD *)v0 + 7);
  v20 = (void *)*((_QWORD *)v0 + 8);
  swift_bridgeObjectRetain(v20);
  v21._countAndFlagsBits = v19;
  v21._object = v20;
  String.append(_:)(v21);
  swift_bridgeObjectRelease(v20);
  v22._countAndFlagsBits = 0x726576726573202CLL;
  v22._object = (void *)0xEF203D20656D6954;
  String.append(_:)(v22);
  v23 = *((_QWORD *)v0 + 9);
  v24 = (void *)*((_QWORD *)v0 + 10);
  swift_bridgeObjectRetain(v24);
  v25._countAndFlagsBits = v23;
  v25._object = v24;
  String.append(_:)(v25);
  swift_bridgeObjectRelease(v24);
  v26._countAndFlagsBits = 0x656369766564202CLL;
  v26._object = (void *)0xEF203D20656D6954;
  String.append(_:)(v26);
  v27 = *((_QWORD *)v0 + 11);
  v28 = (void *)*((_QWORD *)v0 + 12);
  swift_bridgeObjectRetain(v28);
  v29._countAndFlagsBits = v27;
  v29._object = v28;
  String.append(_:)(v29);
  swift_bridgeObjectRelease(v28);
  v30._countAndFlagsBits = 0x3D20646E6172202CLL;
  v30._object = (void *)0xE900000000000020;
  String.append(_:)(v30);
  v32 = *((_QWORD *)v0 + 13);
  v31 = (void *)*((_QWORD *)v0 + 14);
  swift_bridgeObjectRetain(v31);
  v33._countAndFlagsBits = v32;
  v33._object = v31;
  String.append(_:)(v33);
  swift_bridgeObjectRelease(v31);
  return v36[0];
}

uint64_t sub_10020EAA4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 128));
  return v1;
}

uint64_t sub_10020EAD4(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v11[8];
  uint64_t v12;
  _OWORD v13[8];
  uint64_t v14;

  v2 = *(_OWORD *)(a1 + 112);
  v11[6] = *(_OWORD *)(a1 + 96);
  v11[7] = v2;
  v12 = *(_QWORD *)(a1 + 128);
  v3 = *(_OWORD *)(a1 + 48);
  v11[2] = *(_OWORD *)(a1 + 32);
  v11[3] = v3;
  v4 = *(_OWORD *)(a1 + 80);
  v11[4] = *(_OWORD *)(a1 + 64);
  v11[5] = v4;
  v5 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v5;
  v6 = *(_OWORD *)(a2 + 112);
  v13[6] = *(_OWORD *)(a2 + 96);
  v13[7] = v6;
  v14 = *(_QWORD *)(a2 + 128);
  v7 = *(_OWORD *)(a2 + 48);
  v13[2] = *(_OWORD *)(a2 + 32);
  v13[3] = v7;
  v8 = *(_OWORD *)(a2 + 80);
  v13[4] = *(_OWORD *)(a2 + 64);
  v13[5] = v8;
  v9 = *(_OWORD *)(a2 + 16);
  v13[0] = *(_OWORD *)a2;
  v13[1] = v9;
  return sub_100210300((uint64_t)v11, (uint64_t)v13) & 1;
}

__n128 sub_10020EB54@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  __n128 result;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[136];
  _OWORD v35[8];
  uint64_t v36;
  uint64_t v37;

  v5 = type metadata accessor for DIPError.Code(0);
  v26 = *(_QWORD *)(v5 - 8);
  v27 = v5;
  __chkstk_darwin(v5);
  v28 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v2[3];
  v37 = v2[2];
  v8 = v2[4];
  v9 = v2[5];
  v10 = v2[7];
  v32 = v2[6];
  v33 = v8;
  v11 = v2[8];
  v12 = v2[9];
  v13 = a1[3];
  v30 = a1[2];
  v31 = v11;
  v14 = a1[5];
  v29 = a1[4];
  v15 = a1[6];
  v16 = a1[7];
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRetain(v16);
  sub_1002109BC(v37, v7, v33, v9, v32, v10, v31, v12, (uint64_t)v34, v30, v13, v29, v14, v15, v16, 0);
  sub_10021136C((uint64_t)v34, (uint64_t)v35);
  if (sub_1002113B4((uint64_t)v35) == 1)
  {
    v17 = v28;
    (*(void (**)(char *, _QWORD, uint64_t))(v26 + 104))(v28, enum case for DIPError.Code.internalError(_:), v27);
    v18 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v19 = type metadata accessor for DIPError(0);
    v20 = sub_100007F30();
    swift_allocError(v19, v20, 0, 0);
    v21 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001CLL, 0x8000000100555550, 0, v17, 0, v18, 0xD00000000000004DLL, 0x8000000100555470, 0xD000000000000012, 0x8000000100555590, 176);
    swift_willThrow(v21);
  }
  else
  {
    v23 = v35[7];
    *(_OWORD *)(a2 + 96) = v35[6];
    *(_OWORD *)(a2 + 112) = v23;
    *(_QWORD *)(a2 + 128) = v36;
    v24 = v35[3];
    *(_OWORD *)(a2 + 32) = v35[2];
    *(_OWORD *)(a2 + 48) = v24;
    v25 = v35[5];
    *(_OWORD *)(a2 + 64) = v35[4];
    *(_OWORD *)(a2 + 80) = v25;
    result = (__n128)v35[1];
    *(_OWORD *)a2 = v35[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_10020EDB0(uint64_t a1)
{
  int **v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(void);

  v2[37] = a1;
  v2[38] = v1;
  v3 = type metadata accessor for DIPError.Code(0);
  v2[39] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[40] = v4;
  v2[41] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Date(0);
  v2[42] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[43] = v6;
  v2[44] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t (*)(void))((char *)*v1 + **v1);
  v7 = (_QWORD *)swift_task_alloc((*v1)[1]);
  v2[45] = v7;
  *v7 = v2;
  v7[1] = sub_10020EE58;
  return v9();
}

uint64_t sub_10020EE58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(*v3 + 360);
  v5 = *v3;
  *(_QWORD *)(v5 + 368) = a1;
  *(_QWORD *)(v5 + 376) = a2;
  swift_task_dealloc(v4);
  if (!v2)
    return swift_task_switch(sub_10020EEE0, 0, 0);
  v6 = *(_QWORD *)(v5 + 328);
  swift_task_dealloc(*(_QWORD *)(v5 + 352));
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_10020EEE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  Swift::String v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(void);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v3 = *(_QWORD *)(v1 + 344);
  v2 = *(_QWORD *)(v1 + 352);
  v4 = *(_QWORD *)(v1 + 336);
  v5 = Date.init()(a1);
  v6 = Date.timeIntervalSince1970.getter(v5);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if ((~*(_QWORD *)&v6 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v6 <= -9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v6 < 9.22337204e18)
  {
    *(_QWORD *)(v1 + 288) = (uint64_t)v6;
    v8 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v10 = v9;
    v11 = static Array._allocateBufferUninitialized(minimumCapacity:)(6, &type metadata for UInt8);
    *(_QWORD *)(v11 + 16) = 6;
    *(_WORD *)(v11 + 36) = 0;
    *(_DWORD *)(v11 + 32) = 0;
    v12 = SecRandomCopyBytes(kSecRandomDefault, 6uLL, (void *)(v11 + 32));
    v13 = *(_QWORD *)(v1 + 376);
    if (v12)
    {
      v14 = v12;
      v15 = *(_QWORD *)(v1 + 320);
      v16 = *(_QWORD *)(v1 + 328);
      v17 = *(_QWORD *)(v1 + 312);
      swift_bridgeObjectRelease(v11);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v15 + 104))(v16, enum case for DIPError.Code.systemSecError(_:), v17);
      v18 = sub_100004828((uint64_t *)&unk_1006325A0);
      v19 = sub_100004828((uint64_t *)&unk_100633440);
      v20 = *(_QWORD *)(v19 - 8);
      v21 = *(_QWORD *)(v20 + 72);
      v22 = *(unsigned __int8 *)(v20 + 80);
      v23 = (v22 + 32) & ~v22;
      v24 = swift_allocObject(v18, v23 + v21, v22 | 7);
      *(_OWORD *)(v24 + 16) = xmmword_10051FFB0;
      v25 = v24 + v23;
      v26 = v25 + *(int *)(v19 + 48);
      v27 = enum case for DIPError.PropertyKey.underlyingErrno(_:);
      v28 = type metadata accessor for DIPError.PropertyKey(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v25, v27, v28);
      *(_QWORD *)(v26 + 24) = &type metadata for Int32;
      *(_DWORD *)v26 = v14;
      v29 = sub_10011D314(v24);
      v30 = type metadata accessor for DIPError(0);
      v31 = sub_100007F30();
      swift_allocError(v30, v31, 0, 0);
      v32 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001FLL, 0x800000010054E180, 0, v16, 0, v29, 0xD000000000000048, 0x800000010054E1A0, 0xD00000000000001ALL, 0x800000010054E1F0, 35);
      swift_willThrow(v32);
      swift_bridgeObjectRelease(v10);
      swift_bridgeObjectRelease(v13);
    }
    else
    {
      v65 = *(_QWORD *)(v1 + 368);
      v33 = *(_QWORD **)(v1 + 304);
      v63 = v10;
      v64 = *(_QWORD *)(v1 + 376);
      v34 = sub_100111D08(v11);
      v36 = v35;
      swift_bridgeObjectRelease(v11);
      v37 = Data.base64EncodedString(options:)(0);
      sub_100007F8C(v34, v36);
      v38 = v33[2];
      v39 = v33[3];
      v40 = v8;
      v41 = v33[5];
      v61 = v33[6];
      v62 = v33[4];
      v42 = v33[7];
      v43 = v33[8];
      v44 = v33[9];
      swift_bridgeObjectRetain(v39);
      swift_bridgeObjectRetain(v41);
      swift_bridgeObjectRetain(v42);
      swift_bridgeObjectRetain(v44);
      sub_1002109BC(v38, v39, v62, v41, v61, v42, v43, v44, v1 + 152, v65, v64, v40, v63, v37._countAndFlagsBits, (uint64_t)v37._object, 0);
      sub_10021136C(v1 + 152, v1 + 16);
      if (sub_1002113B4(v1 + 16) != 1)
      {
        v52 = *(_QWORD *)(v1 + 352);
        v53 = *(_QWORD *)(v1 + 328);
        v54 = *(_QWORD *)(v1 + 296);
        v55 = *(_OWORD *)(v1 + 80);
        v57 = *(_OWORD *)(v1 + 32);
        v56 = *(_OWORD *)(v1 + 48);
        *(_OWORD *)(v54 + 48) = *(_OWORD *)(v1 + 64);
        *(_OWORD *)(v54 + 64) = v55;
        *(_OWORD *)(v54 + 16) = v57;
        *(_OWORD *)(v54 + 32) = v56;
        v59 = *(_OWORD *)(v1 + 112);
        v58 = *(_OWORD *)(v1 + 128);
        v60 = *(_OWORD *)(v1 + 96);
        *(_QWORD *)(v54 + 128) = *(_QWORD *)(v1 + 144);
        *(_OWORD *)(v54 + 96) = v59;
        *(_OWORD *)(v54 + 112) = v58;
        *(_OWORD *)(v54 + 80) = v60;
        *(_OWORD *)v54 = *(_OWORD *)(v1 + 16);
        swift_task_dealloc(v52);
        swift_task_dealloc(v53);
        v51 = *(uint64_t (**)(void))(v1 + 8);
        return v51();
      }
      v45 = *(_QWORD *)(v1 + 328);
      (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v1 + 320) + 104))(v45, enum case for DIPError.Code.internalError(_:), *(_QWORD *)(v1 + 312));
      v46 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
      v47 = type metadata accessor for DIPError(0);
      v48 = sub_100007F30();
      swift_allocError(v47, v48, 0, 0);
      v49 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001CLL, 0x8000000100555550, 0, v45, 0, v46, 0xD00000000000004DLL, 0x8000000100555470, 0xD000000000000019, 0x8000000100555570, 187);
      swift_willThrow(v49);
    }
    v50 = *(_QWORD *)(v1 + 328);
    swift_task_dealloc(*(_QWORD *)(v1 + 352));
    swift_task_dealloc(v50);
    v51 = *(uint64_t (**)(void))(v1 + 8);
    return v51();
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_10020F3B8(uint64_t a1)
{
  int **v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t (*v18)(void);

  v2[37] = a1;
  v2[38] = v1;
  v3 = type metadata accessor for DIPError.Code(0);
  v2[39] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[40] = v4;
  v2[41] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100004828(&qword_100633990);
  v2[42] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100004828(&qword_1006366D0);
  v2[43] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100004828(&qword_1006366D8);
  v2[44] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Calendar(0);
  v2[45] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[46] = v9;
  v2[47] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DateComponents(0);
  v2[48] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v2[49] = v11;
  v12 = (*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[50] = swift_task_alloc(v12);
  v2[51] = swift_task_alloc(v12);
  v13 = type metadata accessor for Date(0);
  v2[52] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v2[53] = v14;
  v15 = (*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[54] = swift_task_alloc(v15);
  v2[55] = swift_task_alloc(v15);
  v18 = (uint64_t (*)(void))((char *)*v1 + **v1);
  v16 = (_QWORD *)swift_task_alloc((*v1)[1]);
  v2[56] = v16;
  *v16 = v2;
  v16[1] = sub_10020F540;
  return v18();
}

uint64_t sub_10020F540(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)(*v3 + 448);
  v5 = *v3;
  *(_QWORD *)(v5 + 456) = a1;
  *(_QWORD *)(v5 + 464) = a2;
  swift_task_dealloc(v4);
  if (!v2)
    return swift_task_switch(sub_10020F63C, 0, 0);
  v6 = *(_QWORD *)(v5 + 432);
  v8 = *(_QWORD *)(v5 + 400);
  v7 = *(_QWORD *)(v5 + 408);
  v9 = *(_QWORD *)(v5 + 376);
  v11 = *(_QWORD *)(v5 + 344);
  v10 = *(_QWORD *)(v5 + 352);
  v13 = *(_QWORD *)(v5 + 328);
  v12 = *(_QWORD *)(v5 + 336);
  swift_task_dealloc(*(_QWORD *)(v5 + 440));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v5 + 8))();
}

void sub_10020F63C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, _QWORD, uint64_t);
  void *v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t, uint64_t);
  void (*v79)(uint64_t, uint64_t);
  _QWORD *v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  Swift::String v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  void (*v104)(uint64_t, uint64_t);
  void (*v105)(uint64_t, uint64_t);
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(void);
  uint64_t v115;
  uint64_t v116;
  void (*v117)(uint64_t, uint64_t);
  void (*v118)(uint64_t, uint64_t);
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  uint64_t v147;

  v2 = *(_QWORD *)(v1 + 440);
  v4 = *(_QWORD *)(v1 + 368);
  v3 = *(_QWORD *)(v1 + 376);
  v5 = *(_QWORD *)(v1 + 360);
  v131 = *(_QWORD *)(v1 + 352);
  v135 = *(_QWORD *)(v1 + 344);
  v6 = Date.init()(a1);
  static Calendar.current.getter(v6);
  v7 = sub_100004828((uint64_t *)&unk_100633998);
  v8 = type metadata accessor for Calendar.Component(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 72);
  v11 = *(unsigned __int8 *)(v9 + 80);
  v12 = (v11 + 32) & ~v11;
  v13 = swift_allocObject(v7, v12 + 2 * v10, v11 | 7);
  *(_OWORD *)(v13 + 16) = xmmword_1005208D0;
  v14 = v13 + v12;
  v15 = *(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 104);
  v15(v14, enum case for Calendar.Component.minute(_:), v8);
  v15(v14 + v10, enum case for Calendar.Component.second(_:), v8);
  v16 = sub_100403E1C(v13);
  swift_setDeallocating(v13);
  swift_arrayDestroy(v14, 2, v8);
  swift_deallocClassInstance(v13, 32, 7);
  Calendar.dateComponents(_:from:)(v16, v2);
  swift_bridgeObjectRelease(v16);
  v17 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v17(v3, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v131, 1, 1, v5);
  v18 = type metadata accessor for TimeZone(0);
  v19 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v135, 1, 1, v18);
  v20 = DateComponents.minute.getter(v19);
  if ((v21 & 1) != 0)
    v22 = 0;
  else
    v22 = v20;
  if (v22 == 0x8000000000000000)
  {
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v23 = DateComponents.second.getter();
  if ((v24 & 1) != 0)
    v25 = 0;
  else
    v25 = v23;
  if (v25 == 0x8000000000000000)
    goto LABEL_22;
  v26 = -v22;
  v27 = *(_QWORD *)(v1 + 440);
  v28 = *(_QWORD *)(v1 + 416);
  v29 = *(_QWORD *)(v1 + 424);
  v30 = *(_QWORD *)(v1 + 400);
  v31 = *(_QWORD *)(v1 + 376);
  v32 = *(_QWORD *)(v1 + 360);
  v33 = *(_QWORD *)(v1 + 336);
  v34 = DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)(*(_QWORD *)(v1 + 352), *(_QWORD *)(v1 + 344), 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v26, 0, -v25, 0, 0, 1, 0,
          1,
          0,
          1,
          0,
          1,
          0,
          1,
          0,
          1,
          0,
          1);
  static Calendar.current.getter(v34);
  Calendar.date(byAdding:to:wrappingComponents:)(v30, v27, 0);
  v17(v31, v32);
  v35 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v33, 1, v28);
  v36 = *(_QWORD *)(v1 + 416);
  v37 = *(_QWORD *)(v1 + 424);
  if (v35 == 1)
  {
    v38 = *(_QWORD *)(v1 + 400);
    v132 = *(_QWORD *)(v1 + 408);
    v136 = *(_QWORD *)(v1 + 440);
    v40 = *(_QWORD *)(v1 + 384);
    v39 = *(_QWORD *)(v1 + 392);
    v42 = *(_QWORD *)(v1 + 328);
    v41 = *(_QWORD *)(v1 + 336);
    v44 = *(_QWORD *)(v1 + 312);
    v43 = *(_QWORD *)(v1 + 320);
    swift_bridgeObjectRelease(*(_QWORD *)(v1 + 464));
    sub_100008030(v41, &qword_100633990);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v43 + 104))(v42, enum case for DIPError.Code.unexpectedDeviceState(_:), v44);
    v45 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v46 = type metadata accessor for DIPError(0);
    v47 = sub_100007F30();
    swift_allocError(v46, v47, 0, 0);
    v48 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000029, 0x8000000100555500, 0, v42, 0, v45, 0xD00000000000004DLL, 0x8000000100555470, 0xD000000000000017, 0x8000000100555530, 201);
    swift_willThrow(v48);
    v49 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
    v49(v38, v40);
    v49(v132, v40);
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v136, v36);
    goto LABEL_18;
  }
  v50 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v37 + 32))(*(_QWORD *)(v1 + 432), *(_QWORD *)(v1 + 336), *(_QWORD *)(v1 + 416));
  v51 = Date.timeIntervalSince1970.getter(v50);
  if ((~*(_QWORD *)&v51 & 0x7FF0000000000000) == 0)
    goto LABEL_23;
  if (v51 <= -9.22337204e18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v51 < 9.22337204e18)
  {
    *(_QWORD *)(v1 + 288) = (uint64_t)v51;
    v52 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v137 = v53;
    v54 = static Array._allocateBufferUninitialized(minimumCapacity:)(6, &type metadata for UInt8);
    *(_QWORD *)(v54 + 16) = 6;
    *(_WORD *)(v54 + 36) = 0;
    *(_DWORD *)(v54 + 32) = 0;
    v55 = SecRandomCopyBytes(kSecRandomDefault, 6uLL, (void *)(v54 + 32));
    v133 = *(_QWORD *)(v1 + 464);
    if (v55)
    {
      v56 = v55;
      v57 = *(_QWORD *)(v1 + 424);
      v58 = *(_QWORD *)(v1 + 416);
      v126 = *(_QWORD *)(v1 + 408);
      v129 = *(_QWORD *)(v1 + 440);
      v121 = *(_QWORD *)(v1 + 432);
      v123 = *(_QWORD *)(v1 + 400);
      v59 = *(_QWORD *)(v1 + 384);
      v119 = *(_QWORD *)(v1 + 392);
      v61 = *(_QWORD *)(v1 + 320);
      v60 = *(_QWORD *)(v1 + 328);
      v62 = *(_QWORD *)(v1 + 312);
      swift_bridgeObjectRelease(v54);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v61 + 104))(v60, enum case for DIPError.Code.systemSecError(_:), v62);
      v63 = sub_100004828((uint64_t *)&unk_1006325A0);
      v64 = sub_100004828((uint64_t *)&unk_100633440);
      v65 = *(_QWORD *)(v64 - 8);
      v66 = *(_QWORD *)(v65 + 72);
      v67 = *(unsigned __int8 *)(v65 + 80);
      v68 = (v67 + 32) & ~v67;
      v69 = swift_allocObject(v63, v68 + v66, v67 | 7);
      *(_OWORD *)(v69 + 16) = xmmword_10051FFB0;
      v70 = v69 + v68;
      v71 = v70 + *(int *)(v64 + 48);
      v72 = enum case for DIPError.PropertyKey.underlyingErrno(_:);
      v73 = type metadata accessor for DIPError.PropertyKey(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 104))(v70, v72, v73);
      *(_QWORD *)(v71 + 24) = &type metadata for Int32;
      *(_DWORD *)v71 = v56;
      v74 = sub_10011D314(v69);
      v75 = type metadata accessor for DIPError(0);
      v76 = sub_100007F30();
      swift_allocError(v75, v76, 0, 0);
      v77 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001FLL, 0x800000010054E180, 0, v60, 0, v74, 0xD000000000000048, 0x800000010054E1A0, 0xD00000000000001ALL, 0x800000010054E1F0, 35);
      swift_willThrow(v77);
      swift_bridgeObjectRelease(v133);
      swift_bridgeObjectRelease(v137);
      v78 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
      v78(v121, v58);
      v79 = *(void (**)(uint64_t, uint64_t))(v119 + 8);
      v79(v123, v59);
      v79(v126, v59);
      v78(v129, v58);
    }
    else
    {
      v127 = *(_QWORD *)(v1 + 456);
      v124 = v52;
      v80 = *(_QWORD **)(v1 + 304);
      v81 = sub_100111D08(v54);
      v83 = v82;
      swift_bridgeObjectRelease(v54);
      v84 = Data.base64EncodedString(options:)(0);
      sub_100007F8C(v81, v83);
      v85 = v80[2];
      v86 = v80[3];
      v87 = v80[5];
      v120 = v80[4];
      v89 = v80[6];
      v88 = v80[7];
      v91 = v80[8];
      v90 = v80[9];
      swift_bridgeObjectRetain(v86);
      swift_bridgeObjectRetain(v87);
      swift_bridgeObjectRetain(v88);
      swift_bridgeObjectRetain(v90);
      sub_1002109BC(v85, v86, v120, v87, v89, v88, v91, v90, v1 + 152, v127, v133, v124, v137, v84._countAndFlagsBits, (uint64_t)v84._object, 0);
      sub_10021136C(v1 + 152, v1 + 16);
      v92 = sub_1002113B4(v1 + 16);
      v93 = *(_QWORD *)(v1 + 432);
      v95 = *(_QWORD *)(v1 + 416);
      v94 = *(_QWORD *)(v1 + 424);
      v96 = *(_QWORD *)(v1 + 400);
      v134 = *(_QWORD *)(v1 + 408);
      v138 = *(_QWORD *)(v1 + 440);
      v98 = *(_QWORD *)(v1 + 384);
      v97 = *(_QWORD *)(v1 + 392);
      if (v92 != 1)
      {
        v115 = *(_QWORD *)(v1 + 376);
        v122 = *(_QWORD *)(v1 + 352);
        v125 = *(_QWORD *)(v1 + 344);
        v128 = *(_QWORD *)(v1 + 336);
        v130 = *(_QWORD *)(v1 + 328);
        v116 = *(_QWORD *)(v1 + 296);
        v145 = *(_OWORD *)(v1 + 112);
        v146 = *(_OWORD *)(v1 + 128);
        v147 = *(_QWORD *)(v1 + 144);
        v141 = *(_OWORD *)(v1 + 48);
        v142 = *(_OWORD *)(v1 + 64);
        v143 = *(_OWORD *)(v1 + 80);
        v144 = *(_OWORD *)(v1 + 96);
        v139 = *(_OWORD *)(v1 + 16);
        v140 = *(_OWORD *)(v1 + 32);
        v117 = *(void (**)(uint64_t, uint64_t))(v94 + 8);
        v117(v93, v95);
        v118 = *(void (**)(uint64_t, uint64_t))(v97 + 8);
        v118(v96, v98);
        v118(v134, v98);
        v117(v138, v95);
        *(_OWORD *)(v116 + 96) = v145;
        *(_OWORD *)(v116 + 112) = v146;
        *(_QWORD *)(v116 + 128) = v147;
        *(_OWORD *)(v116 + 32) = v141;
        *(_OWORD *)(v116 + 48) = v142;
        *(_OWORD *)(v116 + 64) = v143;
        *(_OWORD *)(v116 + 80) = v144;
        *(_OWORD *)v116 = v139;
        *(_OWORD *)(v116 + 16) = v140;
        swift_task_dealloc(v138);
        swift_task_dealloc(v93);
        swift_task_dealloc(v134);
        swift_task_dealloc(v96);
        swift_task_dealloc(v115);
        swift_task_dealloc(v122);
        swift_task_dealloc(v125);
        swift_task_dealloc(v128);
        swift_task_dealloc(v130);
        v114 = *(void (**)(void))(v1 + 8);
        goto LABEL_19;
      }
      v99 = *(_QWORD *)(v1 + 328);
      (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v1 + 320) + 104))(v99, enum case for DIPError.Code.internalError(_:), *(_QWORD *)(v1 + 312));
      v100 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
      v101 = type metadata accessor for DIPError(0);
      v102 = sub_100007F30();
      swift_allocError(v101, v102, 0, 0);
      v103 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001CLL, 0x8000000100555550, 0, v99, 0, v100, 0xD00000000000004DLL, 0x8000000100555470, 0xD000000000000017, 0x8000000100555530, 207);
      swift_willThrow(v103);
      v104 = *(void (**)(uint64_t, uint64_t))(v94 + 8);
      v104(v93, v95);
      v105 = *(void (**)(uint64_t, uint64_t))(v97 + 8);
      v105(v96, v98);
      v105(v134, v98);
      v104(v138, v95);
    }
LABEL_18:
    v106 = *(_QWORD *)(v1 + 432);
    v108 = *(_QWORD *)(v1 + 400);
    v107 = *(_QWORD *)(v1 + 408);
    v109 = *(_QWORD *)(v1 + 376);
    v111 = *(_QWORD *)(v1 + 344);
    v110 = *(_QWORD *)(v1 + 352);
    v113 = *(_QWORD *)(v1 + 328);
    v112 = *(_QWORD *)(v1 + 336);
    swift_task_dealloc(*(_QWORD *)(v1 + 440));
    swift_task_dealloc(v106);
    swift_task_dealloc(v107);
    swift_task_dealloc(v108);
    swift_task_dealloc(v109);
    swift_task_dealloc(v110);
    swift_task_dealloc(v111);
    swift_task_dealloc(v112);
    swift_task_dealloc(v113);
    v114 = *(void (**)(void))(v1 + 8);
LABEL_19:
    v114();
    return;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_100210028@<X0>(uint64_t a1@<X0>, int64x2_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64x2_t v12;
  _OWORD v13[4];
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  _OWORD v19[8];
  uint64_t v20;
  _BYTE v21[24];
  uint64_t v22;

  sub_1002113E8(a1, (uint64_t)v21);
  if (!v22)
  {
    result = sub_100008030((uint64_t)v21, &qword_100636670);
    goto LABEL_8;
  }
  v3 = sub_100004828(&qword_100638CA0);
  result = swift_dynamicCast(v19, v21, v3, &type metadata for DIPClientGUID, 6);
  if ((result & 1) == 0)
  {
LABEL_8:
    v6 = 0;
    v7 = 0;
    v8 = 0;
    v9 = 0;
    v11 = 0;
    v10 = 0;
    v12 = 0uLL;
    goto LABEL_9;
  }
  v14 = v19[4];
  v15 = v19[5];
  v16 = v19[6];
  v17 = v19[7];
  v18 = v20;
  v13[0] = v19[0];
  v13[1] = v19[1];
  v13[2] = v19[2];
  v13[3] = v19[3];
  if (LOBYTE(v19[0]))
    v5 = 50;
  else
    v5 = 49;
  v6 = *((_QWORD *)&v14 + 1);
  v8 = *((_QWORD *)&v15 + 1);
  v7 = v15;
  v11 = *((_QWORD *)&v16 + 1);
  v9 = v16;
  v10 = v17;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRetain(v17);
  result = (uint64_t)sub_1001837F4(v13);
  v12 = vdupq_n_s64(0xE100000000000000);
  v12.i64[0] = v5;
LABEL_9:
  *a2 = v12;
  a2[1].i64[0] = v6;
  a2[1].i64[1] = v7;
  a2[2].i64[0] = v8;
  a2[2].i64[1] = v9;
  a2[3].i64[0] = v11;
  a2[3].i64[1] = v10;
  return result;
}

void *sub_100210158(int a1, size_t a2)
{
  uint64_t v4;
  void *result;

  if ((a2 & 0x8000000000000000) != 0)
  {
    result = (void *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
  }
  else
  {
    if (!a2)
      return &_swiftEmptyArrayStorage;
    v4 = static Array._allocateBufferUninitialized(minimumCapacity:)(a2, &type metadata for UInt8);
    *(_QWORD *)(v4 + 16) = a2;
    memset((void *)(v4 + 32), a1, a2);
    return (void *)v4;
  }
  return result;
}

_QWORD *sub_100210210(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *result;

  if (a2 < 0)
  {
    result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
  }
  else
  {
    if (a2)
    {
      v4 = sub_100004828(&qword_1006340B8);
      v5 = (_QWORD *)static Array._allocateBufferUninitialized(minimumCapacity:)(a2, v4);
      v6 = v5;
      v5[2] = a2;
      v5[4] = a1;
      if (a2 != 1)
      {
        v5[5] = a1;
        v7 = a2 - 2;
        if (v7)
        {
          v8 = v5 + 6;
          do
          {
            *v8++ = a1;
            swift_bridgeObjectRetain(a1);
            --v7;
          }
          while (v7);
        }
        swift_bridgeObjectRetain(a1);
      }
    }
    else
    {
      swift_bridgeObjectRelease(a1);
      return _swiftEmptyArrayStorage;
    }
    return v6;
  }
  return result;
}

uint64_t sub_100210300(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  if (*(_BYTE *)a1)
    v4 = 50;
  else
    v4 = 49;
  if (*(_BYTE *)a2)
    v5 = 50;
  else
    v5 = 49;
  if (v4 == v5)
  {
    swift_bridgeObjectRelease_n(0xE100000000000000, 2);
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, 0xE100000000000000, v5, 0xE100000000000000, 0);
    swift_bridgeObjectRelease_n(0xE100000000000000, 2);
    result = 0;
    if ((v6 & 1) == 0)
      return result;
  }
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a2 + 8);
  v11 = *(_QWORD *)(a2 + 16);
  v12 = v8 == v10 && v9 == v11;
  if (v12 || (v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v9, v10, v11, 0), result = 0, (v13 & 1) != 0))
  {
    if ((v14 = *(_QWORD *)(a1 + 24),
          v15 = *(_QWORD *)(a1 + 32),
          v16 = *(_QWORD *)(a2 + 24),
          v17 = *(_QWORD *)(a2 + 32),
          v14 == v16)
      && v15 == v17
      || (v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, v16, v17, 0), result = 0, (v18 & 1) != 0))
    {
      if ((v19 = *(_QWORD *)(a1 + 40),
            v20 = *(_QWORD *)(a1 + 48),
            v21 = *(_QWORD *)(a2 + 40),
            v22 = *(_QWORD *)(a2 + 48),
            v19 == v21)
        && v20 == v22
        || (v23 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v20, v21, v22, 0), result = 0, (v23 & 1) != 0))
      {
        if ((v24 = *(_QWORD *)(a1 + 56),
              v25 = *(_QWORD *)(a1 + 64),
              v26 = *(_QWORD *)(a2 + 56),
              v27 = *(_QWORD *)(a2 + 64),
              v24 == v26)
          && v25 == v27
          || (v28 = _stringCompareWithSmolCheck(_:_:expecting:)(v24, v25, v26, v27, 0), result = 0, (v28 & 1) != 0))
        {
          if ((v29 = *(_QWORD *)(a1 + 72),
                v30 = *(_QWORD *)(a1 + 80),
                v31 = *(_QWORD *)(a2 + 72),
                v32 = *(_QWORD *)(a2 + 80),
                v29 == v31)
            && v30 == v32
            || (v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v29, v30, v31, v32, 0), result = 0, (v33 & 1) != 0))
          {
            if ((v34 = *(_QWORD *)(a1 + 88),
                  v35 = *(_QWORD *)(a1 + 96),
                  v36 = *(_QWORD *)(a2 + 88),
                  v37 = *(_QWORD *)(a2 + 96),
                  v34 == v36)
              && v35 == v37
              || (v38 = _stringCompareWithSmolCheck(_:_:expecting:)(v34, v35, v36, v37, 0),
                  result = 0,
                  (v38 & 1) != 0))
            {
              v39 = *(_QWORD *)(a1 + 104);
              v40 = *(_QWORD *)(a1 + 112);
              v41 = *(_QWORD *)(a2 + 104);
              v42 = *(_QWORD *)(a2 + 112);
              if (v39 == v41 && v40 == v42
                || (v43 = _stringCompareWithSmolCheck(_:_:expecting:)(v39, v40, v41, v42, 0),
                    result = 0,
                    (v43 & 1) != 0))
              {
                v44 = *(_QWORD *)(a1 + 120);
                v45 = *(_QWORD *)(a1 + 128);
                v46 = *(_QWORD *)(a2 + 120);
                v47 = *(_QWORD *)(a2 + 128);
                if (v44 == v46 && v45 == v47)
                  return 1;
                else
                  return _stringCompareWithSmolCheck(_:_:expecting:)(v44, v45, v46, v47, 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1002104E4@<X0>(_QWORD *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  char *v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62[3];
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v61 = a1;
  v58 = a3;
  v59 = a5;
  v7 = type metadata accessor for DIPError.Code(0);
  v55 = *(_QWORD *)(v7 - 8);
  v56 = v7;
  __chkstk_darwin(v7);
  v57 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = defaultLogger()(v11);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc(12, -1);
    v54 = a4;
    v18 = (uint8_t *)v17;
    v19 = swift_slowAlloc(32, -1);
    *(_DWORD *)v18 = 136315138;
    v62[0] = v19;
    if ((a2 & 1) != 0)
      v20 = 0x73656E755469;
    else
      v20 = 0x64756F6C4369;
    v65 = sub_1000E3AC8(v20, 0xE600000000000000, v62);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66, v18 + 4);
    swift_bridgeObjectRelease(0xE600000000000000);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Ignoring primaryDSID configured for %s for DIPClientGUIDFactory", v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    v21 = v18;
    a4 = v54;
    swift_slowDealloc(v21, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  type metadata accessor for DIPAccountManager(0);
  v22 = swift_retain(a4);
  static DIPAccountManager.sharedInstance.getter(v62, v22);
  v23 = v63;
  v24 = v64;
  sub_10000806C(v62, v63);
  v25 = v60;
  v26 = dispatch thunk of DIPAccountManagerProtocol.primaryAppleAccountDSID()(v23, v24);
  v28 = v27;
  if (v25)
  {
    swift_release(a4);
    _s8coreidvd24DigitalPresentmentHelperVwxx_0(v62);
    goto LABEL_8;
  }
  v30 = v26;
  swift_bridgeObjectRetain(v27);
  _s8coreidvd24DigitalPresentmentHelperVwxx_0(v62);
  if (qword_10062F560 == -1)
  {
    v31 = (char *)sub_100426BB0();
    if (v32)
    {
LABEL_13:
      v33 = v32;
      v34 = v61;
      v60 = v30;
      v35 = v61[3];
      v36 = v61[4];
      v57 = v31;
      sub_10000806C(v61, v35);
      v37 = swift_bridgeObjectRetain(v33);
      v62[0] = dispatch thunk of DeviceInformationProviding.chipID.getter(v35, v36, v37);
      v56 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
      v39 = v38;
      v40 = a4;
      v41 = v34[3];
      v42 = v34[4];
      sub_10000806C(v34, v41);
      v43 = swift_bridgeObjectRetain(v39);
      v62[0] = dispatch thunk of DeviceInformationProviding.uniqueChipID.getter(v41, v42, v43);
      v44 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
      v46 = v45;
      swift_bridgeObjectRetain(v28);
      swift_bridgeObjectRetain(v33);
      swift_bridgeObjectRetain(v46);
      swift_bridgeObjectRelease(v28);
      swift_bridgeObjectRelease(v33);
      _s8coreidvd24DigitalPresentmentHelperVwxx_0(v34);
      swift_bridgeObjectRelease(v46);
      swift_bridgeObjectRelease(v39);
      swift_bridgeObjectRelease(v33);
      swift_bridgeObjectRelease(v28);
      result = swift_release(v40);
      v47 = v59;
      *v59 = v58;
      v47[1] = v40;
      v47[2] = v60;
      v47[3] = v28;
      v47[4] = v57;
      v47[5] = v33;
      v47[6] = v56;
      v47[7] = v39;
      v47[8] = v44;
      v47[9] = v46;
      return result;
    }
  }
  else
  {
    swift_once(&qword_10062F560, sub_10041FF94);
    v31 = (char *)sub_100426BB0();
    if (v32)
      goto LABEL_13;
  }
  swift_bridgeObjectRelease(v28);
  v48 = v57;
  (*(void (**)(char *, _QWORD, uint64_t))(v55 + 104))(v57, enum case for DIPError.Code.unexpectedDeviceState(_:), v56);
  v49 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
  v50 = type metadata accessor for DIPError(0);
  v51 = sub_100007F30();
  swift_allocError(v50, v51, 0, 0);
  v52 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000011, 0x8000000100555450, 0, v48, 0, v49, 0xD00000000000004DLL, 0x8000000100555470, 0xD00000000000003FLL, 0x80000001005554C0, 162);
  swift_willThrow(v52);
  swift_release(a4);
LABEL_8:
  _s8coreidvd24DigitalPresentmentHelperVwxx_0(v61);
  result = swift_release(a4);
  if (!v25)
    return swift_bridgeObjectRelease(v28);
  return result;
}

uint64_t sub_1002109BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  Class isa;
  id v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  Swift::String v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  _BYTE v93[24];
  _OWORD v94[8];
  uint64_t v95;
  _QWORD v96[15];
  Swift::String v97;
  _QWORD v98[17];
  char v99;

  v82 = a8;
  v84 = a7;
  v85 = a4;
  v79 = a9;
  v80 = a6;
  v73 = a2;
  v81 = a15;
  v83 = a14;
  v19 = type metadata accessor for String.Encoding(0);
  v75 = *(_QWORD *)(v19 - 8);
  v76 = v19;
  __chkstk_darwin(v19);
  v74 = (char *)&v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  HIDWORD(v67) = a16 & 1;
  v99 = a16 & 1;
  if ((a16 & 1) != 0)
    v21 = 50;
  else
    v21 = 49;
  v22 = sub_100004828(&qword_100640CA0);
  v23 = swift_allocObject(v22, 160, 7);
  *(_OWORD *)(v23 + 16) = xmmword_1005261D0;
  *(_QWORD *)(v23 + 32) = v21;
  *(_QWORD *)(v23 + 40) = 0xE100000000000000;
  v68 = a10;
  v69 = a1;
  *(_QWORD *)(v23 + 48) = a1;
  v24 = v73;
  *(_QWORD *)(v23 + 56) = v73;
  *(_QWORD *)(v23 + 64) = a3;
  v71 = a3;
  v72 = a5;
  v25 = v84;
  v26 = v85;
  *(_QWORD *)(v23 + 72) = v85;
  *(_QWORD *)(v23 + 80) = a5;
  v28 = v80;
  v27 = v81;
  *(_QWORD *)(v23 + 88) = v80;
  *(_QWORD *)(v23 + 96) = v25;
  v29 = v82;
  v30 = v83;
  *(_QWORD *)(v23 + 104) = v82;
  *(_QWORD *)(v23 + 112) = a10;
  *(_QWORD *)(v23 + 120) = a11;
  *(_QWORD *)(v23 + 128) = a12;
  v70 = a12;
  *(_QWORD *)(v23 + 136) = a13;
  *(_QWORD *)(v23 + 144) = v30;
  v31 = v29;
  *(_QWORD *)(v23 + 152) = v27;
  v98[0] = v23;
  swift_bridgeObjectRetain_n(v24, 2);
  swift_bridgeObjectRetain_n(v26, 2);
  swift_bridgeObjectRetain_n(v28, 2);
  swift_bridgeObjectRetain_n(v31, 2);
  v77 = a11;
  swift_bridgeObjectRetain_n(a11, 2);
  v78 = a13;
  swift_bridgeObjectRetain_n(a13, 2);
  swift_bridgeObjectRetain_n(v27, 2);
  v32 = sub_100004828(&qword_1006368D0);
  v33 = sub_1000DB7D4();
  v34 = BidirectionalCollection<>.joined(separator:)(124, 0xE100000000000000, v32, v33);
  v36 = v35;
  v37 = swift_bridgeObjectRelease(v23);
  v38 = v74;
  static String.Encoding.utf8.getter(v37);
  v39 = String.data(using:allowLossyConversion:)(v38, 0, v34, v36);
  v41 = v40;
  swift_bridgeObjectRelease(v36);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v38, v76);
  if (v41 >> 60 == 15)
  {
    swift_bridgeObjectRelease(v24);
    v42 = v85;
    swift_bridgeObjectRelease(v85);
    swift_bridgeObjectRelease(v28);
    swift_bridgeObjectRelease(v31);
    v43 = v77;
    swift_bridgeObjectRelease(v77);
    v44 = v78;
    swift_bridgeObjectRelease(v78);
    swift_bridgeObjectRelease(v27);
    v45 = v24;
    v46 = v31;
    v47 = v44;
    v48 = v43;
LABEL_9:
    swift_bridgeObjectRelease(v27);
    swift_bridgeObjectRelease(v47);
    swift_bridgeObjectRelease(v48);
    swift_bridgeObjectRelease(v46);
    swift_bridgeObjectRelease(v28);
    swift_bridgeObjectRelease(v42);
    swift_bridgeObjectRelease(v45);
    sub_1002113CC((uint64_t)v96);
    v65 = v96;
    goto LABEL_10;
  }
  isa = Data._bridgeToObjectiveC()().super.isa;
  v50 = (id)DigestSha256(isa);

  if (!v50)
  {
    v45 = v24;
    swift_bridgeObjectRelease(v24);
    v42 = v85;
    swift_bridgeObjectRelease(v85);
    v28 = v80;
    swift_bridgeObjectRelease(v80);
    v46 = v82;
    swift_bridgeObjectRelease(v82);
    v48 = v77;
    swift_bridgeObjectRelease(v77);
    v47 = v78;
    swift_bridgeObjectRelease(v78);
    v27 = v81;
    swift_bridgeObjectRelease(v81);
    sub_100007F78(v39, v41);
    goto LABEL_9;
  }
  v51 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v50);
  v53 = v52;

  v54 = Data._Representation.subscript.getter(0, 16, v51, v53);
  v56 = v55;
  v57 = Data.base64EncodedString(options:)(0);
  sub_100007F78(v39, v41);
  sub_100007F8C(v54, v56);
  sub_100007F8C(v51, v53);
  LOBYTE(v86) = BYTE4(v67);
  *((_QWORD *)&v86 + 1) = v69;
  *(_QWORD *)&v87 = v24;
  v58 = v24;
  v59 = v85;
  *((_QWORD *)&v87 + 1) = v71;
  *(_QWORD *)&v88 = v85;
  v60 = v80;
  v61 = v81;
  *((_QWORD *)&v88 + 1) = v72;
  *(_QWORD *)&v89 = v80;
  v62 = v82;
  *((_QWORD *)&v89 + 1) = v84;
  *(_QWORD *)&v90 = v82;
  v64 = v77;
  v63 = v78;
  *((_QWORD *)&v90 + 1) = v68;
  *(_QWORD *)&v91 = v77;
  *((_QWORD *)&v91 + 1) = v70;
  *(_QWORD *)&v92 = v78;
  *((_QWORD *)&v92 + 1) = v83;
  *(_QWORD *)v93 = v81;
  *(Swift::String *)&v93[8] = v57;
  sub_100183760(&v86);
  swift_bridgeObjectRelease(v58);
  swift_bridgeObjectRelease(v59);
  swift_bridgeObjectRelease(v60);
  swift_bridgeObjectRelease(v62);
  swift_bridgeObjectRelease(v64);
  swift_bridgeObjectRelease(v63);
  swift_bridgeObjectRelease(v61);
  v94[6] = v92;
  v94[7] = *(_OWORD *)v93;
  v95 = *(_QWORD *)&v93[16];
  v94[2] = v88;
  v94[3] = v89;
  v94[4] = v90;
  v94[5] = v91;
  v94[0] = v86;
  v94[1] = v87;
  nullsub_7(v94);
  LOBYTE(v96[0]) = v99;
  v96[1] = v69;
  v96[2] = v58;
  v96[3] = v71;
  v96[4] = v59;
  v96[5] = v72;
  v96[6] = v60;
  v96[7] = v84;
  v96[8] = v62;
  v96[9] = v68;
  v96[10] = v64;
  v96[11] = v70;
  v96[12] = v63;
  v96[13] = v83;
  v96[14] = v61;
  v97 = v57;
  sub_1001837F4(v96);
  v65 = v94;
LABEL_10:
  sub_10021136C((uint64_t)v65, (uint64_t)v98);
  return sub_10021136C((uint64_t)v98, v79);
}

uint64_t sub_100210EC4(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  char v9;

  if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
  {
    v5 = 0xE700000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F6973726576, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x656D697473 && a2 == 0xE500000000000000)
  {
    v7 = 0xE500000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656D697473, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x656D697464 && a2 == 0xE500000000000000)
  {
    v8 = 0xE500000000000000;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656D697464, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 1684955506 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease(0xE400000000000000);
    return 3;
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(1684955506, 0xE400000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v9 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_100211050@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;
  char v35;

  v5 = sub_100004828(&qword_100638C70);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10000806C(a1, v9);
  v11 = sub_100211328();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for DIPClientGUIDSeeds.CodingKeys, &type metadata for DIPClientGUIDSeeds.CodingKeys, v11, v9, v10);
  if (v2)
    return _s8coreidvd24DigitalPresentmentHelperVwxx_0(a1);
  v35 = 0;
  v12 = KeyedDecodingContainer.decode(_:forKey:)(&v35, v5);
  v14 = v13;
  v30 = v12;
  v34 = 1;
  swift_bridgeObjectRetain(v13);
  v15 = KeyedDecodingContainer.decode(_:forKey:)(&v34, v5);
  v31 = v16;
  v29 = v15;
  v33 = 2;
  swift_bridgeObjectRetain(v16);
  v27 = KeyedDecodingContainer.decode(_:forKey:)(&v33, v5);
  v28 = v17;
  v32 = 3;
  swift_bridgeObjectRetain(v17);
  v18 = KeyedDecodingContainer.decode(_:forKey:)(&v32, v5);
  v20 = v19;
  v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  v22 = v18;
  v21(v8, v5);
  swift_bridgeObjectRetain(v14);
  v23 = v31;
  swift_bridgeObjectRetain(v31);
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v23);
  _s8coreidvd24DigitalPresentmentHelperVwxx_0(a1);
  swift_bridgeObjectRelease(v20);
  v24 = v28;
  swift_bridgeObjectRelease(v28);
  swift_bridgeObjectRelease(v23);
  result = swift_bridgeObjectRelease(v14);
  *a2 = v30;
  a2[1] = v14;
  a2[2] = v29;
  a2[3] = v23;
  a2[4] = v27;
  a2[5] = v24;
  a2[6] = v22;
  a2[7] = v20;
  return result;
}

unint64_t sub_100211328()
{
  unint64_t result;

  result = qword_100638C78;
  if (!qword_100638C78)
  {
    result = swift_getWitnessTable(&unk_1005260CC, &type metadata for DIPClientGUIDSeeds.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100638C78);
  }
  return result;
}

uint64_t sub_10021136C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100004828(&qword_100638C90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002113B4(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

double sub_1002113CC(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 128) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_1002113E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100004828(&qword_100636670);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t destroy for DIPClientGUID(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[2]);
  swift_bridgeObjectRelease(a1[4]);
  swift_bridgeObjectRelease(a1[6]);
  swift_bridgeObjectRelease(a1[8]);
  swift_bridgeObjectRelease(a1[10]);
  swift_bridgeObjectRelease(a1[12]);
  swift_bridgeObjectRelease(a1[14]);
  return swift_bridgeObjectRelease(a1[16]);
}

uint64_t initializeWithCopy for DIPClientGUID(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  v8 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v8;
  v9 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v9;
  v10 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v10;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v10);
  return a1;
}

uint64_t assignWithCopy for DIPClientGUID(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v10 = *(_QWORD *)(a2 + 64);
  v11 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v12 = *(_QWORD *)(a2 + 80);
  v13 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 80) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v14 = *(_QWORD *)(a2 + 96);
  v15 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 96) = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  v16 = *(_QWORD *)(a2 + 112);
  v17 = *(_QWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 112) = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease(v17);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  v18 = *(_QWORD *)(a2 + 128);
  v19 = *(_QWORD *)(a1 + 128);
  *(_QWORD *)(a1 + 128) = v18;
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRelease(v19);
  return a1;
}

uint64_t assignWithTake for DIPClientGUID(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 64);
  v11 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v10;
  swift_bridgeObjectRelease(v11);
  v12 = *(_QWORD *)(a2 + 80);
  v13 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v12;
  swift_bridgeObjectRelease(v13);
  v14 = *(_QWORD *)(a2 + 96);
  v15 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v14;
  swift_bridgeObjectRelease(v15);
  v16 = *(_QWORD *)(a2 + 112);
  v17 = *(_QWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v16;
  swift_bridgeObjectRelease(v17);
  v18 = *(_QWORD *)(a2 + 128);
  v19 = *(_QWORD *)(a1 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v18;
  swift_bridgeObjectRelease(v19);
  return a1;
}

uint64_t getEnumTagSinglePayload for DIPClientGUID(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 136))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DIPClientGUID(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 136) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 136) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DIPClientGUID()
{
  return &type metadata for DIPClientGUID;
}

uint64_t storeEnumTagSinglePayload for DIPClientGUIDSeeds.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_100211828 + 4 * byte_100525ED9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_10021185C + 4 * byte_100525ED4[v4]))();
}

uint64_t sub_10021185C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100211864(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10021186CLL);
  return result;
}

uint64_t sub_100211878(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100211880);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_100211884(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10021188C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DIPClientGUIDSeeds.CodingKeys()
{
  return &type metadata for DIPClientGUIDSeeds.CodingKeys;
}

unint64_t sub_1002118AC()
{
  unint64_t result;

  result = qword_100638CA8;
  if (!qword_100638CA8)
  {
    result = swift_getWitnessTable(&unk_100526044, &type metadata for DIPClientGUIDSeeds.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100638CA8);
  }
  return result;
}

unint64_t sub_1002118F4()
{
  unint64_t result;

  result = qword_100638CB0;
  if (!qword_100638CB0)
  {
    result = swift_getWitnessTable(&unk_100525FB4, &type metadata for DIPClientGUIDSeeds.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100638CB0);
  }
  return result;
}

unint64_t sub_10021193C()
{
  unint64_t result;

  result = qword_100638CB8;
  if (!qword_100638CB8)
  {
    result = swift_getWitnessTable(&unk_100525FDC, &type metadata for DIPClientGUIDSeeds.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100638CB8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DIPClientGUID.GUIDSeedVersion(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1002119CC + 4 * byte_100525EE3[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100211A00 + 4 * byte_100525EDE[v4]))();
}

uint64_t sub_100211A00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100211A08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100211A10);
  return result;
}

uint64_t sub_100211A1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100211A24);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100211A28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100211A30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DIPClientGUID.GUIDSeedVersion()
{
  return &type metadata for DIPClientGUID.GUIDSeedVersion;
}

unint64_t sub_100211A50()
{
  unint64_t result;

  result = qword_100638CC0;
  if (!qword_100638CC0)
  {
    result = swift_getWitnessTable(&unk_1005261A4, &type metadata for DIPClientGUID.GUIDSeedVersion);
    atomic_store(result, (unint64_t *)&qword_100638CC0);
  }
  return result;
}

uint64_t sub_100211A94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  v4 = type metadata accessor for Logger(0);
  v3[8] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[9] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[10] = swift_task_alloc(v6);
  v3[11] = swift_task_alloc(v6);
  v3[12] = swift_task_alloc(v6);
  v3[13] = swift_task_alloc(v6);
  v3[14] = swift_task_alloc(v6);
  return swift_task_switch(sub_100211B2C, 0, 0);
}

uint64_t sub_100211B2C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = OBJC_IVAR____TtC8coreidvd38IdentityWatchSessionManagementListener_remoteSessionService;
  v0[15] = *(_QWORD *)(v0[7] + 16);
  v0[16] = v1;
  v2 = (_QWORD *)swift_task_alloc(dword_10062FE44);
  v0[17] = v2;
  *v2 = v0;
  v2[1] = sub_100211B8C;
  return sub_1000160E0();
}

uint64_t sub_100211B8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 136);
  *(_QWORD *)(*(_QWORD *)v1 + 144) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100211BE8, 0, 0);
}

uint64_t sub_100211BE8(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  unint64_t v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  Swift::String v35;
  Swift::String v36;
  void *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v2 = *(void **)(v1 + 144);
  if (v2)
  {
    v3 = *(_QWORD *)(v1 + 48);
    v4 = objc_msgSend(*(id *)(v1 + 144), "deviceID");

    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v7 = v6;

    defaultLogger()(v8);
    swift_bridgeObjectRetain_n(v3, 2);
    swift_bridgeObjectRetain(v7);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.debug.getter(v10);
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(_QWORD *)(v1 + 112);
    v14 = *(_QWORD *)(v1 + 64);
    v15 = *(_QWORD *)(v1 + 72);
    if (v12)
    {
      v43 = *(_QWORD *)(v1 + 112);
      v16 = *(_QWORD *)(v1 + 48);
      v40 = *(_QWORD *)(v1 + 40);
      v42 = *(_QWORD *)(v1 + 72);
      v17 = swift_slowAlloc(22, -1);
      v41 = swift_slowAlloc(64, -1);
      v44 = v41;
      *(_DWORD *)v17 = 136315394;
      swift_bridgeObjectRetain(v7);
      *(_QWORD *)(v1 + 24) = sub_1000E3AC8(v5, v7, &v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 24, v1 + 32, v17 + 4);
      swift_bridgeObjectRelease_n(v7, 3);
      *(_WORD *)(v17 + 12) = 2080;
      if (v16)
        v18 = v40;
      else
        v18 = 7104878;
      if (v16)
        v19 = v3;
      else
        v19 = 0xE300000000000000;
      swift_bridgeObjectRetain(v3);
      *(_QWORD *)(v1 + 32) = sub_1000E3AC8(v18, v19, &v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 32, v1 + 40, v17 + 14);
      swift_bridgeObjectRelease(v19);
      swift_bridgeObjectRelease_n(v3, 2);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Established session with watch with pairingID: %s, proofingMinWatchOSVersion: %s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy(v41, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v41, -1, -1);
      swift_slowDealloc(v17, -1, -1);

      v20 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
      v20(v43, v14);
    }
    else
    {
      swift_bridgeObjectRelease_n(v7, 2);
      swift_bridgeObjectRelease_n(v3, 2);

      v20 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
      v20(v13, v14);
    }
    *(_QWORD *)(v1 + 152) = v20;
    v33 = *(_QWORD *)(v1 + 120);
    v34 = *(_QWORD *)(v1 + 128);
    v35._countAndFlagsBits = 0x6638643237646131;
    v35._object = (void *)0xE800000000000000;
    v36._countAndFlagsBits = 0x7369206863746157;
    v36._object = (void *)0xEF64657269617020;
    logMilestone(tag:description:)(v35, v36);
    v37 = *(void **)(v33 + v34);
    *(_QWORD *)(v1 + 160) = v37;
    v38 = dword_10062FE4C;
    v37;
    v39 = (_QWORD *)swift_task_alloc(v38);
    *(_QWORD *)(v1 + 168) = v39;
    *v39 = v1;
    v39[1] = sub_100211FBC;
    return sub_1000171B0(*(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
  }
  else
  {
    v21 = defaultLogger()(a1);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.debug.getter(v22);
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "No watch is paired to the device", v24, 2u);
      swift_slowDealloc(v24, -1, -1);
    }
    v25 = *(_QWORD *)(v1 + 88);
    v26 = *(_QWORD *)(v1 + 64);
    v27 = *(_QWORD *)(v1 + 72);

    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
    v28 = *(_QWORD *)(v1 + 104);
    v30 = *(_QWORD *)(v1 + 88);
    v29 = *(_QWORD *)(v1 + 96);
    v31 = *(_QWORD *)(v1 + 80);
    swift_task_dealloc(*(_QWORD *)(v1 + 112));
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    return (*(uint64_t (**)(_QWORD))(v1 + 8))(0);
  }
}

uint64_t sub_100211FBC(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 168);
  *(_QWORD *)(*v2 + 176) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_10021219C;
  }
  else
  {

    *(_BYTE *)(v4 + 184) = a1 & 1;
    v6 = sub_10021203C;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_10021203C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  const char *v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = *(unsigned __int8 *)(v1 + 184);
  if ((_DWORD)v2 == 1)
  {
    v3 = (uint64_t *)(v1 + 104);
    v4 = defaultLogger()(a1);
    v5 = Logger.logObject.getter(v4);
    v6 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v7 = 0;
      v8 = "Watch is paired to the device and its preflight check is successful";
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v5, v6, v8, v7, 2u);
      swift_slowDealloc(v7, -1, -1);
    }
  }
  else
  {
    v3 = (uint64_t *)(v1 + 96);
    v9 = defaultLogger()(a1);
    v5 = Logger.logObject.getter(v9);
    v6 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v7 = 0;
      v8 = "Watch is paired to the device but it failed the preflight check";
      goto LABEL_6;
    }
  }
  v10 = *(void (**)(uint64_t, uint64_t))(v1 + 152);
  v11 = *v3;
  v12 = *(_QWORD *)(v1 + 64);

  v10(v11, v12);
  v13 = *(_QWORD *)(v1 + 104);
  v15 = *(_QWORD *)(v1 + 88);
  v14 = *(_QWORD *)(v1 + 96);
  v16 = *(_QWORD *)(v1 + 80);
  swift_task_dealloc(*(_QWORD *)(v1 + 112));
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(v2);
}

uint64_t sub_10021219C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 176);

  defaultLogger()(v2);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.debug.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(_QWORD *)(v0 + 176);
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v7 = 138412290;
    swift_errorRetain(v6);
    v9 = _swift_stdlib_bridgeErrorToNSError(v6);
    *(_QWORD *)(v0 + 16) = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v7 + 4);
    *v8 = v9;
    swift_errorRelease(v6);
    swift_errorRelease(v6);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Watch is paired to the device but it failed the preflight check: %@", v7, 0xCu);
    v10 = sub_100004828(&qword_1006308B0);
    swift_arrayDestroy(v8, 1, v10);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

    swift_errorRelease(v6);
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 176);
    swift_errorRelease(v11);
    swift_errorRelease(v11);
    swift_errorRelease(v11);

  }
  (*(void (**)(_QWORD, _QWORD))(v0 + 152))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 64));
  v12 = *(_QWORD *)(v0 + 104);
  v14 = *(_QWORD *)(v0 + 88);
  v13 = *(_QWORD *)(v0 + 96);
  v15 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 112));
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_100212378(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v3[10] = a2;
  v3[11] = v2;
  v3[9] = a1;
  v4 = type metadata accessor for DIPError.Code(0);
  v3[12] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[13] = v5;
  v3[14] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DIPError(0);
  v3[15] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[16] = v7;
  v3[17] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Logger(0);
  v3[18] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v3[19] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[20] = swift_task_alloc(v10);
  v3[21] = swift_task_alloc(v10);
  v3[22] = swift_task_alloc(v10);
  v3[23] = swift_task_alloc(v10);
  return swift_task_switch(sub_100212454, 0, 0);
}

uint64_t sub_100212454()
{
  uint64_t *v0;
  uint64_t **v1;

  v0[24] = *(_QWORD *)(v0[11] + 16);
  v1 = (uint64_t **)swift_task_alloc(dword_10063EC44);
  v0[25] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = (uint64_t *)sub_1002124AC;
  return sub_1003A800C(v0[9], v0[10]);
}

uint64_t sub_1002124AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(*v3 + 200);
  v5 = *v3;
  *(_QWORD *)(v5 + 208) = a1;
  *(_QWORD *)(v5 + 216) = a2;
  *(_QWORD *)(v5 + 224) = v2;
  swift_task_dealloc(v4);
  if (!v2)
    return swift_task_switch(sub_100212578, 0, 0);
  v6 = *(_QWORD *)(v5 + 176);
  v8 = *(_QWORD *)(v5 + 160);
  v7 = *(_QWORD *)(v5 + 168);
  v9 = *(_QWORD *)(v5 + 136);
  v10 = *(_QWORD *)(v5 + 112);
  swift_task_dealloc(*(_QWORD *)(v5 + 184));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_100212578()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(uint64_t);
  uint64_t v67[2];

  v1 = objc_msgSend(*(id *)(v0 + 208), "credentialAccessibilityEnabled");
  if ((_DWORD)v1)
  {
    v2 = (id)stringsArrayFromNPKIDVRemoteDeviceServiceEvents(8);
    v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, &type metadata for String);
    *(_QWORD *)(v0 + 232) = v3;

    defaultLogger()(v4);
    v5 = swift_bridgeObjectRetain_n(v3, 2);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.debug.getter(v6);
    v8 = os_log_type_enabled(v6, v7);
    v9 = *(_QWORD *)(v0 + 184);
    v10 = *(_QWORD *)(v0 + 144);
    v11 = *(_QWORD *)(v0 + 152);
    if (v8)
    {
      v63 = *(_QWORD *)(v0 + 152);
      v12 = (uint8_t *)swift_slowAlloc(12, -1);
      v13 = swift_slowAlloc(32, -1);
      v67[0] = v13;
      *(_DWORD *)v12 = 136315138;
      swift_bridgeObjectRetain(v3);
      v15 = Array.description.getter(v14, &type metadata for String);
      v62 = v10;
      v17 = v16;
      swift_bridgeObjectRelease(v3);
      *(_QWORD *)(v0 + 64) = sub_1000E3AC8(v15, v17, v67);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 64, v0 + 72, v12 + 4);
      swift_bridgeObjectRelease(v17);
      swift_bridgeObjectRelease_n(v3, 2);
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Phone's accessibility is enabled, trying to unregister for event: %s", v12, 0xCu);
      swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);

      v18 = *(void (**)(uint64_t, uint64_t))(v63 + 8);
      v18(v9, v62);
    }
    else
    {
      swift_bridgeObjectRelease_n(v3, 2);

      v18 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
      v18(v9, v10);
    }
    *(_QWORD *)(v0 + 240) = v18;
    v66 = (uint64_t (*)(uint64_t))((char *)&dword_10063EE18 + dword_10063EE18);
    v31 = (_QWORD *)swift_task_alloc(unk_10063EE1C);
    *(_QWORD *)(v0 + 248) = v31;
    *v31 = v0;
    v31[1] = sub_100212B48;
    return v66(v3);
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 80);
    defaultLogger()(v1);
    v20 = swift_bridgeObjectRetain_n(v19, 2);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.debug.getter(v21);
    v23 = os_log_type_enabled(v21, v22);
    v25 = *(_QWORD *)(v0 + 152);
    v24 = *(_QWORD *)(v0 + 160);
    v26 = *(_QWORD *)(v0 + 144);
    v27 = *(_QWORD *)(v0 + 80);
    if (v23)
    {
      v28 = *(_QWORD *)(v0 + 72);
      v65 = *(_QWORD *)(v0 + 144);
      v64 = *(_QWORD *)(v0 + 160);
      v29 = (uint8_t *)swift_slowAlloc(12, -1);
      v30 = swift_slowAlloc(32, -1);
      v67[0] = v30;
      *(_DWORD *)v29 = 136315138;
      swift_bridgeObjectRetain(v27);
      *(_QWORD *)(v0 + 40) = sub_1000E3AC8(v28, v27, v67);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48, v29 + 4);
      swift_bridgeObjectRelease_n(v27, 3);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Trying to persist prearm trust key and certificate for watch with pairingID: %s", v29, 0xCu);
      swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v30, -1, -1);
      swift_slowDealloc(v29, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v64, v65);
    }
    else
    {
      swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 80), 2);

      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
    }
    v33 = *(_QWORD *)(v0 + 224);
    v34 = type metadata accessor for IdentityProofingDataContext();
    swift_allocObject(v34, 24, 7);
    sub_1000D6044();
    v36 = v33;
    if (v33)
    {
      v43 = *(void **)(v0 + 208);
      v45 = *(_QWORD *)(v0 + 112);
      v44 = *(_QWORD *)(v0 + 120);
      v46 = *(_QWORD *)(v0 + 96);
      v47 = *(_QWORD *)(v0 + 104);
      swift_bridgeObjectRelease(*(_QWORD *)(v0 + 216));
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v47 + 104))(v45, enum case for DIPError.Code.internalError(_:), v46);
      swift_errorRetain(v36);
      v48 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
      v49 = sub_100007F30();
      swift_allocError(v44, v49, 0, 0);
      v50 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, v36, v45, 0, v48, 0xD00000000000007CLL, 0x80000001005555E0, 0xD000000000000020, 0x8000000100555660, 81);
      swift_willThrow(v50);
      swift_errorRelease(v36);

      v51 = *(_QWORD *)(v0 + 176);
      v53 = *(_QWORD *)(v0 + 160);
      v52 = *(_QWORD *)(v0 + 168);
      v54 = *(_QWORD *)(v0 + 136);
      v55 = *(_QWORD *)(v0 + 112);
      swift_task_dealloc(*(_QWORD *)(v0 + 184));
      swift_task_dealloc(v51);
      swift_task_dealloc(v52);
      swift_task_dealloc(v53);
      swift_task_dealloc(v54);
      swift_task_dealloc(v55);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    else
    {
      v37 = v35;
      v38 = *(void **)(v0 + 208);
      v40 = *(_QWORD *)(v0 + 72);
      v39 = *(_QWORD *)(v0 + 80);
      v41 = (_QWORD *)swift_allocObject(&unk_10060BB00, 48, 7);
      v41[2] = v37;
      v41[3] = v40;
      v41[4] = v39;
      v41[5] = v38;
      swift_bridgeObjectRetain(v39);
      swift_retain(v37);
      v42 = v38;
      sub_1000D6570((uint64_t)sub_10021383C, (uint64_t)v41);
      v56 = *(void **)(v0 + 208);
      swift_release(v41);
      swift_release(v37);

      v57 = *(_QWORD *)(v0 + 176);
      v59 = *(_QWORD *)(v0 + 160);
      v58 = *(_QWORD *)(v0 + 168);
      v60 = *(_QWORD *)(v0 + 136);
      v61 = *(_QWORD *)(v0 + 112);
      swift_task_dealloc(*(_QWORD *)(v0 + 184));
      swift_task_dealloc(v57);
      swift_task_dealloc(v58);
      swift_task_dealloc(v59);
      swift_task_dealloc(v60);
      swift_task_dealloc(v61);
      return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 216));
    }
  }
}

uint64_t sub_100212B48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 248);
  v3[32] = a1;
  v3[33] = v1;
  swift_task_dealloc(v4);
  swift_bridgeObjectRelease(v3[29]);
  if (v1)
    v5 = sub_100212DE8;
  else
    v5 = sub_100212BBC;
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_100212BBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;

  v2 = *(_QWORD *)(v1 + 256);
  defaultLogger()(a1);
  swift_bridgeObjectRetain(v2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.debug.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(_QWORD *)(v1 + 256);
    v25 = *(_QWORD *)(v1 + 176);
    v26 = *(void (**)(uint64_t, uint64_t))(v1 + 240);
    v23 = *(void **)(v1 + 208);
    v24 = *(_QWORD *)(v1 + 144);
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v27 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_bridgeObjectRetain(v6);
    v10 = Array.description.getter(v9, &type metadata for String);
    v12 = v11;
    swift_bridgeObjectRelease(v6);
    *(_QWORD *)(v1 + 56) = sub_1000E3AC8(v10, v12, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 56, v1 + 64, v7 + 4);
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease_n(v6, 2);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Successfully unregistered for watch prearm event, current registered events: %s", v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

    v26(v25, v24);
  }
  else
  {
    v13 = *(void (**)(uint64_t, uint64_t))(v1 + 240);
    v14 = *(void **)(v1 + 208);
    v15 = *(_QWORD *)(v1 + 176);
    v16 = *(_QWORD *)(v1 + 144);
    swift_bridgeObjectRelease_n(*(_QWORD *)(v1 + 256), 2);

    v13(v15, v16);
  }
  v17 = *(_QWORD *)(v1 + 176);
  v19 = *(_QWORD *)(v1 + 160);
  v18 = *(_QWORD *)(v1 + 168);
  v20 = *(_QWORD *)(v1 + 136);
  v21 = *(_QWORD *)(v1 + 112);
  swift_task_dealloc(*(_QWORD *)(v1 + 184));
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  return (*(uint64_t (**)(_QWORD))(v1 + 8))(*(_QWORD *)(v1 + 216));
}

uint64_t sub_100212DE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::String v7;
  Swift::String v8;
  void *object;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 136);
  v24 = *(_QWORD *)(v0 + 144);
  v25 = *(void (**)(uint64_t, uint64_t))(v0 + 240);
  v4 = *(_QWORD *)(v0 + 120);
  v22 = *(_QWORD *)(v0 + 128);
  v23 = *(void **)(v0 + 208);
  v5 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 112);
  v21 = *(_QWORD *)(v0 + 96);
  _StringGuts.grow(_:)(58);
  v7._countAndFlagsBits = 0xD000000000000038;
  v7._object = (void *)0x8000000100555690;
  String.append(_:)(v7);
  swift_getErrorValue(v1, v0 + 48, v0 + 16);
  v8._countAndFlagsBits = Error.localizedDescription.getter(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  object = v8._object;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(object);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v6, enum case for DIPError.Code.watchEventUnregistrationError(_:), v21);
  v10 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, 0, v6, 0, v10, 0xD00000000000007CLL, 0x80000001005555E0, 0xD000000000000020, 0x8000000100555660, 60);
  v11 = sub_100007F30();
  v12 = swift_allocError(v4, v11, 0, 0);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v13, v3, v4);
  defaultLogger()(v14);
  DIPRecordError(_:message:log:)(v12, 0, 0xE000000000000000, v2);
  swift_errorRelease(v1);

  v25(v2, v24);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v3, v4);
  swift_errorRelease(v12);
  v15 = *(_QWORD *)(v0 + 176);
  v17 = *(_QWORD *)(v0 + 160);
  v16 = *(_QWORD *)(v0 + 168);
  v18 = *(_QWORD *)(v0 + 136);
  v19 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 184));
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 216));
}

void sub_100213024(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  NSString v14;
  id v15;
  uint64_t v16;
  void *v17;
  NSString v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  Class isa;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  Class v28;
  id v29;
  char *v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000D7A7C(a2, a3);
  if (!v4)
  {
    v38 = v9;
    v39 = v12;
    v37 = v10;
    v13 = (void *)objc_opt_self(NSEntityDescription);
    v14 = String._bridgeToObjectiveC()();
    v15 = objc_msgSend(v13, "insertNewObjectForEntityForName:inManagedObjectContext:", v14, *(_QWORD *)(a1 + 16));

    v16 = type metadata accessor for StoredPrearmTrust(0);
    v40 = v15;
    v17 = (void *)swift_dynamicCastClassUnconditional(v15, v16, 0, 0, 0);
    v18 = String._bridgeToObjectiveC()();
    objc_msgSend(v17, "setPairingID:", v18);

    v19 = objc_msgSend(a4, "credentialKeyBlob");
    v20 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v19);
    v22 = v21;

    isa = Data._bridgeToObjectiveC()().super.isa;
    sub_100007F8C(v20, v22);
    objc_msgSend(v17, "setKeyBlob:", isa);

    v24 = objc_msgSend(a4, "credentialBAACertificate");
    v25 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v24);
    v27 = v26;

    v28 = Data._bridgeToObjectiveC()().super.isa;
    sub_100007F8C(v25, v27);
    objc_msgSend(v17, "setBaaCertificate:", v28);

    objc_msgSend(v17, "setRequiresDeletion:", 0);
    objc_msgSend(v17, "setVersion:", 2);
    v29 = sub_1000D6288();
    v30 = v39;
    defaultLogger()(v29);
    v31 = swift_bridgeObjectRetain_n(a3, 2);
    v32 = Logger.logObject.getter(v31);
    v33 = static os_log_type_t.debug.getter(v32);
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc(12, -1);
      v35 = swift_slowAlloc(32, -1);
      v43 = v35;
      *(_DWORD *)v34 = 136315138;
      swift_bridgeObjectRetain(a3);
      v41 = sub_1000E3AC8(a2, (unint64_t)a3, &v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v34 + 4);
      swift_bridgeObjectRelease_n(a3, 3);
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "Successfully persisted prearm trust key and certificate for watch with pairingID: %s", v34, 0xCu);
      swift_arrayDestroy(v35, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v35, -1, -1);
      swift_slowDealloc(v34, -1, -1);

      (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v38);
    }
    else
    {

      swift_bridgeObjectRelease_n(a3, 2);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v30, v38);
    }
  }
}

uint64_t sub_1002133E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  v4 = type metadata accessor for Logger(0);
  v3[7] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[8] = v5;
  v3[9] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100213444, 0, 0);
}

uint64_t sub_100213444()
{
  _QWORD *v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  uint64_t v27;

  v1 = v0[5];
  v2 = objc_retain(*(id *)(*(_QWORD *)(v0[6] + 16)
                         + OBJC_IVAR____TtC8coreidvd38IdentityWatchSessionManagementListener_remoteSessionService));
  v3 = (id)stringsArrayFromNPKIDVRemoteDeviceServiceEvents(63);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, &type metadata for String);
  v0[10] = v4;

  defaultLogger()(v5);
  swift_bridgeObjectRetain_n(v4, 2);
  v6 = swift_bridgeObjectRetain_n(v1, 2);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v23 = v0[8];
    v24 = v0[7];
    v25 = v0[9];
    v9 = v0[5];
    v21 = v0[4];
    v10 = swift_slowAlloc(22, -1);
    v22 = swift_slowAlloc(64, -1);
    v27 = v22;
    *(_DWORD *)v10 = 136315394;
    swift_bridgeObjectRetain(v4);
    v12 = Array.description.getter(v11, &type metadata for String);
    v14 = v13;
    swift_bridgeObjectRelease(v4);
    v0[2] = sub_1000E3AC8(v12, v14, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 2, v0 + 3, v10 + 4);
    swift_bridgeObjectRelease(v14);
    swift_bridgeObjectRelease_n(v4, 2);
    *(_WORD *)(v10 + 12) = 2080;
    swift_bridgeObjectRetain(v9);
    v0[3] = sub_1000E3AC8(v21, v9, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 3, v0 + 4, v10 + 14);
    swift_bridgeObjectRelease_n(v9, 3);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Trying to register for watch events : %s with pairingID : %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy(v22, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v24);
  }
  else
  {
    v16 = v0[8];
    v15 = v0[9];
    v17 = v0[7];
    v18 = v0[5];
    swift_bridgeObjectRelease_n(v4, 2);
    swift_bridgeObjectRelease_n(v18, 2);

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  }
  v26 = (uint64_t (*)(uint64_t))((char *)&dword_10063EDF8 + dword_10063EDF8);
  v19 = (_QWORD *)swift_task_alloc(unk_10063EDFC);
  v0[11] = v19;
  *v19 = v0;
  v19[1] = sub_100213710;
  return v26(v4);
}

uint64_t sub_100213710(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(*v2 + 80);
  v4 = *(_QWORD *)(*v2 + 88);
  v6 = *v2;
  *(_QWORD *)(v6 + 96) = v1;
  swift_task_dealloc(v4);
  swift_bridgeObjectRelease(v5);
  if (v1)
    return swift_task_switch(sub_1002137A0, 0, 0);
  swift_task_dealloc(*(_QWORD *)(v6 + 72));
  return (*(uint64_t (**)(uint64_t))(v6 + 8))(a1);
}

uint64_t sub_1002137A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 72);
  swift_willThrow(a1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t type metadata accessor for IdentityProofingWatchProvider()
{
  return objc_opt_self(_TtC8coreidvd29IdentityProofingWatchProvider);
}

uint64_t sub_100213808()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

void sub_10021383C()
{
  uint64_t v0;

  sub_100213024(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_100213858()
{
  id v0;
  NSString v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "stringForKey:", v1);

  if (!v2)
    return 0;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v5 = v4;

  if (v3 == 0x797469746E656469 && v5 == 0xEC00000074736554)
  {
    swift_bridgeObjectRelease(0xEC00000074736554);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, 0x797469746E656469, 0xEC00000074736554, 0);
    swift_bridgeObjectRelease(v5);
    return v7 & 1;
  }
}

uint64_t sub_100213988(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t CanRequestDocumentAnalyticsRecorder;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v2[3] = a1;
  v2[4] = v1;
  v3 = type metadata accessor for DIPError.Code(0);
  v2[5] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[6] = v4;
  v2[7] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100004828(&qword_100630DE0);
  v2[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  CanRequestDocumentAnalyticsRecorder = type metadata accessor for DigitalPresentmentCanRequestDocumentAnalyticsRecorder(0);
  v2[9] = CanRequestDocumentAnalyticsRecorder;
  v2[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(CanRequestDocumentAnalyticsRecorder - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DIPSignpost.Config(0);
  v2[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DIPSignpost(0);
  v2[12] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[13] = v9;
  v2[14] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DigitalPresentmentDocumentType(0);
  v2[15] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v2[16] = v11;
  v2[17] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for IdentityDocumentDescriptor(0);
  v2[18] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v2[19] = v13;
  v2[20] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Logger(0);
  v2[21] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v2[22] = v15;
  v16 = (*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[23] = swift_task_alloc(v16);
  v2[24] = swift_task_alloc(v16);
  v2[25] = swift_task_alloc(v16);
  v2[26] = swift_task_alloc(v16);
  v2[27] = swift_task_alloc(v16);
  return swift_task_switch(sub_100213B24, v1, 0);
}

uint64_t sub_100213B24(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  int *v39;
  _BYTE *v40;
  _QWORD *v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;
  Swift::String v69;
  Swift::String v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  _BOOL8 v77;
  uint64_t v78;
  NSObject *v79;
  os_log_type_t v80;
  uint8_t *v81;
  uint64_t v82;
  uint64_t v83;
  Swift::String v84;
  Swift::String v85;
  uint64_t v86;
  NSObject *v87;
  os_log_type_t v88;
  uint8_t *v89;
  uint64_t v90;
  uint64_t v91;
  Swift::String v92;
  Swift::String v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  os_log_type_t type;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t (*v106)(uint64_t, uint64_t, uint64_t);
  uint64_t v107;
  void (*v108)(uint64_t, uint64_t);
  void (*v109)(uint64_t, uint64_t);
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  unsigned int v113;
  _BYTE *v114;
  uint64_t v115;

  v2 = defaultLogger()(a1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.debug.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "DigitalPresentmentFlow canRequestDocument called", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v111 = v1;
  v7 = v1 + 3;
  v6 = v1[3];
  v8 = v7[24];
  v9 = v7[18];
  v10 = v7[19];
  v11 = v7[16];
  v12 = v7[17];
  v13 = v7[15];

  v14 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v14(v8, v9);
  v15._countAndFlagsBits = 0xD000000000000026;
  v15._object = (void *)0x8000000100555D20;
  v16._countAndFlagsBits = 0x3236366336646335;
  v16._object = (void *)0xE800000000000000;
  logMilestone(tag:description:)(v16, v15);
  defaultLogger()(v17);
  v106 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
  v18 = v106(v12, v6, v13);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.debug.getter(v19);
  v21 = os_log_type_enabled(v19, v20);
  v22 = v7[23];
  v24 = v7[17];
  v23 = v7[18];
  if (v21)
  {
    v101 = v7[23];
    v103 = v7[18];
    v25 = v111;
    v96 = v7[15];
    v26 = v111[17];
    v94 = v111[16];
    v95 = v7[16];
    v108 = v14;
    v27 = v111[15];
    type = v20;
    v28 = (uint8_t *)swift_slowAlloc(12, -1);
    v98 = swift_slowAlloc(32, -1);
    v115 = v98;
    *(_DWORD *)v28 = 136315138;
    IdentityDocumentDescriptor.documentType.getter(v98);
    v29 = sub_100004790(&qword_1006334F8, (uint64_t (*)(uint64_t))&type metadata accessor for DigitalPresentmentDocumentType, (uint64_t)&protocol conformance descriptor for DigitalPresentmentDocumentType);
    v30 = dispatch thunk of CustomStringConvertible.description.getter(v27, v29);
    v32 = v31;
    v33 = v27;
    v14 = v108;
    (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v26, v33);
    v111[2] = sub_1000E3AC8(v30, v32, &v115);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v111 + 2, v7, v28 + 4);
    swift_bridgeObjectRelease(v32);
    (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v24, v96);
    _os_log_impl((void *)&_mh_execute_header, v19, type, "canRequestDocument documentType %s", v28, 0xCu);
    swift_arrayDestroy(v98, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v98, -1, -1);
    swift_slowDealloc(v28, -1, -1);

    v34 = ((uint64_t (*)(uint64_t, uint64_t))v108)(v101, v103);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v7[16] + 8))(v7[17], v7[15]);

    v34 = ((uint64_t (*)(uint64_t, uint64_t))v14)(v22, v23);
    v25 = v111;
  }
  v35 = v25[11];
  static DaemonSignposts.canRequestDocument.getter(v34);
  DIPSignpost.init(_:)(v35);
  sub_10021F8BC();
  v109 = v14;
  v37 = v25[18];
  v36 = v25[19];
  v38 = v25;
  v41 = v25 + 9;
  v39 = (int *)v25[9];
  v40 = (_BYTE *)v41[1];
  v104 = v38[4];
  v112 = v38[3];
  *v40 = 0;
  v42 = (uint64_t)&v40[v39[5]];
  v43 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56);
  v43(v42, 1, 1, v37);
  v44 = (uint64_t)&v40[v39[6]];
  v45 = type metadata accessor for DigitalPresentmentCallingClientConfig(0);
  v46 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56);
  v46(v44, 1, 1, v45);
  v47 = v39[7];
  *((_DWORD *)v38 + 60) = v47;
  v40[v47] = 0;
  v40[v39[8]] = 0;
  v99 = v39[9];
  v40[v99] = 0;
  v48 = v39[10];
  *((_DWORD *)v38 + 61) = v48;
  v40[v48] = 0;
  v49 = v39[11];
  v50 = v40;
  v51 = &v40[v49];
  v51[3] = type metadata accessor for BundleRecordFetcher(0);
  v51[4] = &protocol witness table for BundleRecordFetcher;
  v52 = sub_100022234(v51);
  BundleRecordFetcher.init()(v52);
  sub_100008030(v44, &qword_100630AB8);
  v53 = v104 + OBJC_IVAR____TtC8coreidvd22DigitalPresentmentFlow_callingClientConfig;
  sub_100035DE8(v104 + OBJC_IVAR____TtC8coreidvd22DigitalPresentmentFlow_callingClientConfig, v44, type metadata accessor for DigitalPresentmentCallingClientConfig);
  v46(v44, 0, 1, v45);
  sub_100008030(v42, &qword_100630AB0);
  v106(v42, v112, v37);
  v43(v42, 0, 1, v37);
  v54 = (uint64_t *)(v53 + *(int *)(v45 + 24));
  v56 = *v54;
  v55 = v54[1];
  v57 = v54[2];
  swift_bridgeObjectRetain(*v54);
  swift_bridgeObjectRetain(v55);
  swift_bridgeObjectRetain(v57);
  sub_1000C5EDC(v56, v55);
  v114 = v50;
  v68 = v38[4];
  swift_bridgeObjectRelease(v56);
  swift_bridgeObjectRelease(v55);
  swift_bridgeObjectRelease(v57);
  v69._countAndFlagsBits = 0xD000000000000035;
  v69._object = (void *)0x8000000100555DD0;
  v70._countAndFlagsBits = 0x6637633566383730;
  v70._object = (void *)0xE800000000000000;
  logMilestone(tag:description:)(v70, v69);
  v71 = v38;
  if ((*(_BYTE *)(v68 + OBJC_IVAR____TtC8coreidvd22DigitalPresentmentFlow_shouldPresentTestMDL) & 1) != 0)
  {
    sub_1000C40B0(v38[8]);
    v73 = v38[8];
    v74 = type metadata accessor for ISO18013KnownDocTypes(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v73, 0, 1, v74);
    v75 = sub_100214918(v73);
    sub_100008030(v73, &qword_100630DE0);
    v76 = 0;
    if ((v75 & 1) == 0)
    {
      *(_BYTE *)v38[10] = 1;
      v77 = sub_10021F58C();
      if (v77)
      {
        v78 = defaultLogger()(v77);
        v79 = Logger.logObject.getter(v78);
        v80 = static os_log_type_t.debug.getter(v79);
        if (os_log_type_enabled(v79, v80))
        {
          v81 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v81 = 0;
          _os_log_impl((void *)&_mh_execute_header, v79, v80, "In test mDL Presentment mode, setting canRequestDocument to true", v81, 2u);
          swift_slowDealloc(v81, -1, -1);
        }
        v82 = v38[24];
        v83 = v38[21];

        v109(v82, v83);
        v76 = 1;
        v114[v48] = 1;
        v84._countAndFlagsBits = 0xD00000000000002ALL;
        v84._object = (void *)0x8000000100555EF0;
        v85._countAndFlagsBits = 0x3562313830613065;
        v85._object = (void *)0xE800000000000000;
        logMilestone(tag:description:)(v85, v84);
      }
      else
      {
        v86 = defaultLogger()(v77);
        v87 = Logger.logObject.getter(v86);
        v88 = static os_log_type_t.error.getter(v87);
        if (os_log_type_enabled(v87, v88))
        {
          v89 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v89 = 0;
          _os_log_impl((void *)&_mh_execute_header, v87, v88, "Device must be signed in and have a passcode set to perform test mDL presentment", v89, 2u);
          swift_slowDealloc(v89, -1, -1);
        }
        v90 = v38[23];
        v91 = v38[21];

        v109(v90, v91);
        v92._countAndFlagsBits = 0xD00000000000003ELL;
        v92._object = (void *)0x8000000100555EB0;
        v93._countAndFlagsBits = 0x3463646265353431;
        v93._object = (void *)0xE800000000000000;
        logMilestone(tag:description:)(v93, v92);
        v76 = 0;
        v114[v99] = 1;
      }
    }
    v113 = v76;
    v59 = v38[26];
    v58 = v38[27];
    v61 = v38[24];
    v60 = v38[25];
    v62 = v38[23];
    v100 = v71[20];
    v102 = v71[17];
    v63 = v71[13];
    v64 = v71[14];
    v65 = v71[12];
    v66 = v71[10];
    v105 = v71[11];
    v107 = v71[8];
    v110 = v71[7];
    sub_100038228();
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v64, v65);
    sub_100035DAC(v66, type metadata accessor for DigitalPresentmentCanRequestDocumentAnalyticsRecorder);
    swift_task_dealloc(v58);
    swift_task_dealloc(v59);
    swift_task_dealloc(v60);
    swift_task_dealloc(v61);
    swift_task_dealloc(v62);
    swift_task_dealloc(v100);
    swift_task_dealloc(v102);
    swift_task_dealloc(v64);
    swift_task_dealloc(v105);
    swift_task_dealloc(v66);
    swift_task_dealloc(v107);
    swift_task_dealloc(v110);
    return ((uint64_t (*)(_QWORD))v71[1])(v113);
  }
  else
  {
    v72 = (_QWORD *)swift_task_alloc(dword_100638E14);
    v38[28] = v72;
    *v72 = v38;
    v72[1] = sub_100214504;
    return sub_100214DCC(v38[3]);
  }
}

uint64_t sub_100214504(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 224);
  *(_BYTE *)(v3 + 248) = a1;
  *(_QWORD *)(v3 + 232) = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_10021472C;
  else
    v5 = sub_100214574;
  return swift_task_switch(v5, *(_QWORD *)(v3 + 32), 0);
}

uint64_t sub_100214574()
{
  uint64_t v0;
  Swift::String v1;
  Swift::String v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;

  if (*(_BYTE *)(v0 + 248) == 1)
  {
    *(_BYTE *)(*(_QWORD *)(v0 + 80) + *(int *)(v0 + 244)) = 1;
    v1._object = (void *)0x8000000100555E70;
    v2._countAndFlagsBits = 0x3165643733616139;
    v2._object = (void *)0xE800000000000000;
    v1._countAndFlagsBits = 0xD000000000000036;
    logMilestone(tag:description:)(v2, v1);
    DIPSignpost.end(workflowID:isBackground:)((Swift::String_optional)0, (Swift::Bool_optional)2);
  }
  else
  {
    *(_BYTE *)(*(_QWORD *)(v0 + 80) + *(int *)(v0 + 240)) = 1;
    v3._countAndFlagsBits = 0xD00000000000003ALL;
    v3._object = (void *)0x8000000100555E30;
    v4._countAndFlagsBits = 0x3666656661613465;
    v4._object = (void *)0xE800000000000000;
    logMilestone(tag:description:)(v4, v3);
  }
  v20 = *(unsigned __int8 *)(v0 + 248);
  v6 = *(_QWORD *)(v0 + 208);
  v5 = *(_QWORD *)(v0 + 216);
  v8 = *(_QWORD *)(v0 + 192);
  v7 = *(_QWORD *)(v0 + 200);
  v9 = *(_QWORD *)(v0 + 184);
  v15 = *(_QWORD *)(v0 + 160);
  v16 = *(_QWORD *)(v0 + 136);
  v10 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 112);
  v12 = *(_QWORD *)(v0 + 96);
  v13 = *(_QWORD *)(v0 + 80);
  v17 = *(_QWORD *)(v0 + 88);
  v18 = *(_QWORD *)(v0 + 64);
  v19 = *(_QWORD *)(v0 + 56);
  sub_100038228();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v12);
  sub_100035DAC(v13, type metadata accessor for DigitalPresentmentCanRequestDocumentAnalyticsRecorder);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v11);
  swift_task_dealloc(v17);
  swift_task_dealloc(v13);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(v20);
}

uint64_t sub_10021472C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 56);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 104))(v6, enum case for DIPError.Code.internalError(_:), *(_QWORD *)(v0 + 40));
  swift_errorRetain(v1);
  v7 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
  v8 = type metadata accessor for DIPError(0);
  v9 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
  swift_allocError(v8, v9, 0, 0);
  v10 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, v1, v6, 0, v7, 0xD00000000000006DLL, 0x8000000100555820, 0xD00000000000001FLL, 0x8000000100555E10, 163);
  swift_willThrow(v10);
  swift_errorRelease(v1);
  sub_100038228();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_100035DAC(v5, type metadata accessor for DigitalPresentmentCanRequestDocumentAnalyticsRecorder);
  v11 = *(_QWORD *)(v0 + 208);
  v13 = *(_QWORD *)(v0 + 192);
  v12 = *(_QWORD *)(v0 + 200);
  v14 = *(_QWORD *)(v0 + 184);
  v15 = *(_QWORD *)(v0 + 160);
  v16 = *(_QWORD *)(v0 + 136);
  v17 = *(_QWORD *)(v0 + 112);
  v18 = *(_QWORD *)(v0 + 80);
  v19 = *(_QWORD *)(v0 + 88);
  v21 = *(_QWORD *)(v0 + 64);
  v22 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v19);
  swift_task_dealloc(v18);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_100214918(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t, uint64_t);
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  uint64_t v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  os_log_type_t v47;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;

  v53 = (char *)a1;
  v1 = type metadata accessor for Logger(0);
  v51 = *(_QWORD *)(v1 - 8);
  v52 = v1;
  v2 = __chkstk_darwin(v1);
  v50 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v5 = (char *)&v49 - v4;
  v54 = type metadata accessor for ISO18013KnownDocTypes(0);
  v6 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin(v54);
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100004828(&qword_100639070);
  __chkstk_darwin(v9);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100004828(&qword_100630DE0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v49 - v17;
  __chkstk_darwin(v16);
  v20 = (char *)&v49 - v19;
  v21 = byte_100670060;
  sub_100038B24((uint64_t)v53, (uint64_t)&v49 - v19, &qword_100630DE0);
  if ((v21 & 1) != 0)
  {
    v22 = sub_100008030((uint64_t)v20, &qword_100630DE0);
    v24 = v51;
    v23 = v52;
    goto LABEL_9;
  }
  v25 = (uint64_t)v15;
  v49 = v8;
  v53 = v5;
  v26 = v54;
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v18, enum case for ISO18013KnownDocTypes.japanNationalIDCard(_:), v54);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v18, 0, 1, v26);
  v27 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_100038B24((uint64_t)v20, (uint64_t)v11, &qword_100630DE0);
  sub_100038B24((uint64_t)v18, v27, &qword_100630DE0);
  v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v28((uint64_t)v11, 1, v26) == 1)
  {
    sub_100008030((uint64_t)v18, &qword_100630DE0);
    sub_100008030((uint64_t)v20, &qword_100630DE0);
    v29 = v28(v27, 1, v54);
    v24 = v51;
    v23 = v52;
    if (v29 == 1)
    {
      v22 = sub_100008030((uint64_t)v11, &qword_100630DE0);
LABEL_13:
      v31 = (uint64_t)v53;
      v45 = defaultLogger()(v22);
      v33 = Logger.logObject.getter(v45);
      v47 = static os_log_type_t.info.getter(v33, v46);
      if (!os_log_type_enabled(v33, v47))
      {
        v37 = 1;
        goto LABEL_16;
      }
      v36 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, v33, v47, "nationalIDCardForCustomerBuild: Returning true", v36, 2u);
      v37 = 1;
      goto LABEL_15;
    }
    goto LABEL_8;
  }
  v30 = v25;
  sub_100038B24((uint64_t)v11, v25, &qword_100630DE0);
  if (v28(v27, 1, v54) == 1)
  {
    sub_100008030((uint64_t)v18, &qword_100630DE0);
    sub_100008030((uint64_t)v20, &qword_100630DE0);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v25, v54);
    v24 = v51;
    v23 = v52;
LABEL_8:
    v22 = sub_100008030((uint64_t)v11, &qword_100639070);
    goto LABEL_9;
  }
  v38 = v6;
  v39 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 32);
  v40 = v49;
  v41 = v54;
  v39(v49, v27, v54);
  v42 = sub_100004790(&qword_100639078, (uint64_t (*)(uint64_t))&type metadata accessor for ISO18013KnownDocTypes, (uint64_t)&protocol conformance descriptor for ISO18013KnownDocTypes);
  v43 = dispatch thunk of static Equatable.== infix(_:_:)(v30, v40, v41, v42);
  v44 = *(void (**)(char *, uint64_t))(v38 + 8);
  v44(v40, v41);
  sub_100008030((uint64_t)v18, &qword_100630DE0);
  sub_100008030((uint64_t)v20, &qword_100630DE0);
  v44((char *)v30, v41);
  v22 = sub_100008030((uint64_t)v11, &qword_100630DE0);
  v24 = v51;
  v23 = v52;
  if ((v43 & 1) != 0)
    goto LABEL_13;
LABEL_9:
  v31 = (uint64_t)v50;
  v32 = defaultLogger()(v22);
  v33 = Logger.logObject.getter(v32);
  v35 = static os_log_type_t.info.getter(v33, v34);
  if (os_log_type_enabled(v33, v35))
  {
    v36 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v36 = 0;
    _os_log_impl((void *)&_mh_execute_header, v33, v35, "nationalIDCardForCustomerBuild: Returning false", v36, 2u);
    v37 = 0;
LABEL_15:
    swift_slowDealloc(v36, -1, -1);
    goto LABEL_16;
  }
  v37 = 0;
LABEL_16:

  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v31, v23);
  return v37;
}

uint64_t sub_100214DCC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2[47] = a1;
  v2[48] = v1;
  v3 = type metadata accessor for DigitalPresentmentDocumentType(0);
  v2[49] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[50] = v4;
  v2[51] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for IdentityDocumentDescriptor(0);
  v2[52] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[53] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[54] = swift_task_alloc(v7);
  v2[55] = swift_task_alloc(v7);
  v2[56] = swift_task_alloc(v7);
  v8 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for DigitalPresentmentCallingClientConfig(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[57] = swift_task_alloc(v8);
  v2[58] = swift_task_alloc(v8);
  v9 = type metadata accessor for Logger(0);
  v2[59] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v2[60] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[61] = swift_task_alloc(v11);
  v2[62] = swift_task_alloc(v11);
  v2[63] = swift_task_alloc(v11);
  v2[64] = swift_task_alloc(v11);
  v2[65] = swift_task_alloc(v11);
  v12 = type metadata accessor for Locale.Region(0);
  v2[66] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v2[67] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[68] = swift_task_alloc(v14);
  v2[69] = swift_task_alloc(v14);
  v2[70] = swift_task_alloc(v14);
  v15 = type metadata accessor for CoreIDVFeatureFlag(0);
  v2[71] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v2[72] = v16;
  v2[73] = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ISO18013KnownDocTypes(0);
  v2[74] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v2[75] = v18;
  v2[76] = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100214F90, v1, 0);
}

uint64_t sub_100214F90()
{
  uint64_t v0;
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  _BOOL4 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  void (*v46)(uint64_t, uint64_t);
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  os_log_type_t type;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v1 = *(_OWORD **)(v0 + 384);
  v2 = v1[8];
  *(_OWORD *)(v0 + 16) = v1[7];
  *(_OWORD *)(v0 + 32) = v2;
  v3 = v1[12];
  v5 = v1[9];
  v4 = v1[10];
  *(_OWORD *)(v0 + 80) = v1[11];
  *(_OWORD *)(v0 + 96) = v3;
  *(_OWORD *)(v0 + 48) = v5;
  *(_OWORD *)(v0 + 64) = v4;
  v6 = v1[16];
  v8 = v1[13];
  v7 = v1[14];
  *(_OWORD *)(v0 + 144) = v1[15];
  *(_OWORD *)(v0 + 160) = v6;
  *(_OWORD *)(v0 + 112) = v8;
  *(_OWORD *)(v0 + 128) = v7;
  nullsub_7(v0 + 16);
  sub_1000A1F54(v0 + 16, v0 + 176, &qword_1006310A8);
  if (qword_10062F500 != -1)
    swift_once(&qword_10062F500, sub_1003723C4);
  v9 = *(_QWORD *)(v0 + 608);
  v10 = qword_100670388;
  swift_bridgeObjectRetain(qword_100670388);
  *(_QWORD *)(v0 + 616) = sub_10004B9E0(v0 + 176, v10);
  swift_bridgeObjectRelease(v10);
  v11 = sub_1000C40B0(v9);
  v12 = *(_QWORD *)(v0 + 608);
  v13 = *(_QWORD *)(v0 + 600);
  v14 = *(_QWORD *)(v0 + 592);
  v15 = *(_QWORD *)(v0 + 584);
  v16 = *(_QWORD *)(v0 + 576);
  v17 = *(_QWORD *)(v0 + 568);
  v18 = *(_QWORD *)(v0 + 384);
  v53 = ISO18013KnownDocTypes.rawValue.getter(v11);
  v20 = v19;
  *(_QWORD *)(v0 + 624) = v19;
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  v21 = *(_QWORD *)(v18 + OBJC_IVAR____TtC8coreidvd22DigitalPresentmentFlow_featureFlagProvider + 24);
  v22 = *(_QWORD *)(v18 + OBJC_IVAR____TtC8coreidvd22DigitalPresentmentFlow_featureFlagProvider + 32);
  sub_10000806C((_QWORD *)(v18 + OBJC_IVAR____TtC8coreidvd22DigitalPresentmentFlow_featureFlagProvider), v21);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v16 + 104))(v15, enum case for CoreIDVFeatureFlag.digitalPresentmentRegionCheck(_:), v17);
  LOBYTE(v12) = dispatch thunk of FeatureFlagProviding.isEnabled(_:)(v15, v21, v22);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  if ((v12 & 1) != 0)
  {
    v23 = v20;
    v24 = sub_1000C4628(*(char **)(v0 + 560));
    v27 = *(_QWORD *)(v0 + 560);
    v28 = *(_QWORD *)(v0 + 552);
    v29 = *(_QWORD *)(v0 + 536);
    v30 = *(_QWORD *)(v0 + 528);
    defaultLogger()(v24);
    v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 16);
    *(_QWORD *)(v0 + 632) = v31;
    v32 = v31(v28, v27, v30);
    v33 = Logger.logObject.getter(v32);
    v34 = static os_log_type_t.debug.getter(v33);
    v35 = os_log_type_enabled(v33, v34);
    v36 = *(_QWORD *)(v0 + 552);
    v37 = *(_QWORD *)(v0 + 520);
    v39 = *(_QWORD *)(v0 + 472);
    v38 = *(_QWORD *)(v0 + 480);
    if (v35)
    {
      type = v34;
      v48 = *(_QWORD *)(v0 + 536);
      v49 = *(_QWORD *)(v0 + 528);
      v52 = *(_QWORD *)(v0 + 520);
      v40 = (uint8_t *)swift_slowAlloc(12, -1);
      v51 = v39;
      v41 = swift_slowAlloc(32, -1);
      v54 = v41;
      *(_DWORD *)v40 = 136315138;
      v42 = Locale.Region.identifier.getter(v41);
      v44 = v43;
      *(_QWORD *)(v0 + 368) = sub_1000E3AC8(v42, v43, &v54);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 368, v0 + 376, v40 + 4);
      swift_bridgeObjectRelease(v44);
      v45 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
      v45(v36, v49);
      _os_log_impl((void *)&_mh_execute_header, v33, type, "canRequestDocument: requestedRegion Identifier %s", v40, 0xCu);
      swift_arrayDestroy(v41, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v41, -1, -1);
      swift_slowDealloc(v40, -1, -1);

      v46 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
      v46(v52, v51);
    }
    else
    {
      v45 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 536) + 8);
      v45(*(_QWORD *)(v0 + 552), *(_QWORD *)(v0 + 528));

      v46 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
      v46(v37, v39);
    }
    *(_QWORD *)(v0 + 648) = v45;
    *(_QWORD *)(v0 + 640) = v46;
    sub_100035DE8(*(_QWORD *)(v0 + 384) + OBJC_IVAR____TtC8coreidvd22DigitalPresentmentFlow_callingClientConfig, *(_QWORD *)(v0 + 464), type metadata accessor for DigitalPresentmentCallingClientConfig);
    v47 = (_QWORD *)swift_task_alloc(dword_100630FEC);
    *(_QWORD *)(v0 + 656) = v47;
    *v47 = v0;
    v47[1] = sub_100215634;
    return sub_10004A9B8(*(_QWORD *)(v0 + 464), v53, v23);
  }
  else
  {
    sub_100035DE8(*(_QWORD *)(v0 + 384) + OBJC_IVAR____TtC8coreidvd22DigitalPresentmentFlow_callingClientConfig, *(_QWORD *)(v0 + 456), type metadata accessor for DigitalPresentmentCallingClientConfig);
    v25 = (_QWORD *)swift_task_alloc(dword_100630FE4);
    *(_QWORD *)(v0 + 680) = v25;
    *v25 = v0;
    v25[1] = sub_100215D24;
    return sub_100049610(*(_QWORD *)(v0 + 456), v53, v20, 0, 0);
  }
}

uint64_t sub_100215634(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 656);
  *(_QWORD *)(*(_QWORD *)v2 + 664) = v1;
  swift_task_dealloc(v5);
  v6 = v4[78];
  v7 = v4[58];
  v8 = v4[48];
  if (v1)
  {
    sub_100035DAC(v7, type metadata accessor for DigitalPresentmentCallingClientConfig);
    swift_bridgeObjectRelease(v6);
    v9 = sub_10021610C;
  }
  else
  {
    v4[84] = a1;
    sub_100035DAC(v7, type metadata accessor for DigitalPresentmentCallingClientConfig);
    swift_bridgeObjectRelease(v6);
    v9 = sub_1002156E4;
  }
  return swift_task_switch(v9, v8, 0);
}

uint64_t sub_1002156E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  _BOOL4 v18;
  void (*v19)(uint64_t, uint64_t);
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  _BOOL4 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  os_log_type_t v68[8];
  os_log_type_t v69;
  uint64_t v70;
  void (*v71)(uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  os_log_type_t type;
  void (*typea)(uint64_t, uint64_t);
  os_log_type_t typeb[8];
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;

  v2 = *(_QWORD *)(v1 + 672);
  v3 = *(_QWORD *)(v1 + 424);
  v4 = Locale.Region.identifier.getter(a1);
  v6 = v5;
  v7 = sub_1004E09A8(v4, v5, v2);
  swift_bridgeObjectRelease(v2);
  v8 = swift_bridgeObjectRelease(v6);
  v95 = v7;
  if ((v7 & 1) == 0)
  {
    v38 = *(_QWORD *)(v1 + 440);
    v39 = *(_QWORD *)(v1 + 416);
    v40 = *(_QWORD *)(v1 + 376);
    defaultLogger()(v8);
    v41 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v38, v40, v39);
    v42 = Logger.logObject.getter(v41);
    v43 = static os_log_type_t.debug.getter(v42);
    v44 = os_log_type_enabled(v42, v43);
    v19 = *(void (**)(uint64_t, uint64_t))(v1 + 648);
    v20 = *(void (**)(uint64_t, uint64_t))(v1 + 640);
    v21 = *(_QWORD *)(v1 + 560);
    v22 = *(_QWORD *)(v1 + 528);
    v45 = *(_QWORD *)(v1 + 504);
    v46 = *(_QWORD *)(v1 + 472);
    v47 = *(_QWORD *)(v1 + 440);
    v90 = *(_QWORD *)(v1 + 424);
    v93 = *(_QWORD *)(v1 + 416);
    if (v44)
    {
      v81 = *(_QWORD *)(v1 + 472);
      v84 = *(_QWORD *)(v1 + 504);
      v48 = *(_QWORD *)(v1 + 408);
      v70 = *(_QWORD *)(v1 + 400);
      v49 = *(_QWORD *)(v1 + 392);
      typea = *(void (**)(uint64_t, uint64_t))(v1 + 648);
      v74 = *(_QWORD *)(v1 + 616);
      v78 = *(_QWORD *)(v1 + 528);
      v50 = (uint8_t *)swift_slowAlloc(12, -1);
      v76 = v20;
      v51 = swift_slowAlloc(32, -1);
      v96 = v51;
      *(_DWORD *)v50 = 136315138;
      IdentityDocumentDescriptor.documentType.getter(v51);
      v52 = sub_100004790(&qword_1006334F8, (uint64_t (*)(uint64_t))&type metadata accessor for DigitalPresentmentDocumentType, (uint64_t)&protocol conformance descriptor for DigitalPresentmentDocumentType);
      v53 = dispatch thunk of CustomStringConvertible.description.getter(v49, v52);
      v69 = v43;
      v55 = v54;
      (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v48, v49);
      *(_QWORD *)(v1 + 336) = sub_1000E3AC8(v53, v55, &v96);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 336, v1 + 344, v50 + 4);
      swift_bridgeObjectRelease(v55);
      (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v47, v93);
      _os_log_impl((void *)&_mh_execute_header, v42, v69, "canRequestDocument: Returning false for docType: %s", v50, 0xCu);
      swift_arrayDestroy(v51, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v51, -1, -1);
      swift_slowDealloc(v50, -1, -1);
      swift_release(v74);

      v76(v84, v81);
      typea(v21, v78);
      goto LABEL_9;
    }
    swift_release(*(_QWORD *)(v1 + 616));

    (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v47, v93);
    v56 = v45;
    v57 = v46;
LABEL_8:
    v20(v56, v57);
    v19(v21, v22);
    goto LABEL_9;
  }
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 632);
  v10 = *(_QWORD *)(v1 + 560);
  v11 = *(_QWORD *)(v1 + 544);
  v12 = *(_QWORD *)(v1 + 528);
  v13 = *(_QWORD *)(v1 + 448);
  v14 = *(_QWORD *)(v1 + 416);
  v15 = *(_QWORD *)(v1 + 376);
  defaultLogger()(v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v13, v15, v14);
  v16 = v9(v11, v10, v12);
  v17 = Logger.logObject.getter(v16);
  type = static os_log_type_t.debug.getter(v17);
  v18 = os_log_type_enabled(v17, type);
  v19 = *(void (**)(uint64_t, uint64_t))(v1 + 648);
  v20 = *(void (**)(uint64_t, uint64_t))(v1 + 640);
  v21 = *(_QWORD *)(v1 + 560);
  v89 = *(_QWORD *)(v1 + 544);
  v22 = *(_QWORD *)(v1 + 528);
  v23 = *(_QWORD *)(v1 + 512);
  v92 = *(_QWORD *)(v1 + 472);
  v24 = *(_QWORD *)(v1 + 448);
  v25 = *(_QWORD *)(v1 + 416);
  v26 = *(_QWORD *)(v1 + 424);
  if (!v18)
  {
    swift_release(*(_QWORD *)(v1 + 616));

    v19(v89, v22);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
    v56 = v23;
    v57 = v92;
    goto LABEL_8;
  }
  v73 = *(_QWORD *)(v1 + 528);
  v27 = *(_QWORD *)(v1 + 408);
  *(_QWORD *)v68 = *(_QWORD *)(v1 + 400);
  v83 = *(_QWORD *)(v1 + 512);
  v28 = *(_QWORD *)(v1 + 392);
  v77 = *(_QWORD *)(v1 + 616);
  v80 = *(void (**)(uint64_t, uint64_t))(v1 + 640);
  v29 = swift_slowAlloc(22, -1);
  v72 = swift_slowAlloc(64, -1);
  v96 = v72;
  *(_DWORD *)v29 = 136315394;
  v71 = v19;
  IdentityDocumentDescriptor.documentType.getter(v72);
  v30 = sub_100004790(&qword_1006334F8, (uint64_t (*)(uint64_t))&type metadata accessor for DigitalPresentmentDocumentType, (uint64_t)&protocol conformance descriptor for DigitalPresentmentDocumentType);
  v31 = dispatch thunk of CustomStringConvertible.description.getter(v28, v30);
  v75 = v21;
  v33 = v32;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v68 + 8))(v27, v28);
  *(_QWORD *)(v1 + 352) = sub_1000E3AC8(v31, v33, &v96);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 352, v1 + 360, v29 + 4);
  swift_bridgeObjectRelease(v33);
  v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
  *(_WORD *)(v29 + 12) = 2080;
  v35 = Locale.Region.identifier.getter(v34);
  v37 = v36;
  *(_QWORD *)(v1 + 360) = sub_1000E3AC8(v35, v36, &v96);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 360, v1 + 368, v29 + 14);
  swift_bridgeObjectRelease(v37);
  v71(v89, v73);
  _os_log_impl((void *)&_mh_execute_header, v17, type, "canRequestDocument: Returning true for docType: %s for region: %s", (uint8_t *)v29, 0x16u);
  swift_arrayDestroy(v72, 2, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v72, -1, -1);
  swift_slowDealloc(v29, -1, -1);
  swift_release(v77);

  v80(v83, v92);
  v71(v75, v73);
LABEL_9:
  v58 = *(_QWORD *)(v1 + 584);
  v59 = *(_QWORD *)(v1 + 560);
  v60 = *(_QWORD *)(v1 + 552);
  v61 = *(_QWORD *)(v1 + 544);
  v62 = *(_QWORD *)(v1 + 520);
  v64 = *(_QWORD *)(v1 + 504);
  v63 = *(_QWORD *)(v1 + 512);
  v65 = *(_QWORD *)(v1 + 488);
  v66 = *(_QWORD *)(v1 + 496);
  v79 = *(_QWORD *)(v1 + 464);
  v82 = *(_QWORD *)(v1 + 456);
  v85 = *(_QWORD *)(v1 + 448);
  *(_QWORD *)typeb = *(_QWORD *)(v1 + 440);
  v91 = *(_QWORD *)(v1 + 432);
  v94 = *(_QWORD *)(v1 + 408);
  swift_task_dealloc(*(_QWORD *)(v1 + 608));
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v66);
  swift_task_dealloc(v65);
  swift_task_dealloc(v79);
  swift_task_dealloc(v82);
  swift_task_dealloc(v85);
  swift_task_dealloc(*(_QWORD *)typeb);
  swift_task_dealloc(v91);
  swift_task_dealloc(v94);
  return (*(uint64_t (**)(_QWORD))(v1 + 8))(v95 & 1);
}

uint64_t sub_100215D24(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 680);
  *(_BYTE *)(v3 + 700) = a1;
  *(_QWORD *)(v3 + 688) = v1;
  swift_task_dealloc(v4);
  v5 = *(_QWORD *)(v3 + 624);
  v6 = *(_QWORD *)(v3 + 456);
  v7 = *(_QWORD *)(v3 + 384);
  sub_100035DAC(v6, type metadata accessor for DigitalPresentmentCallingClientConfig);
  swift_bridgeObjectRelease(v5);
  if (v1)
    v8 = sub_100216244;
  else
    v8 = sub_100215DBC;
  return swift_task_switch(v8, v7, 0);
}

uint64_t sub_100215DBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int v49;
  uint64_t v50;

  v3 = *(_QWORD *)(v1 + 424);
  v2 = *(_QWORD *)(v1 + 432);
  v4 = *(_QWORD *)(v1 + 416);
  v5 = *(_QWORD *)(v1 + 376);
  defaultLogger()(a1);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.debug.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(unsigned __int8 *)(v1 + 700);
    v42 = *(_QWORD *)(v1 + 616);
    v44 = *(_QWORD *)(v1 + 480);
    v46 = *(_QWORD *)(v1 + 472);
    v48 = *(_QWORD *)(v1 + 496);
    v35 = *(_QWORD *)(v1 + 432);
    v37 = *(_QWORD *)(v1 + 424);
    v10 = *(_QWORD *)(v1 + 408);
    v39 = *(_QWORD *)(v1 + 416);
    v11 = *(_QWORD *)(v1 + 392);
    v36 = *(_QWORD *)(v1 + 400);
    v12 = swift_slowAlloc(18, -1);
    v13 = swift_slowAlloc(32, -1);
    v50 = v13;
    *(_DWORD *)v12 = 67109378;
    *(_DWORD *)(v1 + 696) = v9;
    v14 = UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 696, v1 + 700, v12 + 4);
    *(_WORD *)(v12 + 8) = 2080;
    IdentityDocumentDescriptor.documentType.getter(v14);
    v15 = sub_100004790(&qword_1006334F8, (uint64_t (*)(uint64_t))&type metadata accessor for DigitalPresentmentDocumentType, (uint64_t)&protocol conformance descriptor for DigitalPresentmentDocumentType);
    v16 = dispatch thunk of CustomStringConvertible.description.getter(v11, v15);
    v18 = v17;
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v10, v11);
    *(_QWORD *)(v1 + 344) = sub_1000E3AC8(v16, v18, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 344, v1 + 352, v12 + 10);
    swift_bridgeObjectRelease(v18);
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v35, v39);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "canRequestDocument: Backwards compatibility case. Returning %{BOOL}d for docType: %s", (uint8_t *)v12, 0x12u);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
    swift_release(v42);

    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v48, v46);
  }
  else
  {
    v19 = *(_QWORD *)(v1 + 496);
    v20 = *(_QWORD *)(v1 + 472);
    v21 = *(_QWORD *)(v1 + 480);
    v23 = *(_QWORD *)(v1 + 424);
    v22 = *(_QWORD *)(v1 + 432);
    v24 = *(_QWORD *)(v1 + 416);
    swift_release(*(_QWORD *)(v1 + 616));
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  }
  v49 = *(unsigned __int8 *)(v1 + 700);
  v25 = *(_QWORD *)(v1 + 584);
  v26 = *(_QWORD *)(v1 + 560);
  v27 = *(_QWORD *)(v1 + 552);
  v28 = *(_QWORD *)(v1 + 544);
  v29 = *(_QWORD *)(v1 + 520);
  v30 = *(_QWORD *)(v1 + 504);
  v31 = *(_QWORD *)(v1 + 512);
  v33 = *(_QWORD *)(v1 + 488);
  v32 = *(_QWORD *)(v1 + 496);
  v38 = *(_QWORD *)(v1 + 464);
  v40 = *(_QWORD *)(v1 + 456);
  v41 = *(_QWORD *)(v1 + 448);
  v43 = *(_QWORD *)(v1 + 440);
  v45 = *(_QWORD *)(v1 + 432);
  v47 = *(_QWORD *)(v1 + 408);
  swift_task_dealloc(*(_QWORD *)(v1 + 608));
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v30);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v38);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v43);
  swift_task_dealloc(v45);
  swift_task_dealloc(v47);
  return (*(uint64_t (**)(_QWORD))(v1 + 8))(v49);
}

uint64_t sub_10021610C()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 648);
  v2 = *(_QWORD *)(v0 + 560);
  v3 = *(_QWORD *)(v0 + 528);
  swift_release(*(_QWORD *)(v0 + 616));
  v1(v2, v3);
  v4 = *(_QWORD *)(v0 + 584);
  v5 = *(_QWORD *)(v0 + 560);
  v6 = *(_QWORD *)(v0 + 552);
  v7 = *(_QWORD *)(v0 + 544);
  v8 = *(_QWORD *)(v0 + 520);
  v9 = *(_QWORD *)(v0 + 504);
  v10 = *(_QWORD *)(v0 + 512);
  v12 = *(_QWORD *)(v0 + 488);
  v11 = *(_QWORD *)(v0 + 496);
  v14 = *(_QWORD *)(v0 + 464);
  v15 = *(_QWORD *)(v0 + 456);
  v16 = *(_QWORD *)(v0 + 448);
  v17 = *(_QWORD *)(v0 + 440);
  v18 = *(_QWORD *)(v0 + 432);
  v19 = *(_QWORD *)(v0 + 408);
  swift_task_dealloc(*(_QWORD *)(v0 + 608));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v10);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_100216244()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  swift_release(*(_QWORD *)(v0 + 616));
  v1 = *(_QWORD *)(v0 + 584);
  v2 = *(_QWORD *)(v0 + 560);
  v3 = *(_QWORD *)(v0 + 552);
  v4 = *(_QWORD *)(v0 + 544);
  v5 = *(_QWORD *)(v0 + 520);
  v6 = *(_QWORD *)(v0 + 504);
  v7 = *(_QWORD *)(v0 + 512);
  v9 = *(_QWORD *)(v0 + 488);
  v8 = *(_QWORD *)(v0 + 496);
  v11 = *(_QWORD *)(v0 + 464);
  v12 = *(_QWORD *)(v0 + 456);
  v13 = *(_QWORD *)(v0 + 448);
  v14 = *(_QWORD *)(v0 + 440);
  v15 = *(_QWORD *)(v0 + 432);
  v16 = *(_QWORD *)(v0 + 408);
  swift_task_dealloc(*(_QWORD *)(v0 + 608));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v7);
  swift_task_dealloc(v6);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_100216364(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;

  v2[280] = v1;
  v2[279] = a1;
  v3 = type metadata accessor for DIPError(0);
  v2[281] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[282] = v4;
  v2[283] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DeviceInformationProvider(0);
  v2[284] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[285] = v6;
  v2[286] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DigitalPresentmentFlow.Context(0);
  v2[287] = v7;
  v8 = (*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[288] = swift_task_alloc(v8);
  v2[289] = swift_task_alloc(v8);
  v2[290] = swift_task_alloc(v8);
  v9 = type metadata accessor for DigitalPresentmentDisplayConfiguration(0);
  v2[291] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v2[292] = v10;
  v2[293] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DigitalPresentmentSessionManager.Request(0);
  v2[294] = v11;
  v2[295] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DigitalPresentmentISOBuilder(0);
  v2[296] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100004828(&qword_10062FEC0);
  v2[297] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ISO18013KnownDocTypes(0);
  v2[298] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v2[299] = v15;
  v16 = (*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[300] = swift_task_alloc(v16);
  v2[301] = swift_task_alloc(v16);
  v17 = type metadata accessor for DIPError.Code(0);
  v2[302] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v2[303] = v18;
  v2[304] = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100004828(&qword_100630DE0);
  v2[305] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v19 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for DigitalPresentmentCallingClientConfig(0);
  v2[306] = v20;
  v21 = *(_QWORD *)(v20 - 8);
  v2[307] = v21;
  v22 = (*(_QWORD *)(v21 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[308] = swift_task_alloc(v22);
  v2[309] = swift_task_alloc(v22);
  v23 = type metadata accessor for ValidatedDigitalPresentmentRequest(0);
  v2[310] = v23;
  v24 = *(_QWORD *)(v23 - 8);
  v2[311] = v24;
  v25 = (*(_QWORD *)(v24 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[312] = swift_task_alloc(v25);
  v2[313] = swift_task_alloc(v25);
  v26 = type metadata accessor for DigitalPresentmentRequestDocumentAnalyticsRecorder(0);
  v2[314] = v26;
  v2[315] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v26 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for Date(0);
  v2[316] = v27;
  v28 = *(_QWORD *)(v27 - 8);
  v2[317] = v28;
  v2[318] = swift_task_alloc((*(_QWORD *)(v28 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for DIPSignpost.Config(0);
  v2[319] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v29 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for DIPSignpost(0);
  v2[320] = v30;
  v31 = *(_QWORD *)(v30 - 8);
  v2[321] = v31;
  v32 = (*(_QWORD *)(v31 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[322] = swift_task_alloc(v32);
  v2[323] = swift_task_alloc(v32);
  v2[324] = swift_task_alloc(v32);
  v2[325] = swift_task_alloc(v32);
  v2[326] = swift_task_alloc(v32);
  v2[327] = swift_task_alloc(v32);
  v2[328] = swift_task_alloc(v32);
  v33 = type metadata accessor for DigitalPresentmentDocumentType(0);
  v2[329] = v33;
  v34 = *(_QWORD *)(v33 - 8);
  v2[330] = v34;
  v2[331] = swift_task_alloc((*(_QWORD *)(v34 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = (*(_QWORD *)(*(_QWORD *)(sub_100004828(&qword_100630AB0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[332] = swift_task_alloc(v35);
  v2[333] = swift_task_alloc(v35);
  v2[334] = swift_task_alloc(v35);
  v2[335] = swift_task_alloc(v35);
  v36 = type metadata accessor for Logger(0);
  v2[336] = v36;
  v37 = *(_QWORD *)(v36 - 8);
  v2[337] = v37;
  v38 = (*(_QWORD *)(v37 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[338] = swift_task_alloc(v38);
  v2[339] = swift_task_alloc(v38);
  v2[340] = swift_task_alloc(v38);
  v2[341] = swift_task_alloc(v38);
  v2[342] = swift_task_alloc(v38);
  v2[343] = swift_task_alloc(v38);
  v2[344] = swift_task_alloc(v38);
  v2[345] = swift_task_alloc(v38);
  v2[346] = swift_task_alloc(v38);
  v2[347] = swift_task_alloc(v38);
  v2[348] = swift_task_alloc(v38);
  v2[349] = swift_task_alloc(v38);
  return swift_task_switch(sub_1002167B8, v1, 0);
}

uint64_t sub_1002167B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void (*v10)(uint64_t, uint64_t);
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  void *v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  void *v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  Swift::String v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  void *v57;
  NSObject *v58;
  os_log_type_t v59;
  _BOOL4 v60;
  void *v61;
  uint64_t v62;
  uint8_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  void *v83;
  NSObject *v84;
  os_log_type_t v85;
  _BOOL4 v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  uint8_t *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  NSObject *v99;
  os_log_type_t v100;
  _BOOL4 v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  uint8_t *v105;
  uint64_t v106;
  __n128 v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(uint64_t, uint64_t);
  uint64_t v120;
  int *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void (*v126)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void (*v131)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  uint64_t v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  NSObject *v143;
  os_log_type_t v144;
  uint8_t *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  Swift::String v152;
  Swift::String v153;
  unint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  void (*v168)(uint64_t, uint64_t, uint64_t);
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  void (*v172)(uint64_t, uint64_t);
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v183;
  uint64_t v184;
  _QWORD *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  Swift::String v189;
  uint64_t v190;
  Swift::String v191;
  unint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  _BYTE *v202;
  Swift::String v203;
  Swift::String v204;
  uint64_t v205;
  uint64_t v206;
  char v207;
  uint64_t v208;
  uint64_t v209;
  id v210;
  Swift::String v211;
  Swift::Bool v212;
  uint64_t v213;
  uint64_t v214;
  void (*v215)(uint64_t);
  uint64_t v216;
  uint64_t *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  _QWORD *v223;
  _QWORD *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  void (*v231)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  unint64_t v236;
  uint64_t v237;
  unint64_t v238;
  uint64_t v239;
  char v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  unint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  NSObject *v252;
  os_log_type_t v253;
  _BOOL4 v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint8_t *v258;
  uint64_t v259;
  uint64_t v260;
  unint64_t v261;
  unint64_t v262;
  uint64_t v263;
  uint64_t *v264;
  uint64_t v265;
  char *v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  __n128 v270;
  _QWORD *v271;
  uint64_t v272;
  uint64_t v273;
  _QWORD *v274;
  uint64_t v275;
  uint64_t *v276;
  _QWORD *v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  void (*v313)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  void (*v336)(uint64_t, uint64_t);
  uint64_t v337[3];

  v317 = v1 + 2224;
  v2 = defaultLogger()(a1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.debug.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "DigitalPresentmentFlow requestDocument called", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v331 = v1 + 2216;
  v6 = *(_QWORD *)(v1 + 2792);
  v7 = *(_QWORD *)(v1 + 2696);
  v8 = *(_QWORD *)(v1 + 2688);
  v9 = *(void **)(v1 + 2232);

  v10 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  *(_QWORD *)(v1 + 2800) = v10;
  v10(v6, v8);
  v11._countAndFlagsBits = 0xD000000000000024;
  v11._object = (void *)0x8000000100555930;
  v12._countAndFlagsBits = 0x3062646332653061;
  v12._object = (void *)0xE800000000000000;
  logMilestone(tag:description:)(v12, v11);
  defaultLogger()(v13);
  v14 = Logger.logObject.getter(v9);
  v15 = static os_log_type_t.debug.getter(v14);
  v16 = os_log_type_enabled(v14, v15);
  v17 = *(void **)(v1 + 2232);
  v336 = v10;
  if (v16)
  {
    v18 = *(_QWORD *)(v1 + 2680);
    v19 = (uint8_t *)swift_slowAlloc(12, -1);
    v20 = swift_slowAlloc(32, -1);
    v337[0] = v20;
    *(_DWORD *)v19 = 136315138;
    DigitalPresentmentRequest.descriptor.getter(v20);
    v21 = type metadata accessor for IdentityDocumentDescriptor(0);
    v22 = *(_QWORD *)(v21 - 8);
    v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v18, 1, v21);
    v24 = *(_QWORD *)(v1 + 2680);
    if ((_DWORD)v23 == 1)
    {
      sub_100008030(*(_QWORD *)(v1 + 2680), &qword_100630AB0);
      v25 = 0xE500000000000000;
      v26 = 0x3E6C696E3CLL;
    }
    else
    {
      v31 = *(_QWORD *)(v1 + 2648);
      v309 = *(_QWORD *)(v1 + 2640);
      v325 = *(_QWORD *)(v1 + 2632);
      IdentityDocumentDescriptor.documentType.getter(v23);
      v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v24, v21);
      v26 = DigitalPresentmentDocumentType.description.getter(v32);
      v25 = v33;
      (*(void (**)(uint64_t, uint64_t))(v309 + 8))(v31, v325);
    }
    v326 = *(_QWORD *)(v1 + 2784);
    v34 = *(_QWORD *)(v1 + 2688);
    v35 = *(void **)(v1 + 2232);
    *(_QWORD *)(v1 + 2224) = sub_1000E3AC8(v26, v25, v337);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v317, v1 + 2232, v19 + 4);

    swift_bridgeObjectRelease(v25);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "requestDocument documentType %s", v19, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);

    v29 = v326;
    v30 = v34;
    v10 = v336;
  }
  else
  {
    v27 = *(_QWORD *)(v1 + 2784);
    v28 = *(_QWORD *)(v1 + 2688);

    v29 = v27;
    v30 = v28;
  }
  v36 = ((uint64_t (*)(uint64_t, uint64_t))v10)(v29, v30);
  v327 = v1 + 2208;
  v37 = *(void **)(v1 + 2232);
  defaultLogger()(v36);
  v38 = Logger.logObject.getter(v37);
  v39 = static os_log_type_t.debug.getter(v38);
  if (os_log_type_enabled(v38, v39))
  {
    v40 = (uint8_t *)swift_slowAlloc(12, -1);
    v41 = swift_slowAlloc(32, -1);
    v337[0] = v41;
    *(_DWORD *)v40 = 136315138;
    v42 = DigitalPresentmentRequest.nonce.getter(v41);
    if (v43 >> 60 == 15)
    {
      object = (void *)0xE500000000000000;
      countAndFlagsBits = 0x3E6C696E3CLL;
    }
    else
    {
      v51 = v42;
      v52 = v43;
      v53 = Data.base16EncodedString()();
      countAndFlagsBits = v53._countAndFlagsBits;
      object = v53._object;
      sub_100007F78(v51, v52);
    }
    v312 = *(_QWORD *)(v1 + 2776);
    v54 = *(_QWORD *)(v1 + 2688);
    v55 = *(void **)(v1 + 2232);
    *(_QWORD *)(v1 + 2216) = sub_1000E3AC8(countAndFlagsBits, (unint64_t)object, v337);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v331, v317, v40 + 4);

    swift_bridgeObjectRelease(object);
    _os_log_impl((void *)&_mh_execute_header, v38, v39, "requestDocument nonce %s", v40, 0xCu);
    swift_arrayDestroy(v41, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v41, -1, -1);
    swift_slowDealloc(v40, -1, -1);

    v49 = v312;
    v50 = v54;
    v10 = v336;
  }
  else
  {
    v46 = *(_QWORD *)(v1 + 2776);
    v47 = *(_QWORD *)(v1 + 2688);
    v48 = *(void **)(v1 + 2232);

    v49 = v46;
    v50 = v47;
  }
  v56 = ((uint64_t (*)(uint64_t, uint64_t))v10)(v49, v50);
  v57 = *(void **)(v1 + 2232);
  defaultLogger()(v56);
  v58 = Logger.logObject.getter(v57);
  v59 = static os_log_type_t.debug.getter(v58);
  v60 = os_log_type_enabled(v58, v59);
  v61 = *(void **)(v1 + 2232);
  if (v60)
  {
    v62 = *(_QWORD *)(v1 + 2672);
    v63 = (uint8_t *)swift_slowAlloc(12, -1);
    v64 = swift_slowAlloc(32, -1);
    v337[0] = v64;
    *(_DWORD *)v63 = 136315138;
    DigitalPresentmentRequest.descriptor.getter(v64);
    v65 = type metadata accessor for IdentityDocumentDescriptor(0);
    v66 = *(_QWORD *)(v65 - 8);
    v67 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v62, 1, v65);
    v68 = *(_QWORD *)(v1 + 2672);
    if ((_DWORD)v67 == 1)
    {
      sub_100008030(*(_QWORD *)(v1 + 2672), &qword_100630AB0);
      v69 = 0xE500000000000000;
      v70 = 0x3E6C696E3CLL;
    }
    else
    {
      v75 = IdentityDocumentDescriptor.elementsToIntentToStore.getter(v67);
      (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v68, v65);
      v76 = type metadata accessor for IdentityElement(0);
      v77 = type metadata accessor for IdentityIntentToStore(0);
      v78 = sub_100004790(&qword_100639068, (uint64_t (*)(uint64_t))&type metadata accessor for IdentityElement, (uint64_t)&protocol conformance descriptor for IdentityElement);
      v70 = Dictionary.description.getter(v75, v76, v77, v78);
      v69 = v79;
      swift_bridgeObjectRelease(v75);
    }
    v318 = *(_QWORD *)(v1 + 2768);
    v80 = *(_QWORD *)(v1 + 2688);
    v81 = *(void **)(v1 + 2232);
    *(_QWORD *)(v1 + 2208) = sub_1000E3AC8(v70, v69, v337);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v327, v331, v63 + 4);

    swift_bridgeObjectRelease(v69);
    _os_log_impl((void *)&_mh_execute_header, v58, v59, "requestDocument elements %s", v63, 0xCu);
    swift_arrayDestroy(v64, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v64, -1, -1);
    swift_slowDealloc(v63, -1, -1);

    v73 = v318;
    v74 = v80;
    v10 = v336;
  }
  else
  {
    v71 = *(_QWORD *)(v1 + 2768);
    v72 = *(_QWORD *)(v1 + 2688);

    v73 = v71;
    v74 = v72;
  }
  v82 = ((uint64_t (*)(uint64_t, uint64_t))v10)(v73, v74);
  v83 = *(void **)(v1 + 2232);
  defaultLogger()(v82);
  v84 = Logger.logObject.getter(v83);
  v85 = static os_log_type_t.debug.getter(v84);
  v86 = os_log_type_enabled(v84, v85);
  v87 = *(_QWORD *)(v1 + 2760);
  v88 = *(_QWORD *)(v1 + 2688);
  v89 = *(void **)(v1 + 2232);
  if (v86)
  {
    v319 = *(_QWORD *)(v1 + 2688);
    v90 = (uint8_t *)swift_slowAlloc(12, -1);
    v91 = swift_slowAlloc(32, -1);
    v337[0] = v91;
    *(_DWORD *)v90 = 136315138;
    v92 = DigitalPresentmentRequest.merchantID.getter();
    if (v93)
    {
      v94 = v93;
    }
    else
    {
      v92 = 0x3E6C696E3CLL;
      v94 = 0xE500000000000000;
    }
    *(_QWORD *)(v1 + 2200) = sub_1000E3AC8(v92, v94, v337);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 2200, v327, v90 + 4);

    swift_bridgeObjectRelease(v94);
    _os_log_impl((void *)&_mh_execute_header, v84, v85, "requestDocument merchantID %s", v90, 0xCu);
    swift_arrayDestroy(v91, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v91, -1, -1);
    v10 = v336;
    swift_slowDealloc(v90, -1, -1);

    v95 = v87;
    v96 = v319;
  }
  else
  {

    v95 = v87;
    v96 = v88;
  }
  v97 = ((uint64_t (*)(uint64_t, uint64_t))v10)(v95, v96);
  v98 = *(void **)(v1 + 2232);
  defaultLogger()(v97);
  v99 = Logger.logObject.getter(v98);
  v100 = static os_log_type_t.debug.getter(v99);
  v101 = os_log_type_enabled(v99, v100);
  v102 = *(_QWORD *)(v1 + 2752);
  v103 = *(_QWORD *)(v1 + 2688);
  v104 = *(void **)(v1 + 2232);
  if (v101)
  {
    v320 = *(_QWORD *)(v1 + 2752);
    v105 = (uint8_t *)swift_slowAlloc(12, -1);
    v106 = swift_slowAlloc(32, -1);
    v337[0] = v106;
    v107.n128_u64[0] = 136315138;
    *(_DWORD *)v105 = 136315138;
    v108 = DigitalPresentmentRequest.merchantNameOverride.getter(v107);
    if (v109)
    {
      v110 = v109;
    }
    else
    {
      v108 = 0x3E6C696E3CLL;
      v110 = 0xE500000000000000;
    }
    *(_QWORD *)(v1 + 2192) = sub_1000E3AC8(v108, v110, v337);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 2192, v1 + 2200, v105 + 4);

    swift_bridgeObjectRelease(v110);
    _os_log_impl((void *)&_mh_execute_header, v99, v100, "requestDocument context %s", v105, 0xCu);
    swift_arrayDestroy(v106, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v106, -1, -1);
    swift_slowDealloc(v105, -1, -1);

    v111 = ((uint64_t (*)(uint64_t, uint64_t))v336)(v320, v103);
  }
  else
  {

    v111 = ((uint64_t (*)(uint64_t, uint64_t))v10)(v102, v103);
  }
  v112 = *(_QWORD *)(v1 + 2552);
  v113 = *(_QWORD *)(v1 + 2544);
  v114 = *(_QWORD *)(v1 + 2536);
  v115 = *(_QWORD *)(v1 + 2528);
  static DaemonSignposts.requestDocument.getter(v111);
  v116 = DIPSignpost.init(_:)(v112);
  static DaemonSignposts.requestDocumentPreAuthorization.getter(v116);
  v117 = DIPSignpost.init(_:)(v112);
  v118 = Date.init()(v117);
  *(double *)(v1 + 2808) = Date.timeIntervalSince1970.getter(v118);
  v119 = *(void (**)(uint64_t, uint64_t))(v114 + 8);
  *(_QWORD *)(v1 + 2816) = v119;
  v119(v113, v115);
  sub_10021F8BC();
  v120 = *(_QWORD *)(v1 + 2520);
  v121 = *(int **)(v1 + 2512);
  v122 = *(_QWORD *)(v1 + 2488);
  v123 = *(_QWORD *)(v1 + 2480);
  v124 = *(_QWORD *)(v1 + 2448);
  v125 = *(_QWORD *)(v1 + 2240);
  v126 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 + 2456) + 56);
  v126(v120, 1, 1, v124);
  v127 = v121[5];
  *(_DWORD *)(v1 + 3216) = v127;
  *(_BYTE *)(v120 + v127) = 0;
  v128 = v120 + v121[6];
  v129 = type metadata accessor for IdentityDocumentDescriptor(0);
  v321 = *(_QWORD *)(v129 - 8);
  v332 = v128;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v321 + 56))(v128, 1, 1, v129);
  v130 = v120 + v121[7];
  v131 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v122 + 56);
  v131(v130, 1, 1, v123);
  v132 = v121[8];
  *(_DWORD *)(v1 + 3220) = v132;
  *(_QWORD *)(v120 + v132) = 0;
  v133 = v121[9];
  *(_DWORD *)(v1 + 3224) = v133;
  *(_BYTE *)(v120 + v133) = 0;
  v134 = (_QWORD *)(v120 + v121[10]);
  v135 = type metadata accessor for BundleRecordFetcher(0);
  v134[3] = v135;
  v134[4] = &protocol witness table for BundleRecordFetcher;
  v136 = sub_100022234(v134);
  BundleRecordFetcher.init()(v136);
  sub_100008030(v120, &qword_100630AB8);
  v137 = OBJC_IVAR____TtC8coreidvd22DigitalPresentmentFlow_callingClientConfig;
  *(_QWORD *)(v1 + 2824) = OBJC_IVAR____TtC8coreidvd22DigitalPresentmentFlow_callingClientConfig;
  v138 = v125;
  v139 = v125 + v137;
  sub_100035DE8(v139, v120, type metadata accessor for DigitalPresentmentCallingClientConfig);
  v140 = ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v126)(v120, 0, 1, v124);
  v141 = OBJC_IVAR____TtC8coreidvd22DigitalPresentmentFlow_requestInProgress;
  *(_QWORD *)(v1 + 2832) = OBJC_IVAR____TtC8coreidvd22DigitalPresentmentFlow_requestInProgress;
  if ((*(_BYTE *)(v138 + v141) & 1) != 0)
  {
    v142 = defaultLogger()(v140);
    v143 = Logger.logObject.getter(v142);
    v144 = static os_log_type_t.error.getter(v143);
    if (os_log_type_enabled(v143, v144))
    {
      v145 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v145 = 0;
      _os_log_impl((void *)&_mh_execute_header, v143, v144, "requestDocument: cannot continue because another request is already in progress ", v145, 2u);
      swift_slowDealloc(v145, -1, -1);
    }
    v146 = *(_QWORD *)(v1 + 2712);
    v147 = *(_QWORD *)(v1 + 2688);
    v148 = *(_QWORD *)(v1 + 2432);
    v149 = *(_QWORD *)(v1 + 2424);
    v150 = *(_QWORD *)(v1 + 2416);
    v151 = *(_QWORD *)(v1 + 2248);

    v336(v146, v147);
    v152._countAndFlagsBits = 0xD000000000000038;
    v152._object = (void *)0x8000000100555CC0;
    v153._countAndFlagsBits = 0x3962373531336462;
    v153._object = (void *)0xE800000000000000;
    logMilestone(tag:description:)(v153, v152);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v149 + 104))(v148, enum case for DIPError.Code.digitalPresentmentRequestAlreadyInProgress(_:), v150);
    v154 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v155 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    v156 = swift_allocError(v151, v155, 0, 0);
    v157 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001BLL, 0x8000000100555D00, 0, v148, 0, v154, 0xD00000000000006DLL, 0x8000000100555820, 0xD000000000000019, 0x8000000100555960, 239);
    v158 = v156;
    swift_willThrow(v157);
    goto LABEL_38;
  }
  v313 = v131;
  *(_BYTE *)(v138 + v141) = 1;
  v308 = v141;
  if (!sub_10021F58C())
  {
    v186 = *(_QWORD *)(v1 + 2432);
    v187 = *(_QWORD *)(v1 + 2424);
    v188 = *(_QWORD *)(v1 + 2416);
    v189._countAndFlagsBits = 0xD000000000000035;
    v190 = *(_QWORD *)(v1 + 2248);
    v189._object = (void *)0x8000000100555980;
    v191._countAndFlagsBits = 0x3066623236383366;
    v191._object = (void *)0xE800000000000000;
    logMilestone(tag:description:)(v191, v189);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v187 + 104))(v186, enum case for DIPError.Code.digitalPresentmentNotLoggedInWithPasscode(_:), v188);
    v192 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v193 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    v194 = swift_allocError(v190, v193, 0, 0);
    v195 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000046, 0x80000001005559C0, 0, v186, 0, v192, 0xD00000000000006DLL, 0x8000000100555820, 0xD000000000000019, 0x8000000100555960, 252);
    v158 = v194;
    swift_willThrow(v195);
    *(_BYTE *)(v138 + v308) = 0;
LABEL_38:
    v159 = *(int *)(v1 + 3220);
    v328 = *(_QWORD *)(v1 + 2616);
    v333 = *(_QWORD *)(v1 + 2624);
    v314 = *(_QWORD *)(v1 + 2568);
    v322 = *(_QWORD *)(v1 + 2560);
    v160 = *(_QWORD *)(v1 + 2520);
    v161 = *(_QWORD *)(v1 + 2432);
    v162 = *(_QWORD *)(v1 + 2264);
    v163 = *(_QWORD *)(v1 + 2256);
    v164 = *(_QWORD *)(v1 + 2248);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v1 + 2424) + 104))(v161, enum case for DIPError.Code.internalError(_:), *(_QWORD *)(v1 + 2416));
    swift_errorRetain(v158);
    v165 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, v158, v161, 0, v165, 0xD00000000000006DLL, 0x8000000100555820, 0xD000000000000019, 0x8000000100555960, 439);
    v166 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    v167 = swift_allocError(v164, v166, 0, 0);
    v168 = *(void (**)(uint64_t, uint64_t, uint64_t))(v163 + 16);
    v168(v169, v162, v164);
    swift_errorRelease(*(_QWORD *)(v160 + v159));
    *(_QWORD *)(v160 + v159) = v167;
    swift_allocError(v164, v166, 0, 0);
    v171 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v168)(v170, v162, v164);
    swift_willThrow(v171);
    swift_errorRelease(v158);
    (*(void (**)(uint64_t, uint64_t))(v163 + 8))(v162, v164);
    sub_100035E2C();
    v172 = *(void (**)(uint64_t, uint64_t))(v314 + 8);
    v172(v328, v322);
    v172(v333, v322);
    sub_100035DAC(v160, type metadata accessor for DigitalPresentmentRequestDocumentAnalyticsRecorder);
    v173 = *(_QWORD *)(v1 + 2784);
    v174 = *(_QWORD *)(v1 + 2776);
    v175 = *(_QWORD *)(v1 + 2768);
    v176 = *(_QWORD *)(v1 + 2760);
    v177 = *(_QWORD *)(v1 + 2752);
    v178 = *(_QWORD *)(v1 + 2744);
    v179 = *(_QWORD *)(v1 + 2736);
    v180 = *(_QWORD *)(v1 + 2728);
    v181 = *(_QWORD *)(v1 + 2720);
    v278 = *(_QWORD *)(v1 + 2712);
    v279 = *(_QWORD *)(v1 + 2704);
    v280 = *(_QWORD *)(v1 + 2680);
    v281 = *(_QWORD *)(v1 + 2672);
    v282 = *(_QWORD *)(v1 + 2664);
    v283 = *(_QWORD *)(v1 + 2656);
    v284 = *(_QWORD *)(v1 + 2648);
    v285 = *(_QWORD *)(v1 + 2624);
    v286 = *(_QWORD *)(v1 + 2616);
    v287 = *(_QWORD *)(v1 + 2608);
    v288 = *(_QWORD *)(v1 + 2600);
    v289 = *(_QWORD *)(v1 + 2592);
    v290 = *(_QWORD *)(v1 + 2584);
    v291 = *(_QWORD *)(v1 + 2576);
    v292 = *(_QWORD *)(v1 + 2552);
    v293 = *(_QWORD *)(v1 + 2544);
    v294 = *(_QWORD *)(v1 + 2520);
    v295 = *(_QWORD *)(v1 + 2504);
    v296 = *(_QWORD *)(v1 + 2496);
    v297 = *(_QWORD *)(v1 + 2472);
    v298 = *(_QWORD *)(v1 + 2464);
    v299 = *(_QWORD *)(v1 + 2440);
    v300 = *(_QWORD *)(v1 + 2432);
    v301 = *(_QWORD *)(v1 + 2408);
    v302 = *(_QWORD *)(v1 + 2400);
    v303 = *(_QWORD *)(v1 + 2376);
    v304 = *(_QWORD *)(v1 + 2368);
    v305 = *(_QWORD *)(v1 + 2360);
    v307 = *(_QWORD *)(v1 + 2344);
    v310 = *(_QWORD *)(v1 + 2320);
    v315 = *(_QWORD *)(v1 + 2312);
    v323 = *(_QWORD *)(v1 + 2304);
    v329 = *(_QWORD *)(v1 + 2288);
    v334 = *(_QWORD *)(v1 + 2264);
    swift_task_dealloc(*(_QWORD *)(v1 + 2792));
    swift_task_dealloc(v173);
    swift_task_dealloc(v174);
    swift_task_dealloc(v175);
    swift_task_dealloc(v176);
    swift_task_dealloc(v177);
    swift_task_dealloc(v178);
    swift_task_dealloc(v179);
    swift_task_dealloc(v180);
    swift_task_dealloc(v181);
    swift_task_dealloc(v278);
    swift_task_dealloc(v279);
    swift_task_dealloc(v280);
    swift_task_dealloc(v281);
    swift_task_dealloc(v282);
    swift_task_dealloc(v283);
    swift_task_dealloc(v284);
    swift_task_dealloc(v285);
    swift_task_dealloc(v286);
    swift_task_dealloc(v287);
    swift_task_dealloc(v288);
    swift_task_dealloc(v289);
    swift_task_dealloc(v290);
    swift_task_dealloc(v291);
    swift_task_dealloc(v292);
    swift_task_dealloc(v293);
    swift_task_dealloc(v294);
    swift_task_dealloc(v295);
    swift_task_dealloc(v296);
    swift_task_dealloc(v297);
    swift_task_dealloc(v298);
    swift_task_dealloc(v299);
    swift_task_dealloc(v300);
    swift_task_dealloc(v301);
    swift_task_dealloc(v302);
    swift_task_dealloc(v303);
    swift_task_dealloc(v304);
    swift_task_dealloc(v305);
    swift_task_dealloc(v307);
    swift_task_dealloc(v310);
    swift_task_dealloc(v315);
    swift_task_dealloc(v323);
    swift_task_dealloc(v329);
    swift_task_dealloc(v334);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  v183 = *(_QWORD *)(v1 + 2504);
  v184 = *(_QWORD *)(v1 + 2472);
  sub_100035DE8(v139, v184, type metadata accessor for DigitalPresentmentCallingClientConfig);
  *(_QWORD *)(v1 + 1528) = v135;
  *(_QWORD *)(v1 + 1536) = &protocol witness table for BundleRecordFetcher;
  v185 = sub_100022234((_QWORD *)(v1 + 1504));
  BundleRecordFetcher.init()(v185);
  sub_1000C0D38(v184, v1 + 1504, v183);
  v306 = v138;
  v196 = *(_QWORD *)(v1 + 2664);
  v197 = *(_QWORD *)(v1 + 2504);
  v198 = *(_QWORD *)(v1 + 2480);
  v199 = *(_QWORD *)(v1 + 2472);
  v200 = *(_QWORD *)(v1 + 2240);
  _s8coreidvd24DigitalPresentmentHelperVwxx_0((_QWORD *)(v1 + 1504));
  v201 = v199;
  v202 = (_BYTE *)(v1 + 3228);
  sub_100035DAC(v201, type metadata accessor for DigitalPresentmentCallingClientConfig);
  v203._countAndFlagsBits = 0xD000000000000022;
  v203._object = (void *)0x8000000100555A10;
  v204._countAndFlagsBits = 0x3536326538643062;
  v204._object = (void *)0xE800000000000000;
  logMilestone(tag:description:)(v204, v203);
  DigitalPresentmentRequest.descriptor.getter(v205);
  sub_100184E1C(v196, v332, &qword_100630AB0);
  sub_100008030(v130, &qword_100630AD8);
  sub_100035DE8(v197, v130, type metadata accessor for ValidatedDigitalPresentmentRequest);
  v206 = ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v313)(v130, 0, 1, v198);
  v207 = *(_BYTE *)(v200 + OBJC_IVAR____TtC8coreidvd22DigitalPresentmentFlow_shouldPresentTestMDL);
  *v202 = v207;
  if ((v207 & 1) != 0)
  {
    v208 = *(_QWORD *)(v1 + 2656);
    DigitalPresentmentRequest.descriptor.getter(v206);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v321 + 48))(v208, 1, v129) == 1)
    {
      sub_100008030(*(_QWORD *)(v1 + 2656), &qword_100630AB0);
      v209 = 1;
    }
    else
    {
      sub_1000C40B0(*(_QWORD *)(v1 + 2440));
      (*(void (**)(_QWORD, uint64_t))(v321 + 8))(*(_QWORD *)(v1 + 2656), v129);
      v209 = 0;
    }
    v239 = *(_QWORD *)(v1 + 2440);
    (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v1 + 2392) + 56))(v239, v209, 1, *(_QWORD *)(v1 + 2384));
    v240 = sub_100214918(v239);
    v241 = sub_100008030(v239, &qword_100630DE0);
    if ((v240 & 1) != 0)
    {
      v242 = *(_QWORD *)(v1 + 2504);
      v243 = *(_QWORD *)(v1 + 2432);
      v244 = *(_QWORD *)(v1 + 2248);
      (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v1 + 2424) + 104))(v243, enum case for DIPError.Code.internalError(_:), *(_QWORD *)(v1 + 2416));
      v245 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
      v246 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
      v247 = swift_allocError(v244, v246, 0, 0);
      v248 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0x2064696C61766E49, 0xEF74736575716572, 0, v243, 0, v245, 0xD00000000000006DLL, 0x8000000100555820, 0xD000000000000019, 0x8000000100555960, 275);
      v158 = v247;
      swift_willThrow(v248);
      sub_100035DAC(v242, type metadata accessor for ValidatedDigitalPresentmentRequest);
      *(_BYTE *)(v306 + v308) = 0;
      goto LABEL_38;
    }
    v249 = *(_QWORD *)(v1 + 2504);
    v250 = *(_QWORD *)(v1 + 2496);
    defaultLogger()(v241);
    v251 = sub_100035DE8(v249, v250, type metadata accessor for ValidatedDigitalPresentmentRequest);
    v252 = Logger.logObject.getter(v251);
    v253 = static os_log_type_t.debug.getter(v252);
    v254 = os_log_type_enabled(v252, v253);
    v255 = *(_QWORD *)(v1 + 2744);
    v256 = *(_QWORD *)(v1 + 2688);
    v257 = *(_QWORD *)(v1 + 2496);
    if (v254)
    {
      v335 = *(_QWORD *)(v1 + 2744);
      v258 = (uint8_t *)swift_slowAlloc(12, -1);
      v259 = swift_slowAlloc(32, -1);
      v337[0] = v259;
      *(_DWORD *)v258 = 136315138;
      v260 = ISO18013KnownDocTypes.rawValue.getter(v259);
      v262 = v261;
      *(_QWORD *)(v1 + 2184) = sub_1000E3AC8(v260, v261, v337);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 2184, v1 + 2192, v258 + 4);
      swift_bridgeObjectRelease(v262);
      sub_100035DAC(v257, type metadata accessor for ValidatedDigitalPresentmentRequest);
      _os_log_impl((void *)&_mh_execute_header, v252, v253, "Creating developer test document for docType %s", v258, 0xCu);
      swift_arrayDestroy(v259, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v259, -1, -1);
      swift_slowDealloc(v258, -1, -1);

      v263 = v335;
    }
    else
    {
      sub_100035DAC(*(_QWORD *)(v1 + 2496), type metadata accessor for ValidatedDigitalPresentmentRequest);

      v263 = v255;
    }
    v336(v263, v256);
    v272 = *(_QWORD *)(v1 + 2408);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v1 + 2392) + 16))(v272, *(_QWORD *)(v1 + 2504), *(_QWORD *)(v1 + 2384));
    *(_QWORD *)(v1 + 1568) = &type metadata for IDCredCredentialStore;
    *(_QWORD *)(v1 + 1576) = &off_1006070F8;
    *(_QWORD *)(v1 + 1544) = &off_100601468;
    v273 = type metadata accessor for DeveloperTestMDLManager(0);
    v274 = (_QWORD *)swift_allocObject(v273, *(unsigned int *)(v273 + 48), *(unsigned __int16 *)(v273 + 52));
    v275 = sub_10001E624(v1 + 1544, (uint64_t)&type metadata for IDCredCredentialStore);
    v276 = (uint64_t *)swift_task_alloc(((unint64_t)value witness table for Builtin.BridgeObject[8] + 15) & 0xFFFFFFFFFFFFFFF0);
    value witness table for Builtin.BridgeObject[2](v276, v275, &type metadata for IDCredCredentialStore);
    *(_QWORD *)(v1 + 2840) = sub_1002220D4(*v276, v272, v274);
    _s8coreidvd24DigitalPresentmentHelperVwxx_0((_QWORD *)(v1 + 1544));
    swift_task_dealloc(v276);
    v277 = (_QWORD *)swift_task_alloc(dword_100633DF4);
    *(_QWORD *)(v1 + 2848) = v277;
    *v277 = v1;
    v277[1] = sub_1002183B4;
    return sub_1000DC734();
  }
  else
  {
    v210 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v211._countAndFlagsBits = 0xD00000000000002DLL;
    v211._object = (void *)0x8000000100555A40;
    v212 = NSUserDefaults.internalBool(forKey:)(v211);

    *(_BYTE *)(v1 + 3229) = v212;
    v213 = *(_QWORD *)(v1 + 2504);
    v214 = *(_QWORD *)(v1 + 2240);
    v215 = *(void (**)(uint64_t))(v214 + 176);
    v216 = *(int *)(*(_QWORD *)(v1 + 2480) + 32);
    v217 = (uint64_t *)(v213 + v216);
    v218 = *(_QWORD *)(v213 + v216 + 8);
    if (v215)
    {
      v219 = *(_QWORD *)(v214 + 184);
      swift_bridgeObjectRetain(*(_QWORD *)(v213 + v216 + 8));
      v220 = sub_10002EF2C((uint64_t)v215, v219);
      v215(v220);
      sub_10002F034((uint64_t)v215, v219);
    }
    else
    {
      v221 = *v217;
      v222 = type metadata accessor for DigitalPresentmentEncryptionCertificateFetcher();
      swift_allocObject(v222, 56, 7);
      swift_bridgeObjectRetain_n(v218, 2);
      v223 = sub_1001AF038(v221, v218, 0);
      *(_QWORD *)(v1 + 1008) = v222;
      *(_QWORD *)(v1 + 1016) = &off_10060A898;
      *(_QWORD *)(v1 + 984) = v223;
    }
    swift_bridgeObjectRelease(v218);
    v224 = sub_10000806C((_QWORD *)(v1 + 984), *(_QWORD *)(v1 + 1008));
    v225 = *v224;
    v226 = *(_QWORD *)(*v224 + 32);
    if (v226)
    {
      swift_retain(*(_QWORD *)(*v224 + 32));
      sub_100004828((uint64_t *)&unk_100633630);
      sub_100004828((uint64_t *)&unk_100633430);
      Task.cancel()();
      swift_release(v226);
    }
    v227 = *(_QWORD *)(v1 + 2504);
    v228 = *(_QWORD *)(v1 + 2376);
    v229 = *(_QWORD *)(v1 + 2368);
    v230 = type metadata accessor for TaskPriority(0);
    *(_QWORD *)(v1 + 2864) = v230;
    v231 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v230 - 8) + 56);
    *(_QWORD *)(v1 + 2872) = v231;
    v231(v228, 1, 1, v230);
    v232 = (_QWORD *)swift_allocObject(&unk_10060BB28, 40, 7);
    v232[2] = 0;
    v232[3] = 0;
    v232[4] = v225;
    swift_retain(v225);
    v233 = sub_10012E054(v228, (uint64_t)&unk_100633640, (uint64_t)v232);
    v234 = *(_QWORD *)(v225 + 32);
    *(_QWORD *)(v225 + 32) = v233;
    swift_release(v234);
    sub_100035DE8(v227, v229, type metadata accessor for ValidatedDigitalPresentmentRequest);
    v235 = sub_1003DB1F4();
    *(_QWORD *)(v1 + 2880) = v235;
    *(_QWORD *)(v1 + 2888) = v236;
    v237 = v235;
    v238 = v236;
    if (*v202 == 1)
    {
      *(_QWORD *)(v1 + 1056) = 0;
      *(_OWORD *)(v1 + 1024) = 0u;
      *(_OWORD *)(v1 + 1040) = 0u;
    }
    else
    {
      sub_10002581C(*(_QWORD *)(v1 + 2240) + OBJC_IVAR____TtC8coreidvd22DigitalPresentmentFlow_featureFlagProvider, v1 + 1024);
    }
    v324 = *(_QWORD *)(v1 + 2552);
    v264 = *(uint64_t **)(v1 + 2360);
    v265 = *(_QWORD *)(v1 + 2352);
    v330 = *(_QWORD *)(v1 + 2240);
    v311 = v217[1];
    v316 = *v217;
    v266 = (char *)v264 + *(int *)(v265 + 24);
    v267 = *(_QWORD *)(v1 + 2504) + *(int *)(*(_QWORD *)(v1 + 2480) + 24);
    v268 = type metadata accessor for Locale.Region(0);
    v269 = *(_QWORD *)(v268 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v269 + 16))(v266, v267, v268);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v269 + 56))(v266, 0, 1, v268);
    sub_100038B24(v1 + 1024, (uint64_t)v264 + *(int *)(v265 + 28), &qword_100639040);
    *v264 = v237;
    v264[1] = v238;
    v264[2] = v316;
    v264[3] = v311;
    sub_100022948(v237, v238);
    v270 = swift_bridgeObjectRetain(v311);
    static DaemonSignposts.requestDocumentCreateProposal.getter(v270);
    DIPSignpost.init(_:)(v324);
    *(_QWORD *)(v1 + 2896) = *(_QWORD *)(v330 + 272);
    v271 = (_QWORD *)swift_task_alloc(dword_10063DB1C);
    *(_QWORD *)(v1 + 2904) = v271;
    *v271 = v1;
    v271[1] = sub_100218C14;
    return sub_100372FE8(v1 + 736, *(_QWORD *)(v1 + 2360));
  }
}

uint64_t sub_1002183B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 2848);
  *(_QWORD *)(*v3 + 2856) = v2;
  swift_task_dealloc(v6);
  v7 = *(_QWORD *)(v5 + 2240);
  if (v2)
  {
    v8 = sub_10021D934;
  }
  else
  {
    swift_bridgeObjectRelease(a2);
    v8 = sub_100218430;
  }
  return swift_task_switch(v8, v7, 0);
}

uint64_t sub_100218430()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  unint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __n128 v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;

  v1 = *(_QWORD *)(v0 + 2840);
  *(_BYTE *)(*(_QWORD *)(v0 + 2520) + *(int *)(v0 + 3224)) = 1;
  v2._countAndFlagsBits = 0xD00000000000002FLL;
  v2._object = (void *)0x8000000100555C90;
  v3._countAndFlagsBits = 0x3061663537656538;
  v3._object = (void *)0xE800000000000000;
  logMilestone(tag:description:)(v3, v2);
  swift_release(v1);
  v4 = *(_QWORD *)(v0 + 2856);
  *(_BYTE *)(v0 + 3229) = 1;
  v5 = *(_QWORD *)(v0 + 2504);
  v6 = *(_QWORD *)(v0 + 2240);
  v7 = *(void (**)(uint64_t))(v6 + 176);
  v8 = *(int *)(*(_QWORD *)(v0 + 2480) + 32);
  v9 = (uint64_t *)(v5 + v8);
  v10 = *(_QWORD *)(v5 + v8 + 8);
  if (v7)
  {
    v11 = *(_QWORD *)(v6 + 184);
    swift_bridgeObjectRetain(*(_QWORD *)(v5 + v8 + 8));
    v12 = sub_10002EF2C((uint64_t)v7, v11);
    v7(v12);
    sub_10002F034((uint64_t)v7, v11);
  }
  else
  {
    v13 = *v9;
    v14 = type metadata accessor for DigitalPresentmentEncryptionCertificateFetcher();
    swift_allocObject(v14, 56, 7);
    swift_bridgeObjectRetain_n(v10, 2);
    v15 = sub_1001AF038(v13, v10, 0);
    *(_QWORD *)(v0 + 1008) = v14;
    *(_QWORD *)(v0 + 1016) = &off_10060A898;
    *(_QWORD *)(v0 + 984) = v15;
  }
  swift_bridgeObjectRelease(v10);
  v16 = sub_10000806C((_QWORD *)(v0 + 984), *(_QWORD *)(v0 + 1008));
  v17 = *v16;
  v18 = *(_QWORD *)(*v16 + 32);
  if (v18)
  {
    swift_retain(*(_QWORD *)(*v16 + 32));
    sub_100004828((uint64_t *)&unk_100633630);
    sub_100004828((uint64_t *)&unk_100633430);
    Task.cancel()();
    swift_release(v18);
  }
  v19 = *(_QWORD *)(v0 + 2504);
  v20 = *(_QWORD *)(v0 + 2376);
  v21 = *(_QWORD *)(v0 + 2368);
  v22 = type metadata accessor for TaskPriority(0);
  *(_QWORD *)(v0 + 2864) = v22;
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  *(_QWORD *)(v0 + 2872) = v23;
  v23(v20, 1, 1, v22);
  v24 = (_QWORD *)swift_allocObject(&unk_10060BB28, 40, 7);
  v24[2] = 0;
  v24[3] = 0;
  v24[4] = v17;
  swift_retain(v17);
  v25 = sub_10012E054(v20, (uint64_t)&unk_100633640, (uint64_t)v24);
  v26 = *(_QWORD *)(v17 + 32);
  *(_QWORD *)(v17 + 32) = v25;
  swift_release(v26);
  sub_100035DE8(v19, v21, type metadata accessor for ValidatedDigitalPresentmentRequest);
  v27 = sub_1003DB1F4();
  *(_QWORD *)(v0 + 2880) = v27;
  *(_QWORD *)(v0 + 2888) = v28;
  if (v4)
  {
    v29 = v4;
    v30 = *(_QWORD *)(v0 + 2832);
    v31 = *(_QWORD *)(v0 + 2504);
    v32 = *(_QWORD *)(v0 + 2240);
    sub_100035DAC(*(_QWORD *)(v0 + 2368), type metadata accessor for DigitalPresentmentISOBuilder);
    sub_100035DAC(v31, type metadata accessor for ValidatedDigitalPresentmentRequest);
    _s8coreidvd24DigitalPresentmentHelperVwxx_0((_QWORD *)(v0 + 984));
    *(_BYTE *)(v32 + v30) = 0;
    v33 = *(int *)(v0 + 3220);
    v104 = *(_QWORD *)(v0 + 2616);
    v107 = *(_QWORD *)(v0 + 2624);
    v98 = *(_QWORD *)(v0 + 2568);
    v101 = *(_QWORD *)(v0 + 2560);
    v34 = *(_QWORD *)(v0 + 2520);
    v35 = *(_QWORD *)(v0 + 2432);
    v36 = *(_QWORD *)(v0 + 2264);
    v37 = *(_QWORD *)(v0 + 2256);
    v38 = *(_QWORD *)(v0 + 2248);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 2424) + 104))(v35, enum case for DIPError.Code.internalError(_:), *(_QWORD *)(v0 + 2416));
    swift_errorRetain(v29);
    v39 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, v29, v35, 0, v39, 0xD00000000000006DLL, 0x8000000100555820, 0xD000000000000019, 0x8000000100555960, 439);
    v40 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    v41 = swift_allocError(v38, v40, 0, 0);
    v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16);
    v42(v43, v36, v38);
    swift_errorRelease(*(_QWORD *)(v34 + v33));
    *(_QWORD *)(v34 + v33) = v41;
    swift_allocError(v38, v40, 0, 0);
    v45 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v42)(v44, v36, v38);
    swift_willThrow(v45);
    swift_errorRelease(v29);
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v38);
    sub_100035E2C();
    v46 = *(void (**)(uint64_t, uint64_t))(v98 + 8);
    v46(v104, v101);
    v46(v107, v101);
    sub_100035DAC(v34, type metadata accessor for DigitalPresentmentRequestDocumentAnalyticsRecorder);
    v47 = *(_QWORD *)(v0 + 2784);
    v48 = *(_QWORD *)(v0 + 2776);
    v49 = *(_QWORD *)(v0 + 2768);
    v50 = *(_QWORD *)(v0 + 2760);
    v51 = *(_QWORD *)(v0 + 2752);
    v52 = *(_QWORD *)(v0 + 2744);
    v53 = *(_QWORD *)(v0 + 2736);
    v54 = *(_QWORD *)(v0 + 2728);
    v55 = *(_QWORD *)(v0 + 2720);
    v67 = *(_QWORD *)(v0 + 2712);
    v68 = *(_QWORD *)(v0 + 2704);
    v69 = *(_QWORD *)(v0 + 2680);
    v70 = *(_QWORD *)(v0 + 2672);
    v71 = *(_QWORD *)(v0 + 2664);
    v72 = *(_QWORD *)(v0 + 2656);
    v73 = *(_QWORD *)(v0 + 2648);
    v74 = *(_QWORD *)(v0 + 2624);
    v75 = *(_QWORD *)(v0 + 2616);
    v76 = *(_QWORD *)(v0 + 2608);
    v77 = *(_QWORD *)(v0 + 2600);
    v78 = *(_QWORD *)(v0 + 2592);
    v79 = *(_QWORD *)(v0 + 2584);
    v80 = *(_QWORD *)(v0 + 2576);
    v81 = *(_QWORD *)(v0 + 2552);
    v82 = *(_QWORD *)(v0 + 2544);
    v83 = *(_QWORD *)(v0 + 2520);
    v84 = *(_QWORD *)(v0 + 2504);
    v85 = *(_QWORD *)(v0 + 2496);
    v86 = *(_QWORD *)(v0 + 2472);
    v87 = *(_QWORD *)(v0 + 2464);
    v88 = *(_QWORD *)(v0 + 2440);
    v89 = *(_QWORD *)(v0 + 2432);
    v90 = *(_QWORD *)(v0 + 2408);
    v91 = *(_QWORD *)(v0 + 2400);
    v92 = *(_QWORD *)(v0 + 2376);
    v93 = *(_QWORD *)(v0 + 2368);
    v94 = *(_QWORD *)(v0 + 2360);
    v95 = *(_QWORD *)(v0 + 2344);
    v96 = *(_QWORD *)(v0 + 2320);
    v99 = *(_QWORD *)(v0 + 2312);
    v102 = *(_QWORD *)(v0 + 2304);
    v105 = *(_QWORD *)(v0 + 2288);
    v108 = *(_QWORD *)(v0 + 2264);
    swift_task_dealloc(*(_QWORD *)(v0 + 2792));
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    swift_task_dealloc(v49);
    swift_task_dealloc(v50);
    swift_task_dealloc(v51);
    swift_task_dealloc(v52);
    swift_task_dealloc(v53);
    swift_task_dealloc(v54);
    swift_task_dealloc(v55);
    swift_task_dealloc(v67);
    swift_task_dealloc(v68);
    swift_task_dealloc(v69);
    swift_task_dealloc(v70);
    swift_task_dealloc(v71);
    swift_task_dealloc(v72);
    swift_task_dealloc(v73);
    swift_task_dealloc(v74);
    swift_task_dealloc(v75);
    swift_task_dealloc(v76);
    swift_task_dealloc(v77);
    swift_task_dealloc(v78);
    swift_task_dealloc(v79);
    swift_task_dealloc(v80);
    swift_task_dealloc(v81);
    swift_task_dealloc(v82);
    swift_task_dealloc(v83);
    swift_task_dealloc(v84);
    swift_task_dealloc(v85);
    swift_task_dealloc(v86);
    swift_task_dealloc(v87);
    swift_task_dealloc(v88);
    swift_task_dealloc(v89);
    swift_task_dealloc(v90);
    swift_task_dealloc(v91);
    swift_task_dealloc(v92);
    swift_task_dealloc(v93);
    swift_task_dealloc(v94);
    swift_task_dealloc(v95);
    swift_task_dealloc(v96);
    swift_task_dealloc(v99);
    swift_task_dealloc(v102);
    swift_task_dealloc(v105);
    swift_task_dealloc(v108);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v57 = v27;
    v58 = v28;
    if (*(_BYTE *)(v0 + 3228) == 1)
    {
      *(_QWORD *)(v0 + 1056) = 0;
      *(_OWORD *)(v0 + 1024) = 0u;
      *(_OWORD *)(v0 + 1040) = 0u;
    }
    else
    {
      sub_10002581C(*(_QWORD *)(v0 + 2240) + OBJC_IVAR____TtC8coreidvd22DigitalPresentmentFlow_featureFlagProvider, v0 + 1024);
    }
    v103 = *(_QWORD *)(v0 + 2552);
    v59 = *(uint64_t **)(v0 + 2360);
    v60 = *(_QWORD *)(v0 + 2352);
    v106 = *(_QWORD *)(v0 + 2240);
    v97 = v9[1];
    v100 = *v9;
    v61 = (char *)v59 + *(int *)(v60 + 24);
    v62 = *(_QWORD *)(v0 + 2504) + *(int *)(*(_QWORD *)(v0 + 2480) + 24);
    v63 = type metadata accessor for Locale.Region(0);
    v64 = *(_QWORD *)(v63 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v61, v62, v63);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
    sub_100038B24(v0 + 1024, (uint64_t)v59 + *(int *)(v60 + 28), &qword_100639040);
    *v59 = v57;
    v59[1] = v58;
    v59[2] = v100;
    v59[3] = v97;
    sub_100022948(v57, v58);
    v65 = swift_bridgeObjectRetain(v97);
    static DaemonSignposts.requestDocumentCreateProposal.getter(v65);
    DIPSignpost.init(_:)(v103);
    *(_QWORD *)(v0 + 2896) = *(_QWORD *)(v106 + 272);
    v66 = (_QWORD *)swift_task_alloc(dword_10063DB1C);
    *(_QWORD *)(v0 + 2904) = v66;
    *v66 = v0;
    v66[1] = sub_100218C14;
    return sub_100372FE8(v0 + 736, *(_QWORD *)(v0 + 2360));
  }
}

uint64_t sub_100218C14()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();
  __int128 v6;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 2904);
  *(_QWORD *)(*v1 + 2912) = v0;
  swift_task_dealloc(v3);
  v4 = *(_QWORD *)(v2 + 2240);
  if (v0)
  {
    v5 = sub_10021DD8C;
  }
  else
  {
    v6 = *(_OWORD *)(v2 + 776);
    *(_OWORD *)(v2 + 2928) = *(_OWORD *)(v2 + 760);
    *(_QWORD *)(v2 + 2920) = *(_QWORD *)(v2 + 744);
    *(_OWORD *)(v2 + 2944) = v6;
    *(_QWORD *)(v2 + 2960) = *(_QWORD *)(v2 + 792);
    *(_OWORD *)(v2 + 2968) = *(_OWORD *)(v2 + 808);
    *(_QWORD *)(v2 + 2984) = *(_QWORD *)(v2 + 832);
    *(_QWORD *)(v2 + 2992) = *(_QWORD *)(v2 + 848);
    v5 = sub_100218CB8;
  }
  return swift_task_switch(v5, v4, 0);
}

uint64_t sub_100218CB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  _QWORD *v13;
  unint64_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  NSObject *v23;
  uint64_t v24;
  os_log_type_t v25;
  uint8_t *v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  Swift::String v35;
  Swift::String v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  _QWORD *v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t, uint64_t);
  void *v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(__n128);
  __n128 v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  __n128 v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void (*v138)(uint64_t, uint64_t, uint64_t);
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void (*v142)(uint64_t, uint64_t);
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  void (*v156)(uint64_t);
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  _QWORD *v162;
  uint64_t v163;
  uint64_t v164;
  _QWORD *v165;
  uint64_t v166;
  uint64_t v167;
  id v168;
  Swift::String v169;
  Swift::Bool v170;
  uint64_t v171;
  uint64_t v172;
  _OWORD *v173;
  int *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t (*v177)(uint64_t, uint64_t);
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  __int128 v183;
  __int128 v184;
  __int128 v185;
  __int128 v186;
  __int128 v187;
  uint64_t *v188;
  uint64_t *v189;
  __int128 v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  __int128 v194;
  __int128 v195;
  __int128 v196;
  __int128 v197;
  __int128 v198;
  __int128 v199;
  __int128 v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  void (*v204)(uint64_t);
  uint64_t v205;
  uint64_t v206;
  _QWORD *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t *v213;
  void (*v214)(uint64_t *, uint64_t, uint64_t);
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  _QWORD *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t *v223;
  uint64_t v224;
  objc_class *v225;
  char *v226;
  _QWORD *v227;
  char *v228;
  uint64_t v229;
  uint64_t v230;
  id v231;
  id v232;
  id v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  Swift::String v241;
  Swift::String v242;
  uint64_t v243;
  uint64_t v244;
  _QWORD *v245;
  uint64_t v246;
  void (*v247)(uint64_t);
  uint64_t v248;
  uint64_t v249;
  _QWORD *v250;
  _QWORD *v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  char v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  _QWORD *v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  unint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t *v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  unint64_t v321;
  void (*v322)(uint64_t, uint64_t);
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t *v330;
  uint64_t v331;
  uint64_t v332;
  unint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  unint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  void (*v359)(uint64_t, uint64_t);
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  _QWORD *v363;
  _QWORD *v364;
  uint64_t v365;
  uint64_t v366;
  _OWORD *v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  _QWORD *v375;
  __int128 v376;
  uint64_t (*v377)(uint64_t);
  uint64_t v378[3];

  v372 = v0 + 1024;
  v375 = (_QWORD *)(v0 + 984);
  v1 = sub_1000A1F54(v0 + 736, v0 + 616, &qword_100639048);
  if (!*(_QWORD *)(v0 + 624))
  {
    v22 = defaultLogger()(v1);
    v23 = Logger.logObject.getter(v22);
    v25 = static os_log_type_t.info.getter(v23, v24);
    if (os_log_type_enabled(v23, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v25, "requestDocument: no matching proposal was returned", v26, 2u);
      swift_slowDealloc(v26, -1, -1);
    }
    v27 = *(void (**)(uint64_t, uint64_t))(v0 + 2800);
    v28 = *(_QWORD *)(v0 + 2720);
    v29 = *(_QWORD *)(v0 + 2688);
    v323 = *(_QWORD *)(v0 + 2608);
    v333 = *(_QWORD *)(v0 + 2888);
    v302 = *(_QWORD *)(v0 + 2568);
    v307 = *(_QWORD *)(v0 + 2560);
    v315 = *(_QWORD *)(v0 + 2880);
    v30 = *(_QWORD *)(v0 + 2432);
    v31 = *(_QWORD *)(v0 + 2424);
    v32 = *(_QWORD *)(v0 + 2416);
    v342 = *(_QWORD *)(v0 + 2368);
    v350 = *(_QWORD *)(v0 + 2504);
    v33 = *(_QWORD *)(v0 + 2360);
    v34 = *(_QWORD *)(v0 + 2248);
    v361 = *(_QWORD *)(v0 + 2240);
    v368 = *(_QWORD *)(v0 + 2832);

    v27(v28, v29);
    v35._countAndFlagsBits = 0xD000000000000049;
    v35._object = (void *)0x8000000100555A70;
    v36._countAndFlagsBits = 0x3562656564323639;
    v36._object = (void *)0xE800000000000000;
    logMilestone(tag:description:)(v36, v35);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v31 + 104))(v30, enum case for DIPError.Code.digitalPresentmentNoCredentialAvailable(_:), v32);
    v37 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v38 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    v39 = swift_allocError(v34, v38, 0, 0);
    v40 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000021, 0x8000000100555AC0, 0, v30, 0, v37, 0xD00000000000006DLL, 0x8000000100555820, 0xD000000000000019, 0x8000000100555960, 306);
    swift_willThrow(v40);
    sub_100007F8C(v315, v333);
    (*(void (**)(uint64_t, uint64_t))(v302 + 8))(v323, v307);
    v41 = v33;
    v42 = v39;
    sub_100035DAC(v41, type metadata accessor for DigitalPresentmentSessionManager.Request);
    sub_100008030(v372, &qword_100639040);
    sub_100035DAC(v342, type metadata accessor for DigitalPresentmentISOBuilder);
    sub_100035DAC(v350, type metadata accessor for ValidatedDigitalPresentmentRequest);
    _s8coreidvd24DigitalPresentmentHelperVwxx_0(v375);
    v44 = v361;
    v43 = v368;
    goto LABEL_7;
  }
  v2 = *(_QWORD *)(v0 + 2992);
  v360 = *(_QWORD *)(v0 + 2984);
  v367 = (_OWORD *)(v0 + 1064);
  v3 = *(_QWORD *)(v0 + 2968);
  v340 = *(_QWORD *)(v0 + 2960);
  v349 = *(_QWORD *)(v0 + 2976);
  v321 = *(_QWORD *)(v0 + 2944);
  v331 = *(_QWORD *)(v0 + 2952);
  v313 = *(_QWORD *)(v0 + 2936);
  v4 = *(_QWORD *)(v0 + 2928);
  v5 = *(_QWORD *)(v0 + 2920);
  v6 = *(_OWORD *)(v0 + 696);
  *(_OWORD *)(v0 + 560) = *(_OWORD *)(v0 + 680);
  *(_OWORD *)(v0 + 576) = v6;
  *(_OWORD *)(v0 + 592) = *(_OWORD *)(v0 + 712);
  *(_QWORD *)(v0 + 608) = *(_QWORD *)(v0 + 728);
  v7 = *(_OWORD *)(v0 + 632);
  *(_OWORD *)(v0 + 496) = *(_OWORD *)(v0 + 616);
  *(_OWORD *)(v0 + 512) = v7;
  v8 = *(_OWORD *)(v0 + 664);
  *(_OWORD *)(v0 + 528) = *(_OWORD *)(v0 + 648);
  *(_OWORD *)(v0 + 544) = v8;
  DIPSignpost.end(workflowID:isBackground:)((Swift::String_optional)0, (Swift::Bool_optional)2);
  defaultLogger()(v9);
  sub_100222630((_QWORD *)(v0 + 736), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10022258C);
  v297 = v5;
  swift_bridgeObjectRetain(v5);
  v301 = v4;
  swift_bridgeObjectRetain(v4);
  sub_100028034(v313, v321);
  sub_100028034(v331, v340);
  v341 = v2;
  swift_bridgeObjectRetain(v2);
  v332 = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v349);
  swift_bridgeObjectRetain(v360);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.debug.getter(v11);
  v13 = (_QWORD *)(v0 + 736);
  v306 = (uint64_t *)(v0 + 496);
  if (os_log_type_enabled(v11, v12))
  {
    v277 = *(_QWORD *)(v0 + 2952);
    v282 = *(_QWORD *)(v0 + 2960);
    v14 = *(_QWORD *)(v0 + 2944);
    v15 = *(_QWORD *)(v0 + 2936);
    v314 = *(_QWORD *)(v0 + 2736);
    v322 = *(void (**)(uint64_t, uint64_t))(v0 + 2800);
    v293 = *(_QWORD *)(v0 + 2688);
    v16 = (uint8_t *)swift_slowAlloc(12, -1);
    v17 = swift_slowAlloc(32, -1);
    v378[0] = v17;
    *(_DWORD *)v16 = 136315138;
    swift_bridgeObjectRetain(v297);
    swift_bridgeObjectRetain(v301);
    v18 = v15;
    v13 = (_QWORD *)(v0 + 736);
    sub_100028034(v18, v14);
    sub_100028034(v277, v282);
    swift_bridgeObjectRetain(v332);
    swift_bridgeObjectRetain(v349);
    swift_bridgeObjectRetain(v360);
    swift_bridgeObjectRetain(v341);
    v19 = sub_100372C08();
    v21 = v20;
    sub_100222630((_QWORD *)(v0 + 736), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10022268C);
    *(_QWORD *)(v0 + 2168) = sub_1000E3AC8(v19, v21, v378);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 2168, v0 + 2176, v16 + 4);
    swift_bridgeObjectRelease(v21);
    sub_100222630((_QWORD *)(v0 + 736), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10022268C);
    sub_100222630((_QWORD *)(v0 + 736), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10022268C);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "requestDocument received proposal %s", v16, 0xCu);
    swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);

    v322(v314, v293);
  }
  else
  {
    v45 = *(void (**)(uint64_t, uint64_t))(v0 + 2800);
    v46 = *(_QWORD *)(v0 + 2736);
    v47 = *(_QWORD *)(v0 + 2688);
    sub_100222630(v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10022268C);
    sub_100222630(v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10022268C);

    v45(v46, v47);
  }
  v48 = *(_BYTE *)(v0 + 3229);
  *v367 = 0u;
  *(_OWORD *)(v0 + 1080) = 0u;
  *(_QWORD *)(v0 + 1096) = 0;
  if ((v48 & 1) == 0)
  {
    v363 = v13;
    v66 = *(_QWORD *)(v0 + 2912);
    v67 = sub_10021F380(v306);
    *(_QWORD *)(v0 + 3000) = v67;
    *(_QWORD *)(v0 + 3008) = v66;
    if (v66)
    {
      v68 = *(_QWORD *)(v0 + 2888);
      v69 = *(_QWORD *)(v0 + 2880);
      v70 = *(_QWORD *)(v0 + 2608);
      v71 = *(_QWORD *)(v0 + 2568);
      v72 = *(_QWORD *)(v0 + 2560);
      v73 = *(_QWORD *)(v0 + 2504);
      v74 = *(_QWORD *)(v0 + 2368);
      v75 = *(_QWORD *)(v0 + 2360);
      v344 = *(_QWORD *)(v0 + 2240);
      v352 = *(_QWORD *)(v0 + 2832);
      sub_100222630(v363, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10022268C);
      sub_100007F8C(v69, v68);
      v76 = *(void (**)(uint64_t, uint64_t))(v71 + 8);
      v42 = v66;
      v76(v70, v72);
      sub_100035DAC(v75, type metadata accessor for DigitalPresentmentSessionManager.Request);
      sub_100008030(v372, &qword_100639040);
      sub_100035DAC(v74, type metadata accessor for DigitalPresentmentISOBuilder);
      sub_100035DAC(v73, type metadata accessor for ValidatedDigitalPresentmentRequest);
      sub_100008030((uint64_t)v367, &qword_100639050);
      _s8coreidvd24DigitalPresentmentHelperVwxx_0(v375);
      *(_BYTE *)(v344 + v352) = 0;
      goto LABEL_21;
    }
    v88 = v67;
    v89 = *(_QWORD *)(v0 + 2240);
    *(_QWORD *)(v0 + 3016) = v67[3];
    v90 = v67[4];
    *(_QWORD *)(v0 + 3024) = v90;
    v91 = *(void (**)(__n128))(v89 + 256);
    if (!v91)
    {
      v120 = *(_QWORD *)(v0 + 2888);
      v121 = *(_QWORD *)(v0 + 2880);
      v310 = *(_QWORD *)(v0 + 2568);
      v319 = *(_QWORD *)(v0 + 2560);
      v327 = *(_QWORD *)(v0 + 2608);
      v347 = *(_QWORD *)(v0 + 2504);
      v355 = *(_QWORD *)(v0 + 2832);
      v122 = *(_QWORD *)(v0 + 2432);
      v338 = *(_QWORD *)(v0 + 2368);
      v123 = *(_QWORD *)(v0 + 2360);
      v124 = *(_QWORD *)(v0 + 2248);
      (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 2424) + 104))(v122, enum case for DIPError.Code.badLogic(_:), *(_QWORD *)(v0 + 2416));
      v125 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
      v126 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
      v42 = swift_allocError(v124, v126, 0, 0);
      v127 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001ELL, 0x8000000100555AF0, 0, v122, 0, v125, 0xD00000000000006DLL, 0x8000000100555820, 0xD000000000000019, 0x8000000100555960, 322);
      swift_willThrow(v127);
      swift_release(v88);
      sub_100222630(v363, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10022268C);
      sub_100007F8C(v121, v120);
      (*(void (**)(uint64_t, uint64_t))(v310 + 8))(v327, v319);
      sub_100035DAC(v123, type metadata accessor for DigitalPresentmentSessionManager.Request);
      sub_100008030(v372, &qword_100639040);
      sub_100035DAC(v338, type metadata accessor for DigitalPresentmentISOBuilder);
      sub_100035DAC(v347, type metadata accessor for ValidatedDigitalPresentmentRequest);
      sub_100008030((uint64_t)v367, &qword_100639050);
      _s8coreidvd24DigitalPresentmentHelperVwxx_0(v375);
      *(_BYTE *)(v89 + v355) = 0;
      goto LABEL_21;
    }
    v92 = swift_bridgeObjectRetain(v90);
    v91(v92);
    sub_100008018((__int128 *)(v0 + 1144), v0 + 1104);
    sub_1000A1F54(v0 + 528, v0 + 2152, &qword_100638678);
    sub_1000A1F54(v0 + 2152, v0 + 2120, &qword_100638678);
    v93 = *(_QWORD *)(v0 + 2128);
    if (v93 >> 60 != 15)
    {
      v153 = *(_QWORD *)(v0 + 2240);
      v154 = *(_QWORD *)(v0 + 2120);
      v156 = *(void (**)(uint64_t))(v153 + 192);
      v155 = *(_QWORD *)(v153 + 200);
      v157 = *(_QWORD *)(v0 + 504);
      v158 = *(_QWORD *)(v0 + 560);
      v159 = *(_QWORD *)(v0 + 568);
      v160 = *(_QWORD *)(v0 + 584);
      v161 = *(_QWORD *)(v0 + 608);
      *(_QWORD *)(v0 + 856) = *(_QWORD *)(v0 + 496);
      *(_QWORD *)(v0 + 864) = v157;
      v371 = v154;
      *(_QWORD *)(v0 + 872) = v154;
      *(_QWORD *)(v0 + 880) = v93;
      *(_QWORD *)(v0 + 888) = v158;
      *(_QWORD *)(v0 + 896) = v159;
      *(_QWORD *)(v0 + 904) = v160;
      v376 = *(_OWORD *)(v0 + 592);
      *(_OWORD *)(v0 + 912) = v376;
      *(_QWORD *)(v0 + 928) = v161;
      sub_100222730(v0 + 2152);
      v162 = (_QWORD *)(v0 + 1224);
      sub_100222730(v0 + 2152);
      swift_bridgeObjectRetain(v161);
      swift_bridgeObjectRetain(v157);
      swift_bridgeObjectRetain(v159);
      swift_bridgeObjectRetain(v376);
      sub_10021EF40((uint64_t *)(v0 + 1224));
      if (v156)
      {
        v163 = swift_retain(v155);
        v164 = v376;
        v156(v163);
        sub_10002F034((uint64_t)v156, v155);
        v165 = (_QWORD *)(v0 + 1184);
        v166 = v371;
      }
      else
      {
        sub_10002581C(v0 + 1104, v0 + 1264);
        sub_10002581C(v0 + 1224, v0 + 1304);
        v208 = *(_QWORD *)(v0 + 1288);
        sub_10001E624(v0 + 1264, v208);
        v209 = *(_QWORD *)(v208 - 8);
        v330 = (uint64_t *)swift_task_alloc((*(_QWORD *)(v209 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(void))(v209 + 16))();
        v210 = *(_QWORD *)(v0 + 1328);
        v211 = sub_10001E624(v0 + 1304, v210);
        v212 = *(_QWORD *)(v210 - 8);
        v213 = (uint64_t *)swift_task_alloc((*(_QWORD *)(v212 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
        v214 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v212 + 16);
        v162 = (_QWORD *)(v0 + 1224);
        v214(v213, v211, v210);
        v215 = *v330;
        v216 = *v213;
        swift_bridgeObjectRetain(v157);
        v166 = v371;
        sub_100022948(v371, v93);
        swift_bridgeObjectRetain(v159);
        swift_bridgeObjectRetain(v376);
        swift_bridgeObjectRetain(v161);
        v217 = sub_100222438(v215, v216, (_OWORD *)(v0 + 856));
        _s8coreidvd24DigitalPresentmentHelperVwxx_0((_QWORD *)(v0 + 1304));
        swift_task_dealloc(v213);
        _s8coreidvd24DigitalPresentmentHelperVwxx_0((_QWORD *)(v0 + 1264));
        swift_task_dealloc(v330);
        *(_QWORD *)(v0 + 1208) = type metadata accessor for DigitalPresentmentCredentialValidator();
        *(_QWORD *)(v0 + 1216) = &off_10060C0C8;
        *(_QWORD *)(v0 + 1184) = v217;
        v164 = v376;
        v165 = (_QWORD *)(v0 + 1184);
      }
      swift_bridgeObjectRelease(v157);
      sub_100007F8C(v166, v93);
      swift_bridgeObjectRelease(v161);
      swift_bridgeObjectRelease(v164);
      swift_bridgeObjectRelease(v159);
      _s8coreidvd24DigitalPresentmentHelperVwxx_0(v162);
      v218 = sub_10000806C(v165, *(_QWORD *)(v0 + 1208));
      *(_QWORD *)(v0 + 3032) = v218;
      return swift_task_switch(sub_10021AD68, *v218, 0);
    }
    v94 = *(_QWORD *)(v0 + 2888);
    v95 = *(_QWORD *)(v0 + 2880);
    v309 = *(_QWORD *)(v0 + 2560);
    v317 = *(_QWORD *)(v0 + 2608);
    v96 = *(_QWORD *)(v0 + 2432);
    v97 = *(_QWORD *)(v0 + 2424);
    v98 = *(_QWORD *)(v0 + 2416);
    v325 = *(_QWORD *)(v0 + 2368);
    v336 = *(_QWORD *)(v0 + 2504);
    v298 = *(_QWORD *)(v0 + 2568);
    v303 = *(_QWORD *)(v0 + 2360);
    v99 = *(_QWORD *)(v0 + 2248);
    v346 = *(_QWORD *)(v0 + 2240);
    v354 = *(_QWORD *)(v0 + 2832);
    swift_bridgeObjectRelease(v90);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v97 + 104))(v96, enum case for DIPError.Code.badLogic(_:), v98);
    v100 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v101 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    v42 = swift_allocError(v99, v101, 0, 0);
    v102 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001ELL, 0x8000000100555B10, 0, v96, 0, v100, 0xD00000000000006DLL, 0x8000000100555820, 0xD000000000000019, 0x8000000100555960, 325);
    swift_willThrow(v102);
    swift_release(v88);
    sub_100222630(v363, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10022268C);
    sub_100007F8C(v95, v94);
    _s8coreidvd24DigitalPresentmentHelperVwxx_0((_QWORD *)(v0 + 1104));
    (*(void (**)(uint64_t, uint64_t))(v298 + 8))(v317, v309);
    sub_100035DAC(v303, type metadata accessor for DigitalPresentmentSessionManager.Request);
    sub_100008030(v372, &qword_100639040);
    sub_100035DAC(v325, type metadata accessor for DigitalPresentmentISOBuilder);
    sub_100035DAC(v336, type metadata accessor for ValidatedDigitalPresentmentRequest);
    sub_100008030((uint64_t)v367, &qword_100639050);
    _s8coreidvd24DigitalPresentmentHelperVwxx_0(v375);
    v44 = v346;
    v43 = v354;
LABEL_7:
    *(_BYTE *)(v44 + v43) = 0;
LABEL_21:
    v128 = *(int *)(v0 + 3220);
    v369 = *(_QWORD *)(v0 + 2616);
    v373 = *(_QWORD *)(v0 + 2624);
    v356 = *(_QWORD *)(v0 + 2568);
    v365 = *(_QWORD *)(v0 + 2560);
    v129 = *(_QWORD *)(v0 + 2520);
    v130 = *(_QWORD *)(v0 + 2432);
    v131 = *(_QWORD *)(v0 + 2264);
    v132 = *(_QWORD *)(v0 + 2256);
    v133 = *(_QWORD *)(v0 + 2248);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 2424) + 104))(v130, enum case for DIPError.Code.internalError(_:), *(_QWORD *)(v0 + 2416));
    swift_errorRetain(v42);
    v134 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, v42, v130, 0, v134, 0xD00000000000006DLL, 0x8000000100555820, 0xD000000000000019, 0x8000000100555960, 439);
    v135 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    v136 = v42;
    v137 = swift_allocError(v133, v135, 0, 0);
    v138 = *(void (**)(uint64_t, uint64_t, uint64_t))(v132 + 16);
    v138(v139, v131, v133);
    swift_errorRelease(*(_QWORD *)(v129 + v128));
    *(_QWORD *)(v129 + v128) = v137;
    swift_allocError(v133, v135, 0, 0);
    v141 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v138)(v140, v131, v133);
    swift_willThrow(v141);
    swift_errorRelease(v136);
    (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v131, v133);
    sub_100035E2C();
    v142 = *(void (**)(uint64_t, uint64_t))(v356 + 8);
    v142(v369, v365);
    v142(v373, v365);
    sub_100035DAC(v129, type metadata accessor for DigitalPresentmentRequestDocumentAnalyticsRecorder);
    v143 = *(_QWORD *)(v0 + 2784);
    v144 = *(_QWORD *)(v0 + 2776);
    v145 = *(_QWORD *)(v0 + 2768);
    v146 = *(_QWORD *)(v0 + 2760);
    v147 = *(_QWORD *)(v0 + 2752);
    v148 = *(_QWORD *)(v0 + 2744);
    v149 = *(_QWORD *)(v0 + 2736);
    v150 = *(_QWORD *)(v0 + 2728);
    v151 = *(_QWORD *)(v0 + 2720);
    v252 = *(_QWORD *)(v0 + 2712);
    v253 = *(_QWORD *)(v0 + 2704);
    v254 = *(_QWORD *)(v0 + 2680);
    v255 = *(_QWORD *)(v0 + 2672);
    v256 = *(_QWORD *)(v0 + 2664);
    v257 = *(_QWORD *)(v0 + 2656);
    v258 = *(_QWORD *)(v0 + 2648);
    v259 = *(_QWORD *)(v0 + 2624);
    v261 = *(_QWORD *)(v0 + 2616);
    v263 = *(_QWORD *)(v0 + 2608);
    v265 = *(_QWORD *)(v0 + 2600);
    v267 = *(_QWORD *)(v0 + 2592);
    v269 = *(_QWORD *)(v0 + 2584);
    v270 = *(_QWORD *)(v0 + 2576);
    v271 = *(_QWORD *)(v0 + 2552);
    v272 = *(_QWORD *)(v0 + 2544);
    v273 = *(_QWORD *)(v0 + 2520);
    v275 = *(_QWORD *)(v0 + 2504);
    v279 = *(_QWORD *)(v0 + 2496);
    v284 = *(_QWORD *)(v0 + 2472);
    v286 = *(_QWORD *)(v0 + 2464);
    v290 = *(_QWORD *)(v0 + 2440);
    v294 = *(_QWORD *)(v0 + 2432);
    v300 = *(_QWORD *)(v0 + 2408);
    v304 = *(_QWORD *)(v0 + 2400);
    v311 = *(_QWORD *)(v0 + 2376);
    v320 = *(_QWORD *)(v0 + 2368);
    v328 = *(_QWORD *)(v0 + 2360);
    v339 = *(_QWORD *)(v0 + 2344);
    v348 = *(_QWORD *)(v0 + 2320);
    v357 = *(_QWORD *)(v0 + 2312);
    v366 = *(_QWORD *)(v0 + 2304);
    v370 = *(_QWORD *)(v0 + 2288);
    v374 = *(_QWORD *)(v0 + 2264);
    swift_task_dealloc(*(_QWORD *)(v0 + 2792));
    swift_task_dealloc(v143);
    swift_task_dealloc(v144);
    swift_task_dealloc(v145);
    swift_task_dealloc(v146);
    swift_task_dealloc(v147);
    swift_task_dealloc(v148);
    swift_task_dealloc(v149);
    swift_task_dealloc(v150);
    swift_task_dealloc(v151);
    swift_task_dealloc(v252);
    swift_task_dealloc(v253);
    swift_task_dealloc(v254);
    swift_task_dealloc(v255);
    swift_task_dealloc(v256);
    swift_task_dealloc(v257);
    swift_task_dealloc(v258);
    swift_task_dealloc(v259);
    swift_task_dealloc(v261);
    swift_task_dealloc(v263);
    swift_task_dealloc(v265);
    swift_task_dealloc(v267);
    swift_task_dealloc(v269);
    swift_task_dealloc(v270);
    swift_task_dealloc(v271);
    swift_task_dealloc(v272);
    swift_task_dealloc(v273);
    swift_task_dealloc(v275);
    swift_task_dealloc(v279);
    swift_task_dealloc(v284);
    swift_task_dealloc(v286);
    swift_task_dealloc(v290);
    swift_task_dealloc(v294);
    swift_task_dealloc(v300);
    swift_task_dealloc(v304);
    swift_task_dealloc(v311);
    swift_task_dealloc(v320);
    swift_task_dealloc(v328);
    swift_task_dealloc(v339);
    swift_task_dealloc(v348);
    swift_task_dealloc(v357);
    swift_task_dealloc(v366);
    swift_task_dealloc(v370);
    swift_task_dealloc(v374);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v49 = *(_QWORD *)(v0 + 2240);
  v51 = *(_QWORD *)(v49 + OBJC_IVAR____TtC8coreidvd22DigitalPresentmentFlow_mockPassID);
  v50 = *(_QWORD *)(v49 + OBJC_IVAR____TtC8coreidvd22DigitalPresentmentFlow_mockPassID + 8);
  v52 = *(_QWORD *)(v0 + 2912);
  *(_QWORD *)(v0 + 3040) = 0;
  v53 = *(_QWORD *)(v0 + 544);
  *(_QWORD *)(v0 + 3048) = v53;
  v54 = *(_QWORD *)(v0 + 552);
  *(_QWORD *)(v0 + 3056) = v54;
  swift_bridgeObjectRetain(v50);
  if (v54 >> 60 == 15)
  {
    v55 = *(_QWORD *)(v0 + 2888);
    v56 = *(_QWORD *)(v0 + 2880);
    v324 = *(_QWORD *)(v0 + 2560);
    v334 = *(_QWORD *)(v0 + 2608);
    v351 = *(_QWORD *)(v0 + 2504);
    v362 = *(_QWORD *)(v0 + 2832);
    v57 = *(_QWORD *)(v0 + 2432);
    v58 = *(_QWORD *)(v0 + 2424);
    v59 = *(_QWORD *)(v0 + 2416);
    v343 = *(_QWORD *)(v0 + 2368);
    v308 = *(_QWORD *)(v0 + 2568);
    v316 = *(_QWORD *)(v0 + 2360);
    v60 = *(_QWORD *)(v0 + 2248);
    swift_bridgeObjectRelease(v50);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v58 + 104))(v57, enum case for DIPError.Code.dpAccesssControlRefNil(_:), v59);
    v61 = sub_100004544((uint64_t)_swiftEmptyArrayStorage);
    v62 = sub_100004790((unint64_t *)&qword_10062F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for DIPError, (uint64_t)&protocol conformance descriptor for DIPError);
    v63 = swift_allocError(v60, v62, 0, 0);
    v64 = DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000019, 0x8000000100555B30, 0, v57, 0, v61, 0xD00000000000006DLL, 0x8000000100555820, 0xD000000000000019, 0x8000000100555960, 349);
    swift_willThrow(v64);
    v65 = v13;
    v42 = v63;
    sub_100222630(v65, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10022268C);
    sub_100007F8C(v56, v55);
    (*(void (**)(uint64_t, uint64_t))(v308 + 8))(v334, v324);
    sub_100035DAC(v316, type metadata accessor for DigitalPresentmentSessionManager.Request);
    sub_100008030(v372, &qword_100639040);
    sub_100035DAC(v343, type metadata accessor for DigitalPresentmentISOBuilder);
    sub_100035DAC(v351, type metadata accessor for ValidatedDigitalPresentmentRequest);
    sub_100008030((uint64_t)v367, &qword_100639050);
    _s8coreidvd24DigitalPresentmentHelperVwxx_0(v375);
    *(_BYTE *)(v49 + v362) = 0;
    goto LABEL_21;
  }
  v364 = v13;
  type metadata accessor for SecAccessControl(0);
  sub_100022948(v53, v54);
  v77 = (void *)static SecAccessControlRef.fromData(_:)(v53, v54);
  *(_QWORD *)(v0 + 3064) = v77;
  v78 = v54;
  v79 = v53;
  v353 = v52;
  if (v52)
  {
    v80 = *(_QWORD *)(v0 + 2888);
    v81 = *(_QWORD *)(v0 + 2880);
    v82 = *(_QWORD *)(v0 + 2608);
    v83 = *(_QWORD *)(v0 + 2568);
    v84 = *(_QWORD *)(v0 + 2560);
    v85 = *(_QWORD *)(v0 + 2504);
    v86 = *(_QWORD *)(v0 + 2368);
    v87 = *(_QWORD *)(v0 + 2360);
    v335 = *(_QWORD *)(v0 + 2240);
    v345 = *(_QWORD *)(v0 + 2832);
    sub_100007F78(v79, v78);
    sub_100222630(v364, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10022268C);
    sub_100007F8C(v81, v80);
    swift_bridgeObjectRelease(v50);
    (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v82, v84);
    sub_100035DAC(v87, type metadata accessor for DigitalPresentmentSessionManager.Request);
    sub_100008030(v372, &qword_100639040);
    sub_100035DAC(v86, type metadata accessor for DigitalPresentmentISOBuilder);
    sub_100035DAC(v85, type metadata accessor for ValidatedDigitalPresentmentRequest);
    sub_100008030((uint64_t)v367, &qword_100639050);
    _s8coreidvd24DigitalPresentmentHelperVwxx_0(v375);
    *(_BYTE *)(v335 + v345) = 0;
    v42 = v353;
    goto LABEL_21;
  }
  v103 = *(_QWORD *)(v0 + 2552);
  v104 = *(_QWORD *)(v0 + 2504);
  v288 = *(_QWORD *)(v0 + 2480);
  v326 = *(_QWORD *)(v0 + 2464);
  v337 = *(_QWORD *)(v0 + 2400);
  v299 = v51;
  v274 = *(_QWORD *)(v0 + 2392);
  v285 = *(_QWORD *)(v0 + 2384);
  v105 = *(_QWORD *)(v0 + 2240);
  v283 = v105 + *(_QWORD *)(v0 + 2824);
  static DaemonSignposts.requestDocumentLocalAuthentication.getter();
  DIPSignpost.init(_:)(v103);
  v106 = objc_msgSend(objc_allocWithZone((Class)LAContext), "init");
  *(_QWORD *)(v0 + 1368) = sub_10004BBDC();
  *(_QWORD *)(v0 + 1376) = &off_100619EF0;
  *(_QWORD *)(v0 + 1344) = v106;
  sub_10002581C(v0 + 1344, v0 + 1384);
  v107 = type metadata accessor for DigitalPresentmentLocalAuthenticationManager();
  v108 = swift_allocObject(v107, 80, 7);
  *(_QWORD *)(v0 + 3072) = v108;
  *(_BYTE *)(v108 + 64) = 4;
  *(_QWORD *)(v108 + 72) = 0;
  v268 = (_QWORD *)(v108 + 16);
  sub_100008018((__int128 *)(v0 + 1384), v108 + 16);
  v318 = v108;
  *(_QWORD *)(v108 + 56) = v77;
  v77;
  _s8coreidvd24DigitalPresentmentHelperVwxx_0((_QWORD *)(v0 + 1344));
  DIPSignpost.end(workflowID:isBackground:)((Swift::String_optional)0, (Swift::Bool_optional)2);
  static DaemonSignposts.requestDocumentBuildUIConfiguration.getter();
  DIPSignpost.init(_:)(v103);
  v109 = *(_QWORD *)(v105 + OBJC_IVAR____TtC8coreidvd22DigitalPresentmentFlow_displayConfigurationBuilder);
  v110 = *(_QWORD *)(v105 + OBJC_IVAR____TtC8coreidvd22DigitalPresentmentFlow_displayConfigurationBuilder + 8);
  v111 = *(_QWORD *)(v0 + 576);
  v278 = v111;
  sub_100035DE8(v283, v326, type metadata accessor for DigitalPresentmentCallingClientConfig);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v274 + 16))(v337, v104, v285);
  v112 = *(_QWORD *)(v104 + *(int *)(v288 + 20));
  v113 = (uint64_t *)(v104 + *(int *)(v288 + 44));
  v114 = v113[1];
  v289 = *v113;
  swift_bridgeObjectRetain(v114);
  swift_bridgeObjectRetain(v111);
  v115 = swift_bridgeObjectRetain(v112);
  v116 = DigitalPresentmentRequest.merchantNameOverride.getter(v115);
  v118 = v117;
  v119 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v110 + 16);
  *(_QWORD *)(v0 + 1448) = v109;
  *(_QWORD *)(v0 + 1456) = v110;
  sub_100022234((_QWORD *)(v0 + 1424));
  v119(v278, v326, v299, v50, v337, v112, v289, v114, v116, v118, v109, v110);
  (*(void (**)(uint64_t, uint64_t))(v110 + 24))(v109, v110);
  v167 = *(_QWORD *)(v0 + 2552);
  DIPSignpost.end(workflowID:isBackground:)((Swift::String_optional)0, (Swift::Bool_optional)2);
  static DaemonSignposts.requestDocumentCheckBiometricsStatus.getter();
  DIPSignpost.init(_:)(v167);
  v168 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v169._countAndFlagsBits = 0xD000000000000031;
  v169._object = (void *)0x8000000100555B50;
  v170 = NSUserDefaults.internalBool(forKey:)(v169);

  if (v170 || (sub_10046654C() & 1) != 0)
  {
    v358 = *(_QWORD *)(v0 + 2896);
    v264 = *(_BYTE *)(v0 + 3229);
    v260 = v0 + 1784;
    v305 = v0 + 1824;
    v329 = v0 + 2048;
    v266 = *(_QWORD *)(v0 + 2504);
    v171 = *(_QWORD *)(v0 + 2464);
    v276 = v171;
    v280 = *(_QWORD *)(v0 + 2368);
    v287 = *(_QWORD *)(v0 + 2336);
    v291 = *(_QWORD *)(v0 + 2328);
    v295 = *(_QWORD *)(v0 + 2344);
    v172 = *(_QWORD *)(v0 + 2320);
    v173 = *(_OWORD **)(v0 + 2240);
    v262 = (uint64_t)v173 + *(_QWORD *)(v0 + 2824);
    v174 = *(int **)(v0 + 2296);
    DIPSignpost.end(workflowID:isBackground:)((Swift::String_optional)0, (Swift::Bool_optional)2);
    sub_10002581C((uint64_t)v375, v0 + 1584);
    sub_100038B24((uint64_t)v367, v0 + 1624, &qword_100639050);
    sub_100035DE8(v262, v171, type metadata accessor for DigitalPresentmentCallingClientConfig);
    v175 = *(_QWORD *)(v318 + 40);
    v176 = *(_QWORD *)(v318 + 48);
    sub_10000806C(v268, v175);
    v177 = *(uint64_t (**)(uint64_t, uint64_t))(v176 + 8);
    sub_100222630(v364, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10022258C);
    swift_retain(v358);
    v178 = v177(v175, v176);
    v180 = v179;
    *(_BYTE *)v172 = v264;
    *(_QWORD *)(v172 + 8) = 0;
    sub_100035DE8(v266, v172 + v174[6], type metadata accessor for ValidatedDigitalPresentmentRequest);
    v181 = v172 + v174[7];
    v182 = *(_QWORD *)(v0 + 608);
    v184 = *(_OWORD *)(v0 + 576);
    v183 = *(_OWORD *)(v0 + 592);
    *(_OWORD *)(v181 + 64) = *(_OWORD *)(v0 + 560);
    *(_OWORD *)(v181 + 80) = v184;
    *(_OWORD *)(v181 + 96) = v183;
    *(_QWORD *)(v181 + 112) = v182;
    v186 = *(_OWORD *)(v0 + 528);
    v185 = *(_OWORD *)(v0 + 544);
    v187 = *(_OWORD *)(v0 + 512);
    *(_OWORD *)v181 = *(_OWORD *)v306;
    *(_OWORD *)(v181 + 16) = v187;
    *(_OWORD *)(v181 + 32) = v186;
    *(_OWORD *)(v181 + 48) = v185;
    sub_100008018((__int128 *)(v0 + 1584), v172 + v174[8]);
    sub_1000A1F54(v0 + 1624, v172 + v174[9], &qword_100639050);
    sub_100035DE8(v280, v172 + v174[10], type metadata accessor for DigitalPresentmentISOBuilder);
    *(_QWORD *)(v172 + v174[11]) = v358;
    v188 = (uint64_t *)(v0 + 176);
    sub_100038AE0(v276, v172 + v174[12], type metadata accessor for DigitalPresentmentCallingClientConfig);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v287 + 16))(v172 + v174[13], v295, v291);
    sub_10002581C(v0 + 1424, v172 + v174[14]);
    v189 = (uint64_t *)(v172 + v174[15]);
    *v189 = v178;
    v189[1] = v180;
    *(_QWORD *)(v172 + v174[16]) = v318;
    v190 = v173[13];
    v191 = v173[14];
    v192 = v173[16];
    *(_OWORD *)(v0 + 304) = v173[15];
    *(_OWORD *)(v0 + 320) = v192;
    *(_OWORD *)(v0 + 272) = v190;
    *(_OWORD *)(v0 + 288) = v191;
    v193 = v173[9];
    v194 = v173[10];
    v195 = v173[12];
    *(_OWORD *)(v0 + 240) = v173[11];
    *(_OWORD *)(v0 + 256) = v195;
    *(_OWORD *)(v0 + 208) = v193;
    *(_OWORD *)(v0 + 224) = v194;
    v196 = v173[8];
    *(_OWORD *)(v0 + 176) = v173[7];
    *(_OWORD *)(v0 + 192) = v196;
    v197 = v173[8];
    *(_OWORD *)(v0 + 16) = v173[7];
    *(_OWORD *)(v0 + 32) = v197;
    v198 = v173[12];
    v200 = v173[9];
    v199 = v173[10];
    *(_OWORD *)(v0 + 80) = v173[11];
    *(_OWORD *)(v0 + 96) = v198;
    *(_OWORD *)(v0 + 48) = v200;
    *(_OWORD *)(v0 + 64) = v199;
    v201 = v173[16];
    v203 = v173[13];
    v202 = v173[14];
    *(_OWORD *)(v0 + 144) = v173[15];
    *(_OWORD *)(v0 + 160) = v201;
    *(_OWORD *)(v0 + 112) = v203;
    *(_OWORD *)(v0 + 128) = v202;
    nullsub_7(v0 + 16);
    sub_1000A1F54(v0 + 16, v0 + 336, &qword_1006310A8);
    v204 = *(void (**)(uint64_t))(v0 + 224);
    if (v204)
    {
      v205 = *(_QWORD *)(v0 + 232);
      swift_retain(v318);
      v206 = sub_10002EF2C((uint64_t)v204, v205);
      v207 = (_QWORD *)(v0 + 1664);
      v204(v206);
      sub_10002F034((uint64_t)v204, v205);
    }
    else
    {
      v219 = *(_QWORD *)(v0 + 2312);
      v281 = *(_QWORD *)(v0 + 2304);
      v220 = *(_QWORD *)(v0 + 2288);
      v221 = *(_QWORD *)(v0 + 2280);
      v292 = v221;
      v222 = *(_QWORD *)(v0 + 2272);
      v312 = v222;
      sub_100035DE8(*(_QWORD *)(v0 + 2320), v219, type metadata accessor for DigitalPresentmentFlow.Context);
      swift_retain(v318);
      v223 = sub_10002EE34(v188);
      v224 = v220;
      v296 = v220;
      DeviceInformationProvider.init()(v223);
      v225 = (objc_class *)type metadata accessor for DigitalPresentmentUIPresenter(0);
      v226 = (char *)objc_allocWithZone(v225);
      *(_QWORD *)(v0 + 1728) = v222;
      *(_QWORD *)(v0 + 1736) = &protocol witness table for DeviceInformationProvider;
      v227 = sub_100022234((_QWORD *)(v0 + 1704));
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v221 + 16))(v227, v224, v222);
      *(_QWORD *)&v226[OBJC_IVAR____TtC8coreidvd29DigitalPresentmentUIPresenter_authCoordinator] = 0;
      sub_100004828(&qword_1006312D0);
      v228 = v226;
      v229 = AsyncPromise.__allocating_init()();
      *(_QWORD *)&v228[OBJC_IVAR____TtC8coreidvd29DigitalPresentmentUIPresenter_uiResultPromise] = v229;
      sub_100035DE8(v219, (uint64_t)&v228[OBJC_IVAR____TtC8coreidvd29DigitalPresentmentUIPresenter_context], type metadata accessor for DigitalPresentmentFlow.Context);
      sub_100035DE8(v219, v281, type metadata accessor for DigitalPresentmentFlow.Context);
      v230 = type metadata accessor for DaemonAnalytics(0);
      v231 = objc_allocWithZone((Class)type metadata accessor for DigitalPresentmentAuthorizationCoordinatorPrivateDelegate(0));
      sub_10002EE34(v188);
      swift_retain(v229);
      v232 = sub_1000C7700(v0 + 336, v281, v229, v230, (uint64_t)&off_10060AA40);
      swift_release(v229);
      sub_10002EF3C(v188);
      *(_QWORD *)&v228[OBJC_IVAR____TtC8coreidvd29DigitalPresentmentUIPresenter_privateDelegate] = v232;
      sub_10002581C(v0 + 1704, (uint64_t)&v228[OBJC_IVAR____TtC8coreidvd29DigitalPresentmentUIPresenter_deviceInformationProvider]);

      *(_QWORD *)(v0 + 2136) = v228;
      *(_QWORD *)(v0 + 2144) = v225;
      v233 = objc_msgSendSuper2((objc_super *)(v0 + 2136), "init");
      _s8coreidvd24DigitalPresentmentHelperVwxx_0((_QWORD *)(v0 + 1704));
      sub_100035DAC(v219, type metadata accessor for DigitalPresentmentFlow.Context);
      sub_10002EF3C(v188);
      (*(void (**)(uint64_t, uint64_t))(v292 + 8))(v296, v312);
      *(_QWORD *)(v0 + 1688) = v225;
      *(_QWORD *)(v0 + 1696) = &off_100605098;
      *(_QWORD *)(v0 + 1664) = v233;
      v207 = (_QWORD *)(v0 + 1664);
    }
    v359 = *(void (**)(uint64_t, uint64_t))(v0 + 2816);
    v234 = *(_QWORD *)(v0 + 2552);
    v235 = *(_QWORD *)(v0 + 2544);
    v236 = *(_QWORD *)(v0 + 2528);
    v237 = *(_QWORD *)(v0 + 2240);
    sub_10002581C((uint64_t)v207, v260);
    sub_1000A1F54(v260, v305, &qword_100639038);
    v237 += 280;
    swift_beginAccess(v237, v329, 33, 0);
    sub_100184E1C(v305, v237, &qword_100639038);
    v238 = swift_endAccess(v329);
    static DaemonSignposts.requestDocumentUI.getter(v238);
    v239 = DIPSignpost.init(_:)(v234);
    v240 = Date.init()(v239);
    *(double *)(v0 + 3096) = Date.timeIntervalSince1970.getter(v240);
    v359(v235, v236);
    sub_10000806C(v207, *(_QWORD *)(v0 + 1688));
    sub_10004EB18();
    DIPSignpost.end(workflowID:isBackground:)((Swift::String_optional)0, (Swift::Bool_optional)2);
    v241._countAndFlagsBits = 0xD00000000000002ELL;
    v241._object = (void *)0x8000000100555BE0;
    v242._countAndFlagsBits = 0x3434623438303861;
    v242._object = (void *)0xE800000000000000;
    logMilestone(tag:description:)(v242, v241);
    v243 = *(_QWORD *)(*sub_10000806C(v207, *(_QWORD *)(v0 + 1688))
                     + OBJC_IVAR____TtC8coreidvd29DigitalPresentmentUIPresenter_uiResultPromise);
    *(_QWORD *)(v0 + 3104) = v243;
    v244 = *((unsigned int *)&async function pointer to dispatch thunk of AsyncPromise.value.getter + 1);
    v377 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of AsyncPromise.value.getter
                                           + async function pointer to dispatch thunk of AsyncPromise.value.getter);
    swift_retain(v243);
    v245 = (_QWORD *)swift_task_alloc(v244);
    *(_QWORD *)(v0 + 3112) = v245;
    *v245 = v0;
    v245[1] = sub_10021C9D8;
    return v377(v0 + 2176);
  }
  else
  {
    v246 = *(_QWORD *)(v0 + 2240);
    v247 = *(void (**)(uint64_t))(v246 + 224);
    if (v247)
    {
      v248 = *(_QWORD *)(v246 + 232);
      v249 = swift_retain(v248);
      v247(v249);
      sub_10002F034((uint64_t)v247, v248);
    }
    else
    {
      *(_QWORD *)(v0 + 1488) = *(_QWORD *)(v0 + 2272);
      *(_QWORD *)(v0 + 1496) = &protocol witness table for DeviceInformationProvider;
      v250 = sub_100022234((_QWORD *)(v0 + 1464));
      DeviceInformationProvider.init()(v250);
    }
    v251 = (_QWORD *)swift_task_alloc(dword_10063FF2C);
    *(_QWORD *)(v0 + 3080) = v251;
    *v251 = v0;
    v251[1] = sub_10021C2C4;
    return sub_1003FF3E8(v0 + 1464);
  }
}

