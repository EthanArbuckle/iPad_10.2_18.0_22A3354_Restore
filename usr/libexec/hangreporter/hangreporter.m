id sub_100005240(void *a1, const __CFUUID *a2, void *a3, void *a4)
{
  const __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  CFStringRef v10;
  _BOOL8 v11;
  CFURLRef v12;
  CFURLRef v13;
  __CFBundle *v14;
  __CFBundle *v15;
  CFStringRef Identifier;
  const __CFString *ValueForInfoDictionaryKey;
  CFURLRef v18;
  const __CFURL *v19;
  void *v20;
  unsigned int v21;
  id v22;
  id v23;
  NSObject *v24;
  NSObject *v25;
  NSObject *v26;
  NSObject *v27;
  NSObject *v28;
  const __CFString *v29;
  const __CFString *v30;
  id v31;
  id v32;
  id v33;
  NSObject *v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  id v43;
  void *v44;
  BOOL v45;
  int v46;
  const __CFString *v47;
  __CFString *v48;
  const __CFString *v49;
  CFStringRef v50;
  const __CFString *v51;
  const __CFString *v52;
  void *v53;
  NSNumber *v54;
  void *v55;
  __CFString *v56;
  void *v57;
  void *v58;
  void *v59;
  id v60;
  int v62;
  void *v63;
  void *v64;
  void *v65;
  CFStringRef v66;
  const __CFString *v67;
  const __CFString *v68;
  __CFString *v69;
  NSObject *v70;
  const __CFString *cf;
  const __CFString *cfa;
  id v73;
  id v74;
  _QWORD v75[8];
  _QWORD v76[8];
  uint8_t buf[4];
  NSObject *v78;
  __int16 v79;
  id v80;

  v7 = a1;
  v8 = a3;
  v9 = a4;
  if (a2)
    v10 = CFUUIDCreateString(0, a2);
  else
    v10 = 0;
  v69 = v8;
  if (!v8)
  {
    v62 = 0;
    v63 = 0;
    v64 = 0;
    v65 = 0;
    v66 = 0;
    v70 = 0;
    v29 = 0;
    v30 = 0;
    v11 = 1;
    goto LABEL_43;
  }
  v11 = 1;
  v12 = CFURLCreateWithFileSystemPath(0, v8, kCFURLPOSIXPathStyle, 1u);
  if (!v12)
  {
    v62 = 0;
    v63 = 0;
    v64 = 0;
    v65 = 0;
    v66 = 0;
    v70 = 0;
    v29 = 0;
    v30 = 0;
    goto LABEL_43;
  }
  v13 = v12;
  v67 = v10;
  v14 = (__CFBundle *)_CFBundleCreateWithExecutableURLIfLooksLikeBundle(kCFAllocatorDefault, v12);
  if (!v14)
  {
    CFRelease(v13);
    v62 = 0;
    v63 = 0;
    v64 = 0;
    v65 = 0;
    v66 = 0;
    v70 = 0;
    v29 = 0;
    v30 = 0;
    goto LABEL_43;
  }
  v15 = v14;
  Identifier = CFBundleGetIdentifier(v14);
  cf = (const __CFString *)CFBundleGetValueForInfoDictionaryKey(v15, kCFBundleVersionKey);
  ValueForInfoDictionaryKey = (const __CFString *)CFBundleGetValueForInfoDictionaryKey(v15, _kCFBundleShortVersionStringKey);
  v18 = CFBundleCopyBundleURL(v15);
  if (Identifier)
    CFRetain(Identifier);
  v66 = Identifier;
  if (cf)
    CFRetain(cf);
  if (ValueForInfoDictionaryKey)
    CFRetain(ValueForInfoDictionaryKey);
  CFRelease(v15);
  CFRelease(v13);
  if (v18)
  {
    v19 = v18;
    v20 = (void *)objc_claimAutoreleasedReturnValue(-[__CFURL pathExtension](v19, "pathExtension"));
    v21 = objc_msgSend(v20, "isEqualToString:", CFSTR("appex"));

    v70 = v19;
    if (!v21)
    {
      v23 = 0;
LABEL_35:
      v73 = v23;
      v11 = 1;
      v35 = objc_msgSend(objc_alloc((Class)LSApplicationRecord), "initWithURL:allowPlaceholder:error:", v19, 1, &v73);
      v36 = v73;

      if (v35)
      {
        v37 = v36;
        v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v35, "iTunesMetadata"));
        v65 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", objc_msgSend(v38, "storeItemIdentifier")));

        v39 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v35, "iTunesMetadata"));
        v40 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v39, "distributorInfo"));
        v64 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v40, "distributorID"));

        v41 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v35, "iTunesMetadata"));
        v63 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v41, "storeCohortWithError:", 0));

        v11 = objc_msgSend(v35, "developerType") == 1;
        v42 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v35, "entitlements"));
        v43 = objc_msgSend(v42, "objectForKey:ofClass:", CFSTR("beta-reports-active"), objc_opt_class(NSObject));
        v8 = v9;
        v44 = (void *)objc_claimAutoreleasedReturnValue(v43);

        v36 = v37;
        v45 = v44 == 0;
        v9 = v8;
        v46 = !v45;
        v62 = v46;
      }
      else
      {
        v62 = 0;
        v63 = 0;
        v64 = 0;
        v65 = 0;
      }

      goto LABEL_42;
    }
    v74 = 0;
    v22 = objc_msgSend(objc_alloc((Class)LSApplicationExtensionRecord), "initWithURL:error:", v19, &v74);
    v23 = v74;
    if (!v22)
    {
      v31 = sub_10001D38C();
      v25 = objc_claimAutoreleasedReturnValue(v31);
      if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412546;
        v28 = v70;
        v78 = v70;
        v79 = 2112;
        v80 = v23;
        _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "No extension record for %@: %@", buf, 0x16u);
      }
      else
      {
        v28 = v70;
      }
      goto LABEL_34;
    }
    v24 = objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "containingBundleRecord"));
    v25 = v24;
    if (v24)
    {
      v26 = objc_claimAutoreleasedReturnValue(-[NSObject URL](v24, "URL"));
      v27 = v26;
      if (v26)
      {
        v27 = v26;

        v28 = v27;
LABEL_33:

LABEL_34:
        v19 = (const __CFURL *)v28;
        goto LABEL_35;
      }
      v33 = sub_10001D38C();
      v34 = objc_claimAutoreleasedReturnValue(v33);
      if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        v78 = v70;
        _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEFAULT, "No parent url for %@", buf, 0xCu);
      }

    }
    else
    {
      v32 = sub_10001D38C();
      v27 = objc_claimAutoreleasedReturnValue(v32);
      if (os_log_type_enabled(v27, OS_LOG_TYPE_DEBUG))
      {
        v28 = v70;
        sub_100037668((uint64_t)v70, v27);
        goto LABEL_33;
      }
    }
    v28 = v70;
    goto LABEL_33;
  }
  v62 = 0;
  v63 = 0;
  v64 = 0;
  v65 = 0;
  v70 = 0;
  v11 = 1;
LABEL_42:
  v10 = v67;
  v29 = ValueForInfoDictionaryKey;
  v30 = cf;
LABEL_43:
  v47 = CFSTR("Unknown");
  v48 = (__CFString *)v7;
  if (v7)
    v47 = v7;
  v75[0] = kCRProblemReportAppNameKey;
  v75[1] = kOSAIPSHeaderAppNameKey;
  v76[0] = v47;
  v76[1] = v47;
  v49 = &stru_100075D60;
  v50 = v10;
  if (v10)
    v51 = v10;
  else
    v51 = &stru_100075D60;
  v75[2] = CFSTR("slice_uuid");
  v75[3] = CFSTR("build_version");
  cfa = v30;
  if (v30)
    v52 = v30;
  else
    v52 = &stru_100075D60;
  v76[2] = v51;
  v76[3] = v52;
  v68 = v29;
  if (v29)
    v49 = v29;
  v76[4] = v49;
  v75[4] = CFSTR("app_version");
  v75[5] = CFSTR("is_first_party");
  v53 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", v11));
  v76[5] = v53;
  v75[6] = CFSTR("share_with_app_devs");
  v54 = +[NSNumber numberWithBool:](NSNumber, "numberWithBool:", AppAnalyticsEnabled());
  v55 = (void *)objc_claimAutoreleasedReturnValue(v54);
  v76[6] = v55;
  v75[7] = kOSAIPSHeaderIncidentIDKey;
  v56 = v9;
  v57 = (void *)objc_claimAutoreleasedReturnValue(-[__CFString objectForKeyedSubscript:](v9, "objectForKeyedSubscript:", CFSTR("HangUUID")));
  v58 = v57;
  if (!v57)
  {
    v8 = (__CFString *)objc_claimAutoreleasedReturnValue(+[NSUUID UUID](NSUUID, "UUID"));
    v58 = (void *)objc_claimAutoreleasedReturnValue(-[__CFString UUIDString](v8, "UUIDString"));
  }
  v76[7] = v58;
  v59 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v76, v75, 8));
  v60 = objc_msgSend(v59, "mutableCopy");

  if (!v57)
  {

  }
  if (v66)
    objc_msgSend(v60, "setObject:forKeyedSubscript:", v66, kCRProblemReportBundleIDKey);
  if (v62)
  {
    objc_msgSend(v60, "setObject:forKeyedSubscript:", &__kCFBooleanTrue, CFSTR("is_beta"));
    if (v63)
      objc_msgSend(v60, "setObject:forKeyedSubscript:", v63, CFSTR("app_cohort"));
  }
  if (v65)
    objc_msgSend(v60, "setObject:forKeyedSubscript:", v65, CFSTR("adam_id"));
  if (v64)
    objc_msgSend(v60, "setObject:forKeyedSubscript:", v64, CFSTR("distributor_id"));
  if (v50)
    CFRelease(v50);
  if (v66)
    CFRelease(v66);
  if (cfa)
    CFRelease(cfa);
  if (v68)
    CFRelease(v68);

  return v60;
}

id sub_100005990(int a1)
{
  void *v2;
  id v3;
  NSObject *v4;
  _BYTE buffer[4096];

  bzero(buffer, 0x1000uLL);
  if (proc_pidpath(a1, buffer, 0x1000u))
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", buffer));
    if (!v2)
    {
      v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", buffer, 1));
      v3 = sub_10001D38C();
      v4 = objc_claimAutoreleasedReturnValue(v3);
      if (os_log_type_enabled(v4, OS_LOG_TYPE_FAULT))
        sub_1000376DC((uint64_t)v2, v4);

    }
  }
  else
  {
    v2 = 0;
  }
  return v2;
}

__CFString *sub_100005A8C(void *a1)
{
  __CFString *v1;
  CFURLRef v2;
  CFURLRef v3;
  __CFBundle *v4;
  __CFBundle *v5;
  CFStringRef Identifier;
  __CFString *v7;

  v1 = a1;
  if (v1 && (v2 = CFURLCreateWithFileSystemPath(0, v1, kCFURLPOSIXPathStyle, 1u)) != 0)
  {
    v3 = v2;
    v4 = (__CFBundle *)_CFBundleCreateWithExecutableURLIfLooksLikeBundle(kCFAllocatorDefault, v2);
    if (v4)
    {
      v5 = v4;
      Identifier = CFBundleGetIdentifier(v4);
      v7 = (__CFString *)objc_claimAutoreleasedReturnValue(Identifier);
      CFRelease(v5);
    }
    else
    {
      v7 = &stru_100075D60;
    }
    CFRelease(v3);
  }
  else
  {
    v7 = &stru_100075D60;
  }

  return v7;
}

id sub_100005B2C(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;

  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObject:forKey:](NSDictionary, "dictionaryWithObject:forKey:", a2, NSLocalizedDescriptionKey));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("SentryTailspinError"), a1, v3));

  return v4;
}

uint64_t sub_100005BA4(void *a1, int a2)
{
  id v3;
  void *v4;
  BOOL v5;
  id v6;
  NSObject *v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  unsigned int v12;
  id v13;
  NSObject *v14;
  _BOOL4 v15;
  const char *v16;
  NSObject *v17;
  uint32_t v18;
  id v20;
  char v21;
  uint8_t buf[4];
  id v23;
  __int16 v24;
  id v25;
  NSFileAttributeKey v26;
  const __CFString *v27;

  v3 = a1;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
  v21 = 0;
  if (objc_msgSend(v4, "fileExistsAtPath:isDirectory:", v3, &v21))
    v5 = v21 == 0;
  else
    v5 = 1;
  if (v5)
  {
    v6 = sub_10001D38C();
    v7 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412290;
      v23 = v3;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Directory doesn't exist -> trying to create directory at path: %@", buf, 0xCu);
    }

    if (a2)
    {
      v26 = NSFileOwnerAccountName;
      v27 = CFSTR("mobile");
      v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v27, &v26, 1));
    }
    else
    {
      v8 = 0;
    }
    v20 = 0;
    objc_msgSend(v4, "createDirectoryAtPath:withIntermediateDirectories:attributes:error:", v3, 1, v8, &v20);
    v10 = v20;
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
    v12 = objc_msgSend(v11, "fileExistsAtPath:isDirectory:", v3, &v21);

    if (v21)
      v9 = v12;
    else
      v9 = 0;
    v13 = sub_10001D38C();
    v14 = objc_claimAutoreleasedReturnValue(v13);
    v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);
    if ((_DWORD)v9 == 1)
    {
      if (v15)
      {
        *(_DWORD *)buf = 138412290;
        v23 = v3;
        v16 = "Successfully created directory at path %@";
        v17 = v14;
        v18 = 12;
LABEL_19:
        _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, v16, buf, v18);
      }
    }
    else if (v15)
    {
      *(_DWORD *)buf = 138412546;
      v23 = v3;
      v24 = 2112;
      v25 = v10;
      v16 = "Error: error creating directory at path %@ %@";
      v17 = v14;
      v18 = 22;
      goto LABEL_19;
    }

    goto LABEL_21;
  }
  v9 = 1;
LABEL_21:

  return v9;
}

id sub_100005DEC()
{
  if (qword_100080138 != -1)
    dispatch_once(&qword_100080138, &stru_1000749D0);
  return (id)qword_100080130;
}

void sub_100005E2C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.hangtracer", "signpost_hang");
  v2 = (void *)qword_100080130;
  qword_100080130 = (uint64_t)v1;

}

id sub_100005E5C()
{
  if (qword_100080148 != -1)
    dispatch_once(&qword_100080148, &stru_1000749F0);
  return (id)qword_100080140;
}

void sub_100005E9C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.hangtracer", "hangreporter_tailspin_conversion");
  v2 = (void *)qword_100080140;
  qword_100080140 = (uint64_t)v1;

}

void sub_100005ECC(void *a1, void *a2, os_signpost_id_t a3, uint64_t a4, void *a5)
{
  __CFString *v9;
  __CFString *v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  NSObject *v15;
  const __CFString *v16;
  const __CFString *v17;
  uint64_t v18;
  _BYTE buf[12];
  __int16 v20;
  uint64_t v21;
  __int16 v22;
  const __CFString *v23;
  __int16 v24;
  const __CFString *v25;

  v9 = a1;
  v10 = a2;
  v11 = a5;
  v18 = 0;
  *(_QWORD *)buf = 0;
  mach_get_times(buf, &v18, 0);
  v12 = v18;
  v13 = *(_QWORD *)buf;
  if (os_signpost_enabled(v11))
  {
    v14 = v11;
    v15 = v14;
    if (a3 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v14))
    {
      v16 = CFSTR("Unknown");
      *(_DWORD *)buf = 134349826;
      *(_QWORD *)&buf[4] = v12 - v13 + a3;
      if (v10)
        v17 = v10;
      else
        v17 = CFSTR("Unknown");
      v20 = 2050;
      v21 = v12 - v13 + a4;
      v22 = 2114;
      if (v9)
        v16 = v9;
      v23 = v17;
      v24 = 2114;
      v25 = v16;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v15, OS_SIGNPOST_EVENT, a3, "HangInterval", "%{public, signpost.description:begin_time}llu, %{public, signpost.description:end_time}llu, BundleIdOverride=%{public, signpost.description:attribute}@ type=%{public, signpost.telemetry:string2}@ enableTelemetry=YES ", buf, 0x2Au);
    }

  }
}

__CFString *sub_100006030(unint64_t a1)
{
  if (a1 <= 0xA)
    a1 = *off_100074A10[a1];
  return (__CFString *)(id)a1;
}

BOOL sub_100006060(uint64_t a1)
{
  return (unint64_t)(a1 - 3) < 3;
}

const __CFString *sub_100006070(unint64_t a1)
{
  if (a1 > 0xB)
    return CFSTR("failed due to unknown reason");
  else
    return *(&off_100074A68 + a1);
}

uint64_t sub_100006094(int a1, int a2, double a3)
{
  void *v4;
  double v5;
  void *v6;
  double v7;

  if (a1)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[HTPrefs sharedPrefs](HTPrefs, "sharedPrefs"));
    v5 = (double)(unint64_t)objc_msgSend(v4, "runloopLongHangDurationThresholdMSec");

    if (v5 <= a3)
    {
      return 222;
    }
    else
    {
      v6 = (void *)objc_claimAutoreleasedReturnValue(+[HTPrefs sharedPrefs](HTPrefs, "sharedPrefs"));
      v7 = (double)(unint64_t)objc_msgSend(v6, "runloopHangDurationThresholdMSec");

      if (v7 <= a3)
        return 223;
      else
        return 310;
    }
  }
  else if (a2)
  {
    return 328;
  }
  else
  {
    return 228;
  }
}

uint64_t sub_10000612C(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if ((objc_msgSend(v1, "containsString:", CFSTR("UIKit-runloop")) & 1) != 0)
  {
    v2 = 0;
  }
  else if ((objc_msgSend(v1, "containsString:", CFSTR("Fence-hang")) & 1) != 0)
  {
    v2 = 1;
  }
  else if ((objc_msgSend(v1, "containsString:", CFSTR("Slow-Launch")) & 1) != 0)
  {
    v2 = 2;
  }
  else if ((objc_msgSend(v1, "containsString:", CFSTR("Sentry")) & 1) != 0)
  {
    v2 = 3;
  }
  else if (objc_msgSend(v1, "containsString:", CFSTR("Force-Quit")))
  {
    v2 = 4;
  }
  else
  {
    v2 = 5;
  }

  return v2;
}

double sub_1000061F0(unint64_t a1)
{
  double v2;
  double v3;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v6 = 0;
  v7 = 0;
  v5 = 0;
  mach_get_times(&v5, 0, &v6);
  v2 = (double)v6 - kCFAbsoluteTimeIntervalSince1970 + (double)v7 / 1000000000.0;
  v3 = sub_1000064D8(v5) / 1000.0;
  return v2 + sub_1000064D8(a1) / 1000.0 - v3;
}

id sub_100006290(void *a1)
{
  id v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  void *i;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];

  v1 = a1;
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
  if (v2)
  {
    v3 = v2;
    v4 = 0;
    v5 = *(_QWORD *)v15;
    v6 = -1;
    do
    {
      for (i = 0; i != v3; i = (char *)i + 1)
      {
        if (*(_QWORD *)v15 != v5)
          objc_enumerationMutation(v1);
        v8 = *(void **)(*((_QWORD *)&v14 + 1) + 8 * (_QWORD)i);
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("StartTime")));
        v10 = objc_msgSend(v9, "longLongValue");

        if (v6 > (unint64_t)v10)
        {
          v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("StartTime")));
          v6 = (unint64_t)objc_msgSend(v11, "longLongValue");

          v12 = v8;
          v4 = v12;
        }
      }
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }

  return v4;
}

NSDate *sub_1000063F4(uint64_t a1, void *a2, unint64_t a3)
{
  double v5;
  double v6;

  objc_msgSend(a2, "timeIntervalSinceReferenceDate");
  v6 = sub_10000658C((unint64_t)(v5 * 1000.0));
  return +[NSDate dateWithTimeIntervalSinceReferenceDate:](NSDate, "dateWithTimeIntervalSinceReferenceDate:", sub_10000652C((unint64_t)(v6 - (double)a3) + a1));
}

double sub_10000644C()
{
  if (qword_100080158 != -1)
    dispatch_once(&qword_100080158, &stru_100075020);
  return *(double *)&qword_100080150;
}

void sub_10000648C(id a1)
{
  mach_timebase_info info;

  info = 0;
  mach_timebase_info(&info);
  *(double *)&qword_100080150 = (float)((float)((float)info.numer * 0.000001) / (float)info.denom);
}

double sub_1000064D8(unint64_t a1)
{
  if (qword_100080158 != -1)
    dispatch_once(&qword_100080158, &stru_100075020);
  return *(double *)&qword_100080150 * (double)a1;
}

double sub_10000652C(unint64_t a1)
{
  if (qword_100080158 != -1)
    dispatch_once(&qword_100080158, &stru_100075020);
  return *(double *)&qword_100080150 * (double)a1 / 1000.0;
}

double sub_10000658C(unint64_t a1)
{
  if (qword_100080158 != -1)
    dispatch_once(&qword_100080158, &stru_100075020);
  return (double)a1 / *(double *)&qword_100080150;
}

uint64_t sub_1000065E0()
{
  if (qword_100080160 != -1)
    dispatch_once(&qword_100080160, &stru_100075040);
  return qword_100080168;
}

void sub_100006620(id a1)
{
  mach_timebase_info((mach_timebase_info_t)&qword_100080168);
}

HRFenceInfo *sub_1000068D8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  void *v8;
  HRFenceInfo *v9;
  void *v10;

  v7 = a1;
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", a2));
  v9 = (HRFenceInfo *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "objectForKey:", v8));

  if (!v9)
  {
    v9 = -[HRFenceInfo initWithFenceName:traceStart:traceEnd:]([HRFenceInfo alloc], "initWithFenceName:traceStart:traceEnd:", a2, a3, a4);
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", a2));
    objc_msgSend(v7, "setObject:forKey:", v9, v10);

  }
  return v9;
}

HRHandleInfo *sub_1000069A0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  HRHandleInfo *v19;
  void *v20;

  v11 = a1;
  v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", a4));
  v13 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "objectForKey:", v12));

  if (!v13)
  {
    v13 = objc_alloc_init((Class)NSMutableDictionary);
    v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", a4));
    objc_msgSend(v11, "setObject:forKey:", v13, v14);

  }
  v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", a2));
  v16 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "objectForKey:", v15));

  if (!v16)
  {
    v16 = objc_alloc_init((Class)NSMutableDictionary);
    v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", a2));
    objc_msgSend(v13, "setObject:forKey:", v16, v17);

  }
  v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", a3));
  v19 = (HRHandleInfo *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "objectForKey:", v18));

  if (!v19)
  {
    v19 = -[HRHandleInfo initWithHandleName:fenceName:traceStart:traceEnd:]([HRHandleInfo alloc], "initWithHandleName:fenceName:traceStart:traceEnd:", a3, a2, a5, a6);
    v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", a3));
    objc_msgSend(v16, "setObject:forKey:", v19, v20);

  }
  return v19;
}

uint64_t sub_100006B54(void *a1, void *a2, _QWORD *a3)
{
  id v5;
  id v6;
  void *v7;
  unsigned int v8;
  id v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  __CFString *v13;
  __CFString *v14;
  uint64_t v15;
  void *v16;
  unsigned int v17;
  void *v18;
  void *v19;
  void *v20;
  NSObject *v21;
  const char *v22;
  id v23;
  int v24;
  int v25;
  FILE *v26;
  FILE *v27;
  void *v28;
  void *v29;
  unsigned int v30;
  int *v31;
  id v32;
  NSObject *v33;
  void *v34;
  NSObject *v35;
  const char *v36;
  id v37;
  NSObject *v38;
  _BOOL4 v39;
  int *v40;
  char *v41;
  id v42;
  NSObject *v43;
  const char *v44;
  NSObject *v45;
  uint64_t v46;
  id v47;
  NSObject *v48;
  NSObject *v49;
  id v50;
  NSObject *v51;
  void *v52;
  id v53;
  id v54;
  NSObject *v55;
  NSObject *v56;
  id v57;
  id v58;
  id v59;
  id v61;
  NSObject *v62;
  id v63;
  NSObject *v64;
  id v65;
  NSObject *v66;
  const char *v67;
  char *__filename;
  void *v69;
  gzFile_s *file;
  void *v71;
  __CFString *v72;
  NSObject *v73;
  id v74;
  _QWORD v75[4];
  id v76;
  id v77;
  int errnum;
  id v79;
  __int16 v80;
  NSObject *v81;
  __int16 v82;
  id v83;

  v5 = a1;
  v6 = a2;
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[HTPrefs sharedPrefs](HTPrefs, "sharedPrefs"));
  v8 = objc_msgSend(v7, "shouldSaveTailspins");

  if (v8)
  {
    v75[0] = _NSConcreteStackBlock;
    v75[1] = 3221225472;
    v75[2] = sub_100007450;
    v75[3] = &unk_100075068;
    v76 = v6;
    v9 = v5;
    v77 = v9;
    v10 = objc_retainBlock(v75);
    v11 = ((uint64_t (*)(void))v10[2])();
    v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
    v13 = CFSTR("/var/root/Library/Logs/CrashReporter/DiagnosticLogs/HangTracer/");
    v14 = CFSTR("/var/mobile/Library/Logs/CrashReporter/DiagnosticLogs/HangTracer/");
    v15 = 0;
    if (sub_100005BA4(v13, 0))
    {
      if (sub_100005BA4(v14, 1))
      {
        v72 = v14;
        v16 = (void *)objc_claimAutoreleasedReturnValue(+[HTPrefs sharedPrefs](HTPrefs, "sharedPrefs"));
        v17 = objc_msgSend(v16, "shouldCompressSavedTailspins");

        v18 = (void *)objc_claimAutoreleasedReturnValue(-[__CFString stringByAppendingPathComponent:](v13, "stringByAppendingPathComponent:", v12));
        v19 = v18;
        v71 = v12;
        if (!v17)
        {
          v34 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "stringByAppendingPathExtension:", CFSTR("processing")));

          v35 = objc_retainAutorelease(v9);
          v36 = (const char *)-[NSObject UTF8String](v35, "UTF8String");
          v73 = objc_retainAutorelease(v34);
          LODWORD(v34) = link(v36, (const char *)-[NSObject UTF8String](v73, "UTF8String"));
          v37 = sub_10001D38C();
          v38 = objc_claimAutoreleasedReturnValue(v37);
          v39 = os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT);
          if ((_DWORD)v34)
          {
            if (v39)
            {
              v40 = __error();
              v41 = strerror(*v40);
              errnum = 136315394;
              v79 = v41;
              v80 = 2112;
              v81 = v35;
              _os_log_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_DEFAULT, "Error: %s creating hardlink for %@", (uint8_t *)&errnum, 0x16u);
            }
            v15 = 0;
            goto LABEL_55;
          }
          v45 = v73;
          if (v39)
          {
            errnum = 138412546;
            v79 = v35;
            v80 = 2112;
            v81 = v73;
            _os_log_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_DEFAULT, "Successfully hard-linked tailspin file: %@ -> %@", (uint8_t *)&errnum, 0x16u);
          }

LABEL_31:
          v38 = objc_claimAutoreleasedReturnValue(-[__CFString stringByAppendingPathComponent:](v72, "stringByAppendingPathComponent:", v71));
          if (-[NSObject containsString:](v45, "containsString:", CFSTR(".gz")))
          {
            v46 = objc_claimAutoreleasedReturnValue(-[NSObject stringByAppendingPathExtension:](v38, "stringByAppendingPathExtension:", CFSTR("gz")));

            v38 = v46;
          }
          v47 = sub_10001D38C();
          v48 = objc_claimAutoreleasedReturnValue(v47);
          if (os_log_type_enabled(v48, OS_LOG_TYPE_INFO))
          {
            errnum = 138412546;
            v79 = v45;
            v80 = 2112;
            v81 = v38;
            _os_log_impl((void *)&_mh_execute_header, v48, OS_LOG_TYPE_INFO, "Moving '%@' -> '%@'", (uint8_t *)&errnum, 0x16u);
          }

          v49 = objc_retainAutorelease(v45);
          if (chmod((const char *)-[NSObject UTF8String](v49, "UTF8String"), 0x1B6u))
          {
            v50 = sub_10001D38C();
            v51 = objc_claimAutoreleasedReturnValue(v50);
            if (os_log_type_enabled(v51, OS_LOG_TYPE_DEFAULT))
            {
              errnum = 138412290;
              v79 = v9;
              _os_log_impl((void *)&_mh_execute_header, v51, OS_LOG_TYPE_DEFAULT, "Failed to chmod tailspin file: %@", (uint8_t *)&errnum, 0xCu);
            }

          }
          v52 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
          v73 = v49;
          v74 = 0;
          v15 = (uint64_t)objc_msgSend(v52, "moveItemAtPath:toPath:error:", v49, v38, &v74);
          v53 = v74;

          if ((_DWORD)v15)
          {
            if (a3)
              *a3 = objc_retainAutorelease(v38);
            v54 = sub_10001D38C();
            v55 = objc_claimAutoreleasedReturnValue(v54);
            if (os_log_type_enabled(v55, OS_LOG_TYPE_DEFAULT))
            {
              errnum = 138412546;
              v79 = v73;
              v80 = 2112;
              v81 = v38;
              _os_log_impl((void *)&_mh_execute_header, v55, OS_LOG_TYPE_DEFAULT, "Successful move of tailspin file: %@ -> %@", (uint8_t *)&errnum, 0x16u);
            }

            v56 = objc_claimAutoreleasedReturnValue(+[HTPrefs sharedPrefs](HTPrefs, "sharedPrefs"));
            sub_100007568(v72, (uint64_t)-[NSObject savedTailspinMaxMB](v56, "savedTailspinMaxMB"));
          }
          else
          {
            v59 = sub_10001D38C();
            v56 = objc_claimAutoreleasedReturnValue(v59);
            if (os_log_type_enabled(v56, OS_LOG_TYPE_DEFAULT))
            {
              errnum = 138412802;
              v79 = v73;
              v80 = 2112;
              v81 = v38;
              v82 = 2112;
              v83 = v53;
              _os_log_impl((void *)&_mh_execute_header, v56, OS_LOG_TYPE_DEFAULT, "Error failed move of tailspin file: %@ -> %@ error: %@", (uint8_t *)&errnum, 0x20u);
            }
          }

LABEL_55:
          v14 = v72;
LABEL_56:

          v12 = v71;
          goto LABEL_57;
        }
        v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "stringByAppendingPathExtension:", CFSTR("gz.processing")));

        v21 = objc_retainAutorelease(v20);
        v22 = (const char *)-[NSObject UTF8String](v21, "UTF8String");
        v23 = objc_retainAutorelease(v9);
        __filename = (char *)objc_msgSend(v23, "UTF8String");
        if (MKBDeviceUnlockedSinceBoot())
          v24 = 3;
        else
          v24 = 2;
        v25 = open_dprotected_np(v22, 514, v24, 0, 416);
        v73 = v21;
        v69 = v23;
        if (v25 < 0)
        {
          v42 = sub_10001D38C();
          v43 = objc_claimAutoreleasedReturnValue(v42);
          if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
          {
            errnum = 136315138;
            v79 = (id)v22;
            v44 = "Error getting file descriptor for %s due to protection classes";
LABEL_47:
            _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_DEFAULT, v44, (uint8_t *)&errnum, 0xCu);
          }
        }
        else
        {
          file = gzdopen(v25, "wb");
          if (file)
          {
            v26 = fopen(__filename, "rb");
            if (v26)
            {
              v27 = v26;
              v28 = malloc_type_malloc(0x4000uLL, 0x97C0ED16uLL);
              if (v28)
              {
                v29 = v28;
                while (1)
                {
                  v30 = fread(v29, 1uLL, 0x4000uLL, v27);
                  if (!v30)
                    break;
                  if (gzwrite(file, v29, v30) != v30)
                  {
                    errnum = 0;
                    gzerror(file, &errnum);
                    if (errnum == -1)
                    {
                      v31 = __error();
                      strerror(*v31);
                    }
                    v32 = sub_10001D38C();
                    v33 = objc_claimAutoreleasedReturnValue(v32);
                    if (os_log_type_enabled(v33, OS_LOG_TYPE_FAULT))
                      sub_100037750();

                    gzclose(file);
                    fclose(v27);
                    free(v29);
                    goto LABEL_49;
                  }
                }
                gzclose(file);
                fclose(v27);
                free(v29);
                v65 = sub_10001D38C();
                v66 = objc_claimAutoreleasedReturnValue(v65);
                if (os_log_type_enabled(v66, OS_LOG_TYPE_DEFAULT))
                {
                  errnum = 138412546;
                  v79 = v69;
                  v80 = 2112;
                  v81 = v73;
                  _os_log_impl((void *)&_mh_execute_header, v66, OS_LOG_TYPE_DEFAULT, "Successfully compressed tailspin file: %@ -> %@", (uint8_t *)&errnum, 0x16u);
                }

                v67 = (const char *)objc_msgSend(objc_retainAutorelease(v69), "UTF8String");
                v45 = objc_retainAutorelease(v73);
                sub_10001D83C(v67, (char *)-[NSObject UTF8String](v45, "UTF8String"));
                goto LABEL_31;
              }
              v63 = sub_10001D38C();
              v64 = objc_claimAutoreleasedReturnValue(v63);
              if (os_log_type_enabled(v64, OS_LOG_TYPE_DEFAULT))
              {
                errnum = 136315138;
                v79 = __filename;
                _os_log_impl((void *)&_mh_execute_header, v64, OS_LOG_TYPE_DEFAULT, "unable to allocate memory for compressing tailspin file %s", (uint8_t *)&errnum, 0xCu);
              }

              gzclose(file);
              fclose(v27);
            }
            else
            {
              v61 = sub_10001D38C();
              v62 = objc_claimAutoreleasedReturnValue(v61);
              if (os_log_type_enabled(v62, OS_LOG_TYPE_DEFAULT))
              {
                errnum = 136315138;
                v79 = __filename;
                _os_log_impl((void *)&_mh_execute_header, v62, OS_LOG_TYPE_DEFAULT, "Error with opening tailspin file %s", (uint8_t *)&errnum, 0xCu);
              }

              gzclose(file);
            }
LABEL_49:
            v58 = sub_10001D38C();
            v38 = objc_claimAutoreleasedReturnValue(v58);
            v14 = v72;
            if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT))
            {
              errnum = 138412290;
              v79 = v69;
              _os_log_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_DEFAULT, "Error: error creating compressed file for %@, stop processing", (uint8_t *)&errnum, 0xCu);
            }
            v15 = 0;
            goto LABEL_56;
          }
          v57 = sub_10001D38C();
          v43 = objc_claimAutoreleasedReturnValue(v57);
          if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
          {
            errnum = 136315138;
            v79 = (id)v22;
            v44 = "Error with gzopen() for %s";
            goto LABEL_47;
          }
        }

        goto LABEL_49;
      }
      v15 = 0;
    }
LABEL_57:

    goto LABEL_58;
  }
  v15 = 1;
LABEL_58:

  return v15;
}

id sub_100007450(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;

  v2 = *(void **)(a1 + 32);
  if (v2)
  {
    v3 = sub_1000074E0(v2);
    v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  }
  else
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "lastPathComponent"));
    v6 = objc_msgSend(v5, "rangeOfString:options:", CFSTR("processing.tailspin"), 12);
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "stringByReplacingOccurrencesOfString:withString:options:range:", CFSTR("processing.tailspin"), CFSTR("tailspin"), 12, v6, v7));

  }
  return v4;
}

id sub_1000074E0(void *a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "lastPathComponent"));
  if (objc_msgSend(v1, "characterAtIndex:", 0) == 46)
  {
    v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "substringFromIndex:", 1));

    v1 = (void *)v2;
  }
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "stringByDeletingPathExtension"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "stringByAppendingPathExtension:", CFSTR("tailspin")));

  return v4;
}

void sub_100007568(void *a1, uint64_t a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  unint64_t v12;
  uint64_t v13;
  void *i;
  void *v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  unsigned __int8 v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  NSObject *v25;
  void *v26;
  id v27;
  void *v28;
  BOOL v29;
  id v30;
  id v31;
  unint64_t v32;
  uint64_t v33;
  void *j;
  void *v35;
  void *v36;
  void *v37;
  unsigned __int8 v38;
  id v39;
  id v40;
  NSObject *v41;
  NSObject *v42;
  void *v43;
  id v44;
  id obj;
  void *v46;
  unint64_t v47;
  id v48;
  id v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  id v54;
  id v55;
  id v56;
  id v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  _QWORD v62[4];
  id v63;
  uint8_t v64[128];
  uint8_t buf[4];
  void *v66;
  __int16 v67;
  void *v68;
  _BYTE v69[128];

  v3 = a1;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:](NSURL, "URLWithString:", v3));
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:](NSArray, "arrayWithObjects:", NSURLPathKey, NSURLCreationDateKey, NSURLTotalFileSizeKey, 0));
  v62[0] = _NSConcreteStackBlock;
  v62[1] = 3221225472;
  v62[2] = sub_100009978;
  v62[3] = &unk_1000750D0;
  v7 = v3;
  v63 = v7;
  v46 = v4;
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:", v5, v6, 4, v62));

  v48 = objc_alloc_init((Class)NSMutableDictionary);
  v58 = 0u;
  v59 = 0u;
  v60 = 0u;
  v61 = 0u;
  v9 = v8;
  v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v58, v69, 16);
  obj = v9;
  if (!v10)
  {
LABEL_37:

    goto LABEL_38;
  }
  v11 = v10;
  v44 = v7;
  v12 = 0;
  v47 = a2 << 20;
  v13 = *(_QWORD *)v59;
  while (2)
  {
    for (i = 0; i != v11; i = (char *)i + 1)
    {
      if (*(_QWORD *)v59 != v13)
        objc_enumerationMutation(obj);
      v15 = *(void **)(*((_QWORD *)&v58 + 1) + 8 * (_QWORD)i);
      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v48, "objectForKey:", v15));

      if (!v16)
      {
        v56 = 0;
        v57 = 0;
        v17 = objc_msgSend(v15, "getResourceValue:forKey:error:", &v57, NSURLCreationDateKey, &v56);
        v18 = v57;
        v19 = v56;
        if ((v17 & 1) != 0)
        {
          v54 = 0;
          v55 = 0;
          v20 = objc_msgSend(v15, "getResourceValue:forKey:error:", &v55, NSURLTotalFileSizeKey, &v54);
          v21 = v55;
          v22 = v54;

          if ((v20 & 1) != 0)
          {
            v12 += (unint64_t)objc_msgSend(v21, "unsignedLongValue");
            v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjectsAndKeys:](NSDictionary, "dictionaryWithObjectsAndKeys:", v15, CFSTR("url"), v18, CFSTR("date"), v21, CFSTR("size"), 0));
            objc_msgSend(v48, "setObject:forKey:", v23, v15);

            continue;
          }
          v27 = sub_10001D38C();
          v25 = objc_claimAutoreleasedReturnValue(v27);
          if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
          {
            v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "localizedDescription"));
            *(_DWORD *)buf = 138412546;
            v66 = v15;
            v67 = 2112;
            v68 = v28;
            _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "Error getting file size for %@: %@", buf, 0x16u);

          }
          v19 = v22;
        }
        else
        {
          v24 = sub_10001D38C();
          v25 = objc_claimAutoreleasedReturnValue(v24);
          if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
          {
            v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "localizedDescription"));
            *(_DWORD *)buf = 138412546;
            v66 = v15;
            v67 = 2112;
            v68 = v26;
            _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "Error getting file creation date for %@: %@", buf, 0x16u);

          }
          v21 = 0;
        }

        goto LABEL_20;
      }
    }
    v11 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v58, v69, 16);
    if (v11)
      continue;
    break;
  }
LABEL_20:

  v29 = v12 > v47;
  v7 = v44;
  if (v29)
  {
    v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v48, "keysSortedByValueUsingComparator:", &stru_100075110));
    v50 = 0u;
    v51 = 0u;
    v52 = 0u;
    v53 = 0u;
    v30 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v50, v64, 16);
    if (v30)
    {
      v31 = v30;
      v32 = 0;
      v33 = *(_QWORD *)v51;
      do
      {
        for (j = 0; j != v31; j = (char *)j + 1)
        {
          if (*(_QWORD *)v51 != v33)
            objc_enumerationMutation(v9);
          v35 = *(void **)(*((_QWORD *)&v50 + 1) + 8 * (_QWORD)j);
          v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v48, "objectForKey:", v35));
          v37 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v36, "objectForKey:", CFSTR("size")));
          v32 += (unint64_t)objc_msgSend(v37, "unsignedLongValue");

          if (v32 > v47)
          {
            v49 = 0;
            v38 = objc_msgSend(v46, "removeItemAtURL:error:", v35, &v49);
            v39 = v49;
            v40 = sub_10001D38C();
            v41 = objc_claimAutoreleasedReturnValue(v40);
            v42 = v41;
            if ((v38 & 1) != 0)
            {
              if (os_log_type_enabled(v41, OS_LOG_TYPE_INFO))
              {
                *(_DWORD *)buf = 138412290;
                v66 = v35;
                _os_log_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_INFO, "Successful removal of tailspin file to reduce disk space: %@", buf, 0xCu);
              }
            }
            else if (os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT))
            {
              v43 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v39, "localizedDescription"));
              *(_DWORD *)buf = 138412546;
              v66 = v35;
              v67 = 2112;
              v68 = v43;
              _os_log_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_DEFAULT, "Error: failed removal of tailspin file to reduce disk space: %@ error: %@", buf, 0x16u);

            }
          }
        }
        v31 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v50, v64, 16);
      }
      while (v31);
      v7 = v44;
    }
    goto LABEL_37;
  }
LABEL_38:

}

void sub_100007B70(void *a1)
{
  id v1;
  id v2;
  NSObject *v3;
  id v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  void *i;
  const __CFString *v22;
  id v23;
  NSObject *v24;
  void *v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  NSObject *v30;
  const __CFString *v31;
  id v32;
  NSObject *v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  NSObject *v38;
  id v39;
  void *v40;
  id v41;
  NSObject *v42;
  const __CFString *v43;
  void *v44;
  id v45;
  NSObject *v46;
  NSObject *v47;
  id v48;
  NSObject *v49;
  _BOOL4 v50;
  id v51;
  void *v52;
  id v53;
  id v54;
  void *v55;
  void *v56;
  id v57;
  char *v58;
  void *v59;
  id v60;
  __CFString *v61;
  id v62;
  id v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  id v68;
  uint8_t buf[4];
  id v70;
  __int16 v71;
  const __CFString *v72;
  uint8_t v73[4];
  id v74;

  v1 = a1;
  v2 = sub_10001D38C();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
    sub_1000377F0();

  v4 = objc_retainAutorelease(v1);
  v5 = (char *)objc_msgSend(v4, "UTF8String");
  v63 = 0;
  v6 = sub_1000150C0(v5, &v63);
  v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  v8 = v63;
  if (v7)
  {
    if (objc_msgSend(v7, "count") == (id)1)
    {
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "objectAtIndex:", 0));
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "objectForKeyedSubscript:", off_10007FB38));
      v11 = v10;
      if (!v10)
      {
        v37 = sub_10001D38C();
        v38 = objc_claimAutoreleasedReturnValue(v37);
        if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)v73 = 0;
          _os_log_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_DEFAULT, "Report type field is missing", v73, 2u);
        }

        v39 = sub_100005B2C(5, (uint64_t)CFSTR("Report type field is missing, failed to process request"));
        v40 = (void *)objc_claimAutoreleasedReturnValue(v39);

        sub_100008214(0, 0, v40);
        unlink(v5);
        v36 = 0;
        v8 = v40;
        goto LABEL_49;
      }
      if (objc_msgSend(v10, "isEqualToString:", off_10007FB48))
      {
        v55 = v11;
        v57 = v8;
        v58 = v5;
        v59 = v7;
        v60 = v4;
        v12 = v4;
        v56 = v9;
        v54 = v9;
        v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
        v14 = objc_msgSend(objc_alloc((Class)SASampleStore), "initForFileParsing");
        objc_msgSend(v14, "setShouldGatherKextStat:", 0);
        objc_msgSend(v14, "setDataGatheringOptions:", 7);
        v15 = objc_retainAutorelease(v12);
        v16 = objc_msgSend(v15, "UTF8String");
        v68 = 0;
        objc_msgSend(v14, "parseKTraceFile:warningsOut:errorOut:", v16, v13, &v68);
        v61 = (__CFString *)v68;
        v64 = 0u;
        v65 = 0u;
        v66 = 0u;
        v67 = 0u;
        v17 = v13;
        v18 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v64, v73, 16);
        if (v18)
        {
          v19 = v18;
          v20 = *(_QWORD *)v65;
          do
          {
            for (i = 0; i != v19; i = (char *)i + 1)
            {
              if (*(_QWORD *)v65 != v20)
                objc_enumerationMutation(v17);
              v22 = *(const __CFString **)(*((_QWORD *)&v64 + 1) + 8 * (_QWORD)i);
              v23 = sub_10001D38C();
              v24 = objc_claimAutoreleasedReturnValue(v23);
              if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)buf = 138412546;
                v70 = v15;
                v71 = 2112;
                v72 = v22;
                _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, "WARNING trying to create sample store from %@: %@\n", buf, 0x16u);
              }

            }
            v19 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v64, v73, 16);
          }
          while (v19);
        }

        v25 = v14;
        if (v14)
        {
          v26 = v54;
          v27 = sub_100009ADC(v15, v14, v54, 0);
          v28 = (void *)objc_claimAutoreleasedReturnValue(v27);
          v7 = v59;
          v4 = v60;
          v8 = v57;
          v5 = v58;
          v11 = v55;
        }
        else
        {
          v41 = sub_10001D38C();
          v42 = objc_claimAutoreleasedReturnValue(v41);
          v7 = v59;
          v26 = v54;
          v11 = v55;
          if (os_log_type_enabled(v42, OS_LOG_TYPE_DEFAULT))
          {
            v43 = CFSTR("Unknown error");
            if (v61)
              v43 = v61;
            *(_DWORD *)buf = 138412546;
            v70 = v15;
            v71 = 2112;
            v72 = v43;
            _os_log_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_DEFAULT, "ERROR trying to create sample store from %@: %@\n", buf, 0x16u);
          }

          v28 = 0;
          v4 = v60;
          v8 = v57;
          v5 = v58;
        }

        v9 = v56;
      }
      v44 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "objectForKeyedSubscript:", off_10007FB28));
      v45 = sub_10001D38C();
      v46 = objc_claimAutoreleasedReturnValue(v45);
      v47 = v46;
      if (v44)
      {
        if (os_log_type_enabled(v46, OS_LOG_TYPE_DEBUG))
          sub_1000377C4();

        v62 = 0;
        sub_100006B54(v4, 0, &v62);
        v36 = v62;
        v48 = sub_10001D38C();
        v49 = objc_claimAutoreleasedReturnValue(v48);
        v50 = os_log_type_enabled(v49, OS_LOG_TYPE_DEFAULT);
        if (v36)
        {
          if (v50)
          {
            *(_WORD *)v73 = 0;
            _os_log_impl((void *)&_mh_execute_header, v49, OS_LOG_TYPE_DEFAULT, "Successfully parsed and moved tailspin file. Posting filePath to Sentry", v73, 2u);
          }

          sub_100008214(v36, v44, 0);
          goto LABEL_48;
        }
        if (v50)
        {
          *(_DWORD *)v73 = 138412290;
          v74 = v4;
          _os_log_impl((void *)&_mh_execute_header, v49, OS_LOG_TYPE_DEFAULT, "Error trying to move Sentry tailspin from %@", v73, 0xCu);
        }

        v53 = sub_100005B2C(5, (uint64_t)CFSTR("Failed to move Sentry tailspin from spool directory"));
        v52 = (void *)objc_claimAutoreleasedReturnValue(v53);

        sub_100008214(0, v44, v52);
      }
      else
      {
        if (os_log_type_enabled(v46, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)v73 = 0;
          _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_DEFAULT, "Failed to get reference number from reason dictionary. Reference number won't be included", v73, 2u);
        }

        v51 = sub_100005B2C(5, (uint64_t)CFSTR("Failed to get reference number from reason dictionary. Reference number won't be included"));
        v52 = (void *)objc_claimAutoreleasedReturnValue(v51);

        sub_100008214(0, 0, v52);
        v36 = 0;
      }
      v8 = v52;
LABEL_48:
      unlink(v5);

LABEL_49:
      v35 = v8;
      goto LABEL_50;
    }
    v32 = sub_10001D38C();
    v33 = objc_claimAutoreleasedReturnValue(v32);
    if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v73 = 0;
      _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, "Tailspin unexpectledly contains more than one hang", v73, 2u);
    }

    v31 = CFSTR("Error, tailspin unexpectledly contains more than one hang. Reference number won't be included");
  }
  else
  {
    v29 = sub_10001D38C();
    v30 = objc_claimAutoreleasedReturnValue(v29);
    if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v73 = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, "Failed to parse tailspin reasonString into a dictionary", v73, 2u);
    }

    v31 = CFSTR("Failed to parse reasonString into a dictionary. Reference number won't be included");
  }
  v34 = sub_100005B2C(5, (uint64_t)v31);
  v35 = (void *)objc_claimAutoreleasedReturnValue(v34);

  sub_100008214(0, 0, v35);
  unlink(v5);
  v36 = 0;
LABEL_50:

}

void sub_100008214(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  id *v9;
  uint64_t *v10;
  uint64_t v11;
  const __CFDictionary *v12;
  __CFNotificationCenter *DistributedCenter;
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];
  _QWORD v17[2];
  uint64_t v18;
  id v19;

  v5 = a1;
  v6 = a2;
  v7 = a3;
  v8 = v7;
  if (v7)
  {
    if (!v6)
    {
      v18 = off_10007FB60;
      v19 = v7;
      v9 = &v19;
      v10 = &v18;
      v11 = 1;
      goto LABEL_9;
    }
    v16[0] = off_10007FB28;
    v16[1] = off_10007FB60;
    v17[0] = v6;
    v17[1] = v7;
    v9 = (id *)v17;
    v10 = v16;
  }
  else
  {
    if (!v6)
      sub_10003781C();
    if (!v5)
      sub_100037844();
    v14[0] = off_10007FB28;
    v14[1] = off_10007FB58;
    v15[0] = v6;
    v15[1] = v5;
    v9 = (id *)v15;
    v10 = v14;
  }
  v11 = 2;
LABEL_9:
  v12 = (const __CFDictionary *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v9, v10, v11));
  DistributedCenter = CFNotificationCenterGetDistributedCenter();
  CFNotificationCenterPostNotification(DistributedCenter, off_10007FB20, 0, v12, 1u);

}

void sub_10000836C()
{
  unsigned int v0;
  _UNKNOWN **v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  NSObject *v6;
  uint64_t v7;
  void *v8;
  const __CFString *v9;
  id v10;
  NSObject *v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  unsigned __int8 v19;
  NSObject *v20;
  void *v21;
  unsigned int v22;
  int v23;
  BOOL v24;
  id v25;
  NSObject *v26;
  id v27;
  NSObject *v28;
  id v29;
  NSObject *v30;
  uint64_t v31;
  void *v32;
  NSObject *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  NSObject *v38;
  id v39;
  uint64_t v40;
  void *v41;
  const __CFString *v42;
  void *v43;
  unsigned __int8 v44;
  void *v45;
  id v46;
  NSObject *v47;
  void *v48;
  unsigned int v49;
  NSObject *v50;
  NSObject *v51;
  void *v52;
  id v53;
  NSObject *v54;
  void *v55;
  id v56;
  uint64_t v57;
  const __CFString *v58;
  void *v59;
  id v60;
  uint8_t *v61;
  NSObject *v62;
  const char *v63;
  uint32_t v64;
  void *v65;
  id v66;
  NSObject *v67;
  void *v68;
  id v69;
  void *v70;
  id v71;
  uint64_t v72;
  const __CFString *v73;
  id v74;
  void *v75;
  void *v76;
  id v77;
  id v78;
  void *v79;
  void *context;
  void *v81;
  void *v82;
  __CFString *v83;
  unsigned __int8 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  id v89;
  id v90;
  id v91;
  id v92;
  uint8_t v93[128];
  int v94;
  const __CFString *v95;
  __int16 v96;
  NSObject *v97;
  __int16 v98;
  const __CFString *v99;
  _QWORD buf[3];
  uint64_t v101;
  NSObject *v102;

  v0 = 0;
  do
  {
    dword_100080170 = 0;
    nftw("/var/root/Library/Caches/hangtracerd/spool", (int (__cdecl *)(const char *, const stat *, int, FTW *))sub_100008EC8, 1, 3);
    if (v0 > 3)
      break;
    ++v0;
  }
  while (dword_100080170 > 0);
  v1 = &ADClientAddValueForScalarKey_ptr;
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
  v89 = 0;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "contentsOfDirectoryAtPath:error:", CFSTR("/var/mobile/Library/Caches/com.apple.backboardd/spool"), &v89));
  v4 = v89;

  if (!v4)
  {
    v87 = 0u;
    v88 = 0u;
    v85 = 0u;
    v86 = 0u;
    v12 = v3;
    v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v85, v93, 16);
    if (!v13)
      goto LABEL_80;
    v14 = v13;
    v15 = *(_QWORD *)v86;
    v78 = v12;
    while (1)
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v86 != v15)
          objc_enumerationMutation(v12);
        v17 = *(void **)(*((_QWORD *)&v85 + 1) + 8 * (_QWORD)v16);
        v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "pathExtension"));
        v19 = objc_msgSend(v18, "isEqualToString:", CFSTR("tailspin"));

        if ((v19 & 1) == 0)
        {
          v27 = sub_10001D38C();
          v20 = objc_claimAutoreleasedReturnValue(v27);
          if (os_log_type_enabled(v20, OS_LOG_TYPE_DEBUG))
          {
            LODWORD(buf[0]) = 138543362;
            *(_QWORD *)((char *)buf + 4) = v17;
            _os_log_debug_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEBUG, "Skipping non-tailspin file: %{public}@", (uint8_t *)buf, 0xCu);
          }
          goto LABEL_47;
        }
        if ((objc_msgSend(v17, "hasPrefix:", CFSTR("processing_")) & 1) != 0)
          goto LABEL_48;
        v20 = objc_claimAutoreleasedReturnValue(objc_msgSend(CFSTR("/var/mobile/Library/Caches/com.apple.backboardd/spool"), "stringByAppendingPathComponent:", v17));
        v84 = 0;
        v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1[55], "defaultManager"));
        v22 = objc_msgSend(v21, "fileExistsAtPath:isDirectory:", v20, &v84);
        v23 = v84;

        if (v22)
          v24 = v23 == 0;
        else
          v24 = 0;
        if (v24)
        {
          v81 = objc_autoreleasePoolPush();
          v28 = v20;
          context = objc_autoreleasePoolPush();
          v29 = sub_10001D38C();
          v30 = objc_claimAutoreleasedReturnValue(v29);
          if (os_log_type_enabled(v30, OS_LOG_TYPE_DEBUG))
          {
            LODWORD(buf[0]) = 138412290;
            *(_QWORD *)((char *)buf + 4) = v28;
            _os_log_debug_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEBUG, "Started processing %@", (uint8_t *)buf, 0xCu);
          }

          v82 = (void *)objc_claimAutoreleasedReturnValue(-[NSObject lastPathComponent](v28, "lastPathComponent"));
          v79 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(CFSTR("processing_"), "stringByAppendingString:"));
          v31 = objc_claimAutoreleasedReturnValue(objc_msgSend(CFSTR("/var/mobile/Library/Caches/com.apple.backboardd/spool"), "stringByAppendingPathComponent:"));
          v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1[55], "defaultManager"));
          v92 = 0;
          v33 = objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "attributesOfItemAtPath:error:", v28, &v92));
          v34 = v92;

          v83 = (__CFString *)v31;
          if (!v33 || v34)
          {
            v39 = sub_10001D38C();
            v38 = objc_claimAutoreleasedReturnValue(v39);
            if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT))
            {
              v40 = objc_claimAutoreleasedReturnValue(objc_msgSend(v34, "localizedDescription"));
              v41 = (void *)v40;
              LODWORD(buf[0]) = 138412546;
              v42 = CFSTR("Unknown");
              if (v40)
                v42 = (const __CFString *)v40;
              *(_QWORD *)((char *)buf + 4) = v28;
              WORD2(buf[1]) = 2112;
              *(_QWORD *)((char *)&buf[1] + 6) = v42;
              _os_log_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_DEFAULT, "Could not get attributes of '%@' due to error %@. Attempting to remove the file.", (uint8_t *)buf, 0x16u);

            }
LABEL_39:

            v43 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
            objc_msgSend(v43, "removeItemAtPath:error:", v28, 0);
LABEL_40:

          }
          else
          {
            v35 = -[NSObject fileSize](v33, "fileSize");
            if ((unint64_t)v35 >= 0x1400001)
            {
              v36 = v35;
              v37 = sub_10001D38C();
              v38 = objc_claimAutoreleasedReturnValue(v37);
              if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT))
              {
                LODWORD(buf[0]) = 138412802;
                *(_QWORD *)((char *)buf + 4) = v28;
                WORD2(buf[1]) = 2048;
                *(_QWORD *)((char *)&buf[1] + 6) = v36;
                HIWORD(buf[2]) = 2048;
                v101 = 20971520;
                _os_log_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_DEFAULT, "Encountered tailspin file '%@' of size %lluB (> cap of %lluB). Attempting to remove the file.", (uint8_t *)buf, 0x20u);
              }
              goto LABEL_39;
            }

            v48 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
            v91 = 0;
            v49 = objc_msgSend(v48, "moveItemAtPath:toPath:error:", v28, v31, &v91);
            v34 = v91;

            if (v49 && !v34)
            {
              v50 = objc_claimAutoreleasedReturnValue(+[NSFileHandle fileHandleForReadingAtPath:](NSFileHandle, "fileHandleForReadingAtPath:", v83));
              v33 = v50;
              if (!v50)
              {
                v59 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
                objc_msgSend(v59, "removeItemAtPath:error:", v83, 0);

                v60 = sub_10001D38C();
                v51 = objc_claimAutoreleasedReturnValue(v60);
                if (os_log_type_enabled(v51, OS_LOG_TYPE_DEFAULT))
                {
                  LODWORD(buf[0]) = 138412290;
                  *(_QWORD *)((char *)buf + 4) = v83;
                  v61 = (uint8_t *)buf;
                  v62 = v51;
                  v63 = "Could not open %@ for reading. Attempting to remove the file.";
                  v64 = 12;
                  goto LABEL_71;
                }
LABEL_72:
                v44 = 0;
                goto LABEL_78;
              }
              buf[0] = _NSConcreteStackBlock;
              buf[1] = 3221225472;
              buf[2] = sub_100011BB0;
              v101 = (uint64_t)&unk_1000753F0;
              v102 = v50;
              if ((OSAWriteLogForSubmission(CFSTR("302"), v82, 0, 0, buf) & 1) != 0)
              {

                if ((sub_100005BA4(CFSTR("/var/mobile/Library/Logs/CrashReporter/DiagnosticLogs/CoreAnimation/"), 1) & 1) != 0)
                {
                  v51 = objc_claimAutoreleasedReturnValue(objc_msgSend(CFSTR("/var/mobile/Library/Logs/CrashReporter/DiagnosticLogs/CoreAnimation/"), "stringByAppendingPathComponent:", v82));
                  v52 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
                  v90 = 0;
                  v44 = objc_msgSend(v52, "moveItemAtPath:toPath:error:", v83, v51, &v90);
                  v77 = v90;
                  if (v77)
                    v44 = 0;

                  if ((v44 & 1) != 0)
                  {
                    v53 = sub_10001D38C();
                    v54 = objc_claimAutoreleasedReturnValue(v53);
                    if (os_log_type_enabled(v54, OS_LOG_TYPE_DEBUG))
                    {
                      v94 = 138412546;
                      v95 = (const __CFString *)v28;
                      v96 = 2112;
                      v97 = v51;
                      _os_log_debug_impl((void *)&_mh_execute_header, v54, OS_LOG_TYPE_DEBUG, "Finished processing successfully %@. Final destination for file is %@", (uint8_t *)&v94, 0x16u);
                    }
                  }
                  else
                  {
                    v70 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
                    objc_msgSend(v70, "removeItemAtPath:error:", v83, 0);

                    v71 = sub_10001D38C();
                    v54 = objc_claimAutoreleasedReturnValue(v71);
                    if (os_log_type_enabled(v54, OS_LOG_TYPE_DEFAULT))
                    {
                      v72 = objc_claimAutoreleasedReturnValue(objc_msgSend(v77, "localizedDescription"));
                      v76 = (void *)v72;
                      v94 = 138543874;
                      v73 = CFSTR("Unknown");
                      if (v72)
                        v73 = (const __CFString *)v72;
                      v95 = v83;
                      v96 = 2114;
                      v97 = v51;
                      v98 = 2112;
                      v99 = v73;
                      _os_log_impl((void *)&_mh_execute_header, v54, OS_LOG_TYPE_DEFAULT, "Could not rename %{public}@ to %{public}@ due to error %@. Attempting to remove the file", (uint8_t *)&v94, 0x20u);

                    }
                  }

                  goto LABEL_78;
                }
                v68 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
                objc_msgSend(v68, "removeItemAtPath:error:", v83, 0);

                v69 = sub_10001D38C();
                v51 = objc_claimAutoreleasedReturnValue(v69);
                if (os_log_type_enabled(v51, OS_LOG_TYPE_DEFAULT))
                {
                  v94 = 138412546;
                  v95 = CFSTR("/var/mobile/Library/Logs/CrashReporter/DiagnosticLogs/CoreAnimation/");
                  v96 = 2112;
                  v97 = v83;
                  v61 = (uint8_t *)&v94;
                  v62 = v51;
                  v63 = "Could not create %@. Removing %@ rather than letting it persist.";
                  v64 = 22;
LABEL_71:
                  _os_log_impl((void *)&_mh_execute_header, v62, OS_LOG_TYPE_DEFAULT, v63, v61, v64);
                }
                goto LABEL_72;
              }
              v65 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
              objc_msgSend(v65, "removeItemAtPath:error:", v83, 0);

              v66 = sub_10001D38C();
              v67 = objc_claimAutoreleasedReturnValue(v66);
              if (os_log_type_enabled(v67, OS_LOG_TYPE_DEFAULT))
              {
                v94 = 138412290;
                v95 = v83;
                _os_log_impl((void *)&_mh_execute_header, v67, OS_LOG_TYPE_DEFAULT, "Failed to write binary data for IPS file creation. Removing %@", (uint8_t *)&v94, 0xCu);
              }

              v44 = 0;
              v51 = v102;
LABEL_78:
              v45 = v81;

              v34 = 0;
LABEL_42:

              objc_autoreleasePoolPop(context);
              v1 = &ADClientAddValueForScalarKey_ptr;
              if ((v44 & 1) == 0)
              {
                v46 = sub_10001D38C();
                v47 = objc_claimAutoreleasedReturnValue(v46);
                if (os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT))
                {
                  LODWORD(buf[0]) = 138412290;
                  *(_QWORD *)((char *)buf + 4) = v28;
                  _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_DEFAULT, "Encountered error trying to procesxs %@", (uint8_t *)buf, 0xCu);
                }

              }
              objc_autoreleasePoolPop(v45);
              v12 = v78;
              goto LABEL_47;
            }
            v55 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
            objc_msgSend(v55, "removeItemAtPath:error:", v28, 0);

            v56 = sub_10001D38C();
            v33 = objc_claimAutoreleasedReturnValue(v56);
            if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
            {
              v57 = objc_claimAutoreleasedReturnValue(objc_msgSend(v34, "localizedDescription"));
              v43 = (void *)v57;
              LODWORD(buf[0]) = 138543874;
              v58 = CFSTR("Unknown");
              if (v57)
                v58 = (const __CFString *)v57;
              *(_QWORD *)((char *)buf + 4) = v28;
              WORD2(buf[1]) = 2114;
              *(_QWORD *)((char *)&buf[1] + 6) = v83;
              HIWORD(buf[2]) = 2112;
              v101 = (uint64_t)v58;
              _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, "Could not rename %{public}@ to %{public}@ due to error %@. Attempting to remove the file.", (uint8_t *)buf, 0x20u);
              goto LABEL_40;
            }
          }
          v44 = 0;
          v45 = v81;
          goto LABEL_42;
        }
        v25 = sub_10001D38C();
        v26 = objc_claimAutoreleasedReturnValue(v25);
        if (os_log_type_enabled(v26, OS_LOG_TYPE_DEBUG))
        {
          LODWORD(buf[0]) = 138412290;
          *(_QWORD *)((char *)buf + 4) = v20;
          _os_log_debug_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEBUG, "Skipping directory with .tailspin extension: %@", (uint8_t *)buf, 0xCu);
        }

LABEL_47:
LABEL_48:
        v16 = (char *)v16 + 1;
      }
      while (v14 != v16);
      v74 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v85, v93, 16);
      v14 = v74;
      if (!v74)
      {
LABEL_80:

        v75 = (void *)objc_claimAutoreleasedReturnValue(+[HTPrefs sharedPrefs](HTPrefs, "sharedPrefs"));
        sub_100007568(CFSTR("/var/mobile/Library/Logs/CrashReporter/DiagnosticLogs/CoreAnimation/"), (uint64_t)objc_msgSend(v75, "savedTailspinMaxMB"));

        return;
      }
    }
  }
  v5 = sub_10001D38C();
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "localizedDescription"));
    v8 = (void *)v7;
    v9 = CFSTR("Unknown");
    if (v7)
      v9 = (const __CFString *)v7;
    LODWORD(buf[0]) = 138412290;
    *(_QWORD *)((char *)buf + 4) = v9;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "Could not list files in CA stalls directory due to error: %@", (uint8_t *)buf, 0xCu);

  }
  v10 = sub_10001D38C();
  v11 = objc_claimAutoreleasedReturnValue(v10);
  if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)v93 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "Error checking for CA glitch tailspins", v93, 2u);
  }

}

uint64_t sub_100008EC8(uint64_t a1, uint64_t a2)
{
  void *v4;
  NSObject *v5;
  void *v6;
  unsigned int v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  NSObject *v12;
  void *v13;
  unsigned __int8 v14;
  NSObject *v15;
  void *v16;
  void *v17;
  unsigned int v18;
  NSObject *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  NSObject *v24;
  uint64_t v25;
  id v26;
  id v28;
  NSObject *v29;
  void *v30;
  unsigned __int8 v31;
  id v32;
  id v33;
  NSObject *v34;
  void *v35;
  unsigned __int8 v36;
  id v37;
  NSObject *v38;
  id v39;
  NSObject *v40;
  const char *v41;
  id v42;
  const char *v43;
  NSObject *v44;
  os_log_type_t v45;
  uint32_t v46;
  void *v47;
  unsigned int v48;
  id v49;
  id v50;
  id v51;
  _QWORD v52[4];
  NSObject *v53;
  id v54;
  uint64_t v55;
  void *v56;
  uint8_t buf[4];
  NSObject *v58;
  __int16 v59;
  NSObject *v60;
  __int16 v61;
  NSObject *v62;

  v4 = objc_autoreleasePoolPush();
  if ((*(_WORD *)(a2 + 4) & 0xF000) == 0x8000)
  {
    v5 = objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", a1));
    v6 = (void *)objc_claimAutoreleasedReturnValue(-[NSObject pathExtension](v5, "pathExtension"));
    v7 = objc_msgSend(v6, "isEqualToString:", CFSTR("tailspin"));
    v8 = -[NSObject rangeOfString:](v5, "rangeOfString:", CFSTR("processing.tailspin"));
    if (!v7)
    {
      v26 = sub_10001D38C();
      v12 = objc_claimAutoreleasedReturnValue(v26);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        v58 = v5;
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "Ignoring non tailspin file: %@", buf, 0xCu);
      }
      v15 = 0;
      goto LABEL_12;
    }
    v9 = v8;
    sub_1000161A8();
    if (v9 != (id)0x7FFFFFFFFFFFFFFFLL)
    {
      v28 = sub_10001D38C();
      v29 = objc_claimAutoreleasedReturnValue(v28);
      if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        v58 = v5;
        _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, "Found aborted file, deleting: %@", buf, 0xCu);
      }

      v30 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
      v51 = 0;
      v31 = objc_msgSend(v30, "removeItemAtPath:error:", v5, &v51);
      v15 = v51;

      sub_10000C94C(0, 1uLL, 0, 1);
      if ((v31 & 1) != 0)
        goto LABEL_13;
      v32 = sub_10001D38C();
      v12 = objc_claimAutoreleasedReturnValue(v32);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412546;
        v58 = v5;
        v59 = 2112;
        v60 = v15;
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "Failed to delete %@: %@", buf, 0x16u);
      }
LABEL_12:

LABEL_13:
      goto LABEL_14;
    }
    ++dword_100080170;
    v10 = -[NSObject rangeOfString:options:](v5, "rangeOfString:options:", v6, 12);
    v12 = objc_claimAutoreleasedReturnValue(-[NSObject stringByReplacingOccurrencesOfString:withString:options:range:](v5, "stringByReplacingOccurrencesOfString:withString:options:range:", v6, CFSTR("processing.tailspin"), 12, v10, v11));
    v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
    v54 = 0;
    v14 = objc_msgSend(v13, "moveItemAtPath:toPath:error:", v5, v12, &v54);
    v15 = v54;

    if ((v14 & 1) == 0)
    {
      v33 = sub_10001D38C();
      v34 = objc_claimAutoreleasedReturnValue(v33);
      if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412802;
        v58 = v5;
        v59 = 2112;
        v60 = v12;
        v61 = 2112;
        v62 = v15;
        _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEFAULT, "Failed to move %@ -> %@: %@", buf, 0x20u);
      }

      v35 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
      v36 = objc_msgSend(v35, "removeItemAtPath:error:", v5, 0);

      if ((v36 & 1) == 0)
      {
        sub_10000C94C(0, 2uLL, 0, 1);
        v37 = sub_10001D38C();
        v38 = objc_claimAutoreleasedReturnValue(v37);
        if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412546;
          v58 = v5;
          v59 = 2112;
          v60 = v15;
          _os_log_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_DEFAULT, "Failed to delete %@: %@", buf, 0x16u);
        }

      }
      goto LABEL_12;
    }
    v16 = (void *)CFPreferencesCopyValue(CFSTR("PDSEPrefHTTimeoutTimestampSec"), CFSTR("com.apple.da"), CFSTR("mobile"), kCFPreferencesAnyHost);

    if (-[NSObject containsString:](v12, "containsString:", CFSTR("Sentry")))
    {
      v17 = (void *)objc_claimAutoreleasedReturnValue(+[HTPrefs sharedPrefs](HTPrefs, "sharedPrefs"));
      v18 = objc_msgSend(v17, "shouldCollectOSSignpostsDeferred");

      if (v18)
      {
        v19 = objc_retainAutorelease(v12);
        v20 = open((const char *)-[NSObject UTF8String](v19, "UTF8String"), 2);
        if ((_DWORD)v20 != -1)
        {
          v21 = v20;
          v55 = UnsafePointer;
          v22 = (void *)objc_claimAutoreleasedReturnValue(+[HTPrefs sharedPrefs](HTPrefs, "sharedPrefs"));
          v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", objc_msgSend(v22, "shouldCollectOSSignpostsDeferred")));
          v56 = v23;
          v24 = objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v56, &v55, 1));

          v25 = qword_1000801E8;
          v52[0] = _NSConcreteStackBlock;
          v52[1] = 3221225472;
          v52[2] = sub_10000DA60;
          v52[3] = &unk_1000751D8;
          v53 = v19;
          tailspin_augment_output(v21, v24, v25, v52);
          dispatch_semaphore_wait((dispatch_semaphore_t)qword_1000801F0, 0xFFFFFFFFFFFFFFFFLL);

LABEL_41:
          sub_100007B70(v12);
          goto LABEL_12;
        }
        v50 = sub_10001D38C();
        v24 = objc_claimAutoreleasedReturnValue(v50);
        if (!os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
          goto LABEL_41;
        *(_DWORD *)buf = 138412290;
        v58 = v19;
        v43 = "Failed to open tailspin at %@";
        v44 = v24;
        v45 = OS_LOG_TYPE_DEFAULT;
        v46 = 12;
      }
      else
      {
        v42 = sub_10001D38C();
        v24 = objc_claimAutoreleasedReturnValue(v42);
        if (!os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
          goto LABEL_41;
        *(_WORD *)buf = 0;
        v43 = "OS Signposts augmentation is disabled";
        v44 = v24;
        v45 = OS_LOG_TYPE_INFO;
        v46 = 2;
      }
      _os_log_impl((void *)&_mh_execute_header, v44, v45, v43, buf, v46);
      goto LABEL_41;
    }
    if ((-[NSObject containsString:](v12, "containsString:", CFSTR("Slow-Launch")) & 1) != 0
      || -[NSObject containsString:](v12, "containsString:", CFSTR("Slow-Resume")))
    {
      v39 = sub_10001D38C();
      v40 = objc_claimAutoreleasedReturnValue(v39);
      if (!os_log_type_enabled(v40, OS_LOG_TYPE_DEFAULT))
      {
LABEL_31:

        sub_100006B54(v12, 0, 0);
        v12 = objc_retainAutorelease(v12);
        unlink((const char *)-[NSObject UTF8String](v12, "UTF8String"));
        goto LABEL_12;
      }
      *(_WORD *)buf = 0;
      v41 = "Slow-launch or Slow-resume tailspin detected. Not saving a spindump";
    }
    else
    {
      v47 = (void *)objc_claimAutoreleasedReturnValue(+[HTPrefs sharedPrefs](HTPrefs, "sharedPrefs"));
      v48 = objc_msgSend(v47, "eplEnabled");

      if (!v48 || v16)
      {
        sub_10000DB60(v12);
        goto LABEL_12;
      }
      v49 = sub_10001D38C();
      v40 = objc_claimAutoreleasedReturnValue(v49);
      if (!os_log_type_enabled(v40, OS_LOG_TYPE_DEFAULT))
        goto LABEL_31;
      *(_WORD *)buf = 0;
      v41 = "EPL is enabled, and HTSE is disabled. Not saving a spindump";
    }
    _os_log_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_DEFAULT, v41, buf, 2u);
    goto LABEL_31;
  }
LABEL_14:
  objc_autoreleasePoolPop(v4);
  return 0;
}

void start()
{
  void *v0;
  uint32_t v1;
  id v2;
  NSObject *v3;
  dispatch_queue_attr_t v4;
  NSObject *v5;
  dispatch_queue_t v6;
  void *v7;
  dispatch_semaphore_t v8;
  void *v9;
  dispatch_time_t v10;
  _QWORD handler[4];
  int v12;
  uint8_t buf[4];
  uint32_t v14;
  __int16 v15;
  int v16;
  int out_token;

  v0 = (void *)objc_claimAutoreleasedReturnValue(+[HTPrefs sharedPrefs](HTPrefs, "sharedPrefs"));
  objc_msgSend(v0, "setupPrefsWithQueue:", &_dispatch_main_q);

  out_token = -1;
  v1 = notify_register_check("com.apple.hangreporter.processing", &out_token);
  if (v1 || out_token == -1)
  {
    v2 = sub_10001D38C();
    v3 = objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)buf = 67109376;
      v14 = v1;
      v15 = 1024;
      v16 = out_token;
      _os_log_fault_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_FAULT, "Unable to checkin with notifitation: %d (token %d)", buf, 0xEu);
    }

    out_token = -1;
  }
  sub_100015D64();
  v4 = dispatch_queue_attr_make_with_qos_class(0, QOS_CLASS_BACKGROUND, -15);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = dispatch_queue_create("com.apple.hangreporter.tailspin.augmentation_queue", v5);
  v7 = (void *)qword_1000801E8;
  qword_1000801E8 = (uint64_t)v6;

  v8 = dispatch_semaphore_create(0);
  v9 = (void *)qword_1000801F0;
  qword_1000801F0 = (uint64_t)v8;

  handler[0] = _NSConcreteStackBlock;
  handler[1] = 3221225472;
  handler[2] = sub_10000974C;
  handler[3] = &unk_100075088;
  v12 = out_token;
  xpc_set_event_stream_handler("com.apple.fsevents.matching", (dispatch_queue_t)&_dispatch_main_q, handler);

  v10 = dispatch_time(0, 10000000000);
  dispatch_after(v10, (dispatch_queue_t)&_dispatch_main_q, &stru_1000750A8);

  dispatch_main();
}

void sub_10000974C(uint64_t a1, xpc_object_t xdict)
{
  const char *string;
  id v4;
  NSObject *v5;
  id v6;
  NSObject *v7;
  id v8;
  NSObject *v9;
  id v10;
  NSObject *v11;
  int v12;
  const char *v13;

  string = xpc_dictionary_get_string(xdict, _xpc_event_key_name);
  v4 = sub_10001D38C();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v12 = 136315138;
    v13 = string;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Received event: %s", (uint8_t *)&v12, 0xCu);
  }

  if (!strncmp(string, "com.apple.hangreporter.spool.modified", 0x25uLL))
  {
    notify_set_state(*(_DWORD *)(a1 + 32), 1uLL);
    sub_10000836C();
    notify_set_state(*(_DWORD *)(a1 + 32), 0);
    v8 = sub_10001D38C();
    v9 = objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
      sub_10003786C();

    notify_post("com.apple.hangreporter.processing");
  }
  else
  {
    v6 = sub_10001D38C();
    v7 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      v12 = 136315138;
      v13 = string;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Ignoring unknown event: %s", (uint8_t *)&v12, 0xCu);
    }

  }
  v10 = sub_10001D38C();
  v11 = objc_claimAutoreleasedReturnValue(v10);
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v12) = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "Done...", (uint8_t *)&v12, 2u);
  }

}

void sub_100009910(id a1)
{
  id v1;
  NSObject *v2;
  uint8_t v3[16];

  v1 = sub_10001D38C();
  v2 = objc_claimAutoreleasedReturnValue(v1);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Calling xpc_transaction_exit_clean() now", v3, 2u);
  }

  xpc_transaction_exit_clean();
}

BOOL sub_100009978(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;
  NSObject *v6;
  uint64_t v7;
  void *v8;
  int v10;
  uint64_t v11;
  __int16 v12;
  void *v13;

  v4 = a3;
  if (v4)
  {
    v5 = sub_10001D38C();
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      v7 = *(_QWORD *)(a1 + 32);
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "localizedDescription"));
      v10 = 138412546;
      v11 = v7;
      v12 = 2112;
      v13 = v8;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Error getting enumerator for directory %@: %@", (uint8_t *)&v10, 0x16u);

    }
  }

  return v4 == 0;
}

int64_t sub_100009A60(id a1, id a2, id a3)
{
  id v4;
  void *v5;
  void *v6;
  id v7;

  v4 = a2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a3, "objectForKey:", CFSTR("date")));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKey:", CFSTR("date")));

  v7 = objc_msgSend(v5, "compare:", v6);
  return (int64_t)v7;
}

id sub_100009ADC(void *a1, void *a2, void *a3, int a4)
{
  id v6;
  id v7;
  void *v8;
  void *v9;
  signed int v10;
  void *v11;
  void *v12;
  void *v13;
  int v14;
  double v15;
  void *v16;
  uint64_t v17;
  SATimestamp *v18;
  SATimestamp *v19;
  id v20;
  id v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  NSObject *v29;
  double v30;
  void *v31;
  void *v32;
  id v33;
  void *v34;
  void *v35;
  unsigned __int8 v36;
  void *v37;
  void *v38;
  id v39;
  void *v40;
  id v41;
  void *v42;
  id v43;
  void *v44;
  void *v45;
  id v46;
  NSObject *v47;
  void *v48;
  void *v49;
  unsigned int v50;
  id v51;
  NSObject *v52;
  _BOOL4 v53;
  void *v54;
  id v55;
  NSObject *v56;
  void *v57;
  void *v58;
  void *v59;
  BOOL v60;
  void *v61;
  void *v62;
  BOOL v63;
  id v64;
  NSObject *v65;
  double v66;
  id v67;
  id v68;
  NSObject *v69;
  id v70;
  NSObject *v71;
  id v72;
  const __CFString *v73;
  void *v74;
  void *v75;
  void *v76;
  id v77;
  void *v78;
  void *v79;
  void *v80;
  void *v81;
  void *v82;
  void *v83;
  void *v84;
  uint64_t v85;
  void *v86;
  unsigned int v87;
  __CFString *v88;
  __CFString *v89;
  id v90;
  id v91;
  NSObject *v92;
  uint64_t v93;
  uint32_t v94;
  double v95;
  id v96;
  NSObject *v97;
  NSObject *v98;
  void *v99;
  void *v100;
  void *v101;
  void *v102;
  void *v103;
  void *v104;
  void *v105;
  void *v106;
  NSObject *v107;
  int v108;
  id v109;
  NSObject *v110;
  NSObject *v111;
  const __CFString *v112;
  id v113;
  void *v114;
  unsigned __int8 v115;
  void *v116;
  _BOOL4 v117;
  id v118;
  NSObject *v119;
  void *v120;
  void *v121;
  id v122;
  void *v123;
  id v124;
  id v125;
  id v126;
  id v127;
  id v128;
  id v129;
  id v130;
  void *v131;
  NSObject *v132;
  id v133;
  void *v134;
  void *v135;
  int v136;
  id v137;
  id v139;
  NSObject *v140;
  void *v141;
  void *v142;
  id v143;
  id v144;
  id v145;
  __CFString *v146;
  void *v147;
  void *v148;
  void *v149;
  void *v150;
  void *v151;
  id v152;
  void *v153;
  uint64_t v154;
  void *i;
  void *v156;
  void *v157;
  uint64_t v158;
  void *v159;
  _BYTE *v160;
  void *v161;
  _BYTE *v162;
  float v163;
  id v164;
  NSObject *v165;
  id v166;
  NSObject *v167;
  const __CFString *v168;
  id v169;
  __CFString *v170;
  void *v171;
  id v172;
  id v173;
  uint64_t v174;
  void *j;
  void *v176;
  void *v177;
  void *v178;
  _BOOL4 v179;
  id v180;
  void *v181;
  void *v182;
  id v183;
  void *v184;
  id v185;
  void *v186;
  void *v187;
  void *v188;
  void *v189;
  double v190;
  double v191;
  void *v192;
  _BOOL4 v194;
  id v195;
  NSObject *v196;
  id v197;
  const __CFString *v198;
  void *v199;
  double v200;
  double v201;
  void *v202;
  void *v203;
  void *v204;
  __CFString *v205;
  void *v206;
  _BOOL4 v207;
  id v208;
  NSObject *v209;
  void *v210;
  unsigned int v211;
  id v212;
  NSObject *v213;
  void *v214;
  void *v215;
  unsigned int v216;
  void *v217;
  void *v218;
  unsigned __int8 v219;
  id v220;
  NSObject *v221;
  double v222;
  id v223;
  _BOOL4 v224;
  void *v225;
  void *v226;
  void *v227;
  id v228;
  void *v229;
  void *v230;
  void *v231;
  void *v232;
  id v233;
  NSObject *v234;
  void *v235;
  unsigned int v236;
  void *v237;
  const __CFDictionary *v238;
  io_registry_entry_t k;
  kern_return_t Name;
  id v241;
  NSObject *v242;
  kern_return_t v243;
  id v244;
  NSObject *v245;
  id v246;
  void *v247;
  void *v248;
  void *v249;
  void *v250;
  id v251;
  NSObject *v252;
  void *v253;
  id v254;
  NSObject *v255;
  void *v256;
  unsigned int v257;
  CFDictionaryRef v258;
  void *v259;
  id v260;
  void *v261;
  const __CFString *v262;
  void *v263;
  void *v264;
  HTOrderedNSDict *v265;
  void *v266;
  void *v267;
  unsigned int v268;
  id v269;
  NSObject *v270;
  void *v271;
  id v272;
  id v273;
  id v274;
  NSObject *v275;
  id v276;
  void *v277;
  void *v278;
  void *v279;
  _BOOL4 v280;
  void *v281;
  void *v282;
  void *v283;
  void *v284;
  id v285;
  id v286;
  id v287;
  uint64_t v288;
  id v289;
  void *v290;
  void *v291;
  void *v292;
  void *v293;
  void *v294;
  NSNumber *v295;
  void *v296;
  id v297;
  void *v298;
  void *v299;
  void *v300;
  id v301;
  NSObject *v302;
  id v303;
  HRMakeRunnableData *v304;
  uint64_t v305;
  const char *v306;
  int v307;
  id v308;
  unsigned int v309;
  void *v310;
  id v311;
  uint64_t v312;
  unint64_t v313;
  void *v314;
  void *v316;
  void *v317;
  int v318;
  void *v319;
  id v320;
  void *v321;
  void *v322;
  id v323;
  _BYTE *v324;
  void *v325;
  void *v326;
  void *v327;
  void *v328;
  void *v329;
  id v330;
  id v331;
  void *v332;
  _BYTE *v333;
  void *v334;
  id v335;
  _QWORD v336[4];
  id v337;
  unint64_t v338;
  double v339;
  _QWORD v340[4];
  id v341;
  id v342;
  id v343;
  id v344;
  uint8_t *v345;
  const char *v346;
  unint64_t v347;
  uint64_t v348;
  char v349;
  __int128 v350;
  __int128 v351;
  __int128 v352;
  __int128 v353;
  __int128 v354;
  __int128 v355;
  __int128 v356;
  __int128 v357;
  _QWORD v358[4];
  id v359;
  uint8_t *v360;
  unint64_t v361;
  uint64_t v362;
  char v363;
  CFMutableDictionaryRef properties;
  io_iterator_t existing;
  _BYTE v366[22];
  _BYTE v367[128];
  _BYTE v368[128];
  const __CFString *v369;
  void *v370;
  _QWORD v371[2];
  _QWORD v372[2];
  uint8_t buf[32];
  __int128 v374;
  __int128 v375;
  __int128 v376;
  __int128 v377;
  __int128 v378;
  __int128 v379;

  v6 = a1;
  v330 = a2;
  v7 = a3;
  v323 = objc_retainAutorelease(v6);
  v306 = (const char *)objc_msgSend(v323, "cStringUsingEncoding:", 4);
  v332 = v7;
  v327 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("ServiceName")));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("PID")));
  v309 = objc_msgSend(v8, "unsignedIntValue");

  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v332, "objectForKeyedSubscript:", CFSTR("HangType")));
  v10 = objc_msgSend(v9, "intValue");

  v316 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v332, "objectForKeyedSubscript:", CFSTR("EnablementType")));
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v332, "objectForKeyedSubscript:", CFSTR("StartTime")));
  v333 = objc_msgSend(v11, "unsignedLongLongValue");

  v324 = sub_1000161EC(v323, v332);
  v321 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v332, "objectForKeyedSubscript:", off_10007FB38));
  v322 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v332, "objectForKeyedSubscript:", CFSTR("ProcessPath")));
  v314 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v322, "lastPathComponent"));
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v332, "objectForKeyedSubscript:", CFSTR("IsThirdPartyDevSupportModeHang")));
  v318 = objc_msgSend(v12, "BOOLValue");

  v317 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v332, "objectForKeyedSubscript:", CFSTR("IPSMetaDictionary")));
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v332, "objectForKeyedSubscript:", CFSTR("isFirstPartyApp")));
  v14 = objc_msgSend(v13, "BOOLValue");

  v15 = sub_1000064D8(v324 - v333);
  v307 = v14;
  v312 = sub_100006094(v14, v318, v15);
  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v332, "objectForKeyedSubscript:", CFSTR("Reason")));
  objc_msgSend(v330, "setReason:", v16);

  v326 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v332, "objectForKeyedSubscript:", CFSTR("UserAction")));
  v17 = objc_opt_class(NSString);
  if ((objc_opt_isKindOfClass(v326, v17) & 1) == 0)
  {

    v326 = 0;
  }
  v18 = +[SATimestamp timestampWithMachAbsTime:machContTime:wallTime:machTimebase:](SATimestamp, "timestampWithMachAbsTime:machContTime:wallTime:machTimebase:", v333, 0, sub_1000065E0(), 0.0);
  v329 = (void *)objc_claimAutoreleasedReturnValue(v18);
  v19 = +[SATimestamp timestampWithMachAbsTime:machContTime:wallTime:machTimebase:](SATimestamp, "timestampWithMachAbsTime:machContTime:wallTime:machTimebase:", v324, 0, sub_1000065E0(), 0.0);
  v328 = (void *)objc_claimAutoreleasedReturnValue(v19);
  v20 = objc_msgSend(v330, "indexOfFirstSampleOnOrAfterTimestamp:", v329);
  v21 = objc_msgSend(v330, "indexOfLastSampleOnOrBeforeTimestamp:", v328);
  if (v20 == (id)0x7FFFFFFFFFFFFFFFLL)
  {
    v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v330, "endTime"));

    if (!v22)
      goto LABEL_8;
    v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v330, "endTime"));
    objc_msgSend(v329, "guessMissingTimesBasedOnTimestamp:", v23);
  }
  else
  {
    v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v330, "sampleTimestamps"));
    v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v23, "objectAtIndexedSubscript:", v20));
    objc_msgSend(v329, "guessMissingTimesBasedOnTimestamp:", v24);

  }
LABEL_8:
  if (v21 == (id)0x7FFFFFFFFFFFFFFFLL)
  {
    v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v330, "startTime"));

    if (!v25)
      goto LABEL_13;
    v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v330, "startTime"));
    objc_msgSend(v328, "guessMissingTimesBasedOnTimestamp:", v26);
  }
  else
  {
    v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v330, "sampleTimestamps"));
    v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "objectAtIndexedSubscript:", v21));
    objc_msgSend(v328, "guessMissingTimesBasedOnTimestamp:", v27);

  }
LABEL_13:
  j__ADClientAddValueForScalarKey(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("com.apple.hangtracer.HTLogsConversion.AttemptType.%@"), v327), 1);
  v28 = sub_10001D38C();
  v29 = objc_claimAutoreleasedReturnValue(v28);
  if (os_log_type_enabled(v29, OS_LOG_TYPE_DEBUG))
    sub_100037A90();

  v313 = v10;
  if (objc_msgSend(v321, "isEqualToString:", off_10007FB48))
  {
    if (v20 == (id)0x7FFFFFFFFFFFFFFFLL || v21 == (id)0x7FFFFFFFFFFFFFFFLL)
    {
      v68 = sub_10001D38C();
      v69 = objc_claimAutoreleasedReturnValue(v68);
      if (os_log_type_enabled(v69, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v69, OS_LOG_TYPE_DEFAULT, "Sample store contains no samples for the tailspin interval, ignoring!", buf, 2u);
      }

      if (a4)
        sub_10000C94C(0, 6uLL, v10, v312);
      j__ADClientAddValueForScalarKey(CFSTR("com.apple.hangtracer.HTLogsConversion.FailedNoSamples"), 1);
    }
    else
    {
      v30 = sub_1000064D8(v324 - v333);
      objc_msgSend(v330, "setTargetProcessId:", v309);
      objc_msgSend(v330, "setSanitizePaths:", 1);
      v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v332, "objectForKeyedSubscript:", off_10007FB30));
      objc_msgSend(v330, "setEvent:", v31);

      v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v330, "targetProcess"));
      v33 = objc_msgSend(objc_alloc((Class)SASamplePrinter), "initWithSampleStore:", v330);
      objc_msgSend(v33, "filterToMachAbsTimeRangeStart:end:", v333, v324);
      v34 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v33, "options"));
      objc_msgSend(v34, "setPrintSpinSignatureStack:", 1);

      v35 = (void *)objc_claimAutoreleasedReturnValue(+[HTPrefs sharedPrefs](HTPrefs, "sharedPrefs"));
      v36 = objc_msgSend(v35, "isInternal");

      if ((v36 & 1) == 0)
      {
        v37 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v33, "options"));
        objc_msgSend(v37, "setDisplayKernelFrames:", 0);

      }
      if (((v318 ^ 1 | v14) & 1) == 0)
      {
        v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v33, "options"));
        objc_msgSend(v38, "setDisplayTrialInformation:", 0);

      }
      v39 = objc_alloc((Class)NSUUID);
      v40 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v332, "objectForKeyedSubscript:", off_10007FB50));
      v41 = objc_msgSend(v39, "initWithUUIDString:", v40);
      objc_msgSend(v33, "setIncidentUUID:", v41);

      v42 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v33, "options"));
      objc_msgSend(v42, "setForceOneBasedTimeIndexes:", 1);

      v43 = objc_alloc_init((Class)NSMutableDictionary);
      v44 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%0.0f"), *(_QWORD *)&v30));
      objc_msgSend(v43, "setObject:forKey:", v44, CFSTR("duration_ms"));

      v45 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v330, "hardwareModel"));
      if (v45)
        v325 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v330, "hardwareModel"));
      else
        v325 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "UNKNOWN"));

      objc_msgSend(v43, "setObject:forKey:", v325, CFSTR("machine_config"));
      if (v30 <= 1000.0)
        v73 = CFSTR("Regular Launch");
      else
        v73 = CFSTR("Slow Launch");
      objc_msgSend(v43, "setObject:forKey:", v73, CFSTR("bug_subtype"));
      v369 = CFSTR("HangUUID");
      v74 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v33, "incidentUUID"));
      v370 = v74;
      v319 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v370, &v369, 1));

      v75 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "name"));
      v76 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "mainBinaryPath"));
      v77 = sub_100005240(v75, 0, v76, v319);
      v334 = (void *)objc_claimAutoreleasedReturnValue(v77);

      objc_msgSend(v43, "addEntriesFromDictionary:", v334);
      v78 = (void *)objc_claimAutoreleasedReturnValue(+[SATimeRange timeRangeStart:end:](SATimeRange, "timeRangeStart:end:", v329, v328));
      objc_msgSend(v330, "setEventTimeRange:", v78);

      +[MXSampleAnalysisParser sendDiagnosticReport:forType:forSourceID:](MXSampleAnalysisParser, "sendDiagnosticReport:forType:forSourceID:", v33, 3, 3);
      v79 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", v309));
      v80 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet setWithObject:](NSMutableSet, "setWithObject:", v79));
      v81 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v33, "options"));
      objc_msgSend(v81, "setPidsToPrint:", v80);

      v82 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v33, "options"));
      objc_msgSend(v82, "setPrintHeavyStacks:", 1);

      *(_QWORD *)buf = 0;
      *(_QWORD *)&buf[8] = buf;
      *(_QWORD *)&buf[16] = 0x3032000000;
      *(_QWORD *)&buf[24] = sub_10000CB2C;
      *(_QWORD *)&v374 = sub_10000CB3C;
      *((_QWORD *)&v374 + 1) = 0;
      v83 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "name"));
      v310 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("Applaunch-%@"), v83));

      v84 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v332, "objectForKeyedSubscript:", CFSTR("Reason")));
      if (v84)
        v85 = objc_claimAutoreleasedReturnValue(objc_msgSend(v332, "objectForKeyedSubscript:", CFSTR("Reason")));
      else
        v85 = objc_claimAutoreleasedReturnValue(objc_msgSend(v332, "objectForKeyedSubscript:", off_10007FB30));
      v86 = (void *)v85;

      v87 = objc_msgSend(v86, "isEqualToString:", off_10007FB40);
      v88 = CFSTR("238");
      if (v87)
        v88 = CFSTR("248");
      v89 = v88;
      v358[0] = _NSConcreteStackBlock;
      v358[1] = 3221225472;
      v358[2] = sub_10000CB44;
      v358[3] = &unk_100075138;
      v360 = buf;
      v90 = v33;
      v363 = a4;
      v359 = v90;
      v361 = v313;
      v362 = v312;
      if (OSAWriteLogForSubmission(v89, v310, v43, 0, v358))
      {
        v91 = sub_10001D38C();
        v92 = objc_claimAutoreleasedReturnValue(v91);
        if (os_log_type_enabled(v92, OS_LOG_TYPE_INFO))
        {
          v93 = *(_QWORD *)(*(_QWORD *)&buf[8] + 40);
          *(_DWORD *)v366 = 138412290;
          *(_QWORD *)&v366[4] = v93;
          _os_log_impl((void *)&_mh_execute_header, v92, OS_LOG_TYPE_INFO, "IPS file for MetricKit App launch diagnostics written successfully at %@", v366, 0xCu);
        }

        v94 = arc4random_uniform(0x64u);
        v95 = (double)v94;
        if (v94 > 0x18)
        {
          v113 = sub_10001D38C();
          v98 = objc_claimAutoreleasedReturnValue(v113);
          if (os_log_type_enabled(v98, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)v366 = 134217984;
            *(double *)&v366[4] = v95;
            _os_log_impl((void *)&_mh_execute_header, v98, OS_LOG_TYPE_INFO, "randomFlagValue is %f, rejecting submission to DP", v366, 0xCu);
          }
        }
        else
        {
          v96 = sub_10001D38C();
          v97 = objc_claimAutoreleasedReturnValue(v96);
          if (os_log_type_enabled(v97, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)v366 = 134217984;
            *(double *)&v366[4] = v95;
            _os_log_impl((void *)&_mh_execute_header, v97, OS_LOG_TYPE_INFO, "randomFlagValue is %f will be submitting the tailspin to DP", v366, 0xCu);
          }

          v98 = objc_alloc_init((Class)NSMutableDictionary);
          v99 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v43, "valueForKey:", CFSTR("duration_ms")));
          -[NSObject setObject:forKeyedSubscript:](v98, "setObject:forKeyedSubscript:", v99, CFSTR("observedLatencyInMs"));

          v100 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v90, "incidentUUID"));
          if (v100)
          {
            v101 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v90, "incidentUUID"));
            v102 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v101, "UUIDString"));
            -[NSObject setObject:forKeyedSubscript:](v98, "setObject:forKeyedSubscript:", v102, CFSTR("UUID"));

          }
          v103 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v43, "valueForKey:", CFSTR("bug_subtype")));
          -[NSObject setObject:forKeyedSubscript:](v98, "setObject:forKeyedSubscript:", v103, CFSTR("reason"));

          v104 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v43, "valueForKey:", CFSTR("app_version")));
          -[NSObject setObject:forKeyedSubscript:](v98, "setObject:forKeyedSubscript:", v104, CFSTR("appVersion"));

          v105 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "name"));
          -[NSObject setObject:forKeyedSubscript:](v98, "setObject:forKeyedSubscript:", v105, CFSTR("appName"));

          v106 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "mainBinaryPath"));
          if (v106)
          {
            v107 = objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "mainBinaryPath"));
            -[NSObject setObject:forKeyedSubscript:](v98, "setObject:forKeyedSubscript:", v107, CFSTR("processPath"));
          }
          else
          {
            v130 = sub_10001D38C();
            v107 = objc_claimAutoreleasedReturnValue(v130);
            if (os_log_type_enabled(v107, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)v366 = 0;
              _os_log_impl((void *)&_mh_execute_header, v107, OS_LOG_TYPE_DEFAULT, "mainBinaryPath field was nil in SATask object", v366, 2u);
            }
          }

          v131 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "bundleIdentifier"));
          if (v131)
          {
            v132 = objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "bundleIdentifier"));
            -[NSObject setObject:forKeyedSubscript:](v98, "setObject:forKeyedSubscript:", v132, CFSTR("bundleID"));
          }
          else
          {
            v133 = sub_10001D38C();
            v132 = objc_claimAutoreleasedReturnValue(v133);
            if (os_log_type_enabled(v132, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)v366 = 0;
              _os_log_impl((void *)&_mh_execute_header, v132, OS_LOG_TYPE_DEFAULT, "bundleIdentifier field was nil in SATask object", v366, 2u);
            }
          }

          v134 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v334, "objectForKeyedSubscript:", CFSTR("is_first_party")));
          if (v134)
          {
            v135 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v334, "objectForKeyedSubscript:", CFSTR("is_first_party")));
            v136 = objc_msgSend(v135, "BOOLValue");

          }
          else
          {
            v136 = 1;
          }

          sub_10000CCE8(v136, 0, 0, v323, v98);
        }

      }
      else if (a4)
      {
        sub_10000C94C(0, 9uLL, v313, v312);
      }

      _Block_object_dispose(buf, 8);
    }
LABEL_119:
    v137 = 0;
    goto LABEL_120;
  }
  if (objc_msgSend(v327, "containsString:", CFSTR("Fence-hang")))
  {
    v46 = sub_10001D38C();
    v47 = objc_claimAutoreleasedReturnValue(v46);
    if (os_log_type_enabled(v47, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_INFO, "Analyzing a Fence-hang, going to find process slowest at fence handling", buf, 2u);
    }

    v48 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v332, "objectForKeyedSubscript:", CFSTR("FenceInfoUpdated")));
    v49 = v48;
    if (v48)
    {
      v50 = objc_msgSend(v48, "BOOLValue");
      v51 = sub_10001D38C();
      v52 = objc_claimAutoreleasedReturnValue(v51);
      v53 = os_log_type_enabled(v52, OS_LOG_TYPE_DEFAULT);
      if (v50)
      {
        if (v53)
        {
          v54 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v330, "reason"));
          *(_DWORD *)buf = 138412546;
          *(_QWORD *)&buf[4] = v322;
          *(_WORD *)&buf[12] = 2112;
          *(_QWORD *)&buf[14] = v54;
          _os_log_impl((void *)&_mh_execute_header, v52, OS_LOG_TYPE_DEFAULT, "Found slowest fence client: %@ reason: %@", buf, 0x16u);

        }
        if (v309 == -1)
        {
          v55 = sub_10001D38C();
          v56 = objc_claimAutoreleasedReturnValue(v55);
          if (os_log_type_enabled(v56, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)buf = 0;
            _os_log_impl((void *)&_mh_execute_header, v56, OS_LOG_TYPE_DEFAULT, "Found slowest fence client: ktraca data shows pid -1", buf, 2u);
          }

          j__ADClientAddValueForScalarKey(CFSTR("com.apple.hangtracer.HTLogsConversion.FencePidUnknown"), 1);
        }

        goto LABEL_36;
      }
      if (v53)
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v52, OS_LOG_TYPE_DEFAULT, "Unable to find slowest fence client from ktrace signposts in tailspin", buf, 2u);
      }
    }
    else
    {
      v72 = sub_10001D38C();
      v52 = objc_claimAutoreleasedReturnValue(v72);
      if (os_log_type_enabled(v52, OS_LOG_TYPE_FAULT))
        sub_1000378C4();
    }

    j__ADClientAddValueForScalarKey(CFSTR("com.apple.hangtracer.HTLogsConversion.NoFenceFound"), 1);
    v109 = sub_10001D38C();
    v110 = objc_claimAutoreleasedReturnValue(v109);
    v111 = v110;
    if (v20 == (id)0x7FFFFFFFFFFFFFFFLL || v21 == (id)0x7FFFFFFFFFFFFFFFLL)
    {
      if (os_log_type_enabled(v110, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v111, OS_LOG_TYPE_DEFAULT, "Unable to find slowest fence client: no ktrace data during time period", buf, 2u);
      }
      v112 = CFSTR("com.apple.hangtracer.HTLogsConversion.NoFenceFound.EmptyTrace");
    }
    else
    {
      if (os_log_type_enabled(v110, OS_LOG_TYPE_FAULT))
        sub_100037898();
      v112 = CFSTR("com.apple.hangtracer.HTLogsConversion.NoFenceFound.GoodTrace");
    }

    j__ADClientAddValueForScalarKey(v112, 1);
    if (a4)
      sub_10000C94C(0, 5uLL, v10, v312);

    goto LABEL_119;
  }
LABEL_36:
  if (v20 == (id)0x7FFFFFFFFFFFFFFFLL || v21 == (id)0x7FFFFFFFFFFFFFFFLL)
  {
    if (a4)
      sub_10000C94C(0, 6uLL, v10, v312);
    v70 = sub_10001D38C();
    v71 = objc_claimAutoreleasedReturnValue(v70);
    if (os_log_type_enabled(v71, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v71, OS_LOG_TYPE_DEFAULT, "Sample store contains no samples for the hang interval, ignoring!", buf, 2u);
    }

    j__ADClientAddValueForScalarKey(CFSTR("com.apple.hangtracer.HTLogsConversion.FailedNoSamples"), 1);
    goto LABEL_119;
  }
  if (objc_msgSend(v327, "containsString:", CFSTR("Fence-hang")))
  {
    sub_10001DD30(v306, CFSTR("hangtracer.process_path"), v322);
    v57 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v317, "objectForKeyedSubscript:", kCRProblemReportBundleIDKey));
    sub_10001DD30(v306, CFSTR("hangtracer.bundle_id"), v57);

    v58 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%f"), *(_QWORD *)&v15));
    sub_10001DD30(v306, CFSTR("hangtracer.duration"), v58);

  }
  if (v14)
  {
    v59 = (void *)objc_claimAutoreleasedReturnValue(+[HTPrefs sharedPrefs](HTPrefs, "sharedPrefs"));
    v60 = v15 < (double)(unint64_t)objc_msgSend(v59, "runloopLongHangDurationThresholdMSec");

    v61 = (void *)objc_claimAutoreleasedReturnValue(+[HTPrefs sharedPrefs](HTPrefs, "sharedPrefs"));
    v62 = v61;
    if (v60)
    {
      v63 = v15 < (double)(unint64_t)objc_msgSend(v61, "runloopHangDurationThresholdMSec");

      if (v63)
      {
        v64 = sub_10001D38C();
        v65 = objc_claimAutoreleasedReturnValue(v64);
        v66 = 0.25;
        if (os_log_type_enabled(v65, OS_LOG_TYPE_DEFAULT))
        {
          v67 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v323, "lastPathComponent"));
          *(_DWORD *)buf = 138413058;
          *(_QWORD *)&buf[4] = v67;
          *(_WORD *)&buf[12] = 2048;
          *(double *)&buf[14] = v15;
          *(_WORD *)&buf[22] = 2048;
          *(_QWORD *)&buf[24] = v312;
          LOWORD(v374) = 2048;
          *(_QWORD *)((char *)&v374 + 2) = 0x3FD0000000000000;
          _os_log_impl((void *)&_mh_execute_header, v65, OS_LOG_TYPE_DEFAULT, "Post-Processing %@: hangDuration=%fms -> categorized as Micro Hang and bug_type=%lu and reportThreshold=%f", buf, 0x2Au);

        }
      }
      else
      {
        v142 = (void *)objc_claimAutoreleasedReturnValue(+[HTPrefs sharedPrefs](HTPrefs, "sharedPrefs"));
        v143 = objc_msgSend(v142, "runloopHangDurationThresholdMSec");

        v144 = sub_10001D38C();
        v65 = objc_claimAutoreleasedReturnValue(v144);
        v66 = (double)(unint64_t)v143 / 1000.0;
        if (os_log_type_enabled(v65, OS_LOG_TYPE_DEFAULT))
        {
          v145 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v323, "lastPathComponent"));
          *(_DWORD *)buf = 138413058;
          *(_QWORD *)&buf[4] = v145;
          *(_WORD *)&buf[12] = 2048;
          *(double *)&buf[14] = v15;
          *(_WORD *)&buf[22] = 2048;
          *(_QWORD *)&buf[24] = v312;
          LOWORD(v374) = 2048;
          *(double *)((char *)&v374 + 2) = v66;
          _os_log_impl((void *)&_mh_execute_header, v65, OS_LOG_TYPE_DEFAULT, "Post-Processing %@: hangDuration=%fms -> categorized as Short Hang and bug_type=%lu and reportThreshold=%f", buf, 0x2Au);

        }
      }
    }
    else
    {
      v127 = objc_msgSend(v61, "runloopLongHangDurationThresholdMSec");

      v128 = sub_10001D38C();
      v65 = objc_claimAutoreleasedReturnValue(v128);
      v66 = (double)(unint64_t)v127 / 1000.0;
      if (os_log_type_enabled(v65, OS_LOG_TYPE_DEFAULT))
      {
        v129 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v323, "lastPathComponent"));
        *(_DWORD *)buf = 138413058;
        *(_QWORD *)&buf[4] = v129;
        *(_WORD *)&buf[12] = 2048;
        *(double *)&buf[14] = v15;
        *(_WORD *)&buf[22] = 2048;
        *(_QWORD *)&buf[24] = v312;
        LOWORD(v374) = 2048;
        *(double *)((char *)&v374 + 2) = v66;
        _os_log_impl((void *)&_mh_execute_header, v65, OS_LOG_TYPE_DEFAULT, "Post-Processing %@: hangDuration=%fms -> categorized as Long Hang and bug_type=%lu and reportThreshold=%f", buf, 0x2Au);

      }
    }
  }
  else
  {
    if (DiagnosticLogSubmissionEnabled())
      v108 = AppAnalyticsEnabled();
    else
      v108 = 0;
    if (((+[MXSourceUtilities anyClientsAvailable](MXSourceUtilities, "anyClientsAvailable") | v108) & 1) == 0)
    {
      v114 = (void *)objc_claimAutoreleasedReturnValue(+[HTPrefs sharedPrefs](HTPrefs, "sharedPrefs"));
      v115 = objc_msgSend(v114, "thirdPartyDevHangHUDEnabled");

      if ((v115 & 1) == 0)
      {
        v139 = sub_10001D38C();
        v140 = objc_claimAutoreleasedReturnValue(v139);
        if (os_log_type_enabled(v140, OS_LOG_TYPE_DEFAULT))
        {
          v141 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v323, "lastPathComponent"));
          *(_DWORD *)buf = 138412290;
          *(_QWORD *)&buf[4] = v141;
          _os_log_impl((void *)&_mh_execute_header, v140, OS_LOG_TYPE_DEFAULT, "Post-Processing %@: Hang in Third Party App, but Sharing with App Developers is not enabled -> will not generate log and will delete tailspin", buf, 0xCu);

        }
        j__ADClientAddValueForScalarKey(CFSTR("com.apple.hangtracer.HTLogsConversion.DeletedDueToAppAnalyticsDisabled"), 1);
        if (a4)
          sub_10000C94C(0, 7uLL, v10, v312);
        goto LABEL_119;
      }
    }
    if (objc_msgSend(v327, "containsString:", CFSTR("Fence-hang")))
    {
      v116 = (void *)objc_claimAutoreleasedReturnValue(+[HTPrefs sharedPrefs](HTPrefs, "sharedPrefs"));
      v117 = v15 < (double)(unint64_t)objc_msgSend(v116, "runloopHangThirdPartyDurationThresholdMSec");

      if (v117)
      {
        v118 = sub_10001D38C();
        v119 = objc_claimAutoreleasedReturnValue(v118);
        if (os_log_type_enabled(v119, OS_LOG_TYPE_DEFAULT))
        {
          v120 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v323, "lastPathComponent"));
          v121 = (void *)objc_claimAutoreleasedReturnValue(+[HTPrefs sharedPrefs](HTPrefs, "sharedPrefs"));
          v122 = objc_msgSend(v121, "runloopHangThirdPartyDurationThresholdMSec");
          *(_DWORD *)buf = 138412802;
          *(_QWORD *)&buf[4] = v120;
          *(_WORD *)&buf[12] = 2048;
          *(double *)&buf[14] = v15;
          *(_WORD *)&buf[22] = 2048;
          *(_QWORD *)&buf[24] = v122;
          _os_log_impl((void *)&_mh_execute_header, v119, OS_LOG_TYPE_DEFAULT, "Post-Processing %@: Hang in Third Party App, but hang duration blamed on app (%f ms) is below the 3rd party hang log threshold (%llu ms) -> will not generate log and will delete tailspin", buf, 0x20u);

        }
        j__ADClientAddValueForScalarKey(CFSTR("com.apple.hangtracer.HTLogsConversion.DeletedDueTo3rdPartyFenceBelowHangThreshold"), 1);
        if (a4)
          sub_10000C94C(0, 8uLL, v10, v312);
        goto LABEL_119;
      }
    }
    v123 = (void *)objc_claimAutoreleasedReturnValue(+[HTPrefs sharedPrefs](HTPrefs, "sharedPrefs"));
    v124 = objc_msgSend(v123, "runloopHangThirdPartyDurationThresholdMSec");

    v125 = sub_10001D38C();
    v65 = objc_claimAutoreleasedReturnValue(v125);
    v66 = (double)(unint64_t)v124 / 1000.0;
    if (os_log_type_enabled(v65, OS_LOG_TYPE_DEFAULT))
    {
      v126 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v323, "lastPathComponent"));
      *(_DWORD *)buf = 138413058;
      *(_QWORD *)&buf[4] = v126;
      *(_WORD *)&buf[12] = 2048;
      *(double *)&buf[14] = v15;
      *(_WORD *)&buf[22] = 2048;
      *(_QWORD *)&buf[24] = v312;
      LOWORD(v374) = 2048;
      *(double *)((char *)&v374 + 2) = v66;
      _os_log_impl((void *)&_mh_execute_header, v65, OS_LOG_TYPE_DEFAULT, "Post-Processing %@: hangDuration=%fms -> categorized as Third Party Hang and bug_type=%lu and reportThreshold=%f", buf, 0x2Au);

    }
  }

  objc_msgSend(v330, "setTargetProcessId:", v309);
  objc_msgSend(v330, "setSanitizePaths:", 1);
  objc_msgSend(v330, "setReportTimeThreshold:", v66);
  v146 = sub_100006030(v10);
  v147 = (void *)objc_claimAutoreleasedReturnValue(v146);
  objc_msgSend(v330, "setEvent:", v147);

  v148 = (void *)objc_claimAutoreleasedReturnValue(+[SATimeRange timeRangeStart:end:](SATimeRange, "timeRangeStart:end:", v329, v328));
  objc_msgSend(v330, "setEventTimeRange:", v148);

  v356 = 0u;
  v357 = 0u;
  v354 = 0u;
  v355 = 0u;
  v149 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v330, "tasksByPid"));
  v150 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", v309));
  v151 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v149, "objectForKeyedSubscript:", v150));

  v152 = objc_msgSend(v151, "countByEnumeratingWithState:objects:count:", &v354, v368, 16);
  if (!v152)
  {

LABEL_141:
    v164 = sub_10001D38C();
    v165 = objc_claimAutoreleasedReturnValue(v164);
    if (os_log_type_enabled(v165, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v165, OS_LOG_TYPE_DEFAULT, "Hang App Main Thread is not found", buf, 2u);
    }

    if (a4)
      sub_10000C94C(0, 0xCuLL, v10, v312);
    goto LABEL_119;
  }
  v153 = 0;
  v154 = *(_QWORD *)v355;
  do
  {
    for (i = 0; i != v152; i = (char *)i + 1)
    {
      if (*(_QWORD *)v355 != v154)
        objc_enumerationMutation(v151);
      v156 = *(void **)(*((_QWORD *)&v354 + 1) + 8 * (_QWORD)i);
      v157 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v156, "mainThread"));

      if (v157)
      {
        v158 = objc_claimAutoreleasedReturnValue(objc_msgSend(v156, "mainThread"));

        v153 = (void *)v158;
      }
    }
    v152 = objc_msgSend(v151, "countByEnumeratingWithState:objects:count:", &v354, v368, 16);
  }
  while (v152);

  if (!v153)
    goto LABEL_141;
  v159 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v153, "lastThreadStateOnOrBeforeTime:sampleIndex:", v328, 0x7FFFFFFFFFFFFFFFLL));
  v160 = objc_msgSend(v159, "cpuTimeNs");
  v161 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v153, "firstThreadStateOnOrAfterTime:sampleIndex:", v329, 0x7FFFFFFFFFFFFFFFLL));
  v162 = objc_msgSend(v161, "cpuTimeNs");

  v163 = v15;
  if ((float)((float)(unint64_t)(v160 - v162) / (float)(v163 * 1000000.0)) >= 0.5)
  {
    v304 = 0;
    v305 = 1;
  }
  else
  {
    v304 = objc_alloc_init(HRMakeRunnableData);
    if ((id)-[HRMakeRunnableData findBlockingThreadForTailspin:sampleStore:mainThread:hangStartTime:hangEndTime:hangDuration:](v304, "findBlockingThreadForTailspin:sampleStore:mainThread:hangStartTime:hangEndTime:hangDuration:", v323, v330, v153, v333, v324, (int)v15) == (id)5)v305 = 5;
    else
      v305 = -[HRMakeRunnableData findBlockingThreadFromSampleStore:mainThread:hangStartTime:hangEndTime:](v304, "findBlockingThreadFromSampleStore:mainThread:hangStartTime:hangEndTime:", v330, v153, v333, v324);
  }
  v166 = sub_10001D38C();
  v167 = objc_claimAutoreleasedReturnValue(v166);
  if (os_log_type_enabled(v167, OS_LOG_TYPE_DEFAULT))
  {
    v168 = sub_1000129AC(v305);
    v169 = (id)objc_claimAutoreleasedReturnValue(v168);
    if (v305 == 5)
      v170 = (__CFString *)objc_claimAutoreleasedReturnValue(-[HRMakeRunnableData blockingThreadInfo](v304, "blockingThreadInfo"));
    else
      v170 = &stru_100075D60;
    *(_DWORD *)buf = 138412546;
    *(_QWORD *)&buf[4] = v169;
    *(_WORD *)&buf[12] = 2112;
    *(_QWORD *)&buf[14] = v170;
    _os_log_impl((void *)&_mh_execute_header, v167, OS_LOG_TYPE_DEFAULT, "Blocking Thread Search Status: %@ %@", buf, 0x16u);
    if (v305 == 5)

  }
  v352 = 0u;
  v353 = 0u;
  v350 = 0u;
  v351 = 0u;
  v171 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v330, "hidEvents"));
  v172 = objc_msgSend(v171, "countByEnumeratingWithState:objects:count:", &v350, v367, 16);
  if (!v172)
  {

    goto LABEL_168;
  }
  v173 = 0;
  v174 = *(_QWORD *)v351;
  do
  {
    for (j = 0; j != v172; j = (char *)j + 1)
    {
      if (*(_QWORD *)v351 != v174)
        objc_enumerationMutation(v171);
      v176 = *(void **)(*((_QWORD *)&v350 + 1) + 8 * (_QWORD)j);
      v177 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v176, "hidEventTimestamp"));
      if (objc_msgSend(v177, "machAbsTime") <= v333)
      {
        v178 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v176, "hidEventTimestamp"));
        v179 = objc_msgSend(v178, "machAbsTime") > v173;

        if (!v179)
          continue;
        v177 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v176, "hidEventTimestamp"));
        v173 = objc_msgSend(v177, "machAbsTime");
      }

    }
    v172 = objc_msgSend(v171, "countByEnumeratingWithState:objects:count:", &v350, v367, 16);
  }
  while (v172);

  if (v173)
    objc_msgSend(v330, "setTargetHIDEventMachAbs:", v173);
LABEL_168:
  v180 = objc_msgSend(objc_alloc((Class)SASamplePrinter), "initWithSampleStore:", v330);
  objc_msgSend(v180, "filterToMachAbsTimeRangeStart:end:", v333, v324);
  v181 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v180, "options"));
  objc_msgSend(v181, "setPrintHeavyStacks:", 1);

  v182 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v180, "options"));
  objc_msgSend(v182, "setPrintSpinSignatureStack:", 1);

  v183 = objc_alloc((Class)NSUUID);
  v184 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v317, "objectForKeyedSubscript:", kOSAIPSHeaderIncidentIDKey));
  v185 = objc_msgSend(v183, "initWithUUIDString:", v184);
  objc_msgSend(v180, "setIncidentUUID:", v185);

  v186 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v180, "options"));
  objc_msgSend(v186, "setForceOneBasedTimeIndexes:", 1);

  if (((v318 ^ 1 | v307) & 1) == 0)
  {
    v187 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v180, "options"));
    objc_msgSend(v187, "setDisplayTrialInformation:", 0);

  }
  v320 = objc_alloc_init((Class)NSMutableDictionary);
  v188 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%0.0f"), *(_QWORD *)&v15));
  objc_msgSend(v320, "setObject:forKey:", v188, CFSTR("duration_ms"));

  v189 = (void *)objc_claimAutoreleasedReturnValue(+[HTPrefs sharedPrefs](HTPrefs, "sharedPrefs"));
  objc_msgSend(v189, "runloopHangPercentHeavyLogs");
  v191 = v190;
  v192 = (void *)objc_claimAutoreleasedReturnValue(+[HTPrefs sharedPrefs](HTPrefs, "sharedPrefs"));
  v194 = v15 >= (double)(unint64_t)objc_msgSend(v192, "runloopHangTimeoutDurationMSec") || (_DWORD)v313 == 2;

  if (v194)
  {
    v195 = sub_10001D38C();
    v196 = objc_claimAutoreleasedReturnValue(v195);
    if (os_log_type_enabled(v196, OS_LOG_TYPE_DEBUG))
      sub_100037978(v313, v196, v15);
    goto LABEL_182;
  }
  if ((_DWORD)v313 == 10)
  {
    v197 = sub_10001D38C();
    v196 = objc_claimAutoreleasedReturnValue(v197);
    if (os_log_type_enabled(v196, OS_LOG_TYPE_DEBUG))
      sub_100037A64();
    goto LABEL_182;
  }
  if (v191 >= 100.0)
    goto LABEL_183;
  if (v191 <= 0.0)
    goto LABEL_211;
  v222 = (double)arc4random_uniform(0x7FFFFFFFu) * 100.0 / 2147483650.0;
  v223 = sub_10001D38C();
  v196 = objc_claimAutoreleasedReturnValue(v223);
  v224 = os_log_type_enabled(v196, OS_LOG_TYPE_INFO);
  if (v222 <= v191)
  {
    if (v224)
    {
      *(_DWORD *)buf = 134218240;
      *(double *)&buf[4] = v222;
      *(_WORD *)&buf[12] = 2048;
      *(double *)&buf[14] = v191;
      _os_log_impl((void *)&_mh_execute_header, v196, OS_LOG_TYPE_INFO, "Should capture heavy log due to roll of %.4f (pref is %.4f)", buf, 0x16u);
    }
LABEL_182:

LABEL_183:
    v198 = CFSTR("heavy");
    goto LABEL_184;
  }
  if (v224)
  {
    *(_DWORD *)buf = 134218240;
    *(double *)&buf[4] = v222;
    *(_WORD *)&buf[12] = 2048;
    *(double *)&buf[14] = v191;
    _os_log_impl((void *)&_mh_execute_header, v196, OS_LOG_TYPE_INFO, "Should capture lite log due to roll of %.4f (pref is %.4f)", buf, 0x16u);
  }

LABEL_211:
  if (v305 == 5)
  {
    v225 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", v309));
    v189 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet setWithObject:](NSMutableSet, "setWithObject:", v225));

    v226 = (void *)objc_claimAutoreleasedReturnValue(-[HRMakeRunnableData topBlockingPid](v304, "topBlockingPid"));
    objc_msgSend(v189, "addObject:", v226);

    v227 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v180, "options"));
    objc_msgSend(v227, "setPidsToPrint:", v189);

    v228 = objc_msgSend((id)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array")), "init");
    v229 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", objc_msgSend(v153, "threadId")));
    objc_msgSend(v228, "addObject:", v229);

    v230 = (void *)objc_claimAutoreleasedReturnValue(-[HRMakeRunnableData allBlockingThreadsArray](v304, "allBlockingThreadsArray"));
    objc_msgSend(v228, "addObjectsFromArray:", v230);

    v231 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](NSSet, "setWithArray:", v228));
    v232 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v180, "options"));
    objc_msgSend(v232, "setTidsToPrint:", v231);

  }
  else
  {
    v189 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v180, "options"));
    objc_msgSend(v189, "setPrintTargetThreadOnly:", 1);
  }
  v198 = CFSTR("light");
LABEL_184:

  objc_msgSend(v320, "setObject:forKey:", v198, CFSTR("bug_subtype"));
  if (v316)
    objc_msgSend(v320, "setObject:forKey:", v316, CFSTR("ht_enablement_prefix"));
  v311 = objc_alloc_init((Class)NSMutableData);
  objc_msgSend(v180, "printToMutableData:", v311);
  +[MXSampleAnalysisParser sendDiagnosticReport:forType:forSourceID:](MXSampleAnalysisParser, "sendDiagnosticReport:forType:forSourceID:", v180, 2, 3);
  v199 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v330, "startTime"));
  objc_msgSend(v199, "wallTime");
  v201 = v200;

  v202 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v330, "targetProcess"));
  v203 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v202, "bundleIdentifier"));
  v204 = v203;
  if (v203)
  {
    v308 = v203;
  }
  else
  {
    v205 = sub_100005A8C(v322);
    v308 = (id)objc_claimAutoreleasedReturnValue(v205);

  }
  v331 = objc_alloc_init((Class)NSMutableDictionary);
  if (v316)
    objc_msgSend(v331, "setObject:forKeyedSubscript:", v316, CFSTR("htEnablementPrefix"));
  v206 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v332, "objectForKeyedSubscript:", CFSTR("HangUUID")));
  v207 = v206 == 0;

  if (v207)
  {
    v208 = sub_10001D38C();
    v209 = objc_claimAutoreleasedReturnValue(v208);
    if (os_log_type_enabled(v209, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v209, OS_LOG_TYPE_DEFAULT, "Hang UUID is missing", buf, 2u);
    }

    objc_msgSend(v331, "setObject:forKeyedSubscript:", &__kCFBooleanTrue, CFSTR("HangUUIDMissing"));
  }
  v210 = (void *)objc_claimAutoreleasedReturnValue(+[HTPrefs sharedPrefs](HTPrefs, "sharedPrefs"));
  v211 = objc_msgSend(v210, "shouldIncludeDisplayData");

  if (v211)
  {
    v212 = sub_10001D38C();
    v213 = objc_claimAutoreleasedReturnValue(v212);
    if (os_log_type_enabled(v213, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v213, OS_LOG_TYPE_INFO, "Adding display info to spindump", buf, 2u);
    }

    v214 = (void *)objc_claimAutoreleasedReturnValue(+[HTDisplayParser displayInfoForSpindump:startAbsoluteTime:endAbsoluteTime:](HTDisplayParser, "displayInfoForSpindump:startAbsoluteTime:endAbsoluteTime:", v332, v333, v324));
    objc_msgSend(v331, "addEntriesFromDictionary:", v214);

  }
  v215 = (void *)objc_claimAutoreleasedReturnValue(+[HTPrefs sharedPrefs](HTPrefs, "sharedPrefs"));
  v216 = objc_msgSend(v215, "shouldIncludeNetworkState");

  if (v216)
  {
    v217 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v332, "objectForKeyedSubscript:", CFSTR("NetworkState")));
    if (v217
      && (v218 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null")),
          v219 = objc_msgSend(v217, "isEqual:", v218),
          v218,
          (v219 & 1) == 0))
    {
      v233 = sub_10001D38C();
      v234 = objc_claimAutoreleasedReturnValue(v233);
      if (os_log_type_enabled(v234, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v234, OS_LOG_TYPE_INFO, "Adding network state to spindump", buf, 2u);
      }

      objc_msgSend(v331, "addEntriesFromDictionary:", v217);
    }
    else
    {
      v220 = sub_10001D38C();
      v221 = objc_claimAutoreleasedReturnValue(v220);
      if (os_log_type_enabled(v221, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v221, OS_LOG_TYPE_INFO, "No network state for spindump", buf, 2u);
      }

    }
  }
  v235 = (void *)objc_claimAutoreleasedReturnValue(+[HTPrefs sharedPrefs](HTPrefs, "sharedPrefs"));
  v236 = objc_msgSend(v235, "shouldIncludeDiskInfo");

  if (v236)
  {
    existing = 0;
    v237 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
    v238 = IOServiceMatching("AppleAPFSVolume");
    if (v238)
    {
      IOServiceGetMatchingServices(kIOMainPortDefault, v238, &existing);
      for (k = IOIteratorNext(existing); k; k = IOIteratorNext(existing))
      {
        v379 = 0u;
        v378 = 0u;
        v377 = 0u;
        v375 = 0u;
        v376 = 0u;
        v374 = 0u;
        memset(buf, 0, sizeof(buf));
        Name = IORegistryEntryGetName(k, (char *)buf);
        if (Name)
        {
          v241 = sub_10001D38C();
          v242 = objc_claimAutoreleasedReturnValue(v241);
          if (os_log_type_enabled(v242, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)v366 = 67109376;
            *(_DWORD *)&v366[4] = Name;
            *(_WORD *)&v366[8] = 1024;
            *(_DWORD *)&v366[10] = k;
            _os_log_impl((void *)&_mh_execute_header, v242, OS_LOG_TYPE_DEFAULT, "Warn: 0x%08x: Could not get name for io_registry_entry_t 0x%x\n", v366, 0xEu);
          }

          strcpy((char *)buf, "UNKNOWN");
        }
        properties = 0;
        v243 = IORegistryEntryCreateCFProperties(k, &properties, kCFAllocatorDefault, 0);
        if (v243)
        {
          v244 = sub_10001D38C();
          v245 = objc_claimAutoreleasedReturnValue(v244);
          if (os_log_type_enabled(v245, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)v366 = 67109378;
            *(_DWORD *)&v366[4] = v243;
            *(_WORD *)&v366[8] = 2080;
            *(_QWORD *)&v366[10] = buf;
            _os_log_impl((void *)&_mh_execute_header, v245, OS_LOG_TYPE_DEFAULT, "Error: 0x%08x: Could not get properties for io_registry_entry_t %s\n", v366, 0x12u);
          }
        }
        else
        {
          v246 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(-[__CFDictionary objectForKey:](properties, "objectForKey:", CFSTR("BSD Name"))));
          snprintf((char *)buf, 0x80uLL, "%s_%s", (const char *)buf, (const char *)objc_msgSend(v246, "UTF8String"));

          v371[0] = CFSTR("BSD Name");
          v247 = (void *)objc_claimAutoreleasedReturnValue(-[__CFDictionary objectForKey:](properties, "objectForKey:", CFSTR("BSD Name")));
          v372[0] = v247;
          v371[1] = CFSTR("FormattedBy");
          v248 = (void *)objc_claimAutoreleasedReturnValue(-[__CFDictionary objectForKey:](properties, "objectForKey:", CFSTR("FormattedBy")));
          v372[1] = v248;
          v245 = objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v372, v371, 2));

          v249 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", buf));
          if (objc_claimAutoreleasedReturnValue(objc_msgSend(v237, "objectForKeyedSubscript:", v249)))
            sub_100037950();

          v250 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", buf));
          objc_msgSend(v237, "setObject:forKeyedSubscript:", v245, v250);

          CFRelease(properties);
        }

      }
      IOObjectRelease(existing);
    }
    else
    {
      v251 = sub_10001D38C();
      v252 = objc_claimAutoreleasedReturnValue(v251);
      if (os_log_type_enabled(v252, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136315138;
        *(_QWORD *)&buf[4] = "AppleAPFSVolume";
        _os_log_impl((void *)&_mh_execute_header, v252, OS_LOG_TYPE_DEFAULT, "Error: Could not create matching dictionary for %s\n", buf, 0xCu);
      }

    }
    *(_QWORD *)v366 = CFSTR("AppleAPFSVolume");
    *(_QWORD *)buf = v237;
    v253 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", buf, v366, 1));
    v254 = sub_10001D38C();
    v255 = objc_claimAutoreleasedReturnValue(v254);
    if (os_log_type_enabled(v255, OS_LOG_TYPE_DEBUG))
      sub_1000378F0();

    objc_msgSend(v331, "addEntriesFromDictionary:", v253);
  }
  v256 = (void *)objc_claimAutoreleasedReturnValue(+[HTPrefs sharedPrefs](HTPrefs, "sharedPrefs"));
  v257 = objc_msgSend(v256, "shouldIncludeDiskInfo");

  if (v257)
  {
    v258 = sub_100016AD0();
    v259 = (void *)objc_claimAutoreleasedReturnValue(v258);
    objc_msgSend(v331, "addEntriesFromDictionary:", v259);

    v260 = sub_100016AE4();
    v261 = (void *)objc_claimAutoreleasedReturnValue(v260);
    objc_msgSend(v331, "addEntriesFromDictionary:", v261);

  }
  v262 = sub_1000129AC(v305);
  v263 = (void *)objc_claimAutoreleasedReturnValue(v262);
  objc_msgSend(v331, "setObject:forKeyedSubscript:", v263, CFSTR("blockingThreadStatus"));

  if (v305 == 5)
  {
    v264 = (void *)objc_claimAutoreleasedReturnValue(-[HRMakeRunnableData blockingThreadInfo](v304, "blockingThreadInfo"));
    v265 = sub_10000D4B0(v264);
    v266 = (void *)objc_claimAutoreleasedReturnValue(v265);
    objc_msgSend(v331, "setObject:forKeyedSubscript:", v266, CFSTR("blockingThreadInfo"));

  }
  v267 = (void *)objc_claimAutoreleasedReturnValue(+[HTPrefs sharedPrefs](HTPrefs, "sharedPrefs"));
  if (v15 < (double)(unint64_t)objc_msgSend(v267, "springBoardHangIORegGPUDumpTimeoutMSec"))
  {
LABEL_249:

  }
  else
  {
    v268 = objc_msgSend(v314, "isEqualToString:", CFSTR("SpringBoard"));

    if (v268)
    {
      v269 = sub_10001D38C();
      v270 = objc_claimAutoreleasedReturnValue(v269);
      if (os_log_type_enabled(v270, OS_LOG_TYPE_INFO))
      {
        v271 = (void *)objc_claimAutoreleasedReturnValue(+[HTPrefs sharedPrefs](HTPrefs, "sharedPrefs"));
        v272 = objc_msgSend(v271, "springBoardHangIORegGPUDumpTimeoutMSec");
        *(_DWORD *)buf = 138543874;
        *(_QWORD *)&buf[4] = v314;
        *(_WORD *)&buf[12] = 2048;
        *(double *)&buf[14] = v15;
        *(_WORD *)&buf[22] = 2048;
        *(_QWORD *)&buf[24] = v272;
        _os_log_impl((void *)&_mh_execute_header, v270, OS_LOG_TYPE_INFO, "Process:%{public}@ hang duration %0.0fms is greater than %llums, fetching IOReg GPU AGX SchedulerState info", buf, 0x20u);

      }
      v273 = sub_10001E50C(v323);
      v267 = (void *)objc_claimAutoreleasedReturnValue(v273);
      if (v267)
      {
        v274 = sub_10001D38C();
        v275 = objc_claimAutoreleasedReturnValue(v274);
        if (os_log_type_enabled(v275, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v275, OS_LOG_TYPE_INFO, "Adding IOReg GPU AGX SchedulerState info to spindump", buf, 2u);
        }

        objc_msgSend(v331, "addEntriesFromDictionary:", v267);
      }
      goto LABEL_249;
    }
  }
  objc_msgSend(v331, "setObject:forKeyedSubscript:", v326, CFSTR("UserAction"));
  v276 = sub_10001CCC0((uint64_t)v333, (uint64_t)v324);
  v277 = (void *)objc_claimAutoreleasedReturnValue(v276);
  v278 = v277;
  if (v277)
  {
    v279 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v277, "objectForKeyedSubscript:", CFSTR("hangHistoryCount")));
    v280 = (int)objc_msgSend(v279, "intValue") > 1;

    if (v280)
      objc_msgSend(v331, "setObject:forKeyedSubscript:", v278, CFSTR("hangHistoryData"));
  }
  v281 = (void *)objc_claimAutoreleasedReturnValue(+[HTProcessLaunchExitRecord getProcessExitsAndLaunchesDuringHang:endTime:](HTProcessLaunchExitRecord, "getProcessExitsAndLaunchesDuringHang:endTime:", v333, v324));
  if (v281)
    objc_msgSend(v331, "setObject:forKeyedSubscript:", v281, CFSTR("processExits"));
  v282 = (void *)objc_claimAutoreleasedReturnValue(+[NSJSONSerialization dataWithJSONObject:options:error:](NSJSONSerialization, "dataWithJSONObject:options:error:", v331, 1, 0));
  v283 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@-%@"), v327, v314));
  objc_msgSend(v320, "addEntriesFromDictionary:", v317);
  *(_QWORD *)buf = 0;
  *(_QWORD *)&buf[8] = buf;
  *(_QWORD *)&buf[16] = 0x3032000000;
  *(_QWORD *)&buf[24] = sub_10000CB2C;
  *(_QWORD *)&v374 = sub_10000CB3C;
  *((_QWORD *)&v374 + 1) = 0;
  v284 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%lu"), v312));
  v340[0] = _NSConcreteStackBlock;
  v340[1] = 3221225472;
  v340[2] = sub_10000D680;
  v340[3] = &unk_100075160;
  v345 = buf;
  v335 = v311;
  v341 = v335;
  v285 = v282;
  v342 = v285;
  v346 = v306;
  v286 = v323;
  v343 = v286;
  v287 = v283;
  v349 = a4;
  v344 = v287;
  v347 = v313;
  v348 = v312;
  LODWORD(v282) = OSAWriteLogForSubmission(v284, v287, v320, 0, v340);

  if ((_DWORD)v282)
  {
    v288 = off_10007FB68;
    v336[0] = _NSConcreteStackBlock;
    v336[1] = 3221225472;
    v336[2] = sub_10000D828;
    v336[3] = &unk_100075188;
    v338 = v313;
    v337 = v308;
    v339 = v15;
    AnalyticsSendEventLazy(v288, v336);
    j__ADClientAddValueForScalarKey(CFSTR("com.apple.hangtracer.HTLogsConversion.Succeeded"), 1);
    v289 = objc_alloc_init((Class)NSMutableDictionary);
    v290 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v332, "objectForKeyedSubscript:", CFSTR("DisplayedInHUD")));

    if (v290)
    {
      v291 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v332, "objectForKeyedSubscript:", CFSTR("DisplayedInHUD")));
      objc_msgSend(v289, "setObject:forKeyedSubscript:", v291, CFSTR("displayedInHUD"));

    }
    v292 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v332, "objectForKeyedSubscript:", CFSTR("HangNotificationUUID")));

    if (v292)
    {
      v293 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v332, "objectForKeyedSubscript:", CFSTR("HangNotificationUUID")));
      objc_msgSend(v289, "setObject:forKeyedSubscript:", v293, CFSTR("hangUUID"));

    }
    if (v322)
      objc_msgSend(v289, "setObject:forKeyedSubscript:", v322, CFSTR("processPath"));
    if (v312)
    {
      v294 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:"));
      objc_msgSend(v289, "setObject:forKeyedSubscript:", v294, CFSTR("htBugType"));

    }
    if (v327)
    {
      v295 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", sub_10000612C(v327));
      v296 = (void *)objc_claimAutoreleasedReturnValue(v295);
      objc_msgSend(v289, "setObject:forKeyedSubscript:", v296, CFSTR("hangEventType"));

    }
    if (v286 || *(_QWORD *)(*(_QWORD *)&buf[8] + 40))
    {
      v297 = objc_alloc_init((Class)NSMutableArray);
      v298 = v297;
      if (v286)
        objc_msgSend(v297, "addObject:", v286);
      if (*(_QWORD *)(*(_QWORD *)&buf[8] + 40))
        objc_msgSend(v298, "addObject:");
      objc_msgSend(v289, "setObject:forKeyedSubscript:", v298, CFSTR("logFilePaths"));

    }
    v299 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v201));
    objc_msgSend(v289, "setObject:forKeyedSubscript:", v299, CFSTR("startWallTime"));

    v300 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v15));
    objc_msgSend(v289, "setObject:forKeyedSubscript:", v300, CFSTR("durationMS"));

    HTReportHangLogsProcessed(v289);
  }
  else
  {
    v301 = sub_10001D38C();
    v302 = objc_claimAutoreleasedReturnValue(v301);
    if (os_log_type_enabled(v302, OS_LOG_TYPE_DEFAULT))
    {
      v303 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v286, "lastPathComponent"));
      *(_DWORD *)v366 = 138412546;
      *(_QWORD *)&v366[4] = v303;
      *(_WORD *)&v366[12] = 2112;
      *(_QWORD *)&v366[14] = v287;
      _os_log_impl((void *)&_mh_execute_header, v302, OS_LOG_TYPE_DEFAULT, "Post-Processing %@: Failed to write spindump %@!\n", v366, 0x16u);

    }
    j__ADClientAddValueForScalarKey(CFSTR("com.apple.hangtracer.HTLogsConversion.FailedReportCrashSubmit"), 1);
    if (a4)
      sub_10000C94C(0, 9uLL, v313, v312);
  }
  v137 = *(id *)(*(_QWORD *)&buf[8] + 40);

  _Block_object_dispose(buf, 8);
  v330 = 0;
LABEL_120:

  return v137;
}

void sub_10000C8EC(_Unwind_Exception *a1)
{
  _Block_object_dispose(&STACK[0x3C0], 8);
  _Unwind_Resume(a1);
}

void sub_10000C94C(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  void *v8;
  __CFString *v9;
  id v10;
  NSObject *v11;
  void *v12;
  const __CFString *v13;
  void *v14;
  __CFString *v15;
  void *v16;
  __CFString *v17;
  _QWORD v18[4];
  __CFString *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  uint8_t buf[4];
  const __CFString *v25;
  __int16 v26;
  __CFString *v27;
  __int16 v28;
  void *v29;
  __int16 v30;
  void *v31;
  __int16 v32;
  void *v33;
  __int16 v34;
  uint64_t v35;

  v8 = (void *)objc_claimAutoreleasedReturnValue(+[HTPrefs sharedPrefs](HTPrefs, "sharedPrefs"));
  v9 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "enablementPrefix"));

  if (!v9)
    v9 = &stru_100075D60;
  v10 = sub_10001D38C();
  v11 = objc_claimAutoreleasedReturnValue(v10);
  if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
  {
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", a1));
    v13 = sub_100006070(a2);
    v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
    v15 = sub_100006030(a3);
    v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
    *(_DWORD *)buf = 138413570;
    v25 = CFSTR("EnablementType");
    v26 = 2112;
    v27 = v9;
    v28 = 2112;
    v29 = v12;
    v30 = 2112;
    v31 = v14;
    v32 = 2112;
    v33 = v16;
    v34 = 2048;
    v35 = a4;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "com.apple.hangtracer.hang_capture_tailspin_v3 %@: %@, spindump_successful: %@, failure_reason: %@, HangSubType: %@, HTBugType: %ld", buf, 0x3Eu);

  }
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  v18[2] = sub_10000D928;
  v18[3] = &unk_1000751B0;
  v23 = a1;
  v19 = v9;
  v20 = a2;
  v21 = a3;
  v22 = a4;
  v17 = v9;
  AnalyticsSendEventLazy(CFSTR("com.apple.hangtracer.hang_capture_tailspin_v3"), v18);

}

uint64_t sub_10000CB2C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10000CB3C(uint64_t a1)
{

}

void sub_10000CB44(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  int v7;
  FILE *v8;
  FILE *v9;
  id v10;
  NSObject *v11;
  const char *v12;
  id v13;
  uint8_t buf[8];
  _BYTE v15[1024];

  v3 = a2;
  if (fcntl((int)objc_msgSend(v3, "fileDescriptor"), 50, v15) != -1)
  {
    v4 = objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v15));
    v5 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    v6 = *(void **)(v5 + 40);
    *(_QWORD *)(v5 + 40) = v4;

  }
  v7 = dup((int)objc_msgSend(v3, "fileDescriptor"));
  if (v7 == -1)
  {
    if (*(_BYTE *)(a1 + 64))
      sub_10000C94C(0, 0xBuLL, *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
    v10 = sub_10001D38C();
    v11 = objc_claimAutoreleasedReturnValue(v10);
    if (!os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      goto LABEL_16;
    *(_WORD *)buf = 0;
    v12 = "Failed to create a copy of file descriptor while trying to persist App launch logs";
    goto LABEL_15;
  }
  v8 = fdopen(v7, "a");
  if (!v8)
  {
    if (*(_BYTE *)(a1 + 64))
      sub_10000C94C(0, 0xAuLL, *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
    v13 = sub_10001D38C();
    v11 = objc_claimAutoreleasedReturnValue(v13);
    if (!os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      goto LABEL_16;
    *(_WORD *)buf = 0;
    v12 = "Failed to open file stream while trying to persist App launch logs";
LABEL_15:
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, v12, buf, 2u);
LABEL_16:

    goto LABEL_17;
  }
  v9 = v8;
  objc_msgSend(*(id *)(a1 + 32), "printToStream:", v8);
  fclose(v9);
  if (*(_BYTE *)(a1 + 64))
    sub_10000C94C(1, 0, *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
LABEL_17:

}

void sub_10000CCE8(int a1, int a2, void *a3, void *a4, void *a5)
{
  id v9;
  id v10;
  id v11;
  id v12;
  NSObject *v13;
  void *v14;
  void *v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  NSObject *v19;
  const __CFString *v20;
  void *v21;
  void *v22;
  double v23;
  double v24;
  void *v25;
  double v26;
  const __CFString *v27;
  id v28;
  NSObject *v29;
  id v30;
  double v31;
  double v32;
  void *v33;
  double v34;
  const __CFString *v35;
  __CFString *v36;
  int v37;
  __CFString *v38;
  id v39;
  NSObject *v40;
  _BOOL4 v41;
  void *v42;
  id v43;
  NSObject *v44;
  void *v45;
  __CFString *v46;
  void *v47;
  void *v48;
  unsigned int v49;
  __CFString *v50;
  void *v51;
  void *v52;
  unsigned int v53;
  __CFString *v54;
  int v55;
  id v56;
  NSObject *v57;
  _BOOL4 v58;
  void *v59;
  const char *v60;
  NSObject *v61;
  uint32_t v62;
  void *v63;
  id v64;
  void *v65;
  id v66;
  void *v67;
  void *v68;
  id v69;
  __CFString *v70;
  __CFString *v71;
  __CFString *v72;
  id v73;
  _QWORD v74[2];
  _QWORD v75[2];
  uint8_t buf[4];
  void *v77;
  __int16 v78;
  const __CFString *v79;
  __int16 v80;
  const __CFString *v81;

  v9 = a3;
  v10 = a4;
  v11 = a5;
  v12 = sub_10001D38C();
  v13 = objc_claimAutoreleasedReturnValue(v12);
  if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "Starting submission of tailspin to diagnostic pipeline", buf, 2u);
  }

  if (a2 == 1)
  {
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("HangType")));
    if (v14)
    {
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("HangType")));
      v16 = (int)objc_msgSend(v15, "intValue");

    }
    else
    {
      v16 = 0;
    }

    v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "objectForKeyedSubscript:", CFSTR("durationms")));
    if (v21)
    {
      v22 = v21;
      objc_msgSend(v21, "doubleValue");
      v24 = v23;
      v25 = (void *)objc_claimAutoreleasedReturnValue(+[HTPrefs sharedPrefs](HTPrefs, "sharedPrefs"));
      v26 = (double)(unint64_t)objc_msgSend(v25, "runloopHangDurationThresholdMSec");

      if (v24 >= v26)
      {
        objc_msgSend(v22, "doubleValue");
        v32 = v31;
        v33 = (void *)objc_claimAutoreleasedReturnValue(+[HTPrefs sharedPrefs](HTPrefs, "sharedPrefs"));
        v34 = (double)(unint64_t)objc_msgSend(v33, "runloopLongHangDurationThresholdMSec");

        v27 = CFSTR("Long Hang");
        if (v32 < v34)
          v27 = CFSTR("Normal Hang");
      }
      else
      {
        v27 = CFSTR("Micro Hang");
      }
      v35 = CFSTR("Third Party App");
      if (a1)
        v35 = CFSTR("First Party App");
      v19 = objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@ Hang (%@)"), v35, v27));
      v36 = sub_100006030(v16);
      v18 = (void *)objc_claimAutoreleasedReturnValue(v36);

      v20 = CFSTR("com.apple.hangtracer");
LABEL_22:
      v73 = 0;
      v37 = DRShouldGatherLog(v20, v19, v11, CFSTR("tailspin"), &v73);
      v38 = (__CFString *)v73;
      v39 = sub_10001D38C();
      v40 = objc_claimAutoreleasedReturnValue(v39);
      v41 = os_log_type_enabled(v40, OS_LOG_TYPE_INFO);
      if (!v37)
      {
        if (v41)
        {
          v63 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "lastPathComponent"));
          *(_DWORD *)buf = 138412546;
          v77 = v63;
          v78 = 2112;
          v79 = v38;
          _os_log_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_INFO, "Post Processing %@: Should NOT submit to Diagnostic Pipeline, error (%@)", buf, 0x16u);

        }
        goto LABEL_41;
      }
      v69 = v9;
      if (v41)
      {
        v42 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "lastPathComponent"));
        *(_DWORD *)buf = 138412290;
        v77 = v42;
        _os_log_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_INFO, "Post Processing %@: Should submit to Diagnostic Pipeline", buf, 0xCu);

      }
      v68 = v18;

      sub_100005BA4(CFSTR("/tmp/HangTracer/"), 1);
      v43 = sub_10001D38C();
      v44 = objc_claimAutoreleasedReturnValue(v43);
      if (os_log_type_enabled(v44, OS_LOG_TYPE_DEFAULT))
      {
        v45 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "lastPathComponent"));
        v46 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "lastPathComponent"));
        *(_DWORD *)buf = 138412802;
        v77 = v45;
        v78 = 2112;
        v79 = v46;
        v80 = 2112;
        v81 = CFSTR("/tmp/HangTracer/");
        _os_log_impl((void *)&_mh_execute_header, v44, OS_LOG_TYPE_DEFAULT, "Post Processing %@: Copy tailspin %@ to directory accesible by mobile %@", buf, 0x20u);

      }
      v47 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "lastPathComponent"));
      v40 = objc_claimAutoreleasedReturnValue(objc_msgSend(CFSTR("/tmp/HangTracer/"), "stringByAppendingPathComponent:", v47));

      v48 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
      v72 = v38;
      v49 = objc_msgSend(v48, "copyItemAtPath:toPath:error:", v10, v40, &v72);
      v50 = v72;

      if (v49)
      {
        v51 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
        v74[0] = NSFileOwnerAccountName;
        v74[1] = NSFileGroupOwnerAccountName;
        v75[0] = CFSTR("mobile");
        v75[1] = CFSTR("mobile");
        v52 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v75, v74, 2));
        v71 = v50;
        v53 = objc_msgSend(v51, "setAttributes:ofItemAtPath:error:", v52, v40, &v71);
        v54 = v71;

        if (v53)
        {
          v70 = v54;
          v18 = v68;
          v55 = DRSubmitLog(v20, v19, v68, v11, CFSTR("tailspin"), v40, 1, &v70);
          v50 = v70;

          v56 = sub_10001D38C();
          v57 = objc_claimAutoreleasedReturnValue(v56);
          v58 = os_log_type_enabled(v57, OS_LOG_TYPE_DEFAULT);
          v9 = v69;
          if (v55)
          {
            if (v58)
            {
              v59 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "lastPathComponent"));
              *(_DWORD *)buf = 138412290;
              v77 = v59;
              v60 = "Post Processing %@: Submitted to Diagnostic Pipeline Successfully";
              v61 = v57;
              v62 = 12;
LABEL_45:
              _os_log_impl((void *)&_mh_execute_header, v61, OS_LOG_TYPE_DEFAULT, v60, buf, v62);

            }
          }
          else if (v58)
          {
            v59 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "lastPathComponent"));
            *(_DWORD *)buf = 138412546;
            v77 = v59;
            v78 = 2112;
            v79 = v50;
            v60 = "Post Processing %@: Failed submission to Diagnostic Pipeline due to Error (%@)";
            v61 = v57;
            v62 = 22;
            goto LABEL_45;
          }
LABEL_40:

          v38 = v50;
LABEL_41:

          goto LABEL_42;
        }
        v66 = sub_10001D38C();
        v57 = objc_claimAutoreleasedReturnValue(v66);
        v9 = v69;
        if (os_log_type_enabled(v57, OS_LOG_TYPE_DEFAULT))
        {
          v67 = (void *)objc_claimAutoreleasedReturnValue(-[NSObject lastPathComponent](v40, "lastPathComponent"));
          *(_DWORD *)buf = 138412802;
          v77 = v67;
          v78 = 2112;
          v79 = (const __CFString *)v40;
          v80 = 2112;
          v81 = v54;
          _os_log_impl((void *)&_mh_execute_header, v57, OS_LOG_TYPE_DEFAULT, "Post Processing %@: Failed to update ownership of tailspin %@ to 'mobile', error (%@)", buf, 0x20u);

        }
        v50 = v54;
      }
      else
      {
        v64 = sub_10001D38C();
        v57 = objc_claimAutoreleasedReturnValue(v64);
        if (os_log_type_enabled(v57, OS_LOG_TYPE_DEFAULT))
        {
          v65 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "lastPathComponent"));
          *(_DWORD *)buf = 138412802;
          v77 = v65;
          v78 = 2112;
          v79 = CFSTR("/tmp/HangTracer/");
          v80 = 2112;
          v81 = v50;
          _os_log_impl((void *)&_mh_execute_header, v57, OS_LOG_TYPE_DEFAULT, "Post Processing %@: Failed to copy tailspin to %@, error (%@)", buf, 0x20u);

        }
      }
      v18 = v68;
      goto LABEL_40;
    }
    v30 = sub_10001D38C();
    v19 = objc_claimAutoreleasedReturnValue(v30);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "Error unwrapping hang duration during tailspin submission to diagnostic pipeline, aborting submission", buf, 2u);
    }
  }
  else
  {
    v17 = objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "objectForKeyedSubscript:", CFSTR("reason")));
    if (v17)
    {
      v18 = (void *)v17;
      v19 = CFSTR("ApplicationLaunch");
      v20 = CFSTR("com.apple.sentry");
      goto LABEL_22;
    }
    v28 = sub_10001D38C();
    v29 = objc_claimAutoreleasedReturnValue(v28);
    if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, "Error unwrapping issue description during tailspin submission to diagnostic pipeline, aborting submission", buf, 2u);
    }

    v19 = CFSTR("ApplicationLaunch");
  }
LABEL_42:

}

HTOrderedNSDict *sub_10000D4B0(void *a1)
{
  id v1;
  void *v2;
  HTOrderedNSDict *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *i;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];

  v1 = a1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:](NSArray, "arrayWithObjects:", CFSTR("topBlockingProcess"), CFSTR("topBlockingThreadId"), CFSTR("topBlockingPid"), CFSTR("topBlockingTimeMS"), CFSTR("otherBlockingThreads"), CFSTR("nextTopBlockingThreadInfo"), 0));
  v3 = objc_opt_new(HTOrderedNSDict);
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v4 = v2;
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v15;
    do
    {
      for (i = 0; i != v6; i = (char *)i + 1)
      {
        if (*(_QWORD *)v15 != v7)
          objc_enumerationMutation(v4);
        v9 = *(void **)(*((_QWORD *)&v14 + 1) + 8 * (_QWORD)i);
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "objectForKeyedSubscript:", v9));
        if (v10)
        {
          if (objc_msgSend(v9, "isEqual:", CFSTR("nextTopBlockingThreadInfo")))
          {
            v11 = sub_10000D4B0(v10);
            v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
            -[HTOrderedNSDict setObject:forKey:](v3, "setObject:forKey:", v12, v9);

          }
          else
          {
            -[HTOrderedNSDict setObject:forKey:](v3, "setObject:forKey:", v10, v9);
          }
        }

      }
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    }
    while (v6);
  }

  return v3;
}

void sub_10000D680(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  const char *v8;
  int v9;
  id v10;
  NSObject *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint8_t buf[4];
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  _BYTE v19[1024];

  v3 = a2;
  if (fcntl((int)objc_msgSend(v3, "fileDescriptor"), 50, v19) != -1)
  {
    v4 = objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v19));
    v5 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v6 = *(void **)(v5 + 40);
    *(_QWORD *)(v5 + 40) = v4;

  }
  objc_msgSend(v3, "writeData:", *(_QWORD *)(a1 + 32));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(CFSTR("\n"), "dataUsingEncoding:", 4));
  objc_msgSend(v3, "writeData:", v7);

  objc_msgSend(v3, "writeData:", *(_QWORD *)(a1 + 40));
  v8 = *(const char **)(a1 + 72);
  v9 = objc_msgSend(v3, "fileDescriptor");

  sub_10001D568(v8, v9);
  v10 = sub_10001D38C();
  v11 = objc_claimAutoreleasedReturnValue(v10);
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    v12 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "lastPathComponent"));
    v13 = (void *)v12;
    v14 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40);
    if (!v14)
      v14 = *(_QWORD *)(a1 + 56);
    *(_DWORD *)buf = 138412546;
    v16 = v12;
    v17 = 2112;
    v18 = v14;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "Post-Processing %@: Wrote %@ successfully! (\n", buf, 0x16u);

  }
  if (*(_BYTE *)(a1 + 96))
    sub_10000C94C(1, 0, *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88));
}

id sub_10000D828(uint64_t a1)
{
  __CFString *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  _QWORD v8[4];
  _QWORD v9[4];

  v9[0] = off_10007FB80;
  v8[0] = off_10007FB70;
  v8[1] = off_10007FB88;
  v2 = sub_100006030(*(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  v4 = *(_QWORD *)(a1 + 32);
  v9[1] = v3;
  v9[2] = v4;
  v8[2] = off_10007FB98;
  v8[3] = off_10007FB90;
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", *(double *)(a1 + 48)));
  v9[3] = v5;
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v9, v8, 4));

  return v6;
}

id sub_10000D928(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  _QWORD v8[5];
  _QWORD v9[5];

  v9[0] = *(_QWORD *)(a1 + 32);
  v8[0] = CFSTR("EnablementType");
  v8[1] = CFSTR("SpindumpSuccessful");
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", *(unsigned __int8 *)(a1 + 64)));
  v9[1] = v2;
  v8[2] = CFSTR("SpindumpFailureReason");
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", *(_QWORD *)(a1 + 40)));
  v9[2] = v3;
  v8[3] = CFSTR("HangSubType");
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", *(_QWORD *)(a1 + 48)));
  v9[3] = v4;
  v8[4] = CFSTR("HTBugType");
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", *(_QWORD *)(a1 + 56)));
  v9[4] = v5;
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v9, v8, 5));

  return v6;
}

intptr_t sub_10000DA60(uint64_t a1, int a2)
{
  id v4;
  NSObject *v5;
  NSObject *v6;
  uint64_t v7;
  const char *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  int v13;
  uint64_t v14;

  v4 = sub_10001D38C();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = v5;
  if (a2)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      v7 = *(_QWORD *)(a1 + 32);
      v13 = 138412290;
      v14 = v7;
      v8 = "Successfully augmented tailspin at %@ with os signposts";
      v9 = v6;
      v10 = OS_LOG_TYPE_INFO;
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v9, v10, v8, (uint8_t *)&v13, 0xCu);
    }
  }
  else if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v11 = *(_QWORD *)(a1 + 32);
    v13 = 138412290;
    v14 = v11;
    v8 = "Failed to augment tailspin at %@ with os signposts";
    v9 = v6;
    v10 = OS_LOG_TYPE_DEFAULT;
    goto LABEL_6;
  }

  return dispatch_semaphore_signal((dispatch_semaphore_t)qword_1000801F0);
}

void sub_10000DB60(void *a1)
{
  id v1;
  id v2;
  NSObject *v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *i;
  void *v9;
  void *v10;
  void *v11;
  unsigned __int8 v12;
  int v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  NSObject *v19;
  const char *v20;
  id v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  id v26;
  NSObject *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  double v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  void *j;
  uint64_t v37;
  id v38;
  NSObject *v39;
  id v40;
  int v41;
  int v42;
  id v43;
  uint64_t v44;
  void *k;
  void *v46;
  void *v47;
  signed int v48;
  void *v49;
  _BOOL4 v50;
  id v51;
  NSObject *v52;
  __CFString *v53;
  void *v54;
  _BOOL4 v55;
  id v56;
  NSObject *v57;
  _BOOL4 v58;
  _QWORD *v59;
  uint64_t v60;
  id v61;
  NSObject *v62;
  id v63;
  NSObject *v64;
  const __CFString *v65;
  id v66;
  id v67;
  id v68;
  uint64_t v69;
  _QWORD *v70;
  id v71;
  NSObject *v72;
  uint64_t v73;
  _QWORD *v74;
  NSObject *v75;
  id v76;
  NSObject *v77;
  uint64_t v78;
  _QWORD *v79;
  id v80;
  NSObject *v81;
  id v82;
  id v83;
  NSObject *v84;
  dispatch_semaphore_t v85;
  uint64_t v86;
  uint64_t v87;
  dispatch_queue_global_t global_queue;
  NSObject *v89;
  id v90;
  NSObject *v91;
  dispatch_time_t v92;
  id v93;
  NSObject *v94;
  id v95;
  void *m;
  void *v97;
  void *v98;
  void *v99;
  id v100;
  void *v101;
  void *v102;
  id v103;
  id v104;
  unint64_t v105;
  void *v106;
  unsigned int v107;
  void *v108;
  void *v109;
  double v110;
  void *v111;
  _BOOL4 v112;
  void *v113;
  void *v114;
  unsigned int v115;
  int v116;
  void *v117;
  unsigned int v118;
  unint64_t v119;
  void *v120;
  void *v121;
  unsigned int v122;
  void *v123;
  _BYTE *v124;
  void *v125;
  _BYTE *v126;
  double v127;
  void *v128;
  _BOOL4 v129;
  unint64_t v130;
  id v131;
  NSObject *v132;
  NSObject *v133;
  const char *v134;
  id v135;
  id v136;
  BOOL v137;
  id v138;
  NSObject *v139;
  NSObject *v140;
  id v141;
  id v142;
  BOOL v143;
  id v144;
  NSObject *v145;
  _BOOL4 v146;
  id v147;
  NSObject *v148;
  const char *v149;
  BOOL v150;
  id v151;
  _BOOL4 v152;
  id v153;
  BOOL v154;
  id v155;
  _BOOL4 v156;
  id v157;
  uint32_t v158;
  id v159;
  int v160;
  id v161;
  void *n;
  void *v163;
  id v164;
  id v165;
  void *v166;
  void *v167;
  id v168;
  void *v169;
  unsigned __int8 v170;
  id v171;
  NSObject *v172;
  void *v173;
  unsigned int v174;
  uint64_t v175;
  void *v176;
  id v177;
  id v178;
  const char *v179;
  id v180;
  _BOOL4 v181;
  id v182;
  NSObject *v183;
  _BOOL4 v184;
  NSObject *v185;
  id v186;
  NSObject *v187;
  id v188;
  void *v189;
  unsigned int v190;
  void *v191;
  unsigned int v192;
  id v193;
  void *v194;
  void *v195;
  void *v196;
  double v197;
  void *v198;
  _BYTE *v199;
  void *v200;
  _BYTE *v201;
  double v202;
  void *v203;
  id v204;
  NSObject *v205;
  NSObject *v206;
  id v207;
  void *v208;
  void *v209;
  void *v210;
  void *v211;
  int v212;
  uint64_t v213;
  __CFString *v214;
  const __CFString *v215;
  NSNumber *v216;
  void *v217;
  void *v218;
  __CFString *v219;
  void *v220;
  __CFString *v221;
  void *v222;
  void *v223;
  __CFString *v224;
  NSObject *v225;
  id v226;
  int v227;
  id v228;
  int v229;
  __CFString *v230;
  int v231;
  void *v232;
  void *v233;
  void *v234;
  int v235;
  void *v236;
  unint64_t v237;
  void *v238;
  unint64_t v239;
  void *v240;
  void (**v241)(id, void ***);
  void *v242;
  int v243;
  dispatch_queue_t queue;
  dispatch_queue_t queuea;
  id obj;
  NSObject *obja;
  _BYTE *objb;
  id v249;
  id v250;
  id v251;
  id v252;
  id v253;
  id v254;
  NSObject *v255;
  id v256;
  id v257;
  uint64_t v258;
  _BYTE *v259;
  id v260;
  void *v261;
  id v262;
  __int128 v263;
  __int128 v264;
  __int128 v265;
  __int128 v266;
  __int128 v267;
  __int128 v268;
  __int128 v269;
  __int128 v270;
  __int128 v271;
  __int128 v272;
  __int128 v273;
  __int128 v274;
  id v275;
  __int128 v276;
  __int128 v277;
  __int128 v278;
  __int128 v279;
  _QWORD v280[3];
  int v281;
  _QWORD v282[4];
  NSObject *v283;
  uint64_t *v284;
  _QWORD v285[4];
  NSObject *v286;
  id v287;
  _QWORD v288[4];
  NSObject *v289;
  id v290;
  uint64_t v291;
  uint64_t *v292;
  uint64_t v293;
  uint64_t v294;
  _QWORD v295[4];
  NSObject *v296;
  __int128 v297;
  __int128 v298;
  __int128 v299;
  __int128 v300;
  _QWORD v301[11];
  _QWORD v302[11];
  _BYTE v303[128];
  _BYTE v304[128];
  _BYTE v305[128];
  _BYTE v306[128];
  void **block;
  uint64_t v308;
  void *v309;
  void *v310;
  uint64_t *v311;
  id v312;
  NSObject *v313;
  _QWORD *v314;
  _BYTE v315[24];
  void *v316;
  id v317;
  NSObject *v318;
  id v319;
  id v320;
  _BYTE buf[40];
  _BYTE v322[14];
  __int16 v323;
  _BYTE *v324;
  __int16 v325;
  unint64_t v326;
  __int16 v327;
  id v328;

  v1 = a1;
  v2 = sub_10001D38C();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 138412290;
    *(_QWORD *)&buf[4] = v1;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Post-Processing Tailspin file: %@\n", buf, 0xCu);
  }

  j__ADClientAddValueForScalarKey(CFSTR("com.apple.hangtracer.HTLogsConversion.Attempted"), 1);
  v228 = objc_retainAutorelease(v1);
  v4 = sub_1000150C0((char *)objc_msgSend(v228, "UTF8String"), 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  if (!v5)
  {
    unlink((const char *)objc_msgSend(objc_retainAutorelease(v228), "UTF8String"));
    sub_10000C94C(0, 3uLL, 0, 1);
    goto LABEL_227;
  }
  v278 = 0u;
  v279 = 0u;
  v276 = 0u;
  v277 = 0u;
  obj = v5;
  v6 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v276, v306, 16);
  if (v6)
  {
    v7 = *(_QWORD *)v277;
    while (2)
    {
      for (i = 0; i != v6; i = (char *)i + 1)
      {
        if (*(_QWORD *)v277 != v7)
          objc_enumerationMutation(obj);
        v9 = *(void **)(*((_QWORD *)&v276 + 1) + 8 * (_QWORD)i);
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("IsThirdPartyDevSupportModeHang")));
        if (v10)
        {
          v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("IsThirdPartyDevSupportModeHang")));
          v12 = objc_msgSend(v11, "BOOLValue");

          if ((v12 & 1) != 0)
          {
            v13 = 1;
            goto LABEL_16;
          }
        }
      }
      v6 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v276, v306, 16);
      if (v6)
        continue;
      break;
    }
  }
  v13 = 0;
LABEL_16:

  v14 = sub_100005E5C();
  v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
  v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "attributesOfItemAtPath:error:", v228, 0));
  v18 = objc_msgSend(v17, "fileSize");

  v19 = v15;
  if (os_signpost_enabled(v19))
  {
    v20 = "NO";
    *(_DWORD *)buf = 138412802;
    *(_QWORD *)&buf[4] = v228;
    if (v13)
      v20 = "YES";
    *(_WORD *)&buf[12] = 2048;
    *(_QWORD *)&buf[14] = v18;
    *(_WORD *)&buf[22] = 2080;
    *(_QWORD *)&buf[24] = v20;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v19, OS_SIGNPOST_INTERVAL_BEGIN, 0xEEEEB0B5B2B2EEEELL, "TailspinConversionInterval", "File=%@, Bytes=%{signpost.telemetry:number1}llu, Symbolicate=%{signpost.telemetry:string1}s enableTelemetry=YES ", buf, 0x20u);
  }
  v225 = v19;

  if (v13)
  {
    v21 = objc_retainAutorelease(v228);
    v22 = (const char *)objc_msgSend(v21, "cStringUsingEncoding:", 4);
    v23 = mach_absolute_time();
    v24 = open(v22, 2);
    if ((_DWORD)v24 == -1)
    {
      v29 = sub_10001D38C();
      v25 = objc_claimAutoreleasedReturnValue(v29);
      if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        *(_QWORD *)&buf[4] = v21;
        _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "Failed to open tailspin to add symbols at %@", buf, 0xCu);
      }
    }
    else
    {
      block = (void **)UnsafePointer;
      *(_QWORD *)v315 = &__kCFBooleanFalse;
      v25 = objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v315, &block, 1));
      v26 = sub_10001D38C();
      v27 = objc_claimAutoreleasedReturnValue(v26);
      if (os_log_type_enabled(v27, OS_LOG_TYPE_DEBUG))
        sub_100037F48();

      v28 = qword_1000801E8;
      *(_QWORD *)buf = _NSConcreteStackBlock;
      *(_QWORD *)&buf[8] = 3221225472;
      *(_QWORD *)&buf[16] = sub_10000FF98;
      *(_QWORD *)&buf[24] = &unk_1000751D8;
      *(_QWORD *)&buf[32] = v21;
      tailspin_augment_output(v24, v25, v28, buf);
      dispatch_semaphore_wait((dispatch_semaphore_t)qword_1000801F0, 0xFFFFFFFFFFFFFFFFLL);

    }
    v30 = mach_absolute_time();
    v31 = sub_10000652C(v30 - v23);
    *(_QWORD *)&v297 = _NSConcreteStackBlock;
    *((_QWORD *)&v297 + 1) = 3221225472;
    *(_QWORD *)&v298 = sub_100010098;
    *((_QWORD *)&v298 + 1) = &unk_1000751F8;
    *(double *)&v299 = v31;
    AnalyticsSendEventLazy(CFSTR("com.apple.hangtracer.hangreporter.tailspinsymbolication.v1"), &v297);

  }
  v32 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  v226 = objc_msgSend(objc_alloc((Class)SASampleStore), "initForFileParsing");
  objc_msgSend(v226, "setShouldGatherKextStat:", 0);
  objc_msgSend(v226, "setDataGatheringOptions:", 7);
  v33 = objc_retainAutorelease(v228);
  v275 = 0;
  objc_msgSend(v226, "parseKTraceFile:warningsOut:errorOut:", objc_msgSend(v33, "UTF8String"), v32, &v275);
  v224 = (__CFString *)v275;
  v271 = 0u;
  v272 = 0u;
  v273 = 0u;
  v274 = 0u;
  v249 = v32;
  v34 = objc_msgSend(v249, "countByEnumeratingWithState:objects:count:", &v271, v305, 16);
  if (v34)
  {
    v35 = *(_QWORD *)v272;
    do
    {
      for (j = 0; j != v34; j = (char *)j + 1)
      {
        if (*(_QWORD *)v272 != v35)
          objc_enumerationMutation(v249);
        v37 = *(_QWORD *)(*((_QWORD *)&v271 + 1) + 8 * (_QWORD)j);
        v38 = sub_10001D38C();
        v39 = objc_claimAutoreleasedReturnValue(v38);
        if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412546;
          *(_QWORD *)&buf[4] = v33;
          *(_WORD *)&buf[12] = 2112;
          *(_QWORD *)&buf[14] = v37;
          _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEFAULT, "WARNING trying to create sample store from %@: %@\n", buf, 0x16u);
        }

      }
      v34 = objc_msgSend(v249, "countByEnumeratingWithState:objects:count:", &v271, v305, 16);
    }
    while (v34);
  }

  if (!v226)
  {
    sub_10000C94C(0, 4uLL, 0, 1);
    v63 = sub_10001D38C();
    v64 = objc_claimAutoreleasedReturnValue(v63);
    if (os_log_type_enabled(v64, OS_LOG_TYPE_DEFAULT))
    {
      v65 = CFSTR("Unknown error");
      if (v224)
        v65 = v224;
      *(_DWORD *)buf = 138412546;
      *(_QWORD *)&buf[4] = v33;
      *(_WORD *)&buf[12] = 2112;
      *(_QWORD *)&buf[14] = v65;
      _os_log_impl((void *)&_mh_execute_header, v64, OS_LOG_TYPE_DEFAULT, "ERROR trying to create sample store from %@: %@\n", buf, 0x16u);
    }

    unlink((const char *)objc_msgSend(objc_retainAutorelease(v33), "UTF8String"));
    goto LABEL_226;
  }
  v256 = v33;
  v254 = v226;
  v40 = obj;
  v250 = objc_alloc_init((Class)NSMutableArray);
  v299 = 0u;
  v300 = 0u;
  v297 = 0u;
  v298 = 0u;
  v257 = v40;
  v41 = 0;
  v42 = 0;
  v43 = objc_msgSend(v257, "countByEnumeratingWithState:objects:count:", &v297, buf, 16);
  if (v43)
  {
    v44 = *(_QWORD *)v298;
    do
    {
      for (k = 0; k != v43; k = (char *)k + 1)
      {
        if (*(_QWORD *)v298 != v44)
          objc_enumerationMutation(v257);
        v46 = *(void **)(*((_QWORD *)&v297 + 1) + 8 * (_QWORD)k);
        v47 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v46, "objectForKeyedSubscript:", CFSTR("HangType")));
        v48 = objc_msgSend(v47, "intValue");

        if (v48 == 5)
        {
          v49 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v46, "objectForKeyedSubscript:", CFSTR("FenceInfoUpdated")));
          v50 = v49 == 0;

          if (v50)
          {
            objc_msgSend(v46, "setObject:forKeyedSubscript:", &__kCFBooleanFalse, CFSTR("FenceInfoUpdated"));
            objc_msgSend(v250, "addObject:", v46);
            ++v42;
          }
          else
          {
            ++v41;
          }
        }
        else if (sub_100006060(v48))
        {
          v51 = sub_10001D38C();
          v52 = objc_claimAutoreleasedReturnValue(v51);
          if (os_log_type_enabled(v52, OS_LOG_TYPE_FAULT))
          {
            v53 = sub_100006030(v48);
            v54 = (void *)objc_claimAutoreleasedReturnValue(v53);
            *(_DWORD *)v315 = 138543618;
            *(_QWORD *)&v315[4] = v54;
            *(_WORD *)&v315[12] = 2048;
            *(_QWORD *)&v315[14] = v48;
            _os_log_fault_impl((void *)&_mh_execute_header, v52, OS_LOG_TYPE_FAULT, "Unsupported fence hang %{public}@ (%ld)", v315, 0x16u);

          }
        }
      }
      v43 = objc_msgSend(v257, "countByEnumeratingWithState:objects:count:", &v297, buf, 16);
    }
    while (v43);
  }

  v55 = objc_msgSend(v250, "count") == 0;
  v56 = sub_10001D38C();
  v57 = objc_claimAutoreleasedReturnValue(v56);
  v58 = os_log_type_enabled(v57, OS_LOG_TYPE_DEBUG);
  if (v55)
  {
    if (v58)
      sub_100037B98(v41, v57);
  }
  else
  {
    if (v58)
      sub_100037ED8();

    v295[0] = _NSConcreteStackBlock;
    v295[1] = 3221225472;
    v295[2] = sub_100010138;
    v295[3] = &unk_100075220;
    v296 = v250;
    v59 = objc_retainBlock(v295);
    v291 = 0;
    v292 = &v291;
    v293 = 0x2020000000;
    v294 = 0;
    v294 = ktrace_session_create();
    v60 = v292[3];
    if (v60)
    {
      if (ktrace_set_file(v60, objc_msgSend(objc_retainAutorelease(v256), "cStringUsingEncoding:", 4)))
      {
        ktrace_session_destroy(v292[3]);
        v61 = sub_10001D38C();
        v62 = objc_claimAutoreleasedReturnValue(v61);
        if (os_log_type_enabled(v62, OS_LOG_TYPE_FAULT))
          sub_100037E78();
      }
      else
      {
        v67 = objc_alloc_init((Class)NSMutableDictionary);
        v68 = objc_alloc_init((Class)NSMutableDictionary);
        v69 = v292[3];
        v288[0] = _NSConcreteStackBlock;
        v288[1] = 3221225472;
        v288[2] = sub_1000102EC;
        v288[3] = &unk_100075270;
        v70 = v59;
        v290 = v70;
        v62 = v67;
        v289 = v62;
        if (ktrace_events_single(v69, 835322368, v288))
        {
          v71 = sub_10001D38C();
          v72 = objc_claimAutoreleasedReturnValue(v71);
          if (os_log_type_enabled(v72, OS_LOG_TYPE_FAULT))
            sub_100037E18();

          ktrace_session_destroy(v292[3]);
        }
        else
        {
          v73 = v292[3];
          v285[0] = _NSConcreteStackBlock;
          v285[1] = 3221225472;
          v285[2] = sub_100010494;
          v285[3] = &unk_100075270;
          v74 = v70;
          v287 = v74;
          v75 = v62;
          v286 = v75;
          if (ktrace_events_single(v73, 835322376, v285))
          {
            v76 = sub_10001D38C();
            v77 = objc_claimAutoreleasedReturnValue(v76);
            if (os_log_type_enabled(v77, OS_LOG_TYPE_FAULT))
              sub_100037DB8();

            ktrace_session_destroy(v292[3]);
          }
          else
          {
            v78 = v292[3];
            *(_QWORD *)v315 = _NSConcreteStackBlock;
            *(_QWORD *)&v315[8] = 3221225472;
            *(_QWORD *)&v315[16] = sub_1000105DC;
            v316 = &unk_1000752C0;
            v79 = v74;
            v320 = v79;
            v80 = v254;
            v317 = v80;
            v81 = v75;
            v318 = v81;
            v82 = v68;
            v319 = v82;
            if (ktrace_events_single(v78, 835322400, v315))
            {
              v83 = sub_10001D38C();
              v84 = objc_claimAutoreleasedReturnValue(v83);
              if (os_log_type_enabled(v84, OS_LOG_TYPE_FAULT))
                sub_100037D58();

              ktrace_session_destroy(v292[3]);
            }
            else
            {
              v241 = (void (**)(id, void ***))v79;
              v85 = dispatch_semaphore_create(0);
              v86 = v292[3];
              v282[0] = _NSConcreteStackBlock;
              v282[1] = 3221225472;
              v282[2] = sub_100010A88;
              v282[3] = &unk_1000752E8;
              v284 = &v291;
              obja = v85;
              v283 = obja;
              ktrace_set_completion_handler(v86, v282);
              v87 = v292[3];
              global_queue = dispatch_get_global_queue(0, 0);
              v89 = objc_claimAutoreleasedReturnValue(global_queue);
              LODWORD(v87) = ktrace_start(v87, v89);

              if ((_DWORD)v87)
              {
                v90 = sub_10001D38C();
                v91 = objc_claimAutoreleasedReturnValue(v90);
                if (os_log_type_enabled(v91, OS_LOG_TYPE_FAULT))
                  sub_100037CF8();

                ktrace_session_destroy(v292[3]);
              }
              else
              {
                v92 = dispatch_time(0, 100000000000);
                if (dispatch_semaphore_wait(obja, v92))
                {
                  v93 = sub_10001D38C();
                  v94 = objc_claimAutoreleasedReturnValue(v93);
                  if (os_log_type_enabled(v94, OS_LOG_TYPE_FAULT))
                    sub_100037C78(v42, v94);

                  block = _NSConcreteStackBlock;
                  v308 = 3221225472;
                  v309 = sub_100010AC4;
                  v310 = &unk_100075310;
                  v311 = &v291;
                  dispatch_async(v89, &block);

                }
                else
                {
                  v280[0] = 0;
                  v280[1] = v280;
                  v280[2] = 0x2020000000;
                  v281 = 0;
                  block = _NSConcreteStackBlock;
                  v308 = 3221225472;
                  v309 = sub_100010AE0;
                  v310 = &unk_1000753A0;
                  v311 = (uint64_t *)v82;
                  v312 = v80;
                  v313 = v81;
                  v314 = v280;
                  v241[2](v241, &block);

                  _Block_object_dispose(v280, 8);
                }
              }

            }
          }

        }
      }
    }
    else
    {
      v66 = sub_10001D38C();
      v62 = objc_claimAutoreleasedReturnValue(v66);
      if (os_log_type_enabled(v62, OS_LOG_TYPE_FAULT))
        sub_100037C08(v42, v62);
    }

    _Block_object_dispose(&v291, 8);
    v57 = v296;
  }

  v267 = 0u;
  v268 = 0u;
  v269 = 0u;
  v270 = 0u;
  v251 = v257;
  v95 = objc_msgSend(v251, "countByEnumeratingWithState:objects:count:", &v267, v304, 16);
  if (v95)
  {
    v258 = *(_QWORD *)v268;
    do
    {
      for (m = 0; m != v95; m = (char *)m + 1)
      {
        if (*(_QWORD *)v268 != v258)
          objc_enumerationMutation(v251);
        v97 = *(void **)(*((_QWORD *)&v267 + 1) + 8 * (_QWORD)m);
        v98 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v97, "objectForKeyedSubscript:", CFSTR("ProcessPath")));
        v99 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v98, "lastPathComponent"));
        v100 = sub_100005240(v99, 0, v98, v97);
        v101 = (void *)objc_claimAutoreleasedReturnValue(v100);
        v102 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v101, "objectForKeyedSubscript:", CFSTR("is_first_party")));
        if (v102)
        {
          v103 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v101, "objectForKeyedSubscript:", CFSTR("is_first_party")));

        }
        else
        {
          v103 = &__kCFBooleanTrue;
        }

        objc_msgSend(v97, "setObject:forKeyedSubscript:", v103, CFSTR("isFirstPartyApp"));
        objc_msgSend(v97, "setObject:forKeyedSubscript:", v101, CFSTR("IPSMetaDictionary"));

      }
      v95 = objc_msgSend(v251, "countByEnumeratingWithState:objects:count:", &v267, v304, 16);
    }
    while (v95);
  }

  if ((unint64_t)objc_msgSend(v251, "count") < 2)
  {
    v159 = v251;
    goto LABEL_163;
  }
  v104 = objc_msgSend(v251, "mutableCopy");
  if (!objc_msgSend(v104, "count"))
    goto LABEL_162;
  v105 = 0;
  do
  {
    v237 = v105;
    queue = (dispatch_queue_t)objc_claimAutoreleasedReturnValue(objc_msgSend(v104, "objectAtIndexedSubscript:"));
    v106 = (void *)objc_claimAutoreleasedReturnValue(-[NSObject objectForKeyedSubscript:](queue, "objectForKeyedSubscript:", CFSTR("PID")));
    v107 = objc_msgSend(v106, "intValue");

    v108 = (void *)objc_claimAutoreleasedReturnValue(-[NSObject objectForKeyedSubscript:](queue, "objectForKeyedSubscript:", CFSTR("StartTime")));
    v259 = objc_msgSend(v108, "unsignedLongLongValue");

    v109 = (void *)objc_claimAutoreleasedReturnValue(-[NSObject objectForKeyedSubscript:](queue, "objectForKeyedSubscript:", CFSTR("EndTime")));
    objb = objc_msgSend(v109, "unsignedLongLongValue");

    v110 = sub_1000064D8(objb - v259);
    v111 = (void *)objc_claimAutoreleasedReturnValue(-[NSObject objectForKeyedSubscript:](queue, "objectForKeyedSubscript:", CFSTR("HangType")));
    v112 = sub_100006060((int)objc_msgSend(v111, "intValue"));

    v113 = (void *)objc_claimAutoreleasedReturnValue(-[NSObject objectForKeyedSubscript:](queue, "objectForKeyedSubscript:", CFSTR("IsThirdPartyDevSupportModeHang")));
    if (v113)
    {
      v114 = (void *)objc_claimAutoreleasedReturnValue(-[NSObject objectForKeyedSubscript:](queue, "objectForKeyedSubscript:", CFSTR("IsThirdPartyDevSupportModeHang")));
      v115 = objc_msgSend(v114, "BOOLValue");

      v116 = v115 ^ 1;
    }
    else
    {
      v116 = 1;
    }

    v117 = (void *)objc_claimAutoreleasedReturnValue(-[NSObject objectForKeyedSubscript:](queue, "objectForKeyedSubscript:", CFSTR("isFirstPartyApp")));
    v118 = objc_msgSend(v117, "BOOLValue");

    v242 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableIndexSet indexSet](NSMutableIndexSet, "indexSet"));
    v239 = (unint64_t)v110;
    if (v237 + 1 >= (unint64_t)objc_msgSend(v104, "count"))
    {
LABEL_132:
      v137 = objc_msgSend(v242, "count") == 0;
      v138 = sub_10001D38C();
      v139 = objc_claimAutoreleasedReturnValue(v138);
      v140 = v139;
      if (v137)
      {
        if (os_log_type_enabled(v139, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 67109888;
          *(_DWORD *)&buf[4] = v107;
          *(_WORD *)&buf[8] = 2048;
          *(_QWORD *)&buf[10] = v259;
          *(_WORD *)&buf[18] = 2048;
          *(_QWORD *)&buf[20] = objb;
          *(_WORD *)&buf[28] = 2048;
          *(_QWORD *)&buf[30] = v239;
          _os_log_debug_impl((void *)&_mh_execute_header, v140, OS_LOG_TYPE_DEBUG, "[%d] %llu-%llu (%llums) does not overlap any other hangs", buf, 0x26u);
        }

      }
      else
      {
        if (os_log_type_enabled(v139, OS_LOG_TYPE_DEFAULT))
        {
          v141 = objc_msgSend(v242, "count");
          *(_DWORD *)buf = 134219008;
          *(_QWORD *)&buf[4] = v141;
          *(_WORD *)&buf[12] = 1024;
          *(_DWORD *)&buf[14] = v107;
          *(_WORD *)&buf[18] = 2048;
          *(_QWORD *)&buf[20] = v259;
          *(_WORD *)&buf[28] = 2048;
          *(_QWORD *)&buf[30] = objb;
          *(_WORD *)&buf[38] = 2048;
          *(_QWORD *)v322 = v239;
          _os_log_impl((void *)&_mh_execute_header, v140, OS_LOG_TYPE_DEFAULT, "Removing %lu hangs in favor of overlapping [%d] %llu-%llu (%llums)", buf, 0x30u);
        }

        objc_msgSend(v104, "removeObjectsAtIndexes:", v242);
      }
      ++v237;
      goto LABEL_140;
    }
    v235 = v118 & v112 ^ 1;
    v231 = v118 & !v112;
    v229 = v116 | v112;
    v227 = v116 | !v112;
    v119 = v237 + 1;
    while (1)
    {
      v120 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v104, "objectAtIndexedSubscript:", v119));
      v121 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v120, "objectForKeyedSubscript:", CFSTR("PID")));
      v122 = objc_msgSend(v121, "intValue");

      v123 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v120, "objectForKeyedSubscript:", CFSTR("StartTime")));
      v124 = objc_msgSend(v123, "unsignedLongLongValue");

      v125 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v120, "objectForKeyedSubscript:", CFSTR("EndTime")));
      v126 = objc_msgSend(v125, "unsignedLongLongValue");

      v127 = sub_1000064D8(v126 - v124);
      v128 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v120, "objectForKeyedSubscript:", CFSTR("HangType")));
      v129 = sub_100006060((int)objc_msgSend(v128, "intValue"));

      if (v107 != v122 || v259 >= v126 || objb <= v124)
        goto LABEL_131;
      v130 = (unint64_t)v127;
      if (((v235 | v129) & 1) == 0 && v239 + 1000 > v130)
      {
        objc_msgSend(v242, "addIndex:", v119);
        v131 = sub_10001D38C();
        v132 = objc_claimAutoreleasedReturnValue(v131);
        if (os_log_type_enabled(v132, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 67110912;
          *(_DWORD *)&buf[4] = v107;
          *(_WORD *)&buf[8] = 2048;
          *(_QWORD *)&buf[10] = v124;
          *(_WORD *)&buf[18] = 2048;
          *(_QWORD *)&buf[20] = v126;
          *(_WORD *)&buf[28] = 2048;
          *(_QWORD *)&buf[30] = (unint64_t)v127;
          *(_WORD *)&buf[38] = 1024;
          *(_DWORD *)v322 = v107;
          *(_WORD *)&v322[4] = 2048;
          *(_QWORD *)&v322[6] = v259;
          v323 = 2048;
          v324 = objb;
          v325 = 2048;
          v326 = v239;
          v133 = v132;
          v134 = "Adding hang [%d] %llu-%llu (%llums) to removal list in favor of overlapping [%d] %llu-%llu (%llums) (1p"
                 " prefer fence if other is <1s longer)";
LABEL_129:
          _os_log_impl((void *)&_mh_execute_header, v133, OS_LOG_TYPE_DEFAULT, v134, buf, 0x4Au);
          goto LABEL_130;
        }
        goto LABEL_130;
      }
      if ((v231 & v129) == 1 && v130 + 1000 > v239)
        break;
      if (((v229 | !v129) & 1) != 0)
      {
        if (((v227 | v129) & 1) == 0)
        {
          v150 = objc_msgSend(v242, "count") == 0;
          v151 = sub_10001D38C();
          v145 = objc_claimAutoreleasedReturnValue(v151);
          v152 = os_log_type_enabled(v145, OS_LOG_TYPE_DEFAULT);
          if (!v150)
          {
            if (!v152)
              goto LABEL_160;
            v153 = objc_msgSend(v242, "count");
            *(_DWORD *)buf = 67111168;
            *(_DWORD *)&buf[4] = v107;
            *(_WORD *)&buf[8] = 2048;
            *(_QWORD *)&buf[10] = v259;
            *(_WORD *)&buf[18] = 2048;
            *(_QWORD *)&buf[20] = objb;
            *(_WORD *)&buf[28] = 2048;
            *(_QWORD *)&buf[30] = v239;
            *(_WORD *)&buf[38] = 1024;
            *(_DWORD *)v322 = v107;
            *(_WORD *)&v322[4] = 2048;
            *(_QWORD *)&v322[6] = v124;
            v323 = 2048;
            v324 = v126;
            v325 = 2048;
            v326 = (unint64_t)v127;
            v327 = 2048;
            v328 = v153;
            v148 = v145;
            v149 = "Removing hang [%d] %llu-%llu (%llums) in favor of overlapping [%d] %llu-%llu (%llums) (3p prefer fenc"
                   "e) (not removing %lu on removal list)";
            goto LABEL_151;
          }
          if (!v152)
            goto LABEL_160;
          *(_DWORD *)buf = 67110912;
          *(_DWORD *)&buf[4] = v107;
          *(_WORD *)&buf[8] = 2048;
          *(_QWORD *)&buf[10] = v259;
          *(_WORD *)&buf[18] = 2048;
          *(_QWORD *)&buf[20] = objb;
          *(_WORD *)&buf[28] = 2048;
          *(_QWORD *)&buf[30] = v239;
          *(_WORD *)&buf[38] = 1024;
          *(_DWORD *)v322 = v107;
          *(_WORD *)&v322[4] = 2048;
          *(_QWORD *)&v322[6] = v124;
          v323 = 2048;
          v324 = v126;
          v325 = 2048;
          v326 = (unint64_t)v127;
          v148 = v145;
          v149 = "Removing hang [%d] %llu-%llu (%llums) in favor of overlapping [%d] %llu-%llu (%llums) (3p prefer fence)";
          goto LABEL_158;
        }
        if (objb - v259 < (unint64_t)(v126 - v124))
        {
          v154 = objc_msgSend(v242, "count") == 0;
          v155 = sub_10001D38C();
          v145 = objc_claimAutoreleasedReturnValue(v155);
          v156 = os_log_type_enabled(v145, OS_LOG_TYPE_DEFAULT);
          if (!v154)
          {
            if (!v156)
              goto LABEL_160;
            v157 = objc_msgSend(v242, "count");
            *(_DWORD *)buf = 67111168;
            *(_DWORD *)&buf[4] = v107;
            *(_WORD *)&buf[8] = 2048;
            *(_QWORD *)&buf[10] = v259;
            *(_WORD *)&buf[18] = 2048;
            *(_QWORD *)&buf[20] = objb;
            *(_WORD *)&buf[28] = 2048;
            *(_QWORD *)&buf[30] = v239;
            *(_WORD *)&buf[38] = 1024;
            *(_DWORD *)v322 = v107;
            *(_WORD *)&v322[4] = 2048;
            *(_QWORD *)&v322[6] = v124;
            v323 = 2048;
            v324 = v126;
            v325 = 2048;
            v326 = (unint64_t)v127;
            v327 = 2048;
            v328 = v157;
            v148 = v145;
            v149 = "Removing hang [%d] %llu-%llu (%llums) in favor of overlapping [%d] %llu-%llu (%llums) (prefer longer "
                   "hangs) (not removing %lu on removal list)";
            goto LABEL_151;
          }
          if (!v156)
            goto LABEL_160;
          *(_DWORD *)buf = 67110912;
          *(_DWORD *)&buf[4] = v107;
          *(_WORD *)&buf[8] = 2048;
          *(_QWORD *)&buf[10] = v259;
          *(_WORD *)&buf[18] = 2048;
          *(_QWORD *)&buf[20] = objb;
          *(_WORD *)&buf[28] = 2048;
          *(_QWORD *)&buf[30] = v239;
          *(_WORD *)&buf[38] = 1024;
          *(_DWORD *)v322 = v107;
          *(_WORD *)&v322[4] = 2048;
          *(_QWORD *)&v322[6] = v124;
          v323 = 2048;
          v324 = v126;
          v325 = 2048;
          v326 = (unint64_t)v127;
          v148 = v145;
          v149 = "Removing hang [%d] %llu-%llu (%llums) in favor of overlapping [%d] %llu-%llu (%llums) (prefer longer hangs)";
          goto LABEL_158;
        }
        objc_msgSend(v242, "addIndex:", v119);
        v135 = sub_10001D38C();
        v132 = objc_claimAutoreleasedReturnValue(v135);
        if (!os_log_type_enabled(v132, OS_LOG_TYPE_DEFAULT))
          goto LABEL_130;
        *(_DWORD *)buf = 67110912;
        *(_DWORD *)&buf[4] = v107;
        *(_WORD *)&buf[8] = 2048;
        *(_QWORD *)&buf[10] = v124;
        *(_WORD *)&buf[18] = 2048;
        *(_QWORD *)&buf[20] = v126;
        *(_WORD *)&buf[28] = 2048;
        *(_QWORD *)&buf[30] = (unint64_t)v127;
        *(_WORD *)&buf[38] = 1024;
        *(_DWORD *)v322 = v107;
        *(_WORD *)&v322[4] = 2048;
        *(_QWORD *)&v322[6] = v259;
        v323 = 2048;
        v324 = objb;
        v325 = 2048;
        v326 = v239;
        v133 = v132;
        v134 = "Adding hang [%d] %llu-%llu (%llums) to removal list in favor of overlapping [%d] %llu-%llu (%llums) (pref"
               "er longer hangs)";
        goto LABEL_129;
      }
      objc_msgSend(v242, "addIndex:", v119);
      v136 = sub_10001D38C();
      v132 = objc_claimAutoreleasedReturnValue(v136);
      if (os_log_type_enabled(v132, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 67110912;
        *(_DWORD *)&buf[4] = v107;
        *(_WORD *)&buf[8] = 2048;
        *(_QWORD *)&buf[10] = v124;
        *(_WORD *)&buf[18] = 2048;
        *(_QWORD *)&buf[20] = v126;
        *(_WORD *)&buf[28] = 2048;
        *(_QWORD *)&buf[30] = (unint64_t)v127;
        *(_WORD *)&buf[38] = 1024;
        *(_DWORD *)v322 = v107;
        *(_WORD *)&v322[4] = 2048;
        *(_QWORD *)&v322[6] = v259;
        v323 = 2048;
        v324 = objb;
        v325 = 2048;
        v326 = v239;
        v133 = v132;
        v134 = "Adding hang [%d] %llu-%llu (%llums) to removal list in favor of overlapping [%d] %llu-%llu (%llums) (3p prefer fence)";
        goto LABEL_129;
      }
LABEL_130:

LABEL_131:
      if (++v119 >= (unint64_t)objc_msgSend(v104, "count"))
        goto LABEL_132;
    }
    v143 = objc_msgSend(v242, "count") == 0;
    v144 = sub_10001D38C();
    v145 = objc_claimAutoreleasedReturnValue(v144);
    v146 = os_log_type_enabled(v145, OS_LOG_TYPE_DEFAULT);
    if (!v143)
    {
      if (!v146)
        goto LABEL_160;
      v147 = objc_msgSend(v242, "count");
      *(_DWORD *)buf = 67111168;
      *(_DWORD *)&buf[4] = v107;
      *(_WORD *)&buf[8] = 2048;
      *(_QWORD *)&buf[10] = v259;
      *(_WORD *)&buf[18] = 2048;
      *(_QWORD *)&buf[20] = objb;
      *(_WORD *)&buf[28] = 2048;
      *(_QWORD *)&buf[30] = v239;
      *(_WORD *)&buf[38] = 1024;
      *(_DWORD *)v322 = v107;
      *(_WORD *)&v322[4] = 2048;
      *(_QWORD *)&v322[6] = v124;
      v323 = 2048;
      v324 = v126;
      v325 = 2048;
      v326 = (unint64_t)v127;
      v327 = 2048;
      v328 = v147;
      v148 = v145;
      v149 = "Removing hang [%d] %llu-%llu (%llums) in favor of overlapping [%d] %llu-%llu (%llums) (1p prefer fence if o"
             "ther is <1s longer) (not removing %lu on removal list)";
LABEL_151:
      v158 = 84;
      goto LABEL_159;
    }
    if (!v146)
      goto LABEL_160;
    *(_DWORD *)buf = 67110912;
    *(_DWORD *)&buf[4] = v107;
    *(_WORD *)&buf[8] = 2048;
    *(_QWORD *)&buf[10] = v259;
    *(_WORD *)&buf[18] = 2048;
    *(_QWORD *)&buf[20] = objb;
    *(_WORD *)&buf[28] = 2048;
    *(_QWORD *)&buf[30] = v239;
    *(_WORD *)&buf[38] = 1024;
    *(_DWORD *)v322 = v107;
    *(_WORD *)&v322[4] = 2048;
    *(_QWORD *)&v322[6] = v124;
    v323 = 2048;
    v324 = v126;
    v325 = 2048;
    v326 = (unint64_t)v127;
    v148 = v145;
    v149 = "Removing hang [%d] %llu-%llu (%llums) in favor of overlapping [%d] %llu-%llu (%llums) (1p prefer fence if oth"
           "er is <1s longer)";
LABEL_158:
    v158 = 74;
LABEL_159:
    _os_log_impl((void *)&_mh_execute_header, v148, OS_LOG_TYPE_DEFAULT, v149, buf, v158);
LABEL_160:

    objc_msgSend(v104, "removeObjectAtIndex:", v237);
LABEL_140:

    v142 = objc_msgSend(v104, "count");
    v105 = v237;
  }
  while (v237 < (unint64_t)v142);
LABEL_162:
  v159 = objc_msgSend(v104, "copy");

LABEL_163:
  v265 = 0u;
  v266 = 0u;
  v263 = 0u;
  v264 = 0u;
  obj = v159;
  v260 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v263, v303, 16);
  if (v260)
  {
    v160 = 0;
    v161 = 0;
    v252 = *(id *)v264;
    do
    {
      for (n = 0; n != v260; n = (char *)n + 1)
      {
        if (*(id *)v264 != v252)
          objc_enumerationMutation(obj);
        v163 = *(void **)(*((_QWORD *)&v263 + 1) + 8 * (_QWORD)n);
        v164 = objc_retainAutorelease(v256);
        sub_10001E004((const char *)objc_msgSend(v164, "UTF8String"), v163);
        v165 = sub_100009ADC(v164, v254, v163, 1);
        v166 = (void *)objc_claimAutoreleasedReturnValue(v165);
        v167 = v166;
        if (v166)
        {
          ++v160;
          if (v161)
          {
            v168 = v166;
            v161 = v161;
            v169 = (void *)objc_claimAutoreleasedReturnValue(+[HTPrefs sharedPrefs](HTPrefs, "sharedPrefs"));
            v170 = objc_msgSend(v169, "shouldSaveTailspins");

            if ((v170 & 1) != 0)
            {
              v171 = sub_1000074E0(v168);
              v172 = objc_claimAutoreleasedReturnValue(v171);
              v173 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v161, "pathExtension"));
              v174 = objc_msgSend(v173, "containsString:", CFSTR("gz"));

              if (v174)
              {
                v175 = objc_claimAutoreleasedReturnValue(-[NSObject stringByAppendingPathExtension:](v172, "stringByAppendingPathExtension:", CFSTR("gz")));

                v172 = v175;
              }
              v176 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(CFSTR("/var/mobile/Library/Logs/CrashReporter/DiagnosticLogs/HangTracer/"), "stringByAppendingPathComponent:", v172));
            }
            else
            {
              v177 = sub_10001D38C();
              v172 = objc_claimAutoreleasedReturnValue(v177);
              if (os_log_type_enabled(v172, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)buf = 0;
                _os_log_impl((void *)&_mh_execute_header, v172, OS_LOG_TYPE_DEFAULT, "shouldSaveTailspins says NO, not saving tailspin files", buf, 2u);
              }
              v176 = 0;
            }

            if (v176)
            {
              v178 = objc_retainAutorelease(v161);
              v179 = (const char *)objc_msgSend(v178, "UTF8String");
              v180 = objc_retainAutorelease(v176);
              v181 = clonefile(v179, (const char *)objc_msgSend(v180, "UTF8String"), 0) == 0;
              v182 = sub_10001D38C();
              v183 = objc_claimAutoreleasedReturnValue(v182);
              v184 = os_log_type_enabled(v183, OS_LOG_TYPE_DEFAULT);
              if (v181)
              {
                if (v184)
                {
                  *(_DWORD *)buf = 138412546;
                  *(_QWORD *)&buf[4] = v178;
                  *(_WORD *)&buf[12] = 2112;
                  *(_QWORD *)&buf[14] = v180;
                  _os_log_impl((void *)&_mh_execute_header, v183, OS_LOG_TYPE_DEFAULT, "successfully cloned %@ to %@", buf, 0x16u);
                }

                sub_10001D83C((const char *)objc_msgSend(objc_retainAutorelease(v164), "UTF8String"), (char *)objc_msgSend(objc_retainAutorelease(v180), "UTF8String"));
              }
              else
              {
                if (v184)
                {
                  *(_DWORD *)buf = 138412290;
                  *(_QWORD *)&buf[4] = v180;
                  _os_log_impl((void *)&_mh_execute_header, v183, OS_LOG_TYPE_DEFAULT, "failed to archive tailspin file %@", buf, 0xCu);
                }

              }
            }

          }
          else
          {
            v262 = 0;
            sub_100006B54(v164, v166, &v262);
            v161 = v262;
          }
        }

      }
      v260 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v263, v303, 16);
    }
    while (v260);
  }
  else
  {
    v160 = 0;
    v161 = 0;
  }

  v185 = v225;
  if (os_signpost_enabled(v185))
  {
    *(_DWORD *)buf = 67109120;
    *(_DWORD *)&buf[4] = v160;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v185, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, "TailspinConversionInterval", "NumSuccessfulReports=%{signpost.telemetry:number2}d enableTelemetry=YES ", buf, 8u);
  }

  v186 = sub_10001D38C();
  v187 = objc_claimAutoreleasedReturnValue(v186);
  if (os_log_type_enabled(v187, OS_LOG_TYPE_INFO))
  {
    v188 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v256, "lastPathComponent"));
    v189 = (void *)objc_claimAutoreleasedReturnValue(+[HTPrefs sharedPrefs](HTPrefs, "sharedPrefs"));
    v190 = objc_msgSend(v189, "shouldUploadToDiagPipe");
    *(_DWORD *)buf = 138412546;
    *(_QWORD *)&buf[4] = v188;
    *(_WORD *)&buf[12] = 1024;
    *(_DWORD *)&buf[14] = v190;
    _os_log_impl((void *)&_mh_execute_header, v187, OS_LOG_TYPE_INFO, "Post Processing %@: Should Try to Upload to Diagnostic Pipeline: %{BOOL}i", buf, 0x12u);

  }
  v191 = (void *)objc_claimAutoreleasedReturnValue(+[HTPrefs sharedPrefs](HTPrefs, "sharedPrefs"));
  v192 = objc_msgSend(v191, "shouldUploadToDiagPipe");

  if (v192)
  {
    v193 = sub_100006290(obj);
    v194 = (void *)objc_claimAutoreleasedReturnValue(v193);
    v195 = v194;
    if (v194)
    {
      v196 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v194, "objectForKeyedSubscript:", CFSTR("StartTime")));
      v197 = sub_1000061F0((unint64_t)objc_msgSend(v196, "longLongValue"));

      v198 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v195, "objectForKeyedSubscript:", CFSTR("StartTime")));
      v199 = objc_msgSend(v198, "longLongValue");

      v200 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v195, "objectForKeyedSubscript:", CFSTR("EndTime")));
      v201 = objc_msgSend(v200, "longLongValue");

      v202 = sub_1000064D8(v201 - v199);
      v203 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v195, "objectForKeyedSubscript:", CFSTR("ProcessPath")));
      if (v203)
      {
        v255 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v195, "objectForKeyedSubscript:", CFSTR("ProcessPath")));

      }
      else
      {
        v255 = 0;
      }

      queuea = (dispatch_queue_t)objc_claimAutoreleasedReturnValue(-[NSObject lastPathComponent](v255, "lastPathComponent"));
      v207 = sub_100005240(queuea, 0, v255, v195);
      v261 = (void *)objc_claimAutoreleasedReturnValue(v207);
      v208 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v261, "objectForKeyedSubscript:", CFSTR("is_first_party")));
      if (v208)
      {
        v209 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v261, "objectForKeyedSubscript:", CFSTR("is_first_party")));
        v243 = objc_msgSend(v209, "BOOLValue");

      }
      else
      {
        v243 = 1;
      }

      v210 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v195, "objectForKeyedSubscript:", CFSTR("IsThirdPartyDevSupportModeHang")));
      if (v210)
      {
        v211 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v195, "objectForKeyedSubscript:", CFSTR("IsThirdPartyDevSupportModeHang")));
        v212 = objc_msgSend(v211, "BOOLValue");

      }
      else
      {
        v212 = 0;
      }

      v213 = sub_100006094(v243, v212, v202);
      v301[0] = CFSTR("bundleid");
      v214 = sub_100005A8C(v255);
      v240 = (void *)objc_claimAutoreleasedReturnValue(v214);
      v302[0] = v240;
      v301[1] = CFSTR("durationms");
      v238 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v202));
      v302[1] = v238;
      v301[2] = CFSTR("pid");
      v253 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v195, "objectForKeyedSubscript:", CFSTR("PID")));
      if (v253)
        v215 = (const __CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v195, "objectForKeyedSubscript:", CFSTR("PID")));
      else
        v215 = &stru_100075D60;
      v230 = (__CFString *)v215;
      v302[2] = v215;
      v301[3] = CFSTR("starttime");
      v236 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", v199));
      v302[3] = v236;
      v301[4] = CFSTR("endtime");
      v234 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", v201));
      v302[4] = v234;
      v301[5] = CFSTR("walltime");
      v233 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v197));
      v302[5] = v233;
      v301[6] = CFSTR("bugtype");
      v232 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%lu"), v213));
      v302[6] = v232;
      v301[7] = CFSTR("sharewithdevs");
      v216 = +[NSNumber numberWithBool:](NSNumber, "numberWithBool:", AppAnalyticsEnabled());
      v217 = (void *)objc_claimAutoreleasedReturnValue(v216);
      v302[7] = v217;
      v301[8] = CFSTR("adamid");
      v218 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v261, "objectForKeyedSubscript:", CFSTR("adam_id")));
      if (v218)
        v219 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v261, "objectForKeyedSubscript:", CFSTR("adam_id")));
      else
        v219 = &stru_100075D60;
      v302[8] = v219;
      v301[9] = CFSTR("appversion");
      v220 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v261, "objectForKeyedSubscript:", CFSTR("app_version")));
      if (v220)
        v221 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v261, "objectForKeyedSubscript:", CFSTR("app_version")));
      else
        v221 = &stru_100075D60;
      v302[9] = v221;
      v301[10] = CFSTR("HangUUID");
      v222 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v195, "objectForKeyedSubscript:"));
      v302[10] = v222;
      v223 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v302, v301, 11));

      if (v220)
      if (v218)

      if (v253)
      sub_10000CCE8(v243, 1, v195, v256, v223);

      v206 = v255;
    }
    else
    {
      v204 = sub_10001D38C();
      v205 = objc_claimAutoreleasedReturnValue(v204);
      v206 = v205;
      if (os_log_type_enabled(v205, OS_LOG_TYPE_FAULT))
      {
        sub_100037AF0((uint64_t)v256, obj, v205);
        v206 = v205;
      }
    }

  }
  unlink((const char *)objc_msgSend(objc_retainAutorelease(v256), "UTF8String"));

LABEL_226:
LABEL_227:

}

void sub_10000FF3C(_Unwind_Exception *a1)
{
  _Block_object_dispose(&STACK[0x248], 8);
  _Block_object_dispose(&STACK[0x2F8], 8);
  _Unwind_Resume(a1);
}

intptr_t sub_10000FF98(uint64_t a1, int a2)
{
  id v4;
  NSObject *v5;
  NSObject *v6;
  uint64_t v7;
  const char *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  int v13;
  uint64_t v14;

  v4 = sub_10001D38C();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = v5;
  if (a2)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      v7 = *(_QWORD *)(a1 + 32);
      v13 = 138412290;
      v14 = v7;
      v8 = "Successfully augmented tailspin at %@ with symbols";
      v9 = v6;
      v10 = OS_LOG_TYPE_INFO;
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v9, v10, v8, (uint8_t *)&v13, 0xCu);
    }
  }
  else if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v11 = *(_QWORD *)(a1 + 32);
    v13 = 138412290;
    v14 = v11;
    v8 = "Failed to augment tailspin at %@ with symbols";
    v9 = v6;
    v10 = OS_LOG_TYPE_DEFAULT;
    goto LABEL_6;
  }

  return dispatch_semaphore_signal((dispatch_semaphore_t)qword_1000801F0);
}

id sub_100010098(uint64_t a1)
{
  void *v1;
  void *v2;
  const __CFString *v4;
  void *v5;

  v4 = CFSTR("DurationSec");
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", *(double *)(a1 + 32)));
  v5 = v1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v5, &v4, 1));

  return v2;
}

void sub_100010138(uint64_t a1, void *a2)
{
  void (**v3)(id, void *, id, id, id, void *);
  id v4;
  id v5;
  uint64_t v6;
  void *i;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id obj;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];

  v3 = a2;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  obj = *(id *)(a1 + 32);
  v4 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v18;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(_QWORD *)v18 != v6)
          objc_enumerationMutation(obj);
        v8 = *(void **)(*((_QWORD *)&v17 + 1) + 8 * (_QWORD)i);
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("StartTime")));
        v10 = objc_msgSend(v9, "unsignedLongLongValue");

        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("EndTime")));
        v12 = objc_msgSend(v11, "unsignedLongLongValue");

        v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("CAFenceId")));
        v14 = objc_msgSend(v13, "unsignedLongLongValue");

        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("RecentAppsDict")));
        v3[2](v3, v8, v10, v12, v14, v15);

      }
      v5 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
    }
    while (v5);
  }

}

void sub_1000102EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v3[4];
  id v4;
  uint64_t v5;

  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100010360;
  v3[3] = &unk_100075248;
  v5 = a2;
  v2 = *(_QWORD *)(a1 + 40);
  v4 = *(id *)(a1 + 32);
  (*(void (**)(uint64_t, _QWORD *))(v2 + 16))(v2, v3);

}

void sub_100010360(uint64_t a1, void *a2, unint64_t a3, unint64_t a4, uint64_t a5, void *a6)
{
  id v11;
  id v12;
  uint64_t v13;
  int v15;
  HRFenceInfo *v16;
  void *v17;
  id v18;
  NSObject *v19;
  HRFenceInfo *v20;
  id v21;

  v11 = a2;
  v12 = a6;
  v13 = *(_QWORD *)(a1 + 40);
  if (*(_QWORD *)(v13 + 8) == a5 && *(_QWORD *)v13 >= a3 && *(_QWORD *)v13 <= a4)
  {
    v15 = *(_DWORD *)(v13 + 48);
    if ((v15 & 1) != 0)
    {
      v20 = sub_1000068D8(*(void **)(a1 + 32), a5, a3, a4);
      v17 = (void *)objc_claimAutoreleasedReturnValue(v20);
      objc_msgSend(v17, "setFenceStartTime:", **(_QWORD **)(a1 + 40));
      v21 = sub_10001D38C();
      v19 = objc_claimAutoreleasedReturnValue(v21);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEBUG))
        sub_100038008();
      goto LABEL_12;
    }
    if ((v15 & 2) != 0)
    {
      v16 = sub_1000068D8(*(void **)(a1 + 32), a5, a3, a4);
      v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
      objc_msgSend(v17, "setFenceEndTime:", **(_QWORD **)(a1 + 40));
      v18 = sub_10001D38C();
      v19 = objc_claimAutoreleasedReturnValue(v18);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEBUG))
        sub_100037FA8();
LABEL_12:

    }
  }

}

void sub_100010494(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v3[4];
  id v4;
  uint64_t v5;

  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100010508;
  v3[3] = &unk_100075248;
  v5 = a2;
  v2 = *(_QWORD *)(a1 + 40);
  v4 = *(id *)(a1 + 32);
  (*(void (**)(uint64_t, _QWORD *))(v2 + 16))(v2, v3);

}

void sub_100010508(uint64_t a1, void *a2, unint64_t a3, unint64_t a4, uint64_t a5, void *a6)
{
  id v11;
  id v12;
  unint64_t *v13;
  unint64_t v14;
  HRFenceInfo *v16;
  void *v17;
  id v18;
  NSObject *v19;

  v11 = a2;
  v12 = a6;
  v13 = *(unint64_t **)(a1 + 40);
  if (v13[1] == a5)
  {
    v14 = *v13;
    if (v14 >= a3 && v14 <= a4)
    {
      v16 = sub_1000068D8(*(void **)(a1 + 32), a5, a3, a4);
      v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
      objc_msgSend(v17, "setResolution:", 2);
      v18 = sub_10001D38C();
      v19 = objc_claimAutoreleasedReturnValue(v18);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEBUG))
        sub_100038068();

    }
  }

}

void sub_1000105DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD v4[4];
  id v5;
  id v6;
  id v7;
  uint64_t v8;

  v3 = *(_QWORD *)(a1 + 56);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100010680;
  v4[3] = &unk_100075298;
  v8 = a2;
  v5 = *(id *)(a1 + 32);
  v6 = *(id *)(a1 + 40);
  v7 = *(id *)(a1 + 48);
  (*(void (**)(uint64_t, _QWORD *))(v3 + 16))(v3, v4);

}

void sub_100010680(uint64_t a1, void *a2, unint64_t a3, unint64_t a4, uint64_t a5, void *a6)
{
  id v11;
  id v12;
  uint64_t v13;
  int v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  void *v21;
  BOOL v22;
  void *v23;
  void *v24;
  void *v25;
  unsigned int v26;
  id v27;
  NSObject *v28;
  uint64_t v29;
  id v30;
  NSObject *v31;
  void *v32;
  void *v33;
  int v34;
  id v35;
  _QWORD **v36;
  uint64_t v37;
  HRHandleInfo *v38;
  void *v39;
  id v40;
  NSObject *v41;
  id v42;
  _QWORD **v43;
  uint64_t v44;
  HRHandleInfo *v45;
  id v46;
  id v47;
  _QWORD v48[6];
  uint64_t v49;
  _QWORD v50[2];
  int v51;
  uint8_t buf[4];
  uint64_t v53;

  v11 = a2;
  v12 = a6;
  v13 = *(_QWORD *)(a1 + 56);
  if (*(_QWORD *)(v13 + 16) == a5 && *(_QWORD *)v13 >= a3 && *(_QWORD *)v13 <= a4)
  {
    v15 = *(_DWORD *)(v13 + 88);
    if (v15 == -1)
    {
      v16 = *(_QWORD *)(v13 + 40);
      v47 = *(id *)(a1 + 32);
      v17 = (void *)qword_100080178;
      if (!qword_100080178)
      {
        v18 = objc_alloc_init((Class)NSMutableDictionary);
        v19 = (void *)qword_100080178;
        qword_100080178 = (uint64_t)v18;

        v17 = (void *)qword_100080178;
      }
      v49 = 0;
      v50[0] = &v49;
      v50[1] = 0x2020000000;
      v51 = -1;
      v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", v16));
      v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "objectForKeyedSubscript:", v20));
      v22 = v21 == 0;

      if (v22)
      {
        v48[0] = _NSConcreteStackBlock;
        v48[1] = 3221225472;
        v48[2] = sub_100011AD4;
        v48[3] = &unk_1000753C8;
        v48[4] = &v49;
        v48[5] = v16;
        objc_msgSend(v47, "enumerateTasks:", v48);
        v29 = *(unsigned int *)(v50[0] + 24);
        if ((_DWORD)v29 == -1)
        {
          v30 = sub_10001D38C();
          v31 = objc_claimAutoreleasedReturnValue(v30);
          if (os_log_type_enabled(v31, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)buf = 134217984;
            v53 = v16;
            _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_INFO, "Null pid in ktrace data: iterated SA threads and did NOT find threadid %llu (or its pid)", buf, 0xCu);
          }

          v29 = *(unsigned int *)(v50[0] + 24);
        }
        v28 = objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", v29));
        v32 = (void *)qword_100080178;
        v33 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", v16));
        objc_msgSend(v32, "setObject:forKeyedSubscript:", v28, v33);

      }
      else
      {
        v23 = (void *)qword_100080178;
        v24 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", v16));
        v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v23, "objectForKeyedSubscript:", v24));
        v26 = objc_msgSend(v25, "intValue");
        *(_DWORD *)(v50[0] + 24) = v26;

        v27 = sub_10001D38C();
        v28 = objc_claimAutoreleasedReturnValue(v27);
        if (os_log_type_enabled(v28, OS_LOG_TYPE_DEBUG))
          sub_100038188((uint64_t)v50, v16, v28);
      }

      v15 = *(_DWORD *)(v50[0] + 24);
      _Block_object_dispose(&v49, 8);

      v13 = *(_QWORD *)(a1 + 56);
    }
    v34 = *(_DWORD *)(v13 + 48);
    if ((v34 & 1) != 0)
    {
      v42 = sub_1000068D8(*(void **)(a1 + 40), *(_QWORD *)(v13 + 16), a3, a4);
      v44 = *(_QWORD *)(a1 + 56);
      v43 = (_QWORD **)(a1 + 56);
      v45 = sub_1000069A0(*(v43 - 1), *(_QWORD *)(v44 + 16), *(_QWORD *)(v44 + 8), v15, a3, a4);
      v39 = (void *)objc_claimAutoreleasedReturnValue(v45);
      objc_msgSend(v39, "setHandleStartTime:", **v43);
      v46 = sub_10001D38C();
      v41 = objc_claimAutoreleasedReturnValue(v46);
      if (os_log_type_enabled(v41, OS_LOG_TYPE_DEBUG))
        sub_100038128();
      goto LABEL_24;
    }
    if ((v34 & 2) != 0)
    {
      v35 = sub_1000068D8(*(void **)(a1 + 40), *(_QWORD *)(v13 + 16), a3, a4);
      v37 = *(_QWORD *)(a1 + 56);
      v36 = (_QWORD **)(a1 + 56);
      v38 = sub_1000069A0(*(v36 - 1), *(_QWORD *)(v37 + 16), *(_QWORD *)(v37 + 8), v15, a3, a4);
      v39 = (void *)objc_claimAutoreleasedReturnValue(v38);
      objc_msgSend(v39, "setHandleEndTime:", **v36);
      v40 = sub_10001D38C();
      v41 = objc_claimAutoreleasedReturnValue(v40);
      if (os_log_type_enabled(v41, OS_LOG_TYPE_DEBUG))
        sub_1000380C8();
LABEL_24:

    }
  }

}

void sub_100010A60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

intptr_t sub_100010A88(uint64_t a1)
{
  ktrace_session_destroy(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 0;
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

uint64_t sub_100010AC4(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  if (result)
    return ktrace_end(result, 1);
  return result;
}

void sub_100010AE0(id *a1, void *a2, _BYTE *a3, _BYTE *a4, uint64_t a5, void *a6)
{
  id v8;
  id v9;
  NSObject *v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  void *i;
  void *v24;
  void *v25;
  id v26;
  HRHandleStateChange *v27;
  HRHandleStateChange *v28;
  void *v29;
  id v30;
  id v31;
  int v32;
  unint64_t v33;
  uint64_t v34;
  void *j;
  void *v36;
  id v37;
  NSObject *v38;
  id v39;
  NSObject *v40;
  id v41;
  NSObject *v42;
  unsigned int v43;
  id v44;
  id v45;
  unsigned int v46;
  id v47;
  id v48;
  unsigned int v49;
  char *v50;
  id v51;
  id v52;
  NSObject *v53;
  NSObject *v54;
  id v55;
  NSObject *v56;
  unint64_t v57;
  id v58;
  unsigned int v59;
  unint64_t v60;
  id v61;
  unsigned int v62;
  void *v63;
  void *v64;
  id v65;
  NSObject *v66;
  id v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  id v72;
  NSObject *v73;
  void *v74;
  _BYTE *v75;
  void *v76;
  _BYTE *v77;
  unint64_t v78;
  void *v79;
  unsigned int v80;
  void *v81;
  NSString *v82;
  const __CFString *v83;
  id v84;
  NSObject *v85;
  void *v86;
  void *v87;
  _BYTE *v88;
  const __CFString *v89;
  void *v90;
  uint64_t v91;
  NSString *v92;
  void *v93;
  __CFString *v94;
  void *v95;
  NSString *v96;
  double v97;
  uint64_t v98;
  id v99;
  id v100;
  void *v101;
  _BYTE *v102;
  os_signpost_id_t v103;
  id v104;
  NSObject *v105;
  unsigned int v106;
  void *v107;
  void *v108;
  int v109;
  int v110;
  void *v111;
  void *v112;
  void *v113;
  void *v114;
  id v117;
  uint64_t v118;
  void *v119;
  void *v120;
  id v121;
  uint64_t v122;
  id v123;
  id obj;
  id *v125;
  NSObject *v126;
  uint64_t v127;
  id v128;
  unint64_t v129;
  void *v130;
  uint64_t v131;
  void *v132;
  void *v133;
  void *v134;
  void *v135;
  unint64_t v136;
  unint64_t v137;
  unint64_t v138;
  os_signpost_id_t v139;
  _BYTE *v140;
  _BYTE *v141;
  _QWORD v142[4];
  id v143;
  unint64_t v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  uint8_t buf[4];
  _BYTE v162[40];
  __int16 v163;
  os_signpost_id_t v164;
  __int16 v165;
  id v166;
  __int16 v167;
  _BYTE *v168;
  __int16 v169;
  int v170;
  __int16 v171;
  int v172;
  __int16 v173;
  void *v174;
  __int16 v175;
  void *v176;
  _BYTE v177[128];
  _BYTE v178[128];
  _BYTE v179[128];
  _BYTE v180[128];

  v8 = a2;
  v117 = a6;
  v9 = sub_10001D38C();
  v10 = objc_claimAutoreleasedReturnValue(v9);
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
    sub_100038200();

  v159 = 0u;
  v160 = 0u;
  v157 = 0u;
  v158 = 0u;
  v11 = a1[4];
  v121 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v157, v180, 16);
  if (v121)
  {
    v126 = 0;
    v123 = 0;
    v129 = 0;
    v118 = *(_QWORD *)v158;
    v125 = a1;
    v119 = v11;
    v120 = v8;
    do
    {
      v12 = 0;
      do
      {
        if (*(_QWORD *)v158 != v118)
          objc_enumerationMutation(v11);
        v122 = v12;
        v13 = *(void **)(*((_QWORD *)&v157 + 1) + 8 * v12);
        v153 = 0u;
        v154 = 0u;
        v155 = 0u;
        v156 = 0u;
        v134 = v13;
        obj = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "objectForKey:"));
        v128 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v153, v179, 16);
        if (v128)
        {
          v127 = *(_QWORD *)v154;
          do
          {
            v14 = 0;
            do
            {
              if (*(_QWORD *)v154 != v127)
                objc_enumerationMutation(obj);
              v131 = v14;
              v15 = *(void **)(*((_QWORD *)&v153 + 1) + 8 * v14);
              v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "objectForKey:", v134));
              v130 = v15;
              v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "objectForKey:", v15));

              v18 = objc_alloc_init((Class)NSMutableArray);
              v149 = 0u;
              v150 = 0u;
              v151 = 0u;
              v152 = 0u;
              v19 = v17;
              v20 = objc_msgSend(v19, "countByEnumeratingWithState:objects:count:", &v149, v178, 16);
              if (v20)
              {
                v21 = v20;
                v22 = *(_QWORD *)v150;
                do
                {
                  for (i = 0; i != v21; i = (char *)i + 1)
                  {
                    if (*(_QWORD *)v150 != v22)
                      objc_enumerationMutation(v19);
                    v24 = *(void **)(*((_QWORD *)&v149 + 1) + 8 * (_QWORD)i);
                    v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "objectForKey:", v24));
                    v26 = objc_msgSend(v25, "handleEndTime");
                    if (v26 >= objc_msgSend(v25, "handleStartTime"))
                    {
                      v27 = -[HRHandleStateChange initWithType:andTimestamp:andName:]([HRHandleStateChange alloc], "initWithType:andTimestamp:andName:", 0, objc_msgSend(v25, "handleStartTime"), objc_msgSend(v24, "unsignedLongLongValue"));
                      objc_msgSend(v18, "addObject:", v27);

                      v28 = -[HRHandleStateChange initWithType:andTimestamp:andName:]([HRHandleStateChange alloc], "initWithType:andTimestamp:andName:", 1, objc_msgSend(v25, "handleEndTime"), objc_msgSend(v24, "unsignedLongLongValue"));
                      objc_msgSend(v18, "addObject:", v28);

                    }
                  }
                  v21 = objc_msgSend(v19, "countByEnumeratingWithState:objects:count:", &v149, v178, 16);
                }
                while (v21);
              }

              v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "sortedArrayUsingComparator:", &stru_100075350));
              v145 = 0u;
              v146 = 0u;
              v147 = 0u;
              v148 = 0u;
              v30 = objc_msgSend(v29, "countByEnumeratingWithState:objects:count:", &v145, v177, 16);
              if (v30)
              {
                v31 = v30;
                v140 = 0;
                v32 = 0;
                v33 = 0;
                v34 = *(_QWORD *)v146;
                v132 = v29;
                do
                {
                  for (j = 0; j != v31; j = (char *)j + 1)
                  {
                    if (*(_QWORD *)v146 != v34)
                      objc_enumerationMutation(v29);
                    v36 = *(void **)(*((_QWORD *)&v145 + 1) + 8 * (_QWORD)j);
                    if (!objc_msgSend(v36, "type"))
                    {
                      if (!v32)
                        v140 = objc_msgSend(v36, "timestamp");
                      ++v32;
                      v37 = sub_10001D38C();
                      v38 = objc_claimAutoreleasedReturnValue(v37);
                      if (os_log_type_enabled(v38, OS_LOG_TYPE_DEBUG))
                      {
                        v137 = v33;
                        v46 = objc_msgSend(v134, "intValue");
                        v47 = objc_msgSend(v36, "timestamp");
                        v48 = objc_msgSend(v36, "name");
                        *(_DWORD *)buf = 67109888;
                        *(_DWORD *)v162 = v46;
                        v33 = v137;
                        *(_WORD *)&v162[4] = 2048;
                        *(_QWORD *)&v162[6] = v47;
                        v29 = v132;
                        *(_WORD *)&v162[14] = 1024;
                        *(_DWORD *)&v162[16] = v32;
                        *(_WORD *)&v162[20] = 2048;
                        *(_QWORD *)&v162[22] = v48;
                        _os_log_debug_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_DEBUG, "pid(%i): Grab handle time=%llu count=>%i handle=%llu", buf, 0x22u);
                      }

                    }
                    if (objc_msgSend(v36, "type") == (id)1)
                    {
                      if (!--v32)
                      {
                        v33 += (_BYTE *)objc_msgSend(v36, "timestamp") - v140;
                        v39 = sub_10001D38C();
                        v40 = objc_claimAutoreleasedReturnValue(v39);
                        if (os_log_type_enabled(v40, OS_LOG_TYPE_DEBUG))
                        {
                          v138 = v33;
                          v49 = objc_msgSend(v134, "intValue");
                          v50 = (char *)((_BYTE *)objc_msgSend(v36, "timestamp") - v140);
                          v51 = objc_msgSend(v36, "name");
                          *(_DWORD *)buf = 67109888;
                          *(_DWORD *)v162 = v49;
                          v33 = v138;
                          *(_WORD *)&v162[4] = 2048;
                          *(_QWORD *)&v162[6] = v50;
                          v29 = v132;
                          *(_WORD *)&v162[14] = 2048;
                          *(_QWORD *)&v162[16] = v138;
                          *(_WORD *)&v162[24] = 2048;
                          *(_QWORD *)&v162[26] = v51;
                          _os_log_debug_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_DEBUG, "pid(%i): Dropping last handle! Save time holding handle += %llu (total for pid now = %llu handle=%llu", buf, 0x26u);
                        }

                      }
                      v41 = sub_10001D38C();
                      v42 = objc_claimAutoreleasedReturnValue(v41);
                      if (os_log_type_enabled(v42, OS_LOG_TYPE_DEBUG))
                      {
                        v136 = v33;
                        v43 = objc_msgSend(v134, "intValue");
                        v44 = objc_msgSend(v36, "timestamp");
                        v45 = objc_msgSend(v36, "name");
                        *(_DWORD *)buf = 67109888;
                        *(_DWORD *)v162 = v43;
                        v33 = v136;
                        *(_WORD *)&v162[4] = 2048;
                        *(_QWORD *)&v162[6] = v44;
                        v29 = v132;
                        *(_WORD *)&v162[14] = 1024;
                        *(_DWORD *)&v162[16] = v32;
                        *(_WORD *)&v162[20] = 2048;
                        *(_QWORD *)&v162[22] = v45;
                        _os_log_debug_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_DEBUG, "pid(%i): Drop handle time=%llu count=>%i handle=%llu", buf, 0x22u);
                      }

                    }
                  }
                  v31 = objc_msgSend(v29, "countByEnumeratingWithState:objects:count:", &v145, v177, 16);
                }
                while (v31);
              }
              else
              {
                v33 = 0;
              }
              v52 = sub_10001D38C();
              v53 = objc_claimAutoreleasedReturnValue(v52);
              if (os_log_type_enabled(v53, OS_LOG_TYPE_DEBUG))
              {
                v57 = v33;
                v58 = objc_msgSend(v130, "longLongValue");
                v59 = objc_msgSend(v134, "intValue");
                *(_DWORD *)buf = 134218496;
                *(_QWORD *)v162 = v58;
                v33 = v57;
                *(_WORD *)&v162[8] = 1024;
                *(_DWORD *)&v162[10] = v59;
                *(_WORD *)&v162[14] = 2048;
                *(_QWORD *)&v162[16] = v57;
                _os_log_debug_impl((void *)&_mh_execute_header, v53, OS_LOG_TYPE_DEBUG, "fence=%lli pid=%i total_time=%lli", buf, 0x1Cu);
              }

              a1 = v125;
              if (v33 >= v129)
              {
                v123 = objc_msgSend(v134, "intValue");
                v54 = v130;

                v55 = sub_10001D38C();
                v56 = objc_claimAutoreleasedReturnValue(v55);
                if (os_log_type_enabled(v56, OS_LOG_TYPE_DEBUG))
                {
                  v60 = v33;
                  v61 = -[NSObject longLongValue](v54, "longLongValue");
                  v62 = objc_msgSend(v134, "intValue");
                  *(_DWORD *)buf = 134218240;
                  *(_QWORD *)v162 = v61;
                  v33 = v60;
                  *(_WORD *)&v162[8] = 1024;
                  *(_DWORD *)&v162[10] = v62;
                  _os_log_debug_impl((void *)&_mh_execute_header, v56, OS_LOG_TYPE_DEBUG, "fence=%lli pid=%i is the new slowest fence pid", buf, 0x12u);
                }

                v126 = v54;
                v129 = v33;
              }

              v14 = v131 + 1;
            }
            while ((id)(v131 + 1) != v128);
            v128 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v153, v179, 16);
          }
          while (v128);
        }

        v12 = v122 + 1;
        v11 = v119;
        v8 = v120;
      }
      while ((id)(v122 + 1) != v121);
      v121 = objc_msgSend(v119, "countByEnumeratingWithState:objects:count:", &v157, v180, 16);
    }
    while (v121);

    if (v126)
    {
      v63 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%i"), v123));
      v64 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v117, "objectForKeyedSubscript:", v63));

      if (!v64)
      {
        v65 = sub_10001D38C();
        v66 = objc_claimAutoreleasedReturnValue(v65);
        if (os_log_type_enabled(v66, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v66, OS_LOG_TYPE_DEFAULT, "Targent Fence PID not found in recentAppsPaths Dict, trying pathForPid", buf, 2u);
        }

        v67 = sub_100005990((int)v123);
        v64 = (void *)objc_claimAutoreleasedReturnValue(v67);
        if (!v64)
        {
          v68 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "tasksByPid"));
          v69 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", v123));
          v70 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v68, "objectForKeyedSubscript:", v69));
          v71 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v70, "lastObject"));
          v64 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v71, "mainBinaryPath"));

          v8 = v120;
        }
      }
      v72 = sub_10001D38C();
      v73 = objc_claimAutoreleasedReturnValue(v72);
      if (os_log_type_enabled(v73, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412546;
        *(_QWORD *)v162 = v64;
        *(_WORD *)&v162[8] = 1024;
        *(_DWORD *)&v162[10] = (_DWORD)v123;
        _os_log_impl((void *)&_mh_execute_header, v73, OS_LOG_TYPE_INFO, "Target Process Path: %@ (pid: %i)", buf, 0x12u);
      }

      v74 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "objectForKey:", v126));
      v75 = objc_msgSend(v74, "fenceStartTime");

      v76 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "objectForKey:", v126));
      v77 = objc_msgSend(v76, "fenceResolutionTime");

      v141 = v77;
      v78 = v77 - v75;
      j__ADClientAddValueForScalarKey(CFSTR("com.apple.hangtracer.HTLogsFenceHang.PostTailspin"), 1);
      v79 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "objectForKey:", v126));
      v80 = objc_msgSend(v79, "resolution");

      if (v80 == 2)
      {
        j__ADClientAddValueForScalarKey(CFSTR("com.apple.hangtracer.HTLogsBlownFence.Total"), 1);
        v81 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v64, "lastPathComponent"));
        v82 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("com.apple.hangtracer.HTLogsBlownFence.%@"), v81);
        v83 = CFSTR("blown-fence");
      }
      else
      {
        j__ADClientAddValueForScalarKey(CFSTR("com.apple.hangtracer.HTLogsLongFence.Total"), 1);
        v81 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v64, "lastPathComponent"));
        v82 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("com.apple.hangtracer.HTLogsLongFence.%@"), v81);
        v83 = CFSTR("long-fence");
      }
      j__ADClientAddValueForScalarKey(v82, 1);

      v86 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "objectForKey:", v126));
      v139 = (os_signpost_id_t)v75;
      if (objc_msgSend(v86, "fenceResolutionTime") == a4)
      {

      }
      else
      {
        v87 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "objectForKey:", v126));
        v88 = objc_msgSend(v87, "fenceStartTime");

        if (v88 != a3)
        {
          v89 = &stru_100075D60;
          goto LABEL_74;
        }
      }
      v89 = CFSTR("~");
LABEL_74:
      v90 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v64, "lastPathComponent"));
      v91 = (int)sub_1000064D8(v129);
      v92 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("Fence-hang-%@: %ims handling fence, %@ (fence duration=%@%ims)"), v90, v91, v83, v89, (int)sub_1000064D8(v78));
      v93 = (void *)objc_claimAutoreleasedReturnValue(v92);

      v94 = sub_100005A8C(v64);
      v95 = (void *)objc_claimAutoreleasedReturnValue(v94);
      v96 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("com.apple.hangtracer.Fence-hang.%@"), v95);
      v97 = sub_1000064D8(v129);
      j__ADClientPushValueForDistributionKey(v96, v97);
      v98 = off_10007FB68;
      v142[0] = _NSConcreteStackBlock;
      v142[1] = 3221225472;
      v142[2] = sub_1000119E4;
      v142[3] = &unk_100075378;
      v99 = v95;
      v143 = v99;
      v144 = v129;
      AnalyticsSendEventLazy(v98, v142);
      v100 = sub_100005DEC();
      v101 = (void *)objc_claimAutoreleasedReturnValue(v100);
      v103 = v139;
      v102 = v77;
      sub_100005ECC(CFSTR("Blown CA Fence Hang"), v99, v139, (uint64_t)v77, v101);

      v104 = sub_10001D38C();
      v105 = objc_claimAutoreleasedReturnValue(v104);
      if (os_log_type_enabled(v105, OS_LOG_TYPE_DEFAULT))
      {
        v133 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("PID")));
        v106 = objc_msgSend(v133, "intValue");
        v135 = v64;
        v107 = v93;
        v108 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("ProcessPath")));
        v109 = (int)sub_1000064D8(a4 - a3);
        v110 = (int)sub_1000064D8(v78);
        v111 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v120, "objectForKeyedSubscript:", CFSTR("Reason")));
        *(_DWORD *)buf = 67111938;
        *(_DWORD *)v162 = v106;
        v103 = v139;
        *(_WORD *)&v162[4] = 1024;
        *(_DWORD *)&v162[6] = (_DWORD)v123;
        *(_WORD *)&v162[10] = 2112;
        *(_QWORD *)&v162[12] = v108;
        *(_WORD *)&v162[20] = 2112;
        *(_QWORD *)&v162[22] = v135;
        *(_WORD *)&v162[30] = 2048;
        *(_QWORD *)&v162[32] = a3;
        v163 = 2048;
        v164 = v139;
        v165 = 2048;
        v166 = a4;
        v102 = v141;
        v167 = 2048;
        v168 = v141;
        v169 = 1024;
        v170 = v109;
        v171 = 1024;
        v172 = v110;
        v8 = v120;
        v173 = 2112;
        v174 = v111;
        v175 = 2112;
        v176 = v107;
        _os_log_impl((void *)&_mh_execute_header, v105, OS_LOG_TYPE_DEFAULT, "Updated fence hang info: pid=%i->%i path=%@->%@ target_start=%llu->%llu, target_end=%llu->%llu (duration=%i->%i ms); %@->%@",
          buf,
          0x6Au);

        v93 = v107;
        v64 = v135;

      }
      v112 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", v123));
      objc_msgSend(v8, "setObject:forKeyedSubscript:", v112, CFSTR("PID"));

      v113 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", v103));
      objc_msgSend(v120, "setObject:forKeyedSubscript:", v113, CFSTR("StartTime"));

      v8 = v120;
      v114 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", v102));
      objc_msgSend(v120, "setObject:forKeyedSubscript:", v114, CFSTR("EndTime"));

      objc_msgSend(v120, "setObject:forKeyedSubscript:", v93, CFSTR("Reason"));
      objc_msgSend(v120, "setObject:forKeyedSubscript:", v64, CFSTR("ProcessPath"));
      objc_msgSend(v120, "setObject:forKeyedSubscript:", &__kCFBooleanTrue, CFSTR("FenceInfoUpdated"));
      ++*(_DWORD *)(*((_QWORD *)v125[7] + 1) + 24);

      v85 = v126;
      goto LABEL_77;
    }
  }
  else
  {

  }
  v84 = sub_10001D38C();
  v85 = objc_claimAutoreleasedReturnValue(v84);
  if (os_log_type_enabled(v85, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v85, OS_LOG_TYPE_DEFAULT, "longestClientFenceName is nil, aborting!", buf, 2u);
  }
LABEL_77:

}

int64_t sub_100011964(id a1, HRHandleStateChange *a2, HRHandleStateChange *a3)
{
  HRHandleStateChange *v4;
  HRHandleStateChange *v5;
  id v6;
  int64_t v7;
  id v8;

  v4 = a2;
  v5 = a3;
  v6 = -[HRHandleStateChange timestamp](v4, "timestamp");
  if (v6 <= (id)-[HRHandleStateChange timestamp](v5, "timestamp"))
  {
    v8 = -[HRHandleStateChange timestamp](v4, "timestamp");
    if (v8 >= (id)-[HRHandleStateChange timestamp](v5, "timestamp"))
      v7 = 0;
    else
      v7 = -1;
  }
  else
  {
    v7 = 1;
  }

  return v7;
}

id sub_1000119E4(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  NSNumber *v3;
  void *v4;
  void *v5;
  _QWORD v7[4];
  _QWORD v8[4];

  v7[0] = off_10007FB70;
  v7[1] = off_10007FB88;
  v8[0] = off_10007FB78;
  v8[1] = CFSTR("Blown CA Fence Hang");
  v2 = *(_QWORD *)(a1 + 32);
  v1 = *(_QWORD *)(a1 + 40);
  v8[2] = v2;
  v7[2] = off_10007FB98;
  v7[3] = off_10007FB90;
  v3 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", sub_1000064D8(v1));
  v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  v8[3] = v4;
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v8, v7, 4));

  return v5;
}

void sub_100011AD4(uint64_t a1, void *a2, _BYTE *a3)
{
  id v5;
  void *v6;
  _QWORD *v7;
  void *v8;
  void *v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  NSObject *v14;

  v5 = a2;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "threads"));
  v7 = (_QWORD *)(a1 + 40);
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", *(_QWORD *)(a1 + 40)));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForKeyedSubscript:", v8));

  if (v9)
  {
    v10 = objc_msgSend(v5, "pid");
    v12 = *(_QWORD *)(a1 + 32);
    v11 = a1 + 32;
    *(_DWORD *)(*(_QWORD *)(v12 + 8) + 24) = v10;
    v13 = sub_10001D38C();
    v14 = objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
      sub_100038260(v7, v11, v14);

    *a3 = 1;
  }

}

void sub_100011BB0(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "readDataOfLength:", 0x4000));
  if (objc_msgSend(v3, "length"))
  {
    do
    {
      objc_msgSend(v5, "writeData:", v3);
      v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "readDataOfLength:", 0x4000));

      v3 = v4;
    }
    while (objc_msgSend(v4, "length"));
  }
  else
  {
    v4 = v3;
  }
  objc_msgSend(*(id *)(a1 + 32), "closeFile");

}

void sub_100011C90(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_fault_impl(a1, log, OS_LOG_TYPE_FAULT, a4, (uint8_t *)va, 0xEu);
}

void sub_100011CE8(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void sub_100011CF8(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 2u);
}

void sub_100011D08(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = a1;
}

void sub_100011D28(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0x26u);
}

void sub_100011D44(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_debug_impl(a1, log, OS_LOG_TYPE_DEBUG, a4, (uint8_t *)va, 0x12u);
}

void sub_100011D58(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_debug_impl(a1, log, OS_LOG_TYPE_DEBUG, a4, (uint8_t *)va, 0x36u);
}

void sub_100011D6C(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = a1;
}

void sub_100011D88(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 2u);
}

void sub_100011DAC(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, a5, 0x16u);
}

void sub_100012238(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100012250(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v6;

  v6 = a2;
  if ((unint64_t)objc_msgSend(v6, "unsignedLongLongValue") < *(_QWORD *)(a1 + 40))
  {
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 32) = objc_msgSend(v6, "unsignedLongLongValue");
    *a4 = 1;
  }

}

void sub_10001299C(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xEu);
}

const __CFString *sub_1000129AC(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 4)
    return CFSTR("Search Status Unknown");
  else
    return off_1000754C8[a1 - 1];
}

__CFString *sub_100012E38(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  __CFString *v9;
  uint64_t v10;
  void *i;
  void *v12;
  void *v13;
  unsigned __int8 v14;
  uint64_t v15;
  id v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];

  v3 = a1;
  v4 = a2;
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  v21 = 0u;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "tasksByPid"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", v4));

  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
  if (!v7)
  {

LABEL_13:
    v9 = CFSTR("unknown");
    goto LABEL_14;
  }
  v8 = v7;
  v17 = v3;
  v9 = 0;
  v10 = *(_QWORD *)v19;
  do
  {
    for (i = 0; i != v8; i = (char *)i + 1)
    {
      if (*(_QWORD *)v19 != v10)
        objc_enumerationMutation(v6);
      v12 = *(void **)(*((_QWORD *)&v18 + 1) + 8 * (_QWORD)i);
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "name"));
      v14 = objc_msgSend(v13, "isEqualToString:", CFSTR("xpcproxy"));

      if ((v14 & 1) == 0)
      {
        v15 = objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "name"));

        v9 = (__CFString *)v15;
      }
    }
    v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
  }
  while (v8);

  v3 = v17;
  if (!v9)
    goto LABEL_13;
LABEL_14:

  return v9;
}

int64_t sub_100014850(id a1, id a2, id a3)
{
  return (int64_t)_objc_msgSend(a3, "compareMaxBlockingTime:", a2);
}

int64_t sub_10001485C(id a1, id a2, id a3)
{
  return (int64_t)_objc_msgSend(a3, "compareCumulativeTime:", a2);
}

id sub_100014868(void *a1, void *a2, uint64_t a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  void *i;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v23;
  id v24;
  id v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _BYTE v30[128];

  v5 = a1;
  v6 = a2;
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", a3));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForKeyedSubscript:", v7));

  v28 = 0u;
  v29 = 0u;
  v26 = 0u;
  v27 = 0u;
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "tasksByPid"));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "objectForKeyedSubscript:", v8));

  v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v26, v30, 16);
  if (v11)
  {
    v12 = v11;
    v23 = v8;
    v24 = v6;
    v25 = v5;
    v13 = *(_QWORD *)v27;
    while (2)
    {
      for (i = 0; i != v12; i = (char *)i + 1)
      {
        if (*(_QWORD *)v27 != v13)
          objc_enumerationMutation(v10);
        v15 = *(void **)(*((_QWORD *)&v26 + 1) + 8 * (_QWORD)i);
        v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "threads"));
        v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", a3));
        v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "objectForKeyedSubscript:", v17));

        if (v18)
        {
          v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "threads"));
          v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", a3));
          v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "objectForKeyedSubscript:", v21));

          goto LABEL_11;
        }
      }
      v12 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v26, v30, 16);
      if (v12)
        continue;
      break;
    }
    v19 = 0;
LABEL_11:
    v6 = v24;
    v5 = v25;
    v8 = v23;
  }
  else
  {
    v19 = 0;
  }

  return v19;
}

void sub_100014ED8(_QWORD *a1, uint64_t *a2)
{
  _BOOL8 v3;
  void *v4;
  MakeRunnableEvent *v5;
  id v6;
  NSObject *v7;
  int v8;
  int v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  __CFString *v15;
  __int16 v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;
  __int16 v20;
  uint64_t v21;
  __int16 v22;
  _BOOL4 v23;

  if (a2[1] == a1[5] && (unint64_t)*a2 >= a1[6] && (unint64_t)*a2 <= a1[7])
  {
    v3 = *((_DWORD *)a2 + 12) == 621346816 && a2[3] != 0;
    v4 = (void *)a1[4];
    v5 = -[MakeRunnableEvent initWithMadeRunnableByThreadID:atTime:inInterrupt:]([MakeRunnableEvent alloc], "initWithMadeRunnableByThreadID:atTime:inInterrupt:", a2[5], *a2, v3);
    objc_msgSend(v4, "addObject:", v5);

    v6 = sub_10001D38C();
    v7 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
    {
      v8 = *((_DWORD *)a2 + 12);
      if (v8 == 6)
      {
        v9 = 0;
        v10 = CFSTR("MACH_MAKE_RUNNABLE");
      }
      else if (v8 == 621346816)
      {
        v9 = 0;
        v10 = CFSTR("PERF_LZ_MKRUNNABLE");
      }
      else
      {
        v10 = (__CFString *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:"));
        v9 = 1;
      }
      v11 = a2[5];
      v12 = *a2;
      v13 = a2[1];
      v14 = 138413314;
      v15 = v10;
      v16 = 2048;
      v17 = v12;
      v18 = 2048;
      v19 = v11;
      v20 = 2048;
      v21 = v13;
      v22 = 1024;
      v23 = v3;
      _os_log_debug_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "%@: %llu - thread %llx mkrunnable thread %llx inInterrupt %x", (uint8_t *)&v14, 0x30u);
      if (v9)

    }
  }
}

intptr_t sub_100015098(uint64_t a1)
{
  ktrace_session_destroy(*(_QWORD *)(a1 + 40));
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

id sub_1000150C0(char *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  id v7;
  NSObject *v8;
  char *v9;
  NSString *v10;
  void *v11;
  id v12;
  id v13;
  NSObject *v14;
  int *v15;
  char *v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  id v24;
  id v25;
  NSObject *v26;
  char *v27;
  id v28;
  id v29;
  NSObject *v30;
  id v31;
  uint64_t v32;
  id v34;
  _QWORD v35[5];
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, uint64_t);
  void (*v40)(uint64_t);
  __CFString *v41;
  uint8_t buf[4];
  char *v43;
  __int16 v44;
  char *v45;

  v36 = 0;
  v37 = &v36;
  v38 = 0x3032000000;
  v39 = sub_100015530;
  v40 = sub_100015540;
  v41 = &stru_100075D60;
  v4 = ktrace_file_open(a1, 0);
  v5 = v4;
  if (v4)
  {
    v35[0] = _NSConcreteStackBlock;
    v35[1] = 3221225472;
    v35[2] = sub_100015548;
    v35[3] = &unk_1000754F8;
    v35[4] = &v36;
    v6 = ktrace_file_iterate(v4, 0, v35);
    ktrace_file_close(v5);
    if (v6)
    {
      v7 = sub_10001D38C();
      v8 = objc_claimAutoreleasedReturnValue(v7);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        v9 = strerror(v6);
        *(_DWORD *)buf = 136315138;
        v43 = v9;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Error iterating over tailspin file: %s", buf, 0xCu);
      }

      if (a2)
      {
        v10 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("Error iterating over tailspin file: %s"), strerror(v6));
        v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
        v12 = sub_100005B2C(5, (uint64_t)v11);
        *a2 = (id)objc_claimAutoreleasedReturnValue(v12);

      }
      goto LABEL_11;
    }
    v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v37[5], "dataUsingEncoding:", 4));
    if (v19)
    {
      v34 = 0;
      v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSJSONSerialization JSONObjectWithData:options:error:](NSJSONSerialization, "JSONObjectWithData:options:error:", v19, 1, &v34));
      v21 = (char *)v34;
      v22 = v21;
      if (!v20 || v21)
      {
        v29 = sub_10001D38C();
        v30 = objc_claimAutoreleasedReturnValue(v29);
        if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412290;
          v43 = v22;
          _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, "Error deserializing JSON: %@", buf, 0xCu);
        }

        if (a2)
        {
          v31 = sub_100005B2C(5, (uint64_t)CFSTR("Error deserializing JSON from tailspin reason string"));
          v18 = 0;
          *a2 = (id)objc_claimAutoreleasedReturnValue(v31);
        }
        else
        {
          v18 = 0;
        }
      }
      else
      {
        v23 = objc_opt_class(NSArray);
        if ((objc_opt_isKindOfClass(v20, v23) & 1) != 0)
        {
          v24 = v20;
        }
        else
        {
          v32 = objc_opt_class(NSDictionary);
          if ((objc_opt_isKindOfClass(v20, v32) & 1) != 0)
          {
            v24 = objc_alloc_init((Class)NSMutableArray);
            objc_msgSend(v24, "addObject:", v20);
          }
          else
          {
            v24 = 0;
          }
        }
        v18 = v24;
      }

    }
    else
    {
      v25 = sub_10001D38C();
      v26 = objc_claimAutoreleasedReturnValue(v25);
      if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
      {
        v27 = (char *)v37[5];
        *(_DWORD *)buf = 138412290;
        v43 = v27;
        _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, "Error creating JSON data from reason string: '%@'", buf, 0xCu);
      }

      if (a2)
      {
        v28 = sub_100005B2C(5, (uint64_t)CFSTR("Error creating JSON data from reason string"));
        v18 = 0;
        *a2 = (id)objc_claimAutoreleasedReturnValue(v28);
      }
      else
      {
        v18 = 0;
      }
    }

  }
  else
  {
    if (!a2)
    {
LABEL_11:
      v18 = 0;
      goto LABEL_33;
    }
    v13 = sub_10001D38C();
    v14 = objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      v15 = __error();
      v16 = strerror(*v15);
      *(_DWORD *)buf = 136315394;
      v43 = a1;
      v44 = 2080;
      v45 = v16;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "Could not open tailspin file %s for parsing reason string, error: %s", buf, 0x16u);
    }

    v17 = sub_100005B2C(5, (uint64_t)CFSTR("Could not open tailspin file for parsing reason string"));
    v18 = 0;
    *a2 = (id)objc_claimAutoreleasedReturnValue(v17);
  }
LABEL_33:
  _Block_object_dispose(&v36, 8);

  return v18;
}

void sub_1000154EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100015530(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100015540(uint64_t a1)
{

}

uint64_t sub_100015548(uint64_t a1, uint64_t a2)
{
  int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t reason;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;

  v4 = ktrace_chunk_tag(a2);
  v5 = ktrace_chunk_version_major(a2);
  v6 = ktrace_config_create(a2);
  if (v6)
  {
    v7 = v6;
    reason = ktrace_config_get_reason();
    if (reason)
    {
      v9 = objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", reason));
      v10 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
      v11 = *(void **)(v10 + 40);
      *(_QWORD *)(v10 + 40) = v9;

      ktrace_config_destroy(v7);
      return 0;
    }
    ktrace_config_destroy(v7);
  }
  result = 1;
  if (v4 == 36867 && v5 <= 1)
  {
    v13 = ktrace_chunk_size(a2);
    v14 = ktrace_chunk_map_data(a2, 0, v13);
    v15 = objc_msgSend(objc_alloc((Class)NSData), "initWithBytesNoCopy:length:freeWhenDone:", v14, v13, 0);
    v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSPropertyListSerialization propertyListWithData:options:format:error:](NSPropertyListSerialization, "propertyListWithData:options:format:error:", v15, 0, 0, 0));
    v17 = objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "objectForKeyedSubscript:", UnsafePointer));
    v18 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
    v19 = *(void **)(v18 + 40);
    *(_QWORD *)(v18 + 40) = v17;

    ktrace_chunk_unmap_data(a2, v14, v13);
    return 0;
  }
  return result;
}

id sub_1000156A4(void *a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  const __CFString *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  xpc_object_t reply;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  unsigned int v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  void *i;
  void *v26;
  xpc_object_t empty;
  void *v28;
  void *v29;
  const char *v30;
  id v31;
  void *v32;
  void *v33;
  const char *v34;
  id v35;
  __CFString *v36;
  void *v37;
  const char *v38;
  id v39;
  id v40;
  void *v41;
  void *v42;
  _BYTE *v43;
  void *v44;
  _BYTE *v45;
  NSString *v46;
  void *v47;
  const char *v48;
  void *v49;
  void *v50;
  const char *v51;
  id v52;
  id v53;
  NSObject *v54;
  xpc_object_t xdict;
  id v57;
  void *v58;
  void *v59;
  __CFString *v60;
  uint64_t v61;
  id v62;
  id obj;
  void *v64;
  void *v65;
  xpc_object_t xarray;
  uint64_t v67;
  id v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  id v77;
  uint8_t buf[4];
  id v79;
  __int16 v80;
  id v81;
  __int16 v82;
  id v83;
  __int16 v84;
  id v85;
  __int16 v86;
  id v87;
  _BYTE v88[128];
  _BYTE v89[128];

  v3 = a1;
  v60 = a2;
  v4 = sub_10001D38C();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Getting processing hangs", buf, 2u);
  }

  if (v60)
    v6 = v60;
  else
    v6 = CFSTR("/var/root/Library/Caches/hangtracerd/spool");
  v7 = objc_claimAutoreleasedReturnValue(+[NSURL fileURLWithPath:isDirectory:](NSURL, "fileURLWithPath:isDirectory:", v6, 1));
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
  v77 = 0;
  v58 = (void *)v7;
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:", v7, 0, 0, &v77));
  v57 = v77;

  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "sortedArrayUsingComparator:", &stru_1000755F0));
  v59 = v3;
  if (v3)
    reply = xpc_dictionary_create_reply(v3);
  else
    reply = xpc_dictionary_create_empty();
  xdict = reply;
  xarray = xpc_array_create_empty();
  v73 = 0u;
  v74 = 0u;
  v75 = 0u;
  v76 = 0u;
  obj = v10;
  v12 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v73, v89, 16);
  if (v12)
  {
    v13 = v12;
    v14 = *(_QWORD *)v74;
    v61 = *(_QWORD *)v74;
    do
    {
      v15 = 0;
      v62 = v13;
      do
      {
        if (*(_QWORD *)v74 != v14)
          objc_enumerationMutation(obj);
        v16 = *(void **)(*((_QWORD *)&v73 + 1) + 8 * (_QWORD)v15);
        v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "lastPathComponent"));
        v18 = objc_msgSend(v17, "hasSuffix:", CFSTR("tailspin"));

        if (v18)
        {
          v19 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "path")));
          v20 = sub_1000150C0((char *)objc_msgSend(v19, "UTF8String"), 0);
          v21 = (void *)objc_claimAutoreleasedReturnValue(v20);

          if (v21)
          {
            v64 = v21;
            v65 = v15;
            v71 = 0u;
            v72 = 0u;
            v69 = 0u;
            v70 = 0u;
            v68 = v21;
            v22 = objc_msgSend(v68, "countByEnumeratingWithState:objects:count:", &v69, v88, 16);
            if (v22)
            {
              v23 = v22;
              v24 = *(_QWORD *)v70;
              v67 = *(_QWORD *)v70;
              do
              {
                for (i = 0; i != v23; i = (char *)i + 1)
                {
                  if (*(_QWORD *)v70 != v24)
                    objc_enumerationMutation(v68);
                  v26 = *(void **)(*((_QWORD *)&v69 + 1) + 8 * (_QWORD)i);
                  empty = xpc_dictionary_create_empty();
                  v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "objectForKeyedSubscript:", CFSTR("HangNotificationUUID")));

                  if (v28)
                  {
                    v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "objectForKeyedSubscript:", CFSTR("HangNotificationUUID")));
                    v30 = (const char *)objc_msgSend(CFSTR("hangtracer.hangid"), "UTF8String");
                    v31 = objc_retainAutorelease(v29);
                    xpc_dictionary_set_string(empty, v30, (const char *)objc_msgSend(v31, "UTF8String"));
                    v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "objectForKeyedSubscript:", CFSTR("ProcessPath")));

                    if (v32)
                    {
                      v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "objectForKeyedSubscript:", CFSTR("ProcessPath")));
                      v34 = (const char *)objc_msgSend(CFSTR("hangtracer.process_path"), "UTF8String");
                      v35 = objc_retainAutorelease(v33);
                      xpc_dictionary_set_string(empty, v34, (const char *)objc_msgSend(v35, "UTF8String"));
                      v36 = sub_100005A8C(v35);
                      v37 = (void *)objc_claimAutoreleasedReturnValue(v36);
                      v38 = (const char *)objc_msgSend(CFSTR("hangtracer.bundle_id"), "UTF8String");
                      v39 = objc_retainAutorelease(v37);
                      xpc_dictionary_set_string(empty, v38, (const char *)objc_msgSend(v39, "UTF8String"));
                      v40 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "objectForKeyedSubscript:", CFSTR("StartTime")));
                      if (v40)
                      {
                        v41 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "objectForKeyedSubscript:", CFSTR("EndTime")));

                        if (v41)
                        {
                          v42 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "objectForKeyedSubscript:", CFSTR("StartTime")));
                          v43 = objc_msgSend(v42, "unsignedLongLongValue");

                          v44 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "objectForKeyedSubscript:", CFSTR("EndTime")));
                          v45 = objc_msgSend(v44, "unsignedLongLongValue");

                          v46 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%.0f"), sub_1000064D8(v45 - v43));
                          v47 = (void *)objc_claimAutoreleasedReturnValue(v46);
                          v48 = (const char *)objc_msgSend(CFSTR("hangtracer.duration"), "UTF8String");
                          v40 = objc_retainAutorelease(v47);
                          xpc_dictionary_set_string(empty, v48, (const char *)objc_msgSend(v40, "UTF8String"));
                        }
                        else
                        {
                          v40 = 0;
                        }
                      }
                      v49 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "objectForKeyedSubscript:", CFSTR("CreatedAt")));

                      if (v49)
                      {
                        v50 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "objectForKeyedSubscript:", CFSTR("CreatedAt")));
                        v51 = (const char *)objc_msgSend(CFSTR("hangtracer.created_at"), "UTF8String");
                        v52 = objc_retainAutorelease(v50);
                        xpc_dictionary_set_string(empty, v51, (const char *)objc_msgSend(v52, "UTF8String"));
                      }
                      else
                      {
                        v52 = 0;
                      }
                      v53 = sub_10001D38C();
                      v54 = objc_claimAutoreleasedReturnValue(v53);
                      if (os_log_type_enabled(v54, OS_LOG_TYPE_DEFAULT))
                      {
                        *(_DWORD *)buf = 138413314;
                        v79 = v35;
                        v80 = 2112;
                        v81 = v39;
                        v82 = 2112;
                        v83 = v31;
                        v84 = 2112;
                        v85 = v40;
                        v86 = 2112;
                        v87 = v52;
                        _os_log_impl((void *)&_mh_execute_header, v54, OS_LOG_TYPE_DEFAULT, "createProcessingHangsReply: adding hang info - processPath %@, bundleID %@, hangUUID %@, duration %@, createdAt %@", buf, 0x34u);
                      }

                      xpc_array_append_value(xarray, empty);
                      v24 = v67;
                    }
                  }
                  else
                  {
                    v31 = 0;
                  }

                }
                v23 = objc_msgSend(v68, "countByEnumeratingWithState:objects:count:", &v69, v88, 16);
              }
              while (v23);
            }

            v14 = v61;
            v13 = v62;
            v21 = v64;
            v15 = v65;
          }

        }
        v15 = (char *)v15 + 1;
      }
      while (v15 != v13);
      v13 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v73, v89, 16);
    }
    while (v13);
  }

  xpc_dictionary_set_value(xdict, off_10007FBA8, xarray);
  return xdict;
}

void sub_100015D64()
{
  id v0;
  NSObject *v1;
  NSObject *v2;
  xpc_connection_t mach_service;
  void *v4;
  uint8_t v5[16];

  v0 = sub_10001D38C();
  v1 = objc_claimAutoreleasedReturnValue(v0);
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "Starting hangreporter service", v5, 2u);
  }

  if (qword_100080180)
    sub_1000383F0();
  if (qword_100080190 != -1)
    dispatch_once(&qword_100080190, &stru_100075610);
  v2 = (id)qword_100080188;
  mach_service = xpc_connection_create_mach_service("com.apple.hangreporter", v2, 1uLL);
  v4 = (void *)qword_100080180;
  qword_100080180 = (uint64_t)mach_service;

  xpc_connection_set_event_handler((xpc_connection_t)qword_100080180, &stru_100075538);
  xpc_connection_resume((xpc_connection_t)qword_100080180);
}

void sub_100015E4C(id a1, OS_xpc_object *a2)
{
  OS_xpc_object *v2;
  xpc_type_t type;
  char *v4;
  id v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  OS_xpc_object *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  NSObject *v23;
  _QWORD handler[4];
  OS_xpc_object *v25;
  uint8_t buf[4];
  void *v27;

  v2 = a2;
  type = xpc_get_type(v2);
  if (type == (xpc_type_t)&_xpc_type_connection)
  {
    handler[0] = _NSConcreteStackBlock;
    handler[1] = 3221225472;
    handler[2] = sub_100016010;
    handler[3] = &unk_100075560;
    v13 = v2;
    v25 = v13;
    xpc_connection_set_event_handler(v13, handler);
    xpc_connection_resume(v13);

  }
  else
  {
    if (type == (xpc_type_t)&_xpc_type_rich_error)
    {
      v4 = xpc_rich_error_copy_description(v2);
      v14 = sub_10001D38C();
      v6 = objc_claimAutoreleasedReturnValue(v14);
      if (os_log_type_enabled(v6, OS_LOG_TYPE_FAULT))
        sub_100038418((uint64_t)v4, v6, v15, v16, v17, v18, v19, v20);
    }
    else
    {
      v4 = xpc_copy_description(v2);
      v5 = sub_10001D38C();
      v6 = objc_claimAutoreleasedReturnValue(v5);
      if (os_log_type_enabled(v6, OS_LOG_TYPE_FAULT))
        sub_10003847C((uint64_t)v4, v6, v7, v8, v9, v10, v11, v12);
    }

    free(v4);
    if (v2 == (OS_xpc_object *)&_xpc_error_connection_invalid)
    {
      v21 = (void *)xpc_connection_copy_invalidation_reason(qword_100080180);
      v22 = sub_10001D38C();
      v23 = objc_claimAutoreleasedReturnValue(v22);
      if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136315138;
        v27 = v21;
        _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "invalidation reason: %s", buf, 0xCu);
      }

      free(v21);
    }
  }

}

void sub_100016010(uint64_t a1, void *a2)
{
  id v3;
  char *v4;
  id v5;
  NSObject *v6;
  _xpc_connection_s *v7;
  id v8;
  const char *string;
  char *v10;
  id v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  void *v21;
  int v22;
  char *v23;

  v3 = a2;
  if (xpc_get_type(v3) == (xpc_type_t)&_xpc_type_dictionary)
  {
    v7 = (_xpc_connection_s *)*(id *)(a1 + 32);
    v8 = v3;
    string = xpc_dictionary_get_string(v8, off_10007FBA0);
    if (string && !strcmp(string, off_10007FBB0))
    {
      v19 = sub_1000156A4(v8, 0);
      v20 = (void *)objc_claimAutoreleasedReturnValue(v19);
      if (v20)
      {
        v21 = v20;
        xpc_connection_send_message(v7, v20);

      }
    }
    else
    {
      v10 = xpc_copy_description(v8);
      v11 = sub_10001D38C();
      v12 = objc_claimAutoreleasedReturnValue(v11);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_FAULT))
        sub_1000384E0((uint64_t)v10, v12, v13, v14, v15, v16, v17, v18);

      free(v10);
    }

  }
  else
  {
    v4 = xpc_copy_description(v3);
    v5 = sub_10001D38C();
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      v22 = 136315138;
      v23 = v4;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "Encountered non-dictionary event: %s", (uint8_t *)&v22, 0xCu);
    }

    free(v4);
  }

}

void sub_1000161A8()
{
  id v0;

  v0 = (id)objc_claimAutoreleasedReturnValue(+[NSDistributedNotificationCenter defaultCenter](NSDistributedNotificationCenter, "defaultCenter"));
  objc_msgSend(v0, "postNotificationName:object:", CFSTR("com.apple.hangreporter.didSaveTailspin"), 0);

}

id sub_1000161EC(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  unsigned int v8;
  void *v9;
  unsigned int v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  NSObject *v17;
  id v18;
  NSObject *v19;
  id v20;
  NSObject *v21;
  uint64_t v22;
  id v23;
  NSObject *v24;
  id v25;
  NSObject *v26;
  NSObject *v27;
  dispatch_queue_global_t global_queue;
  void *v29;
  int v30;
  id v31;
  NSObject *v32;
  dispatch_time_t v33;
  id v34;
  NSObject *v35;
  id v36;
  NSObject *v37;
  uint64_t v38;
  id *v39;
  id v40;
  NSObject *v41;
  _QWORD v43[4];
  NSObject *v44;
  _QWORD v45[8];
  unsigned int v46;
  unint64_t v47;
  uint64_t v48;
  uint8_t v49[4];
  id v50;
  __int16 v51;
  uint64_t v52;
  __int16 v53;
  uint64_t v54;
  _BYTE buf[24];
  uint64_t v56;

  v3 = a1;
  v4 = a2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("EndTime")));
  v6 = objc_msgSend(v5, "unsignedLongLongValue");

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("HangType")));
  v8 = objc_msgSend(v7, "intValue");

  if ((v8 | 8) == 0xA)
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("PID")));
    v10 = objc_msgSend(v9, "unsignedIntValue");

    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("StartTime")));
    v12 = objc_msgSend(v11, "unsignedLongLongValue");

    v13 = objc_retainAutorelease(v3);
    v14 = ktrace_file_open(objc_msgSend(v13, "UTF8String"), 0);
    if (v14)
    {
      v15 = v14;
      v48 = 0;
      if (ktrace_file_latest_timestamp(v14, &v48))
      {
        v16 = sub_10001D38C();
        v17 = objc_claimAutoreleasedReturnValue(v16);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_FAULT))
          sub_100038700();

        ktrace_file_close(v15);
      }
      else
      {
        v47 = 0;
        if (ktrace_file_earliest_timestamp(v15, &v47))
        {
          v20 = sub_10001D38C();
          v21 = objc_claimAutoreleasedReturnValue(v20);
          if (os_log_type_enabled(v21, OS_LOG_TYPE_FAULT))
            sub_1000386A0();

          ktrace_file_close(v15);
        }
        else if (v47 >= (unint64_t)v6)
        {
          v25 = sub_10001D38C();
          v26 = objc_claimAutoreleasedReturnValue(v25);
          if (os_log_type_enabled(v26, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)buf = 134218240;
            *(_QWORD *)&buf[4] = v6;
            *(_WORD *)&buf[12] = 2048;
            *(_QWORD *)&buf[14] = v47;
            _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_INFO, "Hang ending at %llu does not overlap tailspin data starting at %llu, using hang completion time", buf, 0x16u);
          }

          ktrace_file_close(v15);
        }
        else
        {
          v22 = ktrace_session_create();
          ktrace_session_set_event_names_enabled(v22, 0);
          ktrace_set_execnames_enabled(v22, 0);
          ktrace_set_uuid_map_enabled(v22, 0);
          ktrace_set_walltimes_enabled(v22, 0);
          ktrace_set_vnode_paths_enabled(v22, 0);
          ktrace_set_thread_groups_enabled(v22, 0);
          ktrace_set_thread_cputime_enabled(v22, 0);
          ktrace_set_jetsam_coalitions_enabled(v22, 0);
          ktrace_set_coprocessor_tracing_enabled(v22, 0);
          ktrace_set_remotetime_conversion_enabled(v22, 0);
          ktrace_session_set_event_names_enabled(v22, 0);
          if (ktrace_set_ktrace_file(v22, v15, 1))
          {
            v23 = sub_10001D38C();
            v24 = objc_claimAutoreleasedReturnValue(v23);
            if (os_log_type_enabled(v24, OS_LOG_TYPE_FAULT))
              sub_100038640();

            ktrace_file_close(v15);
            ktrace_session_destroy(v22);
          }
          else
          {
            *(_QWORD *)buf = 0;
            *(_QWORD *)&buf[8] = buf;
            *(_QWORD *)&buf[16] = 0x2020000000;
            v56 = 0;
            v45[0] = _NSConcreteStackBlock;
            v45[1] = 3221225472;
            v45[2] = sub_10001681C;
            v45[3] = &unk_100075588;
            v46 = v10;
            v45[6] = v6;
            v45[7] = v12;
            v45[4] = buf;
            v45[5] = v22;
            ktrace_events_single(v22, 606208004, v45);
            v43[0] = _NSConcreteStackBlock;
            v43[1] = 3221225472;
            v43[2] = sub_1000169CC;
            v43[3] = &unk_1000755B0;
            v27 = dispatch_semaphore_create(0);
            v44 = v27;
            ktrace_set_completion_handler(v22, v43);
            global_queue = dispatch_get_global_queue(0, 0);
            v29 = (void *)objc_claimAutoreleasedReturnValue(global_queue);
            v30 = ktrace_start(v22, v29);

            if (v30)
            {
              v31 = sub_10001D38C();
              v32 = objc_claimAutoreleasedReturnValue(v31);
              if (os_log_type_enabled(v32, OS_LOG_TYPE_FAULT))
                sub_1000385E0();

              ktrace_session_destroy(v22);
            }
            else
            {
              v33 = dispatch_time(0, 100000000000);
              if (dispatch_semaphore_wait(v27, v33))
              {
                v34 = sub_10001D38C();
                v35 = objc_claimAutoreleasedReturnValue(v34);
                if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
                {
                  *(_WORD *)v49 = 0;
                  _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEFAULT, "timed out waiting for ktrace determing end of timeout hang", v49, 2u);
                }

                ktrace_end(v22, 0);
              }
              ktrace_session_destroy(v22);
              if (*(_QWORD *)(*(_QWORD *)&buf[8] + 24))
              {
                v36 = sub_10001D38C();
                v37 = objc_claimAutoreleasedReturnValue(v36);
                if (os_log_type_enabled(v37, OS_LOG_TYPE_INFO))
                {
                  v38 = *(_QWORD *)(*(_QWORD *)&buf[8] + 24);
                  *(_DWORD *)v49 = 134218496;
                  v50 = v6;
                  v51 = 2048;
                  v52 = v48;
                  v53 = 2048;
                  v54 = v38;
                  _os_log_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_INFO, "Hang timed out at %llu completed before tailspin was saved at %llu, using hang completion time %llu", v49, 0x20u);
                }

                v39 = (id *)(*(_QWORD *)&buf[8] + 24);
              }
              else
              {
                v40 = sub_10001D38C();
                v41 = objc_claimAutoreleasedReturnValue(v40);
                if (os_log_type_enabled(v41, OS_LOG_TYPE_INFO))
                {
                  *(_DWORD *)v49 = 134218240;
                  v50 = v6;
                  v51 = 2048;
                  v52 = v48;
                  _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_INFO, "Hang timed out at %llu did not complete before tailspin was saved at %llu, using tailspin end time", v49, 0x16u);
                }

                v39 = (id *)&v48;
              }
              v6 = *v39;
            }

            _Block_object_dispose(buf, 8);
          }
        }
      }
    }
    else
    {
      v18 = sub_10001D38C();
      v19 = objc_claimAutoreleasedReturnValue(v18);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_FAULT))
        sub_100038544((uint64_t)v13, v19);

    }
  }

  return v6;
}

void sub_1000167E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

void sub_10001681C(uint64_t a1, uint64_t a2)
{
  int pid_for_thread;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  NSObject *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  unint64_t v18;
  __int16 v19;
  unint64_t v20;
  __int16 v21;
  unint64_t v22;
  __int16 v23;
  uint64_t v24;

  pid_for_thread = *(_DWORD *)(a2 + 88);
  if (pid_for_thread == -1)
    pid_for_thread = ktrace_get_pid_for_thread(*(_QWORD *)(a1 + 40), *(_QWORD *)(a2 + 40));
  if (pid_for_thread == *(_DWORD *)(a1 + 64))
  {
    v5 = *(_QWORD *)(a2 + 8);
    if (v5 < *(_QWORD *)(a1 + 48))
    {
      v6 = *(_QWORD *)(a2 + 16);
      v7 = *(_QWORD *)(a1 + 56);
      if (v6 > v7)
      {
        if (v5 == v7)
        {
          v8 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
          if (!*(_QWORD *)(v8 + 24))
          {
            *(_QWORD *)(v8 + 24) = v6;
            return;
          }
          v9 = sub_10001D38C();
          v10 = objc_claimAutoreleasedReturnValue(v9);
          if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
          {
            v11 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
            v13 = *(_QWORD *)(a1 + 48);
            v12 = *(_QWORD *)(a1 + 56);
            v17 = 134218752;
            v18 = v12;
            v19 = 2048;
            v20 = v11;
            v21 = 2048;
            v22 = v6;
            v23 = 2048;
            v24 = v13;
            _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "Two overlapping hangs: start:%llu end1:%llu end2:%llu metadataEnd:%llu", (uint8_t *)&v17, 0x2Au);
          }
        }
        else
        {
          v14 = sub_10001D38C();
          v10 = objc_claimAutoreleasedReturnValue(v14);
          if (os_log_type_enabled(v10, OS_LOG_TYPE_FAULT))
          {
            v16 = *(_QWORD *)(a1 + 48);
            v15 = *(_QWORD *)(a1 + 56);
            v17 = 134218752;
            v18 = v5;
            v19 = 2048;
            v20 = v6;
            v21 = 2048;
            v22 = v15;
            v23 = 2048;
            v24 = v16;
            _os_log_fault_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_FAULT, "Overlapping hang has mismatched start time: event:%llu-%llu vs metadata:%llu-%llu", (uint8_t *)&v17, 0x2Au);
          }
        }

      }
    }
  }
}

intptr_t sub_1000169CC(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

int64_t sub_1000169D4(id a1, NSURL *a2, NSURL *a3)
{
  NSURL *v4;
  void *v5;
  void *v6;
  id v7;

  v4 = a3;
  v5 = (void *)objc_claimAutoreleasedReturnValue(-[NSURL lastPathComponent](a2, "lastPathComponent"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(-[NSURL lastPathComponent](v4, "lastPathComponent"));

  v7 = objc_msgSend(v5, "compare:", v6);
  return (int64_t)v7;
}

void sub_100016A40(id a1)
{
  dispatch_queue_attr_t v1;
  dispatch_queue_t v2;
  void *v3;
  NSObject *v4;

  v1 = dispatch_queue_attr_make_with_qos_class(0, QOS_CLASS_USER_INITIATED, 0);
  v4 = objc_claimAutoreleasedReturnValue(v1);
  v2 = dispatch_queue_create("com.apple.hangreporter.service", v4);
  v3 = (void *)qword_100080188;
  qword_100080188 = (uint64_t)v2;

}

void sub_100016A94(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_fault_impl(a1, log, OS_LOG_TYPE_FAULT, a4, (uint8_t *)va, 0x12u);
}

void sub_100016AC0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 0xCu);
}

CFDictionaryRef sub_100016AD0()
{
  return ASP_GetIndirectionTableStatistics();
}

id sub_100016AE4()
{
  size_t v0;
  char *v1;
  char *v2;
  uint64_t snapshot;
  void *v4;
  void *v5;
  size_t v7;
  const __CFString *v8;
  void *v9;

  v0 = 40 * vm_page_size;
  v7 = 40 * vm_page_size;
  v1 = (char *)malloc_type_valloc(40 * vm_page_size, 0x58B74C83uLL);
  if (!v1)
  {
    v0 = 4 * vm_page_size;
    v7 = 4 * vm_page_size;
    v1 = (char *)malloc_type_valloc(4 * vm_page_size, 0x120F1054uLL);
    if (!v1)
      return 0;
  }
  v2 = v1;
  snapshot = nand_get_snapshot(0, v1, v0, &v7);
  if ((_DWORD)snapshot)
  {
    NSLog(CFSTR("Failed to get snapshot buffer, status 0x%x\n"), snapshot);
    v4 = 0;
  }
  else
  {
    v8 = CFSTR("NANDSnapshot");
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v2, 1));
    v9 = v5;
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v9, &v8, 1));

  }
  free(v2);
  return v4;
}

__CFString *sub_10001708C(unsigned int a1)
{
  if (a1 >= 0x2A)
    return (__CFString *)(id)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%d"), a1));
  else
    return *(&off_100075630 + (char)a1);
}

__CFString *sub_1000170E4(uint64_t a1)
{
  if ((a1 - 1) >= 0x1F)
    return (__CFString *)(id)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("SIG%d"), a1));
  else
    return *(&off_100075780 + (int)a1 - 1);
}

__CFString *sub_100017138(uint64_t a1)
{
  if (a1 >= 0x10)
    return (__CFString *)(id)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%d"), a1));
  else
    return *(&off_100075878 + (int)a1);
}

__CFString *sub_100017188(uint64_t a1)
{
  __CFString *v1;

  if (a1 > 3221229822)
  {
    if (a1 <= 3306925314)
    {
      switch(a1)
      {
        case 3221229823:
          return CFSTR("thermal pressure");
        case 3306925313:
          return CFSTR("cpu violation");
        case 3306925314:
          return CFSTR("walltime violation");
      }
    }
    else if (a1 > 3735943696)
    {
      if (a1 == 3735943697)
        return CFSTR("user quit");
      if (a1 == 4227595259)
        return CFSTR("force quit");
    }
    else
    {
      if (a1 == 3306925315)
        return CFSTR("system busy");
      if (a1 == 3735883980)
        return CFSTR("resource exclusion");
    }
    goto LABEL_36;
  }
  if (a1 <= 1539435072)
  {
    switch(a1)
    {
      case 95805101:
        return CFSTR("application assertion");
      case 439025681:
        return CFSTR("input ui scene");
      case 732775916:
        return CFSTR("secure draw violation");
    }
    goto LABEL_36;
  }
  if (a1 > 1539435076)
  {
    if (a1 == 1539435077)
      return CFSTR("legacy clear the board");
    if (a1 == 2343432205)
      return CFSTR("watchdog");
    goto LABEL_36;
  }
  if (a1 == 1539435073)
    return CFSTR("languages changed");
  if (a1 != 1539435076)
  {
LABEL_36:
    v1 = (__CFString *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%#llx"), a1));
    return v1;
  }
  v1 = CFSTR("clear the board");
  return v1;
}

__CFString *sub_100017394(uint64_t a1)
{
  if ((a1 - 1) >= 4)
    return (__CFString *)(id)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%d"), a1));
  else
    return *(&off_1000758F8 + (int)a1 - 1);
}

__CFString *sub_1000173E8(uint64_t a1)
{
  if ((a1 - 1) >= 0x13)
    return (__CFString *)(id)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%d"), a1));
  else
    return *(&off_100075918 + (int)a1 - 1);
}

__CFString *sub_10001743C(uint64_t a1)
{
  if ((a1 - 1) >= 5)
    return (__CFString *)(id)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%d"), a1));
  else
    return *(&off_1000759B0 + (int)a1 - 1);
}

__CFString *sub_100017490(uint64_t a1)
{
  if ((a1 - 1) >= 9)
    return (__CFString *)(id)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%u"), a1));
  else
    return *(&off_1000759D8 + (int)a1 - 1);
}

id sub_1000174E4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = a1 - 1;
  if ((unint64_t)(a1 - 1) < 9 && ((0x17Fu >> v1) & 1) != 0)
    v2 = *(&off_100075A20 + v1);
  else
    v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%llu"), a1));
  return v2;
}

__CFString *sub_100017544(uint64_t a1)
{
  __CFString *v1;

  if (a1 <= 2343432204)
  {
    if (a1 <= 562215633)
    {
      if (a1)
      {
        if (a1 == 97132013)
        {
          return CFSTR("conditions changed");
        }
        else
        {
          if (a1 != 562215597)
            goto LABEL_37;
          return CFSTR("assertion timeout");
        }
      }
      else
      {
        return CFSTR("none");
      }
    }
    else if (a1 > 562215635)
    {
      if (a1 == 562215636)
      {
        return CFSTR("background fetch completion timeout");
      }
      else
      {
        if (a1 != 732775916)
          goto LABEL_37;
        return CFSTR("security violation");
      }
    }
    else if (a1 == 562215634)
    {
      return CFSTR("background task assertion timeout");
    }
    else
    {
      return CFSTR("background url session completion timeout");
    }
  }
  else if (a1 > 3490524076)
  {
    if (a1 > 3735905537)
    {
      if (a1 == 3735905538)
      {
        return CFSTR("termination assertion");
      }
      else
      {
        if (a1 != 3735943697)
          goto LABEL_37;
        return CFSTR("user initiated quit");
      }
    }
    else if (a1 == 3490524077)
    {
      return CFSTR("max assertions violation");
    }
    else
    {
      if (a1 != 3735883980)
        goto LABEL_37;
      return CFSTR("resource exclusion");
    }
  }
  else if (a1 > 2970726672)
  {
    if (a1 == 2970726673)
    {
      return CFSTR("process exited");
    }
    else
    {
      if (a1 != 3221229823)
        goto LABEL_37;
      return CFSTR("thermal pressure");
    }
  }
  else
  {
    if (a1 != 2343432205)
    {
      if (a1 == 2970405393)
      {
        v1 = CFSTR("max states violation");
        return v1;
      }
LABEL_37:
      v1 = (__CFString *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%#llx"), a1));
      return v1;
    }
    return CFSTR("watchdog violation");
  }
}

__CFString *sub_100017774(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) >= 5)
    return (__CFString *)(id)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%llu"), a1));
  else
    return *(&off_100075A68 + a1 - 1);
}

id sub_1000177C8(uint64_t a1)
{
  uint64_t v1;
  __CFString *v2;
  void *v3;
  void *v4;

  v1 = a1 - 1;
  if ((unint64_t)(a1 - 1) < 5 && ((0x1Du >> v1) & 1) != 0)
  {
    v4 = *(&off_100075A90 + v1);
  }
  else
  {
    v2 = sub_100017774(a1);
    v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "capitalizedString"));

  }
  return v4;
}

__CFString *sub_100017828(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) >= 3)
    return (__CFString *)(id)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%llu"), a1));
  else
    return *(&off_100075AB8 + a1 - 1);
}

__CFString *sub_10001787C(uint64_t a1)
{
  __CFString *v1;

  switch(a1)
  {
    case 1:
      return CFSTR("service timeout");
    case 1001:
      return CFSTR("chronokit");
    case 2:
      v1 = CFSTR("timeout no diags");
      break;
    default:
      v1 = (__CFString *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%llu"), a1));
      break;
  }
  return v1;
}

__CFString *sub_1000178F0(uint64_t a1)
{
  __CFString *v1;

  if (a1 == 1)
    return CFSTR("api violation");
  if (a1 == 2)
    v1 = CFSTR("internal error");
  else
    v1 = (__CFString *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%llu"), a1));
  return v1;
}

id sub_100017950(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = a1 - 1;
  if ((unint64_t)(a1 - 1) < 0x15 && ((0x183FFFu >> v1) & 1) != 0)
    v2 = *(&off_100075AD0 + v1);
  else
    v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%llu"), a1));
  return v2;
}

id sub_1000179B4(int a1, uint64_t a2)
{
  __CFString *v2;
  void *v3;
  __CFString *v4;
  __CFString *v5;
  id v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  id v11;
  __CFString *v12;
  __CFString *v13;
  __CFString *v14;
  __CFString *v15;
  id v16;

  switch(a1)
  {
    case 1:
      v2 = sub_100017138(a2);
      v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
      break;
    case 2:
      v4 = sub_1000170E4(a2);
      v3 = (void *)objc_claimAutoreleasedReturnValue(v4);
      break;
    case 3:
      v5 = sub_100017394(a2);
      v3 = (void *)objc_claimAutoreleasedReturnValue(v5);
      break;
    case 6:
      v6 = sub_1000174E4(a2);
      v3 = (void *)objc_claimAutoreleasedReturnValue(v6);
      break;
    case 7:
      v7 = sub_100017490(a2);
      v3 = (void *)objc_claimAutoreleasedReturnValue(v7);
      break;
    case 9:
      v8 = sub_1000173E8(a2);
      v3 = (void *)objc_claimAutoreleasedReturnValue(v8);
      break;
    case 10:
      v9 = sub_100017188(a2);
      v3 = (void *)objc_claimAutoreleasedReturnValue(v9);
      break;
    case 15:
      v10 = sub_100017544(a2);
      v3 = (void *)objc_claimAutoreleasedReturnValue(v10);
      break;
    case 18:
      v11 = sub_1000177C8(a2);
      v3 = (void *)objc_claimAutoreleasedReturnValue(v11);
      break;
    case 20:
      v12 = sub_10001787C(a2);
      v3 = (void *)objc_claimAutoreleasedReturnValue(v12);
      break;
    case 22:
      v13 = sub_1000178F0(a2);
      v3 = (void *)objc_claimAutoreleasedReturnValue(v13);
      break;
    case 23:
      v14 = sub_10001743C(a2);
      v3 = (void *)objc_claimAutoreleasedReturnValue(v14);
      break;
    case 27:
      v15 = sub_100017828(a2);
      v3 = (void *)objc_claimAutoreleasedReturnValue(v15);
      break;
    case 32:
      v16 = sub_100017950(a2);
      v3 = (void *)objc_claimAutoreleasedReturnValue(v16);
      break;
    default:
      v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%llu"), a2));
      break;
  }
  return v3;
}

void sub_100017B2C(id a1)
{
  uint64_t v1;
  void *v2;
  _QWORD v3[12];

  v3[0] = CFSTR("HTProfile");
  v3[1] = CFSTR("HTEPL");
  v3[2] = CFSTR("HTThirdPartyDevSupport");
  v3[3] = CFSTR("PLTasking");
  v3[4] = &stru_100075D60;
  v3[5] = CFSTR("PDSEHangTracer");
  v3[6] = CFSTR("PDSEHTBadDay");
  v3[7] = CFSTR("PDSEHTThirdParty");
  v3[8] = CFSTR("PDSEWorkflowResponsiveness");
  v3[9] = CFSTR("PDSEHTRateOnly");
  v3[10] = CFSTR("PDSESentry");
  v3[11] = CFSTR("PDSEAppLaunch");
  v1 = objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v3, 12));
  v2 = (void *)qword_1000801A0;
  qword_1000801A0 = v1;

}

void sub_100019924(id a1)
{
  HTPrefs *v1;
  void *v2;

  v1 = objc_alloc_init(HTPrefs);
  v2 = (void *)qword_1000801A8;
  qword_1000801A8 = (uint64_t)v1;

}

void sub_10001BAB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  id *v33;
  uint64_t v34;

  objc_destroyWeak(v33);
  _Block_object_dispose(&a25, 8);
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose(&a33, 8);
  _Block_object_dispose((const void *)(v34 - 208), 8);
  _Block_object_dispose((const void *)(v34 - 176), 8);
  _Block_object_dispose((const void *)(v34 - 144), 8);
  objc_destroyWeak((id *)(v34 - 104));
  _Unwind_Resume(a1);
}

void sub_10001BB14(uint64_t a1, int a2)
{
  id v3;
  NSObject *v4;
  const char *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id *v10;
  id WeakRetained;
  unsigned int v12;
  id v13;
  id v14;
  NSObject *v15;
  const __CFString *v16;
  id v17;
  const __CFString *v18;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  void *v25;
  uint8_t buf[4];
  const __CFString *v27;
  __int16 v28;
  const __CFString *v29;

  if (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) == a2)
  {
    v3 = sub_10001D38C();
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      v5 = "HTPrefs: Tasking Changed";
LABEL_16:
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, v5, buf, 2u);
    }
  }
  else if (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) == a2)
  {
    v6 = sub_10001D38C();
    v4 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      v5 = "HTPrefs: Telemetry Changed";
      goto LABEL_16;
    }
  }
  else if (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) == a2)
  {
    v7 = sub_10001D38C();
    v4 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      v5 = "HTPrefs: Profile List Changed";
      goto LABEL_16;
    }
  }
  else if (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) == a2)
  {
    v8 = sub_10001D38C();
    v4 = objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      v5 = "HTPrefs: EPL State Changed";
      goto LABEL_16;
    }
  }
  else
  {
    if (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24) != a2)
      goto LABEL_18;
    v9 = sub_10001D38C();
    v4 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      v5 = "HTPrefs: HT Self-Enablement State Changed Triggered Refresh";
      goto LABEL_16;
    }
  }

LABEL_18:
  v10 = (id *)(a1 + 80);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 80));
  v12 = objc_msgSend(WeakRetained, "hangtracerDaemonEnabled");

  objc_msgSend(*(id *)(a1 + 32), "refreshHTPrefs");
  v13 = objc_loadWeakRetained((id *)(a1 + 80));
  LODWORD(WeakRetained) = objc_msgSend(v13, "hangtracerDaemonEnabled");

  if (v12 != (_DWORD)WeakRetained)
  {
    v14 = sub_10001D38C();
    v15 = objc_claimAutoreleasedReturnValue(v14);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
    {
      if (v12)
        v16 = CFSTR("ON");
      else
        v16 = CFSTR("OFF");
      v17 = objc_loadWeakRetained(v10);
      if (objc_msgSend(v17, "hangtracerDaemonEnabled"))
        v18 = CFSTR("ON");
      else
        v18 = CFSTR("OFF");
      *(_DWORD *)buf = 138412546;
      v27 = v16;
      v28 = 2112;
      v29 = v18;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "HTPrefs: HangTracer Enabled State Changed: %@ -> %@", buf, 0x16u);

    }
    v19 = objc_loadWeakRetained(v10);
    v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", objc_msgSend(v19, "hangtracerDaemonEnabled", CFSTR("Enabled"))));
    v25 = v20;
    v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v25, &v24, 1));

    v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
    v23 = objc_loadWeakRetained(v10);
    objc_msgSend(v22, "postNotificationName:object:userInfo:", CFSTR("com.apple.hangtracer.daemonstate"), v23, v21);

  }
}

void sub_10001BE64(uint64_t a1, int a2)
{
  id v2;
  NSObject *v3;
  uint8_t v4[16];

  if (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) == a2)
  {
    v2 = sub_10001D38C();
    v3 = objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "HTPrefs: Test Reset Log Limits", v4, 2u);
    }

  }
}

void sub_10001C8C8(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_debug_impl(a1, log, OS_LOG_TYPE_DEBUG, a4, (uint8_t *)va, 0x20u);
}

BOOL sub_10001C8F8(void *a1, void *a2, float *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  float v14;
  id v15;
  NSObject *v16;
  void *v17;
  id v19;
  rusage v20;
  rusage v21;
  _QWORD v22[4];
  id v23;
  uint8_t buf[4];
  const char *v25;
  __int16 v26;
  void *v27;

  v7 = a4;
  v8 = a2;
  v9 = a1;
  v10 = (void *)objc_opt_new(SignpostSupportObjectExtractor);
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472;
  v22[2] = sub_10001CBB8;
  v22[3] = &unk_100075C10;
  v11 = v7;
  v23 = v11;
  objc_msgSend(v10, "setIntervalCompletionProcessingBlock:", v22);
  v12 = (void *)objc_opt_new(SignpostSupportSubsystemCategoryAllowlist);
  objc_msgSend(v12, "addSubsystem:category:", CFSTR("com.apple.hangtracer"), CFSTR("always_on_hang"));
  objc_msgSend(v10, "setSubsystemCategoryFilter:", v12);
  memset(&v20, 0, sizeof(v20));
  memset(&v21, 0, sizeof(v21));
  getrusage(0, &v21);
  v19 = 0;
  objc_msgSend(v10, "processLogArchiveWithPath:startDate:endDate:errorOut:", 0, v9, v8, &v19);

  v13 = v19;
  getrusage(0, &v20);
  if (a3)
  {
    v14 = (float)((float)((float)v20.ru_stime.tv_usec / 1000000.0) + (float)v20.ru_stime.tv_sec)
        - (float)((float)((float)v21.ru_stime.tv_usec / 1000000.0) + (float)v21.ru_stime.tv_sec)
        + (float)((float)((float)v20.ru_utime.tv_usec / 1000000.0) + (float)v20.ru_utime.tv_sec)
        - (float)((float)((float)v21.ru_utime.tv_usec / 1000000.0) + (float)v21.ru_utime.tv_sec);
    *a3 = v14;
  }
  if (v13)
  {
    v15 = sub_10001D38C();
    v16 = objc_claimAutoreleasedReturnValue(v15);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "localizedDescription"));
      *(_DWORD *)buf = 136315394;
      v25 = "enumerateHangIntervalsInTimeRange";
      v26 = 2112;
      v27 = v17;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "%s completed with error: %@\n", buf, 0x16u);

    }
  }

  return v13 == 0;
}

uint64_t sub_10001CBB8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

id sub_10001CBC4(void *a1, void *a2, float *a3)
{
  id v5;
  id v6;
  NSMutableArray *v7;
  id v8;
  _QWORD v10[4];
  NSMutableArray *v11;

  v5 = a2;
  v6 = a1;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_10001CCA0;
  v10[3] = &unk_100075C38;
  v7 = objc_opt_new(NSMutableArray);
  v11 = v7;
  LODWORD(a3) = sub_10001C8F8(v6, v5, a3, v10);

  if ((_DWORD)a3)
    v8 = -[NSMutableArray copy](v7, "copy");
  else
    v8 = &__NSArray0__struct;

  return v8;
}

uint64_t sub_10001CCA0(uint64_t a1, uint64_t a2)
{
  objc_msgSend(*(id *)(a1 + 32), "addObject:", a2);
  return 1;
}

id sub_10001CCC0(uint64_t a1, uint64_t a2)
{
  void *v4;
  double v5;
  double v6;
  uint64_t v7;
  NSDate *v8;
  uint64_t v9;
  double v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  float v17;
  void *i;
  void *v19;
  void *v20;
  double v21;
  double v22;
  double v23;
  double v24;
  void *v25;
  float v26;
  void *v27;
  void *v28;
  uint64_t v29;
  void *v30;
  const __CFString *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  float v36;
  id v37;
  NSObject *v38;
  id v39;
  NSObject *v40;
  void *v41;
  id v42;
  void *v43;
  void *v44;
  void *v45;
  double v46;
  double v47;
  double v48;
  void *v49;
  void *v50;
  void *v52;
  id v53;
  void *v54;
  void *v55;
  void *v56;
  id obj;
  uint64_t v58;
  id v59;
  void *v60;
  NSMutableArray *v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  float v66;
  _QWORD v67[5];
  _QWORD v68[5];
  uint8_t buf[4];
  const char *v70;
  __int16 v71;
  void *v72;
  __int16 v73;
  void *v74;
  __int16 v75;
  void *v76;
  __int16 v77;
  id v78;
  _QWORD v79[5];
  _QWORD v80[5];
  _BYTE v81[128];

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate now](NSDate, "now"));
  objc_msgSend(v4, "timeIntervalSinceReferenceDate");
  v6 = sub_10000658C((unint64_t)(v5 * 1000.0));
  v7 = mach_absolute_time();
  v8 = +[NSDate dateWithTimeIntervalSinceReferenceDate:](NSDate, "dateWithTimeIntervalSinceReferenceDate:", sub_10000652C((unint64_t)(v6 - (double)v7) + a1));
  v9 = objc_claimAutoreleasedReturnValue(v8);
  v10 = sub_10000652C(a2 - a1);
  v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate dateWithTimeInterval:sinceDate:](NSDate, "dateWithTimeInterval:sinceDate:", v9, -5.0));
  v60 = (void *)v9;
  v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate dateWithTimeInterval:sinceDate:](NSDate, "dateWithTimeInterval:sinceDate:", v9, v10 + 5.0));
  v54 = v4;
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "earlierDate:", v4));

  v66 = 0.0;
  v55 = v13;
  v56 = v11;
  v14 = sub_10001CBC4(v11, v13, &v66);
  v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
  v61 = objc_opt_new(NSMutableArray);
  v62 = 0u;
  v63 = 0u;
  v64 = 0u;
  v65 = 0u;
  v16 = v15;
  v59 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v62, v81, 16);
  if (v59)
  {
    v58 = *(_QWORD *)v63;
    obj = v16;
    v17 = 0.0;
    while (2)
    {
      for (i = 0; i != v59; i = (char *)i + 1)
      {
        if (*(_QWORD *)v63 != v58)
          objc_enumerationMutation(obj);
        v19 = *(void **)(*((_QWORD *)&v62 + 1) + 8 * (_QWORD)i);
        v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "beginDate"));
        objc_msgSend(v20, "timeIntervalSinceReferenceDate");
        v22 = v21;
        objc_msgSend(v60, "timeIntervalSinceReferenceDate");
        v24 = v22 - v23;

        v79[0] = CFSTR("startTime");
        v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "beginWallTimeStringWithTimeZoneName:", 0));
        v80[0] = v25;
        v79[1] = CFSTR("durationMS");
        objc_msgSend(v19, "durationSeconds");
        v27 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%.02f"), (float)(v26 * 1000.0)));
        v80[1] = v27;
        v79[2] = CFSTR("processName");
        v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "beginEvent"));
        v29 = objc_claimAutoreleasedReturnValue(objc_msgSend(v28, "processName"));
        v30 = (void *)v29;
        v31 = CFSTR("Unknown");
        if (v29)
          v31 = (const __CFString *)v29;
        v80[2] = v31;
        v79[3] = CFSTR("processID");
        v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "beginEvent"));
        v33 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", objc_msgSend(v32, "processID")));
        v80[3] = v33;
        v79[4] = CFSTR("relativeTimeMS");
        v34 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%+.02f"), v24 * 1000.0));
        v80[4] = v34;
        v35 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v80, v79, 5));

        -[NSMutableArray addObject:](v61, "addObject:", v35);
        objc_msgSend(v19, "durationSeconds");
        v17 = v17 + v36;
        if ((unint64_t)-[NSMutableArray count](v61, "count") >= 0x28)
        {
          v37 = sub_10001D38C();
          v38 = objc_claimAutoreleasedReturnValue(v37);
          if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 136315394;
            v70 = "getSurroundingHangIntervalsData";
            v71 = 1024;
            LODWORD(v72) = 40;
            _os_log_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_DEFAULT, "%s retrieved max logs of %d.", buf, 0x12u);
          }

          v16 = obj;
          goto LABEL_16;
        }

      }
      v16 = obj;
      v59 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v62, v81, 16);
      if (v59)
        continue;
      break;
    }
  }
  else
  {
    v17 = 0.0;
  }
LABEL_16:

  v39 = sub_10001D38C();
  v40 = objc_claimAutoreleasedReturnValue(v39);
  v41 = v16;
  if (os_log_type_enabled(v40, OS_LOG_TYPE_DEBUG))
  {
    v52 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%.02f"), (float)(v66 * 1000.0)));
    v53 = -[NSMutableArray count](v61, "count");
    *(_DWORD *)buf = 136316162;
    v70 = "getSurroundingHangIntervalsData";
    v71 = 2112;
    v72 = v56;
    v73 = 2112;
    v74 = v55;
    v75 = 2112;
    v76 = v52;
    v77 = 2048;
    v78 = v53;
    _os_log_debug_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_DEBUG, "%s retrieved hang history between windowStartDate %@ and windowEndDate %@ which took %@ms and found %lu hangs.", buf, 0x34u);

  }
  v67[0] = CFSTR("hangHistory");
  v42 = -[NSMutableArray copy](v61, "copy");
  v68[0] = v42;
  v67[1] = CFSTR("hangHistoryRetrievalTimeMS");
  v43 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%.02f"), (float)(v66 * 1000.0)));
  v68[1] = v43;
  v67[2] = CFSTR("hangHistoryCount");
  v44 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedLong:](NSNumber, "numberWithUnsignedLong:", -[NSMutableArray count](v61, "count")));
  v68[2] = v44;
  v67[3] = CFSTR("hangHistoryTotalHangTimeMS");
  v45 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%.02f"), (float)(v17 * 1000.0)));
  v68[3] = v45;
  v67[4] = CFSTR("hangHistoryForwardWindowTimeMS");
  objc_msgSend(v55, "timeIntervalSinceReferenceDate");
  v47 = v46;
  objc_msgSend(v60, "timeIntervalSinceReferenceDate");
  v49 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%.02f"), (v47 - (v10 + v48)) * 1000.0));
  v68[4] = v49;
  v50 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v68, v67, 5));

  return v50;
}

id sub_10001D38C()
{
  if (qword_1000801C0 != -1)
    dispatch_once(&qword_1000801C0, &stru_100075C58);
  return (id)qword_1000801B8;
}

void sub_10001D3CC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.hangtracer", "");
  v2 = (void *)qword_1000801B8;
  qword_1000801B8 = (uint64_t)v1;

}

id sub_10001D3FC()
{
  if (qword_1000801C8 != -1)
    dispatch_once(&qword_1000801C8, &stru_100075C78);
  return (id)qword_1000801D0;
}

void sub_10001D43C(id a1)
{
  id v1;
  void *v2;
  id v3;
  void *v4;
  _QWORD v5[5];

  v1 = objc_alloc((Class)NSSet);
  v5[0] = CFSTR("hangtracer.hangid");
  v5[1] = CFSTR("hangtracer.process_path");
  v5[2] = CFSTR("hangtracer.bundle_id");
  v5[3] = CFSTR("hangtracer.duration");
  v5[4] = CFSTR("hangtracer.created_at");
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v5, 5));
  v3 = objc_msgSend(v1, "initWithArray:", v2);
  v4 = (void *)qword_1000801D0;
  qword_1000801D0 = (uint64_t)v3;

}

id sub_10001D51C(void *a1)
{
  id v1;
  id v2;
  void *v3;
  id v4;

  v1 = a1;
  v2 = sub_10001D3FC();
  v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  v4 = objc_msgSend(v3, "containsObject:", v1);

  return v4;
}

void sub_10001D568(const char *a1, int a2)
{
  ssize_t v4;
  __int128 v5;
  unint64_t v6;
  unint64_t v7;
  void *v8;
  unsigned __int8 v9;
  ssize_t v10;
  int v11;
  id v12;
  NSObject *v13;
  NSObject *v14;
  const char *v15;
  uint32_t v16;
  id v17;
  int v18;
  id v19;
  id v20;
  NSObject *v21;
  int v22;
  __int128 v23;
  uint8_t buf[4];
  char *v25;
  __int16 v26;
  const char *v27;
  __int16 v28;
  int v29;
  int value;
  const char *v31;
  __int16 v32;
  int v33;
  char v34[10000];

  v4 = listxattr(a1, v34, 0x2710uLL, 1);
  if (v4 == -1)
  {
    v20 = sub_10001D38C();
    v21 = objc_claimAutoreleasedReturnValue(v20);
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
    {
      v22 = *__error();
      value = 136315394;
      v31 = a1;
      v32 = 1024;
      v33 = v22;
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "Unable to retrieve extended attributes of file at path %s (%{darwin.errno}d)", (uint8_t *)&value, 0x12u);
    }

  }
  else
  {
    v6 = v4;
    if (v4)
    {
      v7 = 0;
      *(_QWORD *)&v5 = 136315650;
      v23 = v5;
      while (1)
      {
        v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", &v34[v7], v23));
        v9 = sub_10001D51C(v8);

        if ((v9 & 1) == 0)
          break;
        v10 = getxattr(a1, &v34[v7], &value, 0x2710uLL, 0, 0);
        if (v10 == -1)
        {
          v18 = *__error();
          v19 = sub_10001D38C();
          v13 = objc_claimAutoreleasedReturnValue(v19);
          if (!os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
            goto LABEL_14;
          *(_DWORD *)buf = 67109120;
          LODWORD(v25) = v18;
          v14 = v13;
          v15 = "Unable to retrieve extended attribute: %{darwin.errno}d";
          v16 = 8;
          goto LABEL_13;
        }
        if (fsetxattr(a2, &v34[v7], &value, v10, 0, 0) == -1)
        {
          v11 = *__error();
          v12 = sub_10001D38C();
          v13 = objc_claimAutoreleasedReturnValue(v12);
          if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = v23;
            v25 = &v34[v7];
            v26 = 2080;
            v27 = a1;
            v28 = 1024;
            v29 = v11;
            v14 = v13;
            v15 = "Unable to copy extended attribute %s from file %s: %{darwin.errno}d";
            v16 = 28;
            goto LABEL_13;
          }
LABEL_14:

        }
        v7 += strlen(&v34[v7]) + 1;
        if (v7 >= v6)
          return;
      }
      v17 = sub_10001D38C();
      v13 = objc_claimAutoreleasedReturnValue(v17);
      if (!os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
        goto LABEL_14;
      *(_DWORD *)buf = 136315138;
      v25 = &v34[v7];
      v14 = v13;
      v15 = "Skipping copying extended attribute which is either NULL or not in allowlist: %s";
      v16 = 12;
LABEL_13:
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, v15, buf, v16);
      goto LABEL_14;
    }
  }
}

void sub_10001D83C(const char *a1, char *a2)
{
  int v4;
  int v5;
  int v6;
  id v7;
  NSObject *v8;
  const char *v9;
  int v10;
  id v11;
  int v12;
  char *v13;
  __int16 v14;
  int v15;

  v4 = open(a2, 2);
  if (v4 == -1)
  {
    v10 = *__error();
    v11 = sub_10001D38C();
    v8 = objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      v12 = 136315394;
      v13 = a2;
      v14 = 1024;
      v15 = v10;
      v9 = "Unable to copy extended attributes, failed to open file %s: %{darwin.errno}d";
      goto LABEL_7;
    }
  }
  else
  {
    v5 = v4;
    sub_10001D568(a1, v4);
    if (close(v5) != -1)
      return;
    v6 = *__error();
    v7 = sub_10001D38C();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      v12 = 136315394;
      v13 = a2;
      v14 = 1024;
      v15 = v6;
      v9 = "Unable to close file %s: %{darwin.errno}d";
LABEL_7:
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, v9, (uint8_t *)&v12, 0x12u);
    }
  }

}

void sub_10001D980(int a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  const char *v8;
  id v9;
  int v10;
  id v11;
  NSObject *v12;
  const char *v13;
  NSObject *v14;
  uint32_t v15;
  id v16;
  id v17;
  int v18;
  id v19;
  __int16 v20;
  id v21;
  __int16 v22;
  int v23;

  v5 = a2;
  v6 = a3;
  if (!v6)
  {
    v16 = sub_10001D38C();
    v12 = objc_claimAutoreleasedReturnValue(v16);
    if (!os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      goto LABEL_12;
    v18 = 138412290;
    v19 = v5;
    v13 = "Not writing extended attribute %@ since the value is nil";
LABEL_10:
    v14 = v12;
    v15 = 12;
    goto LABEL_11;
  }
  if ((sub_10001D51C(v5) & 1) == 0)
  {
    v17 = sub_10001D38C();
    v12 = objc_claimAutoreleasedReturnValue(v17);
    if (!os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      goto LABEL_12;
    v18 = 138412290;
    v19 = v5;
    v13 = "Not writing extended attribute %@ since it's not in the allowlist";
    goto LABEL_10;
  }
  v7 = objc_retainAutorelease(v5);
  v8 = (const char *)objc_msgSend(v7, "UTF8String");
  v9 = objc_retainAutorelease(v6);
  if (fsetxattr(a1, v8, objc_msgSend(v9, "UTF8String"), (size_t)objc_msgSend(v9, "lengthOfBytesUsingEncoding:", 4), 0, 0))
  {
    v10 = *__error();
    v11 = sub_10001D38C();
    v12 = objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      v18 = 138412802;
      v19 = v7;
      v20 = 2112;
      v21 = v9;
      v22 = 1024;
      v23 = v10;
      v13 = "Unable to write extended attribute %@ with value %@: %d{darwin.errno}d";
      v14 = v12;
      v15 = 28;
LABEL_11:
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, v13, (uint8_t *)&v18, v15);
    }
LABEL_12:

  }
}

void sub_10001DB60(int a1, void *a2, uint64_t a3)
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  _BYTE *v9;
  void *v10;
  double v11;
  double v12;
  NSString *v13;
  void *v14;
  __CFString *v15;
  void *v16;
  id v17;

  v5 = a2;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("HangNotificationUUID")));
  sub_10001D980(a1, CFSTR("hangtracer.hangid"), v6);

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("CreatedAt")));
  sub_10001D980(a1, CFSTR("hangtracer.created_at"), v7);

  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("EndTime")));
  v9 = objc_msgSend(v8, "unsignedLongLongValue");
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("StartTime")));
  v11 = (double)(unint64_t)(v9 - (_BYTE *)objc_msgSend(v10, "unsignedLongLongValue"));

  v12 = v11 + -24000000.0;
  if (a3 != 1)
    v12 = v11;
  v13 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%.0f"), sub_1000064D8((unint64_t)v12));
  v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
  sub_10001D980(a1, CFSTR("hangtracer.duration"), v14);

  v17 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("ProcessPath")));
  if (v17)
  {
    sub_10001D980(a1, CFSTR("hangtracer.process_path"), v17);
    v15 = sub_100005A8C(v17);
    v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
    sub_10001D980(a1, CFSTR("hangtracer.bundle_id"), v16);

  }
}

void sub_10001DD30(const char *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  int v7;
  int v8;
  int v9;
  id v10;
  NSObject *v11;
  const char *v12;
  int v13;
  id v14;
  int v15;
  const char *v16;
  __int16 v17;
  int v18;

  v5 = a2;
  v6 = a3;
  v7 = open(a1, 2);
  if (v7 == -1)
  {
    v13 = *__error();
    v14 = sub_10001D38C();
    v11 = objc_claimAutoreleasedReturnValue(v14);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      v15 = 136315394;
      v16 = a1;
      v17 = 1024;
      v18 = v13;
      v12 = "Unable to open file %s: %{darwin.errno}d";
      goto LABEL_7;
    }
LABEL_8:

    goto LABEL_9;
  }
  v8 = v7;
  sub_10001D980(v7, v5, v6);
  if (close(v8) == -1)
  {
    v9 = *__error();
    v10 = sub_10001D38C();
    v11 = objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      v15 = 136315394;
      v16 = a1;
      v17 = 1024;
      v18 = v9;
      v12 = "Unable to close file %s: %{darwin.errno}d";
LABEL_7:
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, v12, (uint8_t *)&v15, 0x12u);
      goto LABEL_8;
    }
    goto LABEL_8;
  }
LABEL_9:

}

void sub_10001DE94(int a1)
{
  id v2;
  NSObject *v3;
  _DWORD v4[2];

  if (a1 == -1)
  {
    v2 = sub_10001D38C();
    v3 = objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      v4[0] = 67109120;
      v4[1] = -1;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Bad file desctiptor %d", (uint8_t *)v4, 8u);
    }

  }
  else
  {
    fremovexattr(a1, (const char *)objc_msgSend(CFSTR("hangtracer.hangid"), "UTF8String"), 0);
    fremovexattr(a1, (const char *)objc_msgSend(CFSTR("hangtracer.created_at"), "UTF8String"), 0);
    fremovexattr(a1, (const char *)objc_msgSend(CFSTR("hangtracer.duration"), "UTF8String"), 0);
    fremovexattr(a1, (const char *)objc_msgSend(CFSTR("hangtracer.process_path"), "UTF8String"), 0);
    fremovexattr(a1, (const char *)objc_msgSend(CFSTR("hangtracer.bundle_id"), "UTF8String"), 0);
  }
}

void sub_10001E004(const char *a1, void *a2)
{
  id v3;
  int v4;
  int v5;
  void *v6;
  void *v7;
  uint64_t v8;
  int v9;
  id v10;
  NSObject *v11;
  const char *v12;
  int v13;
  id v14;
  int v15;
  const char *v16;
  __int16 v17;
  int v18;

  v3 = a2;
  v4 = open(a1, 2);
  if (v4 == -1)
  {
    v9 = *__error();
    v10 = sub_10001D38C();
    v11 = objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      v15 = 136315394;
      v16 = a1;
      v17 = 1024;
      v18 = v9;
      v12 = "Unable to open file %s: %{darwin.errno}d";
LABEL_10:
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, v12, (uint8_t *)&v15, 0x12u);
    }
LABEL_11:

    goto LABEL_12;
  }
  v5 = v4;
  sub_10001DE94(v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("ServiceName")));
  if (v6)
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("ServiceName")));
    v8 = sub_10000612C(v7);

  }
  else
  {
    v8 = 5;
  }

  sub_10001DB60(v5, v3, v8);
  if (close(v5) == -1)
  {
    v13 = *__error();
    v14 = sub_10001D38C();
    v11 = objc_claimAutoreleasedReturnValue(v14);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      v15 = 136315394;
      v16 = a1;
      v17 = 1024;
      v18 = v13;
      v12 = "Unable to close file %s: %{darwin.errno}d";
      goto LABEL_10;
    }
    goto LABEL_11;
  }
LABEL_12:

}

id sub_10001E200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  char isKindOfClass;
  int v10;
  uint64_t v12;
  id v13;

  if (!a1 || !a2)
    goto LABEL_13;
  v4 = objc_msgSend(objc_alloc((Class)NSData), "initWithBytesNoCopy:length:freeWhenDone:", a1, a2, 0);
  v13 = 0;
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSPropertyListSerialization propertyListWithData:options:format:error:](NSPropertyListSerialization, "propertyListWithData:options:format:error:", v4, 0, 0, &v13));
  v6 = v13;
  if (v5 && (objc_opt_isKindOfClass(v5, a3) & 1) != 0 && !v6)
  {
    v7 = v5;
LABEL_10:
    v7 = v7;
    v10 = 0;
    goto LABEL_12;
  }
  v12 = 0;
  v7 = (id)objc_claimAutoreleasedReturnValue(+[NSJSONSerialization JSONObjectWithData:options:error:](NSJSONSerialization, "JSONObjectWithData:options:error:", v4, 0, &v12));
  v8 = v12;

  if (v7)
  {
    isKindOfClass = objc_opt_isKindOfClass(v7, a3);
    v10 = 1;
    if ((isKindOfClass & 1) != 0 && !v8)
      goto LABEL_10;
  }
  else
  {
    v10 = 1;
  }
LABEL_12:

  if (v10)
LABEL_13:
    v7 = 0;
  return v7;
}

id sub_10001E32C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = objc_opt_class(NSDictionary);
  return sub_10001E200(a1, a2, v4);
}

id sub_10001E364(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v17;
  const __CFString *v18;
  uint64_t v19;

  v4 = ktrace_chunk_map_data(a1, 0, a2);
  if (!v4)
    return 0;
  v5 = v4;
  v6 = sub_10001E32C(v4, a2);
  v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  if (v7)
  {
    v8 = objc_msgSend(v7, "objectForKey:checkingKindOfClass:", CFSTR("AGXAccelerator"), objc_opt_class(NSArray));
    v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "firstObject"));
    v11 = objc_opt_class(NSDictionary);
    if ((objc_opt_isKindOfClass(v10, v11) & 1) != 0)
    {
      v12 = objc_msgSend(v10, "objectForKey:checkingKindOfClass:", CFSTR("SchedulerState"), objc_opt_class(NSDictionary));
      v13 = objc_claimAutoreleasedReturnValue(v12);
      v14 = (void *)v13;
      if (v13)
      {
        v18 = CFSTR("IORegGPUAGXSchedulerState");
        v19 = v13;
        v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v19, &v18, 1));
      }
      else
      {
        v15 = 0;
      }

    }
    else
    {
      v15 = 0;
    }
    ktrace_chunk_unmap_data(a1, v5, a2);
    v17 = v15;

  }
  else
  {
    ktrace_chunk_unmap_data(a1, v5, a2);
    v17 = 0;
  }

  return v17;
}

id sub_10001E50C(void *a1)
{
  id v1;
  id v2;
  NSObject *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  id v8;
  NSObject *v9;
  const char *v10;
  NSObject *v11;
  uint32_t v12;
  id v13;
  id v14;
  _QWORD v16[6];
  uint8_t v17[4];
  int v18;
  __int128 buf;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  void (*v22)(uint64_t);
  id v23;

  v1 = a1;
  v2 = sub_10001D38C();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    LODWORD(buf) = 138412290;
    *(_QWORD *)((char *)&buf + 4) = v1;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Fetching IOReg GPU AGX Scheduler State from tailspin : %@\n", (uint8_t *)&buf, 0xCu);
  }

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v20 = 0x3032000000;
  v21 = sub_10001E740;
  v22 = sub_10001E750;
  v23 = 0;
  v4 = objc_retainAutorelease(v1);
  v5 = ktrace_file_open(objc_msgSend(v4, "UTF8String"), 0);
  v6 = v5;
  if (!v5)
  {
    v13 = sub_10001D38C();
    v9 = objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v17 = 0;
      v10 = "Failed opening tailspin file for ktrace iteration";
      v11 = v9;
      v12 = 2;
      goto LABEL_9;
    }
LABEL_10:

    goto LABEL_11;
  }
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_10001E758;
  v16[3] = &unk_100075CA0;
  v16[4] = &buf;
  v16[5] = v5;
  v7 = ktrace_file_iterate(v5, 0, v16);
  ktrace_file_close(v6);
  if (v7)
  {
    v8 = sub_10001D38C();
    v9 = objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)v17 = 67109120;
      v18 = v7;
      v10 = "Error iterating over tailspin file: %{darwin.errno}d";
      v11 = v9;
      v12 = 8;
LABEL_9:
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, v10, v17, v12);
      goto LABEL_10;
    }
    goto LABEL_10;
  }
LABEL_11:
  v14 = *(id *)(*((_QWORD *)&buf + 1) + 40);
  _Block_object_dispose(&buf, 8);

  return v14;
}

void sub_10001E714(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10001E740(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10001E750(uint64_t a1)
{

}

BOOL sub_10001E758(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  NSObject *v11;
  uint8_t v13[16];

  v4 = ktrace_chunk_tag(a2);
  v5 = ktrace_chunk_size(a2);
  if (v4 == 32776)
  {
    v6 = sub_10001E364(a2, v5);
    v7 = objc_claimAutoreleasedReturnValue(v6);
    v8 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
    v9 = *(void **)(v8 + 40);
    *(_QWORD *)(v8 + 40) = v7;

    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40))
    {
      v10 = sub_10001D38C();
      v11 = objc_claimAutoreleasedReturnValue(v10);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)v13 = 0;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "Found and fetched AGX SchedulerState info from IOReg GPU", v13, 2u);
      }

    }
  }
  return v4 != 32776;
}

void sub_10001E900()
{
  id v0;
  NSObject *v1;
  void *v2;
  uint8_t v3[16];

  v0 = sub_10001D38C();
  v1 = objc_claimAutoreleasedReturnValue(v0);
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "marking hangreporter as clean to exit", v3, 2u);
  }

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)qword_1000801E0, "transaction"));
  if (v2)
    objc_msgSend((id)qword_1000801E0, "setTransaction:", 0);
}

void sub_10001F264(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{

  _Unwind_Resume(a1);
}

void sub_10001F2B8(id a1)
{
  HTFixedSizeQueue *v1;
  void *v2;
  id v3;
  NSObject *v4;
  uint8_t v5[16];

  v1 = -[HTFixedSizeQueue initWithSize:]([HTFixedSizeQueue alloc], "initWithSize:", 128);
  v2 = (void *)qword_1000801E0;
  qword_1000801E0 = (uint64_t)v1;

  if (!qword_1000801E0)
  {
    v3 = sub_10001D38C();
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Unable to instantiate queue to hold process launch and exit records, exiting", v5, 2u);
    }

    exit(12);
  }
}

void sub_10001F9D4(const char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  char __str[1024];

  bzero(__str, 0x400uLL);
  if (!qword_1000801F8)
  {
    qword_1000801F8 = (uint64_t)malloc_type_calloc(0x400uLL, 1uLL, 0x100004077774924uLL);
    vsnprintf(__str, 0x400uLL, a1, &a9);
    snprintf((char *)qword_1000801F8, 0x400uLL, "%s", __str);
  }
}

uint64_t sub_10001FAA0(uint64_t a1, uint64_t *a2, unsigned int a3)
{
  uint64_t result;
  unsigned int v6;
  int v7;
  uint64_t *v8;
  unint64_t v9;
  unint64_t v10;
  unsigned int v11;
  uint64_t v13;
  uint64_t *v14;
  unsigned int v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  const char *v20;
  uint64_t v21;
  int v22;

  *(_DWORD *)(a1 + 36) = -1;
  if (a3 < 8)
    return 0;
  v6 = a3 >> 3;
  while (2)
  {
    v9 = *a2;
    v8 = a2 + 1;
    v7 = v9;
    v10 = HIDWORD(v9);
    v11 = v6 - 1;
    if (v9 > 0x30000000 || v11 < v10)
    {
      result = 0;
      *(_DWORD *)(a1 + 32) = 0;
      return result;
    }
    v13 = (v7 - 1);
    if (v13 <= 0x47)
      __asm { BR              X10 }
    v17 = (v7 - 73);
    if (v17 <= 0x46)
      __asm { BR              X10 }
    switch(v7)
    {
      case 144:
        v18 = *v8;
        v19 = "numMemExtreme";
        goto LABEL_13;
      case 145:
        v18 = *v8;
        v19 = "maxMemExtremeDuration";
        goto LABEL_13;
      case 146:
        v18 = *v8;
        v19 = "memExtremeDuration";
        goto LABEL_13;
      case 147:
        v18 = *v8;
        v19 = "bandGetsExtreme";
        goto LABEL_13;
      case 148:
        v18 = *v8;
        v19 = "bandGetsLow";
        goto LABEL_13;
      case 149:
        v18 = *v8;
        v19 = "numHostChoke";
        goto LABEL_13;
      case 152:
        v18 = *v8;
        v19 = "AbortSkip_ProgramError";
        goto LABEL_13;
      case 153:
        v18 = *v8;
        v19 = "AbortSkip_ReadErrorOpenBand";
        goto LABEL_13;
      case 154:
        v18 = *v8;
        v19 = "AbortSkip_FailedRebuildingParity";
        goto LABEL_13;
      case 155:
        v18 = *v8;
        v19 = "AbortPad_OpenRefreshBand";
        goto LABEL_13;
      case 156:
        v18 = *v8;
        v19 = "AbortPad_CloseBands";
        goto LABEL_13;
      case 157:
        v18 = *v8;
        v19 = "AbortPad_SetPhoto";
        goto LABEL_13;
      case 158:
        v18 = *v8;
        v19 = "AbortPad_GcNoSource";
        goto LABEL_13;
      case 159:
        v18 = *v8;
        v19 = "AbortPad_Format";
        goto LABEL_13;
      case 160:
        v18 = *v8;
        v19 = "nandDiscoveryDuration";
        goto LABEL_13;
      case 161:
        v18 = *v8;
        v19 = "coreCCEnableDuration";
        goto LABEL_13;
      case 163:
        v18 = *v8;
        v19 = "coreOpenDuration";
        goto LABEL_13;
      case 164:
        v18 = *v8;
        v19 = "coreWritableDuration";
        goto LABEL_13;
      case 165:
        v18 = *v8;
        v19 = "coreClogLoadDuration";
        goto LABEL_13;
      case 167:
        v18 = *v8;
        v19 = "bulkPFail";
        goto LABEL_13;
      case 169:
        v18 = *v8;
        v19 = "bulkRFail";
        goto LABEL_13;
      case 172:
        v18 = *v8;
        v19 = "raidSmartErrors";
        goto LABEL_13;
      case 182:
        v18 = *v8;
        v19 = "internalUeccs";
        goto LABEL_13;
      case 183:
        v18 = *v8;
        v19 = "e2eFail";
        goto LABEL_13;
      case 184:
        v18 = *v8;
        v19 = "TempSensorMax";
        goto LABEL_13;
      case 185:
        v18 = *v8;
        v19 = "TempSensorMin";
        goto LABEL_13;
      case 186:
        v18 = *v8;
        v19 = "powerUpFromDDR";
        goto LABEL_13;
      case 187:
        v18 = *v8;
        v19 = "numMemLow";
        goto LABEL_13;
      case 188:
        v18 = *v8;
        v19 = "maxMemLowDuration";
        goto LABEL_13;
      case 189:
        v18 = *v8;
        v19 = "memLowDuration";
        goto LABEL_13;
      case 190:
        v18 = *v8;
        v19 = "numFences";
        goto LABEL_13;
      case 191:
        v18 = *v8;
        v19 = "hostPassiveIO";
        goto LABEL_13;
      case 192:
        v18 = *v8;
        v19 = "odtsMax";
        goto LABEL_13;
      case 193:
        v18 = *v8;
        v19 = "defragMFromOrphans";
        goto LABEL_13;
      case 194:
        v18 = *v8;
        v19 = "defragMFromFragments";
        goto LABEL_13;
      case 195:
        v18 = *v8;
        v19 = "defragMTime";
        goto LABEL_13;
      case 196:
        v18 = *v8;
        v19 = "defragMMaxTime";
        goto LABEL_13;
      case 197:
        v18 = *v8;
        v19 = "raidFailedLbaMismatch";
        goto LABEL_13;
      case 198:
        v18 = *v8;
        v19 = "numSyscfgWrites";
        goto LABEL_13;
      case 199:
        v18 = *v8;
        v19 = "indmbUnitsXfer";
        goto LABEL_13;
      case 200:
        v18 = *v8;
        v19 = "indmbUnitsCache";
        goto LABEL_13;
      case 201:
        v18 = *v8;
        v19 = "indmbUnitsInd";
        goto LABEL_13;
      case 202:
        v18 = *v8;
        v19 = "wcacheFS_Mbytes";
        goto LABEL_13;
      case 203:
        v18 = *v8;
        v19 = "wcacheDS_Mbytes";
        goto LABEL_13;
      case 204:
        v18 = *v8;
        v19 = "powerOnSeconds";
        goto LABEL_13;
      case 205:
        v18 = *v8;
        v19 = "numUnknownTokenHostRead";
        goto LABEL_13;
      case 206:
        v18 = *v8;
        v19 = "numUnmmapedTokenHostRead";
        goto LABEL_13;
      case 207:
        v20 = "numOfThrottlingEntriesPerLevel";
        v21 = a1;
        v22 = 207;
LABEL_85:
        v14 = v8;
        v15 = 16;
        goto LABEL_12;
      case 208:
        v18 = *v8;
        v19 = "wcacheFS_MbytesMin";
        goto LABEL_13;
      case 209:
        v18 = *v8;
        v19 = "wcacheFS_MbytesMax";
        goto LABEL_13;
      case 210:
        v18 = *v8;
        v19 = "prepareForShutdownFailCounter";
        goto LABEL_13;
      case 211:
        v18 = *v8;
        v19 = "lpsrEntry";
        goto LABEL_13;
      case 212:
        v18 = *v8;
        v19 = "lpsrExit";
        goto LABEL_13;
      case 213:
        v20 = "crcInternalReadFail";
        v21 = a1;
        v22 = 213;
LABEL_23:
        v14 = v8;
        v15 = 8;
        goto LABEL_12;
      case 214:
        v18 = *v8;
        v19 = "wcacheFSEvictCnt";
        goto LABEL_13;
      case 215:
        v18 = *v8;
        v19 = "wcacheFSEvictSize";
        goto LABEL_13;
      case 216:
        v18 = *v8;
        v19 = "wcacheFSWr";
        goto LABEL_13;
      case 217:
        v18 = *v8;
        v19 = "wcacheDSWr";
        goto LABEL_13;
      case 218:
        v20 = "wcacheFSEvictSizeLogDist";
        v21 = a1;
        v22 = 218;
        goto LABEL_11;
      case 219:
        v18 = *v8;
        v19 = "prepareForShutdownTimeoutCounter";
        goto LABEL_13;
      case 220:
        v18 = *v8;
        v19 = "prepareForShutdownCancelCounter";
        goto LABEL_13;
      case 221:
        v18 = *v8;
        v19 = "RD_openBandCount";
        goto LABEL_13;
      case 222:
        v18 = *v8;
        v19 = "RD_openBandNops";
        goto LABEL_13;
      case 223:
        v18 = *v8;
        v19 = "RD_closedBandEvictCount";
LABEL_13:
        v16 = (_QWORD *)a1;
LABEL_14:
        sub_1000361A4(v16, "", v19, v18);
        goto LABEL_15;
      default:
        switch(v7)
        {
          case 224:
            v18 = *v8;
            v19 = "RD_closedBandEvictSectors";
            goto LABEL_13;
          case 225:
            v18 = *v8;
            v19 = "RD_closedBandFragmentCount";
            goto LABEL_13;
          case 226:
            v18 = *v8;
            v19 = "RD_closedBandFragmentSectors";
            goto LABEL_13;
          case 227:
            v20 = "wcacheFSOverWrLogSizeCnts";
            v21 = a1;
            v22 = 227;
            goto LABEL_11;
          case 228:
            v20 = "wcacheFSOverWrSizeByFlow";
            v21 = a1;
            v22 = 228;
            goto LABEL_22;
          case 229:
            v20 = "indmbXferCountTo";
            v21 = a1;
            v22 = 229;
            goto LABEL_20;
          case 230:
            v20 = "indmbAccumulatedTimeBetweenXfers";
            v21 = a1;
            v22 = 230;
LABEL_20:
            v14 = v8;
            v15 = 2;
            goto LABEL_12;
          case 231:
            v18 = *v8;
            v19 = "maxGracefulBootTimeMs";
            goto LABEL_13;
          case 232:
            v18 = *v8;
            v19 = "maxUngracefulBootTimeMs";
            goto LABEL_13;
          case 233:
            v18 = *v8;
            v19 = "averageGracefulBootTimeMs";
            goto LABEL_13;
          case 234:
            v18 = *v8;
            v19 = "averageUngracefulBootTimeMs";
            goto LABEL_13;
          case 235:
            v20 = "gracefulBootTimeLogMs";
            v21 = a1;
            v22 = 235;
            goto LABEL_23;
          case 236:
            v20 = "ungracefulBootTimeLogMs";
            v21 = a1;
            v22 = 236;
            goto LABEL_23;
          case 237:
            v20 = "CalibrationCount";
            v21 = a1;
            v22 = 237;
            goto LABEL_22;
          case 238:
            v18 = *v8;
            v19 = "CalibrationLastTmp";
            goto LABEL_13;
          case 239:
            v18 = *v8;
            v19 = "CalibrationMaxTmp";
            goto LABEL_13;
          case 240:
            v18 = *v8;
            v19 = "CalibrationMinTmp";
            goto LABEL_13;
          case 241:
            v18 = *v8;
            v19 = "ungracefulBootWorstIndicator";
            goto LABEL_13;
          case 242:
            v18 = *v8;
            v19 = "metaMismatchReread";
            goto LABEL_13;
          case 243:
            v18 = *v8;
            v19 = "numS3SleepOps";
            goto LABEL_13;
          case 244:
            v18 = *v8;
            v19 = "odtsCurrent";
            goto LABEL_13;
          case 245:
            v18 = *v8;
            v19 = "prefetchReads";
            goto LABEL_13;
          case 246:
            v18 = *v8;
            v19 = "prefetchHits";
            goto LABEL_13;
          case 247:
            v18 = *v8;
            v19 = "prefetchWritesInvalidation";
            goto LABEL_13;
          case 248:
            v18 = *v8;
            v19 = "indmbUnitsTotal";
            goto LABEL_13;
          case 249:
            v18 = *v8;
            v19 = "selfThrottlingEngage";
            goto LABEL_13;
          case 250:
            v18 = *v8;
            v19 = "selfThrottlingDisengage";
            goto LABEL_13;
          case 252:
            v18 = *v8;
            v19 = "AbortSkip_WlpMode";
            goto LABEL_13;
          case 253:
            v18 = *v8;
            v19 = "hostWritesWlpMode";
            goto LABEL_13;
          case 254:
            v18 = *v8;
            v19 = "numClogDoubleUnc";
            goto LABEL_13;
          case 256:
            v18 = *v8;
            v19 = "AbortPad_WlpMode";
            goto LABEL_13;
          case 257:
            v18 = *v8;
            v19 = "bonfireIntermediateBandErases";
            goto LABEL_13;
          case 258:
            v18 = *v8;
            v19 = "bonfireUserBandErases";
            goto LABEL_13;
          case 259:
            v18 = *v8;
            v19 = "bonfireIntermediateBandProgs";
            goto LABEL_13;
          case 260:
            v18 = *v8;
            v19 = "bonfireUserBandProgs";
            goto LABEL_13;
          case 261:
            v18 = *v8;
            v19 = "bonfireIntermediatePageReads";
            goto LABEL_13;
          case 262:
            v18 = *v8;
            v19 = "bonfireUserPageReads";
            goto LABEL_13;
          case 263:
            v18 = *v8;
            v19 = "refreshUtil00";
            goto LABEL_13;
          case 264:
            v18 = *v8;
            v19 = "failToReadUtil00";
            goto LABEL_13;
          case 265:
            v20 = "readCountHisto";
            v21 = a1;
            v22 = 265;
LABEL_19:
            v14 = v8;
            v15 = 5;
            goto LABEL_12;
          case 266:
            v20 = "readAmpHisto";
            v21 = a1;
            v22 = 266;
            goto LABEL_85;
          case 267:
            v18 = *v8;
            v19 = "totalReadAmp";
            goto LABEL_13;
          case 268:
            v20 = "nvmeModeSelect";
            v21 = a1;
            v22 = 268;
            goto LABEL_22;
          case 269:
            v20 = "numBootBlockRefreshSuccess";
            v21 = a1;
            v22 = 269;
            goto LABEL_23;
          case 270:
            v20 = "numBootBlockRefreshFail";
            v21 = a1;
            v22 = 270;
            goto LABEL_23;
          case 271:
            v18 = *v8;
            v19 = "numUnsupportedAsi";
            goto LABEL_13;
          case 272:
            v18 = *v8;
            v19 = "NumTerminatedProgramSegs";
            goto LABEL_13;
          case 273:
            v18 = *v8;
            v19 = "indParityPagesDrops";
            goto LABEL_13;
          case 274:
            v18 = *v8;
            v19 = "indFlowPrograms";
            goto LABEL_13;
          case 277:
            v20 = "powerBudgetSelect";
            v21 = a1;
            v22 = 277;
LABEL_22:
            v14 = v8;
            v15 = 4;
            goto LABEL_12;
          case 279:
            v18 = *v8;
            v19 = "RxBurnNandWrites";
            goto LABEL_13;
          case 280:
            v20 = "E2EDPErrorCounters";
            v21 = a1;
            v22 = 280;
LABEL_153:
            v14 = v8;
            v15 = 12;
            goto LABEL_12;
          case 281:
            v18 = *v8;
            v19 = "wcacheSectorsMax";
            goto LABEL_13;
          case 282:
            v18 = *v8;
            v19 = "wcacheSectorsMin";
            goto LABEL_13;
          case 283:
            v18 = *v8;
            v19 = "wcacheSectorsCur";
            goto LABEL_13;
          case 284:
            v18 = *v8;
            v19 = "wcacheDS_SectorsMax";
            goto LABEL_13;
          case 285:
            v18 = *v8;
            v19 = "wcacheDS_SectorsMin";
            goto LABEL_13;
          case 286:
            v18 = *v8;
            v19 = "wcacheDS_SectorsCur";
            goto LABEL_13;
          case 287:
            v18 = *v8;
            v19 = "wcacheFS_Reads";
            goto LABEL_13;
          case 288:
            v18 = *v8;
            v19 = "wcacheDS_Reads";
            goto LABEL_13;
          case 289:
            v20 = "mspBootBlockReadFail";
            v21 = a1;
            v22 = 289;
            goto LABEL_155;
          case 290:
            v20 = "mspBootBlockProgFail";
            v21 = a1;
            v22 = 290;
            goto LABEL_155;
          case 291:
            v20 = "mspBootBlockEraseFail";
            v21 = a1;
            v22 = 291;
LABEL_155:
            v14 = v8;
            v15 = 32;
            goto LABEL_12;
          case 292:
            v18 = *v8;
            v19 = "bandsRefreshedOnError";
            goto LABEL_13;
          default:
            switch(v7)
            {
              case 298:
                v20 = "perHostReads";
                v21 = a1;
                v22 = 298;
                goto LABEL_20;
              case 299:
                v20 = "perHostReadXacts";
                v21 = a1;
                v22 = 299;
                goto LABEL_20;
              case 300:
                v20 = "perHostWrites";
                v21 = a1;
                v22 = 300;
                goto LABEL_20;
              case 301:
                v20 = "perHostWriteXacts";
                v21 = a1;
                v22 = 301;
                goto LABEL_20;
              case 302:
                v20 = "perHostNumFlushes";
                v21 = a1;
                v22 = 302;
                goto LABEL_20;
              case 303:
                v20 = "perHostNumFences";
                v21 = a1;
                v22 = 303;
                goto LABEL_20;
              case 304:
                v20 = "commitPadSectorsPerFlow";
                v21 = a1;
                v22 = 304;
                goto LABEL_11;
              case 305:
                v20 = "wcacheDSOverWrLogSizeCnts";
                v21 = a1;
                v22 = 305;
                goto LABEL_11;
              case 306:
                v20 = "wcacheDSOverWrSizeByFlow";
                v21 = a1;
                v22 = 306;
                goto LABEL_22;
              case 307:
                v20 = "CmdRaisePrioiryEvents";
                v21 = a1;
                v22 = 307;
                goto LABEL_11;
              case 308:
                v18 = *v8;
                v19 = "utilNumVerification";
                goto LABEL_13;
              case 309:
                v18 = *v8;
                v19 = "utilRefreshes";
                goto LABEL_13;
              case 310:
                v18 = *v8;
                v19 = "utilBDRErrors";
                goto LABEL_13;
              case 311:
                v18 = *v8;
                v19 = "indBandsPerFlow";
                goto LABEL_13;
              case 312:
                v18 = *v8;
                v19 = "secsPerIndFlow";
                goto LABEL_13;
              case 313:
                v18 = *v8;
                v19 = "indDecodedECC";
                goto LABEL_13;
              case 314:
                v20 = "numBootBlockValidateSuccess";
                v21 = a1;
                v22 = 314;
                goto LABEL_23;
              case 315:
                v20 = "numBootBlockValidateFail";
                v21 = a1;
                v22 = 315;
                goto LABEL_23;
              case 316:
                v20 = "clogPagesFillingPercentage";
                v21 = a1;
                v22 = 316;
                goto LABEL_22;
              case 317:
                v18 = *v8;
                v19 = "bdrCalTimeAccFactor";
                goto LABEL_13;
              case 318:
                v18 = *v8;
                v19 = "bootChainRdError";
                goto LABEL_13;
              case 319:
                v18 = *v8;
                v19 = "bootChainBlankError";
                goto LABEL_13;
              case 320:
                v18 = *v8;
                v19 = "bootChainRefreshError";
                goto LABEL_13;
              case 321:
                v18 = *v8;
                v19 = "bootChainVersionError";
                goto LABEL_13;
              case 322:
                v18 = *v8;
                v19 = "mspBootBlockMismatch";
                goto LABEL_13;
              case 323:
                v18 = *v8;
                v19 = "mspBootBlockMismatchErr";
                goto LABEL_13;
              case 324:
                v20 = "bitflipAddr";
                v21 = a1;
                v22 = 324;
                goto LABEL_19;
              case 325:
                v20 = "bitflipCount";
                v21 = a1;
                v22 = 325;
                goto LABEL_19;
              case 326:
                v20 = "bitflipDupes";
                v21 = a1;
                v22 = 326;
                goto LABEL_19;
              case 327:
                v20 = "bandsMaxTempHisto";
                v21 = a1;
                v22 = 327;
                goto LABEL_217;
              case 328:
                v20 = "bandsMinTempHisto";
                v21 = a1;
                v22 = 328;
                goto LABEL_217;
              case 329:
                v20 = "bandsLifeTimeTempHisto";
                v21 = a1;
                v22 = 329;
                v14 = v8;
                v15 = 30;
                goto LABEL_12;
              case 330:
                v20 = "bandsDeltaTempHisto";
                v21 = a1;
                v22 = 330;
LABEL_217:
                v14 = v8;
                v15 = 22;
                goto LABEL_12;
              case 331:
                v20 = "bandsCrossTempHisto";
                v21 = a1;
                v22 = 331;
                v14 = v8;
                v15 = 45;
                goto LABEL_12;
              case 332:
                v20 = "wcacheWaitLogMs";
                v21 = a1;
                v22 = 332;
                goto LABEL_11;
              case 333:
                v20 = "wcacheDS_segsSortedLogSize";
                v21 = a1;
                v22 = 333;
                goto LABEL_11;
              case 334:
                v18 = *v8;
                v19 = "numFirmwareWrites";
                goto LABEL_13;
              case 335:
                v18 = *v8;
                v19 = "numBisWrites";
                goto LABEL_13;
              case 336:
                v18 = *v8;
                v19 = "numBootChainUpdates";
                goto LABEL_13;
              case 337:
                v18 = *v8;
                v19 = "cntCalTimeWentBackWard";
                goto LABEL_13;
              case 338:
                v18 = *v8;
                v19 = "indBoRecoveries";
                goto LABEL_13;
              case 340:
                v18 = *v8;
                v19 = "numCrossTempUecc";
                goto LABEL_13;
              case 341:
                v18 = *v8;
                v19 = "latencyMonitorError";
                goto LABEL_13;
              case 343:
                v18 = *v8;
                v19 = "utilUeccReads";
                goto LABEL_13;
              case 344:
                v18 = *v8;
                v19 = "numOfAvoidedGCDueToTemp";
                goto LABEL_13;
              case 345:
                v18 = *v8;
                v19 = "forceShutdowns";
                goto LABEL_13;
              case 346:
                v18 = *v8;
                v19 = "gcSlcDestinations";
                goto LABEL_13;
              case 347:
                v18 = *v8;
                v19 = "indReplayExtUsed";
                goto LABEL_13;
              case 348:
                v18 = *v8;
                v19 = "defectsPerPackageOverflow";
                goto LABEL_13;
              case 349:
                v18 = *v8;
                v19 = "RxBurnIntBandsProgrammed";
                goto LABEL_13;
              case 350:
                v18 = *v8;
                v19 = "RxBurnUsrBandsProgrammed";
                goto LABEL_13;
              case 351:
                v18 = *v8;
                v19 = "RxBurnIntNandWrites";
                goto LABEL_13;
              case 352:
                v18 = *v8;
                v19 = "RxBurnUsrNandWrites";
                goto LABEL_13;
              case 353:
                v18 = *v8;
                v19 = "clogLastStripeUeccs";
                goto LABEL_13;
              case 354:
                v18 = *v8;
                v19 = "GC_MidDestSrcSwitchSLC2TLC";
                goto LABEL_13;
              case 355:
                v18 = *v8;
                v19 = "GC_MidDestSrcSwitchTLC2SLC";
                goto LABEL_13;
              case 356:
                v18 = *v8;
                v19 = "nvme_stats_shutdown_count_host0_normal";
                goto LABEL_13;
              case 357:
                v18 = *v8;
                v19 = "nvme_stats_shutdown_count_host1_normal";
                goto LABEL_13;
              case 358:
                v18 = *v8;
                v19 = "nvme_stats_shutdown_count_host0_s2r";
                goto LABEL_13;
              case 359:
                v18 = *v8;
                v19 = "nvme_stats_shutdown_count_host1_s2r";
                goto LABEL_13;
              case 360:
                v20 = "gcPDusterIntrSrcValidityHisto";
                v21 = a1;
                v22 = 360;
                goto LABEL_85;
              case 361:
                v20 = "gcPDusterUserSrcValidityHisto";
                v21 = a1;
                v22 = 361;
                goto LABEL_85;
              case 362:
                v18 = *v8;
                v19 = "raidFailedReadParity";
                goto LABEL_13;
              case 364:
                v18 = *v8;
                v19 = "lhotNumSkipes";
                goto LABEL_13;
              default:
                switch(v7)
                {
                  case 365:
                    v18 = *v8;
                    v19 = "lhotNumIsHotCalls";
                    goto LABEL_13;
                  case 366:
                    v18 = *v8;
                    v19 = "lhotFullLap";
                    goto LABEL_13;
                  case 367:
                    v18 = *v8;
                    v19 = "lhotSkipPrecent";
                    goto LABEL_13;
                  case 368:
                    v18 = *v8;
                    v19 = "eraseSuspendEvents";
                    goto LABEL_13;
                  case 369:
                    v18 = *v8;
                    v19 = "eraseSuspendedStatuses";
                    goto LABEL_13;
                  case 370:
                    v18 = *v8;
                    v19 = "eraseSuspendedBands";
                    goto LABEL_13;
                  case 371:
                    v18 = *v8;
                    v19 = "eraseSuspendSituationsBelowThreshold";
                    goto LABEL_13;
                  case 372:
                    v18 = *v8;
                    v19 = "eraseSuspendSituationsAboveThreshold";
                    goto LABEL_13;
                  case 373:
                    v18 = *v8;
                    v19 = "eraseSuspendReadChainsProcessed";
                    goto LABEL_13;
                  case 374:
                    v18 = *v8;
                    v19 = "bdrLastDoneHr";
                    goto LABEL_13;
                  case 375:
                    v18 = *v8;
                    v19 = "bdrBackupThreshHrs";
                    goto LABEL_13;
                  case 376:
                    v18 = *v8;
                    v19 = "clogPortableProgBufs";
                    goto LABEL_13;
                  case 377:
                    v18 = *v8;
                    v19 = "clogPortableDropBufs";
                    goto LABEL_13;
                  case 378:
                    v18 = *v8;
                    v19 = "clogPortablePadSectors";
                    goto LABEL_13;
                  case 379:
                    v18 = *v8;
                    v19 = "numRetiredBlocks";
                    goto LABEL_13;
                  case 381:
                    v18 = *v8;
                    v19 = "numRefreshOnErrNandRefreshPerf";
                    goto LABEL_13;
                  case 382:
                    v18 = *v8;
                    v19 = "raidReconstructReads";
                    goto LABEL_13;
                  case 383:
                    v18 = *v8;
                    v19 = "gcReadsNoBlog";
                    goto LABEL_13;
                  case 384:
                    v18 = *v8;
                    v19 = "AbortSkip_MPBXReadVerifyClosedBand";
                    goto LABEL_13;
                  case 385:
                    v18 = *v8;
                    v19 = "openBandReadFail";
                    goto LABEL_13;
                  case 386:
                    v18 = *v8;
                    v19 = "AbortSkip_MPBXReadVerifyOpenBand";
                    goto LABEL_13;
                  case 387:
                    v18 = *v8;
                    v19 = "AbortSkip_MBPXFailedRebuildingParity";
                    goto LABEL_13;
                  case 388:
                    v18 = *v8;
                    v19 = "raidSuccessfulPMXReconstructionInternal";
                    goto LABEL_13;
                  case 389:
                    v18 = *v8;
                    v19 = "raidSuccessfulPMXReconstructionHost";
                    goto LABEL_13;
                  case 390:
                    v18 = *v8;
                    v19 = "raidFailedPMXReconstructionInternal";
                    goto LABEL_13;
                  case 391:
                    v18 = *v8;
                    v19 = "raidFailedPMXReconstructionHost";
                    goto LABEL_13;
                  case 392:
                    v18 = *v8;
                    v19 = "raidSuccessfulRMXReconstructionInternal";
                    goto LABEL_13;
                  case 393:
                    v18 = *v8;
                    v19 = "raidSuccessfulRMXReconstructionHost";
                    goto LABEL_13;
                  case 394:
                    v18 = *v8;
                    v19 = "raidFailedRMXReconstructionInternal";
                    goto LABEL_13;
                  case 395:
                    v18 = *v8;
                    v19 = "raidFailedRMXReconstructionHost";
                    goto LABEL_13;
                  case 396:
                    v18 = *v8;
                    v19 = "raidFailedReadParityInternal";
                    goto LABEL_13;
                  case 397:
                    v18 = *v8;
                    v19 = "raidFailedReadQParityInternal";
                    goto LABEL_13;
                  case 398:
                    v18 = *v8;
                    v19 = "raidFailedReadQParity";
                    goto LABEL_13;
                  case 399:
                    v18 = *v8;
                    v19 = "raidFailedReadQCopy";
                    goto LABEL_13;
                  case 400:
                    v18 = *v8;
                    v19 = "raidFailedReconstructionQParity";
                    goto LABEL_13;
                  case 401:
                    v18 = *v8;
                    v19 = "offlineBlocksCnt";
                    goto LABEL_13;
                  case 402:
                    v18 = *v8;
                    v19 = "bork0Revectors";
                    goto LABEL_13;
                  case 403:
                    v18 = *v8;
                    v19 = "raidFailedReadBlog";
                    goto LABEL_13;
                  case 404:
                    v18 = *v8;
                    v19 = "numReliabilityRefreshes";
                    goto LABEL_13;
                  case 405:
                    v18 = *v8;
                    v19 = "raidFailedReadQCopyInternal";
                    goto LABEL_13;
                  case 406:
                    v20 = "raidReconstructSuccessFlow";
                    v21 = a1;
                    v22 = 406;
                    goto LABEL_19;
                  case 407:
                    v20 = "raidReconstructFailFlow";
                    v21 = a1;
                    v22 = 407;
                    goto LABEL_19;
                  case 408:
                    v18 = *v8;
                    v19 = "raidReconstructFailP";
                    goto LABEL_13;
                  case 409:
                    v18 = *v8;
                    v19 = "raidReconstructFailQ";
                    goto LABEL_13;
                  case 410:
                    v18 = *v8;
                    v19 = "raidReconstructFailUECC";
                    goto LABEL_13;
                  case 411:
                    v18 = *v8;
                    v19 = "raidReconstructFailUnsupp";
                    goto LABEL_13;
                  case 412:
                    v18 = *v8;
                    v19 = "raidUECCOpenBand";
                    goto LABEL_13;
                  case 414:
                    v18 = *v8;
                    v19 = "ueccReads";
                    goto LABEL_13;
                  case 416:
                    v18 = *v8;
                    v19 = "raidSuccessfulVerify";
                    goto LABEL_13;
                  case 417:
                    v18 = *v8;
                    v19 = "raidFailedVerify";
                    goto LABEL_13;
                  case 418:
                    v18 = *v8;
                    v19 = "numBandsVerified";
                    goto LABEL_13;
                  case 419:
                    v18 = *v8;
                    v19 = "cache_heads";
                    goto LABEL_13;
                  case 420:
                    v18 = *v8;
                    v19 = "AbortSkip_RMXtoMPBX";
                    goto LABEL_13;
                  case 421:
                    v18 = *v8;
                    v19 = "s3eFwVer";
                    goto LABEL_13;
                  case 422:
                    v18 = *v8;
                    v19 = "readVerifyNative";
                    goto LABEL_13;
                  case 423:
                    v18 = *v8;
                    v19 = "reducedReadVerifyNative";
                    goto LABEL_13;
                  case 424:
                    v18 = *v8;
                    v19 = "readVerifySlc";
                    goto LABEL_13;
                  case 425:
                    v18 = *v8;
                    v19 = "reducedReadVerifySlc";
                    goto LABEL_13;
                  case 426:
                    v18 = *v8;
                    v19 = "RxBurnEvictions";
                    goto LABEL_13;
                  case 427:
                    v18 = *v8;
                    v19 = "directToTLCBands";
                    goto LABEL_13;
                  case 428:
                    v18 = *v8;
                    v19 = "nandDesc";
                    goto LABEL_13;
                  case 429:
                    v18 = *v8;
                    v19 = "fwUpdatesPercentUsed";
                    goto LABEL_13;
                  case 430:
                    v18 = *v8;
                    v19 = "slcPercentUsed";
                    goto LABEL_13;
                  case 431:
                    v18 = *v8;
                    v19 = "percentUsed";
                    goto LABEL_13;
                  default:
                    switch(v7)
                    {
                      case 432:
                        v18 = *v8;
                        v19 = "hostAutoWrites";
                        goto LABEL_13;
                      case 433:
                        v18 = *v8;
                        v19 = "hostAutoWriteXacts";
                        goto LABEL_13;
                      case 434:
                        v18 = *v8;
                        v19 = "gcDestDynamic";
                        goto LABEL_13;
                      case 435:
                        v18 = *v8;
                        v19 = "gcDestStatic";
                        goto LABEL_13;
                      case 436:
                        v18 = *v8;
                        v19 = "gcDestWearlevel";
                        goto LABEL_13;
                      case 437:
                        v18 = *v8;
                        v19 = "gcDestParity";
                        goto LABEL_13;
                      case 438:
                        v18 = *v8;
                        v19 = "AbortSkip_Format";
                        goto LABEL_13;
                      case 440:
                        v18 = *v8;
                        v19 = "raidSLCPadding";
                        goto LABEL_13;
                      case 441:
                        v18 = *v8;
                        v19 = "raidGCBands";
                        goto LABEL_13;
                      case 442:
                        v18 = *v8;
                        v19 = "raidGCSectors";
                        goto LABEL_13;
                      case 443:
                        v18 = *v8;
                        v19 = "raidGCPadding";
                        goto LABEL_13;
                      case 444:
                        v18 = *v8;
                        v19 = "raidSLCBandsPerHostFlow";
                        goto LABEL_13;
                      case 445:
                        v18 = *v8;
                        v19 = "raidSLCSecsPerHostFlow";
                        goto LABEL_13;
                      case 446:
                        v18 = *v8;
                        v19 = "rxBurnMinCycleRuns";
                        goto LABEL_13;
                      case 447:
                        v18 = *v8;
                        v19 = "clogNumFastCxt";
                        goto LABEL_13;
                      case 448:
                        v18 = *v8;
                        v19 = "clogNumRapidReboots";
                        goto LABEL_13;
                      case 449:
                        v18 = *v8;
                        v19 = "clogFastCxtAbvThr";
                        goto LABEL_13;
                      case 450:
                        v18 = *v8;
                        v19 = "rxBurnDiffModeRuns";
                        goto LABEL_13;
                      case 452:
                        v18 = *v8;
                        v19 = "indReadVerifyFail";
                        goto LABEL_13;
                      case 453:
                        v20 = "numOfThrottlingEntriesPerReadLevel";
                        v21 = a1;
                        v22 = 453;
                        goto LABEL_85;
                      case 454:
                        v20 = "numOfThrottlingEntriesPerWriteLevel";
                        v21 = a1;
                        v22 = 454;
                        goto LABEL_85;
                      case 456:
                        v20 = "slcFifoDepth";
                        v21 = a1;
                        v22 = 456;
                        goto LABEL_11;
                      case 457:
                        v18 = *v8;
                        v19 = "wcacheSectorsDirtyIdle";
                        goto LABEL_13;
                      case 458:
                        v18 = *v8;
                        v19 = "wcacheDS_SectorsDirtyIdle";
                        goto LABEL_13;
                      case 459:
                        v18 = *v8;
                        v19 = "wcacheFS_MbytesDirtyIdle";
                        goto LABEL_13;
                      case 460:
                        v20 = "CacheDepthVsThroughput";
                        v21 = a1;
                        v22 = 460;
                        v14 = v8;
                        v15 = 256;
                        goto LABEL_12;
                      case 461:
                        v18 = *v8;
                        v19 = "directToTLCSectors";
                        goto LABEL_13;
                      case 462:
                        v18 = *v8;
                        v19 = "fallbackToWaterfall";
                        goto LABEL_13;
                      case 463:
                        v20 = "balanceProportionBucketsHistogram";
                        v21 = a1;
                        v22 = 463;
LABEL_320:
                        v14 = v8;
                        v15 = 11;
                        goto LABEL_12;
                      case 464:
                        v18 = *v8;
                        v19 = "lockToTlc";
                        goto LABEL_13;
                      case 465:
                        v20 = "burstSizeHistogram";
                        v21 = a1;
                        v22 = 465;
                        goto LABEL_11;
                      case 466:
                        v20 = "qosDirectToTLC";
                        v21 = a1;
                        v22 = 466;
                        goto LABEL_342;
                      case 467:
                        v20 = "maxQosDirectToTLC";
                        v21 = a1;
                        v22 = 467;
                        goto LABEL_22;
                      case 468:
                        v20 = "wcacheDirtyAtFlush";
                        v21 = a1;
                        v22 = 468;
                        goto LABEL_85;
                      case 469:
                        v20 = "raidReconstructSuccessPartition";
                        v21 = a1;
                        v22 = 469;
                        goto LABEL_20;
                      case 470:
                        v20 = "raidReconstructFailPartition";
                        v21 = a1;
                        v22 = 470;
                        goto LABEL_20;
                      case 471:
                        v18 = *v8;
                        v19 = "raidUncleanBootBandFail";
                        goto LABEL_13;
                      case 472:
                        v18 = *v8;
                        v19 = "raidReconstructFailBandFlowHost";
                        goto LABEL_13;
                      case 473:
                        v18 = *v8;
                        v19 = "raidReconstructFailBandFlowGC";
                        goto LABEL_13;
                      case 476:
                        v20 = "raidSuccessfulRecoLbaRange";
                        v21 = a1;
                        v22 = 476;
                        goto LABEL_20;
                      case 477:
                        v20 = "raidFailedRecoLbaRange";
                        v21 = a1;
                        v22 = 477;
                        goto LABEL_20;
                      case 481:
                        v20 = "skinnyBandErases_481";
                        v21 = a1;
                        v22 = 481;
                        goto LABEL_155;
                      case 483:
                        v18 = *v8;
                        v19 = "tlcOverHeatWaterfall";
                        goto LABEL_13;
                      case 484:
                        v18 = *v8;
                        v19 = "skinnyCyclesConvert";
                        goto LABEL_13;
                      case 485:
                        v18 = *v8;
                        v19 = "non_proportional_directToTLCSectors";
                        goto LABEL_13;
                      case 486:
                        v18 = *v8;
                        v19 = "maxFailedFastCxtSync";
                        goto LABEL_13;
                      case 487:
                        v18 = *v8;
                        v19 = "numFormatUserArea";
                        goto LABEL_13;
                      case 488:
                        v18 = *v8;
                        v19 = "clogFastCxtSyncAborted";
                        goto LABEL_13;
                      case 489:
                        v20 = "clogOccupationSectors";
                        v21 = a1;
                        v22 = 489;
                        goto LABEL_19;
                      case 490:
                        v20 = "bdrTmpHist";
                        v21 = a1;
                        v22 = 490;
LABEL_342:
                        v14 = v8;
                        v15 = 64;
                        goto LABEL_12;
                      case 491:
                        v18 = *v8;
                        v19 = "numFWUpdates";
                        goto LABEL_13;
                      case 492:
                        v18 = *v8;
                        v19 = "numClogLoadFails";
                        goto LABEL_13;
                      case 493:
                        v18 = *v8;
                        v19 = "rxBurnNumForcedDiffMode";
                        goto LABEL_13;
                      case 494:
                        v18 = *v8;
                        v19 = "RD_numSaves";
                        goto LABEL_13;
                      case 495:
                        v18 = *v8;
                        v19 = "eanCompressWrites";
                        goto LABEL_13;
                      case 496:
                        v18 = *v8;
                        v19 = "eanHostWrites";
                        goto LABEL_13;
                      case 497:
                        v18 = *v8;
                        v19 = "bandPreErases";
                        goto LABEL_13;
                      case 498:
                        v18 = *v8;
                        v19 = "eanHostUnmaps";
                        goto LABEL_13;
                      case 499:
                        v18 = *v8;
                        v19 = "eanHostFlushes";
                        goto LABEL_13;
                      case 500:
                        v18 = *v8;
                        v19 = "eanFastWrites";
                        goto LABEL_13;
                      case 501:
                        v18 = *v8;
                        v19 = "autowriteDS2FSCollisions";
                        goto LABEL_13;
                      case 502:
                        v18 = *v8;
                        v19 = "autowriteWaitTransferTaskBlocks";
                        goto LABEL_13;
                      case 503:
                        v20 = "avgCycle";
                        v21 = a1;
                        v22 = 503;
                        goto LABEL_20;
                      case 504:
                        v18 = *v8;
                        v19 = "RD_DeferredClearsOverflowCnt";
                        goto LABEL_13;
                      default:
                        switch(v7)
                        {
                          case 505:
                            v18 = *v8;
                            v19 = "maxVerticsInBand";
                            goto LABEL_13;
                          case 506:
                            v18 = *v8;
                            v19 = "numVertics";
                            goto LABEL_13;
                          case 507:
                            v18 = *v8;
                            v19 = "exceededCVertics";
                            goto LABEL_13;
                          case 510:
                            v18 = *v8;
                            v19 = "raidReconstructFailMismatch";
                            goto LABEL_13;
                          case 511:
                            v20 = "mspbootBlockRefreshCnt";
                            v21 = a1;
                            v22 = 511;
                            goto LABEL_155;
                          case 516:
                            v20 = "mspBootBlockRefreshTime";
                            v21 = a1;
                            v22 = 516;
                            goto LABEL_155;
                          case 517:
                            v18 = *v8;
                            v19 = "mspBootBlockCountPerMsp";
                            goto LABEL_13;
                          case 518:
                            v18 = *v8;
                            v19 = "skinnyRevectorSLC";
                            goto LABEL_13;
                          case 519:
                            v18 = *v8;
                            v19 = "skinnyRevectorTLC";
                            goto LABEL_13;
                          case 520:
                            v18 = *v8;
                            v19 = "perfSetupAttempts";
                            goto LABEL_13;
                          case 521:
                            v18 = *v8;
                            v19 = "perfSetupSuccesses";
                            goto LABEL_13;
                          case 522:
                            v18 = *v8;
                            v19 = "perfWriteAttempts";
                            goto LABEL_13;
                          case 523:
                            v18 = *v8;
                            v19 = "perfWriteSuccesses";
                            goto LABEL_13;
                          case 524:
                            v18 = *v8;
                            v19 = "perfReadAttempts";
                            goto LABEL_13;
                          case 525:
                            v18 = *v8;
                            v19 = "perfReadSuccesses";
                            goto LABEL_13;
                          case 526:
                            v18 = *v8;
                            v19 = "perfCleanupAttempts";
                            goto LABEL_13;
                          case 527:
                            v18 = *v8;
                            v19 = "perfCleanupSuccesses";
                            goto LABEL_13;
                          case 530:
                            v18 = *v8;
                            v19 = "firstFailedDieId";
                            goto LABEL_13;
                          case 531:
                            v18 = *v8;
                            v19 = "numDieFailures";
                            goto LABEL_13;
                          case 532:
                            v18 = *v8;
                            v19 = "spareAvailablePercent";
                            goto LABEL_13;
                          case 533:
                            v18 = *v8;
                            v19 = "dataFabricErr";
                            goto LABEL_13;
                          case 534:
                            v18 = *v8;
                            v19 = "downlinkFabricErr";
                            goto LABEL_13;
                          case 535:
                            v18 = *v8;
                            v19 = "prpAccTimeoutErr";
                            goto LABEL_13;
                          case 537:
                            v18 = *v8;
                            v19 = "uplinkFabricErr";
                            goto LABEL_13;
                          case 538:
                            v18 = *v8;
                            v19 = "skinnyBandsGBB";
                            goto LABEL_13;
                          case 539:
                            v18 = *v8;
                            v19 = "AbortPad_GcMustPadBand";
                            goto LABEL_13;
                          case 540:
                            v18 = *v8;
                            v19 = "AbortPad_GcMustPadSkinny";
                            goto LABEL_13;
                          case 541:
                            v18 = *v8;
                            v19 = "bdrHostPingInitial";
                            goto LABEL_13;
                          case 542:
                            v18 = *v8;
                            v19 = "bdrHostPingMoreNeeded";
                            goto LABEL_13;
                          case 543:
                            v18 = *v8;
                            v19 = "bandParityAllocationFailed";
                            goto LABEL_13;
                          case 544:
                            v18 = *v8;
                            v19 = "fastHwBurstToSlc";
                            goto LABEL_13;
                          case 545:
                            v18 = *v8;
                            v19 = "slowHwToTlc";
                            goto LABEL_13;
                          case 546:
                            v20 = "slcDemandBurstSizeDetected";
                            v21 = a1;
                            v22 = 546;
                            goto LABEL_11;
                          case 547:
                            v20 = "slcDemandBurstDur";
                            v21 = a1;
                            v22 = 547;
                            goto LABEL_11;
                          case 548:
                            v18 = *v8;
                            v19 = "fastHwToTlcBurst";
                            goto LABEL_13;
                          case 549:
                            v20 = "slcDemandBurstSizeSlc";
                            v21 = a1;
                            v22 = 549;
                            goto LABEL_11;
                          case 551:
                            v20 = "balanceProportionBucketsHistogramTlc";
                            v21 = a1;
                            v22 = 551;
                            goto LABEL_320;
                          case 553:
                            v18 = *v8;
                            v19 = "slowHwFlushToSlc";
                            goto LABEL_13;
                          case 557:
                            v18 = *v8;
                            v19 = "slowHwToSlc";
                            goto LABEL_13;
                          case 558:
                            v18 = *v8;
                            v19 = "flushNwToSlc";
                            goto LABEL_13;
                          case 559:
                            v18 = *v8;
                            v19 = "flushNwToTlc";
                            goto LABEL_13;
                          case 560:
                            v18 = *v8;
                            v19 = "oslcHw";
                            goto LABEL_13;
                          case 561:
                            v18 = *v8;
                            v19 = "oslcTransitions";
                            goto LABEL_13;
                          case 563:
                            v18 = *v8;
                            v19 = "slcDemandFlushCount";
                            goto LABEL_13;
                          case 564:
                            v18 = *v8;
                            v19 = "slcDemandBurstCount";
                            goto LABEL_13;
                          case 565:
                            v18 = *v8;
                            v19 = "oslcBaseAvgPE";
                            goto LABEL_13;
                          case 566:
                            v18 = *v8;
                            v19 = "raidReconstructFailNoSPBX";
                            goto LABEL_13;
                          case 567:
                            v18 = *v8;
                            v19 = "raidReconstructFailDouble";
                            goto LABEL_13;
                          case 568:
                            v18 = *v8;
                            v19 = "oslcFastWAmpUOnOff";
                            goto LABEL_13;
                          case 569:
                            v18 = *v8;
                            v19 = "oslcSlowWAmpUOnOff";
                            goto LABEL_13;
                          case 570:
                            v18 = *v8;
                            v19 = "raidReconstructFailInvalid";
                            goto LABEL_13;
                          case 572:
                            v18 = *v8;
                            v19 = "oslcLastWAmpUx10";
                            goto LABEL_13;
                          case 573:
                            v18 = *v8;
                            v19 = "raidFailedReadNoBlog";
                            goto LABEL_13;
                          case 574:
                            v18 = *v8;
                            v19 = "raidReconstructFailBlank";
                            goto LABEL_13;
                          case 575:
                            v18 = *v8;
                            v19 = "oslcHotTLCOnOff";
                            goto LABEL_13;
                          case 576:
                            v18 = *v8;
                            v19 = "gcVPackDestinations";
                            goto LABEL_13;
                          case 581:
                            v18 = *v8;
                            v19 = "averageTLCPECycles";
                            goto LABEL_13;
                          case 582:
                            v18 = *v8;
                            v19 = "averageSLCPECycles";
                            goto LABEL_13;
                          case 583:
                            v18 = *v8;
                            v19 = "numAtomicBoots";
                            goto LABEL_13;
                          case 584:
                            v18 = *v8;
                            v19 = "clogMinorMismatch";
                            goto LABEL_13;
                          case 586:
                            v18 = *v8;
                            v19 = "raidExpectedFailRMXReconstructionInternal";
                            goto LABEL_13;
                          case 587:
                            v18 = *v8;
                            v19 = "raidExpectedFailRMXReconstructionHost";
                            goto LABEL_13;
                          case 588:
                            v18 = *v8;
                            v19 = "oslcGCinvalidations";
                            goto LABEL_13;
                          case 589:
                            v18 = *v8;
                            v19 = "oslcGCActivateReason";
                            goto LABEL_13;
                          default:
                            switch(v7)
                            {
                              case 590:
                                v18 = *v8;
                                v19 = "oslcLowCleanBandsUOnOff";
                                goto LABEL_13;
                              case 591:
                                v18 = *v8;
                                v19 = "oslcTooManyGCMustOnOff";
                                goto LABEL_13;
                              case 592:
                                v18 = *v8;
                                v19 = "oslcBaseHostWrites";
                                goto LABEL_13;
                              case 593:
                                v18 = *v8;
                                v19 = "oslcBaseBandErases";
                                goto LABEL_13;
                              case 594:
                                v18 = *v8;
                                v19 = "oslcBdrBands";
                                goto LABEL_13;
                              case 595:
                                v18 = *v8;
                                v19 = "oslcBdrValid";
                                goto LABEL_13;
                              case 596:
                                v18 = *v8;
                                v19 = "unexpectedBlanks";
                                goto LABEL_13;
                              case 597:
                                v18 = *v8;
                                v19 = "unexpectedBlanksOnRV";
                                goto LABEL_13;
                              case 601:
                                v18 = *v8;
                                v19 = "waterfallLockSectors";
                                goto LABEL_13;
                              case 602:
                                v18 = *v8;
                                v19 = "oslcGCActiveWrites";
                                goto LABEL_13;
                              case 603:
                                v18 = *v8;
                                v19 = "chipIdTemperatureSample";
                                goto LABEL_13;
                              case 604:
                                v18 = *v8;
                                v19 = "gcVPackWrites";
                                goto LABEL_13;
                              case 605:
                                v20 = "gcActiveReasons";
                                v21 = a1;
                                v22 = 605;
                                goto LABEL_11;
                              case 606:
                                v18 = *v8;
                                v19 = "eanMaxInitTimeMs";
                                goto LABEL_13;
                              case 607:
                                v18 = *v8;
                                v19 = "eanMinToFirstReadTimeMs";
                                goto LABEL_13;
                              case 608:
                                v18 = *v8;
                                v19 = "skinnyAPGMRetire";
                                goto LABEL_13;
                              case 609:
                                v18 = *v8;
                                v19 = "unexpectedBlanksHost";
                                goto LABEL_13;
                              case 610:
                                v20 = "pcieAerCounters";
                                v21 = a1;
                                v22 = 610;
                                goto LABEL_342;
                              case 611:
                                v18 = *v8;
                                v19 = "fastHwToTlcBalance";
                                goto LABEL_13;
                              case 612:
                                v18 = *v8;
                                v19 = "perfOSLCRuns";
                                goto LABEL_13;
                              case 613:
                                v18 = *v8;
                                v19 = "slcDemandBurstWritesInGC";
                                goto LABEL_13;
                              case 614:
                                v18 = *v8;
                                v19 = "slcDemandBurstWritesInTT";
                                goto LABEL_13;
                              case 615:
                                v18 = *v8;
                                v19 = "slcDemandBurstWritesInNRP";
                                goto LABEL_13;
                              case 616:
                                v18 = *v8;
                                v19 = "perfTotalDmaMb";
                                goto LABEL_13;
                              case 617:
                                v18 = *v8;
                                v19 = "eanAvgInitTimeMs";
                                goto LABEL_13;
                              case 618:
                                v18 = *v8;
                                v19 = "eanAvgToFirstReadTimeMs";
                                goto LABEL_13;
                              case 619:
                                v18 = *v8;
                                v19 = "eanMaxBootReadTimeMs";
                                goto LABEL_13;
                              case 620:
                                v18 = *v8;
                                v19 = "eanAvgBootReadTimeMs";
                                goto LABEL_13;
                              case 621:
                                v20 = "eanBootReadsHist";
                                v21 = a1;
                                v22 = 621;
                                goto LABEL_11;
                              case 622:
                                v18 = *v8;
                                v19 = "maxBgInitTimeMs";
                                goto LABEL_13;
                              case 623:
                                v18 = *v8;
                                v19 = "avgBgInitTimeMs";
                                goto LABEL_13;
                              case 624:
                                v20 = "clogFailReason";
                                v21 = a1;
                                v22 = 624;
                                goto LABEL_85;
                              case 625:
                                v18 = *v8;
                                v19 = "eanMinBootReadMBPerSec";
                                goto LABEL_13;
                              case 626:
                                v18 = *v8;
                                v19 = "eanAvgBootReadMBPerSec";
                                goto LABEL_13;
                              case 627:
                                v18 = *v8;
                                v19 = "minSkinnyPECycles";
                                goto LABEL_13;
                              case 628:
                                v18 = *v8;
                                v19 = "maxSkinnyPECycles";
                                goto LABEL_13;
                              case 629:
                                v18 = *v8;
                                v19 = "averageSkinnyPECycles";
                                goto LABEL_13;
                              case 630:
                                v20 = "raidSuccessfulRecoEAN";
                                v21 = a1;
                                v22 = 630;
                                goto LABEL_463;
                              case 631:
                                v20 = "raidFailedRecoEAN";
                                v21 = a1;
                                v22 = 631;
                                goto LABEL_463;
                              case 632:
                                v20 = "eanFirstReadMode";
                                v21 = a1;
                                v22 = 632;
LABEL_463:
                                v14 = v8;
                                v15 = 6;
                                goto LABEL_12;
                              case 635:
                                v18 = *v8;
                                v19 = "oslcHwGC";
                                goto LABEL_13;
                              case 636:
                                v18 = *v8;
                                v19 = "oslcHwTT";
                                goto LABEL_13;
                              case 637:
                                v18 = *v8;
                                v19 = "oslcHwNRP";
                                goto LABEL_13;
                              case 638:
                                v20 = "oslcDemandBurstSize";
                                v21 = a1;
                                v22 = 638;
                                goto LABEL_11;
                              case 639:
                                v18 = *v8;
                                v19 = "raidReconstructSuccessBandFlowOslc";
                                goto LABEL_13;
                              case 640:
                                v18 = *v8;
                                v19 = "raidReconstructFailBandFlowOslc";
                                goto LABEL_13;
                              case 641:
                                v18 = *v8;
                                v19 = "raidFailSectors";
                                goto LABEL_13;
                              case 642:
                                v18 = *v8;
                                v19 = "eanFailSectors";
                                goto LABEL_13;
                              case 643:
                                v18 = *v8;
                                v19 = "bdrTimeMode";
                                goto LABEL_13;
                              case 644:
                                v18 = *v8;
                                v19 = "raidParityNotSavedP";
                                goto LABEL_13;
                              case 645:
                                v18 = *v8;
                                v19 = "raidParityNotSavedQ";
                                goto LABEL_13;
                              case 646:
                                v18 = *v8;
                                v19 = "raidParityInvalid";
                                goto LABEL_13;
                              case 647:
                                v18 = *v8;
                                v19 = "raidParityUnknown";
                                goto LABEL_13;
                              case 648:
                                v18 = *v8;
                                v19 = "raidParityUnmapped";
                                goto LABEL_13;
                              case 649:
                                v18 = *v8;
                                v19 = "raidParityGCUnc";
                                goto LABEL_13;
                              case 657:
                                v18 = *v8;
                                v19 = "AbortSkip_MPBXProbational";
                                goto LABEL_13;
                              case 659:
                                v18 = *v8;
                                v19 = "raidVerificationReads";
                                goto LABEL_13;
                              case 666:
                                v18 = *v8;
                                v19 = "nofDies";
                                goto LABEL_13;
                              case 671:
                                v18 = *v8;
                                v19 = "skinnyBandsNum";
                                goto LABEL_13;
                              case 672:
                                v18 = *v8;
                                v19 = "skinnyBandsNumDips";
                                goto LABEL_13;
                              case 674:
                                v20 = "oslcNoVotesHw";
                                v21 = a1;
                                v22 = 674;
                                goto LABEL_23;
                              case 675:
                                v18 = *v8;
                                v19 = "totalLbas";
                                goto LABEL_13;
                              case 676:
                                v18 = *v8;
                                v19 = "bdrHostPingExtra";
                                goto LABEL_13;
                              case 677:
                                v18 = *v8;
                                v19 = "magazineInstanceMeta";
                                goto LABEL_13;
                              default:
                                switch(v7)
                                {
                                  case 680:
                                    v20 = "magazineFWVersion";
                                    v21 = a1;
                                    v22 = 680;
                                    goto LABEL_21;
                                  case 681:
                                    v18 = *v8;
                                    v19 = "raidReconstructFailPMXUnsup";
                                    goto LABEL_13;
                                  case 682:
                                    v18 = *v8;
                                    v19 = "raidReconstructFailBMXUnsup";
                                    goto LABEL_13;
                                  case 683:
                                    v18 = *v8;
                                    v19 = "iBootNANDResets";
                                    goto LABEL_13;
                                  case 684:
                                    v18 = *v8;
                                    v19 = "pcieClkreqHighTimeout";
                                    goto LABEL_13;
                                  case 687:
                                    v20 = "cbdrInitSent";
                                    v21 = a1;
                                    v22 = 687;
LABEL_21:
                                    v14 = v8;
                                    v15 = 3;
                                    goto LABEL_12;
                                  case 688:
                                    v18 = *v8;
                                    v19 = "cbdrPauseSent";
                                    goto LABEL_13;
                                  case 689:
                                    v18 = *v8;
                                    v19 = "cbdrResumeSent";
                                    goto LABEL_13;
                                  case 690:
                                    v18 = *v8;
                                    v19 = "cbdrGetResultSent";
                                    goto LABEL_13;
                                  case 691:
                                    v18 = *v8;
                                    v19 = "cbdrEarlyExits";
                                    goto LABEL_13;
                                  case 694:
                                    v20 = "cbdrRefreshGrades";
                                    v21 = a1;
                                    v22 = 694;
                                    goto LABEL_11;
                                  case 695:
                                    v18 = *v8;
                                    v19 = "cbdrNotEnoughReads";
                                    goto LABEL_13;
                                  case 696:
                                    v18 = *v8;
                                    v19 = "cbdrAborts";
                                    goto LABEL_13;
                                  case 697:
                                    v18 = *v8;
                                    v19 = "TurboRaidHostClassifications";
                                    goto LABEL_13;
                                  case 698:
                                    v18 = *v8;
                                    v19 = "TurboRaidInternalClassifications";
                                    goto LABEL_13;
                                  case 699:
                                    v18 = *v8;
                                    v19 = "cbdrFullyDone";
                                    goto LABEL_13;
                                  case 702:
                                    v20 = "vcurve";
                                    v21 = a1;
                                    v22 = 702;
                                    goto LABEL_155;
                                  case 703:
                                    v20 = "injDepth";
                                    v21 = a1;
                                    v22 = 703;
                                    goto LABEL_153;
                                  case 704:
                                    v18 = *v8;
                                    v19 = "logical_disk_occupied_promiles";
                                    goto LABEL_13;
                                  case 711:
                                    v18 = *v8;
                                    v19 = "raidPrevFailedReconstructSkip";
                                    goto LABEL_13;
                                  case 712:
                                    v18 = *v8;
                                    v19 = "TurboRaidSuccessfulHostAuxReads";
                                    goto LABEL_13;
                                  case 713:
                                    v18 = *v8;
                                    v19 = "TurboRaidSuccessfulInternalAuxReads";
                                    goto LABEL_13;
                                  case 714:
                                    v18 = *v8;
                                    v19 = "turboRaidClassificationReliabilityHost";
                                    goto LABEL_13;
                                  case 715:
                                    v18 = *v8;
                                    v19 = "turboRaidClassificationReliabilityInternal";
                                    goto LABEL_13;
                                  case 716:
                                    v18 = *v8;
                                    v19 = "turboRaidClassificationQualityHost";
                                    goto LABEL_13;
                                  case 717:
                                    v18 = *v8;
                                    v19 = "turboRaidClassificationQualityInternal";
                                    goto LABEL_13;
                                  case 719:
                                    v18 = *v8;
                                    v19 = "skinnyBandErases";
                                    goto LABEL_13;
                                  case 721:
                                    v18 = *v8;
                                    v19 = "gcPDusterDestinations";
                                    goto LABEL_13;
                                  case 722:
                                    v18 = *v8;
                                    v19 = "gcPDusterWrites";
                                    goto LABEL_13;
                                  case 730:
                                    v18 = *v8;
                                    v19 = "rvFails";
                                    goto LABEL_13;
                                  case 737:
                                    v18 = *v8;
                                    v19 = "TurboRaidFailedHostAuxReads";
                                    goto LABEL_13;
                                  case 738:
                                    v18 = *v8;
                                    v19 = "TurboRaidFailedInternalAuxReads";
                                    goto LABEL_13;
                                  case 741:
                                    v18 = *v8;
                                    v19 = "autoSkipTriggers";
                                    goto LABEL_13;
                                  case 742:
                                    v18 = *v8;
                                    v19 = "autoSkipPlanes";
                                    goto LABEL_13;
                                  case 744:
                                    v20 = "raidReconstructDurationHisto";
                                    v21 = a1;
                                    v22 = 744;
                                    goto LABEL_23;
                                  case 745:
                                    v20 = "failsOnReconstructHisto";
                                    v21 = a1;
                                    v22 = 745;
                                    goto LABEL_23;
                                  case 746:
                                    v18 = *v8;
                                    v19 = "bandKill_userFlattenExcessive";
                                    goto LABEL_13;
                                  case 747:
                                    v18 = *v8;
                                    v19 = "bandKill_IntFlattenExcessive";
                                    goto LABEL_13;
                                  case 748:
                                    v18 = *v8;
                                    v19 = "bandKill_userFlattenBalance";
                                    goto LABEL_13;
                                  case 749:
                                    v18 = *v8;
                                    v19 = "bandKill_intFlattenBalance";
                                    goto LABEL_13;
                                  case 750:
                                    v18 = *v8;
                                    v19 = "bandKill_formatVertExcessive";
                                    goto LABEL_13;
                                  case 751:
                                    v18 = *v8;
                                    v19 = "bandKill_formatVertBalance";
                                    goto LABEL_13;
                                  case 753:
                                    v18 = *v8;
                                    v19 = "cbdrNumSlowRefreshes";
                                    goto LABEL_13;
                                  case 754:
                                    v18 = *v8;
                                    v19 = "cbdrNumFastRefreshes";
                                    goto LABEL_13;
                                  case 755:
                                    v18 = *v8;
                                    v19 = "cbdrTotalRefreshValidity";
                                    goto LABEL_13;
                                  case 756:
                                    v20 = "cbdrRefreshedAges";
                                    v21 = a1;
                                    v22 = 756;
                                    goto LABEL_544;
                                  case 758:
                                    v18 = *v8;
                                    v19 = "cbdrSkippedBlocks";
                                    goto LABEL_13;
                                  case 759:
                                    v20 = "cbdrScanPct";
                                    v21 = a1;
                                    v22 = 759;
                                    goto LABEL_19;
                                  case 760:
                                    v18 = *v8;
                                    v19 = "raidSuccessfulBMXReconstructionInternal";
                                    goto LABEL_13;
                                  case 761:
                                    v18 = *v8;
                                    v19 = "raidSuccessfulBMXReconstructionHost";
                                    goto LABEL_13;
                                  case 762:
                                    v18 = *v8;
                                    v19 = "raidFailedBMXReconstructionInternal";
                                    goto LABEL_13;
                                  case 763:
                                    v18 = *v8;
                                    v19 = "raidFailedBMXReconstructionHost";
                                    goto LABEL_13;
                                  case 764:
                                    v18 = *v8;
                                    v19 = "ricSPRVFail";
                                    goto LABEL_13;
                                  case 765:
                                    v18 = *v8;
                                    v19 = "ricMPRVFail";
                                    goto LABEL_13;
                                  case 768:
                                    v20 = "cbdrRefreshedAgesSLC";
                                    v21 = a1;
                                    v22 = 768;
LABEL_544:
                                    v14 = v8;
                                    v15 = 9;
                                    goto LABEL_12;
                                  case 770:
                                    v20 = "cpuBurstLength";
                                    v21 = a1;
                                    v22 = 770;
                                    goto LABEL_23;
                                  case 771:
                                    v18 = *v8;
                                    v19 = "autoSkipRaidRecoFail";
                                    goto LABEL_13;
                                  case 772:
                                    v20 = "dmReasonsSlc";
                                    v21 = a1;
                                    v22 = 772;
                                    goto LABEL_155;
                                  case 773:
                                    v20 = "dmReasonsTlc";
                                    v21 = a1;
                                    v22 = 773;
                                    goto LABEL_155;
                                  case 774:
                                    v18 = *v8;
                                    v19 = "raidReconstructFailBMXAbort";
                                    goto LABEL_13;
                                  case 775:
                                    v18 = *v8;
                                    v19 = "bandKill_fatBindingNoBlocks";
                                    goto LABEL_13;
                                  case 776:
                                    v18 = *v8;
                                    v19 = "bandKill_fatBindingFewBlocks";
                                    goto LABEL_13;
                                  case 777:
                                    v18 = *v8;
                                    v19 = "numBadBootBlocks";
                                    goto LABEL_13;
                                  case 778:
                                    v18 = *v8;
                                    v19 = "snapshotCPUHigh";
                                    goto LABEL_13;
                                  default:
                                    switch(v7)
                                    {
                                      case 779:
                                        v18 = *v8;
                                        v19 = "snapshotCPULow";
                                        goto LABEL_13;
                                      case 780:
                                        v18 = *v8;
                                        v19 = "gcWithoutBMs";
                                        goto LABEL_13;
                                      case 781:
                                        v20 = "gcSearchTimeHistory";
                                        v21 = a1;
                                        v22 = 781;
                                        goto LABEL_11;
                                      case 785:
                                        v20 = "gcSearchPortion";
                                        v21 = a1;
                                        v22 = 785;
                                        goto LABEL_85;
                                      case 786:
                                        v18 = *v8;
                                        v19 = "raidReconstructFailBmxMp";
                                        goto LABEL_13;
                                      case 787:
                                        v18 = *v8;
                                        v19 = "raidReconstructFailBmx";
                                        goto LABEL_13;
                                      case 788:
                                        v18 = *v8;
                                        v19 = "raidReconstructFailBMXUECC";
                                        goto LABEL_13;
                                      case 789:
                                        v18 = *v8;
                                        v19 = "raidReconstructFailBMXBlank";
                                        goto LABEL_13;
                                      case 790:
                                        v18 = *v8;
                                        v19 = "raidPrevFailedReconstructBmxMpSkip";
                                        goto LABEL_13;
                                      case 792:
                                        v18 = *v8;
                                        v19 = "numTLCFatBands";
                                        goto LABEL_13;
                                      case 793:
                                        v18 = *v8;
                                        v19 = "fatValidity";
                                        goto LABEL_13;
                                      case 794:
                                        v18 = *v8;
                                        v19 = "fatTotal";
                                        goto LABEL_13;
                                      case 798:
                                        v20 = "raidBMXFailP";
                                        v21 = a1;
                                        v22 = 798;
                                        goto LABEL_22;
                                      case 799:
                                        v20 = "raidBMXFailUECC";
                                        v21 = a1;
                                        v22 = 799;
                                        goto LABEL_22;
                                      case 804:
                                        v20 = "raidBMXFailNoSPBX";
                                        v21 = a1;
                                        v22 = 804;
                                        goto LABEL_22;
                                      case 806:
                                        v20 = "raidBMXFailBlank";
                                        v21 = a1;
                                        v22 = 806;
                                        goto LABEL_22;
                                      case 809:
                                        v20 = "raidBMXFailUnsup";
                                        v21 = a1;
                                        v22 = 809;
                                        goto LABEL_22;
                                      case 811:
                                        v20 = "raidBMXFailMpSkip";
                                        v21 = a1;
                                        v22 = 811;
                                        goto LABEL_22;
                                      case 812:
                                        v20 = "raidBMXFailAbort";
                                        v21 = a1;
                                        v22 = 812;
                                        goto LABEL_22;
                                      case 813:
                                        v18 = *v8;
                                        v19 = "TurboRaidIsEnabled";
                                        goto LABEL_13;
                                      case 814:
                                        v20 = "raidBMXFailOther";
                                        v21 = a1;
                                        v22 = 814;
                                        goto LABEL_22;
                                      case 815:
                                        v20 = "raidBMXSuccess";
                                        v21 = a1;
                                        v22 = 815;
                                        goto LABEL_22;
                                      case 816:
                                        v18 = *v8;
                                        v19 = "skinnyBandsExtraDip";
                                        goto LABEL_13;
                                      case 821:
                                        v18 = *v8;
                                        v19 = "writeAmp";
                                        goto LABEL_13;
                                      case 822:
                                        v18 = *v8;
                                        v19 = "ricMaxClogOnlyPages";
                                        goto LABEL_13;
                                      case 823:
                                        v20 = "readClassifyStatusesHisto";
                                        v21 = a1;
                                        v22 = 823;
                                        goto LABEL_21;
                                      case 824:
                                        v20 = "readWithAuxStatusesHisto";
                                        v21 = a1;
                                        v22 = 824;
                                        goto LABEL_11;
                                      case 825:
                                        v20 = "readReconstructStatusesHisto";
                                        v21 = a1;
                                        v22 = 825;
                                        goto LABEL_11;
                                      case 826:
                                        v18 = *v8;
                                        v19 = "bdrBackupChecks";
                                        goto LABEL_13;
                                      case 827:
                                        v18 = *v8;
                                        v19 = "ricExceedClogOnlyPagesTH";
                                        goto LABEL_13;
                                      case 828:
                                        v18 = *v8;
                                        v19 = "numDipFailures";
                                        goto LABEL_13;
                                      case 862:
                                        v18 = *v8;
                                        v19 = "raidSuccessfulSkip";
                                        goto LABEL_13;
                                      case 863:
                                        v18 = *v8;
                                        v19 = "raidFailedSkip";
                                        goto LABEL_13;
                                      case 864:
                                        v18 = *v8;
                                        v19 = "raidSkipAttempts";
                                        goto LABEL_13;
                                      case 865:
                                        v20 = "timeOfThrottlingPerLevel";
                                        v21 = a1;
                                        v22 = 865;
                                        goto LABEL_85;
                                      case 866:
                                        v20 = "timeOfThrottlingPerReadLevel";
                                        v21 = a1;
                                        v22 = 866;
                                        goto LABEL_85;
                                      case 867:
                                        v20 = "timeOfThrottlingPerWriteLevel";
                                        v21 = a1;
                                        v22 = 867;
                                        goto LABEL_85;
                                      case 868:
                                        v20 = "dmReasonsSlc_1bc";
                                        v21 = a1;
                                        v22 = 868;
                                        goto LABEL_155;
                                      case 869:
                                        v20 = "dmReasonsTlc_1bc";
                                        v21 = a1;
                                        v22 = 869;
                                        goto LABEL_155;
                                      case 870:
                                        v20 = "dmReasonsSlc_1bc_he";
                                        v21 = a1;
                                        v22 = 870;
                                        goto LABEL_155;
                                      case 871:
                                        v20 = "dmReasonsTlc_1bc_he";
                                        v21 = a1;
                                        v22 = 871;
                                        goto LABEL_155;
                                      case 876:
                                        v20 = "dmReasonsSlc_mbc";
                                        v21 = a1;
                                        v22 = 876;
                                        goto LABEL_155;
                                      case 877:
                                        v20 = "dmReasonsTlc_mbc";
                                        v21 = a1;
                                        v22 = 877;
                                        goto LABEL_155;
                                      case 883:
                                        v18 = *v8;
                                        v19 = "clogEmptyProgramms";
                                        goto LABEL_13;
                                      case 884:
                                        v18 = *v8;
                                        v19 = "oslcHwCloseBand";
                                        goto LABEL_13;
                                      case 891:
                                        v20 = "turboRaidSuccessAuxPartition";
                                        v21 = a1;
                                        v22 = 891;
                                        goto LABEL_20;
                                      case 892:
                                        v20 = "turboRaidFailAuxPartition";
                                        v21 = a1;
                                        v22 = 892;
                                        goto LABEL_20;
                                      case 893:
                                        v20 = "turboRaidClassifyQualPartition";
                                        v21 = a1;
                                        v22 = 893;
                                        goto LABEL_20;
                                      case 894:
                                        v20 = "turboRaidClassifyRelPartition";
                                        v21 = a1;
                                        v22 = 894;
                                        goto LABEL_20;
                                      case 895:
                                        v18 = *v8;
                                        v19 = "IND_pool_freeMinSilo";
                                        goto LABEL_13;
                                      case 896:
                                        v18 = *v8;
                                        v19 = "autoSweepBlocks";
                                        goto LABEL_13;
                                      case 897:
                                        v20 = "wcWrFragSizes";
                                        v21 = a1;
                                        v22 = 897;
                                        goto LABEL_85;
                                      case 898:
                                        v20 = "indStateAcrossGcDidNoL";
                                        v21 = a1;
                                        v22 = 898;
                                        goto LABEL_85;
                                      case 899:
                                        v20 = "indStateAcrossGcDidL";
                                        v21 = a1;
                                        v22 = 899;
                                        goto LABEL_85;
                                      case 900:
                                        v18 = *v8;
                                        v19 = "turboRaidNoClassifyDueToWasRetire";
                                        goto LABEL_13;
                                      case 901:
                                        v18 = *v8;
                                        v19 = "turboRaidNoClassifyDueToOpenBand";
                                        goto LABEL_13;
                                      case 902:
                                        v18 = *v8;
                                        v19 = "turboRaidNoClassifyDueToQualityBlock";
                                        goto LABEL_13;
                                      case 903:
                                        v18 = *v8;
                                        v19 = "turboRaidGbbOpenBand";
                                        goto LABEL_13;
                                      case 904:
                                        v18 = *v8;
                                        v19 = "turboRaidGbbShouldRetireOnRefresh";
                                        goto LABEL_13;
                                      case 905:
                                        v20 = "turboRaidRelPerBlock";
                                        v21 = a1;
                                        v22 = 905;
                                        goto LABEL_85;
                                      case 906:
                                        v20 = "turboRaidRelBetweenRefreshesPerBlock";
                                        v21 = a1;
                                        v22 = 906;
                                        goto LABEL_85;
                                      case 907:
                                        v20 = "turboRaidMaxRelBetweenRefreshesPerBlock";
                                        v21 = a1;
                                        v22 = 907;
                                        goto LABEL_85;
                                      case 908:
                                        v20 = "turboRaidMinRelBetweenRefreshesPerBlock";
                                        v21 = a1;
                                        v22 = 908;
                                        goto LABEL_85;
                                      case 918:
                                        v20 = "turboRaidMaxCyclesBetweenRel";
                                        v21 = a1;
                                        v22 = 918;
                                        goto LABEL_85;
                                      default:
                                        if (v7 <= 1039)
                                        {
                                          switch(v7)
                                          {
                                            case 919:
                                              v20 = "turboRaidMinCyclesBetweenRel";
                                              v21 = a1;
                                              v22 = 919;
                                              goto LABEL_85;
                                            case 920:
                                              v20 = "turboRaidAuxPerBlock";
                                              v21 = a1;
                                              v22 = 920;
                                              goto LABEL_85;
                                            case 921:
                                              v20 = "turboRaidAuxBetweenRefreshesPerBlock";
                                              v21 = a1;
                                              v22 = 921;
                                              goto LABEL_85;
                                            case 922:
                                              v18 = *v8;
                                              v19 = "turboRaidRelLockMark";
                                              goto LABEL_13;
                                            case 923:
                                              v18 = *v8;
                                              v19 = "turboRaidAuxLockMark";
                                              goto LABEL_13;
                                            case 924:
                                            case 925:
                                            case 926:
                                            case 927:
                                            case 928:
                                            case 929:
                                            case 936:
                                            case 941:
                                            case 945:
                                            case 946:
                                            case 947:
                                            case 949:
                                            case 950:
                                            case 952:
                                            case 954:
                                            case 955:
                                            case 956:
                                            case 957:
                                            case 958:
                                            case 959:
                                            case 960:
                                            case 963:
                                            case 964:
                                            case 965:
                                            case 966:
                                            case 968:
                                            case 969:
                                            case 970:
                                              goto LABEL_696;
                                            case 930:
                                              v20 = "turboRaidMaxCyclesBetweenAux";
                                              v21 = a1;
                                              v22 = 930;
                                              goto LABEL_85;
                                            case 931:
                                              v20 = "turboRaidMinCyclesBetweenAux";
                                              v21 = a1;
                                              v22 = 931;
                                              goto LABEL_85;
                                            case 932:
                                              v20 = "turboRaidLastRelPECycles";
                                              v21 = a1;
                                              v22 = 932;
                                              goto LABEL_85;
                                            case 933:
                                              v20 = "turboRaidRelQualPECycles";
                                              v21 = a1;
                                              v22 = 933;
                                              goto LABEL_85;
                                            case 934:
                                              v20 = "turboRaidLastAuxPECycles";
                                              v21 = a1;
                                              v22 = 934;
                                              goto LABEL_85;
                                            case 935:
                                              v20 = "turboRaidAuxQualPECycles";
                                              v21 = a1;
                                              v22 = 935;
                                              goto LABEL_85;
                                            case 937:
                                              v18 = *v8;
                                              v19 = "turboRaidPEFailAfterRel";
                                              goto LABEL_13;
                                            case 938:
                                              v18 = *v8;
                                              v19 = "turboRaidPEFailAfterAux";
                                              goto LABEL_13;
                                            case 939:
                                              v18 = *v8;
                                              v19 = "dvfmVotesCPU";
                                              goto LABEL_13;
                                            case 940:
                                              v18 = *v8;
                                              v19 = "dvfmVotesBandwidth";
                                              goto LABEL_13;
                                            case 942:
                                              v18 = *v8;
                                              v19 = "maxSLCEndurance";
                                              goto LABEL_13;
                                            case 943:
                                              v18 = *v8;
                                              v19 = "maxMixedEndurance";
                                              goto LABEL_13;
                                            case 944:
                                              v18 = *v8;
                                              v19 = "maxNativeEndurance";
                                              goto LABEL_13;
                                            case 948:
                                              v20 = "assertHistory";
                                              v21 = a1;
                                              v22 = 948;
                                              v14 = v8;
                                              v15 = 40;
                                              goto LABEL_12;
                                            case 951:
                                              v18 = *v8;
                                              v19 = "asp3Support";
                                              goto LABEL_13;
                                            case 953:
                                              v18 = *v8;
                                              v19 = "numCrossTempRaidUecc";
                                              goto LABEL_13;
                                            case 961:
                                              v18 = *v8;
                                              v19 = "osBuildStr";
                                              goto LABEL_13;
                                            case 962:
                                              v18 = *v8;
                                              v19 = "raidConfig";
                                              goto LABEL_13;
                                            case 967:
                                              v20 = "indTrimFrags";
                                              v21 = a1;
                                              v22 = 967;
                                              goto LABEL_153;
                                            case 971:
                                              v20 = "indUsedFrags";
                                              v21 = a1;
                                              v22 = 971;
                                              goto LABEL_153;
                                            default:
                                              switch(v7)
                                              {
                                                case 996:
                                                  v18 = *v8;
                                                  v16 = (_QWORD *)a1;
                                                  v19 = "clogFindFail";
                                                  goto LABEL_14;
                                                case 997:
                                                  v18 = *v8;
                                                  v16 = (_QWORD *)a1;
                                                  v19 = "clogFindBlank";
                                                  goto LABEL_14;
                                                case 998:
                                                  v18 = *v8;
                                                  v16 = (_QWORD *)a1;
                                                  v19 = "clogFindUnc";
                                                  goto LABEL_14;
                                                case 999:
                                                  v18 = *v8;
                                                  v16 = (_QWORD *)a1;
                                                  v19 = "clogFindUnexpected";
                                                  goto LABEL_14;
                                                case 1001:
                                                  v21 = a1;
                                                  v22 = 1001;
                                                  v20 = "clogReplayFailReason";
                                                  goto LABEL_23;
                                                case 1002:
                                                  v18 = *v8;
                                                  v16 = (_QWORD *)a1;
                                                  v19 = "clogReplayTransientError";
                                                  goto LABEL_14;
                                                case 1003:
                                                  v18 = *v8;
                                                  v16 = (_QWORD *)a1;
                                                  v19 = "clogReplaySpfError";
                                                  goto LABEL_14;
                                                case 1015:
                                                  v21 = a1;
                                                  v22 = 1015;
                                                  v20 = "eanEarlyBootUeccPage";
                                                  goto LABEL_22;
                                                case 1016:
                                                  v18 = *v8;
                                                  v16 = (_QWORD *)a1;
                                                  v19 = "eanEarlyBootNumUeccPages";
                                                  goto LABEL_14;
                                                case 1017:
                                                  v18 = *v8;
                                                  v16 = (_QWORD *)a1;
                                                  v19 = "eanEarlyBootUeccMultiplane";
                                                  goto LABEL_14;
                                                default:
                                                  goto LABEL_696;
                                              }
                                          }
                                        }
                                        if (v7 > 1146)
                                        {
                                          switch(v7)
                                          {
                                            case 1147:
                                              v21 = a1;
                                              v22 = 1147;
                                              v20 = "gc_concurrent_dw_gc12";
                                              goto LABEL_713;
                                            case 1148:
                                              v21 = a1;
                                              v22 = 1148;
                                              v20 = "gc_concurrent_dw_gc1";
                                              goto LABEL_713;
                                            case 1149:
                                              v21 = a1;
                                              v22 = 1149;
                                              v20 = "gc_concurrent_dw_gc2";
LABEL_713:
                                              v14 = v8;
                                              v15 = 24;
                                              goto LABEL_12;
                                            case 1150:
                                            case 1151:
                                            case 1152:
                                            case 1153:
                                            case 1154:
                                            case 1155:
                                            case 1156:
                                            case 1159:
                                            case 1160:
                                            case 1161:
                                            case 1162:
                                            case 1163:
                                            case 1164:
                                            case 1165:
                                            case 1166:
                                            case 1167:
                                            case 1170:
                                            case 1173:
                                            case 1174:
                                            case 1175:
                                            case 1176:
                                            case 1177:
                                            case 1178:
                                            case 1186:
                                            case 1187:
                                            case 1188:
                                              goto LABEL_696;
                                            case 1157:
                                              v18 = *v8;
                                              v16 = (_QWORD *)a1;
                                              v19 = "eanMaxForceROTimeMs";
                                              goto LABEL_14;
                                            case 1158:
                                              v18 = *v8;
                                              v16 = (_QWORD *)a1;
                                              v19 = "eanMaxForceRORecoTimeMs";
                                              goto LABEL_14;
                                            case 1168:
                                              v21 = a1;
                                              v22 = 1168;
                                              v20 = "poDetectPERemovalTotalCost";
                                              goto LABEL_20;
                                            case 1169:
                                              v21 = a1;
                                              v22 = 1169;
                                              v20 = "poDetectEmptySpotRemovalTotalCost";
                                              goto LABEL_20;
                                            case 1171:
                                              v21 = a1;
                                              v22 = 1171;
                                              v20 = "poDetectEmptySpotRemovalAge";
                                              break;
                                            case 1172:
                                              v21 = a1;
                                              v22 = 1172;
                                              v20 = "poDetectGBBedMostSevereCost";
                                              goto LABEL_21;
                                            case 1179:
                                              v21 = a1;
                                              v22 = 1179;
                                              v20 = "gc_cur_dw_gc1";
                                              goto LABEL_22;
                                            case 1180:
                                              v21 = a1;
                                              v22 = 1180;
                                              v20 = "gc_cur_dw_gc2";
                                              goto LABEL_22;
                                            case 1181:
                                              v21 = a1;
                                              v22 = 1181;
                                              v20 = "gc_cur_dw_gc3";
                                              goto LABEL_22;
                                            case 1182:
                                              v21 = a1;
                                              v22 = 1182;
                                              v20 = "gc_tot_dw_gc1";
                                              goto LABEL_22;
                                            case 1183:
                                              v21 = a1;
                                              v22 = 1183;
                                              v20 = "gc_tot_dw_gc2";
                                              goto LABEL_22;
                                            case 1184:
                                              v18 = *v8;
                                              v16 = (_QWORD *)a1;
                                              v19 = "unhappy_state";
                                              goto LABEL_14;
                                            case 1185:
                                              v18 = *v8;
                                              v16 = (_QWORD *)a1;
                                              v19 = "unhappy_level";
                                              goto LABEL_14;
                                            case 1189:
                                              v18 = *v8;
                                              v16 = (_QWORD *)a1;
                                              v19 = "lastLbaFormatTime";
                                              goto LABEL_14;
                                            case 1190:
                                              v21 = a1;
                                              v22 = 1190;
                                              v20 = "powerDownTime";
                                              goto LABEL_153;
                                            default:
                                              if (v7 == 1196)
                                              {
                                                v21 = a1;
                                                v22 = 1196;
                                                v20 = "poDetectGBBedTotalCost";
                                                goto LABEL_19;
                                              }
                                              if (v7 != 1197)
                                                goto LABEL_696;
                                              v21 = a1;
                                              v22 = 1197;
                                              v20 = "poDetectGBBedAge";
                                              break;
                                          }
LABEL_11:
                                          v14 = v8;
                                          v15 = 10;
                                          goto LABEL_12;
                                        }
                                        if (v7 > 1104)
                                        {
                                          if (v7 <= 1115)
                                          {
                                            if (v7 == 1105)
                                            {
                                              v21 = a1;
                                              v22 = 1105;
                                              v20 = "hostReadSequential";
                                              goto LABEL_705;
                                            }
                                            if (v7 == 1106)
                                            {
                                              v21 = a1;
                                              v22 = 1106;
                                              v20 = "GCReadSequential";
LABEL_705:
                                              v14 = v8;
                                              v15 = 14;
                                              goto LABEL_12;
                                            }
                                          }
                                          else
                                          {
                                            switch(v7)
                                            {
                                              case 1116:
                                                v21 = a1;
                                                v22 = 1116;
                                                v20 = "gcwamp";
                                                goto LABEL_155;
                                              case 1137:
                                                v18 = *v8;
                                                v16 = (_QWORD *)a1;
                                                v19 = "numOfToUnhappySwitches";
                                                goto LABEL_14;
                                              case 1138:
                                                v18 = *v8;
                                                v16 = (_QWORD *)a1;
                                                v19 = "numOfToHappySwitches";
                                                goto LABEL_14;
                                            }
                                          }
                                          goto LABEL_696;
                                        }
                                        if (v7 <= 1041)
                                        {
                                          v21 = a1;
                                          if (v7 == 1040)
                                          {
                                            v22 = 1040;
                                            v20 = "bandsAgeBinsV2";
                                          }
                                          else
                                          {
                                            v22 = 1041;
                                            v20 = "bandsAgeBinsSnapshot";
                                          }
                                          v14 = v8;
                                          v15 = 31;
                                          goto LABEL_12;
                                        }
                                        if (v7 == 1042)
                                        {
                                          v21 = a1;
                                          v22 = 1042;
                                          v20 = "bandsAgeBinsReadSectors";
                                          v14 = v8;
                                          v15 = 15;
LABEL_12:
                                          sub_1000245FC(v21, v22, v20, v14, v15);
                                          goto LABEL_15;
                                        }
                                        if (v7 == 1080)
                                        {
                                          v18 = *v8;
                                          v16 = (_QWORD *)a1;
                                          v19 = "raidForceClogLoad";
                                          goto LABEL_14;
                                        }
LABEL_696:
                                        if (v7 > 1231)
                                        {
                                          switch(v7)
                                          {
                                            case 1232:
                                              v18 = *v8;
                                              v16 = (_QWORD *)a1;
                                              v19 = "eanFastSize";
                                              goto LABEL_14;
                                            case 1233:
                                              v18 = *v8;
                                              v16 = (_QWORD *)a1;
                                              v19 = "eanNumSlcEvictions";
                                              goto LABEL_14;
                                            case 1234:
                                              v18 = *v8;
                                              v16 = (_QWORD *)a1;
                                              v19 = "eanNumForcedCompress";
                                              goto LABEL_14;
                                            case 1241:
                                              v21 = a1;
                                              v22 = 1241;
                                              v20 = "s2rTimeHisto";
                                              goto LABEL_11;
                                            case 1244:
                                              v18 = *v8;
                                              v16 = (_QWORD *)a1;
                                              v19 = "calendarTimeWentBackward";
                                              goto LABEL_14;
                                            case 1246:
                                              v21 = a1;
                                              v22 = 1246;
                                              v20 = "bandsUeccCrossTempHisto";
                                              goto LABEL_23;
                                            default:
                                              break;
                                          }
                                        }
                                        else
                                        {
                                          switch(v7)
                                          {
                                            case 1198:
                                              v21 = a1;
                                              v22 = 1198;
                                              v20 = "poDetectPERemovalMostSevereCost";
                                              goto LABEL_21;
                                            case 1199:
                                              v18 = *v8;
                                              v16 = (_QWORD *)a1;
                                              v19 = "poDetectCurrentSize";
                                              goto LABEL_14;
                                            case 1200:
                                              break;
                                            case 1201:
                                              v21 = a1;
                                              v22 = 1201;
                                              v20 = "gcVerticalSuccssfulAlignments";
                                              goto LABEL_22;
                                            case 1202:
                                              v21 = a1;
                                              v22 = 1202;
                                              v20 = "gcVerticalNoAlignmentDueToMissingSegs";
                                              goto LABEL_22;
                                            default:
                                              switch(v7)
                                              {
                                                case 1216:
                                                  v21 = a1;
                                                  v22 = 1216;
                                                  v20 = "tlcWLPerDipAvgPEC";
                                                  goto LABEL_713;
                                                case 1217:
                                                  v21 = a1;
                                                  v22 = 1217;
                                                  v20 = "tlcWLPerDipMaxPEC";
                                                  goto LABEL_713;
                                                case 1218:
                                                  v21 = a1;
                                                  v22 = 1218;
                                                  v20 = "tlcWLPerDipMinPEC";
                                                  goto LABEL_713;
                                                case 1219:
                                                case 1220:
                                                case 1221:
                                                case 1222:
                                                case 1223:
                                                  goto LABEL_15;
                                                case 1224:
                                                  v21 = a1;
                                                  v22 = 1224;
                                                  v20 = "apfsValidLbaOvershoot";
                                                  v14 = v8;
                                                  v15 = 20;
                                                  goto LABEL_12;
                                                default:
                                                  if (v7 != 1211)
                                                    goto LABEL_15;
                                                  v21 = a1;
                                                  v22 = 1211;
                                                  v20 = "forcedAllocationSmallEraseQ";
                                                  break;
                                              }
                                              goto LABEL_713;
                                          }
                                        }
LABEL_15:
                                        a2 = &v8[v10];
                                        v6 = v11 - v10;
                                        if (v11 != (_DWORD)v10)
                                          continue;
                                        return 1;
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
  }
}

uint64_t sub_1000245FC(uint64_t result, int a2, const char *a3, uint64_t *a4, unsigned int a5)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char __str[101];

  v7 = (_QWORD *)result;
  v8 = *a4;
  if (a2 <= 44)
  {
    switch(a2)
    {
      case 4:
        *(_QWORD *)(result + 72) = v8;
        if (a5)
          goto LABEL_42;
        return result;
      case 5:
      case 6:
      case 8:
      case 9:
      case 10:
      case 11:
      case 14:
      case 15:
      case 16:
        goto LABEL_41;
      case 7:
        *(_QWORD *)(result + 64) = v8;
        if (a5)
          goto LABEL_42;
        return result;
      case 12:
        *(_QWORD *)(result + 144) = v8;
        if (a5)
          goto LABEL_42;
        return result;
      case 13:
        *(_QWORD *)(result + 152) = v8;
        if (a5)
          goto LABEL_42;
        return result;
      case 17:
        *(_QWORD *)(result + 88) = v8;
        if (a5)
          goto LABEL_42;
        return result;
      case 18:
        *(_QWORD *)(result + 104) = v8;
        if (a5)
          goto LABEL_42;
        return result;
      case 19:
        *(_QWORD *)(result + 96) = v8;
        if (a5)
          goto LABEL_42;
        return result;
      case 20:
        *(_QWORD *)(result + 112) = v8;
        if (a5)
          goto LABEL_42;
        return result;
      default:
        if (a2 != 28)
          goto LABEL_41;
        *(_QWORD *)(result + 168) = v8;
        if (!a5)
          return result;
        goto LABEL_42;
    }
  }
  switch(a2)
  {
    case '-':
      *(_QWORD *)(result + 176) = v8;
      if (a5)
        goto LABEL_42;
      return result;
    case '.':
    case '/':
    case '6':
    case '7':
      goto LABEL_41;
    case '0':
      *(_QWORD *)(result + 80) = v8;
      if (!a5)
        return result;
      goto LABEL_42;
    case '1':
      *(_DWORD *)(result + 56) = v8;
      if (!a5)
        return result;
      goto LABEL_42;
    case '2':
      *(_DWORD *)(result + 52) = v8;
      if (!a5)
        return result;
      goto LABEL_42;
    case '3':
      *(_DWORD *)(result + 48) = v8;
      if (!a5)
        return result;
      goto LABEL_42;
    case '4':
      *(_DWORD *)(result + 44) = v8;
      if (!a5)
        return result;
      goto LABEL_42;
    case '5':
      *(_DWORD *)(result + 32) = v8;
      goto LABEL_41;
    case '8':
      *(_QWORD *)(result + 160) = v8;
      if (!a5)
        return result;
      goto LABEL_42;
    default:
      if (a2 != 265)
        goto LABEL_41;
      if (a5)
      {
        v9 = a5;
        v10 = (_QWORD *)(result + 184);
        v11 = a4;
        do
        {
          v12 = *v11++;
          *v10++ = v12;
          --v9;
        }
        while (v9);
LABEL_41:
        if (a5)
        {
LABEL_42:
          if (a5 == 1)
          {
            return sub_1000361A4((_QWORD *)result, "", a3, v8);
          }
          else
          {
            v13 = 0;
            v14 = a5;
            do
            {
              snprintf(__str, 0x64uLL, "%d", v13);
              __str[100] = 0;
              result = sub_1000361A4(v7, a3, __str, a4[v13++]);
            }
            while (v14 != v13);
          }
        }
      }
      return result;
  }
}

double sub_100024844(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  double result;

  v2 = *(_QWORD **)a1;
  if (v2)
  {
    do
    {
      v3 = (_QWORD *)v2[14];
      free(v2);
      v2 = v3;
    }
    while (v3);
  }
  v4 = *(_QWORD **)(a1 + 16);
  if (v4)
  {
    do
    {
      v5 = (_QWORD *)v4[14];
      free(v4);
      v4 = v5;
    }
    while (v5);
  }
  result = 0.0;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t sub_1000248B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t *v8;
  uint64_t v10;
  unsigned int v11;
  int v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  unsigned int v20;
  const char *v22;
  char v23;
  char __str[16];
  __int128 v25;

  v8 = (unint64_t *)a2;
  v10 = 0;
  v11 = a3 >> 3;
  *(_OWORD *)__str = 0u;
  v25 = 0u;
  do
  {
LABEL_2:
    if (!v11)
      return v10;
    v13 = *v8++;
    v12 = v13;
    v14 = HIDWORD(v13);
    --v11;
  }
  while (!HIDWORD(v13));
  if (v12 == 0xFFFF || v12 > 0x30000000 || v11 < v14)
    return v10;
  v17 = (v12 - 1);
  if (v17 <= 0x47)
    __asm { BR              X9 }
  v18 = (v12 - 73);
  if (v18 <= 0x46)
    __asm { BR              X9 }
  switch(v12)
  {
    case 144:
      if ((sub_10002F594(a1, "numMemExtreme", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: numMemExtreme(144) cannot add 1 element to context";
      goto LABEL_15;
    case 145:
      if ((sub_10002F594(a1, "maxMemExtremeDuration", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: maxMemExtremeDuration(145) cannot add 1 element to context";
      goto LABEL_15;
    case 146:
      if ((sub_10002F594(a1, "memExtremeDuration", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: memExtremeDuration(146) cannot add 1 element to context";
      goto LABEL_15;
    case 147:
      if ((sub_10002F594(a1, "bandGetsExtreme", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: bandGetsExtreme(147) cannot add 1 element to context";
      goto LABEL_15;
    case 148:
      if ((sub_10002F594(a1, "bandGetsLow", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: bandGetsLow(148) cannot add 1 element to context";
      goto LABEL_15;
    case 149:
      if ((sub_10002F594(a1, "numHostChoke", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: numHostChoke(149) cannot add 1 element to context";
      goto LABEL_15;
    case 152:
      if ((sub_10002F594(a1, "AbortSkip_ProgramError", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: AbortSkip_ProgramError(152) cannot add 1 element to context";
      goto LABEL_15;
    case 153:
      if ((sub_10002F594(a1, "AbortSkip_ReadErrorOpenBand", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: AbortSkip_ReadErrorOpenBand(153) cannot add 1 element to context";
      goto LABEL_15;
    case 154:
      if ((sub_10002F594(a1, "AbortSkip_FailedRebuildingParity", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: AbortSkip_FailedRebuildingParity(154) cannot add 1 element to context";
      goto LABEL_15;
    case 155:
      if ((sub_10002F594(a1, "AbortPad_OpenRefreshBand", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: AbortPad_OpenRefreshBand(155) cannot add 1 element to context";
      goto LABEL_15;
    case 156:
      if ((sub_10002F594(a1, "AbortPad_CloseBands", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: AbortPad_CloseBands(156) cannot add 1 element to context";
      goto LABEL_15;
    case 157:
      if ((sub_10002F594(a1, "AbortPad_SetPhoto", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: AbortPad_SetPhoto(157) cannot add 1 element to context";
      goto LABEL_15;
    case 158:
      if ((sub_10002F594(a1, "AbortPad_GcNoSource", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: AbortPad_GcNoSource(158) cannot add 1 element to context";
      goto LABEL_15;
    case 159:
      if ((sub_10002F594(a1, "AbortPad_Format", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: AbortPad_Format(159) cannot add 1 element to context";
      goto LABEL_15;
    case 160:
      if ((sub_10002F594(a1, "nandDiscoveryDuration", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: nandDiscoveryDuration(160) cannot add 1 element to context";
      goto LABEL_15;
    case 161:
      if ((sub_10002F594(a1, "coreCCEnableDuration", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: coreCCEnableDuration(161) cannot add 1 element to context";
      goto LABEL_15;
    case 163:
      if ((sub_10002F594(a1, "coreOpenDuration", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: coreOpenDuration(163) cannot add 1 element to context";
      goto LABEL_15;
    case 164:
      if ((sub_10002F594(a1, "coreWritableDuration", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: coreWritableDuration(164) cannot add 1 element to context";
      goto LABEL_15;
    case 165:
      if ((sub_10002F594(a1, "coreClogLoadDuration", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: coreClogLoadDuration(165) cannot add 1 element to context";
      goto LABEL_15;
    case 167:
      if ((sub_10002F594(a1, "bulkPFail", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: bulkPFail(167) cannot add 1 element to context";
      goto LABEL_15;
    case 169:
      if ((sub_10002F594(a1, "bulkRFail", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: bulkRFail(169) cannot add 1 element to context";
      goto LABEL_15;
    case 172:
      if ((sub_10002F594(a1, "raidSmartErrors", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: raidSmartErrors(172) cannot add 1 element to context";
      goto LABEL_15;
    case 182:
      if ((sub_10002F594(a1, "internalUeccs", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: internalUeccs(182) cannot add 1 element to context";
      goto LABEL_15;
    case 183:
      if ((sub_10002F594(a1, "e2eFail", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: e2eFail(183) cannot add 1 element to context";
      goto LABEL_15;
    case 184:
      if ((sub_10002F594(a1, "TempSensorMax", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: TempSensorMax(184) cannot add 1 element to context";
      goto LABEL_15;
    case 185:
      if ((sub_10002F594(a1, "TempSensorMin", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: TempSensorMin(185) cannot add 1 element to context";
      goto LABEL_15;
    case 186:
      if ((sub_10002F594(a1, "powerUpFromDDR", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: powerUpFromDDR(186) cannot add 1 element to context";
      goto LABEL_15;
    case 187:
      if ((sub_10002F594(a1, "numMemLow", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: numMemLow(187) cannot add 1 element to context";
      goto LABEL_15;
    case 188:
      if ((sub_10002F594(a1, "maxMemLowDuration", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: maxMemLowDuration(188) cannot add 1 element to context";
      goto LABEL_15;
    case 189:
      if ((sub_10002F594(a1, "memLowDuration", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: memLowDuration(189) cannot add 1 element to context";
      goto LABEL_15;
    case 190:
      if ((sub_10002F594(a1, "numFences", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: numFences(190) cannot add 1 element to context";
      goto LABEL_15;
    case 191:
      if ((sub_10002F594(a1, "hostPassiveIO", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: hostPassiveIO(191) cannot add 1 element to context";
      goto LABEL_15;
    case 192:
      if ((sub_10002F594(a1, "odtsMax", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: odtsMax(192) cannot add 1 element to context";
      goto LABEL_15;
    case 193:
      if ((sub_10002F594(a1, "defragMFromOrphans", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: defragMFromOrphans(193) cannot add 1 element to context";
      goto LABEL_15;
    case 194:
      if ((sub_10002F594(a1, "defragMFromFragments", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: defragMFromFragments(194) cannot add 1 element to context";
      goto LABEL_15;
    case 195:
      if ((sub_10002F594(a1, "defragMTime", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: defragMTime(195) cannot add 1 element to context";
      goto LABEL_15;
    case 196:
      if ((sub_10002F594(a1, "defragMMaxTime", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: defragMMaxTime(196) cannot add 1 element to context";
      goto LABEL_15;
    case 197:
      if ((sub_10002F594(a1, "raidFailedLbaMismatch", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: raidFailedLbaMismatch(197) cannot add 1 element to context";
      goto LABEL_15;
    case 198:
      if ((sub_10002F594(a1, "numSyscfgWrites", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: numSyscfgWrites(198) cannot add 1 element to context";
      goto LABEL_15;
    case 199:
      if ((sub_10002F594(a1, "indmbUnitsXfer", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: indmbUnitsXfer(199) cannot add 1 element to context";
      goto LABEL_15;
    case 200:
      if ((sub_10002F594(a1, "indmbUnitsCache", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: indmbUnitsCache(200) cannot add 1 element to context";
      goto LABEL_15;
    case 201:
      if ((sub_10002F594(a1, "indmbUnitsInd", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: indmbUnitsInd(201) cannot add 1 element to context";
      goto LABEL_15;
    case 202:
      if ((sub_10002F594(a1, "wcacheFS_Mbytes", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: wcacheFS_Mbytes(202) cannot add 1 element to context";
      goto LABEL_15;
    case 203:
      if ((sub_10002F594(a1, "wcacheDS_Mbytes", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: wcacheDS_Mbytes(203) cannot add 1 element to context";
      goto LABEL_15;
    case 204:
      if ((sub_10002F594(a1, "powerOnSeconds", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: powerOnSeconds(204) cannot add 1 element to context";
      goto LABEL_15;
    case 205:
      if ((sub_10002F594(a1, "numUnknownTokenHostRead", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: numUnknownTokenHostRead(205) cannot add 1 element to context";
      goto LABEL_15;
    case 206:
      if ((sub_10002F594(a1, "numUnmmapedTokenHostRead", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: numUnmmapedTokenHostRead(206) cannot add 1 element to context";
      goto LABEL_15;
    case 207:
      if ((_DWORD)v14 != 16)
        sub_10001F9D4("ASPFTLParseBufferToCxt: numOfThrottlingEntriesPerLevel(207): (#16) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
      if (v14 >= 0x10)
        v20 = 16;
      else
        v20 = v14;
      if ((sub_10002F594(a1, "numOfThrottlingEntriesPerLevel_", (uint64_t)v8, 8u, v20) & 1) != 0)
        goto LABEL_14;
      v22 = "ASPFTLParseBufferToCxt: numOfThrottlingEntriesPerLevel(207): Cannot add 16 elements to context";
      goto LABEL_2228;
    case 208:
      if ((sub_10002F594(a1, "wcacheFS_MbytesMin", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: wcacheFS_MbytesMin(208) cannot add 1 element to context";
      goto LABEL_15;
    case 209:
      if ((sub_10002F594(a1, "wcacheFS_MbytesMax", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: wcacheFS_MbytesMax(209) cannot add 1 element to context";
      goto LABEL_15;
    case 210:
      if ((sub_10002F594(a1, "prepareForShutdownFailCounter", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: prepareForShutdownFailCounter(210) cannot add 1 element to context";
      goto LABEL_15;
    case 211:
      if ((sub_10002F594(a1, "lpsrEntry", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: lpsrEntry(211) cannot add 1 element to context";
      goto LABEL_15;
    case 212:
      if ((sub_10002F594(a1, "lpsrExit", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: lpsrExit(212) cannot add 1 element to context";
      goto LABEL_15;
    case 213:
      if ((_DWORD)v14 != 8)
        sub_10001F9D4("ASPFTLParseBufferToCxt: crcInternalReadFail(213): (#8) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
      if (v14 >= 8)
        v20 = 8;
      else
        v20 = v14;
      if ((sub_10002F594(a1, "crcInternalReadFail_", (uint64_t)v8, 8u, v20) & 1) != 0)
        goto LABEL_14;
      v22 = "ASPFTLParseBufferToCxt: crcInternalReadFail(213): Cannot add 8 elements to context";
      goto LABEL_2228;
    case 214:
      if ((sub_10002F594(a1, "wcacheFSEvictCnt", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: wcacheFSEvictCnt(214) cannot add 1 element to context";
      goto LABEL_15;
    case 215:
      if ((sub_10002F594(a1, "wcacheFSEvictSize", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: wcacheFSEvictSize(215) cannot add 1 element to context";
      goto LABEL_15;
    case 216:
      if ((sub_10002F594(a1, "wcacheFSWr", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: wcacheFSWr(216) cannot add 1 element to context";
      goto LABEL_15;
    case 217:
      if ((sub_10002F594(a1, "wcacheDSWr", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: wcacheDSWr(217) cannot add 1 element to context";
      goto LABEL_15;
    case 218:
      if ((_DWORD)v14 != 10)
        sub_10001F9D4("ASPFTLParseBufferToCxt: wcacheFSEvictSizeLogDist(218): (#10) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
      if (v14 >= 0xA)
        v20 = 10;
      else
        v20 = v14;
      if ((sub_10002F594(a1, "wcacheFSEvictSizeLogDist_", (uint64_t)v8, 8u, v20) & 1) != 0)
        goto LABEL_14;
      v22 = "ASPFTLParseBufferToCxt: wcacheFSEvictSizeLogDist(218): Cannot add 10 elements to context";
      goto LABEL_2228;
    case 219:
      if ((sub_10002F594(a1, "prepareForShutdownTimeoutCounter", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: prepareForShutdownTimeoutCounter(219) cannot add 1 element to context";
      goto LABEL_15;
    case 220:
      if ((sub_10002F594(a1, "prepareForShutdownCancelCounter", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: prepareForShutdownCancelCounter(220) cannot add 1 element to context";
      goto LABEL_15;
    case 221:
      if ((sub_10002F594(a1, "RD_openBandCount", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: RD_openBandCount(221) cannot add 1 element to context";
      goto LABEL_15;
    case 222:
      if ((sub_10002F594(a1, "RD_openBandNops", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: RD_openBandNops(222) cannot add 1 element to context";
      goto LABEL_15;
    case 223:
      if ((sub_10002F594(a1, "RD_closedBandEvictCount", (uint64_t)v8, 8u, 1u) & 1) != 0)
        goto LABEL_16;
      v19 = "ASPFTLParseBufferToCxt: RD_closedBandEvictCount(223) cannot add 1 element to context";
      goto LABEL_15;
    default:
      switch(v12)
      {
        case 224:
          if ((sub_10002F594(a1, "RD_closedBandEvictSectors", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: RD_closedBandEvictSectors(224) cannot add 1 element to context";
          goto LABEL_15;
        case 225:
          if ((sub_10002F594(a1, "RD_closedBandFragmentCount", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: RD_closedBandFragmentCount(225) cannot add 1 element to context";
          goto LABEL_15;
        case 226:
          if ((sub_10002F594(a1, "RD_closedBandFragmentSectors", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: RD_closedBandFragmentSectors(226) cannot add 1 element to context";
          goto LABEL_15;
        case 227:
          if ((_DWORD)v14 != 10)
            sub_10001F9D4("ASPFTLParseBufferToCxt: wcacheFSOverWrLogSizeCnts(227): (#10) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
          if (v14 >= 0xA)
            v20 = 10;
          else
            v20 = v14;
          if ((sub_10002F594(a1, "wcacheFSOverWrLogSizeCnts_", (uint64_t)v8, 8u, v20) & 1) != 0)
            goto LABEL_14;
          v22 = "ASPFTLParseBufferToCxt: wcacheFSOverWrLogSizeCnts(227): Cannot add 10 elements to context";
          goto LABEL_2228;
        case 228:
          if ((_DWORD)v14 != 4)
            sub_10001F9D4("ASPFTLParseBufferToCxt: wcacheFSOverWrSizeByFlow(228): (#4) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
          if (v14 >= 4)
            v20 = 4;
          else
            v20 = v14;
          if ((sub_10002F594(a1, "wcacheFSOverWrSizeByFlow_", (uint64_t)v8, 8u, v20) & 1) != 0)
            goto LABEL_14;
          v22 = "ASPFTLParseBufferToCxt: wcacheFSOverWrSizeByFlow(228): Cannot add 4 elements to context";
          goto LABEL_2228;
        case 229:
          if ((_DWORD)v14 != 2)
            sub_10001F9D4("ASPFTLParseBufferToCxt: indmbXferCountTo(229): (#2) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
          if (v14 >= 2)
            v20 = 2;
          else
            v20 = v14;
          if ((sub_10002F594(a1, "indmbXferCountTo_", (uint64_t)v8, 8u, v20) & 1) != 0)
            goto LABEL_14;
          v22 = "ASPFTLParseBufferToCxt: indmbXferCountTo(229): Cannot add 2 elements to context";
          goto LABEL_2228;
        case 230:
          if ((_DWORD)v14 != 2)
            sub_10001F9D4("ASPFTLParseBufferToCxt: indmbAccumulatedTimeBetweenXfers(230): (#2) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
          if (v14 >= 2)
            v20 = 2;
          else
            v20 = v14;
          if ((sub_10002F594(a1, "indmbAccumulatedTimeBetweenXfers_", (uint64_t)v8, 8u, v20) & 1) != 0)
            goto LABEL_14;
          v22 = "ASPFTLParseBufferToCxt: indmbAccumulatedTimeBetweenXfers(230): Cannot add 2 elements to context";
          goto LABEL_2228;
        case 231:
          if ((sub_10002F594(a1, "maxGracefulBootTimeMs", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: maxGracefulBootTimeMs(231) cannot add 1 element to context";
          goto LABEL_15;
        case 232:
          if ((sub_10002F594(a1, "maxUngracefulBootTimeMs", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: maxUngracefulBootTimeMs(232) cannot add 1 element to context";
          goto LABEL_15;
        case 233:
          if ((sub_10002F594(a1, "averageGracefulBootTimeMs", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: averageGracefulBootTimeMs(233) cannot add 1 element to context";
          goto LABEL_15;
        case 234:
          if ((sub_10002F594(a1, "averageUngracefulBootTimeMs", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: averageUngracefulBootTimeMs(234) cannot add 1 element to context";
          goto LABEL_15;
        case 235:
          if ((_DWORD)v14 != 8)
            sub_10001F9D4("ASPFTLParseBufferToCxt: gracefulBootTimeLogMs(235): (#8) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
          if (v14 >= 8)
            v20 = 8;
          else
            v20 = v14;
          if ((sub_10002F594(a1, "gracefulBootTimeLogMs_", (uint64_t)v8, 8u, v20) & 1) != 0)
            goto LABEL_14;
          v22 = "ASPFTLParseBufferToCxt: gracefulBootTimeLogMs(235): Cannot add 8 elements to context";
          goto LABEL_2228;
        case 236:
          if ((_DWORD)v14 != 8)
            sub_10001F9D4("ASPFTLParseBufferToCxt: ungracefulBootTimeLogMs(236): (#8) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
          if (v14 >= 8)
            v20 = 8;
          else
            v20 = v14;
          if ((sub_10002F594(a1, "ungracefulBootTimeLogMs_", (uint64_t)v8, 8u, v20) & 1) != 0)
            goto LABEL_14;
          v22 = "ASPFTLParseBufferToCxt: ungracefulBootTimeLogMs(236): Cannot add 8 elements to context";
          goto LABEL_2228;
        case 237:
          if ((_DWORD)v14 != 4)
            sub_10001F9D4("ASPFTLParseBufferToCxt: CalibrationCount(237): (#4) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
          if (v14 >= 4)
            v20 = 4;
          else
            v20 = v14;
          if ((sub_10002F594(a1, "CalibrationCount_", (uint64_t)v8, 8u, v20) & 1) != 0)
            goto LABEL_14;
          v22 = "ASPFTLParseBufferToCxt: CalibrationCount(237): Cannot add 4 elements to context";
          goto LABEL_2228;
        case 238:
          if ((sub_10002F594(a1, "CalibrationLastTmp", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: CalibrationLastTmp(238) cannot add 1 element to context";
          goto LABEL_15;
        case 239:
          if ((sub_10002F594(a1, "CalibrationMaxTmp", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: CalibrationMaxTmp(239) cannot add 1 element to context";
          goto LABEL_15;
        case 240:
          if ((sub_10002F594(a1, "CalibrationMinTmp", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: CalibrationMinTmp(240) cannot add 1 element to context";
          goto LABEL_15;
        case 241:
          if ((sub_10002F594(a1, "ungracefulBootWorstIndicator", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: ungracefulBootWorstIndicator(241) cannot add 1 element to context";
          goto LABEL_15;
        case 242:
          if ((sub_10002F594(a1, "metaMismatchReread", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: metaMismatchReread(242) cannot add 1 element to context";
          goto LABEL_15;
        case 243:
          if ((sub_10002F594(a1, "numS3SleepOps", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: numS3SleepOps(243) cannot add 1 element to context";
          goto LABEL_15;
        case 244:
          if ((sub_10002F594(a1, "odtsCurrent", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: odtsCurrent(244) cannot add 1 element to context";
          goto LABEL_15;
        case 245:
          if ((sub_10002F594(a1, "prefetchReads", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: prefetchReads(245) cannot add 1 element to context";
          goto LABEL_15;
        case 246:
          if ((sub_10002F594(a1, "prefetchHits", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: prefetchHits(246) cannot add 1 element to context";
          goto LABEL_15;
        case 247:
          if ((sub_10002F594(a1, "prefetchWritesInvalidation", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: prefetchWritesInvalidation(247) cannot add 1 element to context";
          goto LABEL_15;
        case 248:
          if ((sub_10002F594(a1, "indmbUnitsTotal", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: indmbUnitsTotal(248) cannot add 1 element to context";
          goto LABEL_15;
        case 249:
          if ((sub_10002F594(a1, "selfThrottlingEngage", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: selfThrottlingEngage(249) cannot add 1 element to context";
          goto LABEL_15;
        case 250:
          if ((sub_10002F594(a1, "selfThrottlingDisengage", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: selfThrottlingDisengage(250) cannot add 1 element to context";
          goto LABEL_15;
        case 252:
          if ((sub_10002F594(a1, "AbortSkip_WlpMode", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: AbortSkip_WlpMode(252) cannot add 1 element to context";
          goto LABEL_15;
        case 253:
          if ((sub_10002F594(a1, "hostWritesWlpMode", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: hostWritesWlpMode(253) cannot add 1 element to context";
          goto LABEL_15;
        case 254:
          if ((sub_10002F594(a1, "numClogDoubleUnc", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: numClogDoubleUnc(254) cannot add 1 element to context";
          goto LABEL_15;
        case 256:
          if ((sub_10002F594(a1, "AbortPad_WlpMode", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: AbortPad_WlpMode(256) cannot add 1 element to context";
          goto LABEL_15;
        case 257:
          if ((sub_10002F594(a1, "bonfireIntermediateBandErases", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: bonfireIntermediateBandErases(257) cannot add 1 element to context";
          goto LABEL_15;
        case 258:
          if ((sub_10002F594(a1, "bonfireUserBandErases", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: bonfireUserBandErases(258) cannot add 1 element to context";
          goto LABEL_15;
        case 259:
          if ((sub_10002F594(a1, "bonfireIntermediateBandProgs", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: bonfireIntermediateBandProgs(259) cannot add 1 element to context";
          goto LABEL_15;
        case 260:
          if ((sub_10002F594(a1, "bonfireUserBandProgs", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: bonfireUserBandProgs(260) cannot add 1 element to context";
          goto LABEL_15;
        case 261:
          if ((sub_10002F594(a1, "bonfireIntermediatePageReads", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: bonfireIntermediatePageReads(261) cannot add 1 element to context";
          goto LABEL_15;
        case 262:
          if ((sub_10002F594(a1, "bonfireUserPageReads", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: bonfireUserPageReads(262) cannot add 1 element to context";
          goto LABEL_15;
        case 263:
          if ((sub_10002F594(a1, "refreshUtil00", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: refreshUtil00(263) cannot add 1 element to context";
          goto LABEL_15;
        case 264:
          if ((sub_10002F594(a1, "failToReadUtil00", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: failToReadUtil00(264) cannot add 1 element to context";
          goto LABEL_15;
        case 265:
          if ((_DWORD)v14 != 5)
            sub_10001F9D4("ASPFTLParseBufferToCxt: readCountHisto(265): (#5) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
          if (v14 >= 5)
            v20 = 5;
          else
            v20 = v14;
          if ((sub_10002F594(a1, "readCountHisto_", (uint64_t)v8, 8u, v20) & 1) != 0)
            goto LABEL_14;
          v22 = "ASPFTLParseBufferToCxt: readCountHisto(265): Cannot add 5 elements to context";
          goto LABEL_2228;
        case 266:
          if ((_DWORD)v14 != 16)
            sub_10001F9D4("ASPFTLParseBufferToCxt: readAmpHisto(266): (#16) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
          if (v14 >= 0x10)
            v20 = 16;
          else
            v20 = v14;
          if ((sub_10002F594(a1, "readAmpHisto_", (uint64_t)v8, 8u, v20) & 1) != 0)
            goto LABEL_14;
          v22 = "ASPFTLParseBufferToCxt: readAmpHisto(266): Cannot add 16 elements to context";
          goto LABEL_2228;
        case 267:
          if ((sub_10002F594(a1, "totalReadAmp", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: totalReadAmp(267) cannot add 1 element to context";
          goto LABEL_15;
        case 268:
          if ((_DWORD)v14 != 4)
            sub_10001F9D4("ASPFTLParseBufferToCxt: nvmeModeSelect(268): (#4) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
          if (v14 >= 4)
            v20 = 4;
          else
            v20 = v14;
          if ((sub_10002F594(a1, "nvmeModeSelect_", (uint64_t)v8, 8u, v20) & 1) != 0)
            goto LABEL_14;
          v22 = "ASPFTLParseBufferToCxt: nvmeModeSelect(268): Cannot add 4 elements to context";
          goto LABEL_2228;
        case 269:
          if ((_DWORD)v14 != 8)
            sub_10001F9D4("ASPFTLParseBufferToCxt: numBootBlockRefreshSuccess(269): (#8) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
          if (v14 >= 8)
            v20 = 8;
          else
            v20 = v14;
          if ((sub_10002F594(a1, "numBootBlockRefreshSuccess_", (uint64_t)v8, 8u, v20) & 1) != 0)
            goto LABEL_14;
          v22 = "ASPFTLParseBufferToCxt: numBootBlockRefreshSuccess(269): Cannot add 8 elements to context";
          goto LABEL_2228;
        case 270:
          if ((_DWORD)v14 != 8)
            sub_10001F9D4("ASPFTLParseBufferToCxt: numBootBlockRefreshFail(270): (#8) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
          if (v14 >= 8)
            v20 = 8;
          else
            v20 = v14;
          if ((sub_10002F594(a1, "numBootBlockRefreshFail_", (uint64_t)v8, 8u, v20) & 1) != 0)
            goto LABEL_14;
          v22 = "ASPFTLParseBufferToCxt: numBootBlockRefreshFail(270): Cannot add 8 elements to context";
          goto LABEL_2228;
        case 271:
          if ((sub_10002F594(a1, "numUnsupportedAsi", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: numUnsupportedAsi(271) cannot add 1 element to context";
          goto LABEL_15;
        case 272:
          if ((sub_10002F594(a1, "NumTerminatedProgramSegs", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: NumTerminatedProgramSegs(272) cannot add 1 element to context";
          goto LABEL_15;
        case 273:
          if ((sub_10002F594(a1, "indParityPagesDrops", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: indParityPagesDrops(273) cannot add 1 element to context";
          goto LABEL_15;
        case 274:
          if ((sub_10002F594(a1, "indFlowPrograms", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: indFlowPrograms(274) cannot add 1 element to context";
          goto LABEL_15;
        case 277:
          if ((_DWORD)v14 != 4)
            sub_10001F9D4("ASPFTLParseBufferToCxt: powerBudgetSelect(277): (#4) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
          if (v14 >= 4)
            v20 = 4;
          else
            v20 = v14;
          if ((sub_10002F594(a1, "powerBudgetSelect_", (uint64_t)v8, 8u, v20) & 1) != 0)
            goto LABEL_14;
          v22 = "ASPFTLParseBufferToCxt: powerBudgetSelect(277): Cannot add 4 elements to context";
          goto LABEL_2228;
        case 279:
          if ((sub_10002F594(a1, "RxBurnNandWrites", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: RxBurnNandWrites(279) cannot add 1 element to context";
          goto LABEL_15;
        case 280:
          if ((_DWORD)v14 != 12)
            sub_10001F9D4("ASPFTLParseBufferToCxt: E2EDPErrorCounters(280): (#12) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
          if (v14 >= 0xC)
            v20 = 12;
          else
            v20 = v14;
          if ((sub_10002F594(a1, "E2EDPErrorCounters_", (uint64_t)v8, 8u, v20) & 1) != 0)
            goto LABEL_14;
          v22 = "ASPFTLParseBufferToCxt: E2EDPErrorCounters(280): Cannot add 12 elements to context";
          goto LABEL_2228;
        case 281:
          if ((sub_10002F594(a1, "wcacheSectorsMax", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: wcacheSectorsMax(281) cannot add 1 element to context";
          goto LABEL_15;
        case 282:
          if ((sub_10002F594(a1, "wcacheSectorsMin", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: wcacheSectorsMin(282) cannot add 1 element to context";
          goto LABEL_15;
        case 283:
          if ((sub_10002F594(a1, "wcacheSectorsCur", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: wcacheSectorsCur(283) cannot add 1 element to context";
          goto LABEL_15;
        case 284:
          if ((sub_10002F594(a1, "wcacheDS_SectorsMax", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: wcacheDS_SectorsMax(284) cannot add 1 element to context";
          goto LABEL_15;
        case 285:
          if ((sub_10002F594(a1, "wcacheDS_SectorsMin", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: wcacheDS_SectorsMin(285) cannot add 1 element to context";
          goto LABEL_15;
        case 286:
          if ((sub_10002F594(a1, "wcacheDS_SectorsCur", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: wcacheDS_SectorsCur(286) cannot add 1 element to context";
          goto LABEL_15;
        case 287:
          if ((sub_10002F594(a1, "wcacheFS_Reads", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: wcacheFS_Reads(287) cannot add 1 element to context";
          goto LABEL_15;
        case 288:
          if ((sub_10002F594(a1, "wcacheDS_Reads", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: wcacheDS_Reads(288) cannot add 1 element to context";
          goto LABEL_15;
        case 289:
          if ((_DWORD)v14 != 32)
            sub_10001F9D4("ASPFTLParseBufferToCxt: mspBootBlockReadFail(289): (#32) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
          if (v14 >= 0x20)
            v20 = 32;
          else
            v20 = v14;
          if ((sub_10002F594(a1, "mspBootBlockReadFail_", (uint64_t)v8, 8u, v20) & 1) != 0)
            goto LABEL_14;
          v22 = "ASPFTLParseBufferToCxt: mspBootBlockReadFail(289): Cannot add 32 elements to context";
          goto LABEL_2228;
        case 290:
          if ((_DWORD)v14 != 32)
            sub_10001F9D4("ASPFTLParseBufferToCxt: mspBootBlockProgFail(290): (#32) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
          if (v14 >= 0x20)
            v20 = 32;
          else
            v20 = v14;
          if ((sub_10002F594(a1, "mspBootBlockProgFail_", (uint64_t)v8, 8u, v20) & 1) != 0)
            goto LABEL_14;
          v22 = "ASPFTLParseBufferToCxt: mspBootBlockProgFail(290): Cannot add 32 elements to context";
          goto LABEL_2228;
        case 291:
          if ((_DWORD)v14 != 32)
            sub_10001F9D4("ASPFTLParseBufferToCxt: mspBootBlockEraseFail(291): (#32) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
          if (v14 >= 0x20)
            v20 = 32;
          else
            v20 = v14;
          if ((sub_10002F594(a1, "mspBootBlockEraseFail_", (uint64_t)v8, 8u, v20) & 1) != 0)
            goto LABEL_14;
          v22 = "ASPFTLParseBufferToCxt: mspBootBlockEraseFail(291): Cannot add 32 elements to context";
          goto LABEL_2228;
        case 292:
          if ((sub_10002F594(a1, "bandsRefreshedOnError", (uint64_t)v8, 8u, 1u) & 1) != 0)
            goto LABEL_16;
          v19 = "ASPFTLParseBufferToCxt: bandsRefreshedOnError(292) cannot add 1 element to context";
          goto LABEL_15;
        default:
          switch(v12)
          {
            case 298:
              if ((_DWORD)v14 != 2)
                sub_10001F9D4("ASPFTLParseBufferToCxt: perHostReads(298): (#2) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
              if (v14 >= 2)
                v20 = 2;
              else
                v20 = v14;
              if ((sub_10002F594(a1, "perHostReads_", (uint64_t)v8, 8u, v20) & 1) != 0)
                goto LABEL_14;
              v22 = "ASPFTLParseBufferToCxt: perHostReads(298): Cannot add 2 elements to context";
              goto LABEL_2228;
            case 299:
              if ((_DWORD)v14 != 2)
                sub_10001F9D4("ASPFTLParseBufferToCxt: perHostReadXacts(299): (#2) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
              if (v14 >= 2)
                v20 = 2;
              else
                v20 = v14;
              if ((sub_10002F594(a1, "perHostReadXacts_", (uint64_t)v8, 8u, v20) & 1) != 0)
                goto LABEL_14;
              v22 = "ASPFTLParseBufferToCxt: perHostReadXacts(299): Cannot add 2 elements to context";
              goto LABEL_2228;
            case 300:
              if ((_DWORD)v14 != 2)
                sub_10001F9D4("ASPFTLParseBufferToCxt: perHostWrites(300): (#2) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
              if (v14 >= 2)
                v20 = 2;
              else
                v20 = v14;
              if ((sub_10002F594(a1, "perHostWrites_", (uint64_t)v8, 8u, v20) & 1) != 0)
                goto LABEL_14;
              v22 = "ASPFTLParseBufferToCxt: perHostWrites(300): Cannot add 2 elements to context";
              goto LABEL_2228;
            case 301:
              if ((_DWORD)v14 != 2)
                sub_10001F9D4("ASPFTLParseBufferToCxt: perHostWriteXacts(301): (#2) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
              if (v14 >= 2)
                v20 = 2;
              else
                v20 = v14;
              if ((sub_10002F594(a1, "perHostWriteXacts_", (uint64_t)v8, 8u, v20) & 1) != 0)
                goto LABEL_14;
              v22 = "ASPFTLParseBufferToCxt: perHostWriteXacts(301): Cannot add 2 elements to context";
              goto LABEL_2228;
            case 302:
              if ((_DWORD)v14 != 2)
                sub_10001F9D4("ASPFTLParseBufferToCxt: perHostNumFlushes(302): (#2) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
              if (v14 >= 2)
                v20 = 2;
              else
                v20 = v14;
              if ((sub_10002F594(a1, "perHostNumFlushes_", (uint64_t)v8, 8u, v20) & 1) != 0)
                goto LABEL_14;
              v22 = "ASPFTLParseBufferToCxt: perHostNumFlushes(302): Cannot add 2 elements to context";
              goto LABEL_2228;
            case 303:
              if ((_DWORD)v14 != 2)
                sub_10001F9D4("ASPFTLParseBufferToCxt: perHostNumFences(303): (#2) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
              if (v14 >= 2)
                v20 = 2;
              else
                v20 = v14;
              if ((sub_10002F594(a1, "perHostNumFences_", (uint64_t)v8, 8u, v20) & 1) != 0)
                goto LABEL_14;
              v22 = "ASPFTLParseBufferToCxt: perHostNumFences(303): Cannot add 2 elements to context";
              goto LABEL_2228;
            case 304:
              if ((_DWORD)v14 != 10)
                sub_10001F9D4("ASPFTLParseBufferToCxt: commitPadSectorsPerFlow(304): (#10) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
              if (v14 >= 0xA)
                v20 = 10;
              else
                v20 = v14;
              if ((sub_10002F594(a1, "commitPadSectorsPerFlow_", (uint64_t)v8, 8u, v20) & 1) != 0)
                goto LABEL_14;
              v22 = "ASPFTLParseBufferToCxt: commitPadSectorsPerFlow(304): Cannot add 10 elements to context";
              goto LABEL_2228;
            case 305:
              if ((_DWORD)v14 != 10)
                sub_10001F9D4("ASPFTLParseBufferToCxt: wcacheDSOverWrLogSizeCnts(305): (#10) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
              if (v14 >= 0xA)
                v20 = 10;
              else
                v20 = v14;
              if ((sub_10002F594(a1, "wcacheDSOverWrLogSizeCnts_", (uint64_t)v8, 8u, v20) & 1) != 0)
                goto LABEL_14;
              v22 = "ASPFTLParseBufferToCxt: wcacheDSOverWrLogSizeCnts(305): Cannot add 10 elements to context";
              goto LABEL_2228;
            case 306:
              if ((_DWORD)v14 != 4)
                sub_10001F9D4("ASPFTLParseBufferToCxt: wcacheDSOverWrSizeByFlow(306): (#4) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
              if (v14 >= 4)
                v20 = 4;
              else
                v20 = v14;
              if ((sub_10002F594(a1, "wcacheDSOverWrSizeByFlow_", (uint64_t)v8, 8u, v20) & 1) != 0)
                goto LABEL_14;
              v22 = "ASPFTLParseBufferToCxt: wcacheDSOverWrSizeByFlow(306): Cannot add 4 elements to context";
              goto LABEL_2228;
            case 307:
              if ((_DWORD)v14 != 10)
                sub_10001F9D4("ASPFTLParseBufferToCxt: CmdRaisePrioiryEvents(307): (#10) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
              if (v14 >= 0xA)
                v20 = 10;
              else
                v20 = v14;
              if ((sub_10002F594(a1, "CmdRaisePrioiryEvents_", (uint64_t)v8, 8u, v20) & 1) != 0)
                goto LABEL_14;
              v22 = "ASPFTLParseBufferToCxt: CmdRaisePrioiryEvents(307): Cannot add 10 elements to context";
              goto LABEL_2228;
            case 308:
              if ((sub_10002F594(a1, "utilNumVerification", (uint64_t)v8, 8u, 1u) & 1) != 0)
                goto LABEL_16;
              v19 = "ASPFTLParseBufferToCxt: utilNumVerification(308) cannot add 1 element to context";
              goto LABEL_15;
            case 309:
              if ((sub_10002F594(a1, "utilRefreshes", (uint64_t)v8, 8u, 1u) & 1) != 0)
                goto LABEL_16;
              v19 = "ASPFTLParseBufferToCxt: utilRefreshes(309) cannot add 1 element to context";
              goto LABEL_15;
            case 310:
              if ((sub_10002F594(a1, "utilBDRErrors", (uint64_t)v8, 8u, 1u) & 1) != 0)
                goto LABEL_16;
              v19 = "ASPFTLParseBufferToCxt: utilBDRErrors(310) cannot add 1 element to context";
              goto LABEL_15;
            case 311:
              if ((sub_10002F594(a1, "indBandsPerFlow", (uint64_t)v8, 8u, 1u) & 1) != 0)
                goto LABEL_16;
              v19 = "ASPFTLParseBufferToCxt: indBandsPerFlow(311) cannot add 1 element to context";
              goto LABEL_15;
            case 312:
              if ((sub_10002F594(a1, "secsPerIndFlow", (uint64_t)v8, 8u, 1u) & 1) != 0)
                goto LABEL_16;
              v19 = "ASPFTLParseBufferToCxt: secsPerIndFlow(312) cannot add 1 element to context";
              goto LABEL_15;
            case 313:
              if ((sub_10002F594(a1, "indDecodedECC", (uint64_t)v8, 8u, 1u) & 1) != 0)
                goto LABEL_16;
              v19 = "ASPFTLParseBufferToCxt: indDecodedECC(313) cannot add 1 element to context";
              goto LABEL_15;
            case 314:
              if ((_DWORD)v14 != 8)
                sub_10001F9D4("ASPFTLParseBufferToCxt: numBootBlockValidateSuccess(314): (#8) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
              if (v14 >= 8)
                v20 = 8;
              else
                v20 = v14;
              if ((sub_10002F594(a1, "numBootBlockValidateSuccess_", (uint64_t)v8, 8u, v20) & 1) != 0)
                goto LABEL_14;
              v22 = "ASPFTLParseBufferToCxt: numBootBlockValidateSuccess(314): Cannot add 8 elements to context";
              goto LABEL_2228;
            case 315:
              if ((_DWORD)v14 != 8)
                sub_10001F9D4("ASPFTLParseBufferToCxt: numBootBlockValidateFail(315): (#8) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
              if (v14 >= 8)
                v20 = 8;
              else
                v20 = v14;
              if ((sub_10002F594(a1, "numBootBlockValidateFail_", (uint64_t)v8, 8u, v20) & 1) != 0)
                goto LABEL_14;
              v22 = "ASPFTLParseBufferToCxt: numBootBlockValidateFail(315): Cannot add 8 elements to context";
              goto LABEL_2228;
            case 316:
              if ((_DWORD)v14 != 4)
                sub_10001F9D4("ASPFTLParseBufferToCxt: clogPagesFillingPercentage(316): (#4) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
              if (v14 >= 4)
                v20 = 4;
              else
                v20 = v14;
              if ((sub_10002F594(a1, "clogPagesFillingPercentage_", (uint64_t)v8, 8u, v20) & 1) != 0)
                goto LABEL_14;
              v22 = "ASPFTLParseBufferToCxt: clogPagesFillingPercentage(316): Cannot add 4 elements to context";
              goto LABEL_2228;
            case 317:
              if ((sub_10002F594(a1, "bdrCalTimeAccFactor", (uint64_t)v8, 8u, 1u) & 1) != 0)
                goto LABEL_16;
              v19 = "ASPFTLParseBufferToCxt: bdrCalTimeAccFactor(317) cannot add 1 element to context";
              goto LABEL_15;
            case 318:
              if ((sub_10002F594(a1, "bootChainRdError", (uint64_t)v8, 8u, 1u) & 1) != 0)
                goto LABEL_16;
              v19 = "ASPFTLParseBufferToCxt: bootChainRdError(318) cannot add 1 element to context";
              goto LABEL_15;
            case 319:
              if ((sub_10002F594(a1, "bootChainBlankError", (uint64_t)v8, 8u, 1u) & 1) != 0)
                goto LABEL_16;
              v19 = "ASPFTLParseBufferToCxt: bootChainBlankError(319) cannot add 1 element to context";
              goto LABEL_15;
            case 320:
              if ((sub_10002F594(a1, "bootChainRefreshError", (uint64_t)v8, 8u, 1u) & 1) != 0)
                goto LABEL_16;
              v19 = "ASPFTLParseBufferToCxt: bootChainRefreshError(320) cannot add 1 element to context";
              goto LABEL_15;
            case 321:
              if ((sub_10002F594(a1, "bootChainVersionError", (uint64_t)v8, 8u, 1u) & 1) != 0)
                goto LABEL_16;
              v19 = "ASPFTLParseBufferToCxt: bootChainVersionError(321) cannot add 1 element to context";
              goto LABEL_15;
            case 322:
              if ((sub_10002F594(a1, "mspBootBlockMismatch", (uint64_t)v8, 8u, 1u) & 1) != 0)
                goto LABEL_16;
              v19 = "ASPFTLParseBufferToCxt: mspBootBlockMismatch(322) cannot add 1 element to context";
              goto LABEL_15;
            case 323:
              if ((sub_10002F594(a1, "mspBootBlockMismatchErr", (uint64_t)v8, 8u, 1u) & 1) != 0)
                goto LABEL_16;
              v19 = "ASPFTLParseBufferToCxt: mspBootBlockMismatchErr(323) cannot add 1 element to context";
              goto LABEL_15;
            case 324:
              if ((_DWORD)v14 != 5)
                sub_10001F9D4("ASPFTLParseBufferToCxt: bitflipAddr(324): (#5) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
              if (v14 >= 5)
                v20 = 5;
              else
                v20 = v14;
              if ((sub_10002F594(a1, "bitflipAddr_", (uint64_t)v8, 8u, v20) & 1) != 0)
                goto LABEL_14;
              v22 = "ASPFTLParseBufferToCxt: bitflipAddr(324): Cannot add 5 elements to context";
              goto LABEL_2228;
            case 325:
              if ((_DWORD)v14 != 5)
                sub_10001F9D4("ASPFTLParseBufferToCxt: bitflipCount(325): (#5) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
              if (v14 >= 5)
                v20 = 5;
              else
                v20 = v14;
              if ((sub_10002F594(a1, "bitflipCount_", (uint64_t)v8, 8u, v20) & 1) != 0)
                goto LABEL_14;
              v22 = "ASPFTLParseBufferToCxt: bitflipCount(325): Cannot add 5 elements to context";
              goto LABEL_2228;
            case 326:
              if ((_DWORD)v14 != 5)
                sub_10001F9D4("ASPFTLParseBufferToCxt: bitflipDupes(326): (#5) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
              if (v14 >= 5)
                v20 = 5;
              else
                v20 = v14;
              if ((sub_10002F594(a1, "bitflipDupes_", (uint64_t)v8, 8u, v20) & 1) != 0)
                goto LABEL_14;
              v22 = "ASPFTLParseBufferToCxt: bitflipDupes(326): Cannot add 5 elements to context";
              goto LABEL_2228;
            case 327:
              if ((_DWORD)v14 != 22)
                sub_10001F9D4("ASPFTLParseBufferToCxt: bandsMaxTempHisto(327): (#22) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
              if (v14 >= 0x16)
                v20 = 22;
              else
                v20 = v14;
              if ((sub_10002F594(a1, "bandsMaxTempHisto_", (uint64_t)v8, 8u, v20) & 1) != 0)
                goto LABEL_14;
              v22 = "ASPFTLParseBufferToCxt: bandsMaxTempHisto(327): Cannot add 22 elements to context";
              goto LABEL_2228;
            case 328:
              if ((_DWORD)v14 != 22)
                sub_10001F9D4("ASPFTLParseBufferToCxt: bandsMinTempHisto(328): (#22) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
              if (v14 >= 0x16)
                v20 = 22;
              else
                v20 = v14;
              if ((sub_10002F594(a1, "bandsMinTempHisto_", (uint64_t)v8, 8u, v20) & 1) != 0)
                goto LABEL_14;
              v22 = "ASPFTLParseBufferToCxt: bandsMinTempHisto(328): Cannot add 22 elements to context";
              goto LABEL_2228;
            case 329:
              if ((_DWORD)v14 != 30)
                sub_10001F9D4("ASPFTLParseBufferToCxt: bandsLifeTimeTempHisto(329): (#30) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
              if (v14 >= 0x1E)
                v20 = 30;
              else
                v20 = v14;
              if ((sub_10002F594(a1, "bandsLifeTimeTempHisto_", (uint64_t)v8, 8u, v20) & 1) != 0)
                goto LABEL_14;
              v22 = "ASPFTLParseBufferToCxt: bandsLifeTimeTempHisto(329): Cannot add 30 elements to context";
              goto LABEL_2228;
            case 330:
              if ((_DWORD)v14 != 22)
                sub_10001F9D4("ASPFTLParseBufferToCxt: bandsDeltaTempHisto(330): (#22) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
              if (v14 >= 0x16)
                v20 = 22;
              else
                v20 = v14;
              if ((sub_10002F594(a1, "bandsDeltaTempHisto_", (uint64_t)v8, 8u, v20) & 1) != 0)
                goto LABEL_14;
              v22 = "ASPFTLParseBufferToCxt: bandsDeltaTempHisto(330): Cannot add 22 elements to context";
              goto LABEL_2228;
            case 331:
              if ((_DWORD)v14 != 45)
                sub_10001F9D4("ASPFTLParseBufferToCxt: bandsCrossTempHisto(331): (#45) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
              if (v14 >= 0x2D)
                v20 = 45;
              else
                v20 = v14;
              if ((sub_10002F594(a1, "bandsCrossTempHisto_", (uint64_t)v8, 8u, v20) & 1) != 0)
                goto LABEL_14;
              v22 = "ASPFTLParseBufferToCxt: bandsCrossTempHisto(331): Cannot add 45 elements to context";
              goto LABEL_2228;
            case 332:
              if ((_DWORD)v14 != 10)
                sub_10001F9D4("ASPFTLParseBufferToCxt: wcacheWaitLogMs(332): (#10) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
              if (v14 >= 0xA)
                v20 = 10;
              else
                v20 = v14;
              if ((sub_10002F594(a1, "wcacheWaitLogMs_", (uint64_t)v8, 8u, v20) & 1) != 0)
                goto LABEL_14;
              v22 = "ASPFTLParseBufferToCxt: wcacheWaitLogMs(332): Cannot add 10 elements to context";
              goto LABEL_2228;
            case 333:
              if ((_DWORD)v14 != 10)
                sub_10001F9D4("ASPFTLParseBufferToCxt: wcacheDS_segsSortedLogSize(333): (#10) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
              if (v14 >= 0xA)
                v20 = 10;
              else
                v20 = v14;
              if ((sub_10002F594(a1, "wcacheDS_segsSortedLogSize_", (uint64_t)v8, 8u, v20) & 1) != 0)
                goto LABEL_14;
              v22 = "ASPFTLParseBufferToCxt: wcacheDS_segsSortedLogSize(333): Cannot add 10 elements to context";
              goto LABEL_2228;
            case 334:
              if ((sub_10002F594(a1, "numFirmwareWrites", (uint64_t)v8, 8u, 1u) & 1) != 0)
                goto LABEL_16;
              v19 = "ASPFTLParseBufferToCxt: numFirmwareWrites(334) cannot add 1 element to context";
              goto LABEL_15;
            case 335:
              if ((sub_10002F594(a1, "numBisWrites", (uint64_t)v8, 8u, 1u) & 1) != 0)
                goto LABEL_16;
              v19 = "ASPFTLParseBufferToCxt: numBisWrites(335) cannot add 1 element to context";
              goto LABEL_15;
            case 336:
              if ((sub_10002F594(a1, "numBootChainUpdates", (uint64_t)v8, 8u, 1u) & 1) != 0)
                goto LABEL_16;
              v19 = "ASPFTLParseBufferToCxt: numBootChainUpdates(336) cannot add 1 element to context";
              goto LABEL_15;
            case 337:
              if ((sub_10002F594(a1, "cntCalTimeWentBackWard", (uint64_t)v8, 8u, 1u) & 1) != 0)
                goto LABEL_16;
              v19 = "ASPFTLParseBufferToCxt: cntCalTimeWentBackWard(337) cannot add 1 element to context";
              goto LABEL_15;
            case 338:
              if ((sub_10002F594(a1, "indBoRecoveries", (uint64_t)v8, 8u, 1u) & 1) != 0)
                goto LABEL_16;
              v19 = "ASPFTLParseBufferToCxt: indBoRecoveries(338) cannot add 1 element to context";
              goto LABEL_15;
            case 340:
              if ((sub_10002F594(a1, "numCrossTempUecc", (uint64_t)v8, 8u, 1u) & 1) != 0)
                goto LABEL_16;
              v19 = "ASPFTLParseBufferToCxt: numCrossTempUecc(340) cannot add 1 element to context";
              goto LABEL_15;
            case 341:
              if ((sub_10002F594(a1, "latencyMonitorError", (uint64_t)v8, 8u, 1u) & 1) != 0)
                goto LABEL_16;
              v19 = "ASPFTLParseBufferToCxt: latencyMonitorError(341) cannot add 1 element to context";
              goto LABEL_15;
            case 343:
              if ((sub_10002F594(a1, "utilUeccReads", (uint64_t)v8, 8u, 1u) & 1) != 0)
                goto LABEL_16;
              v19 = "ASPFTLParseBufferToCxt: utilUeccReads(343) cannot add 1 element to context";
              goto LABEL_15;
            case 344:
              if ((sub_10002F594(a1, "numOfAvoidedGCDueToTemp", (uint64_t)v8, 8u, 1u) & 1) != 0)
                goto LABEL_16;
              v19 = "ASPFTLParseBufferToCxt: numOfAvoidedGCDueToTemp(344) cannot add 1 element to context";
              goto LABEL_15;
            case 345:
              if ((sub_10002F594(a1, "forceShutdowns", (uint64_t)v8, 8u, 1u) & 1) != 0)
                goto LABEL_16;
              v19 = "ASPFTLParseBufferToCxt: forceShutdowns(345) cannot add 1 element to context";
              goto LABEL_15;
            case 346:
              if ((sub_10002F594(a1, "gcSlcDestinations", (uint64_t)v8, 8u, 1u) & 1) != 0)
                goto LABEL_16;
              v19 = "ASPFTLParseBufferToCxt: gcSlcDestinations(346) cannot add 1 element to context";
              goto LABEL_15;
            case 347:
              if ((sub_10002F594(a1, "indReplayExtUsed", (uint64_t)v8, 8u, 1u) & 1) != 0)
                goto LABEL_16;
              v19 = "ASPFTLParseBufferToCxt: indReplayExtUsed(347) cannot add 1 element to context";
              goto LABEL_15;
            case 348:
              if ((sub_10002F594(a1, "defectsPerPackageOverflow", (uint64_t)v8, 8u, 1u) & 1) != 0)
                goto LABEL_16;
              v19 = "ASPFTLParseBufferToCxt: defectsPerPackageOverflow(348) cannot add 1 element to context";
              goto LABEL_15;
            case 349:
              if ((sub_10002F594(a1, "RxBurnIntBandsProgrammed", (uint64_t)v8, 8u, 1u) & 1) != 0)
                goto LABEL_16;
              v19 = "ASPFTLParseBufferToCxt: RxBurnIntBandsProgrammed(349) cannot add 1 element to context";
              goto LABEL_15;
            case 350:
              if ((sub_10002F594(a1, "RxBurnUsrBandsProgrammed", (uint64_t)v8, 8u, 1u) & 1) != 0)
                goto LABEL_16;
              v19 = "ASPFTLParseBufferToCxt: RxBurnUsrBandsProgrammed(350) cannot add 1 element to context";
              goto LABEL_15;
            case 351:
              if ((sub_10002F594(a1, "RxBurnIntNandWrites", (uint64_t)v8, 8u, 1u) & 1) != 0)
                goto LABEL_16;
              v19 = "ASPFTLParseBufferToCxt: RxBurnIntNandWrites(351) cannot add 1 element to context";
              goto LABEL_15;
            case 352:
              if ((sub_10002F594(a1, "RxBurnUsrNandWrites", (uint64_t)v8, 8u, 1u) & 1) != 0)
                goto LABEL_16;
              v19 = "ASPFTLParseBufferToCxt: RxBurnUsrNandWrites(352) cannot add 1 element to context";
              goto LABEL_15;
            case 353:
              if ((sub_10002F594(a1, "clogLastStripeUeccs", (uint64_t)v8, 8u, 1u) & 1) != 0)
                goto LABEL_16;
              v19 = "ASPFTLParseBufferToCxt: clogLastStripeUeccs(353) cannot add 1 element to context";
              goto LABEL_15;
            case 354:
              if ((sub_10002F594(a1, "GC_MidDestSrcSwitchSLC2TLC", (uint64_t)v8, 8u, 1u) & 1) != 0)
                goto LABEL_16;
              v19 = "ASPFTLParseBufferToCxt: GC_MidDestSrcSwitchSLC2TLC(354) cannot add 1 element to context";
              goto LABEL_15;
            case 355:
              if ((sub_10002F594(a1, "GC_MidDestSrcSwitchTLC2SLC", (uint64_t)v8, 8u, 1u) & 1) != 0)
                goto LABEL_16;
              v19 = "ASPFTLParseBufferToCxt: GC_MidDestSrcSwitchTLC2SLC(355) cannot add 1 element to context";
              goto LABEL_15;
            case 356:
              if ((sub_10002F594(a1, "nvme_stats_shutdown_count_host0_normal", (uint64_t)v8, 8u, 1u) & 1) != 0)
                goto LABEL_16;
              v19 = "ASPFTLParseBufferToCxt: nvme_stats_shutdown_count_host0_normal(356) cannot add 1 element to context";
              goto LABEL_15;
            case 357:
              if ((sub_10002F594(a1, "nvme_stats_shutdown_count_host1_normal", (uint64_t)v8, 8u, 1u) & 1) != 0)
                goto LABEL_16;
              v19 = "ASPFTLParseBufferToCxt: nvme_stats_shutdown_count_host1_normal(357) cannot add 1 element to context";
              goto LABEL_15;
            case 358:
              if ((sub_10002F594(a1, "nvme_stats_shutdown_count_host0_s2r", (uint64_t)v8, 8u, 1u) & 1) != 0)
                goto LABEL_16;
              v19 = "ASPFTLParseBufferToCxt: nvme_stats_shutdown_count_host0_s2r(358) cannot add 1 element to context";
              goto LABEL_15;
            case 359:
              if ((sub_10002F594(a1, "nvme_stats_shutdown_count_host1_s2r", (uint64_t)v8, 8u, 1u) & 1) != 0)
                goto LABEL_16;
              v19 = "ASPFTLParseBufferToCxt: nvme_stats_shutdown_count_host1_s2r(359) cannot add 1 element to context";
              goto LABEL_15;
            case 360:
              if ((_DWORD)v14 != 16)
                sub_10001F9D4("ASPFTLParseBufferToCxt: gcPDusterIntrSrcValidityHisto(360): (#16) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
              if (v14 >= 0x10)
                v20 = 16;
              else
                v20 = v14;
              if ((sub_10002F594(a1, "gcPDusterIntrSrcValidityHisto_", (uint64_t)v8, 8u, v20) & 1) != 0)
                goto LABEL_14;
              v22 = "ASPFTLParseBufferToCxt: gcPDusterIntrSrcValidityHisto(360): Cannot add 16 elements to context";
              goto LABEL_2228;
            case 361:
              if ((_DWORD)v14 != 16)
                sub_10001F9D4("ASPFTLParseBufferToCxt: gcPDusterUserSrcValidityHisto(361): (#16) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
              if (v14 >= 0x10)
                v20 = 16;
              else
                v20 = v14;
              if ((sub_10002F594(a1, "gcPDusterUserSrcValidityHisto_", (uint64_t)v8, 8u, v20) & 1) != 0)
                goto LABEL_14;
              v22 = "ASPFTLParseBufferToCxt: gcPDusterUserSrcValidityHisto(361): Cannot add 16 elements to context";
              goto LABEL_2228;
            case 362:
              if ((sub_10002F594(a1, "raidFailedReadParity", (uint64_t)v8, 8u, 1u) & 1) != 0)
                goto LABEL_16;
              v19 = "ASPFTLParseBufferToCxt: raidFailedReadParity(362) cannot add 1 element to context";
              goto LABEL_15;
            case 364:
              if ((sub_10002F594(a1, "lhotNumSkipes", (uint64_t)v8, 8u, 1u) & 1) != 0)
                goto LABEL_16;
              v19 = "ASPFTLParseBufferToCxt: lhotNumSkipes(364) cannot add 1 element to context";
              goto LABEL_15;
            default:
              switch(v12)
              {
                case 365:
                  if ((sub_10002F594(a1, "lhotNumIsHotCalls", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: lhotNumIsHotCalls(365) cannot add 1 element to context";
                  goto LABEL_15;
                case 366:
                  if ((sub_10002F594(a1, "lhotFullLap", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: lhotFullLap(366) cannot add 1 element to context";
                  goto LABEL_15;
                case 367:
                  if ((sub_10002F594(a1, "lhotSkipPrecent", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: lhotSkipPrecent(367) cannot add 1 element to context";
                  goto LABEL_15;
                case 368:
                  if ((sub_10002F594(a1, "eraseSuspendEvents", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: eraseSuspendEvents(368) cannot add 1 element to context";
                  goto LABEL_15;
                case 369:
                  if ((sub_10002F594(a1, "eraseSuspendedStatuses", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: eraseSuspendedStatuses(369) cannot add 1 element to context";
                  goto LABEL_15;
                case 370:
                  if ((sub_10002F594(a1, "eraseSuspendedBands", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: eraseSuspendedBands(370) cannot add 1 element to context";
                  goto LABEL_15;
                case 371:
                  if ((sub_10002F594(a1, "eraseSuspendSituationsBelowThreshold", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: eraseSuspendSituationsBelowThreshold(371) cannot add 1 element to context";
                  goto LABEL_15;
                case 372:
                  if ((sub_10002F594(a1, "eraseSuspendSituationsAboveThreshold", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: eraseSuspendSituationsAboveThreshold(372) cannot add 1 element to context";
                  goto LABEL_15;
                case 373:
                  if ((sub_10002F594(a1, "eraseSuspendReadChainsProcessed", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: eraseSuspendReadChainsProcessed(373) cannot add 1 element to context";
                  goto LABEL_15;
                case 374:
                  if ((sub_10002F594(a1, "bdrLastDoneHr", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: bdrLastDoneHr(374) cannot add 1 element to context";
                  goto LABEL_15;
                case 375:
                  if ((sub_10002F594(a1, "bdrBackupThreshHrs", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: bdrBackupThreshHrs(375) cannot add 1 element to context";
                  goto LABEL_15;
                case 376:
                  if ((sub_10002F594(a1, "clogPortableProgBufs", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: clogPortableProgBufs(376) cannot add 1 element to context";
                  goto LABEL_15;
                case 377:
                  if ((sub_10002F594(a1, "clogPortableDropBufs", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: clogPortableDropBufs(377) cannot add 1 element to context";
                  goto LABEL_15;
                case 378:
                  if ((sub_10002F594(a1, "clogPortablePadSectors", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: clogPortablePadSectors(378) cannot add 1 element to context";
                  goto LABEL_15;
                case 379:
                  if ((sub_10002F594(a1, "numRetiredBlocks", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: numRetiredBlocks(379) cannot add 1 element to context";
                  goto LABEL_15;
                case 381:
                  if ((sub_10002F594(a1, "numRefreshOnErrNandRefreshPerf", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: numRefreshOnErrNandRefreshPerf(381) cannot add 1 element to context";
                  goto LABEL_15;
                case 382:
                  if ((sub_10002F594(a1, "raidReconstructReads", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: raidReconstructReads(382) cannot add 1 element to context";
                  goto LABEL_15;
                case 383:
                  if ((sub_10002F594(a1, "gcReadsNoBlog", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: gcReadsNoBlog(383) cannot add 1 element to context";
                  goto LABEL_15;
                case 384:
                  if ((sub_10002F594(a1, "AbortSkip_MPBXReadVerifyClosedBand", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: AbortSkip_MPBXReadVerifyClosedBand(384) cannot add 1 element to context";
                  goto LABEL_15;
                case 385:
                  if ((sub_10002F594(a1, "openBandReadFail", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: openBandReadFail(385) cannot add 1 element to context";
                  goto LABEL_15;
                case 386:
                  if ((sub_10002F594(a1, "AbortSkip_MPBXReadVerifyOpenBand", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: AbortSkip_MPBXReadVerifyOpenBand(386) cannot add 1 element to context";
                  goto LABEL_15;
                case 387:
                  if ((sub_10002F594(a1, "AbortSkip_MBPXFailedRebuildingParity", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: AbortSkip_MBPXFailedRebuildingParity(387) cannot add 1 element to context";
                  goto LABEL_15;
                case 388:
                  if ((sub_10002F594(a1, "raidSuccessfulPMXReconstructionInternal", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: raidSuccessfulPMXReconstructionInternal(388) cannot add 1 element to context";
                  goto LABEL_15;
                case 389:
                  if ((sub_10002F594(a1, "raidSuccessfulPMXReconstructionHost", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: raidSuccessfulPMXReconstructionHost(389) cannot add 1 element to context";
                  goto LABEL_15;
                case 390:
                  if ((sub_10002F594(a1, "raidFailedPMXReconstructionInternal", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: raidFailedPMXReconstructionInternal(390) cannot add 1 element to context";
                  goto LABEL_15;
                case 391:
                  if ((sub_10002F594(a1, "raidFailedPMXReconstructionHost", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: raidFailedPMXReconstructionHost(391) cannot add 1 element to context";
                  goto LABEL_15;
                case 392:
                  if ((sub_10002F594(a1, "raidSuccessfulRMXReconstructionInternal", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: raidSuccessfulRMXReconstructionInternal(392) cannot add 1 element to context";
                  goto LABEL_15;
                case 393:
                  if ((sub_10002F594(a1, "raidSuccessfulRMXReconstructionHost", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: raidSuccessfulRMXReconstructionHost(393) cannot add 1 element to context";
                  goto LABEL_15;
                case 394:
                  if ((sub_10002F594(a1, "raidFailedRMXReconstructionInternal", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: raidFailedRMXReconstructionInternal(394) cannot add 1 element to context";
                  goto LABEL_15;
                case 395:
                  if ((sub_10002F594(a1, "raidFailedRMXReconstructionHost", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: raidFailedRMXReconstructionHost(395) cannot add 1 element to context";
                  goto LABEL_15;
                case 396:
                  if ((sub_10002F594(a1, "raidFailedReadParityInternal", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: raidFailedReadParityInternal(396) cannot add 1 element to context";
                  goto LABEL_15;
                case 397:
                  if ((sub_10002F594(a1, "raidFailedReadQParityInternal", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: raidFailedReadQParityInternal(397) cannot add 1 element to context";
                  goto LABEL_15;
                case 398:
                  if ((sub_10002F594(a1, "raidFailedReadQParity", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: raidFailedReadQParity(398) cannot add 1 element to context";
                  goto LABEL_15;
                case 399:
                  if ((sub_10002F594(a1, "raidFailedReadQCopy", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: raidFailedReadQCopy(399) cannot add 1 element to context";
                  goto LABEL_15;
                case 400:
                  if ((sub_10002F594(a1, "raidFailedReconstructionQParity", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: raidFailedReconstructionQParity(400) cannot add 1 element to context";
                  goto LABEL_15;
                case 401:
                  if ((sub_10002F594(a1, "offlineBlocksCnt", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: offlineBlocksCnt(401) cannot add 1 element to context";
                  goto LABEL_15;
                case 402:
                  if ((sub_10002F594(a1, "bork0Revectors", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: bork0Revectors(402) cannot add 1 element to context";
                  goto LABEL_15;
                case 403:
                  if ((sub_10002F594(a1, "raidFailedReadBlog", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: raidFailedReadBlog(403) cannot add 1 element to context";
                  goto LABEL_15;
                case 404:
                  if ((sub_10002F594(a1, "numReliabilityRefreshes", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: numReliabilityRefreshes(404) cannot add 1 element to context";
                  goto LABEL_15;
                case 405:
                  if ((sub_10002F594(a1, "raidFailedReadQCopyInternal", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: raidFailedReadQCopyInternal(405) cannot add 1 element to context";
                  goto LABEL_15;
                case 406:
                  if ((_DWORD)v14 != 5)
                    sub_10001F9D4("ASPFTLParseBufferToCxt: raidReconstructSuccessFlow(406): (#5) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                  if (v14 >= 5)
                    v20 = 5;
                  else
                    v20 = v14;
                  if ((sub_10002F594(a1, "raidReconstructSuccessFlow_", (uint64_t)v8, 8u, v20) & 1) != 0)
                    goto LABEL_14;
                  v22 = "ASPFTLParseBufferToCxt: raidReconstructSuccessFlow(406): Cannot add 5 elements to context";
                  goto LABEL_2228;
                case 407:
                  if ((_DWORD)v14 != 5)
                    sub_10001F9D4("ASPFTLParseBufferToCxt: raidReconstructFailFlow(407): (#5) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                  if (v14 >= 5)
                    v20 = 5;
                  else
                    v20 = v14;
                  if ((sub_10002F594(a1, "raidReconstructFailFlow_", (uint64_t)v8, 8u, v20) & 1) != 0)
                    goto LABEL_14;
                  v22 = "ASPFTLParseBufferToCxt: raidReconstructFailFlow(407): Cannot add 5 elements to context";
                  goto LABEL_2228;
                case 408:
                  if ((sub_10002F594(a1, "raidReconstructFailP", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: raidReconstructFailP(408) cannot add 1 element to context";
                  goto LABEL_15;
                case 409:
                  if ((sub_10002F594(a1, "raidReconstructFailQ", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: raidReconstructFailQ(409) cannot add 1 element to context";
                  goto LABEL_15;
                case 410:
                  if ((sub_10002F594(a1, "raidReconstructFailUECC", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: raidReconstructFailUECC(410) cannot add 1 element to context";
                  goto LABEL_15;
                case 411:
                  if ((sub_10002F594(a1, "raidReconstructFailUnsupp", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: raidReconstructFailUnsupp(411) cannot add 1 element to context";
                  goto LABEL_15;
                case 412:
                  if ((sub_10002F594(a1, "raidUECCOpenBand", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: raidUECCOpenBand(412) cannot add 1 element to context";
                  goto LABEL_15;
                case 414:
                  if ((sub_10002F594(a1, "ueccReads", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: ueccReads(414) cannot add 1 element to context";
                  goto LABEL_15;
                case 416:
                  if ((sub_10002F594(a1, "raidSuccessfulVerify", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: raidSuccessfulVerify(416) cannot add 1 element to context";
                  goto LABEL_15;
                case 417:
                  if ((sub_10002F594(a1, "raidFailedVerify", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: raidFailedVerify(417) cannot add 1 element to context";
                  goto LABEL_15;
                case 418:
                  if ((sub_10002F594(a1, "numBandsVerified", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: numBandsVerified(418) cannot add 1 element to context";
                  goto LABEL_15;
                case 419:
                  if ((sub_10002F594(a1, "cache_heads", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: cache_heads(419) cannot add 1 element to context";
                  goto LABEL_15;
                case 420:
                  if ((sub_10002F594(a1, "AbortSkip_RMXtoMPBX", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: AbortSkip_RMXtoMPBX(420) cannot add 1 element to context";
                  goto LABEL_15;
                case 421:
                  if ((sub_10002F594(a1, "s3eFwVer", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: s3eFwVer(421) cannot add 1 element to context";
                  goto LABEL_15;
                case 422:
                  if ((sub_10002F594(a1, "readVerifyNative", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: readVerifyNative(422) cannot add 1 element to context";
                  goto LABEL_15;
                case 423:
                  if ((sub_10002F594(a1, "reducedReadVerifyNative", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: reducedReadVerifyNative(423) cannot add 1 element to context";
                  goto LABEL_15;
                case 424:
                  if ((sub_10002F594(a1, "readVerifySlc", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: readVerifySlc(424) cannot add 1 element to context";
                  goto LABEL_15;
                case 425:
                  if ((sub_10002F594(a1, "reducedReadVerifySlc", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: reducedReadVerifySlc(425) cannot add 1 element to context";
                  goto LABEL_15;
                case 426:
                  if ((sub_10002F594(a1, "RxBurnEvictions", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: RxBurnEvictions(426) cannot add 1 element to context";
                  goto LABEL_15;
                case 427:
                  if ((sub_10002F594(a1, "directToTLCBands", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: directToTLCBands(427) cannot add 1 element to context";
                  goto LABEL_15;
                case 428:
                  if ((sub_10002F594(a1, "nandDesc", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: nandDesc(428) cannot add 1 element to context";
                  goto LABEL_15;
                case 429:
                  if ((sub_10002F594(a1, "fwUpdatesPercentUsed", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: fwUpdatesPercentUsed(429) cannot add 1 element to context";
                  goto LABEL_15;
                case 430:
                  if ((sub_10002F594(a1, "slcPercentUsed", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: slcPercentUsed(430) cannot add 1 element to context";
                  goto LABEL_15;
                case 431:
                  if ((sub_10002F594(a1, "percentUsed", (uint64_t)v8, 8u, 1u) & 1) != 0)
                    goto LABEL_16;
                  v19 = "ASPFTLParseBufferToCxt: percentUsed(431) cannot add 1 element to context";
                  goto LABEL_15;
                default:
                  switch(v12)
                  {
                    case 432:
                      if ((sub_10002F594(a1, "hostAutoWrites", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: hostAutoWrites(432) cannot add 1 element to context";
                      goto LABEL_15;
                    case 433:
                      if ((sub_10002F594(a1, "hostAutoWriteXacts", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: hostAutoWriteXacts(433) cannot add 1 element to context";
                      goto LABEL_15;
                    case 434:
                      if ((sub_10002F594(a1, "gcDestDynamic", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: gcDestDynamic(434) cannot add 1 element to context";
                      goto LABEL_15;
                    case 435:
                      if ((sub_10002F594(a1, "gcDestStatic", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: gcDestStatic(435) cannot add 1 element to context";
                      goto LABEL_15;
                    case 436:
                      if ((sub_10002F594(a1, "gcDestWearlevel", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: gcDestWearlevel(436) cannot add 1 element to context";
                      goto LABEL_15;
                    case 437:
                      if ((sub_10002F594(a1, "gcDestParity", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: gcDestParity(437) cannot add 1 element to context";
                      goto LABEL_15;
                    case 438:
                      if ((sub_10002F594(a1, "AbortSkip_Format", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: AbortSkip_Format(438) cannot add 1 element to context";
                      goto LABEL_15;
                    case 440:
                      if ((sub_10002F594(a1, "raidSLCPadding", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: raidSLCPadding(440) cannot add 1 element to context";
                      goto LABEL_15;
                    case 441:
                      if ((sub_10002F594(a1, "raidGCBands", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: raidGCBands(441) cannot add 1 element to context";
                      goto LABEL_15;
                    case 442:
                      if ((sub_10002F594(a1, "raidGCSectors", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: raidGCSectors(442) cannot add 1 element to context";
                      goto LABEL_15;
                    case 443:
                      if ((sub_10002F594(a1, "raidGCPadding", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: raidGCPadding(443) cannot add 1 element to context";
                      goto LABEL_15;
                    case 444:
                      if ((sub_10002F594(a1, "raidSLCBandsPerHostFlow", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: raidSLCBandsPerHostFlow(444) cannot add 1 element to context";
                      goto LABEL_15;
                    case 445:
                      if ((sub_10002F594(a1, "raidSLCSecsPerHostFlow", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: raidSLCSecsPerHostFlow(445) cannot add 1 element to context";
                      goto LABEL_15;
                    case 446:
                      if ((sub_10002F594(a1, "rxBurnMinCycleRuns", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: rxBurnMinCycleRuns(446) cannot add 1 element to context";
                      goto LABEL_15;
                    case 447:
                      if ((sub_10002F594(a1, "clogNumFastCxt", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: clogNumFastCxt(447) cannot add 1 element to context";
                      goto LABEL_15;
                    case 448:
                      if ((sub_10002F594(a1, "clogNumRapidReboots", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: clogNumRapidReboots(448) cannot add 1 element to context";
                      goto LABEL_15;
                    case 449:
                      if ((sub_10002F594(a1, "clogFastCxtAbvThr", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: clogFastCxtAbvThr(449) cannot add 1 element to context";
                      goto LABEL_15;
                    case 450:
                      if ((sub_10002F594(a1, "rxBurnDiffModeRuns", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: rxBurnDiffModeRuns(450) cannot add 1 element to context";
                      goto LABEL_15;
                    case 452:
                      if ((sub_10002F594(a1, "indReadVerifyFail", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: indReadVerifyFail(452) cannot add 1 element to context";
                      goto LABEL_15;
                    case 453:
                      if ((_DWORD)v14 != 16)
                        sub_10001F9D4("ASPFTLParseBufferToCxt: numOfThrottlingEntriesPerReadLevel(453): (#16) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                      if (v14 >= 0x10)
                        v20 = 16;
                      else
                        v20 = v14;
                      if ((sub_10002F594(a1, "numOfThrottlingEntriesPerReadLevel_", (uint64_t)v8, 8u, v20) & 1) != 0)
                        goto LABEL_14;
                      v22 = "ASPFTLParseBufferToCxt: numOfThrottlingEntriesPerReadLevel(453): Cannot add 16 elements to context";
                      goto LABEL_2228;
                    case 454:
                      if ((_DWORD)v14 != 16)
                        sub_10001F9D4("ASPFTLParseBufferToCxt: numOfThrottlingEntriesPerWriteLevel(454): (#16) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                      if (v14 >= 0x10)
                        v20 = 16;
                      else
                        v20 = v14;
                      if ((sub_10002F594(a1, "numOfThrottlingEntriesPerWriteLevel_", (uint64_t)v8, 8u, v20) & 1) != 0)
                        goto LABEL_14;
                      v22 = "ASPFTLParseBufferToCxt: numOfThrottlingEntriesPerWriteLevel(454): Cannot add 16 elements to context";
                      goto LABEL_2228;
                    case 456:
                      if ((_DWORD)v14 != 10)
                        sub_10001F9D4("ASPFTLParseBufferToCxt: slcFifoDepth(456): (#10) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                      if (v14 >= 0xA)
                        v20 = 10;
                      else
                        v20 = v14;
                      if ((sub_10002F594(a1, "slcFifoDepth_", (uint64_t)v8, 8u, v20) & 1) != 0)
                        goto LABEL_14;
                      v22 = "ASPFTLParseBufferToCxt: slcFifoDepth(456): Cannot add 10 elements to context";
                      goto LABEL_2228;
                    case 457:
                      if ((sub_10002F594(a1, "wcacheSectorsDirtyIdle", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: wcacheSectorsDirtyIdle(457) cannot add 1 element to context";
                      goto LABEL_15;
                    case 458:
                      if ((sub_10002F594(a1, "wcacheDS_SectorsDirtyIdle", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: wcacheDS_SectorsDirtyIdle(458) cannot add 1 element to context";
                      goto LABEL_15;
                    case 459:
                      if ((sub_10002F594(a1, "wcacheFS_MbytesDirtyIdle", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: wcacheFS_MbytesDirtyIdle(459) cannot add 1 element to context";
                      goto LABEL_15;
                    case 460:
                      if ((_DWORD)v14 != 256)
                        sub_10001F9D4("ASPFTLParseBufferToCxt: CacheDepthVsThroughput(460): (#256) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                      if (v14 >= 0x100)
                        v20 = 256;
                      else
                        v20 = v14;
                      if ((sub_10002F594(a1, "CacheDepthVsThroughput_", (uint64_t)v8, 8u, v20) & 1) != 0)
                        goto LABEL_14;
                      v22 = "ASPFTLParseBufferToCxt: CacheDepthVsThroughput(460): Cannot add 256 elements to context";
                      goto LABEL_2228;
                    case 461:
                      if ((sub_10002F594(a1, "directToTLCSectors", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: directToTLCSectors(461) cannot add 1 element to context";
                      goto LABEL_15;
                    case 462:
                      if ((sub_10002F594(a1, "fallbackToWaterfall", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: fallbackToWaterfall(462) cannot add 1 element to context";
                      goto LABEL_15;
                    case 463:
                      if ((_DWORD)v14 != 11)
                        sub_10001F9D4("ASPFTLParseBufferToCxt: balanceProportionBucketsHistogram(463): (#11) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                      if (v14 >= 0xB)
                        v20 = 11;
                      else
                        v20 = v14;
                      if ((sub_10002F594(a1, "balanceProportionBucketsHistogram_", (uint64_t)v8, 8u, v20) & 1) != 0)
                        goto LABEL_14;
                      v22 = "ASPFTLParseBufferToCxt: balanceProportionBucketsHistogram(463): Cannot add 11 elements to context";
                      goto LABEL_2228;
                    case 464:
                      if ((sub_10002F594(a1, "lockToTlc", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: lockToTlc(464) cannot add 1 element to context";
                      goto LABEL_15;
                    case 465:
                      if ((_DWORD)v14 != 10)
                        sub_10001F9D4("ASPFTLParseBufferToCxt: burstSizeHistogram(465): (#10) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                      if (v14 >= 0xA)
                        v20 = 10;
                      else
                        v20 = v14;
                      if ((sub_10002F594(a1, "burstSizeHistogram_", (uint64_t)v8, 8u, v20) & 1) != 0)
                        goto LABEL_14;
                      v22 = "ASPFTLParseBufferToCxt: burstSizeHistogram(465): Cannot add 10 elements to context";
                      goto LABEL_2228;
                    case 466:
                      if ((_DWORD)v14 != 64)
                        sub_10001F9D4("ASPFTLParseBufferToCxt: qosDirectToTLC(466): (#64) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                      if (v14 >= 0x40)
                        v20 = 64;
                      else
                        v20 = v14;
                      if ((sub_10002F594(a1, "qosDirectToTLC_", (uint64_t)v8, 8u, v20) & 1) != 0)
                        goto LABEL_14;
                      v22 = "ASPFTLParseBufferToCxt: qosDirectToTLC(466): Cannot add 64 elements to context";
                      goto LABEL_2228;
                    case 467:
                      if ((_DWORD)v14 != 4)
                        sub_10001F9D4("ASPFTLParseBufferToCxt: maxQosDirectToTLC(467): (#4) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                      if (v14 >= 4)
                        v20 = 4;
                      else
                        v20 = v14;
                      if ((sub_10002F594(a1, "maxQosDirectToTLC_", (uint64_t)v8, 8u, v20) & 1) != 0)
                        goto LABEL_14;
                      v22 = "ASPFTLParseBufferToCxt: maxQosDirectToTLC(467): Cannot add 4 elements to context";
                      goto LABEL_2228;
                    case 468:
                      if ((_DWORD)v14 != 16)
                        sub_10001F9D4("ASPFTLParseBufferToCxt: wcacheDirtyAtFlush(468): (#16) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                      if (v14 >= 0x10)
                        v20 = 16;
                      else
                        v20 = v14;
                      if ((sub_10002F594(a1, "wcacheDirtyAtFlush_", (uint64_t)v8, 8u, v20) & 1) != 0)
                        goto LABEL_14;
                      v22 = "ASPFTLParseBufferToCxt: wcacheDirtyAtFlush(468): Cannot add 16 elements to context";
                      goto LABEL_2228;
                    case 469:
                      if ((_DWORD)v14 != 2)
                        sub_10001F9D4("ASPFTLParseBufferToCxt: raidReconstructSuccessPartition(469): (#2) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                      if (v14 >= 2)
                        v20 = 2;
                      else
                        v20 = v14;
                      if ((sub_10002F594(a1, "raidReconstructSuccessPartition_", (uint64_t)v8, 8u, v20) & 1) != 0)
                        goto LABEL_14;
                      v22 = "ASPFTLParseBufferToCxt: raidReconstructSuccessPartition(469): Cannot add 2 elements to context";
                      goto LABEL_2228;
                    case 470:
                      if ((_DWORD)v14 != 2)
                        sub_10001F9D4("ASPFTLParseBufferToCxt: raidReconstructFailPartition(470): (#2) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                      if (v14 >= 2)
                        v20 = 2;
                      else
                        v20 = v14;
                      if ((sub_10002F594(a1, "raidReconstructFailPartition_", (uint64_t)v8, 8u, v20) & 1) != 0)
                        goto LABEL_14;
                      v22 = "ASPFTLParseBufferToCxt: raidReconstructFailPartition(470): Cannot add 2 elements to context";
                      goto LABEL_2228;
                    case 471:
                      if ((sub_10002F594(a1, "raidUncleanBootBandFail", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: raidUncleanBootBandFail(471) cannot add 1 element to context";
                      goto LABEL_15;
                    case 472:
                      if ((sub_10002F594(a1, "raidReconstructFailBandFlowHost", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: raidReconstructFailBandFlowHost(472) cannot add 1 element to context";
                      goto LABEL_15;
                    case 473:
                      if ((sub_10002F594(a1, "raidReconstructFailBandFlowGC", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: raidReconstructFailBandFlowGC(473) cannot add 1 element to context";
                      goto LABEL_15;
                    case 476:
                      if ((_DWORD)v14 != 2)
                        sub_10001F9D4("ASPFTLParseBufferToCxt: raidSuccessfulRecoLbaRange(476): (#2) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                      if (v14 >= 2)
                        v20 = 2;
                      else
                        v20 = v14;
                      if ((sub_10002F594(a1, "raidSuccessfulRecoLbaRange_", (uint64_t)v8, 8u, v20) & 1) != 0)
                        goto LABEL_14;
                      v22 = "ASPFTLParseBufferToCxt: raidSuccessfulRecoLbaRange(476): Cannot add 2 elements to context";
                      goto LABEL_2228;
                    case 477:
                      if ((_DWORD)v14 != 2)
                        sub_10001F9D4("ASPFTLParseBufferToCxt: raidFailedRecoLbaRange(477): (#2) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                      if (v14 >= 2)
                        v20 = 2;
                      else
                        v20 = v14;
                      if ((sub_10002F594(a1, "raidFailedRecoLbaRange_", (uint64_t)v8, 8u, v20) & 1) != 0)
                        goto LABEL_14;
                      v22 = "ASPFTLParseBufferToCxt: raidFailedRecoLbaRange(477): Cannot add 2 elements to context";
                      goto LABEL_2228;
                    case 481:
                      if ((_DWORD)v14 != 32)
                        sub_10001F9D4("ASPFTLParseBufferToCxt: skinnyBandErases_481(481): (#32) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                      if (v14 >= 0x20)
                        v20 = 32;
                      else
                        v20 = v14;
                      if ((sub_10002F594(a1, "skinnyBandErases_481_", (uint64_t)v8, 8u, v20) & 1) != 0)
                        goto LABEL_14;
                      v22 = "ASPFTLParseBufferToCxt: skinnyBandErases_481(481): Cannot add 32 elements to context";
                      goto LABEL_2228;
                    case 483:
                      if ((sub_10002F594(a1, "tlcOverHeatWaterfall", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: tlcOverHeatWaterfall(483) cannot add 1 element to context";
                      goto LABEL_15;
                    case 484:
                      if ((sub_10002F594(a1, "skinnyCyclesConvert", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: skinnyCyclesConvert(484) cannot add 1 element to context";
                      goto LABEL_15;
                    case 485:
                      if ((sub_10002F594(a1, "non_proportional_directToTLCSectors", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: non_proportional_directToTLCSectors(485) cannot add 1 element to context";
                      goto LABEL_15;
                    case 486:
                      if ((sub_10002F594(a1, "maxFailedFastCxtSync", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: maxFailedFastCxtSync(486) cannot add 1 element to context";
                      goto LABEL_15;
                    case 487:
                      if ((sub_10002F594(a1, "numFormatUserArea", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: numFormatUserArea(487) cannot add 1 element to context";
                      goto LABEL_15;
                    case 488:
                      if ((sub_10002F594(a1, "clogFastCxtSyncAborted", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: clogFastCxtSyncAborted(488) cannot add 1 element to context";
                      goto LABEL_15;
                    case 489:
                      if ((_DWORD)v14 != 5)
                        sub_10001F9D4("ASPFTLParseBufferToCxt: clogOccupationSectors(489): (#5) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                      if (v14 >= 5)
                        v20 = 5;
                      else
                        v20 = v14;
                      if ((sub_10002F594(a1, "clogOccupationSectors_", (uint64_t)v8, 8u, v20) & 1) != 0)
                        goto LABEL_14;
                      v22 = "ASPFTLParseBufferToCxt: clogOccupationSectors(489): Cannot add 5 elements to context";
                      goto LABEL_2228;
                    case 490:
                      if ((_DWORD)v14 != 64)
                        sub_10001F9D4("ASPFTLParseBufferToCxt: bdrTmpHist(490): (#64) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                      if (v14 >= 0x40)
                        v20 = 64;
                      else
                        v20 = v14;
                      if ((sub_10002F594(a1, "bdrTmpHist_", (uint64_t)v8, 8u, v20) & 1) != 0)
                        goto LABEL_14;
                      v22 = "ASPFTLParseBufferToCxt: bdrTmpHist(490): Cannot add 64 elements to context";
                      goto LABEL_2228;
                    case 491:
                      if ((sub_10002F594(a1, "numFWUpdates", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: numFWUpdates(491) cannot add 1 element to context";
                      goto LABEL_15;
                    case 492:
                      if ((sub_10002F594(a1, "numClogLoadFails", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: numClogLoadFails(492) cannot add 1 element to context";
                      goto LABEL_15;
                    case 493:
                      if ((sub_10002F594(a1, "rxBurnNumForcedDiffMode", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: rxBurnNumForcedDiffMode(493) cannot add 1 element to context";
                      goto LABEL_15;
                    case 494:
                      if ((sub_10002F594(a1, "RD_numSaves", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: RD_numSaves(494) cannot add 1 element to context";
                      goto LABEL_15;
                    case 495:
                      if ((sub_10002F594(a1, "eanCompressWrites", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: eanCompressWrites(495) cannot add 1 element to context";
                      goto LABEL_15;
                    case 496:
                      if ((sub_10002F594(a1, "eanHostWrites", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: eanHostWrites(496) cannot add 1 element to context";
                      goto LABEL_15;
                    case 497:
                      if ((sub_10002F594(a1, "bandPreErases", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: bandPreErases(497) cannot add 1 element to context";
                      goto LABEL_15;
                    case 498:
                      if ((sub_10002F594(a1, "eanHostUnmaps", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: eanHostUnmaps(498) cannot add 1 element to context";
                      goto LABEL_15;
                    case 499:
                      if ((sub_10002F594(a1, "eanHostFlushes", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: eanHostFlushes(499) cannot add 1 element to context";
                      goto LABEL_15;
                    case 500:
                      if ((sub_10002F594(a1, "eanFastWrites", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: eanFastWrites(500) cannot add 1 element to context";
                      goto LABEL_15;
                    case 501:
                      if ((sub_10002F594(a1, "autowriteDS2FSCollisions", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: autowriteDS2FSCollisions(501) cannot add 1 element to context";
                      goto LABEL_15;
                    case 502:
                      if ((sub_10002F594(a1, "autowriteWaitTransferTaskBlocks", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: autowriteWaitTransferTaskBlocks(502) cannot add 1 element to context";
                      goto LABEL_15;
                    case 503:
                      if ((_DWORD)v14 != 2)
                        sub_10001F9D4("ASPFTLParseBufferToCxt: avgCycle(503): (#2) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                      if (v14 >= 2)
                        v20 = 2;
                      else
                        v20 = v14;
                      if ((sub_10002F594(a1, "avgCycle_", (uint64_t)v8, 8u, v20) & 1) != 0)
                        goto LABEL_14;
                      v22 = "ASPFTLParseBufferToCxt: avgCycle(503): Cannot add 2 elements to context";
                      goto LABEL_2228;
                    case 504:
                      if ((sub_10002F594(a1, "RD_DeferredClearsOverflowCnt", (uint64_t)v8, 8u, 1u) & 1) != 0)
                        goto LABEL_16;
                      v19 = "ASPFTLParseBufferToCxt: RD_DeferredClearsOverflowCnt(504) cannot add 1 element to context";
                      goto LABEL_15;
                    default:
                      switch(v12)
                      {
                        case 505:
                          if ((sub_10002F594(a1, "maxVerticsInBand", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: maxVerticsInBand(505) cannot add 1 element to context";
                          goto LABEL_15;
                        case 506:
                          if ((sub_10002F594(a1, "numVertics", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: numVertics(506) cannot add 1 element to context";
                          goto LABEL_15;
                        case 507:
                          if ((sub_10002F594(a1, "exceededCVertics", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: exceededCVertics(507) cannot add 1 element to context";
                          goto LABEL_15;
                        case 510:
                          if ((sub_10002F594(a1, "raidReconstructFailMismatch", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: raidReconstructFailMismatch(510) cannot add 1 element to context";
                          goto LABEL_15;
                        case 511:
                          if ((_DWORD)v14 != 32)
                            sub_10001F9D4("ASPFTLParseBufferToCxt: mspbootBlockRefreshCnt(511): (#32) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                          if (v14 >= 0x20)
                            v20 = 32;
                          else
                            v20 = v14;
                          if ((sub_10002F594(a1, "mspbootBlockRefreshCnt_", (uint64_t)v8, 8u, v20) & 1) != 0)
                            goto LABEL_14;
                          v22 = "ASPFTLParseBufferToCxt: mspbootBlockRefreshCnt(511): Cannot add 32 elements to context";
                          goto LABEL_2228;
                        case 516:
                          if ((_DWORD)v14 != 32)
                            sub_10001F9D4("ASPFTLParseBufferToCxt: mspBootBlockRefreshTime(516): (#32) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                          if (v14 >= 0x20)
                            v20 = 32;
                          else
                            v20 = v14;
                          if ((sub_10002F594(a1, "mspBootBlockRefreshTime_", (uint64_t)v8, 8u, v20) & 1) != 0)
                            goto LABEL_14;
                          v22 = "ASPFTLParseBufferToCxt: mspBootBlockRefreshTime(516): Cannot add 32 elements to context";
                          goto LABEL_2228;
                        case 517:
                          if ((sub_10002F594(a1, "mspBootBlockCountPerMsp", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: mspBootBlockCountPerMsp(517) cannot add 1 element to context";
                          goto LABEL_15;
                        case 518:
                          if ((sub_10002F594(a1, "skinnyRevectorSLC", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: skinnyRevectorSLC(518) cannot add 1 element to context";
                          goto LABEL_15;
                        case 519:
                          if ((sub_10002F594(a1, "skinnyRevectorTLC", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: skinnyRevectorTLC(519) cannot add 1 element to context";
                          goto LABEL_15;
                        case 520:
                          if ((sub_10002F594(a1, "perfSetupAttempts", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: perfSetupAttempts(520) cannot add 1 element to context";
                          goto LABEL_15;
                        case 521:
                          if ((sub_10002F594(a1, "perfSetupSuccesses", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: perfSetupSuccesses(521) cannot add 1 element to context";
                          goto LABEL_15;
                        case 522:
                          if ((sub_10002F594(a1, "perfWriteAttempts", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: perfWriteAttempts(522) cannot add 1 element to context";
                          goto LABEL_15;
                        case 523:
                          if ((sub_10002F594(a1, "perfWriteSuccesses", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: perfWriteSuccesses(523) cannot add 1 element to context";
                          goto LABEL_15;
                        case 524:
                          if ((sub_10002F594(a1, "perfReadAttempts", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: perfReadAttempts(524) cannot add 1 element to context";
                          goto LABEL_15;
                        case 525:
                          if ((sub_10002F594(a1, "perfReadSuccesses", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: perfReadSuccesses(525) cannot add 1 element to context";
                          goto LABEL_15;
                        case 526:
                          if ((sub_10002F594(a1, "perfCleanupAttempts", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: perfCleanupAttempts(526) cannot add 1 element to context";
                          goto LABEL_15;
                        case 527:
                          if ((sub_10002F594(a1, "perfCleanupSuccesses", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: perfCleanupSuccesses(527) cannot add 1 element to context";
                          goto LABEL_15;
                        case 530:
                          if ((sub_10002F594(a1, "firstFailedDieId", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: firstFailedDieId(530) cannot add 1 element to context";
                          goto LABEL_15;
                        case 531:
                          if ((sub_10002F594(a1, "numDieFailures", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: numDieFailures(531) cannot add 1 element to context";
                          goto LABEL_15;
                        case 532:
                          if ((sub_10002F594(a1, "spareAvailablePercent", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: spareAvailablePercent(532) cannot add 1 element to context";
                          goto LABEL_15;
                        case 533:
                          if ((sub_10002F594(a1, "dataFabricErr", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: dataFabricErr(533) cannot add 1 element to context";
                          goto LABEL_15;
                        case 534:
                          if ((sub_10002F594(a1, "downlinkFabricErr", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: downlinkFabricErr(534) cannot add 1 element to context";
                          goto LABEL_15;
                        case 535:
                          if ((sub_10002F594(a1, "prpAccTimeoutErr", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: prpAccTimeoutErr(535) cannot add 1 element to context";
                          goto LABEL_15;
                        case 537:
                          if ((sub_10002F594(a1, "uplinkFabricErr", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: uplinkFabricErr(537) cannot add 1 element to context";
                          goto LABEL_15;
                        case 538:
                          if ((sub_10002F594(a1, "skinnyBandsGBB", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: skinnyBandsGBB(538) cannot add 1 element to context";
                          goto LABEL_15;
                        case 539:
                          if ((sub_10002F594(a1, "AbortPad_GcMustPadBand", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: AbortPad_GcMustPadBand(539) cannot add 1 element to context";
                          goto LABEL_15;
                        case 540:
                          if ((sub_10002F594(a1, "AbortPad_GcMustPadSkinny", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: AbortPad_GcMustPadSkinny(540) cannot add 1 element to context";
                          goto LABEL_15;
                        case 541:
                          if ((sub_10002F594(a1, "bdrHostPingInitial", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: bdrHostPingInitial(541) cannot add 1 element to context";
                          goto LABEL_15;
                        case 542:
                          if ((sub_10002F594(a1, "bdrHostPingMoreNeeded", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: bdrHostPingMoreNeeded(542) cannot add 1 element to context";
                          goto LABEL_15;
                        case 543:
                          if ((sub_10002F594(a1, "bandParityAllocationFailed", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: bandParityAllocationFailed(543) cannot add 1 element to context";
                          goto LABEL_15;
                        case 544:
                          if ((sub_10002F594(a1, "fastHwBurstToSlc", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: fastHwBurstToSlc(544) cannot add 1 element to context";
                          goto LABEL_15;
                        case 545:
                          if ((sub_10002F594(a1, "slowHwToTlc", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: slowHwToTlc(545) cannot add 1 element to context";
                          goto LABEL_15;
                        case 546:
                          if ((_DWORD)v14 != 10)
                            sub_10001F9D4("ASPFTLParseBufferToCxt: slcDemandBurstSizeDetected(546): (#10) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                          if (v14 >= 0xA)
                            v20 = 10;
                          else
                            v20 = v14;
                          if ((sub_10002F594(a1, "slcDemandBurstSizeDetected_", (uint64_t)v8, 8u, v20) & 1) != 0)
                            goto LABEL_14;
                          v22 = "ASPFTLParseBufferToCxt: slcDemandBurstSizeDetected(546): Cannot add 10 elements to context";
                          goto LABEL_2228;
                        case 547:
                          if ((_DWORD)v14 != 10)
                            sub_10001F9D4("ASPFTLParseBufferToCxt: slcDemandBurstDur(547): (#10) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                          if (v14 >= 0xA)
                            v20 = 10;
                          else
                            v20 = v14;
                          if ((sub_10002F594(a1, "slcDemandBurstDur_", (uint64_t)v8, 8u, v20) & 1) != 0)
                            goto LABEL_14;
                          v22 = "ASPFTLParseBufferToCxt: slcDemandBurstDur(547): Cannot add 10 elements to context";
                          goto LABEL_2228;
                        case 548:
                          if ((sub_10002F594(a1, "fastHwToTlcBurst", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: fastHwToTlcBurst(548) cannot add 1 element to context";
                          goto LABEL_15;
                        case 549:
                          if ((_DWORD)v14 != 10)
                            sub_10001F9D4("ASPFTLParseBufferToCxt: slcDemandBurstSizeSlc(549): (#10) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                          if (v14 >= 0xA)
                            v20 = 10;
                          else
                            v20 = v14;
                          if ((sub_10002F594(a1, "slcDemandBurstSizeSlc_", (uint64_t)v8, 8u, v20) & 1) != 0)
                            goto LABEL_14;
                          v22 = "ASPFTLParseBufferToCxt: slcDemandBurstSizeSlc(549): Cannot add 10 elements to context";
                          goto LABEL_2228;
                        case 551:
                          if ((_DWORD)v14 != 11)
                            sub_10001F9D4("ASPFTLParseBufferToCxt: balanceProportionBucketsHistogramTlc(551): (#11) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                          if (v14 >= 0xB)
                            v20 = 11;
                          else
                            v20 = v14;
                          if ((sub_10002F594(a1, "balanceProportionBucketsHistogramTlc_", (uint64_t)v8, 8u, v20) & 1) != 0)
                            goto LABEL_14;
                          v22 = "ASPFTLParseBufferToCxt: balanceProportionBucketsHistogramTlc(551): Cannot add 11 elements to context";
                          goto LABEL_2228;
                        case 553:
                          if ((sub_10002F594(a1, "slowHwFlushToSlc", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: slowHwFlushToSlc(553) cannot add 1 element to context";
                          goto LABEL_15;
                        case 557:
                          if ((sub_10002F594(a1, "slowHwToSlc", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: slowHwToSlc(557) cannot add 1 element to context";
                          goto LABEL_15;
                        case 558:
                          if ((sub_10002F594(a1, "flushNwToSlc", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: flushNwToSlc(558) cannot add 1 element to context";
                          goto LABEL_15;
                        case 559:
                          if ((sub_10002F594(a1, "flushNwToTlc", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: flushNwToTlc(559) cannot add 1 element to context";
                          goto LABEL_15;
                        case 560:
                          if ((sub_10002F594(a1, "oslcHw", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: oslcHw(560) cannot add 1 element to context";
                          goto LABEL_15;
                        case 561:
                          if ((sub_10002F594(a1, "oslcTransitions", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: oslcTransitions(561) cannot add 1 element to context";
                          goto LABEL_15;
                        case 563:
                          if ((sub_10002F594(a1, "slcDemandFlushCount", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: slcDemandFlushCount(563) cannot add 1 element to context";
                          goto LABEL_15;
                        case 564:
                          if ((sub_10002F594(a1, "slcDemandBurstCount", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: slcDemandBurstCount(564) cannot add 1 element to context";
                          goto LABEL_15;
                        case 565:
                          if ((sub_10002F594(a1, "oslcBaseAvgPE", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: oslcBaseAvgPE(565) cannot add 1 element to context";
                          goto LABEL_15;
                        case 566:
                          if ((sub_10002F594(a1, "raidReconstructFailNoSPBX", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: raidReconstructFailNoSPBX(566) cannot add 1 element to context";
                          goto LABEL_15;
                        case 567:
                          if ((sub_10002F594(a1, "raidReconstructFailDouble", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: raidReconstructFailDouble(567) cannot add 1 element to context";
                          goto LABEL_15;
                        case 568:
                          if ((sub_10002F594(a1, "oslcFastWAmpUOnOff", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: oslcFastWAmpUOnOff(568) cannot add 1 element to context";
                          goto LABEL_15;
                        case 569:
                          if ((sub_10002F594(a1, "oslcSlowWAmpUOnOff", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: oslcSlowWAmpUOnOff(569) cannot add 1 element to context";
                          goto LABEL_15;
                        case 570:
                          if ((sub_10002F594(a1, "raidReconstructFailInvalid", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: raidReconstructFailInvalid(570) cannot add 1 element to context";
                          goto LABEL_15;
                        case 572:
                          if ((sub_10002F594(a1, "oslcLastWAmpUx10", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: oslcLastWAmpUx10(572) cannot add 1 element to context";
                          goto LABEL_15;
                        case 573:
                          if ((sub_10002F594(a1, "raidFailedReadNoBlog", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: raidFailedReadNoBlog(573) cannot add 1 element to context";
                          goto LABEL_15;
                        case 574:
                          if ((sub_10002F594(a1, "raidReconstructFailBlank", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: raidReconstructFailBlank(574) cannot add 1 element to context";
                          goto LABEL_15;
                        case 575:
                          if ((sub_10002F594(a1, "oslcHotTLCOnOff", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: oslcHotTLCOnOff(575) cannot add 1 element to context";
                          goto LABEL_15;
                        case 576:
                          if ((sub_10002F594(a1, "gcVPackDestinations", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: gcVPackDestinations(576) cannot add 1 element to context";
                          goto LABEL_15;
                        case 581:
                          if ((sub_10002F594(a1, "averageTLCPECycles", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: averageTLCPECycles(581) cannot add 1 element to context";
                          goto LABEL_15;
                        case 582:
                          if ((sub_10002F594(a1, "averageSLCPECycles", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: averageSLCPECycles(582) cannot add 1 element to context";
                          goto LABEL_15;
                        case 583:
                          if ((sub_10002F594(a1, "numAtomicBoots", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: numAtomicBoots(583) cannot add 1 element to context";
                          goto LABEL_15;
                        case 584:
                          if ((sub_10002F594(a1, "clogMinorMismatch", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: clogMinorMismatch(584) cannot add 1 element to context";
                          goto LABEL_15;
                        case 586:
                          if ((sub_10002F594(a1, "raidExpectedFailRMXReconstructionInternal", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: raidExpectedFailRMXReconstructionInternal(586) cannot add 1 element to context";
                          goto LABEL_15;
                        case 587:
                          if ((sub_10002F594(a1, "raidExpectedFailRMXReconstructionHost", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: raidExpectedFailRMXReconstructionHost(587) cannot add 1 element to context";
                          goto LABEL_15;
                        case 588:
                          if ((sub_10002F594(a1, "oslcGCinvalidations", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: oslcGCinvalidations(588) cannot add 1 element to context";
                          goto LABEL_15;
                        case 589:
                          if ((sub_10002F594(a1, "oslcGCActivateReason", (uint64_t)v8, 8u, 1u) & 1) != 0)
                            goto LABEL_16;
                          v19 = "ASPFTLParseBufferToCxt: oslcGCActivateReason(589) cannot add 1 element to context";
                          goto LABEL_15;
                        default:
                          switch(v12)
                          {
                            case 590:
                              if ((sub_10002F594(a1, "oslcLowCleanBandsUOnOff", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: oslcLowCleanBandsUOnOff(590) cannot add 1 element to context";
                              goto LABEL_15;
                            case 591:
                              if ((sub_10002F594(a1, "oslcTooManyGCMustOnOff", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: oslcTooManyGCMustOnOff(591) cannot add 1 element to context";
                              goto LABEL_15;
                            case 592:
                              if ((sub_10002F594(a1, "oslcBaseHostWrites", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: oslcBaseHostWrites(592) cannot add 1 element to context";
                              goto LABEL_15;
                            case 593:
                              if ((sub_10002F594(a1, "oslcBaseBandErases", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: oslcBaseBandErases(593) cannot add 1 element to context";
                              goto LABEL_15;
                            case 594:
                              if ((sub_10002F594(a1, "oslcBdrBands", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: oslcBdrBands(594) cannot add 1 element to context";
                              goto LABEL_15;
                            case 595:
                              if ((sub_10002F594(a1, "oslcBdrValid", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: oslcBdrValid(595) cannot add 1 element to context";
                              goto LABEL_15;
                            case 596:
                              if ((sub_10002F594(a1, "unexpectedBlanks", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: unexpectedBlanks(596) cannot add 1 element to context";
                              goto LABEL_15;
                            case 597:
                              if ((sub_10002F594(a1, "unexpectedBlanksOnRV", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: unexpectedBlanksOnRV(597) cannot add 1 element to context";
                              goto LABEL_15;
                            case 601:
                              if ((sub_10002F594(a1, "waterfallLockSectors", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: waterfallLockSectors(601) cannot add 1 element to context";
                              goto LABEL_15;
                            case 602:
                              if ((sub_10002F594(a1, "oslcGCActiveWrites", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: oslcGCActiveWrites(602) cannot add 1 element to context";
                              goto LABEL_15;
                            case 603:
                              if ((sub_10002F594(a1, "chipIdTemperatureSample", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: chipIdTemperatureSample(603) cannot add 1 element to context";
                              goto LABEL_15;
                            case 604:
                              if ((sub_10002F594(a1, "gcVPackWrites", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: gcVPackWrites(604) cannot add 1 element to context";
                              goto LABEL_15;
                            case 605:
                              if ((_DWORD)v14 != 10)
                                sub_10001F9D4("ASPFTLParseBufferToCxt: gcActiveReasons(605): (#10) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                              if (v14 >= 0xA)
                                v20 = 10;
                              else
                                v20 = v14;
                              if ((sub_10002F594(a1, "gcActiveReasons_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                goto LABEL_14;
                              v22 = "ASPFTLParseBufferToCxt: gcActiveReasons(605): Cannot add 10 elements to context";
                              goto LABEL_2228;
                            case 606:
                              if ((sub_10002F594(a1, "eanMaxInitTimeMs", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: eanMaxInitTimeMs(606) cannot add 1 element to context";
                              goto LABEL_15;
                            case 607:
                              if ((sub_10002F594(a1, "eanMinToFirstReadTimeMs", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: eanMinToFirstReadTimeMs(607) cannot add 1 element to context";
                              goto LABEL_15;
                            case 608:
                              if ((sub_10002F594(a1, "skinnyAPGMRetire", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: skinnyAPGMRetire(608) cannot add 1 element to context";
                              goto LABEL_15;
                            case 609:
                              if ((sub_10002F594(a1, "unexpectedBlanksHost", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: unexpectedBlanksHost(609) cannot add 1 element to context";
                              goto LABEL_15;
                            case 610:
                              if ((_DWORD)v14 != 64)
                                sub_10001F9D4("ASPFTLParseBufferToCxt: pcieAerCounters(610): (#64) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                              if (v14 >= 0x40)
                                v20 = 64;
                              else
                                v20 = v14;
                              if ((sub_10002F594(a1, "pcieAerCounters_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                goto LABEL_14;
                              v22 = "ASPFTLParseBufferToCxt: pcieAerCounters(610): Cannot add 64 elements to context";
                              goto LABEL_2228;
                            case 611:
                              if ((sub_10002F594(a1, "fastHwToTlcBalance", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: fastHwToTlcBalance(611) cannot add 1 element to context";
                              goto LABEL_15;
                            case 612:
                              if ((sub_10002F594(a1, "perfOSLCRuns", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: perfOSLCRuns(612) cannot add 1 element to context";
                              goto LABEL_15;
                            case 613:
                              if ((sub_10002F594(a1, "slcDemandBurstWritesInGC", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: slcDemandBurstWritesInGC(613) cannot add 1 element to context";
                              goto LABEL_15;
                            case 614:
                              if ((sub_10002F594(a1, "slcDemandBurstWritesInTT", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: slcDemandBurstWritesInTT(614) cannot add 1 element to context";
                              goto LABEL_15;
                            case 615:
                              if ((sub_10002F594(a1, "slcDemandBurstWritesInNRP", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: slcDemandBurstWritesInNRP(615) cannot add 1 element to context";
                              goto LABEL_15;
                            case 616:
                              if ((sub_10002F594(a1, "perfTotalDmaMb", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: perfTotalDmaMb(616) cannot add 1 element to context";
                              goto LABEL_15;
                            case 617:
                              if ((sub_10002F594(a1, "eanAvgInitTimeMs", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: eanAvgInitTimeMs(617) cannot add 1 element to context";
                              goto LABEL_15;
                            case 618:
                              if ((sub_10002F594(a1, "eanAvgToFirstReadTimeMs", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: eanAvgToFirstReadTimeMs(618) cannot add 1 element to context";
                              goto LABEL_15;
                            case 619:
                              if ((sub_10002F594(a1, "eanMaxBootReadTimeMs", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: eanMaxBootReadTimeMs(619) cannot add 1 element to context";
                              goto LABEL_15;
                            case 620:
                              if ((sub_10002F594(a1, "eanAvgBootReadTimeMs", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: eanAvgBootReadTimeMs(620) cannot add 1 element to context";
                              goto LABEL_15;
                            case 621:
                              if ((_DWORD)v14 != 10)
                                sub_10001F9D4("ASPFTLParseBufferToCxt: eanBootReadsHist(621): (#10) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                              if (v14 >= 0xA)
                                v20 = 10;
                              else
                                v20 = v14;
                              if ((sub_10002F594(a1, "eanBootReadsHist_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                goto LABEL_14;
                              v22 = "ASPFTLParseBufferToCxt: eanBootReadsHist(621): Cannot add 10 elements to context";
                              goto LABEL_2228;
                            case 622:
                              if ((sub_10002F594(a1, "maxBgInitTimeMs", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: maxBgInitTimeMs(622) cannot add 1 element to context";
                              goto LABEL_15;
                            case 623:
                              if ((sub_10002F594(a1, "avgBgInitTimeMs", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: avgBgInitTimeMs(623) cannot add 1 element to context";
                              goto LABEL_15;
                            case 624:
                              if ((_DWORD)v14 != 16)
                                sub_10001F9D4("ASPFTLParseBufferToCxt: clogFailReason(624): (#16) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                              if (v14 >= 0x10)
                                v20 = 16;
                              else
                                v20 = v14;
                              if ((sub_10002F594(a1, "clogFailReason_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                goto LABEL_14;
                              v22 = "ASPFTLParseBufferToCxt: clogFailReason(624): Cannot add 16 elements to context";
                              goto LABEL_2228;
                            case 625:
                              if ((sub_10002F594(a1, "eanMinBootReadMBPerSec", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: eanMinBootReadMBPerSec(625) cannot add 1 element to context";
                              goto LABEL_15;
                            case 626:
                              if ((sub_10002F594(a1, "eanAvgBootReadMBPerSec", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: eanAvgBootReadMBPerSec(626) cannot add 1 element to context";
                              goto LABEL_15;
                            case 627:
                              if ((sub_10002F594(a1, "minSkinnyPECycles", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: minSkinnyPECycles(627) cannot add 1 element to context";
                              goto LABEL_15;
                            case 628:
                              if ((sub_10002F594(a1, "maxSkinnyPECycles", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: maxSkinnyPECycles(628) cannot add 1 element to context";
                              goto LABEL_15;
                            case 629:
                              if ((sub_10002F594(a1, "averageSkinnyPECycles", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: averageSkinnyPECycles(629) cannot add 1 element to context";
                              goto LABEL_15;
                            case 630:
                              if ((_DWORD)v14 != 6)
                                sub_10001F9D4("ASPFTLParseBufferToCxt: raidSuccessfulRecoEAN(630): (#6) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                              if (v14 >= 6)
                                v20 = 6;
                              else
                                v20 = v14;
                              if ((sub_10002F594(a1, "raidSuccessfulRecoEAN_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                goto LABEL_14;
                              v22 = "ASPFTLParseBufferToCxt: raidSuccessfulRecoEAN(630): Cannot add 6 elements to context";
                              goto LABEL_2228;
                            case 631:
                              if ((_DWORD)v14 != 6)
                                sub_10001F9D4("ASPFTLParseBufferToCxt: raidFailedRecoEAN(631): (#6) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                              if (v14 >= 6)
                                v20 = 6;
                              else
                                v20 = v14;
                              if ((sub_10002F594(a1, "raidFailedRecoEAN_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                goto LABEL_14;
                              v22 = "ASPFTLParseBufferToCxt: raidFailedRecoEAN(631): Cannot add 6 elements to context";
                              goto LABEL_2228;
                            case 632:
                              if ((_DWORD)v14 != 6)
                                sub_10001F9D4("ASPFTLParseBufferToCxt: eanFirstReadMode(632): (#6) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                              if (v14 >= 6)
                                v20 = 6;
                              else
                                v20 = v14;
                              if ((sub_10002F594(a1, "eanFirstReadMode_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                goto LABEL_14;
                              v22 = "ASPFTLParseBufferToCxt: eanFirstReadMode(632): Cannot add 6 elements to context";
                              goto LABEL_2228;
                            case 635:
                              if ((sub_10002F594(a1, "oslcHwGC", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: oslcHwGC(635) cannot add 1 element to context";
                              goto LABEL_15;
                            case 636:
                              if ((sub_10002F594(a1, "oslcHwTT", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: oslcHwTT(636) cannot add 1 element to context";
                              goto LABEL_15;
                            case 637:
                              if ((sub_10002F594(a1, "oslcHwNRP", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: oslcHwNRP(637) cannot add 1 element to context";
                              goto LABEL_15;
                            case 638:
                              if ((_DWORD)v14 != 10)
                                sub_10001F9D4("ASPFTLParseBufferToCxt: oslcDemandBurstSize(638): (#10) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                              if (v14 >= 0xA)
                                v20 = 10;
                              else
                                v20 = v14;
                              if ((sub_10002F594(a1, "oslcDemandBurstSize_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                goto LABEL_14;
                              v22 = "ASPFTLParseBufferToCxt: oslcDemandBurstSize(638): Cannot add 10 elements to context";
                              goto LABEL_2228;
                            case 639:
                              if ((sub_10002F594(a1, "raidReconstructSuccessBandFlowOslc", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: raidReconstructSuccessBandFlowOslc(639) cannot add 1 element to context";
                              goto LABEL_15;
                            case 640:
                              if ((sub_10002F594(a1, "raidReconstructFailBandFlowOslc", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: raidReconstructFailBandFlowOslc(640) cannot add 1 element to context";
                              goto LABEL_15;
                            case 641:
                              if ((sub_10002F594(a1, "raidFailSectors", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: raidFailSectors(641) cannot add 1 element to context";
                              goto LABEL_15;
                            case 642:
                              if ((sub_10002F594(a1, "eanFailSectors", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: eanFailSectors(642) cannot add 1 element to context";
                              goto LABEL_15;
                            case 643:
                              if ((sub_10002F594(a1, "bdrTimeMode", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: bdrTimeMode(643) cannot add 1 element to context";
                              goto LABEL_15;
                            case 644:
                              if ((sub_10002F594(a1, "raidParityNotSavedP", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: raidParityNotSavedP(644) cannot add 1 element to context";
                              goto LABEL_15;
                            case 645:
                              if ((sub_10002F594(a1, "raidParityNotSavedQ", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: raidParityNotSavedQ(645) cannot add 1 element to context";
                              goto LABEL_15;
                            case 646:
                              if ((sub_10002F594(a1, "raidParityInvalid", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: raidParityInvalid(646) cannot add 1 element to context";
                              goto LABEL_15;
                            case 647:
                              if ((sub_10002F594(a1, "raidParityUnknown", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: raidParityUnknown(647) cannot add 1 element to context";
                              goto LABEL_15;
                            case 648:
                              if ((sub_10002F594(a1, "raidParityUnmapped", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: raidParityUnmapped(648) cannot add 1 element to context";
                              goto LABEL_15;
                            case 649:
                              if ((sub_10002F594(a1, "raidParityGCUnc", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: raidParityGCUnc(649) cannot add 1 element to context";
                              goto LABEL_15;
                            case 657:
                              if ((sub_10002F594(a1, "AbortSkip_MPBXProbational", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: AbortSkip_MPBXProbational(657) cannot add 1 element to context";
                              goto LABEL_15;
                            case 659:
                              if ((sub_10002F594(a1, "raidVerificationReads", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: raidVerificationReads(659) cannot add 1 element to context";
                              goto LABEL_15;
                            case 666:
                              if ((sub_10002F594(a1, "nofDies", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: nofDies(666) cannot add 1 element to context";
                              goto LABEL_15;
                            case 671:
                              if ((sub_10002F594(a1, "skinnyBandsNum", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: skinnyBandsNum(671) cannot add 1 element to context";
                              goto LABEL_15;
                            case 672:
                              if ((sub_10002F594(a1, "skinnyBandsNumDips", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: skinnyBandsNumDips(672) cannot add 1 element to context";
                              goto LABEL_15;
                            case 674:
                              if ((_DWORD)v14 != 8)
                                sub_10001F9D4("ASPFTLParseBufferToCxt: oslcNoVotesHw(674): (#8) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                              if (v14 >= 8)
                                v20 = 8;
                              else
                                v20 = v14;
                              if ((sub_10002F594(a1, "oslcNoVotesHw_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                goto LABEL_14;
                              v22 = "ASPFTLParseBufferToCxt: oslcNoVotesHw(674): Cannot add 8 elements to context";
                              goto LABEL_2228;
                            case 675:
                              if ((sub_10002F594(a1, "totalLbas", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: totalLbas(675) cannot add 1 element to context";
                              goto LABEL_15;
                            case 676:
                              if ((sub_10002F594(a1, "bdrHostPingExtra", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: bdrHostPingExtra(676) cannot add 1 element to context";
                              goto LABEL_15;
                            case 677:
                              if ((sub_10002F594(a1, "magazineInstanceMeta", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                goto LABEL_16;
                              v19 = "ASPFTLParseBufferToCxt: magazineInstanceMeta(677) cannot add 1 element to context";
                              goto LABEL_15;
                            default:
                              switch(v12)
                              {
                                case 680:
                                  if ((_DWORD)v14 != 3)
                                    sub_10001F9D4("ASPFTLParseBufferToCxt: magazineFWVersion(680): (#3) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                  if (v14 >= 3)
                                    v20 = 3;
                                  else
                                    v20 = v14;
                                  if ((sub_10002F594(a1, "magazineFWVersion_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                    goto LABEL_14;
                                  v22 = "ASPFTLParseBufferToCxt: magazineFWVersion(680): Cannot add 3 elements to context";
                                  goto LABEL_2228;
                                case 681:
                                  if ((sub_10002F594(a1, "raidReconstructFailPMXUnsup", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: raidReconstructFailPMXUnsup(681) cannot add 1 element to context";
                                  goto LABEL_15;
                                case 682:
                                  if ((sub_10002F594(a1, "raidReconstructFailBMXUnsup", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: raidReconstructFailBMXUnsup(682) cannot add 1 element to context";
                                  goto LABEL_15;
                                case 683:
                                  if ((sub_10002F594(a1, "iBootNANDResets", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: iBootNANDResets(683) cannot add 1 element to context";
                                  goto LABEL_15;
                                case 684:
                                  if ((sub_10002F594(a1, "pcieClkreqHighTimeout", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: pcieClkreqHighTimeout(684) cannot add 1 element to context";
                                  goto LABEL_15;
                                case 687:
                                  if ((_DWORD)v14 != 3)
                                    sub_10001F9D4("ASPFTLParseBufferToCxt: cbdrInitSent(687): (#3) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                  if (v14 >= 3)
                                    v20 = 3;
                                  else
                                    v20 = v14;
                                  if ((sub_10002F594(a1, "cbdrInitSent_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                    goto LABEL_14;
                                  v22 = "ASPFTLParseBufferToCxt: cbdrInitSent(687): Cannot add 3 elements to context";
                                  goto LABEL_2228;
                                case 688:
                                  if ((sub_10002F594(a1, "cbdrPauseSent", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: cbdrPauseSent(688) cannot add 1 element to context";
                                  goto LABEL_15;
                                case 689:
                                  if ((sub_10002F594(a1, "cbdrResumeSent", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: cbdrResumeSent(689) cannot add 1 element to context";
                                  goto LABEL_15;
                                case 690:
                                  if ((sub_10002F594(a1, "cbdrGetResultSent", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: cbdrGetResultSent(690) cannot add 1 element to context";
                                  goto LABEL_15;
                                case 691:
                                  if ((sub_10002F594(a1, "cbdrEarlyExits", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: cbdrEarlyExits(691) cannot add 1 element to context";
                                  goto LABEL_15;
                                case 694:
                                  if ((_DWORD)v14 != 10)
                                    sub_10001F9D4("ASPFTLParseBufferToCxt: cbdrRefreshGrades(694): (#10) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                  if (v14 >= 0xA)
                                    v20 = 10;
                                  else
                                    v20 = v14;
                                  if ((sub_10002F594(a1, "cbdrRefreshGrades_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                    goto LABEL_14;
                                  v22 = "ASPFTLParseBufferToCxt: cbdrRefreshGrades(694): Cannot add 10 elements to context";
                                  goto LABEL_2228;
                                case 695:
                                  if ((sub_10002F594(a1, "cbdrNotEnoughReads", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: cbdrNotEnoughReads(695) cannot add 1 element to context";
                                  goto LABEL_15;
                                case 696:
                                  if ((sub_10002F594(a1, "cbdrAborts", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: cbdrAborts(696) cannot add 1 element to context";
                                  goto LABEL_15;
                                case 697:
                                  if ((sub_10002F594(a1, "TurboRaidHostClassifications", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: TurboRaidHostClassifications(697) cannot add 1 element to context";
                                  goto LABEL_15;
                                case 698:
                                  if ((sub_10002F594(a1, "TurboRaidInternalClassifications", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: TurboRaidInternalClassifications(698) cannot add 1 element to context";
                                  goto LABEL_15;
                                case 699:
                                  if ((sub_10002F594(a1, "cbdrFullyDone", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: cbdrFullyDone(699) cannot add 1 element to context";
                                  goto LABEL_15;
                                case 702:
                                  if ((_DWORD)v14 != 32)
                                    sub_10001F9D4("ASPFTLParseBufferToCxt: vcurve(702): (#32) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                  if (v14 >= 0x20)
                                    v20 = 32;
                                  else
                                    v20 = v14;
                                  if ((sub_10002F594(a1, "vcurve_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                    goto LABEL_14;
                                  v22 = "ASPFTLParseBufferToCxt: vcurve(702): Cannot add 32 elements to context";
                                  goto LABEL_2228;
                                case 703:
                                  if ((_DWORD)v14 != 12)
                                    sub_10001F9D4("ASPFTLParseBufferToCxt: injDepth(703): (#12) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                  if (v14 >= 0xC)
                                    v20 = 12;
                                  else
                                    v20 = v14;
                                  if ((sub_10002F594(a1, "injDepth_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                    goto LABEL_14;
                                  v22 = "ASPFTLParseBufferToCxt: injDepth(703): Cannot add 12 elements to context";
                                  goto LABEL_2228;
                                case 704:
                                  if ((sub_10002F594(a1, "logical_disk_occupied_promiles", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: logical_disk_occupied_promiles(704) cannot add 1 element to context";
                                  goto LABEL_15;
                                case 711:
                                  if ((sub_10002F594(a1, "raidPrevFailedReconstructSkip", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: raidPrevFailedReconstructSkip(711) cannot add 1 element to context";
                                  goto LABEL_15;
                                case 712:
                                  if ((sub_10002F594(a1, "TurboRaidSuccessfulHostAuxReads", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: TurboRaidSuccessfulHostAuxReads(712) cannot add 1 element to context";
                                  goto LABEL_15;
                                case 713:
                                  if ((sub_10002F594(a1, "TurboRaidSuccessfulInternalAuxReads", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: TurboRaidSuccessfulInternalAuxReads(713) cannot add 1 el"
                                        "ement to context";
                                  goto LABEL_15;
                                case 714:
                                  if ((sub_10002F594(a1, "turboRaidClassificationReliabilityHost", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: turboRaidClassificationReliabilityHost(714) cannot add 1"
                                        " element to context";
                                  goto LABEL_15;
                                case 715:
                                  if ((sub_10002F594(a1, "turboRaidClassificationReliabilityInternal", (uint64_t)v8, 8u, 1u) & 1) != 0)goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: turboRaidClassificationReliabilityInternal(715) cannot a"
                                        "dd 1 element to context";
                                  goto LABEL_15;
                                case 716:
                                  if ((sub_10002F594(a1, "turboRaidClassificationQualityHost", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: turboRaidClassificationQualityHost(716) cannot add 1 element to context";
                                  goto LABEL_15;
                                case 717:
                                  if ((sub_10002F594(a1, "turboRaidClassificationQualityInternal", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: turboRaidClassificationQualityInternal(717) cannot add 1"
                                        " element to context";
                                  goto LABEL_15;
                                case 719:
                                  if ((sub_10002F594(a1, "skinnyBandErases", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: skinnyBandErases(719) cannot add 1 element to context";
                                  goto LABEL_15;
                                case 721:
                                  if ((sub_10002F594(a1, "gcPDusterDestinations", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: gcPDusterDestinations(721) cannot add 1 element to context";
                                  goto LABEL_15;
                                case 722:
                                  if ((sub_10002F594(a1, "gcPDusterWrites", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: gcPDusterWrites(722) cannot add 1 element to context";
                                  goto LABEL_15;
                                case 730:
                                  if ((sub_10002F594(a1, "rvFails", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: rvFails(730) cannot add 1 element to context";
                                  goto LABEL_15;
                                case 737:
                                  if ((sub_10002F594(a1, "TurboRaidFailedHostAuxReads", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: TurboRaidFailedHostAuxReads(737) cannot add 1 element to context";
                                  goto LABEL_15;
                                case 738:
                                  if ((sub_10002F594(a1, "TurboRaidFailedInternalAuxReads", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: TurboRaidFailedInternalAuxReads(738) cannot add 1 element to context";
                                  goto LABEL_15;
                                case 741:
                                  if ((sub_10002F594(a1, "autoSkipTriggers", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: autoSkipTriggers(741) cannot add 1 element to context";
                                  goto LABEL_15;
                                case 742:
                                  if ((sub_10002F594(a1, "autoSkipPlanes", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: autoSkipPlanes(742) cannot add 1 element to context";
                                  goto LABEL_15;
                                case 744:
                                  if ((_DWORD)v14 != 8)
                                    sub_10001F9D4("ASPFTLParseBufferToCxt: raidReconstructDurationHisto(744): (#8) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                  if (v14 >= 8)
                                    v20 = 8;
                                  else
                                    v20 = v14;
                                  if ((sub_10002F594(a1, "raidReconstructDurationHisto_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                    goto LABEL_14;
                                  v22 = "ASPFTLParseBufferToCxt: raidReconstructDurationHisto(744): Cannot add 8 elements to context";
                                  goto LABEL_2228;
                                case 745:
                                  if ((_DWORD)v14 != 8)
                                    sub_10001F9D4("ASPFTLParseBufferToCxt: failsOnReconstructHisto(745): (#8) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                  if (v14 >= 8)
                                    v20 = 8;
                                  else
                                    v20 = v14;
                                  if ((sub_10002F594(a1, "failsOnReconstructHisto_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                    goto LABEL_14;
                                  v22 = "ASPFTLParseBufferToCxt: failsOnReconstructHisto(745): Cannot add 8 elements to context";
                                  goto LABEL_2228;
                                case 746:
                                  if ((sub_10002F594(a1, "bandKill_userFlattenExcessive", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: bandKill_userFlattenExcessive(746) cannot add 1 element to context";
                                  goto LABEL_15;
                                case 747:
                                  if ((sub_10002F594(a1, "bandKill_IntFlattenExcessive", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: bandKill_IntFlattenExcessive(747) cannot add 1 element to context";
                                  goto LABEL_15;
                                case 748:
                                  if ((sub_10002F594(a1, "bandKill_userFlattenBalance", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: bandKill_userFlattenBalance(748) cannot add 1 element to context";
                                  goto LABEL_15;
                                case 749:
                                  if ((sub_10002F594(a1, "bandKill_intFlattenBalance", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: bandKill_intFlattenBalance(749) cannot add 1 element to context";
                                  goto LABEL_15;
                                case 750:
                                  if ((sub_10002F594(a1, "bandKill_formatVertExcessive", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: bandKill_formatVertExcessive(750) cannot add 1 element to context";
                                  goto LABEL_15;
                                case 751:
                                  if ((sub_10002F594(a1, "bandKill_formatVertBalance", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: bandKill_formatVertBalance(751) cannot add 1 element to context";
                                  goto LABEL_15;
                                case 753:
                                  if ((sub_10002F594(a1, "cbdrNumSlowRefreshes", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: cbdrNumSlowRefreshes(753) cannot add 1 element to context";
                                  goto LABEL_15;
                                case 754:
                                  if ((sub_10002F594(a1, "cbdrNumFastRefreshes", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: cbdrNumFastRefreshes(754) cannot add 1 element to context";
                                  goto LABEL_15;
                                case 755:
                                  if ((sub_10002F594(a1, "cbdrTotalRefreshValidity", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: cbdrTotalRefreshValidity(755) cannot add 1 element to context";
                                  goto LABEL_15;
                                case 756:
                                  if ((_DWORD)v14 != 9)
                                    sub_10001F9D4("ASPFTLParseBufferToCxt: cbdrRefreshedAges(756): (#9) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                  if (v14 >= 9)
                                    v20 = 9;
                                  else
                                    v20 = v14;
                                  if ((sub_10002F594(a1, "cbdrRefreshedAges_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                    goto LABEL_14;
                                  v22 = "ASPFTLParseBufferToCxt: cbdrRefreshedAges(756): Cannot add 9 elements to context";
                                  goto LABEL_2228;
                                case 758:
                                  if ((sub_10002F594(a1, "cbdrSkippedBlocks", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: cbdrSkippedBlocks(758) cannot add 1 element to context";
                                  goto LABEL_15;
                                case 759:
                                  if ((_DWORD)v14 != 5)
                                    sub_10001F9D4("ASPFTLParseBufferToCxt: cbdrScanPct(759): (#5) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                  if (v14 >= 5)
                                    v20 = 5;
                                  else
                                    v20 = v14;
                                  if ((sub_10002F594(a1, "cbdrScanPct_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                    goto LABEL_14;
                                  v22 = "ASPFTLParseBufferToCxt: cbdrScanPct(759): Cannot add 5 elements to context";
                                  goto LABEL_2228;
                                case 760:
                                  if ((sub_10002F594(a1, "raidSuccessfulBMXReconstructionInternal", (uint64_t)v8, 8u, 1u) & 1) != 0)goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: raidSuccessfulBMXReconstructionInternal(760) cannot add "
                                        "1 element to context";
                                  goto LABEL_15;
                                case 761:
                                  if ((sub_10002F594(a1, "raidSuccessfulBMXReconstructionHost", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: raidSuccessfulBMXReconstructionHost(761) cannot add 1 el"
                                        "ement to context";
                                  goto LABEL_15;
                                case 762:
                                  if ((sub_10002F594(a1, "raidFailedBMXReconstructionInternal", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: raidFailedBMXReconstructionInternal(762) cannot add 1 el"
                                        "ement to context";
                                  goto LABEL_15;
                                case 763:
                                  if ((sub_10002F594(a1, "raidFailedBMXReconstructionHost", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: raidFailedBMXReconstructionHost(763) cannot add 1 element to context";
                                  goto LABEL_15;
                                case 764:
                                  if ((sub_10002F594(a1, "ricSPRVFail", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: ricSPRVFail(764) cannot add 1 element to context";
                                  goto LABEL_15;
                                case 765:
                                  if ((sub_10002F594(a1, "ricMPRVFail", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: ricMPRVFail(765) cannot add 1 element to context";
                                  goto LABEL_15;
                                case 768:
                                  if ((_DWORD)v14 != 9)
                                    sub_10001F9D4("ASPFTLParseBufferToCxt: cbdrRefreshedAgesSLC(768): (#9) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                  if (v14 >= 9)
                                    v20 = 9;
                                  else
                                    v20 = v14;
                                  if ((sub_10002F594(a1, "cbdrRefreshedAgesSLC_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                    goto LABEL_14;
                                  v22 = "ASPFTLParseBufferToCxt: cbdrRefreshedAgesSLC(768): Cannot add 9 elements to context";
                                  goto LABEL_2228;
                                case 770:
                                  if ((_DWORD)v14 != 8)
                                    sub_10001F9D4("ASPFTLParseBufferToCxt: cpuBurstLength(770): (#8) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                  if (v14 >= 8)
                                    v20 = 8;
                                  else
                                    v20 = v14;
                                  if ((sub_10002F594(a1, "cpuBurstLength_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                    goto LABEL_14;
                                  v22 = "ASPFTLParseBufferToCxt: cpuBurstLength(770): Cannot add 8 elements to context";
                                  goto LABEL_2228;
                                case 771:
                                  if ((sub_10002F594(a1, "autoSkipRaidRecoFail", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: autoSkipRaidRecoFail(771) cannot add 1 element to context";
                                  goto LABEL_15;
                                case 772:
                                  if ((_DWORD)v14 != 32)
                                    sub_10001F9D4("ASPFTLParseBufferToCxt: dmReasonsSlc(772): (#32) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                  if (v14 >= 0x20)
                                    v20 = 32;
                                  else
                                    v20 = v14;
                                  if ((sub_10002F594(a1, "dmReasonsSlc_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                    goto LABEL_14;
                                  v22 = "ASPFTLParseBufferToCxt: dmReasonsSlc(772): Cannot add 32 elements to context";
                                  goto LABEL_2228;
                                case 773:
                                  if ((_DWORD)v14 != 32)
                                    sub_10001F9D4("ASPFTLParseBufferToCxt: dmReasonsTlc(773): (#32) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                  if (v14 >= 0x20)
                                    v20 = 32;
                                  else
                                    v20 = v14;
                                  if ((sub_10002F594(a1, "dmReasonsTlc_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                    goto LABEL_14;
                                  v22 = "ASPFTLParseBufferToCxt: dmReasonsTlc(773): Cannot add 32 elements to context";
                                  goto LABEL_2228;
                                case 774:
                                  if ((sub_10002F594(a1, "raidReconstructFailBMXAbort", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: raidReconstructFailBMXAbort(774) cannot add 1 element to context";
                                  goto LABEL_15;
                                case 775:
                                  if ((sub_10002F594(a1, "bandKill_fatBindingNoBlocks", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: bandKill_fatBindingNoBlocks(775) cannot add 1 element to context";
                                  goto LABEL_15;
                                case 776:
                                  if ((sub_10002F594(a1, "bandKill_fatBindingFewBlocks", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: bandKill_fatBindingFewBlocks(776) cannot add 1 element to context";
                                  goto LABEL_15;
                                case 777:
                                  if ((sub_10002F594(a1, "numBadBootBlocks", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: numBadBootBlocks(777) cannot add 1 element to context";
                                  goto LABEL_15;
                                case 778:
                                  if ((sub_10002F594(a1, "snapshotCPUHigh", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                    goto LABEL_16;
                                  v19 = "ASPFTLParseBufferToCxt: snapshotCPUHigh(778) cannot add 1 element to context";
                                  goto LABEL_15;
                                default:
                                  switch(v12)
                                  {
                                    case 779:
                                      if ((sub_10002F594(a1, "snapshotCPULow", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                        goto LABEL_16;
                                      v19 = "ASPFTLParseBufferToCxt: snapshotCPULow(779) cannot add 1 element to context";
                                      goto LABEL_15;
                                    case 780:
                                      if ((sub_10002F594(a1, "gcWithoutBMs", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                        goto LABEL_16;
                                      v19 = "ASPFTLParseBufferToCxt: gcWithoutBMs(780) cannot add 1 element to context";
                                      goto LABEL_15;
                                    case 781:
                                      if ((_DWORD)v14 != 10)
                                        sub_10001F9D4("ASPFTLParseBufferToCxt: gcSearchTimeHistory(781): (#10) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                      if (v14 >= 0xA)
                                        v20 = 10;
                                      else
                                        v20 = v14;
                                      if ((sub_10002F594(a1, "gcSearchTimeHistory_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                        goto LABEL_14;
                                      v22 = "ASPFTLParseBufferToCxt: gcSearchTimeHistory(781): Cannot add 10 elements to context";
                                      goto LABEL_2228;
                                    case 785:
                                      if ((_DWORD)v14 != 16)
                                        sub_10001F9D4("ASPFTLParseBufferToCxt: gcSearchPortion(785): (#16) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                      if (v14 >= 0x10)
                                        v20 = 16;
                                      else
                                        v20 = v14;
                                      if ((sub_10002F594(a1, "gcSearchPortion_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                        goto LABEL_14;
                                      v22 = "ASPFTLParseBufferToCxt: gcSearchPortion(785): Cannot add 16 elements to context";
                                      goto LABEL_2228;
                                    case 786:
                                      if ((sub_10002F594(a1, "raidReconstructFailBmxMp", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                        goto LABEL_16;
                                      v19 = "ASPFTLParseBufferToCxt: raidReconstructFailBmxMp(786) cannot add 1 element to context";
                                      goto LABEL_15;
                                    case 787:
                                      if ((sub_10002F594(a1, "raidReconstructFailBmx", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                        goto LABEL_16;
                                      v19 = "ASPFTLParseBufferToCxt: raidReconstructFailBmx(787) cannot add 1 element to context";
                                      goto LABEL_15;
                                    case 788:
                                      if ((sub_10002F594(a1, "raidReconstructFailBMXUECC", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                        goto LABEL_16;
                                      v19 = "ASPFTLParseBufferToCxt: raidReconstructFailBMXUECC(788) cannot add 1 element to context";
                                      goto LABEL_15;
                                    case 789:
                                      if ((sub_10002F594(a1, "raidReconstructFailBMXBlank", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                        goto LABEL_16;
                                      v19 = "ASPFTLParseBufferToCxt: raidReconstructFailBMXBlank(789) cannot add 1 element to context";
                                      goto LABEL_15;
                                    case 790:
                                      if ((sub_10002F594(a1, "raidPrevFailedReconstructBmxMpSkip", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                        goto LABEL_16;
                                      v19 = "ASPFTLParseBufferToCxt: raidPrevFailedReconstructBmxMpSkip(790) cannot add 1"
                                            " element to context";
                                      goto LABEL_15;
                                    case 792:
                                      if ((sub_10002F594(a1, "numTLCFatBands", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                        goto LABEL_16;
                                      v19 = "ASPFTLParseBufferToCxt: numTLCFatBands(792) cannot add 1 element to context";
                                      goto LABEL_15;
                                    case 793:
                                      if ((sub_10002F594(a1, "fatValidity", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                        goto LABEL_16;
                                      v19 = "ASPFTLParseBufferToCxt: fatValidity(793) cannot add 1 element to context";
                                      goto LABEL_15;
                                    case 794:
                                      if ((sub_10002F594(a1, "fatTotal", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                        goto LABEL_16;
                                      v19 = "ASPFTLParseBufferToCxt: fatTotal(794) cannot add 1 element to context";
                                      goto LABEL_15;
                                    case 798:
                                      if ((_DWORD)v14 != 4)
                                        sub_10001F9D4("ASPFTLParseBufferToCxt: raidBMXFailP(798): (#4) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                      if (v14 >= 4)
                                        v20 = 4;
                                      else
                                        v20 = v14;
                                      if ((sub_10002F594(a1, "raidBMXFailP_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                        goto LABEL_14;
                                      v22 = "ASPFTLParseBufferToCxt: raidBMXFailP(798): Cannot add 4 elements to context";
                                      goto LABEL_2228;
                                    case 799:
                                      if ((_DWORD)v14 != 4)
                                        sub_10001F9D4("ASPFTLParseBufferToCxt: raidBMXFailUECC(799): (#4) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                      if (v14 >= 4)
                                        v20 = 4;
                                      else
                                        v20 = v14;
                                      if ((sub_10002F594(a1, "raidBMXFailUECC_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                        goto LABEL_14;
                                      v22 = "ASPFTLParseBufferToCxt: raidBMXFailUECC(799): Cannot add 4 elements to context";
                                      goto LABEL_2228;
                                    case 804:
                                      if ((_DWORD)v14 != 4)
                                        sub_10001F9D4("ASPFTLParseBufferToCxt: raidBMXFailNoSPBX(804): (#4) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                      if (v14 >= 4)
                                        v20 = 4;
                                      else
                                        v20 = v14;
                                      if ((sub_10002F594(a1, "raidBMXFailNoSPBX_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                        goto LABEL_14;
                                      v22 = "ASPFTLParseBufferToCxt: raidBMXFailNoSPBX(804): Cannot add 4 elements to context";
                                      goto LABEL_2228;
                                    case 806:
                                      if ((_DWORD)v14 != 4)
                                        sub_10001F9D4("ASPFTLParseBufferToCxt: raidBMXFailBlank(806): (#4) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                      if (v14 >= 4)
                                        v20 = 4;
                                      else
                                        v20 = v14;
                                      if ((sub_10002F594(a1, "raidBMXFailBlank_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                        goto LABEL_14;
                                      v22 = "ASPFTLParseBufferToCxt: raidBMXFailBlank(806): Cannot add 4 elements to context";
                                      goto LABEL_2228;
                                    case 809:
                                      if ((_DWORD)v14 != 4)
                                        sub_10001F9D4("ASPFTLParseBufferToCxt: raidBMXFailUnsup(809): (#4) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                      if (v14 >= 4)
                                        v20 = 4;
                                      else
                                        v20 = v14;
                                      if ((sub_10002F594(a1, "raidBMXFailUnsup_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                        goto LABEL_14;
                                      v22 = "ASPFTLParseBufferToCxt: raidBMXFailUnsup(809): Cannot add 4 elements to context";
                                      goto LABEL_2228;
                                    case 811:
                                      if ((_DWORD)v14 != 4)
                                        sub_10001F9D4("ASPFTLParseBufferToCxt: raidBMXFailMpSkip(811): (#4) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                      if (v14 >= 4)
                                        v20 = 4;
                                      else
                                        v20 = v14;
                                      if ((sub_10002F594(a1, "raidBMXFailMpSkip_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                        goto LABEL_14;
                                      v22 = "ASPFTLParseBufferToCxt: raidBMXFailMpSkip(811): Cannot add 4 elements to context";
                                      goto LABEL_2228;
                                    case 812:
                                      if ((_DWORD)v14 != 4)
                                        sub_10001F9D4("ASPFTLParseBufferToCxt: raidBMXFailAbort(812): (#4) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                      if (v14 >= 4)
                                        v20 = 4;
                                      else
                                        v20 = v14;
                                      if ((sub_10002F594(a1, "raidBMXFailAbort_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                        goto LABEL_14;
                                      v22 = "ASPFTLParseBufferToCxt: raidBMXFailAbort(812): Cannot add 4 elements to context";
                                      goto LABEL_2228;
                                    case 813:
                                      if ((sub_10002F594(a1, "TurboRaidIsEnabled", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                        goto LABEL_16;
                                      v19 = "ASPFTLParseBufferToCxt: TurboRaidIsEnabled(813) cannot add 1 element to context";
                                      goto LABEL_15;
                                    case 814:
                                      if ((_DWORD)v14 != 4)
                                        sub_10001F9D4("ASPFTLParseBufferToCxt: raidBMXFailOther(814): (#4) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                      if (v14 >= 4)
                                        v20 = 4;
                                      else
                                        v20 = v14;
                                      if ((sub_10002F594(a1, "raidBMXFailOther_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                        goto LABEL_14;
                                      v22 = "ASPFTLParseBufferToCxt: raidBMXFailOther(814): Cannot add 4 elements to context";
                                      goto LABEL_2228;
                                    case 815:
                                      if ((_DWORD)v14 != 4)
                                        sub_10001F9D4("ASPFTLParseBufferToCxt: raidBMXSuccess(815): (#4) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                      if (v14 >= 4)
                                        v20 = 4;
                                      else
                                        v20 = v14;
                                      if ((sub_10002F594(a1, "raidBMXSuccess_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                        goto LABEL_14;
                                      v22 = "ASPFTLParseBufferToCxt: raidBMXSuccess(815): Cannot add 4 elements to context";
                                      goto LABEL_2228;
                                    case 816:
                                      if ((sub_10002F594(a1, "skinnyBandsExtraDip", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                        goto LABEL_16;
                                      v19 = "ASPFTLParseBufferToCxt: skinnyBandsExtraDip(816) cannot add 1 element to context";
                                      goto LABEL_15;
                                    case 821:
                                      if ((sub_10002F594(a1, "writeAmp", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                        goto LABEL_16;
                                      v19 = "ASPFTLParseBufferToCxt: writeAmp(821) cannot add 1 element to context";
                                      goto LABEL_15;
                                    case 822:
                                      if ((sub_10002F594(a1, "ricMaxClogOnlyPages", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                        goto LABEL_16;
                                      v19 = "ASPFTLParseBufferToCxt: ricMaxClogOnlyPages(822) cannot add 1 element to context";
                                      goto LABEL_15;
                                    case 823:
                                      if ((_DWORD)v14 != 3)
                                        sub_10001F9D4("ASPFTLParseBufferToCxt: readClassifyStatusesHisto(823): (#3) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                      if (v14 >= 3)
                                        v20 = 3;
                                      else
                                        v20 = v14;
                                      if ((sub_10002F594(a1, "readClassifyStatusesHisto_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                        goto LABEL_14;
                                      v22 = "ASPFTLParseBufferToCxt: readClassifyStatusesHisto(823): Cannot add 3 elements to context";
                                      goto LABEL_2228;
                                    case 824:
                                      if ((_DWORD)v14 != 10)
                                        sub_10001F9D4("ASPFTLParseBufferToCxt: readWithAuxStatusesHisto(824): (#10) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                      if (v14 >= 0xA)
                                        v20 = 10;
                                      else
                                        v20 = v14;
                                      if ((sub_10002F594(a1, "readWithAuxStatusesHisto_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                        goto LABEL_14;
                                      v22 = "ASPFTLParseBufferToCxt: readWithAuxStatusesHisto(824): Cannot add 10 elements to context";
                                      goto LABEL_2228;
                                    case 825:
                                      if ((_DWORD)v14 != 10)
                                        sub_10001F9D4("ASPFTLParseBufferToCxt: readReconstructStatusesHisto(825): (#10) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                      if (v14 >= 0xA)
                                        v20 = 10;
                                      else
                                        v20 = v14;
                                      if ((sub_10002F594(a1, "readReconstructStatusesHisto_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                        goto LABEL_14;
                                      v22 = "ASPFTLParseBufferToCxt: readReconstructStatusesHisto(825): Cannot add 10 ele"
                                            "ments to context";
                                      goto LABEL_2228;
                                    case 826:
                                      if ((sub_10002F594(a1, "bdrBackupChecks", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                        goto LABEL_16;
                                      v19 = "ASPFTLParseBufferToCxt: bdrBackupChecks(826) cannot add 1 element to context";
                                      goto LABEL_15;
                                    case 827:
                                      if ((sub_10002F594(a1, "ricExceedClogOnlyPagesTH", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                        goto LABEL_16;
                                      v19 = "ASPFTLParseBufferToCxt: ricExceedClogOnlyPagesTH(827) cannot add 1 element to context";
                                      goto LABEL_15;
                                    case 828:
                                      if ((sub_10002F594(a1, "numDipFailures", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                        goto LABEL_16;
                                      v19 = "ASPFTLParseBufferToCxt: numDipFailures(828) cannot add 1 element to context";
                                      goto LABEL_15;
                                    case 862:
                                      if ((sub_10002F594(a1, "raidSuccessfulSkip", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                        goto LABEL_16;
                                      v19 = "ASPFTLParseBufferToCxt: raidSuccessfulSkip(862) cannot add 1 element to context";
                                      goto LABEL_15;
                                    case 863:
                                      if ((sub_10002F594(a1, "raidFailedSkip", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                        goto LABEL_16;
                                      v19 = "ASPFTLParseBufferToCxt: raidFailedSkip(863) cannot add 1 element to context";
                                      goto LABEL_15;
                                    case 864:
                                      if ((sub_10002F594(a1, "raidSkipAttempts", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                        goto LABEL_16;
                                      v19 = "ASPFTLParseBufferToCxt: raidSkipAttempts(864) cannot add 1 element to context";
                                      goto LABEL_15;
                                    case 865:
                                      if ((_DWORD)v14 != 16)
                                        sub_10001F9D4("ASPFTLParseBufferToCxt: timeOfThrottlingPerLevel(865): (#16) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                      if (v14 >= 0x10)
                                        v20 = 16;
                                      else
                                        v20 = v14;
                                      if ((sub_10002F594(a1, "timeOfThrottlingPerLevel_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                        goto LABEL_14;
                                      v22 = "ASPFTLParseBufferToCxt: timeOfThrottlingPerLevel(865): Cannot add 16 elements to context";
                                      goto LABEL_2228;
                                    case 866:
                                      if ((_DWORD)v14 != 16)
                                        sub_10001F9D4("ASPFTLParseBufferToCxt: timeOfThrottlingPerReadLevel(866): (#16) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                      if (v14 >= 0x10)
                                        v20 = 16;
                                      else
                                        v20 = v14;
                                      if ((sub_10002F594(a1, "timeOfThrottlingPerReadLevel_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                        goto LABEL_14;
                                      v22 = "ASPFTLParseBufferToCxt: timeOfThrottlingPerReadLevel(866): Cannot add 16 ele"
                                            "ments to context";
                                      goto LABEL_2228;
                                    case 867:
                                      if ((_DWORD)v14 != 16)
                                        sub_10001F9D4("ASPFTLParseBufferToCxt: timeOfThrottlingPerWriteLevel(867): (#16) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                      if (v14 >= 0x10)
                                        v20 = 16;
                                      else
                                        v20 = v14;
                                      if ((sub_10002F594(a1, "timeOfThrottlingPerWriteLevel_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                        goto LABEL_14;
                                      v22 = "ASPFTLParseBufferToCxt: timeOfThrottlingPerWriteLevel(867): Cannot add 16 el"
                                            "ements to context";
                                      goto LABEL_2228;
                                    case 868:
                                      if ((_DWORD)v14 != 32)
                                        sub_10001F9D4("ASPFTLParseBufferToCxt: dmReasonsSlc_1bc(868): (#32) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                      if (v14 >= 0x20)
                                        v20 = 32;
                                      else
                                        v20 = v14;
                                      if ((sub_10002F594(a1, "dmReasonsSlc_1bc_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                        goto LABEL_14;
                                      v22 = "ASPFTLParseBufferToCxt: dmReasonsSlc_1bc(868): Cannot add 32 elements to context";
                                      goto LABEL_2228;
                                    case 869:
                                      if ((_DWORD)v14 != 32)
                                        sub_10001F9D4("ASPFTLParseBufferToCxt: dmReasonsTlc_1bc(869): (#32) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                      if (v14 >= 0x20)
                                        v20 = 32;
                                      else
                                        v20 = v14;
                                      if ((sub_10002F594(a1, "dmReasonsTlc_1bc_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                        goto LABEL_14;
                                      v22 = "ASPFTLParseBufferToCxt: dmReasonsTlc_1bc(869): Cannot add 32 elements to context";
                                      goto LABEL_2228;
                                    case 870:
                                      if ((_DWORD)v14 != 32)
                                        sub_10001F9D4("ASPFTLParseBufferToCxt: dmReasonsSlc_1bc_he(870): (#32) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                      if (v14 >= 0x20)
                                        v20 = 32;
                                      else
                                        v20 = v14;
                                      if ((sub_10002F594(a1, "dmReasonsSlc_1bc_he_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                        goto LABEL_14;
                                      v22 = "ASPFTLParseBufferToCxt: dmReasonsSlc_1bc_he(870): Cannot add 32 elements to context";
                                      goto LABEL_2228;
                                    case 871:
                                      if ((_DWORD)v14 != 32)
                                        sub_10001F9D4("ASPFTLParseBufferToCxt: dmReasonsTlc_1bc_he(871): (#32) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                      if (v14 >= 0x20)
                                        v20 = 32;
                                      else
                                        v20 = v14;
                                      if ((sub_10002F594(a1, "dmReasonsTlc_1bc_he_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                        goto LABEL_14;
                                      v22 = "ASPFTLParseBufferToCxt: dmReasonsTlc_1bc_he(871): Cannot add 32 elements to context";
                                      goto LABEL_2228;
                                    case 876:
                                      if ((_DWORD)v14 != 32)
                                        sub_10001F9D4("ASPFTLParseBufferToCxt: dmReasonsSlc_mbc(876): (#32) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                      if (v14 >= 0x20)
                                        v20 = 32;
                                      else
                                        v20 = v14;
                                      if ((sub_10002F594(a1, "dmReasonsSlc_mbc_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                        goto LABEL_14;
                                      v22 = "ASPFTLParseBufferToCxt: dmReasonsSlc_mbc(876): Cannot add 32 elements to context";
                                      goto LABEL_2228;
                                    case 877:
                                      if ((_DWORD)v14 != 32)
                                        sub_10001F9D4("ASPFTLParseBufferToCxt: dmReasonsTlc_mbc(877): (#32) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                      if (v14 >= 0x20)
                                        v20 = 32;
                                      else
                                        v20 = v14;
                                      if ((sub_10002F594(a1, "dmReasonsTlc_mbc_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                        goto LABEL_14;
                                      v22 = "ASPFTLParseBufferToCxt: dmReasonsTlc_mbc(877): Cannot add 32 elements to context";
                                      goto LABEL_2228;
                                    case 883:
                                      if ((sub_10002F594(a1, "clogEmptyProgramms", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                        goto LABEL_16;
                                      v19 = "ASPFTLParseBufferToCxt: clogEmptyProgramms(883) cannot add 1 element to context";
                                      goto LABEL_15;
                                    case 884:
                                      if ((sub_10002F594(a1, "oslcHwCloseBand", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                        goto LABEL_16;
                                      v19 = "ASPFTLParseBufferToCxt: oslcHwCloseBand(884) cannot add 1 element to context";
                                      goto LABEL_15;
                                    case 891:
                                      if ((_DWORD)v14 != 2)
                                        sub_10001F9D4("ASPFTLParseBufferToCxt: turboRaidSuccessAuxPartition(891): (#2) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                      if (v14 >= 2)
                                        v20 = 2;
                                      else
                                        v20 = v14;
                                      if ((sub_10002F594(a1, "turboRaidSuccessAuxPartition_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                        goto LABEL_14;
                                      v22 = "ASPFTLParseBufferToCxt: turboRaidSuccessAuxPartition(891): Cannot add 2 elements to context";
                                      goto LABEL_2228;
                                    case 892:
                                      if ((_DWORD)v14 != 2)
                                        sub_10001F9D4("ASPFTLParseBufferToCxt: turboRaidFailAuxPartition(892): (#2) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                      if (v14 >= 2)
                                        v20 = 2;
                                      else
                                        v20 = v14;
                                      if ((sub_10002F594(a1, "turboRaidFailAuxPartition_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                        goto LABEL_14;
                                      v22 = "ASPFTLParseBufferToCxt: turboRaidFailAuxPartition(892): Cannot add 2 elements to context";
                                      goto LABEL_2228;
                                    case 893:
                                      if ((_DWORD)v14 != 2)
                                        sub_10001F9D4("ASPFTLParseBufferToCxt: turboRaidClassifyQualPartition(893): (#2) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                      if (v14 >= 2)
                                        v20 = 2;
                                      else
                                        v20 = v14;
                                      if ((sub_10002F594(a1, "turboRaidClassifyQualPartition_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                        goto LABEL_14;
                                      v22 = "ASPFTLParseBufferToCxt: turboRaidClassifyQualPartition(893): Cannot add 2 el"
                                            "ements to context";
                                      goto LABEL_2228;
                                    case 894:
                                      if ((_DWORD)v14 != 2)
                                        sub_10001F9D4("ASPFTLParseBufferToCxt: turboRaidClassifyRelPartition(894): (#2) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                      if (v14 >= 2)
                                        v20 = 2;
                                      else
                                        v20 = v14;
                                      if ((sub_10002F594(a1, "turboRaidClassifyRelPartition_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                        goto LABEL_14;
                                      v22 = "ASPFTLParseBufferToCxt: turboRaidClassifyRelPartition(894): Cannot add 2 ele"
                                            "ments to context";
                                      goto LABEL_2228;
                                    case 895:
                                      if ((sub_10002F594(a1, "IND_pool_freeMinSilo", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                        goto LABEL_16;
                                      v19 = "ASPFTLParseBufferToCxt: IND_pool_freeMinSilo(895) cannot add 1 element to context";
                                      goto LABEL_15;
                                    case 896:
                                      if ((sub_10002F594(a1, "autoSweepBlocks", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                        goto LABEL_16;
                                      v19 = "ASPFTLParseBufferToCxt: autoSweepBlocks(896) cannot add 1 element to context";
                                      goto LABEL_15;
                                    case 897:
                                      if ((_DWORD)v14 != 16)
                                        sub_10001F9D4("ASPFTLParseBufferToCxt: wcWrFragSizes(897): (#16) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                      if (v14 >= 0x10)
                                        v20 = 16;
                                      else
                                        v20 = v14;
                                      if ((sub_10002F594(a1, "wcWrFragSizes_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                        goto LABEL_14;
                                      v22 = "ASPFTLParseBufferToCxt: wcWrFragSizes(897): Cannot add 16 elements to context";
                                      goto LABEL_2228;
                                    case 898:
                                      if ((_DWORD)v14 != 16)
                                        sub_10001F9D4("ASPFTLParseBufferToCxt: indStateAcrossGcDidNoL(898): (#16) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                      if (v14 >= 0x10)
                                        v20 = 16;
                                      else
                                        v20 = v14;
                                      if ((sub_10002F594(a1, "indStateAcrossGcDidNoL_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                        goto LABEL_14;
                                      v22 = "ASPFTLParseBufferToCxt: indStateAcrossGcDidNoL(898): Cannot add 16 elements to context";
                                      goto LABEL_2228;
                                    case 899:
                                      if ((_DWORD)v14 != 16)
                                        sub_10001F9D4("ASPFTLParseBufferToCxt: indStateAcrossGcDidL(899): (#16) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                      if (v14 >= 0x10)
                                        v20 = 16;
                                      else
                                        v20 = v14;
                                      if ((sub_10002F594(a1, "indStateAcrossGcDidL_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                        goto LABEL_14;
                                      v22 = "ASPFTLParseBufferToCxt: indStateAcrossGcDidL(899): Cannot add 16 elements to context";
                                      goto LABEL_2228;
                                    case 900:
                                      if ((sub_10002F594(a1, "turboRaidNoClassifyDueToWasRetire", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                        goto LABEL_16;
                                      v19 = "ASPFTLParseBufferToCxt: turboRaidNoClassifyDueToWasRetire(900) cannot add 1 "
                                            "element to context";
                                      goto LABEL_15;
                                    case 901:
                                      if ((sub_10002F594(a1, "turboRaidNoClassifyDueToOpenBand", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                        goto LABEL_16;
                                      v19 = "ASPFTLParseBufferToCxt: turboRaidNoClassifyDueToOpenBand(901) cannot add 1 e"
                                            "lement to context";
                                      goto LABEL_15;
                                    case 902:
                                      if ((sub_10002F594(a1, "turboRaidNoClassifyDueToQualityBlock", (uint64_t)v8, 8u, 1u) & 1) != 0)goto LABEL_16;
                                      v19 = "ASPFTLParseBufferToCxt: turboRaidNoClassifyDueToQualityBlock(902) cannot add"
                                            " 1 element to context";
                                      goto LABEL_15;
                                    case 903:
                                      if ((sub_10002F594(a1, "turboRaidGbbOpenBand", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                        goto LABEL_16;
                                      v19 = "ASPFTLParseBufferToCxt: turboRaidGbbOpenBand(903) cannot add 1 element to context";
                                      goto LABEL_15;
                                    case 904:
                                      if ((sub_10002F594(a1, "turboRaidGbbShouldRetireOnRefresh", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                        goto LABEL_16;
                                      v19 = "ASPFTLParseBufferToCxt: turboRaidGbbShouldRetireOnRefresh(904) cannot add 1 "
                                            "element to context";
                                      goto LABEL_15;
                                    case 905:
                                      if ((_DWORD)v14 != 16)
                                        sub_10001F9D4("ASPFTLParseBufferToCxt: turboRaidRelPerBlock(905): (#16) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                      if (v14 >= 0x10)
                                        v20 = 16;
                                      else
                                        v20 = v14;
                                      if ((sub_10002F594(a1, "turboRaidRelPerBlock_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                        goto LABEL_14;
                                      v22 = "ASPFTLParseBufferToCxt: turboRaidRelPerBlock(905): Cannot add 16 elements to context";
                                      goto LABEL_2228;
                                    case 906:
                                      if ((_DWORD)v14 != 16)
                                        sub_10001F9D4("ASPFTLParseBufferToCxt: turboRaidRelBetweenRefreshesPerBlock(906): (#16) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                      if (v14 >= 0x10)
                                        v20 = 16;
                                      else
                                        v20 = v14;
                                      if ((sub_10002F594(a1, "turboRaidRelBetweenRefreshesPerBlock_", (uint64_t)v8, 8u, v20) & 1) != 0)goto LABEL_14;
                                      v22 = "ASPFTLParseBufferToCxt: turboRaidRelBetweenRefreshesPerBlock(906): Cannot ad"
                                            "d 16 elements to context";
                                      goto LABEL_2228;
                                    case 907:
                                      if ((_DWORD)v14 != 16)
                                        sub_10001F9D4("ASPFTLParseBufferToCxt: turboRaidMaxRelBetweenRefreshesPerBlock(907): (#16) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                      if (v14 >= 0x10)
                                        v20 = 16;
                                      else
                                        v20 = v14;
                                      if ((sub_10002F594(a1, "turboRaidMaxRelBetweenRefreshesPerBlock_", (uint64_t)v8, 8u, v20) & 1) != 0)goto LABEL_14;
                                      v22 = "ASPFTLParseBufferToCxt: turboRaidMaxRelBetweenRefreshesPerBlock(907): Cannot"
                                            " add 16 elements to context";
                                      goto LABEL_2228;
                                    case 908:
                                      if ((_DWORD)v14 != 16)
                                        sub_10001F9D4("ASPFTLParseBufferToCxt: turboRaidMinRelBetweenRefreshesPerBlock(908): (#16) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                      if (v14 >= 0x10)
                                        v20 = 16;
                                      else
                                        v20 = v14;
                                      if ((sub_10002F594(a1, "turboRaidMinRelBetweenRefreshesPerBlock_", (uint64_t)v8, 8u, v20) & 1) != 0)goto LABEL_14;
                                      v22 = "ASPFTLParseBufferToCxt: turboRaidMinRelBetweenRefreshesPerBlock(908): Cannot"
                                            " add 16 elements to context";
                                      goto LABEL_2228;
                                    case 918:
                                      if ((_DWORD)v14 != 16)
                                        sub_10001F9D4("ASPFTLParseBufferToCxt: turboRaidMaxCyclesBetweenRel(918): (#16) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                      if (v14 >= 0x10)
                                        v20 = 16;
                                      else
                                        v20 = v14;
                                      if ((sub_10002F594(a1, "turboRaidMaxCyclesBetweenRel_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                        goto LABEL_14;
                                      v22 = "ASPFTLParseBufferToCxt: turboRaidMaxCyclesBetweenRel(918): Cannot add 16 ele"
                                            "ments to context";
                                      goto LABEL_2228;
                                    default:
                                      if (v12 <= 1039)
                                      {
                                        switch(v12)
                                        {
                                          case 919:
                                            if ((_DWORD)v14 != 16)
                                              sub_10001F9D4("ASPFTLParseBufferToCxt: turboRaidMinCyclesBetweenRel(919): (#16) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                            if (v14 >= 0x10)
                                              v20 = 16;
                                            else
                                              v20 = v14;
                                            if ((sub_10002F594(a1, "turboRaidMinCyclesBetweenRel_", (uint64_t)v8, 8u, v20) & 1) != 0)goto LABEL_14;
                                            v22 = "ASPFTLParseBufferToCxt: turboRaidMinCyclesBetweenRel(919): Cannot add "
                                                  "16 elements to context";
                                            goto LABEL_2228;
                                          case 920:
                                            if ((_DWORD)v14 != 16)
                                              sub_10001F9D4("ASPFTLParseBufferToCxt: turboRaidAuxPerBlock(920): (#16) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                            if (v14 >= 0x10)
                                              v20 = 16;
                                            else
                                              v20 = v14;
                                            if ((sub_10002F594(a1, "turboRaidAuxPerBlock_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                              goto LABEL_14;
                                            v22 = "ASPFTLParseBufferToCxt: turboRaidAuxPerBlock(920): Cannot add 16 elements to context";
                                            goto LABEL_2228;
                                          case 921:
                                            if ((_DWORD)v14 != 16)
                                              sub_10001F9D4("ASPFTLParseBufferToCxt: turboRaidAuxBetweenRefreshesPerBlock(921): (#16) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                            if (v14 >= 0x10)
                                              v20 = 16;
                                            else
                                              v20 = v14;
                                            if ((sub_10002F594(a1, "turboRaidAuxBetweenRefreshesPerBlock_", (uint64_t)v8, 8u, v20) & 1) != 0)goto LABEL_14;
                                            v22 = "ASPFTLParseBufferToCxt: turboRaidAuxBetweenRefreshesPerBlock(921): Can"
                                                  "not add 16 elements to context";
                                            goto LABEL_2228;
                                          case 922:
                                            if ((sub_10002F594(a1, "turboRaidRelLockMark", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                              goto LABEL_16;
                                            v19 = "ASPFTLParseBufferToCxt: turboRaidRelLockMark(922) cannot add 1 element to context";
                                            goto LABEL_15;
                                          case 923:
                                            if ((sub_10002F594(a1, "turboRaidAuxLockMark", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                              goto LABEL_16;
                                            v19 = "ASPFTLParseBufferToCxt: turboRaidAuxLockMark(923) cannot add 1 element to context";
                                            goto LABEL_15;
                                          case 924:
                                          case 925:
                                          case 926:
                                          case 927:
                                          case 928:
                                          case 929:
                                          case 936:
                                          case 941:
                                          case 945:
                                          case 946:
                                          case 947:
                                          case 949:
                                          case 950:
                                          case 952:
                                          case 954:
                                          case 955:
                                          case 956:
                                          case 957:
                                          case 958:
                                          case 959:
                                          case 960:
                                          case 963:
                                          case 964:
                                          case 965:
                                          case 966:
                                          case 968:
                                          case 969:
                                          case 970:
                                            goto LABEL_2116;
                                          case 930:
                                            if ((_DWORD)v14 != 16)
                                              sub_10001F9D4("ASPFTLParseBufferToCxt: turboRaidMaxCyclesBetweenAux(930): (#16) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                            if (v14 >= 0x10)
                                              v20 = 16;
                                            else
                                              v20 = v14;
                                            if ((sub_10002F594(a1, "turboRaidMaxCyclesBetweenAux_", (uint64_t)v8, 8u, v20) & 1) != 0)goto LABEL_14;
                                            v22 = "ASPFTLParseBufferToCxt: turboRaidMaxCyclesBetweenAux(930): Cannot add "
                                                  "16 elements to context";
                                            goto LABEL_2228;
                                          case 931:
                                            if ((_DWORD)v14 != 16)
                                              sub_10001F9D4("ASPFTLParseBufferToCxt: turboRaidMinCyclesBetweenAux(931): (#16) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                            if (v14 >= 0x10)
                                              v20 = 16;
                                            else
                                              v20 = v14;
                                            if ((sub_10002F594(a1, "turboRaidMinCyclesBetweenAux_", (uint64_t)v8, 8u, v20) & 1) != 0)goto LABEL_14;
                                            v22 = "ASPFTLParseBufferToCxt: turboRaidMinCyclesBetweenAux(931): Cannot add "
                                                  "16 elements to context";
                                            goto LABEL_2228;
                                          case 932:
                                            if ((_DWORD)v14 != 16)
                                              sub_10001F9D4("ASPFTLParseBufferToCxt: turboRaidLastRelPECycles(932): (#16) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                            if (v14 >= 0x10)
                                              v20 = 16;
                                            else
                                              v20 = v14;
                                            if ((sub_10002F594(a1, "turboRaidLastRelPECycles_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                              goto LABEL_14;
                                            v22 = "ASPFTLParseBufferToCxt: turboRaidLastRelPECycles(932): Cannot add 16 e"
                                                  "lements to context";
                                            goto LABEL_2228;
                                          case 933:
                                            if ((_DWORD)v14 != 16)
                                              sub_10001F9D4("ASPFTLParseBufferToCxt: turboRaidRelQualPECycles(933): (#16) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                            if (v14 >= 0x10)
                                              v20 = 16;
                                            else
                                              v20 = v14;
                                            if ((sub_10002F594(a1, "turboRaidRelQualPECycles_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                              goto LABEL_14;
                                            v22 = "ASPFTLParseBufferToCxt: turboRaidRelQualPECycles(933): Cannot add 16 e"
                                                  "lements to context";
                                            goto LABEL_2228;
                                          case 934:
                                            if ((_DWORD)v14 != 16)
                                              sub_10001F9D4("ASPFTLParseBufferToCxt: turboRaidLastAuxPECycles(934): (#16) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                            if (v14 >= 0x10)
                                              v20 = 16;
                                            else
                                              v20 = v14;
                                            if ((sub_10002F594(a1, "turboRaidLastAuxPECycles_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                              goto LABEL_14;
                                            v22 = "ASPFTLParseBufferToCxt: turboRaidLastAuxPECycles(934): Cannot add 16 e"
                                                  "lements to context";
                                            goto LABEL_2228;
                                          case 935:
                                            if ((_DWORD)v14 != 16)
                                              sub_10001F9D4("ASPFTLParseBufferToCxt: turboRaidAuxQualPECycles(935): (#16) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                            if (v14 >= 0x10)
                                              v20 = 16;
                                            else
                                              v20 = v14;
                                            if ((sub_10002F594(a1, "turboRaidAuxQualPECycles_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                              goto LABEL_14;
                                            v22 = "ASPFTLParseBufferToCxt: turboRaidAuxQualPECycles(935): Cannot add 16 e"
                                                  "lements to context";
                                            goto LABEL_2228;
                                          case 937:
                                            if ((sub_10002F594(a1, "turboRaidPEFailAfterRel", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                              goto LABEL_16;
                                            v19 = "ASPFTLParseBufferToCxt: turboRaidPEFailAfterRel(937) cannot add 1 element to context";
                                            goto LABEL_15;
                                          case 938:
                                            if ((sub_10002F594(a1, "turboRaidPEFailAfterAux", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                              goto LABEL_16;
                                            v19 = "ASPFTLParseBufferToCxt: turboRaidPEFailAfterAux(938) cannot add 1 element to context";
                                            goto LABEL_15;
                                          case 939:
                                            if ((sub_10002F594(a1, "dvfmVotesCPU", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                              goto LABEL_16;
                                            v19 = "ASPFTLParseBufferToCxt: dvfmVotesCPU(939) cannot add 1 element to context";
                                            goto LABEL_15;
                                          case 940:
                                            if ((sub_10002F594(a1, "dvfmVotesBandwidth", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                              goto LABEL_16;
                                            v19 = "ASPFTLParseBufferToCxt: dvfmVotesBandwidth(940) cannot add 1 element to context";
                                            goto LABEL_15;
                                          case 942:
                                            if ((sub_10002F594(a1, "maxSLCEndurance", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                              goto LABEL_16;
                                            v19 = "ASPFTLParseBufferToCxt: maxSLCEndurance(942) cannot add 1 element to context";
                                            goto LABEL_15;
                                          case 943:
                                            if ((sub_10002F594(a1, "maxMixedEndurance", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                              goto LABEL_16;
                                            v19 = "ASPFTLParseBufferToCxt: maxMixedEndurance(943) cannot add 1 element to context";
                                            goto LABEL_15;
                                          case 944:
                                            if ((sub_10002F594(a1, "maxNativeEndurance", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                              goto LABEL_16;
                                            v19 = "ASPFTLParseBufferToCxt: maxNativeEndurance(944) cannot add 1 element to context";
                                            goto LABEL_15;
                                          case 948:
                                            if ((_DWORD)v14 != 40)
                                              sub_10001F9D4("ASPFTLParseBufferToCxt: assertHistory(948): (#40) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                            if (v14 >= 0x28)
                                              v20 = 40;
                                            else
                                              v20 = v14;
                                            if ((sub_10002F594(a1, "assertHistory_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                              goto LABEL_14;
                                            v22 = "ASPFTLParseBufferToCxt: assertHistory(948): Cannot add 40 elements to context";
                                            goto LABEL_2228;
                                          case 951:
                                            if ((sub_10002F594(a1, "asp3Support", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                              goto LABEL_16;
                                            v19 = "ASPFTLParseBufferToCxt: asp3Support(951) cannot add 1 element to context";
                                            goto LABEL_15;
                                          case 953:
                                            if ((sub_10002F594(a1, "numCrossTempRaidUecc", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                              goto LABEL_16;
                                            v19 = "ASPFTLParseBufferToCxt: numCrossTempRaidUecc(953) cannot add 1 element to context";
                                            goto LABEL_15;
                                          case 961:
                                            if ((sub_10002F594(a1, "osBuildStr", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                              goto LABEL_16;
                                            v19 = "ASPFTLParseBufferToCxt: osBuildStr(961) cannot add 1 element to context";
                                            goto LABEL_15;
                                          case 962:
                                            if ((sub_10002F594(a1, "raidConfig", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                              goto LABEL_16;
                                            v19 = "ASPFTLParseBufferToCxt: raidConfig(962) cannot add 1 element to context";
                                            goto LABEL_15;
                                          case 967:
                                            if ((_DWORD)v14 != 12)
                                              sub_10001F9D4("ASPFTLParseBufferToCxt: indTrimFrags(967): (#12) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                            if (v14 >= 0xC)
                                              v20 = 12;
                                            else
                                              v20 = v14;
                                            if ((sub_10002F594(a1, "indTrimFrags_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                              goto LABEL_14;
                                            v22 = "ASPFTLParseBufferToCxt: indTrimFrags(967): Cannot add 12 elements to context";
                                            goto LABEL_2228;
                                          case 971:
                                            if ((_DWORD)v14 != 12)
                                              sub_10001F9D4("ASPFTLParseBufferToCxt: indUsedFrags(971): (#12) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                            if (v14 >= 0xC)
                                              v20 = 12;
                                            else
                                              v20 = v14;
                                            if ((sub_10002F594(a1, "indUsedFrags_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                              goto LABEL_14;
                                            v22 = "ASPFTLParseBufferToCxt: indUsedFrags(971): Cannot add 12 elements to context";
                                            goto LABEL_2228;
                                          default:
                                            switch(v12)
                                            {
                                              case 996:
                                                if ((sub_10002F594(a1, "clogFindFail", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                                  goto LABEL_16;
                                                v19 = "ASPFTLParseBufferToCxt: clogFindFail(996) cannot add 1 element to context";
                                                goto LABEL_15;
                                              case 997:
                                                if ((sub_10002F594(a1, "clogFindBlank", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                                  goto LABEL_16;
                                                v19 = "ASPFTLParseBufferToCxt: clogFindBlank(997) cannot add 1 element to context";
                                                goto LABEL_15;
                                              case 998:
                                                if ((sub_10002F594(a1, "clogFindUnc", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                                  goto LABEL_16;
                                                v19 = "ASPFTLParseBufferToCxt: clogFindUnc(998) cannot add 1 element to context";
                                                goto LABEL_15;
                                              case 999:
                                                if ((sub_10002F594(a1, "clogFindUnexpected", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                                  goto LABEL_16;
                                                v19 = "ASPFTLParseBufferToCxt: clogFindUnexpected(999) cannot add 1 element to context";
                                                goto LABEL_15;
                                              case 1001:
                                                if ((_DWORD)v14 != 8)
                                                  sub_10001F9D4("ASPFTLParseBufferToCxt: clogReplayFailReason(1001): (#8) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                                if (v14 >= 8)
                                                  v20 = 8;
                                                else
                                                  v20 = v14;
                                                if ((sub_10002F594(a1, "clogReplayFailReason_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                                  goto LABEL_14;
                                                v22 = "ASPFTLParseBufferToCxt: clogReplayFailReason(1001): Cannot add 8 e"
                                                      "lements to context";
                                                goto LABEL_2228;
                                              case 1002:
                                                if ((sub_10002F594(a1, "clogReplayTransientError", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                                  goto LABEL_16;
                                                v19 = "ASPFTLParseBufferToCxt: clogReplayTransientError(1002) cannot add "
                                                      "1 element to context";
                                                goto LABEL_15;
                                              case 1003:
                                                if ((sub_10002F594(a1, "clogReplaySpfError", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                                  goto LABEL_16;
                                                v19 = "ASPFTLParseBufferToCxt: clogReplaySpfError(1003) cannot add 1 element to context";
                                                goto LABEL_15;
                                              case 1015:
                                                if ((_DWORD)v14 != 4)
                                                  sub_10001F9D4("ASPFTLParseBufferToCxt: eanEarlyBootUeccPage(1015): (#4) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                                if (v14 >= 4)
                                                  v20 = 4;
                                                else
                                                  v20 = v14;
                                                if ((sub_10002F594(a1, "eanEarlyBootUeccPage_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                                  goto LABEL_14;
                                                v22 = "ASPFTLParseBufferToCxt: eanEarlyBootUeccPage(1015): Cannot add 4 e"
                                                      "lements to context";
                                                goto LABEL_2228;
                                              case 1016:
                                                if ((sub_10002F594(a1, "eanEarlyBootNumUeccPages", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                                  goto LABEL_16;
                                                v19 = "ASPFTLParseBufferToCxt: eanEarlyBootNumUeccPages(1016) cannot add "
                                                      "1 element to context";
                                                goto LABEL_15;
                                              case 1017:
                                                if ((sub_10002F594(a1, "eanEarlyBootUeccMultiplane", (uint64_t)v8, 8u, 1u) & 1) != 0)goto LABEL_16;
                                                v19 = "ASPFTLParseBufferToCxt: eanEarlyBootUeccMultiplane(1017) cannot ad"
                                                      "d 1 element to context";
                                                goto LABEL_15;
                                              default:
                                                goto LABEL_2116;
                                            }
                                        }
                                      }
                                      if (v12 <= 1146)
                                      {
                                        if (v12 <= 1104)
                                        {
                                          if (v12 <= 1041)
                                          {
                                            if (v12 == 1040)
                                            {
                                              if ((_DWORD)v14 != 31)
                                                sub_10001F9D4("ASPFTLParseBufferToCxt: bandsAgeBinsV2(1040): (#31) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                              if (v14 >= 0x1F)
                                                v20 = 31;
                                              else
                                                v20 = v14;
                                              if ((sub_10002F594(a1, "bandsAgeBinsV2_", (uint64_t)v8, 8u, v20) & 1) == 0)
                                              {
                                                v22 = "ASPFTLParseBufferToCxt: bandsAgeBinsV2(1040): Cannot add 31 elements to context";
                                                goto LABEL_2228;
                                              }
                                            }
                                            else
                                            {
                                              if ((_DWORD)v14 != 31)
                                                sub_10001F9D4("ASPFTLParseBufferToCxt: bandsAgeBinsSnapshot(1041): (#31) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                              if (v14 >= 0x1F)
                                                v20 = 31;
                                              else
                                                v20 = v14;
                                              if ((sub_10002F594(a1, "bandsAgeBinsSnapshot_", (uint64_t)v8, 8u, v20) & 1) == 0)
                                              {
                                                v22 = "ASPFTLParseBufferToCxt: bandsAgeBinsSnapshot(1041): Cannot add 31 "
                                                      "elements to context";
                                                goto LABEL_2228;
                                              }
                                            }
                                            goto LABEL_14;
                                          }
                                          if (v12 == 1042)
                                          {
                                            if ((_DWORD)v14 != 15)
                                              sub_10001F9D4("ASPFTLParseBufferToCxt: bandsAgeBinsReadSectors(1042): (#15) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                            if (v14 >= 0xF)
                                              v20 = 15;
                                            else
                                              v20 = v14;
                                            if ((sub_10002F594(a1, "bandsAgeBinsReadSectors_", (uint64_t)v8, 8u, v20) & 1) == 0)
                                            {
                                              v22 = "ASPFTLParseBufferToCxt: bandsAgeBinsReadSectors(1042): Cannot add 15"
                                                    " elements to context";
                                              goto LABEL_2228;
                                            }
                                            goto LABEL_14;
                                          }
                                          if (v12 == 1080)
                                          {
                                            if ((sub_10002F594(a1, "raidForceClogLoad", (uint64_t)v8, 8u, 1u) & 1) == 0)
                                            {
                                              v19 = "ASPFTLParseBufferToCxt: raidForceClogLoad(1080) cannot add 1 element to context";
LABEL_15:
                                              sub_10001F9D4(v19, a2, a3, a4, a5, a6, a7, a8, v23);
                                            }
LABEL_16:
                                            v10 = (v10 + 1);
                                            goto LABEL_17;
                                          }
                                        }
                                        else if (v12 <= 1115)
                                        {
                                          if (v12 == 1105)
                                          {
                                            if ((_DWORD)v14 != 14)
                                              sub_10001F9D4("ASPFTLParseBufferToCxt: hostReadSequential(1105): (#14) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                            if (v14 >= 0xE)
                                              v20 = 14;
                                            else
                                              v20 = v14;
                                            if ((sub_10002F594(a1, "hostReadSequential_", (uint64_t)v8, 8u, v20) & 1) == 0)
                                            {
                                              v22 = "ASPFTLParseBufferToCxt: hostReadSequential(1105): Cannot add 14 elements to context";
                                              goto LABEL_2228;
                                            }
                                            goto LABEL_14;
                                          }
                                          if (v12 == 1106)
                                          {
                                            if ((_DWORD)v14 != 14)
                                              sub_10001F9D4("ASPFTLParseBufferToCxt: GCReadSequential(1106): (#14) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                            if (v14 >= 0xE)
                                              v20 = 14;
                                            else
                                              v20 = v14;
                                            if ((sub_10002F594(a1, "GCReadSequential_", (uint64_t)v8, 8u, v20) & 1) == 0)
                                            {
                                              v22 = "ASPFTLParseBufferToCxt: GCReadSequential(1106): Cannot add 14 elements to context";
                                              goto LABEL_2228;
                                            }
                                            goto LABEL_14;
                                          }
                                        }
                                        else
                                        {
                                          switch(v12)
                                          {
                                            case 1116:
                                              if ((_DWORD)v14 != 32)
                                                sub_10001F9D4("ASPFTLParseBufferToCxt: gcwamp(1116): (#32) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                              if (v14 >= 0x20)
                                                v20 = 32;
                                              else
                                                v20 = v14;
                                              if ((sub_10002F594(a1, "gcwamp_", (uint64_t)v8, 8u, v20) & 1) == 0)
                                              {
                                                v22 = "ASPFTLParseBufferToCxt: gcwamp(1116): Cannot add 32 elements to context";
                                                goto LABEL_2228;
                                              }
                                              goto LABEL_14;
                                            case 1137:
                                              if ((sub_10002F594(a1, "numOfToUnhappySwitches", (uint64_t)v8, 8u, 1u) & 1) == 0)
                                              {
                                                v19 = "ASPFTLParseBufferToCxt: numOfToUnhappySwitches(1137) cannot add 1 "
                                                      "element to context";
                                                goto LABEL_15;
                                              }
                                              goto LABEL_16;
                                            case 1138:
                                              if ((sub_10002F594(a1, "numOfToHappySwitches", (uint64_t)v8, 8u, 1u) & 1) == 0)
                                              {
                                                v19 = "ASPFTLParseBufferToCxt: numOfToHappySwitches(1138) cannot add 1 el"
                                                      "ement to context";
                                                goto LABEL_15;
                                              }
                                              goto LABEL_16;
                                          }
                                        }
LABEL_2116:
                                        if (v12 <= 1231)
                                        {
                                          switch(v12)
                                          {
                                            case 1198:
                                              if ((_DWORD)v14 != 3)
                                                sub_10001F9D4("ASPFTLParseBufferToCxt: poDetectPERemovalMostSevereCost(1198): (#3) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                              if (v14 >= 3)
                                                v20 = 3;
                                              else
                                                v20 = v14;
                                              if ((sub_10002F594(a1, "poDetectPERemovalMostSevereCost_", (uint64_t)v8, 8u, v20) & 1) != 0)goto LABEL_14;
                                              v22 = "ASPFTLParseBufferToCxt: poDetectPERemovalMostSevereCost(1198): Canno"
                                                    "t add 3 elements to context";
                                              goto LABEL_2228;
                                            case 1199:
                                              if ((sub_10002F594(a1, "poDetectCurrentSize", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                                goto LABEL_16;
                                              v19 = "ASPFTLParseBufferToCxt: poDetectCurrentSize(1199) cannot add 1 element to context";
                                              goto LABEL_15;
                                            case 1200:
                                              goto LABEL_2166;
                                            case 1201:
                                              if ((_DWORD)v14 != 4)
                                                sub_10001F9D4("ASPFTLParseBufferToCxt: gcVerticalSuccssfulAlignments(1201): (#4) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                              if (v14 >= 4)
                                                v20 = 4;
                                              else
                                                v20 = v14;
                                              if ((sub_10002F594(a1, "gcVerticalSuccssfulAlignments_", (uint64_t)v8, 8u, v20) & 1) != 0)goto LABEL_14;
                                              v22 = "ASPFTLParseBufferToCxt: gcVerticalSuccssfulAlignments(1201): Cannot "
                                                    "add 4 elements to context";
                                              goto LABEL_2228;
                                            case 1202:
                                              if ((_DWORD)v14 != 4)
                                                sub_10001F9D4("ASPFTLParseBufferToCxt: gcVerticalNoAlignmentDueToMissingSegs(1202): (#4) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                              if (v14 >= 4)
                                                v20 = 4;
                                              else
                                                v20 = v14;
                                              if ((sub_10002F594(a1, "gcVerticalNoAlignmentDueToMissingSegs_", (uint64_t)v8, 8u, v20) & 1) != 0)goto LABEL_14;
                                              v22 = "ASPFTLParseBufferToCxt: gcVerticalNoAlignmentDueToMissingSegs(1202):"
                                                    " Cannot add 4 elements to context";
                                              goto LABEL_2228;
                                            default:
                                              switch(v12)
                                              {
                                                case 1216:
                                                  if ((_DWORD)v14 != 24)
                                                    sub_10001F9D4("ASPFTLParseBufferToCxt: tlcWLPerDipAvgPEC(1216): (#24) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                                  if (v14 >= 0x18)
                                                    v20 = 24;
                                                  else
                                                    v20 = v14;
                                                  if ((sub_10002F594(a1, "tlcWLPerDipAvgPEC_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                                    goto LABEL_14;
                                                  v22 = "ASPFTLParseBufferToCxt: tlcWLPerDipAvgPEC(1216): Cannot add 24 e"
                                                        "lements to context";
                                                  goto LABEL_2228;
                                                case 1217:
                                                  if ((_DWORD)v14 != 24)
                                                    sub_10001F9D4("ASPFTLParseBufferToCxt: tlcWLPerDipMaxPEC(1217): (#24) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                                  if (v14 >= 0x18)
                                                    v20 = 24;
                                                  else
                                                    v20 = v14;
                                                  if ((sub_10002F594(a1, "tlcWLPerDipMaxPEC_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                                    goto LABEL_14;
                                                  v22 = "ASPFTLParseBufferToCxt: tlcWLPerDipMaxPEC(1217): Cannot add 24 e"
                                                        "lements to context";
                                                  goto LABEL_2228;
                                                case 1218:
                                                  if ((_DWORD)v14 != 24)
                                                    sub_10001F9D4("ASPFTLParseBufferToCxt: tlcWLPerDipMinPEC(1218): (#24) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                                  if (v14 >= 0x18)
                                                    v20 = 24;
                                                  else
                                                    v20 = v14;
                                                  if ((sub_10002F594(a1, "tlcWLPerDipMinPEC_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                                    goto LABEL_14;
                                                  v22 = "ASPFTLParseBufferToCxt: tlcWLPerDipMinPEC(1218): Cannot add 24 e"
                                                        "lements to context";
                                                  goto LABEL_2228;
                                                case 1219:
                                                case 1220:
                                                case 1221:
                                                case 1222:
                                                case 1223:
                                                  goto LABEL_2166;
                                                case 1224:
                                                  if ((_DWORD)v14 != 20)
                                                    sub_10001F9D4("ASPFTLParseBufferToCxt: apfsValidLbaOvershoot(1224): (#20) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                                  if (v14 >= 0x14)
                                                    v20 = 20;
                                                  else
                                                    v20 = v14;
                                                  if ((sub_10002F594(a1, "apfsValidLbaOvershoot_", (uint64_t)v8, 8u, v20) & 1) != 0)goto LABEL_14;
                                                  v22 = "ASPFTLParseBufferToCxt: apfsValidLbaOvershoot(1224): Cannot add "
                                                        "20 elements to context";
                                                  goto LABEL_2228;
                                                default:
                                                  if (v12 != 1211)
                                                    goto LABEL_2166;
                                                  if ((_DWORD)v14 != 24)
                                                    sub_10001F9D4("ASPFTLParseBufferToCxt: forcedAllocationSmallEraseQ(1211): (#24) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                                  if (v14 >= 0x18)
                                                    v20 = 24;
                                                  else
                                                    v20 = v14;
                                                  if ((sub_10002F594(a1, "forcedAllocationSmallEraseQ_", (uint64_t)v8, 8u, v20) & 1) != 0)goto LABEL_14;
                                                  v22 = "ASPFTLParseBufferToCxt: forcedAllocationSmallEraseQ(1211): Canno"
                                                        "t add 24 elements to context";
                                                  break;
                                              }
                                              goto LABEL_2228;
                                          }
                                        }
                                        switch(v12)
                                        {
                                          case 1232:
                                            if ((sub_10002F594(a1, "eanFastSize", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                              goto LABEL_16;
                                            v19 = "ASPFTLParseBufferToCxt: eanFastSize(1232) cannot add 1 element to context";
                                            goto LABEL_15;
                                          case 1233:
                                            if ((sub_10002F594(a1, "eanNumSlcEvictions", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                              goto LABEL_16;
                                            v19 = "ASPFTLParseBufferToCxt: eanNumSlcEvictions(1233) cannot add 1 element to context";
                                            goto LABEL_15;
                                          case 1234:
                                            if ((sub_10002F594(a1, "eanNumForcedCompress", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                              goto LABEL_16;
                                            v19 = "ASPFTLParseBufferToCxt: eanNumForcedCompress(1234) cannot add 1 element to context";
                                            goto LABEL_15;
                                          case 1241:
                                            if ((_DWORD)v14 != 10)
                                              sub_10001F9D4("ASPFTLParseBufferToCxt: s2rTimeHisto(1241): (#10) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                            if (v14 >= 0xA)
                                              v20 = 10;
                                            else
                                              v20 = v14;
                                            if ((sub_10002F594(a1, "s2rTimeHisto_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                              goto LABEL_14;
                                            v22 = "ASPFTLParseBufferToCxt: s2rTimeHisto(1241): Cannot add 10 elements to context";
                                            goto LABEL_2228;
                                          case 1244:
                                            if ((sub_10002F594(a1, "calendarTimeWentBackward", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                              goto LABEL_16;
                                            v19 = "ASPFTLParseBufferToCxt: calendarTimeWentBackward(1244) cannot add 1 el"
                                                  "ement to context";
                                            goto LABEL_15;
                                          case 1246:
                                            if ((_DWORD)v14 != 8)
                                              sub_10001F9D4("ASPFTLParseBufferToCxt: bandsUeccCrossTempHisto(1246): (#8) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                            if (v14 >= 8)
                                              v20 = 8;
                                            else
                                              v20 = v14;
                                            if ((sub_10002F594(a1, "bandsUeccCrossTempHisto_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                              goto LABEL_14;
                                            v22 = "ASPFTLParseBufferToCxt: bandsUeccCrossTempHisto(1246): Cannot add 8 el"
                                                  "ements to context";
                                            goto LABEL_2228;
                                          default:
LABEL_2166:
                                            if (v14 <= 1)
                                              snprintf(__str, 0x20uLL, "Stat_%d");
                                            else
                                              snprintf(__str, 0x20uLL, "Stat_%d_");
                                            if ((sub_10002F594(a1, __str, (uint64_t)v8, 8u, v14) & 1) == 0)
                                            {
                                              sub_10001F9D4("ASPFTLParseBufferToCxt %d: Cannot add %d elements to context", a2, a3, a4, a5, a6, a7, a8, v12);
                                              return v10;
                                            }
                                            v10 = (v10 + v14);
                                            break;
                                        }
LABEL_17:
                                        v8 += v14;
                                        v11 -= v14;
                                        goto LABEL_2;
                                      }
                                      switch(v12)
                                      {
                                        case 1147:
                                          if ((_DWORD)v14 != 24)
                                            sub_10001F9D4("ASPFTLParseBufferToCxt: gc_concurrent_dw_gc12(1147): (#24) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                          if (v14 >= 0x18)
                                            v20 = 24;
                                          else
                                            v20 = v14;
                                          if ((sub_10002F594(a1, "gc_concurrent_dw_gc12_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                            goto LABEL_14;
                                          v22 = "ASPFTLParseBufferToCxt: gc_concurrent_dw_gc12(1147): Cannot add 24 elements to context";
                                          goto LABEL_2228;
                                        case 1148:
                                          if ((_DWORD)v14 != 24)
                                            sub_10001F9D4("ASPFTLParseBufferToCxt: gc_concurrent_dw_gc1(1148): (#24) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                          if (v14 >= 0x18)
                                            v20 = 24;
                                          else
                                            v20 = v14;
                                          if ((sub_10002F594(a1, "gc_concurrent_dw_gc1_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                            goto LABEL_14;
                                          v22 = "ASPFTLParseBufferToCxt: gc_concurrent_dw_gc1(1148): Cannot add 24 elements to context";
                                          goto LABEL_2228;
                                        case 1149:
                                          if ((_DWORD)v14 != 24)
                                            sub_10001F9D4("ASPFTLParseBufferToCxt: gc_concurrent_dw_gc2(1149): (#24) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                          if (v14 >= 0x18)
                                            v20 = 24;
                                          else
                                            v20 = v14;
                                          if ((sub_10002F594(a1, "gc_concurrent_dw_gc2_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                            goto LABEL_14;
                                          v22 = "ASPFTLParseBufferToCxt: gc_concurrent_dw_gc2(1149): Cannot add 24 elements to context";
                                          goto LABEL_2228;
                                        case 1150:
                                        case 1151:
                                        case 1152:
                                        case 1153:
                                        case 1154:
                                        case 1155:
                                        case 1156:
                                        case 1159:
                                        case 1160:
                                        case 1161:
                                        case 1162:
                                        case 1163:
                                        case 1164:
                                        case 1165:
                                        case 1166:
                                        case 1167:
                                        case 1170:
                                        case 1173:
                                        case 1174:
                                        case 1175:
                                        case 1176:
                                        case 1177:
                                        case 1178:
                                        case 1186:
                                        case 1187:
                                        case 1188:
                                          goto LABEL_2116;
                                        case 1157:
                                          if ((sub_10002F594(a1, "eanMaxForceROTimeMs", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                            goto LABEL_16;
                                          v19 = "ASPFTLParseBufferToCxt: eanMaxForceROTimeMs(1157) cannot add 1 element to context";
                                          goto LABEL_15;
                                        case 1158:
                                          if ((sub_10002F594(a1, "eanMaxForceRORecoTimeMs", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                            goto LABEL_16;
                                          v19 = "ASPFTLParseBufferToCxt: eanMaxForceRORecoTimeMs(1158) cannot add 1 element to context";
                                          goto LABEL_15;
                                        case 1168:
                                          if ((_DWORD)v14 != 2)
                                            sub_10001F9D4("ASPFTLParseBufferToCxt: poDetectPERemovalTotalCost(1168): (#2) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                          if (v14 >= 2)
                                            v20 = 2;
                                          else
                                            v20 = v14;
                                          if ((sub_10002F594(a1, "poDetectPERemovalTotalCost_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                            goto LABEL_14;
                                          v22 = "ASPFTLParseBufferToCxt: poDetectPERemovalTotalCost(1168): Cannot add 2 e"
                                                "lements to context";
                                          goto LABEL_2228;
                                        case 1169:
                                          if ((_DWORD)v14 != 2)
                                            sub_10001F9D4("ASPFTLParseBufferToCxt: poDetectEmptySpotRemovalTotalCost(1169): (#2) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                          if (v14 >= 2)
                                            v20 = 2;
                                          else
                                            v20 = v14;
                                          if ((sub_10002F594(a1, "poDetectEmptySpotRemovalTotalCost_", (uint64_t)v8, 8u, v20) & 1) != 0)goto LABEL_14;
                                          v22 = "ASPFTLParseBufferToCxt: poDetectEmptySpotRemovalTotalCost(1169): Cannot "
                                                "add 2 elements to context";
                                          goto LABEL_2228;
                                        case 1171:
                                          if ((_DWORD)v14 != 10)
                                            sub_10001F9D4("ASPFTLParseBufferToCxt: poDetectEmptySpotRemovalAge(1171): (#10) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                          if (v14 >= 0xA)
                                            v20 = 10;
                                          else
                                            v20 = v14;
                                          if ((sub_10002F594(a1, "poDetectEmptySpotRemovalAge_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                            goto LABEL_14;
                                          v22 = "ASPFTLParseBufferToCxt: poDetectEmptySpotRemovalAge(1171): Cannot add 10"
                                                " elements to context";
                                          goto LABEL_2228;
                                        case 1172:
                                          if ((_DWORD)v14 != 3)
                                            sub_10001F9D4("ASPFTLParseBufferToCxt: poDetectGBBedMostSevereCost(1172): (#3) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                          if (v14 >= 3)
                                            v20 = 3;
                                          else
                                            v20 = v14;
                                          if ((sub_10002F594(a1, "poDetectGBBedMostSevereCost_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                            goto LABEL_14;
                                          v22 = "ASPFTLParseBufferToCxt: poDetectGBBedMostSevereCost(1172): Cannot add 3 "
                                                "elements to context";
                                          goto LABEL_2228;
                                        case 1179:
                                          if ((_DWORD)v14 != 4)
                                            sub_10001F9D4("ASPFTLParseBufferToCxt: gc_cur_dw_gc1(1179): (#4) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                          if (v14 >= 4)
                                            v20 = 4;
                                          else
                                            v20 = v14;
                                          if ((sub_10002F594(a1, "gc_cur_dw_gc1_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                            goto LABEL_14;
                                          v22 = "ASPFTLParseBufferToCxt: gc_cur_dw_gc1(1179): Cannot add 4 elements to context";
                                          goto LABEL_2228;
                                        case 1180:
                                          if ((_DWORD)v14 != 4)
                                            sub_10001F9D4("ASPFTLParseBufferToCxt: gc_cur_dw_gc2(1180): (#4) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                          if (v14 >= 4)
                                            v20 = 4;
                                          else
                                            v20 = v14;
                                          if ((sub_10002F594(a1, "gc_cur_dw_gc2_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                            goto LABEL_14;
                                          v22 = "ASPFTLParseBufferToCxt: gc_cur_dw_gc2(1180): Cannot add 4 elements to context";
                                          goto LABEL_2228;
                                        case 1181:
                                          if ((_DWORD)v14 != 4)
                                            sub_10001F9D4("ASPFTLParseBufferToCxt: gc_cur_dw_gc3(1181): (#4) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                          if (v14 >= 4)
                                            v20 = 4;
                                          else
                                            v20 = v14;
                                          if ((sub_10002F594(a1, "gc_cur_dw_gc3_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                            goto LABEL_14;
                                          v22 = "ASPFTLParseBufferToCxt: gc_cur_dw_gc3(1181): Cannot add 4 elements to context";
                                          goto LABEL_2228;
                                        case 1182:
                                          if ((_DWORD)v14 != 4)
                                            sub_10001F9D4("ASPFTLParseBufferToCxt: gc_tot_dw_gc1(1182): (#4) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                          if (v14 >= 4)
                                            v20 = 4;
                                          else
                                            v20 = v14;
                                          if ((sub_10002F594(a1, "gc_tot_dw_gc1_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                            goto LABEL_14;
                                          v22 = "ASPFTLParseBufferToCxt: gc_tot_dw_gc1(1182): Cannot add 4 elements to context";
                                          goto LABEL_2228;
                                        case 1183:
                                          if ((_DWORD)v14 != 4)
                                            sub_10001F9D4("ASPFTLParseBufferToCxt: gc_tot_dw_gc2(1183): (#4) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                          if (v14 >= 4)
                                            v20 = 4;
                                          else
                                            v20 = v14;
                                          if ((sub_10002F594(a1, "gc_tot_dw_gc2_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                            goto LABEL_14;
                                          v22 = "ASPFTLParseBufferToCxt: gc_tot_dw_gc2(1183): Cannot add 4 elements to context";
                                          goto LABEL_2228;
                                        case 1184:
                                          if ((sub_10002F594(a1, "unhappy_state", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                            goto LABEL_16;
                                          v19 = "ASPFTLParseBufferToCxt: unhappy_state(1184) cannot add 1 element to context";
                                          goto LABEL_15;
                                        case 1185:
                                          if ((sub_10002F594(a1, "unhappy_level", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                            goto LABEL_16;
                                          v19 = "ASPFTLParseBufferToCxt: unhappy_level(1185) cannot add 1 element to context";
                                          goto LABEL_15;
                                        case 1189:
                                          if ((sub_10002F594(a1, "lastLbaFormatTime", (uint64_t)v8, 8u, 1u) & 1) != 0)
                                            goto LABEL_16;
                                          v19 = "ASPFTLParseBufferToCxt: lastLbaFormatTime(1189) cannot add 1 element to context";
                                          goto LABEL_15;
                                        case 1190:
                                          if ((_DWORD)v14 != 12)
                                            sub_10001F9D4("ASPFTLParseBufferToCxt: powerDownTime(1190): (#12) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                          if (v14 >= 0xC)
                                            v20 = 12;
                                          else
                                            v20 = v14;
                                          if ((sub_10002F594(a1, "powerDownTime_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                            goto LABEL_14;
                                          v22 = "ASPFTLParseBufferToCxt: powerDownTime(1190): Cannot add 12 elements to context";
                                          goto LABEL_2228;
                                        default:
                                          if (v12 != 1196)
                                          {
                                            if (v12 == 1197)
                                            {
                                              if ((_DWORD)v14 != 10)
                                                sub_10001F9D4("ASPFTLParseBufferToCxt: poDetectGBBedAge(1197): (#10) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                              if (v14 >= 0xA)
                                                v20 = 10;
                                              else
                                                v20 = v14;
                                              if ((sub_10002F594(a1, "poDetectGBBedAge_", (uint64_t)v8, 8u, v20) & 1) == 0)
                                              {
                                                v22 = "ASPFTLParseBufferToCxt: poDetectGBBedAge(1197): Cannot add 10 elements to context";
                                                goto LABEL_2228;
                                              }
                                              goto LABEL_14;
                                            }
                                            goto LABEL_2116;
                                          }
                                          if ((_DWORD)v14 != 5)
                                            sub_10001F9D4("ASPFTLParseBufferToCxt: poDetectGBBedTotalCost(1196): (#5) cfg elements != (%d) buffer elements", a2, a3, a4, a5, a6, a7, a8, v14);
                                          if (v14 >= 5)
                                            v20 = 5;
                                          else
                                            v20 = v14;
                                          if ((sub_10002F594(a1, "poDetectGBBedTotalCost_", (uint64_t)v8, 8u, v20) & 1) != 0)
                                          {
LABEL_14:
                                            v10 = v20 + v10;
                                            goto LABEL_17;
                                          }
                                          v22 = "ASPFTLParseBufferToCxt: poDetectGBBedTotalCost(1196): Cannot add 5 elements to context";
LABEL_2228:
                                          sub_10001F9D4(v22, a2, a3, a4, a5, a6, a7, a8, v23);
                                          return v10;
                                      }
                                  }
                              }
                          }
                      }
                  }
              }
          }
      }
  }
}

uint64_t sub_10002F594(uint64_t a1, const char *a2, uint64_t a3, unsigned int a4, unsigned int a5)
{
  uint64_t v5;
  int v11;
  int v12;
  uint64_t v14;
  char __str[101];

  v14 = 0;
  v5 = 1;
  if (a4 && a5)
  {
    if (a5 == 1)
    {
      if (a4 <= 8)
      {
        __memmove_chk(&v14, a3, a4, 8);
        return sub_100036028(a1, "", a2, v14);
      }
      else
      {
        return 0;
      }
    }
    else
    {
      v11 = 0;
      v12 = 0;
      do
      {
        v14 = 0;
        if (a4 <= 8)
        {
          __memmove_chk(&v14, a3 + v11 * a4, a4, 8);
          snprintf(__str, 0x64uLL, "%d", v11);
          __str[100] = 0;
          v5 = sub_100036028(a1, a2, __str, v14) & v5;
        }
        else
        {
          v5 = 0;
        }
        v11 = (unsigned __int16)++v12;
      }
      while ((unsigned __int16)v12 < a5);
    }
  }
  return v5;
}

uint64_t sub_10002F6F4(uint64_t a1, unint64_t *a2, unsigned int a3)
{
  uint64_t v5;
  unsigned int v6;
  int v7;
  unsigned int v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char __str[16];
  __int128 v22;

  v5 = 0;
  v6 = a3 >> 3;
  *(_OWORD *)__str = 0u;
  v22 = 0u;
LABEL_2:
  v7 = -v6;
  while (v7)
  {
    v9 = *a2++;
    v8 = v9;
    v10 = HIDWORD(v9);
    ++v7;
    if (HIDWORD(v9))
    {
      if (v8 != 0xFFFF && v8 <= 0x30000000 && -v7 >= v10)
      {
        if (v10 <= 1)
          snprintf(__str, 0x20uLL, "Stat_%d");
        else
          snprintf(__str, 0x20uLL, "Stat_%d_");
        if ((sub_10002F594(a1, __str, (uint64_t)a2, 8u, v10) & 1) != 0)
        {
          v5 = (v5 + v10);
          a2 += v10;
          v6 = -v7 - v10;
          goto LABEL_2;
        }
        sub_10001F9D4("ASPFTLParseBufferToCxt %d: Cannot add %d elements to context", v13, v14, v15, v16, v17, v18, v19, v8);
      }
      return v5;
    }
  }
  return v5;
}

uint64_t sub_10002F81C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  const char *v9;
  unsigned int v10;
  uint64_t v11;
  __int16 *v13;
  const char *v14;
  unsigned __int16 *v15;
  uint64_t v16;
  int v17;
  const char *v19;
  __int16 *v20;
  unsigned int v21;
  unsigned int v22;
  char v24;

  v8 = 0;
  v9 = "ASPMSPParseBufferToCxt: Passed in invalid buffer or empty buffer";
  if (!a2)
    goto LABEL_1981;
  v10 = a3;
  if (!(_DWORD)a3)
    goto LABEL_1981;
  v11 = a2;
  v8 = 0;
  v13 = &jpt_100033970;
  v14 = "ASPMSPParseBufferToCxt: fs1_4b_fail(4279): Error adding 4 elements to context";
  v9 = "ASPMSPParseBufferToCxt: cbdr_step_5(4256): Error adding 10 elements to context";
  while (1)
  {
    do
    {
      if (!v10)
        return v8;
      v15 = (unsigned __int16 *)v11;
      v16 = *(unsigned __int16 *)(v11 + 2);
      v11 += 4;
      v10 -= 4;
    }
    while (!(_DWORD)v16);
    v17 = *v15;
    if (v17 != 12286)
      break;
LABEL_461:
    v11 += v16;
    v10 -= v16;
  }
  if (v17 == 12287 || v10 < v16)
    return v8;
  switch(v17)
  {
    case 4096:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: passWithTmodeHard(4096): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "passWithTmodeHard", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: passWithTmodeHard(4096): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4097:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: passWithTmodeFS1_2b(4097): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "passWithTmodeFS1_2b", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: passWithTmodeFS1_2b(4097): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4098:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: passWithTmodeFS1_4b(4098): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "passWithTmodeFS1_4b", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: passWithTmodeFS1_4b(4098): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4099:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: passWithTmodeHard_fast(4099): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "passWithTmodeHard_fast", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: passWithTmodeHard_fast(4099): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4100:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: passWithTmodeFS1_2b_fast(4100): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "passWithTmodeFS1_2b_fast", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: passWithTmodeFS1_2b_fast(4100): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4101:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: passWithTmodeFS1_4b_fast(4101): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "passWithTmodeFS1_4b_fast", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: passWithTmodeFS1_4b_fast(4101): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4102:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: numOfCwFailedInTmodeFS2_EOL(4102): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "numOfCwFailedInTmodeFS2_EOL", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: numOfCwFailedInTmodeFS2_EOL(4102): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4103:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: numOfCwFailedInTmodeFS2_DSP_EOL(4103): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "numOfCwFailedInTmodeFS2_DSP_EOL", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: numOfCwFailedInTmodeFS2_DSP_EOL(4103): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4104:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: readAlgoPassWithHardAfterAcq(4104): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "readAlgoPassWithHardAfterAcq", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: readAlgoPassWithHardAfterAcq(4104): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4105:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: firstReadWasHardWithDefaultBDBFastRead(4105): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "firstReadWasHardWithDefaultBDBFastRead", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: firstReadWasHardWithDefaultBDBFastRead(4105): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4106:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: readalgoPassWithDS1(4106): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "readalgoPassWithDS1", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: readalgoPassWithDS1(4106): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4107:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: readalgoPassWithDYCE1(4107): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "readalgoPassWithDYCE1", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: readalgoPassWithDYCE1(4107): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4108:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: readalgoPassWithDS2(4108): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "readalgoPassWithDS2", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: readalgoPassWithDS2(4108): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4109:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: readalgoPassWithDYCE2(4109): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "readalgoPassWithDYCE2", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: readalgoPassWithDYCE2(4109): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4110:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: firstReadWasHardWithAcq(4110): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "firstReadWasHardWithAcq", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: firstReadWasHardWithAcq(4110): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4111:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: bdbDynamicMovedToEOL_LSB(4111): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "bdbDynamicMovedToEOL_LSB", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: bdbDynamicMovedToEOL_LSB(4111): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4112:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: bdbDynamicMovedToEOL_MSB(4112): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "bdbDynamicMovedToEOL_MSB", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: bdbDynamicMovedToEOL_MSB(4112): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4113:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: bdbDynamicMovedToEOL_USB(4113): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "bdbDynamicMovedToEOL_USB", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: bdbDynamicMovedToEOL_USB(4113): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4114:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: bdbDynamicMovedToSOL_LSB(4114): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "bdbDynamicMovedToSOL_LSB", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: bdbDynamicMovedToSOL_LSB(4114): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4115:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: bdbDynamicMovedToSOL_MSB(4115): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "bdbDynamicMovedToSOL_MSB", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: bdbDynamicMovedToSOL_MSB(4115): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4116:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: bdbDynamicMovedToSOL_USB(4116): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "bdbDynamicMovedToSOL_USB", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: bdbDynamicMovedToSOL_USB(4116): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4117:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: firstReadWasHardWithDefaultBDB(4117): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "firstReadWasHardWithDefaultBDB", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: firstReadWasHardWithDefaultBDB(4117): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4118:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: readAlgoPassedThroughSyndSumAcquisition(4118): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "readAlgoPassedThroughSyndSumAcquisition", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: readAlgoPassedThroughSyndSumAcquisition(4118): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4119:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: readAlgoPassedThroughSlip(4119): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "readAlgoPassedThroughSlip", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: readAlgoPassedThroughSlip(4119): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4120:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 44)
        sub_10001F9D4("ASPMSPParseBufferToCxt: FS2decodedBitFlips(4120): cfg 11 elements; (11*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 0x30)
        v21 = 11;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "FS2decodedBitFlips", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: FS2decodedBitFlips(4120): Error adding 11 elements to context";
      goto LABEL_1981;
    case 4121:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 16)
        sub_10001F9D4("ASPMSPParseBufferToCxt: slipTrackingAfterFs1ForceFailChangedVthInTicksHist(4121): cfg 4 elements; (4*4) cfg by"
          "tes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 0x14)
        v21 = 4;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "slipTrackingAfterFs1ForceFailChangedVthInTicksHist", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: slipTrackingAfterFs1ForceFailChangedVthInTicksHist(4121): Error adding 4 elements to context";
      goto LABEL_1981;
    case 4122:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: readAlgoPassWithFS2_4b_fast(4122): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "readAlgoPassWithFS2_4b_fast", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: readAlgoPassWithFS2_4b_fast(4122): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4123:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: readAlgoPassWithHardAfterSlip_fast(4123): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "readAlgoPassWithHardAfterSlip_fast", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: readAlgoPassWithHardAfterSlip_fast(4123): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4124:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: readAlgoPassWithFS12BitAfterSlip_fast(4124): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "readAlgoPassWithFS12BitAfterSlip_fast", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: readAlgoPassWithFS12BitAfterSlip_fast(4124): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4125:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: readAlgoPassWithFS14BitAfterSlip_fast(4125): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "readAlgoPassWithFS14BitAfterSlip_fast", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: readAlgoPassWithFS14BitAfterSlip_fast(4125): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4126:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: readAlgoPassWithFS3_fast(4126): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "readAlgoPassWithFS3_fast", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: readAlgoPassWithFS3_fast(4126): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4127:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 40)
        sub_10001F9D4("ASPMSPParseBufferToCxt: deepSoft1Decoded(4127): cfg 10 elements; (10*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 0x2C)
        v21 = 10;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "deepSoft1Decoded", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: deepSoft1Decoded(4127): Error adding 10 elements to context";
      goto LABEL_1981;
    case 4128:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 40)
        sub_10001F9D4("ASPMSPParseBufferToCxt: deepSoft2Decoded(4128): cfg 10 elements; (10*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 0x2C)
        v21 = 10;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "deepSoft2Decoded", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: deepSoft2Decoded(4128): Error adding 10 elements to context";
      goto LABEL_1981;
    case 4129:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: readAlgoPassedThroughFS2_2b_fast(4129): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "readAlgoPassedThroughFS2_2b_fast", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: readAlgoPassedThroughFS2_2b_fast(4129): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4130:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: readAlgoPassedThroughFS2_4b_fast(4130): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "readAlgoPassedThroughFS2_4b_fast", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: readAlgoPassedThroughFS2_4b_fast(4130): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4131:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: readAlgoPassedThroughSlip_fast(4131): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "readAlgoPassedThroughSlip_fast", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: readAlgoPassedThroughSlip_fast(4131): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4132:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: readAlgoPassedThroughFS3_fast(4132): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "readAlgoPassedThroughFS3_fast", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: readAlgoPassedThroughFS3_fast(4132): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4133:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: readalgoPassWithEXH(4133): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "readalgoPassWithEXH", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: readalgoPassWithEXH(4133): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4134:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 44)
        sub_10001F9D4("ASPMSPParseBufferToCxt: FS1decodedbitflips(4134): cfg 11 elements; (11*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 0x30)
        v21 = 11;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "FS1decodedbitflips", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: FS1decodedbitflips(4134): Error adding 11 elements to context";
      goto LABEL_1981;
    case 4135:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: readZeroPage(4135): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "readZeroPage", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: readZeroPage(4135): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4136:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: readErasedPage(4136): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "readErasedPage", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: readErasedPage(4136): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4137:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: readFail(4137): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "readFail", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: readFail(4137): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4138:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 20)
        sub_10001F9D4("ASPMSPParseBufferToCxt: numOfSensesWereSentDuringSyndSumAcq(4138): cfg 5 elements; (5*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 0x18)
        v21 = 5;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "numOfSensesWereSentDuringSyndSumAcq", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: numOfSensesWereSentDuringSyndSumAcq(4138): Error adding 5 elements to context";
      goto LABEL_1981;
    case 4139:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 12)
        sub_10001F9D4("ASPMSPParseBufferToCxt: numOfSensesWereSentDuringMiniAcq(4139): cfg 3 elements; (3*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 0x10)
        v21 = 3;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "numOfSensesWereSentDuringMiniAcq", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: numOfSensesWereSentDuringMiniAcq(4139): Error adding 3 elements to context";
      goto LABEL_1981;
    case 4140:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: bdbDefaultMoveFastToNormal(4140): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "bdbDefaultMoveFastToNormal", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: bdbDefaultMoveFastToNormal(4140): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4141:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: bdbDefaultMoveNormalToFast(4141): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "bdbDefaultMoveNormalToFast", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: bdbDefaultMoveNormalToFast(4141): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4142:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: readalgoPassWithEXH_DSP(4142): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "readalgoPassWithEXH_DSP", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: readalgoPassWithEXH_DSP(4142): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4143:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: readalgoPassWithDS1_DSP(4143): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "readalgoPassWithDS1_DSP", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: readalgoPassWithDS1_DSP(4143): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4144:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: readalgoPassWithDYCE1_DSP(4144): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "readalgoPassWithDYCE1_DSP", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: readalgoPassWithDYCE1_DSP(4144): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4145:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: firstReadWasFS2EOL_DSP(4145): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "firstReadWasFS2EOL_DSP", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: firstReadWasFS2EOL_DSP(4145): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4146:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: firstReadWasFS2EOL(4146): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "firstReadWasFS2EOL", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: firstReadWasFS2EOL(4146): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4147:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: readAlgoPassedThroughFS2_4b(4147): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "readAlgoPassedThroughFS2_4b", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: readAlgoPassedThroughFS2_4b(4147): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4148:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: readAlgoPassWithFS2_4b(4148): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "readAlgoPassWithFS2_4b", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: readAlgoPassWithFS2_4b(4148): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4149:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: readAlgoPassedThroughFS2_2b(4149): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "readAlgoPassedThroughFS2_2b", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: readAlgoPassedThroughFS2_2b(4149): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4150:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: readAlgoPassedThroughFS3(4150): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "readAlgoPassedThroughFS3", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: readAlgoPassedThroughFS3(4150): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4151:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: readAlgoPassedThroughDS1(4151): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "readAlgoPassedThroughDS1", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: readAlgoPassedThroughDS1(4151): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4152:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: readAlgoPassedThroughDS2(4152): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "readAlgoPassedThroughDS2", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: readAlgoPassedThroughDS2(4152): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4153:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: readAlgoPassWithHardAfterSlip(4153): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "readAlgoPassWithHardAfterSlip", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: readAlgoPassWithHardAfterSlip(4153): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4154:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: readAlgoPassWithFS12BitAfterSlip(4154): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "readAlgoPassWithFS12BitAfterSlip", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: readAlgoPassWithFS12BitAfterSlip(4154): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4155:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: readAlgoPassWithFS14BitAfterSlip(4155): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "readAlgoPassWithFS14BitAfterSlip", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: readAlgoPassWithFS14BitAfterSlip(4155): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4156:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: readAlgoPassWithFS3(4156): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "readAlgoPassWithFS3", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: readAlgoPassWithFS3(4156): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4157:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: readAlgoPassedThroughSyndSumAcquisition_DSP(4157): cfg 1 elements; (1*4) cfg bytes != "
          "(%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "readAlgoPassedThroughSyndSumAcquisition_DSP", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: readAlgoPassedThroughSyndSumAcquisition_DSP(4157): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4158:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: readAlgoPassWithFS12BitAfterAcq(4158): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "readAlgoPassWithFS12BitAfterAcq", v11, 4u, v21))
        goto LABEL_460;
      v9 = "ASPMSPParseBufferToCxt: readAlgoPassWithFS12BitAfterAcq(4158): Error adding 1 elements to context";
      goto LABEL_1981;
    case 4159:
      v19 = v14;
      v20 = v13;
      if ((_DWORD)v16 != 4)
        sub_10001F9D4("ASPMSPParseBufferToCxt: readAlgoPassWithFS14BitAfterAcq(4159): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
          a2,
          a3,
          a4,
          a5,
          a6,
          a7,
          a8,
          v16);
      if (v16 >= 8)
        v21 = 1;
      else
        v21 = v16 >> 2;
      if (sub_10002F594(a1, "readAlgoPassWithFS14BitAfterAcq", v11, 4u, v21))
      {
LABEL_460:
        v8 = v8 + v21;
        v13 = v20;
        v14 = v19;
        goto LABEL_461;
      }
      v9 = "ASPMSPParseBufferToCxt: readAlgoPassWithFS14BitAfterAcq(4159): Error adding 1 elements to context";
LABEL_1981:
      sub_10001F9D4(v9, a2, a3, a4, a5, a6, a7, a8, v24);
      return v8;
    default:
      switch(v17)
      {
        case 4160:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 4)
            sub_10001F9D4("ASPMSPParseBufferToCxt: readAlgoPassedThroughDS1_DSP(4160): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 8)
            v21 = 1;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "readAlgoPassedThroughDS1_DSP", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: readAlgoPassedThroughDS1_DSP(4160): Error adding 1 elements to context";
          goto LABEL_1981;
        case 4161:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 4)
            sub_10001F9D4("ASPMSPParseBufferToCxt: numOfSlipTracking(4161): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 8)
            v21 = 1;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "numOfSlipTracking", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: numOfSlipTracking(4161): Error adding 1 elements to context";
          goto LABEL_1981;
        case 4162:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 4)
            sub_10001F9D4("ASPMSPParseBufferToCxt: bdbDynamicMovedToEOL_QSB(4162): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 8)
            v21 = 1;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "bdbDynamicMovedToEOL_QSB", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: bdbDynamicMovedToEOL_QSB(4162): Error adding 1 elements to context";
          goto LABEL_1981;
        case 4163:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 4)
            sub_10001F9D4("ASPMSPParseBufferToCxt: bdbDynamicMovedToSOL_QSB(4163): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 8)
            v21 = 1;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "bdbDynamicMovedToSOL_QSB", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: bdbDynamicMovedToSOL_QSB(4163): Error adding 1 elements to context";
          goto LABEL_1981;
        case 4196:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 4)
            sub_10001F9D4("ASPMSPParseBufferToCxt: readStageNumOfFails100(4196): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 8)
            v21 = 1;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "readStageNumOfFails100", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: readStageNumOfFails100(4196): Error adding 1 elements to context";
          goto LABEL_1981;
        case 4197:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 4)
            sub_10001F9D4("ASPMSPParseBufferToCxt: readStageNumOfFails101(4197): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 8)
            v21 = 1;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "readStageNumOfFails101", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: readStageNumOfFails101(4197): Error adding 1 elements to context";
          goto LABEL_1981;
        case 4198:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 4)
            sub_10001F9D4("ASPMSPParseBufferToCxt: readStage100(4198): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 8)
            v21 = 1;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "readStage100", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: readStage100(4198): Error adding 1 elements to context";
          goto LABEL_1981;
        case 4199:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 16)
            sub_10001F9D4("ASPMSPParseBufferToCxt: readStage101(4199): cfg 4 elements; (4*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 0x14)
            v21 = 4;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "readStage101", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: readStage101(4199): Error adding 4 elements to context";
          goto LABEL_1981;
        case 4200:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 4)
            sub_10001F9D4("ASPMSPParseBufferToCxt: initialReadStage100(4200): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 8)
            v21 = 1;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "initialReadStage100", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: initialReadStage100(4200): Error adding 1 elements to context";
          goto LABEL_1981;
        case 4201:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 4)
            sub_10001F9D4("ASPMSPParseBufferToCxt: readStage102(4201): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 8)
            v21 = 1;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "readStage102", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: readStage102(4201): Error adding 1 elements to context";
          goto LABEL_1981;
        case 4202:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 4)
            sub_10001F9D4("ASPMSPParseBufferToCxt: initialReadStage101(4202): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 8)
            v21 = 1;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "initialReadStage101", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: initialReadStage101(4202): Error adding 1 elements to context";
          goto LABEL_1981;
        case 4203:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 4)
            sub_10001F9D4("ASPMSPParseBufferToCxt: nandStageOfLife100(4203): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 8)
            v21 = 1;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "nandStageOfLife100", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: nandStageOfLife100(4203): Error adding 1 elements to context";
          goto LABEL_1981;
        case 4204:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 4)
            sub_10001F9D4("ASPMSPParseBufferToCxt: nandStageOfLife101(4204): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 8)
            v21 = 1;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "nandStageOfLife101", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: nandStageOfLife101(4204): Error adding 1 elements to context";
          goto LABEL_1981;
        case 4205:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 16)
            sub_10001F9D4("ASPMSPParseBufferToCxt: readStageNumOfFails102(4205): cfg 4 elements; (4*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 0x14)
            v21 = 4;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "readStageNumOfFails102", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: readStageNumOfFails102(4205): Error adding 4 elements to context";
          goto LABEL_1981;
        case 4206:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 4)
            sub_10001F9D4("ASPMSPParseBufferToCxt: initialReadStage102(4206): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 8)
            v21 = 1;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "initialReadStage102", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: initialReadStage102(4206): Error adding 1 elements to context";
          goto LABEL_1981;
        case 4207:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 4)
            sub_10001F9D4("ASPMSPParseBufferToCxt: readStage103(4207): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 8)
            v21 = 1;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "readStage103", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: readStage103(4207): Error adding 1 elements to context";
          goto LABEL_1981;
        case 4208:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 4)
            sub_10001F9D4("ASPMSPParseBufferToCxt: readStage104(4208): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 8)
            v21 = 1;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "readStage104", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: readStage104(4208): Error adding 1 elements to context";
          goto LABEL_1981;
        case 4209:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 16)
            sub_10001F9D4("ASPMSPParseBufferToCxt: readStage105(4209): cfg 4 elements; (4*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 0x14)
            v21 = 4;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "readStage105", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: readStage105(4209): Error adding 4 elements to context";
          goto LABEL_1981;
        case 4210:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 16)
            sub_10001F9D4("ASPMSPParseBufferToCxt: readStage106(4210): cfg 4 elements; (4*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 0x14)
            v21 = 4;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "readStage106", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: readStage106(4210): Error adding 4 elements to context";
          goto LABEL_1981;
        case 4211:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 16)
            sub_10001F9D4("ASPMSPParseBufferToCxt: dspExceptionParameter100(4211): cfg 4 elements; (4*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 0x14)
            v21 = 4;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "dspExceptionParameter100", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: dspExceptionParameter100(4211): Error adding 4 elements to context";
          goto LABEL_1981;
        case 4212:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 16)
            sub_10001F9D4("ASPMSPParseBufferToCxt: dspExceptionParameter101(4212): cfg 4 elements; (4*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 0x14)
            v21 = 4;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "dspExceptionParameter101", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: dspExceptionParameter101(4212): Error adding 4 elements to context";
          goto LABEL_1981;
        case 4213:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 4)
            sub_10001F9D4("ASPMSPParseBufferToCxt: initialReadStage103(4213): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 8)
            v21 = 1;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "initialReadStage103", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: initialReadStage103(4213): Error adding 1 elements to context";
          goto LABEL_1981;
        case 4214:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 4)
            sub_10001F9D4("ASPMSPParseBufferToCxt: initialReadStage104(4214): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 8)
            v21 = 1;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "initialReadStage104", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: initialReadStage104(4214): Error adding 1 elements to context";
          goto LABEL_1981;
        case 4215:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 16)
            sub_10001F9D4("ASPMSPParseBufferToCxt: readStage107(4215): cfg 4 elements; (4*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 0x14)
            v21 = 4;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "readStage107", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: readStage107(4215): Error adding 4 elements to context";
          goto LABEL_1981;
        case 4216:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 16)
            sub_10001F9D4("ASPMSPParseBufferToCxt: readStage108(4216): cfg 4 elements; (4*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 0x14)
            v21 = 4;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "readStage108", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: readStage108(4216): Error adding 4 elements to context";
          goto LABEL_1981;
        case 4217:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 4)
            sub_10001F9D4("ASPMSPParseBufferToCxt: nandStageOfLife102(4217): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 8)
            v21 = 1;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "nandStageOfLife102", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: nandStageOfLife102(4217): Error adding 1 elements to context";
          goto LABEL_1981;
        case 4218:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 4)
            sub_10001F9D4("ASPMSPParseBufferToCxt: nandStageOfLife103(4218): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 8)
            v21 = 1;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "nandStageOfLife103", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: nandStageOfLife103(4218): Error adding 1 elements to context";
          goto LABEL_1981;
        case 4219:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 4)
            sub_10001F9D4("ASPMSPParseBufferToCxt: nandStageOfLife104(4219): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 8)
            v21 = 1;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "nandStageOfLife104", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: nandStageOfLife104(4219): Error adding 1 elements to context";
          goto LABEL_1981;
        case 4220:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 16)
            sub_10001F9D4("ASPMSPParseBufferToCxt: dspExceptionParameter102(4220): cfg 4 elements; (4*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 0x14)
            v21 = 4;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "dspExceptionParameter102", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: dspExceptionParameter102(4220): Error adding 4 elements to context";
          goto LABEL_1981;
        case 4221:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 16)
            sub_10001F9D4("ASPMSPParseBufferToCxt: dspExceptionParameter103(4221): cfg 4 elements; (4*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 0x14)
            v21 = 4;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "dspExceptionParameter103", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: dspExceptionParameter103(4221): Error adding 4 elements to context";
          goto LABEL_1981;
        case 4222:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 16)
            sub_10001F9D4("ASPMSPParseBufferToCxt: dspExceptionParameter104(4222): cfg 4 elements; (4*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 0x14)
            v21 = 4;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "dspExceptionParameter104", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: dspExceptionParameter104(4222): Error adding 4 elements to context";
          goto LABEL_1981;
        case 4223:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 16)
            sub_10001F9D4("ASPMSPParseBufferToCxt: dspExceptionParameter105(4223): cfg 4 elements; (4*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 0x14)
            v21 = 4;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "dspExceptionParameter105", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: dspExceptionParameter105(4223): Error adding 4 elements to context";
          goto LABEL_1981;
        case 4224:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 16)
            sub_10001F9D4("ASPMSPParseBufferToCxt: dspExceptionParameter106(4224): cfg 4 elements; (4*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 0x14)
            v21 = 4;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "dspExceptionParameter106", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: dspExceptionParameter106(4224): Error adding 4 elements to context";
          goto LABEL_1981;
        case 4225:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 16)
            sub_10001F9D4("ASPMSPParseBufferToCxt: dspExceptionParameter107(4225): cfg 4 elements; (4*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 0x14)
            v21 = 4;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "dspExceptionParameter107", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: dspExceptionParameter107(4225): Error adding 4 elements to context";
          goto LABEL_1981;
        case 4226:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 16)
            sub_10001F9D4("ASPMSPParseBufferToCxt: dspExceptionParameter108(4226): cfg 4 elements; (4*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 0x14)
            v21 = 4;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "dspExceptionParameter108", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: dspExceptionParameter108(4226): Error adding 4 elements to context";
          goto LABEL_1981;
        case 4227:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 16)
            sub_10001F9D4("ASPMSPParseBufferToCxt: dspExceptionParameter109(4227): cfg 4 elements; (4*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 0x14)
            v21 = 4;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "dspExceptionParameter109", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: dspExceptionParameter109(4227): Error adding 4 elements to context";
          goto LABEL_1981;
        case 4228:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 16)
            sub_10001F9D4("ASPMSPParseBufferToCxt: dspExceptionParameter110(4228): cfg 4 elements; (4*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 0x14)
            v21 = 4;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "dspExceptionParameter110", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: dspExceptionParameter110(4228): Error adding 4 elements to context";
          goto LABEL_1981;
        case 4229:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 16)
            sub_10001F9D4("ASPMSPParseBufferToCxt: dspExceptionParameter111(4229): cfg 4 elements; (4*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 0x14)
            v21 = 4;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "dspExceptionParameter111", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: dspExceptionParameter111(4229): Error adding 4 elements to context";
          goto LABEL_1981;
        case 4230:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 16)
            sub_10001F9D4("ASPMSPParseBufferToCxt: dspExceptionParameter112(4230): cfg 4 elements; (4*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 0x14)
            v21 = 4;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "dspExceptionParameter112", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: dspExceptionParameter112(4230): Error adding 4 elements to context";
          goto LABEL_1981;
        case 4231:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 16)
            sub_10001F9D4("ASPMSPParseBufferToCxt: dspExceptionParameter113(4231): cfg 4 elements; (4*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 0x14)
            v21 = 4;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "dspExceptionParameter113", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: dspExceptionParameter113(4231): Error adding 4 elements to context";
          goto LABEL_1981;
        case 4232:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 256)
            sub_10001F9D4("ASPMSPParseBufferToCxt: readStageNumOfFails108(4232): cfg 64 elements; (64*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 0x104)
            v21 = 64;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "readStageNumOfFails108", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: readStageNumOfFails108(4232): Error adding 64 elements to context";
          goto LABEL_1981;
        case 4233:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 256)
            sub_10001F9D4("ASPMSPParseBufferToCxt: readStageNumOfFails103(4233): cfg 64 elements; (64*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 0x104)
            v21 = 64;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "readStageNumOfFails103", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: readStageNumOfFails103(4233): Error adding 64 elements to context";
          goto LABEL_1981;
        case 4234:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 16)
            sub_10001F9D4("ASPMSPParseBufferToCxt: readStageNumOfFails104(4234): cfg 4 elements; (4*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 0x14)
            v21 = 4;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "readStageNumOfFails104", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: readStageNumOfFails104(4234): Error adding 4 elements to context";
          goto LABEL_1981;
        case 4235:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 16)
            sub_10001F9D4("ASPMSPParseBufferToCxt: readStageNumOfFails105(4235): cfg 4 elements; (4*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 0x14)
            v21 = 4;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "readStageNumOfFails105", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: readStageNumOfFails105(4235): Error adding 4 elements to context";
          goto LABEL_1981;
        case 4236:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 16)
            sub_10001F9D4("ASPMSPParseBufferToCxt: readStageNumOfFails106(4236): cfg 4 elements; (4*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 0x14)
            v21 = 4;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "readStageNumOfFails106", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: readStageNumOfFails106(4236): Error adding 4 elements to context";
          goto LABEL_1981;
        case 4237:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 16)
            sub_10001F9D4("ASPMSPParseBufferToCxt: readStageNumOfFails107(4237): cfg 4 elements; (4*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 0x14)
            v21 = 4;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "readStageNumOfFails107", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: readStageNumOfFails107(4237): Error adding 4 elements to context";
          goto LABEL_1981;
        case 4238:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 16)
            sub_10001F9D4("ASPMSPParseBufferToCxt: readStage109(4238): cfg 4 elements; (4*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 0x14)
            v21 = 4;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "readStage109", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: readStage109(4238): Error adding 4 elements to context";
          goto LABEL_1981;
        case 4239:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 16)
            sub_10001F9D4("ASPMSPParseBufferToCxt: readStage110(4239): cfg 4 elements; (4*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 0x14)
            v21 = 4;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "readStage110", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: readStage110(4239): Error adding 4 elements to context";
          goto LABEL_1981;
        case 4240:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 80)
            sub_10001F9D4("ASPMSPParseBufferToCxt: readStageNumOfErrorsBin100(4240): cfg 20 elements; (20*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 0x54)
            v21 = 20;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "readStageNumOfErrorsBin100", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: readStageNumOfErrorsBin100(4240): Error adding 20 elements to context";
          goto LABEL_1981;
        case 4241:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 80)
            sub_10001F9D4("ASPMSPParseBufferToCxt: dspExceptionParameter114(4241): cfg 20 elements; (20*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 0x54)
            v21 = 20;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "dspExceptionParameter114", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: dspExceptionParameter114(4241): Error adding 20 elements to context";
          goto LABEL_1981;
        case 4242:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 4)
            sub_10001F9D4("ASPMSPParseBufferToCxt: dspExceptionParameter115(4242): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 8)
            v21 = 1;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "dspExceptionParameter115", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: dspExceptionParameter115(4242): Error adding 1 elements to context";
          goto LABEL_1981;
        case 4243:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 4)
            sub_10001F9D4("ASPMSPParseBufferToCxt: dspExceptionParameter116(4243): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 8)
            v21 = 1;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "dspExceptionParameter116", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: dspExceptionParameter116(4243): Error adding 1 elements to context";
          goto LABEL_1981;
        case 4244:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 4)
            sub_10001F9D4("ASPMSPParseBufferToCxt: dspExceptionParameter117(4244): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 8)
            v21 = 1;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "dspExceptionParameter117", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: dspExceptionParameter117(4244): Error adding 1 elements to context";
          goto LABEL_1981;
        case 4245:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 4)
            sub_10001F9D4("ASPMSPParseBufferToCxt: dspExceptionParameter118(4245): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 8)
            v21 = 1;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "dspExceptionParameter118", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: dspExceptionParameter118(4245): Error adding 1 elements to context";
          goto LABEL_1981;
        case 4246:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 4)
            sub_10001F9D4("ASPMSPParseBufferToCxt: dspExceptionParameter119(4246): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 8)
            v21 = 1;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "dspExceptionParameter119", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: dspExceptionParameter119(4246): Error adding 1 elements to context";
          goto LABEL_1981;
        case 4247:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 4)
            sub_10001F9D4("ASPMSPParseBufferToCxt: dspExceptionParameter120(4247): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 8)
            v21 = 1;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "dspExceptionParameter120", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: dspExceptionParameter120(4247): Error adding 1 elements to context";
          goto LABEL_1981;
        case 4248:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 4)
            sub_10001F9D4("ASPMSPParseBufferToCxt: dspExceptionParameter121(4248): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 8)
            v21 = 1;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "dspExceptionParameter121", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: dspExceptionParameter121(4248): Error adding 1 elements to context";
          goto LABEL_1981;
        case 4249:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 4)
            sub_10001F9D4("ASPMSPParseBufferToCxt: cbdr_ref_1(4249): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 8)
            v21 = 1;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "cbdr_ref_1", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: cbdr_ref_1(4249): Error adding 1 elements to context";
          goto LABEL_1981;
        case 4250:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 4)
            sub_10001F9D4("ASPMSPParseBufferToCxt: cbdr_ref_2(4250): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 8)
            v21 = 1;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "cbdr_ref_2", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: cbdr_ref_2(4250): Error adding 1 elements to context";
          goto LABEL_1981;
        case 4251:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 4)
            sub_10001F9D4("ASPMSPParseBufferToCxt: cbdr_outlier(4251): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 8)
            v21 = 1;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "cbdr_outlier", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: cbdr_outlier(4251): Error adding 1 elements to context";
          goto LABEL_1981;
        case 4252:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 40)
            sub_10001F9D4("ASPMSPParseBufferToCxt: cbdr_step_1(4252): cfg 10 elements; (10*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 0x2C)
            v21 = 10;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "cbdr_step_1", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: cbdr_step_1(4252): Error adding 10 elements to context";
          goto LABEL_1981;
        case 4253:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 40)
            sub_10001F9D4("ASPMSPParseBufferToCxt: cbdr_step_2(4253): cfg 10 elements; (10*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 0x2C)
            v21 = 10;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "cbdr_step_2", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: cbdr_step_2(4253): Error adding 10 elements to context";
          goto LABEL_1981;
        case 4254:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 40)
            sub_10001F9D4("ASPMSPParseBufferToCxt: cbdr_step_3(4254): cfg 10 elements; (10*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 0x2C)
            v21 = 10;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "cbdr_step_3", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: cbdr_step_3(4254): Error adding 10 elements to context";
          goto LABEL_1981;
        case 4255:
          v19 = v14;
          v20 = v13;
          if ((_DWORD)v16 != 40)
            sub_10001F9D4("ASPMSPParseBufferToCxt: cbdr_step_4(4255): cfg 10 elements; (10*4) cfg bytes != (%d) buffer bytes",
              a2,
              a3,
              a4,
              a5,
              a6,
              a7,
              a8,
              v16);
          if (v16 >= 0x2C)
            v21 = 10;
          else
            v21 = v16 >> 2;
          if (sub_10002F594(a1, "cbdr_step_4", v11, 4u, v21))
            goto LABEL_460;
          v9 = "ASPMSPParseBufferToCxt: cbdr_step_4(4255): Error adding 10 elements to context";
          goto LABEL_1981;
        default:
          switch(v17)
          {
            case 12288:
              if ((_DWORD)v16 != 8)
                sub_10001F9D4("ASPMSPParseBufferToCxt: readStageNumOfFails200(12288): cfg 1 elements; (1*8) cfg bytes != (%d) buffer bytes",
                  a2,
                  a3,
                  a4,
                  a5,
                  a6,
                  a7,
                  a8,
                  v16);
              if (v16 >= 0x10)
                v22 = 1;
              else
                v22 = v16 >> 3;
              if (sub_10002F594(a1, "readStageNumOfFails200", v11, 8u, v22))
                goto LABEL_1372;
              v9 = "ASPMSPParseBufferToCxt: readStageNumOfFails200(12288): Error adding 1 elements to context";
              goto LABEL_1981;
            case 12289:
              if ((_DWORD)v16 != 8)
                sub_10001F9D4("ASPMSPParseBufferToCxt: initialReadStage200(12289): cfg 1 elements; (1*8) cfg bytes != (%d) buffer bytes",
                  a2,
                  a3,
                  a4,
                  a5,
                  a6,
                  a7,
                  a8,
                  v16);
              if (v16 >= 0x10)
                v22 = 1;
              else
                v22 = v16 >> 3;
              if (sub_10002F594(a1, "initialReadStage200", v11, 8u, v22))
                goto LABEL_1372;
              v9 = "ASPMSPParseBufferToCxt: initialReadStage200(12289): Error adding 1 elements to context";
              goto LABEL_1981;
            case 12290:
              if ((_DWORD)v16 != 8)
                sub_10001F9D4("ASPMSPParseBufferToCxt: initialReadStage201(12290): cfg 1 elements; (1*8) cfg bytes != (%d) buffer bytes",
                  a2,
                  a3,
                  a4,
                  a5,
                  a6,
                  a7,
                  a8,
                  v16);
              if (v16 >= 0x10)
                v22 = 1;
              else
                v22 = v16 >> 3;
              if (sub_10002F594(a1, "initialReadStage201", v11, 8u, v22))
                goto LABEL_1372;
              v9 = "ASPMSPParseBufferToCxt: initialReadStage201(12290): Error adding 1 elements to context";
              goto LABEL_1981;
            case 12291:
              if ((_DWORD)v16 != 8)
                sub_10001F9D4("ASPMSPParseBufferToCxt: readStageNumOfFails201(12291): cfg 1 elements; (1*8) cfg bytes != (%d) buffer bytes",
                  a2,
                  a3,
                  a4,
                  a5,
                  a6,
                  a7,
                  a8,
                  v16);
              if (v16 >= 0x10)
                v22 = 1;
              else
                v22 = v16 >> 3;
              if (sub_10002F594(a1, "readStageNumOfFails201", v11, 8u, v22))
                goto LABEL_1372;
              v9 = "ASPMSPParseBufferToCxt: readStageNumOfFails201(12291): Error adding 1 elements to context";
              goto LABEL_1981;
            case 12292:
              if ((_DWORD)v16 != 8)
                sub_10001F9D4("ASPMSPParseBufferToCxt: initialReadStage202(12292): cfg 1 elements; (1*8) cfg bytes != (%d) buffer bytes",
                  a2,
                  a3,
                  a4,
                  a5,
                  a6,
                  a7,
                  a8,
                  v16);
              if (v16 >= 0x10)
                v22 = 1;
              else
                v22 = v16 >> 3;
              if (sub_10002F594(a1, "initialReadStage202", v11, 8u, v22))
                goto LABEL_1372;
              v9 = "ASPMSPParseBufferToCxt: initialReadStage202(12292): Error adding 1 elements to context";
              goto LABEL_1981;
            case 12293:
              if ((_DWORD)v16 != 8)
                sub_10001F9D4("ASPMSPParseBufferToCxt: initialReadStage203(12293): cfg 1 elements; (1*8) cfg bytes != (%d) buffer bytes",
                  a2,
                  a3,
                  a4,
                  a5,
                  a6,
                  a7,
                  a8,
                  v16);
              if (v16 >= 0x10)
                v22 = 1;
              else
                v22 = v16 >> 3;
              if (sub_10002F594(a1, "initialReadStage203", v11, 8u, v22))
                goto LABEL_1372;
              v9 = "ASPMSPParseBufferToCxt: initialReadStage203(12293): Error adding 1 elements to context";
              goto LABEL_1981;
            case 12294:
              if ((_DWORD)v16 != 8)
                sub_10001F9D4("ASPMSPParseBufferToCxt: readStageNumOfFails202(12294): cfg 1 elements; (1*8) cfg bytes != (%d) buffer bytes",
                  a2,
                  a3,
                  a4,
                  a5,
                  a6,
                  a7,
                  a8,
                  v16);
              if (v16 >= 0x10)
                v22 = 1;
              else
                v22 = v16 >> 3;
              if (sub_10002F594(a1, "readStageNumOfFails202", v11, 8u, v22))
                goto LABEL_1372;
              v9 = "ASPMSPParseBufferToCxt: readStageNumOfFails202(12294): Error adding 1 elements to context";
              goto LABEL_1981;
            case 12295:
              if ((_DWORD)v16 != 8)
                sub_10001F9D4("ASPMSPParseBufferToCxt: readStageNumOfFails203(12295): cfg 1 elements; (1*8) cfg bytes != (%d) buffer bytes",
                  a2,
                  a3,
                  a4,
                  a5,
                  a6,
                  a7,
                  a8,
                  v16);
              if (v16 >= 0x10)
                v22 = 1;
              else
                v22 = v16 >> 3;
              if (sub_10002F594(a1, "readStageNumOfFails203", v11, 8u, v22))
                goto LABEL_1372;
              v9 = "ASPMSPParseBufferToCxt: readStageNumOfFails203(12295): Error adding 1 elements to context";
              goto LABEL_1981;
            case 12296:
              if ((_DWORD)v16 != 8)
                sub_10001F9D4("ASPMSPParseBufferToCxt: initialReadStage204(12296): cfg 1 elements; (1*8) cfg bytes != (%d) buffer bytes",
                  a2,
                  a3,
                  a4,
                  a5,
                  a6,
                  a7,
                  a8,
                  v16);
              if (v16 >= 0x10)
                v22 = 1;
              else
                v22 = v16 >> 3;
              if (sub_10002F594(a1, "initialReadStage204", v11, 8u, v22))
                goto LABEL_1372;
              v9 = "ASPMSPParseBufferToCxt: initialReadStage204(12296): Error adding 1 elements to context";
              goto LABEL_1981;
            case 12297:
              if ((_DWORD)v16 != 8)
                sub_10001F9D4("ASPMSPParseBufferToCxt: initialReadStage205(12297): cfg 1 elements; (1*8) cfg bytes != (%d) buffer bytes",
                  a2,
                  a3,
                  a4,
                  a5,
                  a6,
                  a7,
                  a8,
                  v16);
              if (v16 >= 0x10)
                v22 = 1;
              else
                v22 = v16 >> 3;
              if (sub_10002F594(a1, "initialReadStage205", v11, 8u, v22))
                goto LABEL_1372;
              v9 = "ASPMSPParseBufferToCxt: initialReadStage205(12297): Error adding 1 elements to context";
              goto LABEL_1981;
            case 12298:
              if ((_DWORD)v16 != 8)
                sub_10001F9D4("ASPMSPParseBufferToCxt: initialReadStage206(12298): cfg 1 elements; (1*8) cfg bytes != (%d) buffer bytes",
                  a2,
                  a3,
                  a4,
                  a5,
                  a6,
                  a7,
                  a8,
                  v16);
              if (v16 >= 0x10)
                v22 = 1;
              else
                v22 = v16 >> 3;
              if (sub_10002F594(a1, "initialReadStage206", v11, 8u, v22))
                goto LABEL_1372;
              v9 = "ASPMSPParseBufferToCxt: initialReadStage206(12298): Error adding 1 elements to context";
              goto LABEL_1981;
            case 12299:
              if ((_DWORD)v16 != 8)
                sub_10001F9D4("ASPMSPParseBufferToCxt: initialReadStage207(12299): cfg 1 elements; (1*8) cfg bytes != (%d) buffer bytes",
                  a2,
                  a3,
                  a4,
                  a5,
                  a6,
                  a7,
                  a8,
                  v16);
              if (v16 >= 0x10)
                v22 = 1;
              else
                v22 = v16 >> 3;
              if (sub_10002F594(a1, "initialReadStage207", v11, 8u, v22))
                goto LABEL_1372;
              v9 = "ASPMSPParseBufferToCxt: initialReadStage207(12299): Error adding 1 elements to context";
              goto LABEL_1981;
            case 12300:
              if ((_DWORD)v16 != 8)
                sub_10001F9D4("ASPMSPParseBufferToCxt: initialReadStage208(12300): cfg 1 elements; (1*8) cfg bytes != (%d) buffer bytes",
                  a2,
                  a3,
                  a4,
                  a5,
                  a6,
                  a7,
                  a8,
                  v16);
              if (v16 >= 0x10)
                v22 = 1;
              else
                v22 = v16 >> 3;
              if (sub_10002F594(a1, "initialReadStage208", v11, 8u, v22))
                goto LABEL_1372;
              v9 = "ASPMSPParseBufferToCxt: initialReadStage208(12300): Error adding 1 elements to context";
              goto LABEL_1981;
            case 12301:
              if ((_DWORD)v16 != 8)
                sub_10001F9D4("ASPMSPParseBufferToCxt: initialReadStage209(12301): cfg 1 elements; (1*8) cfg bytes != (%d) buffer bytes",
                  a2,
                  a3,
                  a4,
                  a5,
                  a6,
                  a7,
                  a8,
                  v16);
              if (v16 >= 0x10)
                v22 = 1;
              else
                v22 = v16 >> 3;
              if (sub_10002F594(a1, "initialReadStage209", v11, 8u, v22))
                goto LABEL_1372;
              v9 = "ASPMSPParseBufferToCxt: initialReadStage209(12301): Error adding 1 elements to context";
              goto LABEL_1981;
            case 12302:
              if ((_DWORD)v16 != 8)
                sub_10001F9D4("ASPMSPParseBufferToCxt: readStage200(12302): cfg 1 elements; (1*8) cfg bytes != (%d) buffer bytes",
                  a2,
                  a3,
                  a4,
                  a5,
                  a6,
                  a7,
                  a8,
                  v16);
              if (v16 >= 0x10)
                v22 = 1;
              else
                v22 = v16 >> 3;
              if (sub_10002F594(a1, "readStage200", v11, 8u, v22))
                goto LABEL_1372;
              v9 = "ASPMSPParseBufferToCxt: readStage200(12302): Error adding 1 elements to context";
              goto LABEL_1981;
            case 12303:
              if ((_DWORD)v16 != 32)
                sub_10001F9D4("ASPMSPParseBufferToCxt: readStage201(12303): cfg 4 elements; (4*8) cfg bytes != (%d) buffer bytes",
                  a2,
                  a3,
                  a4,
                  a5,
                  a6,
                  a7,
                  a8,
                  v16);
              if (v16 >= 0x28)
                v22 = 4;
              else
                v22 = v16 >> 3;
              if (sub_10002F594(a1, "readStage201", v11, 8u, v22))
                goto LABEL_1372;
              v9 = "ASPMSPParseBufferToCxt: readStage201(12303): Error adding 4 elements to context";
              goto LABEL_1981;
            case 12304:
              if ((_DWORD)v16 != 32)
                sub_10001F9D4("ASPMSPParseBufferToCxt: readStage202(12304): cfg 4 elements; (4*8) cfg bytes != (%d) buffer bytes",
                  a2,
                  a3,
                  a4,
                  a5,
                  a6,
                  a7,
                  a8,
                  v16);
              if (v16 >= 0x28)
                v22 = 4;
              else
                v22 = v16 >> 3;
              if (sub_10002F594(a1, "readStage202", v11, 8u, v22))
                goto LABEL_1372;
              v9 = "ASPMSPParseBufferToCxt: readStage202(12304): Error adding 4 elements to context";
              goto LABEL_1981;
            case 12305:
              if ((_DWORD)v16 != 8)
                sub_10001F9D4("ASPMSPParseBufferToCxt: initialReadStage210(12305): cfg 1 elements; (1*8) cfg bytes != (%d) buffer bytes",
                  a2,
                  a3,
                  a4,
                  a5,
                  a6,
                  a7,
                  a8,
                  v16);
              if (v16 >= 0x10)
                v22 = 1;
              else
                v22 = v16 >> 3;
              if (sub_10002F594(a1, "initialReadStage210", v11, 8u, v22))
                goto LABEL_1372;
              v9 = "ASPMSPParseBufferToCxt: initialReadStage210(12305): Error adding 1 elements to context";
              goto LABEL_1981;
            case 12306:
              if ((_DWORD)v16 != 8)
                sub_10001F9D4("ASPMSPParseBufferToCxt: initialReadStage211(12306): cfg 1 elements; (1*8) cfg bytes != (%d) buffer bytes",
                  a2,
                  a3,
                  a4,
                  a5,
                  a6,
                  a7,
                  a8,
                  v16);
              if (v16 >= 0x10)
                v22 = 1;
              else
                v22 = v16 >> 3;
              if (sub_10002F594(a1, "initialReadStage211", v11, 8u, v22))
                goto LABEL_1372;
              v9 = "ASPMSPParseBufferToCxt: initialReadStage211(12306): Error adding 1 elements to context";
              goto LABEL_1981;
            case 12307:
              if ((_DWORD)v16 != 8)
                sub_10001F9D4("ASPMSPParseBufferToCxt: readStage203(12307): cfg 1 elements; (1*8) cfg bytes != (%d) buffer bytes",
                  a2,
                  a3,
                  a4,
                  a5,
                  a6,
                  a7,
                  a8,
                  v16);
              if (v16 >= 0x10)
                v22 = 1;
              else
                v22 = v16 >> 3;
              if (sub_10002F594(a1, "readStage203", v11, 8u, v22))
                goto LABEL_1372;
              v9 = "ASPMSPParseBufferToCxt: readStage203(12307): Error adding 1 elements to context";
              goto LABEL_1981;
            case 12308:
              if ((_DWORD)v16 != 8)
                sub_10001F9D4("ASPMSPParseBufferToCxt: readStage204(12308): cfg 1 elements; (1*8) cfg bytes != (%d) buffer bytes",
                  a2,
                  a3,
                  a4,
                  a5,
                  a6,
                  a7,
                  a8,
                  v16);
              if (v16 >= 0x10)
                v22 = 1;
              else
                v22 = v16 >> 3;
              if (sub_10002F594(a1, "readStage204", v11, 8u, v22))
                goto LABEL_1372;
              v9 = "ASPMSPParseBufferToCxt: readStage204(12308): Error adding 1 elements to context";
              goto LABEL_1981;
            case 12309:
              if ((_DWORD)v16 != 8)
                sub_10001F9D4("ASPMSPParseBufferToCxt: readStage205(12309): cfg 1 elements; (1*8) cfg bytes != (%d) buffer bytes",
                  a2,
                  a3,
                  a4,
                  a5,
                  a6,
                  a7,
                  a8,
                  v16);
              if (v16 >= 0x10)
                v22 = 1;
              else
                v22 = v16 >> 3;
              if (sub_10002F594(a1, "readStage205", v11, 8u, v22))
                goto LABEL_1372;
              v9 = "ASPMSPParseBufferToCxt: readStage205(12309): Error adding 1 elements to context";
              goto LABEL_1981;
            case 12310:
              if ((_DWORD)v16 != 8)
                sub_10001F9D4("ASPMSPParseBufferToCxt: readStage206(12310): cfg 1 elements; (1*8) cfg bytes != (%d) buffer bytes",
                  a2,
                  a3,
                  a4,
                  a5,
                  a6,
                  a7,
                  a8,
                  v16);
              if (v16 >= 0x10)
                v22 = 1;
              else
                v22 = v16 >> 3;
              if (sub_10002F594(a1, "readStage206", v11, 8u, v22))
                goto LABEL_1372;
              v9 = "ASPMSPParseBufferToCxt: readStage206(12310): Error adding 1 elements to context";
              goto LABEL_1981;
            case 12311:
              if ((_DWORD)v16 != 8)
                sub_10001F9D4("ASPMSPParseBufferToCxt: readStage207(12311): cfg 1 elements; (1*8) cfg bytes != (%d) buffer bytes",
                  a2,
                  a3,
                  a4,
                  a5,
                  a6,
                  a7,
                  a8,
                  v16);
              if (v16 >= 0x10)
                v22 = 1;
              else
                v22 = v16 >> 3;
              if (sub_10002F594(a1, "readStage207", v11, 8u, v22))
                goto LABEL_1372;
              v9 = "ASPMSPParseBufferToCxt: readStage207(12311): Error adding 1 elements to context";
              goto LABEL_1981;
            case 12312:
              if ((_DWORD)v16 != 8)
                sub_10001F9D4("ASPMSPParseBufferToCxt: readStage208(12312): cfg 1 elements; (1*8) cfg bytes != (%d) buffer bytes",
                  a2,
                  a3,
                  a4,
                  a5,
                  a6,
                  a7,
                  a8,
                  v16);
              if (v16 >= 0x10)
                v22 = 1;
              else
                v22 = v16 >> 3;
              if (sub_10002F594(a1, "readStage208", v11, 8u, v22))
                goto LABEL_1372;
              v9 = "ASPMSPParseBufferToCxt: readStage208(12312): Error adding 1 elements to context";
              goto LABEL_1981;
            case 12313:
              if ((_DWORD)v16 != 32)
                sub_10001F9D4("ASPMSPParseBufferToCxt: readStage209(12313): cfg 4 elements; (4*8) cfg bytes != (%d) buffer bytes",
                  a2,
                  a3,
                  a4,
                  a5,
                  a6,
                  a7,
                  a8,
                  v16);
              if (v16 >= 0x28)
                v22 = 4;
              else
                v22 = v16 >> 3;
              if (sub_10002F594(a1, "readStage209", v11, 8u, v22))
                goto LABEL_1372;
              v9 = "ASPMSPParseBufferToCxt: readStage209(12313): Error adding 4 elements to context";
              goto LABEL_1981;
            case 12314:
              if ((_DWORD)v16 != 32)
                sub_10001F9D4("ASPMSPParseBufferToCxt: readStage210(12314): cfg 4 elements; (4*8) cfg bytes != (%d) buffer bytes",
                  a2,
                  a3,
                  a4,
                  a5,
                  a6,
                  a7,
                  a8,
                  v16);
              if (v16 >= 0x28)
                v22 = 4;
              else
                v22 = v16 >> 3;
              if (sub_10002F594(a1, "readStage210", v11, 8u, v22))
                goto LABEL_1372;
              v9 = "ASPMSPParseBufferToCxt: readStage210(12314): Error adding 4 elements to context";
              goto LABEL_1981;
            case 12315:
              if ((_DWORD)v16 != 8)
                sub_10001F9D4("ASPMSPParseBufferToCxt: initialReadStage212(12315): cfg 1 elements; (1*8) cfg bytes != (%d) buffer bytes",
                  a2,
                  a3,
                  a4,
                  a5,
                  a6,
                  a7,
                  a8,
                  v16);
              if (v16 >= 0x10)
                v22 = 1;
              else
                v22 = v16 >> 3;
              if (sub_10002F594(a1, "initialReadStage212", v11, 8u, v22))
                goto LABEL_1372;
              v9 = "ASPMSPParseBufferToCxt: initialReadStage212(12315): Error adding 1 elements to context";
              goto LABEL_1981;
            case 12316:
              if ((_DWORD)v16 != 8)
                sub_10001F9D4("ASPMSPParseBufferToCxt: initialReadStage213(12316): cfg 1 elements; (1*8) cfg bytes != (%d) buffer bytes",
                  a2,
                  a3,
                  a4,
                  a5,
                  a6,
                  a7,
                  a8,
                  v16);
              if (v16 >= 0x10)
                v22 = 1;
              else
                v22 = v16 >> 3;
              if (sub_10002F594(a1, "initialReadStage213", v11, 8u, v22))
                goto LABEL_1372;
              v9 = "ASPMSPParseBufferToCxt: initialReadStage213(12316): Error adding 1 elements to context";
              goto LABEL_1981;
            case 12317:
              if ((_DWORD)v16 != 8)
                sub_10001F9D4("ASPMSPParseBufferToCxt: readStage211(12317): cfg 1 elements; (1*8) cfg bytes != (%d) buffer bytes",
                  a2,
                  a3,
                  a4,
                  a5,
                  a6,
                  a7,
                  a8,
                  v16);
              if (v16 >= 0x10)
                v22 = 1;
              else
                v22 = v16 >> 3;
              if (sub_10002F594(a1, "readStage211", v11, 8u, v22))
                goto LABEL_1372;
              v9 = "ASPMSPParseBufferToCxt: readStage211(12317): Error adding 1 elements to context";
              goto LABEL_1981;
            case 12318:
              if ((_DWORD)v16 != 8)
                sub_10001F9D4("ASPMSPParseBufferToCxt: readStage212(12318): cfg 1 elements; (1*8) cfg bytes != (%d) buffer bytes",
                  a2,
                  a3,
                  a4,
                  a5,
                  a6,
                  a7,
                  a8,
                  v16);
              if (v16 >= 0x10)
                v22 = 1;
              else
                v22 = v16 >> 3;
              if (sub_10002F594(a1, "readStage212", v11, 8u, v22))
                goto LABEL_1372;
              v9 = "ASPMSPParseBufferToCxt: readStage212(12318): Error adding 1 elements to context";
              goto LABEL_1981;
            case 12319:
              if ((_DWORD)v16 != 8)
                sub_10001F9D4("ASPMSPParseBufferToCxt: readStage213(12319): cfg 1 elements; (1*8) cfg bytes != (%d) buffer bytes",
                  a2,
                  a3,
                  a4,
                  a5,
                  a6,
                  a7,
                  a8,
                  v16);
              if (v16 >= 0x10)
                v22 = 1;
              else
                v22 = v16 >> 3;
              if (sub_10002F594(a1, "readStage213", v11, 8u, v22))
                goto LABEL_1372;
              v9 = "ASPMSPParseBufferToCxt: readStage213(12319): Error adding 1 elements to context";
              goto LABEL_1981;
            case 12320:
              if ((_DWORD)v16 != 8)
                sub_10001F9D4("ASPMSPParseBufferToCxt: readStage214(12320): cfg 1 elements; (1*8) cfg bytes != (%d) buffer bytes",
                  a2,
                  a3,
                  a4,
                  a5,
                  a6,
                  a7,
                  a8,
                  v16);
              if (v16 >= 0x10)
                v22 = 1;
              else
                v22 = v16 >> 3;
              if (sub_10002F594(a1, "readStage214", v11, 8u, v22))
                goto LABEL_1372;
              v9 = "ASPMSPParseBufferToCxt: readStage214(12320): Error adding 1 elements to context";
              goto LABEL_1981;
            case 12321:
              if ((_DWORD)v16 != 8)
                sub_10001F9D4("ASPMSPParseBufferToCxt: readStage215(12321): cfg 1 elements; (1*8) cfg bytes != (%d) buffer bytes",
                  a2,
                  a3,
                  a4,
                  a5,
                  a6,
                  a7,
                  a8,
                  v16);
              if (v16 >= 0x10)
                v22 = 1;
              else
                v22 = v16 >> 3;
              if (sub_10002F594(a1, "readStage215", v11, 8u, v22))
                goto LABEL_1372;
              v9 = "ASPMSPParseBufferToCxt: readStage215(12321): Error adding 1 elements to context";
              goto LABEL_1981;
            case 12322:
              if ((_DWORD)v16 != 8)
                sub_10001F9D4("ASPMSPParseBufferToCxt: dspExceptionParameter142(12322): cfg 1 elements; (1*8) cfg bytes != (%d) buffer bytes",
                  a2,
                  a3,
                  a4,
                  a5,
                  a6,
                  a7,
                  a8,
                  v16);
              if (v16 >= 0x10)
                v22 = 1;
              else
                v22 = v16 >> 3;
              if (sub_10002F594(a1, "dspExceptionParameter142", v11, 8u, v22))
                goto LABEL_1372;
              v9 = "ASPMSPParseBufferToCxt: dspExceptionParameter142(12322): Error adding 1 elements to context";
              goto LABEL_1981;
            case 12323:
              if ((_DWORD)v16 != 8)
                sub_10001F9D4("ASPMSPParseBufferToCxt: dspExceptionParameter143(12323): cfg 1 elements; (1*8) cfg bytes != (%d) buffer bytes",
                  a2,
                  a3,
                  a4,
                  a5,
                  a6,
                  a7,
                  a8,
                  v16);
              if (v16 >= 0x10)
                v22 = 1;
              else
                v22 = v16 >> 3;
              if (sub_10002F594(a1, "dspExceptionParameter143", v11, 8u, v22))
                goto LABEL_1372;
              v9 = "ASPMSPParseBufferToCxt: dspExceptionParameter143(12323): Error adding 1 elements to context";
              goto LABEL_1981;
            default:
              switch(v17)
              {
                case 4256:
                  if ((_DWORD)v16 != 40)
                    sub_10001F9D4("ASPMSPParseBufferToCxt: cbdr_step_5(4256): cfg 10 elements; (10*4) cfg bytes != (%d) buffer bytes",
                      a2,
                      a3,
                      a4,
                      a5,
                      a6,
                      a7,
                      a8,
                      v16);
                  if (v16 >= 0x2C)
                    v22 = 10;
                  else
                    v22 = v16 >> 2;
                  if (!sub_10002F594(a1, "cbdr_step_5", v11, 4u, v22))
                    goto LABEL_1981;
                  goto LABEL_1372;
                case 4257:
                  if ((_DWORD)v16 != 40)
                    sub_10001F9D4("ASPMSPParseBufferToCxt: cbdr_step_6(4257): cfg 10 elements; (10*4) cfg bytes != (%d) buffer bytes",
                      a2,
                      a3,
                      a4,
                      a5,
                      a6,
                      a7,
                      a8,
                      v16);
                  if (v16 >= 0x2C)
                    v22 = 10;
                  else
                    v22 = v16 >> 2;
                  if (sub_10002F594(a1, "cbdr_step_6", v11, 4u, v22))
                    goto LABEL_1372;
                  v9 = "ASPMSPParseBufferToCxt: cbdr_step_6(4257): Error adding 10 elements to context";
                  goto LABEL_1981;
                case 4258:
                  if ((_DWORD)v16 != 40)
                    sub_10001F9D4("ASPMSPParseBufferToCxt: cbdr_step_7(4258): cfg 10 elements; (10*4) cfg bytes != (%d) buffer bytes",
                      a2,
                      a3,
                      a4,
                      a5,
                      a6,
                      a7,
                      a8,
                      v16);
                  if (v16 >= 0x2C)
                    v22 = 10;
                  else
                    v22 = v16 >> 2;
                  if (sub_10002F594(a1, "cbdr_step_7", v11, 4u, v22))
                    goto LABEL_1372;
                  v9 = "ASPMSPParseBufferToCxt: cbdr_step_7(4258): Error adding 10 elements to context";
                  goto LABEL_1981;
                case 4259:
                  if ((_DWORD)v16 != 80)
                    sub_10001F9D4("ASPMSPParseBufferToCxt: dspExceptionParameter122(4259): cfg 20 elements; (20*4) cfg bytes != (%d) buffer bytes",
                      a2,
                      a3,
                      a4,
                      a5,
                      a6,
                      a7,
                      a8,
                      v16);
                  if (v16 >= 0x54)
                    v22 = 20;
                  else
                    v22 = v16 >> 2;
                  if (sub_10002F594(a1, "dspExceptionParameter122", v11, 4u, v22))
                    goto LABEL_1372;
                  v9 = "ASPMSPParseBufferToCxt: dspExceptionParameter122(4259): Error adding 20 elements to context";
                  goto LABEL_1981;
                case 4260:
                  if ((_DWORD)v16 != 32)
                    sub_10001F9D4("ASPMSPParseBufferToCxt: dspExceptionParameter123(4260): cfg 8 elements; (8*4) cfg bytes != (%d) buffer bytes",
                      a2,
                      a3,
                      a4,
                      a5,
                      a6,
                      a7,
                      a8,
                      v16);
                  if (v16 >= 0x24)
                    v22 = 8;
                  else
                    v22 = v16 >> 2;
                  if (sub_10002F594(a1, "dspExceptionParameter123", v11, 4u, v22))
                    goto LABEL_1372;
                  v9 = "ASPMSPParseBufferToCxt: dspExceptionParameter123(4260): Error adding 8 elements to context";
                  goto LABEL_1981;
                case 4261:
                  if ((_DWORD)v16 != 4)
                    sub_10001F9D4("ASPMSPParseBufferToCxt: dspExceptionParameter124(4261): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
                      a2,
                      a3,
                      a4,
                      a5,
                      a6,
                      a7,
                      a8,
                      v16);
                  if (v16 >= 8)
                    v22 = 1;
                  else
                    v22 = v16 >> 2;
                  if (sub_10002F594(a1, "dspExceptionParameter124", v11, 4u, v22))
                    goto LABEL_1372;
                  v9 = "ASPMSPParseBufferToCxt: dspExceptionParameter124(4261): Error adding 1 elements to context";
                  goto LABEL_1981;
                case 4262:
                  if ((_DWORD)v16 != 4)
                    sub_10001F9D4("ASPMSPParseBufferToCxt: dspExceptionParameter125(4262): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
                      a2,
                      a3,
                      a4,
                      a5,
                      a6,
                      a7,
                      a8,
                      v16);
                  if (v16 >= 8)
                    v22 = 1;
                  else
                    v22 = v16 >> 2;
                  if (sub_10002F594(a1, "dspExceptionParameter125", v11, 4u, v22))
                    goto LABEL_1372;
                  v9 = "ASPMSPParseBufferToCxt: dspExceptionParameter125(4262): Error adding 1 elements to context";
                  goto LABEL_1981;
                case 4263:
                  if ((_DWORD)v16 != 4)
                    sub_10001F9D4("ASPMSPParseBufferToCxt: dspExceptionParameter126(4263): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
                      a2,
                      a3,
                      a4,
                      a5,
                      a6,
                      a7,
                      a8,
                      v16);
                  if (v16 >= 8)
                    v22 = 1;
                  else
                    v22 = v16 >> 2;
                  if (sub_10002F594(a1, "dspExceptionParameter126", v11, 4u, v22))
                    goto LABEL_1372;
                  v9 = "ASPMSPParseBufferToCxt: dspExceptionParameter126(4263): Error adding 1 elements to context";
                  goto LABEL_1981;
                case 4264:
                  if ((_DWORD)v16 != 16)
                    sub_10001F9D4("ASPMSPParseBufferToCxt: dspExceptionParameter127(4264): cfg 4 elements; (4*4) cfg bytes != (%d) buffer bytes",
                      a2,
                      a3,
                      a4,
                      a5,
                      a6,
                      a7,
                      a8,
                      v16);
                  if (v16 >= 0x14)
                    v22 = 4;
                  else
                    v22 = v16 >> 2;
                  if (sub_10002F594(a1, "dspExceptionParameter127", v11, 4u, v22))
                    goto LABEL_1372;
                  v9 = "ASPMSPParseBufferToCxt: dspExceptionParameter127(4264): Error adding 4 elements to context";
                  goto LABEL_1981;
                case 4265:
                  if ((_DWORD)v16 != 16)
                    sub_10001F9D4("ASPMSPParseBufferToCxt: dspExceptionParameter128(4265): cfg 4 elements; (4*4) cfg bytes != (%d) buffer bytes",
                      a2,
                      a3,
                      a4,
                      a5,
                      a6,
                      a7,
                      a8,
                      v16);
                  if (v16 >= 0x14)
                    v22 = 4;
                  else
                    v22 = v16 >> 2;
                  if (sub_10002F594(a1, "dspExceptionParameter128", v11, 4u, v22))
                    goto LABEL_1372;
                  v9 = "ASPMSPParseBufferToCxt: dspExceptionParameter128(4265): Error adding 4 elements to context";
                  goto LABEL_1981;
                case 4266:
                  if ((_DWORD)v16 != 16)
                    sub_10001F9D4("ASPMSPParseBufferToCxt: dspExceptionParameter129(4266): cfg 4 elements; (4*4) cfg bytes != (%d) buffer bytes",
                      a2,
                      a3,
                      a4,
                      a5,
                      a6,
                      a7,
                      a8,
                      v16);
                  if (v16 >= 0x14)
                    v22 = 4;
                  else
                    v22 = v16 >> 2;
                  if (sub_10002F594(a1, "dspExceptionParameter129", v11, 4u, v22))
                    goto LABEL_1372;
                  v9 = "ASPMSPParseBufferToCxt: dspExceptionParameter129(4266): Error adding 4 elements to context";
                  goto LABEL_1981;
                case 4267:
                  if ((_DWORD)v16 != 16)
                    sub_10001F9D4("ASPMSPParseBufferToCxt: dspExceptionParameter130(4267): cfg 4 elements; (4*4) cfg bytes != (%d) buffer bytes",
                      a2,
                      a3,
                      a4,
                      a5,
                      a6,
                      a7,
                      a8,
                      v16);
                  if (v16 >= 0x14)
                    v22 = 4;
                  else
                    v22 = v16 >> 2;
                  if (sub_10002F594(a1, "dspExceptionParameter130", v11, 4u, v22))
                    goto LABEL_1372;
                  v9 = "ASPMSPParseBufferToCxt: dspExceptionParameter130(4267): Error adding 4 elements to context";
                  goto LABEL_1981;
                case 4268:
                  if ((_DWORD)v16 != 16)
                    sub_10001F9D4("ASPMSPParseBufferToCxt: dspExceptionParameter131(4268): cfg 4 elements; (4*4) cfg bytes != (%d) buffer bytes",
                      a2,
                      a3,
                      a4,
                      a5,
                      a6,
                      a7,
                      a8,
                      v16);
                  if (v16 >= 0x14)
                    v22 = 4;
                  else
                    v22 = v16 >> 2;
                  if (sub_10002F594(a1, "dspExceptionParameter131", v11, 4u, v22))
                    goto LABEL_1372;
                  v9 = "ASPMSPParseBufferToCxt: dspExceptionParameter131(4268): Error adding 4 elements to context";
                  goto LABEL_1981;
                case 4269:
                  if ((_DWORD)v16 != 40)
                    sub_10001F9D4("ASPMSPParseBufferToCxt: dspExceptionParameter132(4269): cfg 10 elements; (10*4) cfg bytes != (%d) buffer bytes",
                      a2,
                      a3,
                      a4,
                      a5,
                      a6,
                      a7,
                      a8,
                      v16);
                  if (v16 >= 0x2C)
                    v22 = 10;
                  else
                    v22 = v16 >> 2;
                  if (sub_10002F594(a1, "dspExceptionParameter132", v11, 4u, v22))
                    goto LABEL_1372;
                  v9 = "ASPMSPParseBufferToCxt: dspExceptionParameter132(4269): Error adding 10 elements to context";
                  goto LABEL_1981;
                case 4270:
                  if ((_DWORD)v16 != 40)
                    sub_10001F9D4("ASPMSPParseBufferToCxt: dspExceptionParameter133(4270): cfg 10 elements; (10*4) cfg bytes != (%d) buffer bytes",
                      a2,
                      a3,
                      a4,
                      a5,
                      a6,
                      a7,
                      a8,
                      v16);
                  if (v16 >= 0x2C)
                    v22 = 10;
                  else
                    v22 = v16 >> 2;
                  if (sub_10002F594(a1, "dspExceptionParameter133", v11, 4u, v22))
                    goto LABEL_1372;
                  v9 = "ASPMSPParseBufferToCxt: dspExceptionParameter133(4270): Error adding 10 elements to context";
                  goto LABEL_1981;
                case 4271:
                  if ((_DWORD)v16 != 4)
                    sub_10001F9D4("ASPMSPParseBufferToCxt: dspExceptionParameter134(4271): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
                      a2,
                      a3,
                      a4,
                      a5,
                      a6,
                      a7,
                      a8,
                      v16);
                  if (v16 >= 8)
                    v22 = 1;
                  else
                    v22 = v16 >> 2;
                  if (sub_10002F594(a1, "dspExceptionParameter134", v11, 4u, v22))
                    goto LABEL_1372;
                  v9 = "ASPMSPParseBufferToCxt: dspExceptionParameter134(4271): Error adding 1 elements to context";
                  goto LABEL_1981;
                case 4272:
                  if ((_DWORD)v16 != 4)
                    sub_10001F9D4("ASPMSPParseBufferToCxt: dspExceptionParameter135(4272): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
                      a2,
                      a3,
                      a4,
                      a5,
                      a6,
                      a7,
                      a8,
                      v16);
                  if (v16 >= 8)
                    v22 = 1;
                  else
                    v22 = v16 >> 2;
                  if (sub_10002F594(a1, "dspExceptionParameter135", v11, 4u, v22))
                    goto LABEL_1372;
                  v9 = "ASPMSPParseBufferToCxt: dspExceptionParameter135(4272): Error adding 1 elements to context";
                  goto LABEL_1981;
                case 4273:
                  if ((_DWORD)v16 != 4)
                    sub_10001F9D4("ASPMSPParseBufferToCxt: dspExceptionParameter136(4273): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
                      a2,
                      a3,
                      a4,
                      a5,
                      a6,
                      a7,
                      a8,
                      v16);
                  if (v16 >= 8)
                    v22 = 1;
                  else
                    v22 = v16 >> 2;
                  if (sub_10002F594(a1, "dspExceptionParameter136", v11, 4u, v22))
                    goto LABEL_1372;
                  v9 = "ASPMSPParseBufferToCxt: dspExceptionParameter136(4273): Error adding 1 elements to context";
                  goto LABEL_1981;
                case 4274:
                  if ((_DWORD)v16 != 4)
                    sub_10001F9D4("ASPMSPParseBufferToCxt: dspExceptionParameter137(4274): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
                      a2,
                      a3,
                      a4,
                      a5,
                      a6,
                      a7,
                      a8,
                      v16);
                  if (v16 >= 8)
                    v22 = 1;
                  else
                    v22 = v16 >> 2;
                  if (sub_10002F594(a1, "dspExceptionParameter137", v11, 4u, v22))
                    goto LABEL_1372;
                  v9 = "ASPMSPParseBufferToCxt: dspExceptionParameter137(4274): Error adding 1 elements to context";
                  goto LABEL_1981;
                case 4275:
                  if ((_DWORD)v16 != 4)
                    sub_10001F9D4("ASPMSPParseBufferToCxt: dspExceptionParameter138(4275): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
                      a2,
                      a3,
                      a4,
                      a5,
                      a6,
                      a7,
                      a8,
                      v16);
                  if (v16 >= 8)
                    v22 = 1;
                  else
                    v22 = v16 >> 2;
                  if (sub_10002F594(a1, "dspExceptionParameter138", v11, 4u, v22))
                    goto LABEL_1372;
                  v9 = "ASPMSPParseBufferToCxt: dspExceptionParameter138(4275): Error adding 1 elements to context";
                  goto LABEL_1981;
                case 4276:
                  if ((_DWORD)v16 != 16)
                    sub_10001F9D4("ASPMSPParseBufferToCxt: dspExceptionParameter139(4276): cfg 4 elements; (4*4) cfg bytes != (%d) buffer bytes",
                      a2,
                      a3,
                      a4,
                      a5,
                      a6,
                      a7,
                      a8,
                      v16);
                  if (v16 >= 0x14)
                    v22 = 4;
                  else
                    v22 = v16 >> 2;
                  if (sub_10002F594(a1, "dspExceptionParameter139", v11, 4u, v22))
                    goto LABEL_1372;
                  v9 = "ASPMSPParseBufferToCxt: dspExceptionParameter139(4276): Error adding 4 elements to context";
                  goto LABEL_1981;
                case 4277:
                  if ((_DWORD)v16 != 4)
                    sub_10001F9D4("ASPMSPParseBufferToCxt: dspExceptionParameter140(4277): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
                      a2,
                      a3,
                      a4,
                      a5,
                      a6,
                      a7,
                      a8,
                      v16);
                  if (v16 >= 8)
                    v22 = 1;
                  else
                    v22 = v16 >> 2;
                  if (sub_10002F594(a1, "dspExceptionParameter140", v11, 4u, v22))
                    goto LABEL_1372;
                  v9 = "ASPMSPParseBufferToCxt: dspExceptionParameter140(4277): Error adding 1 elements to context";
                  goto LABEL_1981;
                case 4278:
                  if ((_DWORD)v16 != 4)
                    sub_10001F9D4("ASPMSPParseBufferToCxt: dspExceptionParameter141(4278): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
                      a2,
                      a3,
                      a4,
                      a5,
                      a6,
                      a7,
                      a8,
                      v16);
                  if (v16 >= 8)
                    v22 = 1;
                  else
                    v22 = v16 >> 2;
                  if (sub_10002F594(a1, "dspExceptionParameter141", v11, 4u, v22))
                    goto LABEL_1372;
                  v9 = "ASPMSPParseBufferToCxt: dspExceptionParameter141(4278): Error adding 1 elements to context";
                  goto LABEL_1981;
                default:
                  switch(v17)
                  {
                    case 4164:
                      if ((_DWORD)v16 != 4)
                        sub_10001F9D4("ASPMSPParseBufferToCxt: syndSumAcqConvergedToStaticWalls(4164): cfg 1 elements; (1*4) cfg byte"
                          "s != (%d) buffer bytes",
                          a2,
                          a3,
                          a4,
                          a5,
                          a6,
                          a7,
                          a8,
                          v16);
                      if (v16 >= 8)
                        v22 = 1;
                      else
                        v22 = v16 >> 2;
                      if (sub_10002F594(a1, "syndSumAcqConvergedToStaticWalls", v11, 4u, v22))
                        goto LABEL_1372;
                      v9 = "ASPMSPParseBufferToCxt: syndSumAcqConvergedToStaticWalls(4164): Error adding 1 elements to context";
                      goto LABEL_1981;
                    case 4165:
                      if ((_DWORD)v16 != 60)
                        sub_10001F9D4("ASPMSPParseBufferToCxt: DYCE1_Decoded_Bitflips(4165): cfg 15 elements; (15*4) cfg bytes != (%d) buffer bytes",
                          a2,
                          a3,
                          a4,
                          a5,
                          a6,
                          a7,
                          a8,
                          v16);
                      if (v16 >= 0x40)
                        v22 = 15;
                      else
                        v22 = v16 >> 2;
                      if (sub_10002F594(a1, "DYCE1_Decoded_Bitflips", v11, 4u, v22))
                        goto LABEL_1372;
                      v9 = "ASPMSPParseBufferToCxt: DYCE1_Decoded_Bitflips(4165): Error adding 15 elements to context";
                      goto LABEL_1981;
                    case 4166:
                      if ((_DWORD)v16 != 80)
                        sub_10001F9D4("ASPMSPParseBufferToCxt: DYCE1_Target_Bitflips(4166): cfg 20 elements; (20*4) cfg bytes != (%d) buffer bytes",
                          a2,
                          a3,
                          a4,
                          a5,
                          a6,
                          a7,
                          a8,
                          v16);
                      if (v16 >= 0x54)
                        v22 = 20;
                      else
                        v22 = v16 >> 2;
                      if (sub_10002F594(a1, "DYCE1_Target_Bitflips", v11, 4u, v22))
                        goto LABEL_1372;
                      v9 = "ASPMSPParseBufferToCxt: DYCE1_Target_Bitflips(4166): Error adding 20 elements to context";
                      goto LABEL_1981;
                    case 4167:
                      if ((_DWORD)v16 != 60)
                        sub_10001F9D4("ASPMSPParseBufferToCxt: DYCE2_Decoded_Bitflips(4167): cfg 15 elements; (15*4) cfg bytes != (%d) buffer bytes",
                          a2,
                          a3,
                          a4,
                          a5,
                          a6,
                          a7,
                          a8,
                          v16);
                      if (v16 >= 0x40)
                        v22 = 15;
                      else
                        v22 = v16 >> 2;
                      if (sub_10002F594(a1, "DYCE2_Decoded_Bitflips", v11, 4u, v22))
                        goto LABEL_1372;
                      v9 = "ASPMSPParseBufferToCxt: DYCE2_Decoded_Bitflips(4167): Error adding 15 elements to context";
                      goto LABEL_1981;
                    case 4168:
                      if ((_DWORD)v16 != 80)
                        sub_10001F9D4("ASPMSPParseBufferToCxt: DYCE2_Target_Bitflips(4168): cfg 20 elements; (20*4) cfg bytes != (%d) buffer bytes",
                          a2,
                          a3,
                          a4,
                          a5,
                          a6,
                          a7,
                          a8,
                          v16);
                      if (v16 >= 0x54)
                        v22 = 20;
                      else
                        v22 = v16 >> 2;
                      if (sub_10002F594(a1, "DYCE2_Target_Bitflips", v11, 4u, v22))
                        goto LABEL_1372;
                      v9 = "ASPMSPParseBufferToCxt: DYCE2_Target_Bitflips(4168): Error adding 20 elements to context";
                      goto LABEL_1981;
                    default:
                      if (v17 <= 12323)
                      {
                        switch(v17)
                        {
                          case 8193:
                            if ((_DWORD)v16 != 20)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: avg_rd_window_size(8193): cfg 5 elements; (5*4) cfg bytes != (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 0x18)
                              v22 = 5;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "avg_rd_window_size", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: avg_rd_window_size(8193): Error adding 5 elements to context";
                            break;
                          case 8194:
                            if ((_DWORD)v16 != 4)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: num_zq_failures(8194): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 8)
                              v22 = 1;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "num_zq_failures", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: num_zq_failures(8194): Error adding 1 elements to context";
                            break;
                          case 8195:
                            if ((_DWORD)v16 != 64)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: lower_die_temperature(8195): cfg 16 elements; (16*4) cfg bytes !"
                                "= (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 0x44)
                              v22 = 16;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "lower_die_temperature", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: lower_die_temperature(8195): Error adding 16 elements to context";
                            break;
                          case 8196:
                            if ((_DWORD)v16 != 64)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: higher_die_temperature(8196): cfg 16 elements; (16*4) cfg bytes "
                                "!= (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 0x44)
                              v22 = 16;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "higher_die_temperature", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: higher_die_temperature(8196): Error adding 16 elements to context";
                            break;
                          case 8197:
                            if ((_DWORD)v16 != 4)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: number_of_sram_flips(8197): cfg 1 elements; (1*4) cfg bytes != ("
                                "%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 8)
                              v22 = 1;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "number_of_sram_flips", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: number_of_sram_flips(8197): Error adding 1 elements to context";
                            break;
                          case 8198:
                            if ((_DWORD)v16 != 4)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: number_of_reset_failures(8198): cfg 1 elements; (1*4) cfg bytes "
                                "!= (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 8)
                              v22 = 1;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "number_of_reset_failures", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: number_of_reset_failures(8198): Error adding 1 elements to context";
                            break;
                          case 8199:
                            if ((_DWORD)v16 != 4)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: device_config(8199): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 8)
                              v22 = 1;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "device_config", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: device_config(8199): Error adding 1 elements to context";
                            break;
                          case 8200:
                            if ((_DWORD)v16 != 4)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: number_of_throttling_events(8200): cfg 1 elements; (1*4) cfg byt"
                                "es != (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 8)
                              v22 = 1;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "number_of_throttling_events", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: number_of_throttling_events(8200): Error adding 1 elements to context";
                            break;
                          case 8201:
                            if ((_DWORD)v16 != 4)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: link_speed_recoveries(8201): cfg 1 elements; (1*4) cfg bytes != "
                                "(%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 8)
                              v22 = 1;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "link_speed_recoveries", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: link_speed_recoveries(8201): Error adding 1 elements to context";
                            break;
                          case 8202:
                            if ((_DWORD)v16 != 4)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: fw_updates(8202): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 8)
                              v22 = 1;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "fw_updates", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: fw_updates(8202): Error adding 1 elements to context";
                            break;
                          case 8203:
                            if ((_DWORD)v16 != 4)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: maintenance_backup_to_main(8203): cfg 1 elements; (1*4) cfg byte"
                                "s != (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 8)
                              v22 = 1;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "maintenance_backup_to_main", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: maintenance_backup_to_main(8203): Error adding 1 elements to context";
                            break;
                          case 8204:
                            if ((_DWORD)v16 != 4)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: maintenance_main_to_backup(8204): cfg 1 elements; (1*4) cfg byte"
                                "s != (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 8)
                              v22 = 1;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "maintenance_main_to_backup", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: maintenance_main_to_backup(8204): Error adding 1 elements to context";
                            break;
                          case 8205:
                            if ((_DWORD)v16 != 4)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: boot_block_erase_failures(8205): cfg 1 elements; (1*4) cfg bytes"
                                " != (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 8)
                              v22 = 1;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "boot_block_erase_failures", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: boot_block_erase_failures(8205): Error adding 1 elements to context";
                            break;
                          case 8206:
                            if ((_DWORD)v16 != 4)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: boot_block_program_failures(8206): cfg 1 elements; (1*4) cfg byt"
                                "es != (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 8)
                              v22 = 1;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "boot_block_program_failures", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: boot_block_program_failures(8206): Error adding 1 elements to context";
                            break;
                          case 8207:
                            if ((_DWORD)v16 != 4)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: boot_block_read_verify_failures(8207): cfg 1 elements; (1*4) cfg"
                                " bytes != (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 8)
                              v22 = 1;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "boot_block_read_verify_failures", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: boot_block_read_verify_failures(8207): Error adding 1 elements to context";
                            break;
                          case 8208:
                            if ((_DWORD)v16 != 4)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: boot_block_read_failures(8208): cfg 1 elements; (1*4) cfg bytes "
                                "!= (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 8)
                              v22 = 1;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "boot_block_read_failures", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: boot_block_read_failures(8208): Error adding 1 elements to context";
                            break;
                          case 8209:
                            if ((_DWORD)v16 != 4)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: boot_block_refresh(8209): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 8)
                              v22 = 1;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "boot_block_refresh", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: boot_block_refresh(8209): Error adding 1 elements to context";
                            break;
                          case 8210:
                            if ((_DWORD)v16 != 4)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: boot_block_convert_to_main(8210): cfg 1 elements; (1*4) cfg byte"
                                "s != (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 8)
                              v22 = 1;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "boot_block_convert_to_main", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: boot_block_convert_to_main(8210): Error adding 1 elements to context";
                            break;
                          case 8211:
                            if ((_DWORD)v16 != 4)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: boot_block_read_source_changed(8211): cfg 1 elements; (1*4) cfg "
                                "bytes != (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 8)
                              v22 = 1;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "boot_block_read_source_changed", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: boot_block_read_source_changed(8211): Error adding 1 elements to context";
                            break;
                          case 8212:
                            if ((_DWORD)v16 != 16)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: open_blocks_hist(8212): cfg 4 elements; (4*4) cfg bytes != (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 0x14)
                              v22 = 4;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "open_blocks_hist", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: open_blocks_hist(8212): Error adding 4 elements to context";
                            break;
                          case 8213:
                            if ((_DWORD)v16 != 24)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: random_read_hit_ratio_hist(8213): cfg 6 elements; (6*4) cfg byte"
                                "s != (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 0x1C)
                              v22 = 6;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "random_read_hit_ratio_hist", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: random_read_hit_ratio_hist(8213): Error adding 6 elements to context";
                            break;
                          case 8214:
                            if ((_DWORD)v16 != 20)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: active_time_hist(8214): cfg 5 elements; (5*4) cfg bytes != (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 0x18)
                              v22 = 5;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "active_time_hist", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: active_time_hist(8214): Error adding 5 elements to context";
                            break;
                          case 8215:
                            if ((_DWORD)v16 != 8)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: rd_retraining_failures(8215): cfg 2 elements; (2*4) cfg bytes !="
                                " (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 0xC)
                              v22 = 2;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "rd_retraining_failures", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: rd_retraining_failures(8215): Error adding 2 elements to context";
                            break;
                          case 8216:
                            if ((_DWORD)v16 != 8)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: wr_retraining_failures(8216): cfg 2 elements; (2*4) cfg bytes !="
                                " (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 0xC)
                              v22 = 2;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "wr_retraining_failures", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: wr_retraining_failures(8216): Error adding 2 elements to context";
                            break;
                          case 8217:
                            if ((_DWORD)v16 != 20)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: auto_skip(8217): cfg 5 elements; (5*4) cfg bytes != (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 0x18)
                              v22 = 5;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "auto_skip", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: auto_skip(8217): Error adding 5 elements to context";
                            break;
                          case 8218:
                            if ((_DWORD)v16 != 4)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: number_of_dcc_pass_after_retry(8218): cfg 1 elements; (1*4) cfg "
                                "bytes != (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 8)
                              v22 = 1;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "number_of_dcc_pass_after_retry", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: number_of_dcc_pass_after_retry(8218): Error adding 1 elements to context";
                            break;
                          case 8219:
                            if ((_DWORD)v16 != 4)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: number_of_dcc_failures(8219): cfg 1 elements; (1*4) cfg bytes !="
                                " (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 8)
                              v22 = 1;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "number_of_dcc_failures", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: number_of_dcc_failures(8219): Error adding 1 elements to context";
                            break;
                          case 8220:
                            if ((_DWORD)v16 != 28)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: open_blocks_hist(8220): cfg 7 elements; (7*4) cfg bytes != (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 0x20)
                              v22 = 7;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "open_blocks_hist", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: open_blocks_hist(8220): Error adding 7 elements to context";
                            break;
                          case 8221:
                            if ((_DWORD)v16 != 4)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: max_size_open_blocks_list(8221): cfg 1 elements; (1*4) cfg bytes"
                                " != (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 8)
                              v22 = 1;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "max_size_open_blocks_list", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: max_size_open_blocks_list(8221): Error adding 1 elements to context";
                            break;
                          case 8222:
                            if ((_DWORD)v16 != 4)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: gps_max_num_of_failures(8222): cfg 1 elements; (1*4) cfg bytes !"
                                "= (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 8)
                              v22 = 1;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "gps_max_num_of_failures", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: gps_max_num_of_failures(8222): Error adding 1 elements to context";
                            break;
                          case 8223:
                            if ((_DWORD)v16 != 4)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: gps_num_of_failures_max_overflow(8223): cfg 1 elements; (1*4) cf"
                                "g bytes != (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 8)
                              v22 = 1;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "gps_num_of_failures_max_overflow", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: gps_num_of_failures_max_overflow(8223): Error adding 1 elements to context";
                            break;
                          case 8224:
                            if ((_DWORD)v16 != 32)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: active_time_hist(8224): cfg 8 elements; (8*4) cfg bytes != (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 0x24)
                              v22 = 8;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "active_time_hist", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: active_time_hist(8224): Error adding 8 elements to context";
                            break;
                          case 8225:
                            if ((_DWORD)v16 != 4)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: num_auto_program_cache_terminations(8225): cfg 1 elements; (1*4)"
                                " cfg bytes != (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 8)
                              v22 = 1;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "num_auto_program_cache_terminations", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: num_auto_program_cache_terminations(8225): Error adding 1 elements to context";
                            break;
                          case 8226:
                            if ((_DWORD)v16 != 4)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: number_of_read_cache_auto_terminations(8226): cfg 1 elements; (1"
                                "*4) cfg bytes != (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 8)
                              v22 = 1;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "number_of_read_cache_auto_terminations", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: number_of_read_cache_auto_terminations(8226): Error adding 1 el"
                                 "ements to context";
                            break;
                          case 8227:
                            if ((_DWORD)v16 != 28)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: external_etags_usage_hist(8227): cfg 7 elements; (7*4) cfg bytes"
                                " != (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 0x20)
                              v22 = 7;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "external_etags_usage_hist", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: external_etags_usage_hist(8227): Error adding 7 elements to context";
                            break;
                          case 8228:
                            if ((_DWORD)v16 != 16)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: internal_etags_usage_hist(8228): cfg 4 elements; (4*4) cfg bytes"
                                " != (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 0x14)
                              v22 = 4;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "internal_etags_usage_hist", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: internal_etags_usage_hist(8228): Error adding 4 elements to context";
                            break;
                          case 8229:
                            if ((_DWORD)v16 != 4)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: max_heap_usage(8229): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 8)
                              v22 = 1;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "max_heap_usage", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: max_heap_usage(8229): Error adding 1 elements to context";
                            break;
                          case 8230:
                            if ((_DWORD)v16 != 24)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: rom_num_hard_resets(8230): cfg 6 elements; (6*4) cfg bytes != (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 0x1C)
                              v22 = 6;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "rom_num_hard_resets", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: rom_num_hard_resets(8230): Error adding 6 elements to context";
                            break;
                          case 8231:
                            if ((_DWORD)v16 != 64)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: lower_die_temperature(8231): cfg 16 elements; (16*4) cfg bytes !"
                                "= (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 0x44)
                              v22 = 16;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "lower_die_temperature", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: lower_die_temperature(8231): Error adding 16 elements to context";
                            break;
                          case 8232:
                            if ((_DWORD)v16 != 64)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: higher_die_temperature(8232): cfg 16 elements; (16*4) cfg bytes "
                                "!= (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 0x44)
                              v22 = 16;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "higher_die_temperature", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: higher_die_temperature(8232): Error adding 16 elements to context";
                            break;
                          case 8233:
                            if ((_DWORD)v16 != 24)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: random_read_hit_ratio_hist(8233): cfg 6 elements; (6*4) cfg byte"
                                "s != (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 0x1C)
                              v22 = 6;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "random_read_hit_ratio_hist", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: random_read_hit_ratio_hist(8233): Error adding 6 elements to context";
                            break;
                          case 8234:
                            if ((_DWORD)v16 != 4)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: msp_number_sram_flips(8234): cfg 1 elements; (1*4) cfg bytes != "
                                "(%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 8)
                              v22 = 1;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "msp_number_sram_flips", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: msp_number_sram_flips(8234): Error adding 1 elements to context";
                            break;
                          case 8235:
                            if ((_DWORD)v16 != 28)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: boot_time_normal_power(8235): cfg 7 elements; (7*4) cfg bytes !="
                                " (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 0x20)
                              v22 = 7;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "boot_time_normal_power", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: boot_time_normal_power(8235): Error adding 7 elements to context";
                            break;
                          case 8236:
                            if ((_DWORD)v16 != 28)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: boot_time_low_power(8236): cfg 7 elements; (7*4) cfg bytes != (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 0x20)
                              v22 = 7;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "boot_time_low_power", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: boot_time_low_power(8236): Error adding 7 elements to context";
                            break;
                          case 8237:
                            if ((_DWORD)v16 != 40)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: active_time_bw_pg_hist(8237): cfg 10 elements; (10*4) cfg bytes "
                                "!= (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 0x2C)
                              v22 = 10;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "active_time_bw_pg_hist", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: active_time_bw_pg_hist(8237): Error adding 10 elements to context";
                            break;
                          case 8238:
                            if ((_DWORD)v16 != 4)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: active_time_bw_pg_min(8238): cfg 1 elements; (1*4) cfg bytes != "
                                "(%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 8)
                              v22 = 1;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "active_time_bw_pg_min", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: active_time_bw_pg_min(8238): Error adding 1 elements to context";
                            break;
                          case 8239:
                            if ((_DWORD)v16 != 4)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: active_time_bw_pg_max(8239): cfg 1 elements; (1*4) cfg bytes != "
                                "(%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 8)
                              v22 = 1;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "active_time_bw_pg_max", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: active_time_bw_pg_max(8239): Error adding 1 elements to context";
                            break;
                          case 8240:
                            if ((_DWORD)v16 != 20)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: mdll_relative_offset(8240): cfg 5 elements; (5*4) cfg bytes != ("
                                "%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 0x18)
                              v22 = 5;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "mdll_relative_offset", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: mdll_relative_offset(8240): Error adding 5 elements to context";
                            break;
                          case 8241:
                            if ((_DWORD)v16 != 4)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: num_pg_regrets(8241): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 8)
                              v22 = 1;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "num_pg_regrets", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: num_pg_regrets(8241): Error adding 1 elements to context";
                            break;
                          case 8242:
                            if ((_DWORD)v16 != 4)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: spi_image_overall_duration_acc(8242): cfg 1 elements; (1*4) cfg "
                                "bytes != (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 8)
                              v22 = 1;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "spi_image_overall_duration_acc", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: spi_image_overall_duration_acc(8242): Error adding 1 elements to context";
                            break;
                          case 8243:
                            if ((_DWORD)v16 != 4)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: spi_image_cw_fetch_duration_acc(8243): cfg 1 elements; (1*4) cfg"
                                " bytes != (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 8)
                              v22 = 1;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "spi_image_cw_fetch_duration_acc", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: spi_image_cw_fetch_duration_acc(8243): Error adding 1 elements to context";
                            break;
                          case 8244:
                            if ((_DWORD)v16 != 20)
                              sub_10001F9D4("ASPMSPParseBufferToCxt: spi_image_cw_fetch_duration_hist(8244): cfg 5 elements; (5*4) cf"
                                "g bytes != (%d) buffer bytes",
                                a2,
                                a3,
                                a4,
                                a5,
                                a6,
                                a7,
                                a8,
                                v16);
                            if (v16 >= 0x18)
                              v22 = 5;
                            else
                              v22 = v16 >> 2;
                            if (sub_10002F594(a1, "spi_image_cw_fetch_duration_hist", v11, 4u, v22))
                              goto LABEL_1372;
                            v9 = "ASPMSPParseBufferToCxt: spi_image_cw_fetch_duration_hist(8244): Error adding 5 elements to context";
                            break;
                          default:
                            switch(v17)
                            {
                              case 4279:
                                if ((_DWORD)v16 != 16)
                                  sub_10001F9D4("ASPMSPParseBufferToCxt: fs1_4b_fail(4279): cfg 4 elements; (4*4) cfg bytes != (%d) buffer bytes",
                                    a2,
                                    a3,
                                    a4,
                                    a5,
                                    a6,
                                    a7,
                                    a8,
                                    v16);
                                if (v16 >= 0x14)
                                  v22 = 4;
                                else
                                  v22 = v16 >> 2;
                                if (sub_10002F594(a1, "fs1_4b_fail_", v11, 4u, v22))
                                  goto LABEL_1372;
                                v9 = v14;
                                break;
                              case 4280:
                                if ((_DWORD)v16 != 16)
                                  sub_10001F9D4("ASPMSPParseBufferToCxt: fs1_4b_fast_fail(4280): cfg 4 elements; (4*4) cfg bytes != ("
                                    "%d) buffer bytes",
                                    a2,
                                    a3,
                                    a4,
                                    a5,
                                    a6,
                                    a7,
                                    a8,
                                    v16);
                                if (v16 >= 0x14)
                                  v22 = 4;
                                else
                                  v22 = v16 >> 2;
                                if (sub_10002F594(a1, "fs1_4b_fast_fail_", v11, 4u, v22))
                                  goto LABEL_1372;
                                v9 = "ASPMSPParseBufferToCxt: fs1_4b_fast_fail(4280): Error adding 4 elements to context";
                                break;
                              case 4281:
                                if ((_DWORD)v16 != 40)
                                  sub_10001F9D4("ASPMSPParseBufferToCxt: dyce_decoded_bit_flips(4281): cfg 10 elements; (10*4) cfg by"
                                    "tes != (%d) buffer bytes",
                                    a2,
                                    a3,
                                    a4,
                                    a5,
                                    a6,
                                    a7,
                                    a8,
                                    v16);
                                if (v16 >= 0x2C)
                                  v22 = 10;
                                else
                                  v22 = v16 >> 2;
                                if (sub_10002F594(a1, "dyce_decoded_bit_flips_", v11, 4u, v22))
                                  goto LABEL_1372;
                                v9 = "ASPMSPParseBufferToCxt: dyce_decoded_bit_flips(4281): Error adding 10 elements to context";
                                break;
                              case 4282:
                                if ((_DWORD)v16 != 60)
                                  sub_10001F9D4("ASPMSPParseBufferToCxt: slip_bch(4282): cfg 15 elements; (15*4) cfg bytes != (%d) buffer bytes",
                                    a2,
                                    a3,
                                    a4,
                                    a5,
                                    a6,
                                    a7,
                                    a8,
                                    v16);
                                if (v16 >= 0x40)
                                  v22 = 15;
                                else
                                  v22 = v16 >> 2;
                                if (sub_10002F594(a1, "slip_bch_", v11, 4u, v22))
                                  goto LABEL_1372;
                                v9 = "ASPMSPParseBufferToCxt: slip_bch(4282): Error adding 15 elements to context";
                                break;
                              case 4283:
                                if ((_DWORD)v16 != 40)
                                  sub_10001F9D4("ASPMSPParseBufferToCxt: read_fail(4283): cfg 10 elements; (10*4) cfg bytes != (%d) buffer bytes",
                                    a2,
                                    a3,
                                    a4,
                                    a5,
                                    a6,
                                    a7,
                                    a8,
                                    v16);
                                if (v16 >= 0x2C)
                                  v22 = 10;
                                else
                                  v22 = v16 >> 2;
                                if (sub_10002F594(a1, "read_fail_", v11, 4u, v22))
                                  goto LABEL_1372;
                                v9 = "ASPMSPParseBufferToCxt: read_fail(4283): Error adding 10 elements to context";
                                break;
                              case 4284:
                                if ((_DWORD)v16 != 40)
                                  sub_10001F9D4("ASPMSPParseBufferToCxt: tr_read_fail(4284): cfg 10 elements; (10*4) cfg bytes != (%d) buffer bytes",
                                    a2,
                                    a3,
                                    a4,
                                    a5,
                                    a6,
                                    a7,
                                    a8,
                                    v16);
                                if (v16 >= 0x2C)
                                  v22 = 10;
                                else
                                  v22 = v16 >> 2;
                                if (sub_10002F594(a1, "tr_read_fail_", v11, 4u, v22))
                                  goto LABEL_1372;
                                v9 = "ASPMSPParseBufferToCxt: tr_read_fail(4284): Error adding 10 elements to context";
                                break;
                              case 4285:
                                if ((_DWORD)v16 != 40)
                                  sub_10001F9D4("ASPMSPParseBufferToCxt: tr_aux_bfs_percent(4285): cfg 10 elements; (10*4) cfg bytes "
                                    "!= (%d) buffer bytes",
                                    a2,
                                    a3,
                                    a4,
                                    a5,
                                    a6,
                                    a7,
                                    a8,
                                    v16);
                                if (v16 >= 0x2C)
                                  v22 = 10;
                                else
                                  v22 = v16 >> 2;
                                if (sub_10002F594(a1, "tr_aux_bfs_percent_", v11, 4u, v22))
                                  goto LABEL_1372;
                                v9 = "ASPMSPParseBufferToCxt: tr_aux_bfs_percent(4285): Error adding 10 elements to context";
                                break;
                              case 4286:
                                if ((_DWORD)v16 != 20)
                                  sub_10001F9D4("ASPMSPParseBufferToCxt: tr_reconstruct_pass_step(4286): cfg 5 elements; (5*4) cfg by"
                                    "tes != (%d) buffer bytes",
                                    a2,
                                    a3,
                                    a4,
                                    a5,
                                    a6,
                                    a7,
                                    a8,
                                    v16);
                                if (v16 >= 0x18)
                                  v22 = 5;
                                else
                                  v22 = v16 >> 2;
                                if (sub_10002F594(a1, "tr_reconstruct_pass_step_", v11, 4u, v22))
                                  goto LABEL_1372;
                                v9 = "ASPMSPParseBufferToCxt: tr_reconstruct_pass_step(4286): Error adding 5 elements to context";
                                break;
                              case 4287:
                                if ((_DWORD)v16 != 4)
                                  sub_10001F9D4("ASPMSPParseBufferToCxt: tr_reconstruct_num(4287): cfg 1 elements; (1*4) cfg bytes !="
                                    " (%d) buffer bytes",
                                    a2,
                                    a3,
                                    a4,
                                    a5,
                                    a6,
                                    a7,
                                    a8,
                                    v16);
                                if (v16 >= 8)
                                  v22 = 1;
                                else
                                  v22 = v16 >> 2;
                                if (sub_10002F594(a1, "tr_reconstruct_num", v11, 4u, v22))
                                  goto LABEL_1372;
                                v9 = "ASPMSPParseBufferToCxt: tr_reconstruct_num(4287): Error adding 1 elements to context";
                                break;
                              default:
                                goto LABEL_1404;
                            }
                            goto LABEL_1981;
                        }
                        goto LABEL_1981;
                      }
                      switch(v17)
                      {
                        case 12326:
                          if ((_DWORD)v16 != 8)
                            sub_10001F9D4("ASPMSPParseBufferToCxt: initialReadStageParameter2(12326): cfg 1 elements; (1*8) cfg bytes"
                              " != (%d) buffer bytes",
                              a2,
                              a3,
                              a4,
                              a5,
                              a6,
                              a7,
                              a8,
                              v16);
                          if (v16 >= 0x10)
                            v22 = 1;
                          else
                            v22 = v16 >> 3;
                          if (!sub_10002F594(a1, "initialReadStageParameter2", v11, 8u, v22))
                          {
                            v9 = "ASPMSPParseBufferToCxt: initialReadStageParameter2(12326): Error adding 1 elements to context";
                            goto LABEL_1981;
                          }
                          break;
                        case 12325:
                          if ((_DWORD)v16 != 8)
                            sub_10001F9D4("ASPMSPParseBufferToCxt: initialReadStageParameter1(12325): cfg 1 elements; (1*8) cfg bytes"
                              " != (%d) buffer bytes",
                              a2,
                              a3,
                              a4,
                              a5,
                              a6,
                              a7,
                              a8,
                              v16);
                          if (v16 >= 0x10)
                            v22 = 1;
                          else
                            v22 = v16 >> 3;
                          if (!sub_10002F594(a1, "initialReadStageParameter1", v11, 8u, v22))
                          {
                            v9 = "ASPMSPParseBufferToCxt: initialReadStageParameter1(12325): Error adding 1 elements to context";
                            goto LABEL_1981;
                          }
                          break;
                        case 12324:
                          if ((_DWORD)v16 != 8)
                            sub_10001F9D4("ASPMSPParseBufferToCxt: dspExceptionParameter144(12324): cfg 1 elements; (1*8) cfg bytes !"
                              "= (%d) buffer bytes",
                              a2,
                              a3,
                              a4,
                              a5,
                              a6,
                              a7,
                              a8,
                              v16);
                          if (v16 >= 0x10)
                            v22 = 1;
                          else
                            v22 = v16 >> 3;
                          if (!sub_10002F594(a1, "dspExceptionParameter144", v11, 8u, v22))
                          {
                            v9 = "ASPMSPParseBufferToCxt: dspExceptionParameter144(12324): Error adding 1 elements to context";
                            goto LABEL_1981;
                          }
                          break;
                        default:
LABEL_1404:
                          switch(v17)
                          {
                            case 8245:
                              if ((_DWORD)v16 != 4)
                                sub_10001F9D4("ASPMSPParseBufferToCxt: spi_num_uses(8245): cfg 1 elements; (1*4) cfg bytes != (%d) buffer bytes",
                                  a2,
                                  a3,
                                  a4,
                                  a5,
                                  a6,
                                  a7,
                                  a8,
                                  v16);
                              if (v16 >= 8)
                                v22 = 1;
                              else
                                v22 = v16 >> 2;
                              if (sub_10002F594(a1, "spi_num_uses", v11, 4u, v22))
                                goto LABEL_1372;
                              v9 = "ASPMSPParseBufferToCxt: spi_num_uses(8245): Error adding 1 elements to context";
                              break;
                            case 8246:
                              if ((_DWORD)v16 != 20)
                                sub_10001F9D4("ASPMSPParseBufferToCxt: e2e_error_count_tmode(8246): cfg 5 elements; (5*4) cfg bytes !"
                                  "= (%d) buffer bytes",
                                  a2,
                                  a3,
                                  a4,
                                  a5,
                                  a6,
                                  a7,
                                  a8,
                                  v16);
                              if (v16 >= 0x18)
                                v22 = 5;
                              else
                                v22 = v16 >> 2;
                              if (sub_10002F594(a1, "e2e_error_count_tmode", v11, 4u, v22))
                                goto LABEL_1372;
                              v9 = "ASPMSPParseBufferToCxt: e2e_error_count_tmode(8246): Error adding 5 elements to context";
                              break;
                            case 8247:
                              if ((_DWORD)v16 != 36)
                                sub_10001F9D4("ASPMSPParseBufferToCxt: rd_window_dist(8247): cfg 9 elements; (9*4) cfg bytes != (%d) buffer bytes",
                                  a2,
                                  a3,
                                  a4,
                                  a5,
                                  a6,
                                  a7,
                                  a8,
                                  v16);
                              if (v16 >= 0x28)
                                v22 = 9;
                              else
                                v22 = v16 >> 2;
                              if (sub_10002F594(a1, "rd_window_dist", v11, 4u, v22))
                                goto LABEL_1372;
                              v9 = "ASPMSPParseBufferToCxt: rd_window_dist(8247): Error adding 9 elements to context";
                              break;
                            case 8248:
                              if ((_DWORD)v16 != 36)
                                sub_10001F9D4("ASPMSPParseBufferToCxt: extended_rd_window_diff_dist(8248): cfg 9 elements; (9*4) cfg "
                                  "bytes != (%d) buffer bytes",
                                  a2,
                                  a3,
                                  a4,
                                  a5,
                                  a6,
                                  a7,
                                  a8,
                                  v16);
                              if (v16 >= 0x28)
                                v22 = 9;
                              else
                                v22 = v16 >> 2;
                              if (sub_10002F594(a1, "extended_rd_window_diff_dist", v11, 4u, v22))
                                goto LABEL_1372;
                              v9 = "ASPMSPParseBufferToCxt: extended_rd_window_diff_dist(8248): Error adding 9 elements to context";
                              break;
                            case 8249:
                              if ((_DWORD)v16 != 8)
                                sub_10001F9D4("ASPMSPParseBufferToCxt: rd_retraining_failures_v2(8249): cfg 2 elements; (2*4) cfg byt"
                                  "es != (%d) buffer bytes",
                                  a2,
                                  a3,
                                  a4,
                                  a5,
                                  a6,
                                  a7,
                                  a8,
                                  v16);
                              if (v16 >= 0xC)
                                v22 = 2;
                              else
                                v22 = v16 >> 2;
                              if (sub_10002F594(a1, "rd_retraining_failures_v2", v11, 4u, v22))
                                goto LABEL_1372;
                              v9 = "ASPMSPParseBufferToCxt: rd_retraining_failures_v2(8249): Error adding 2 elements to context";
                              break;
                            case 8250:
                              if ((_DWORD)v16 != 120)
                                sub_10001F9D4("ASPMSPParseBufferToCxt: lower_die_temperature(8250): cfg 30 elements; (30*4) cfg bytes"
                                  " != (%d) buffer bytes",
                                  a2,
                                  a3,
                                  a4,
                                  a5,
                                  a6,
                                  a7,
                                  a8,
                                  v16);
                              if (v16 >= 0x7C)
                                v22 = 30;
                              else
                                v22 = v16 >> 2;
                              if (sub_10002F594(a1, "lower_die_temperature", v11, 4u, v22))
                                goto LABEL_1372;
                              v9 = "ASPMSPParseBufferToCxt: lower_die_temperature(8250): Error adding 30 elements to context";
                              break;
                            case 8251:
                              if ((_DWORD)v16 != 120)
                                sub_10001F9D4("ASPMSPParseBufferToCxt: higher_die_temperature(8251): cfg 30 elements; (30*4) cfg byte"
                                  "s != (%d) buffer bytes",
                                  a2,
                                  a3,
                                  a4,
                                  a5,
                                  a6,
                                  a7,
                                  a8,
                                  v16);
                              if (v16 >= 0x7C)
                                v22 = 30;
                              else
                                v22 = v16 >> 2;
                              if (sub_10002F594(a1, "higher_die_temperature", v11, 4u, v22))
                                goto LABEL_1372;
                              v9 = "ASPMSPParseBufferToCxt: higher_die_temperature(8251): Error adding 30 elements to context";
                              break;
                            case 8252:
                              if ((_DWORD)v16 != 36)
                                sub_10001F9D4("ASPMSPParseBufferToCxt: rd_window_dist_single_die(8252): cfg 9 elements; (9*4) cfg byt"
                                  "es != (%d) buffer bytes",
                                  a2,
                                  a3,
                                  a4,
                                  a5,
                                  a6,
                                  a7,
                                  a8,
                                  v16);
                              if (v16 >= 0x28)
                                v22 = 9;
                              else
                                v22 = v16 >> 2;
                              if (sub_10002F594(a1, "rd_window_dist_single_die", v11, 4u, v22))
                                goto LABEL_1372;
                              v9 = "ASPMSPParseBufferToCxt: rd_window_dist_single_die(8252): Error adding 9 elements to context";
                              break;
                            case 8253:
                              if ((_DWORD)v16 != 16)
                                sub_10001F9D4("ASPMSPParseBufferToCxt: parallel_slip_drops_hist(8253): cfg 4 elements; (4*4) cfg byte"
                                  "s != (%d) buffer bytes",
                                  a2,
                                  a3,
                                  a4,
                                  a5,
                                  a6,
                                  a7,
                                  a8,
                                  v16);
                              if (v16 >= 0x14)
                                v22 = 4;
                              else
                                v22 = v16 >> 2;
                              if (sub_10002F594(a1, "parallel_slip_drops_hist", v11, 4u, v22))
                                goto LABEL_1372;
                              v9 = "ASPMSPParseBufferToCxt: parallel_slip_drops_hist(8253): Error adding 4 elements to context";
                              break;
                            case 8254:
                              if ((_DWORD)v16 != 4)
                                sub_10001F9D4("ASPMSPParseBufferToCxt: sys_halt_max_latency(8254): cfg 1 elements; (1*4) cfg bytes !="
                                  " (%d) buffer bytes",
                                  a2,
                                  a3,
                                  a4,
                                  a5,
                                  a6,
                                  a7,
                                  a8,
                                  v16);
                              if (v16 >= 8)
                                v22 = 1;
                              else
                                v22 = v16 >> 2;
                              if (sub_10002F594(a1, "sys_halt_max_latency", v11, 4u, v22))
                                goto LABEL_1372;
                              v9 = "ASPMSPParseBufferToCxt: sys_halt_max_latency(8254): Error adding 1 elements to context";
                              break;
                            case 8255:
                              if ((_DWORD)v16 != 4)
                                sub_10001F9D4("ASPMSPParseBufferToCxt: sys_halt_max_latency_opcode(8255): cfg 1 elements; (1*4) cfg b"
                                  "ytes != (%d) buffer bytes",
                                  a2,
                                  a3,
                                  a4,
                                  a5,
                                  a6,
                                  a7,
                                  a8,
                                  v16);
                              if (v16 >= 8)
                                v22 = 1;
                              else
                                v22 = v16 >> 2;
                              if (sub_10002F594(a1, "sys_halt_max_latency_opcode", v11, 4u, v22))
                                goto LABEL_1372;
                              v9 = "ASPMSPParseBufferToCxt: sys_halt_max_latency_opcode(8255): Error adding 1 elements to context";
                              break;
                            case 8256:
                              if ((_DWORD)v16 != 4)
                                sub_10001F9D4("ASPMSPParseBufferToCxt: channel_halt_max_latency(8256): cfg 1 elements; (1*4) cfg byte"
                                  "s != (%d) buffer bytes",
                                  a2,
                                  a3,
                                  a4,
                                  a5,
                                  a6,
                                  a7,
                                  a8,
                                  v16);
                              if (v16 >= 8)
                                v22 = 1;
                              else
                                v22 = v16 >> 2;
                              if (sub_10002F594(a1, "channel_halt_max_latency", v11, 4u, v22))
                                goto LABEL_1372;
                              v9 = "ASPMSPParseBufferToCxt: channel_halt_max_latency(8256): Error adding 1 elements to context";
                              break;
                            case 8257:
                              if ((_DWORD)v16 != 8)
                                sub_10001F9D4("ASPMSPParseBufferToCxt: max_heap_usage_v2(8257): cfg 2 elements; (2*4) cfg bytes != (%d) buffer bytes",
                                  a2,
                                  a3,
                                  a4,
                                  a5,
                                  a6,
                                  a7,
                                  a8,
                                  v16);
                              if (v16 >= 0xC)
                                v22 = 2;
                              else
                                v22 = v16 >> 2;
                              if (sub_10002F594(a1, "max_heap_usage_v2", v11, 4u, v22))
                                goto LABEL_1372;
                              v9 = "ASPMSPParseBufferToCxt: max_heap_usage_v2(8257): Error adding 2 elements to context";
                              break;
                            default:
                              switch(v17)
                              {
                                case 16384:
                                  if ((_DWORD)v16 != 8)
                                    sub_10001F9D4("ASPMSPParseBufferToCxt: fw_version_identifier(16384): cfg 1 elements; (1*8) cfg by"
                                      "tes != (%d) buffer bytes",
                                      a2,
                                      a3,
                                      a4,
                                      a5,
                                      a6,
                                      a7,
                                      a8,
                                      v16);
                                  if (v16 >= 0x10)
                                    v22 = 1;
                                  else
                                    v22 = v16 >> 3;
                                  if (sub_10002F594(a1, "fw_version_identifier", v11, 8u, v22))
                                    goto LABEL_1372;
                                  v9 = "ASPMSPParseBufferToCxt: fw_version_identifier(16384): Error adding 1 elements to context";
                                  break;
                                case 16385:
                                  if ((_DWORD)v16 != 40)
                                    sub_10001F9D4("ASPMSPParseBufferToCxt: random_read_size_ratio(16385): cfg 5 elements; (5*8) cfg b"
                                      "ytes != (%d) buffer bytes",
                                      a2,
                                      a3,
                                      a4,
                                      a5,
                                      a6,
                                      a7,
                                      a8,
                                      v16);
                                  if (v16 >= 0x30)
                                    v22 = 5;
                                  else
                                    v22 = v16 >> 3;
                                  if (sub_10002F594(a1, "random_read_size_ratio", v11, 8u, v22))
                                    goto LABEL_1372;
                                  v9 = "ASPMSPParseBufferToCxt: random_read_size_ratio(16385): Error adding 5 elements to context";
                                  break;
                                case 16386:
                                  if ((_DWORD)v16 != 8)
                                    sub_10001F9D4("ASPMSPParseBufferToCxt: number_gracefull_read_terminations(16386): cfg 1 elements;"
                                      " (1*8) cfg bytes != (%d) buffer bytes",
                                      a2,
                                      a3,
                                      a4,
                                      a5,
                                      a6,
                                      a7,
                                      a8,
                                      v16);
                                  if (v16 >= 0x10)
                                    v22 = 1;
                                  else
                                    v22 = v16 >> 3;
                                  if (sub_10002F594(a1, "number_gracefull_read_terminations", v11, 8u, v22))goto LABEL_1372;
                                  v9 = "ASPMSPParseBufferToCxt: number_gracefull_read_terminations(16386): Error adding 1"
                                       " elements to context";
                                  break;
                                case 16387:
                                  if ((_DWORD)v16 != 8)
                                    sub_10001F9D4("ASPMSPParseBufferToCxt: active_time_bw_pg_acc(16387): cfg 1 elements; (1*8) cfg by"
                                      "tes != (%d) buffer bytes",
                                      a2,
                                      a3,
                                      a4,
                                      a5,
                                      a6,
                                      a7,
                                      a8,
                                      v16);
                                  if (v16 >= 0x10)
                                    v22 = 1;
                                  else
                                    v22 = v16 >> 3;
                                  if (sub_10002F594(a1, "active_time_bw_pg_acc", v11, 8u, v22))
                                    goto LABEL_1372;
                                  v9 = "ASPMSPParseBufferToCxt: active_time_bw_pg_acc(16387): Error adding 1 elements to context";
                                  break;
                                case 16388:
                                  if ((_DWORD)v16 != 8)
                                    sub_10001F9D4("ASPMSPParseBufferToCxt: num_pg_events(16388): cfg 1 elements; (1*8) cfg bytes != ("
                                      "%d) buffer bytes",
                                      a2,
                                      a3,
                                      a4,
                                      a5,
                                      a6,
                                      a7,
                                      a8,
                                      v16);
                                  if (v16 >= 0x10)
                                    v22 = 1;
                                  else
                                    v22 = v16 >> 3;
                                  if (sub_10002F594(a1, "num_pg_events", v11, 8u, v22))
                                    goto LABEL_1372;
                                  v9 = "ASPMSPParseBufferToCxt: num_pg_events(16388): Error adding 1 elements to context";
                                  break;
                                case 16389:
                                  if ((_DWORD)v16 != 128)
                                    sub_10001F9D4("ASPMSPParseBufferToCxt: algo_queue_depth(16389): cfg 16 elements; (16*8) cfg bytes"
                                      " != (%d) buffer bytes",
                                      a2,
                                      a3,
                                      a4,
                                      a5,
                                      a6,
                                      a7,
                                      a8,
                                      v16);
                                  if (v16 >= 0x88)
                                    v22 = 16;
                                  else
                                    v22 = v16 >> 3;
                                  if (sub_10002F594(a1, "algo_queue_depth", v11, 8u, v22))
                                    goto LABEL_1372;
                                  v9 = "ASPMSPParseBufferToCxt: algo_queue_depth(16389): Error adding 16 elements to context";
                                  break;
                                case 16390:
                                  if ((_DWORD)v16 != 128)
                                    sub_10001F9D4("ASPMSPParseBufferToCxt: parallel_slip_hist(16390): cfg 16 elements; (16*8) cfg byt"
                                      "es != (%d) buffer bytes",
                                      a2,
                                      a3,
                                      a4,
                                      a5,
                                      a6,
                                      a7,
                                      a8,
                                      v16);
                                  if (v16 >= 0x88)
                                    v22 = 16;
                                  else
                                    v22 = v16 >> 3;
                                  if (sub_10002F594(a1, "parallel_slip_hist", v11, 8u, v22))
                                    goto LABEL_1372;
                                  v9 = "ASPMSPParseBufferToCxt: parallel_slip_hist(16390): Error adding 16 elements to context";
                                  break;
                                case 16391:
                                  if ((_DWORD)v16 != 48)
                                    sub_10001F9D4("ASPMSPParseBufferToCxt: sys_halt_latency_hist(16391): cfg 6 elements; (6*8) cfg by"
                                      "tes != (%d) buffer bytes",
                                      a2,
                                      a3,
                                      a4,
                                      a5,
                                      a6,
                                      a7,
                                      a8,
                                      v16);
                                  if (v16 >= 0x38)
                                    v22 = 6;
                                  else
                                    v22 = v16 >> 3;
                                  if (sub_10002F594(a1, "sys_halt_latency_hist", v11, 8u, v22))
                                    goto LABEL_1372;
                                  v9 = "ASPMSPParseBufferToCxt: sys_halt_latency_hist(16391): Error adding 6 elements to context";
                                  break;
                                case 16392:
                                  if ((_DWORD)v16 != 48)
                                    sub_10001F9D4("ASPMSPParseBufferToCxt: channel_halt_latency_hist(16392): cfg 6 elements; (6*8) cf"
                                      "g bytes != (%d) buffer bytes",
                                      a2,
                                      a3,
                                      a4,
                                      a5,
                                      a6,
                                      a7,
                                      a8,
                                      v16);
                                  if (v16 >= 0x38)
                                    v22 = 6;
                                  else
                                    v22 = v16 >> 3;
                                  if (sub_10002F594(a1, "channel_halt_latency_hist", v11, 8u, v22))
                                    goto LABEL_1372;
                                  v9 = "ASPMSPParseBufferToCxt: channel_halt_latency_hist(16392): Error adding 6 elements to context";
                                  break;
                                case 16393:
                                  if ((_DWORD)v16 != 8)
                                    sub_10001F9D4("ASPMSPParseBufferToCxt: num_idle_die_read_cache_terminate(16393): cfg 1 elements; "
                                      "(1*8) cfg bytes != (%d) buffer bytes",
                                      a2,
                                      a3,
                                      a4,
                                      a5,
                                      a6,
                                      a7,
                                      a8,
                                      v16);
                                  if (v16 >= 0x10)
                                    v22 = 1;
                                  else
                                    v22 = v16 >> 3;
                                  if (sub_10002F594(a1, "num_idle_die_read_cache_terminate", v11, 8u, v22))goto LABEL_1372;
                                  v9 = "ASPMSPParseBufferToCxt: num_idle_die_read_cache_terminate(16393): Error adding 1 "
                                       "elements to context";
                                  break;
                                default:
                                  goto LABEL_1373;
                              }
                              goto LABEL_1981;
                          }
                          goto LABEL_1981;
                      }
LABEL_1372:
                      v8 = v8 + v22;
LABEL_1373:
                      v13 = &jpt_100033970;
                      break;
                  }
                  break;
              }
              break;
          }
          break;
      }
      goto LABEL_461;
  }
}

uint64_t sub_100036028(uint64_t result, const char *a2, const char *a3, uint64_t a4)
{
  _QWORD *v7;
  char *v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  char **v13;

  if (result)
  {
    v7 = (_QWORD *)result;
    v8 = (char *)malloc_type_calloc(1uLL, 0x78uLL, 0x102004060B2607BuLL);
    v9 = malloc_type_calloc(1uLL, 0x78uLL, 0x102004060B2607BuLL);
    v10 = v9;
    if (v8 && v9)
    {
      v11 = v7[1];
      if (v11 && (v12 = v7[3]) != 0)
      {
        *(_QWORD *)(v11 + 112) = v9;
        v13 = (char **)(v12 + 112);
      }
      else
      {
        *v7 = v9;
        v13 = (char **)(v7 + 2);
      }
      *v13 = v8;
      v7[1] = v9;
      v7[3] = v8;
      *((_QWORD *)v8 + 14) = 0;
      *((_QWORD *)v9 + 14) = 0;
      snprintf(v9, 0x63uLL, "%s%s", a2, a3);
      v10[99] = 0;
      snprintf(v8, 0x63uLL, "%llu", a4);
      v8[99] = 0;
      *((_QWORD *)v8 + 13) = a4;
      return 1;
    }
    else
    {
      if (v8)
        free(v8);
      if (v10)
        free(v10);
      return 0;
    }
  }
  return result;
}

double sub_10003614C(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  double result;

  if (a1)
  {
    v2 = *(_QWORD **)a1;
    if (v2)
    {
      do
      {
        v3 = (_QWORD *)v2[14];
        free(v2);
        v2 = v3;
      }
      while (v3);
    }
    v4 = *(_QWORD **)(a1 + 16);
    if (v4)
    {
      do
      {
        v5 = (_QWORD *)v4[14];
        free(v4);
        v4 = v5;
      }
      while (v5);
    }
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1000361A4(_QWORD *a1, const char *a2, const char *a3, uint64_t a4)
{
  char *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char **v13;
  uint64_t result;

  v8 = (char *)malloc_type_malloc(0x78uLL, 0x102004060B2607BuLL);
  v9 = malloc_type_malloc(0x78uLL, 0x102004060B2607BuLL);
  v10 = v9;
  v11 = a1[1];
  if (v11 && (v12 = a1[3]) != 0)
  {
    *(_QWORD *)(v11 + 112) = v9;
    v13 = (char **)(v12 + 112);
  }
  else
  {
    *a1 = v9;
    v13 = (char **)(a1 + 2);
  }
  *v13 = v8;
  a1[1] = v9;
  a1[3] = v8;
  *((_QWORD *)v8 + 14) = 0;
  v9[14] = 0;
  snprintf((char *)v9, 0x63uLL, "%s%s", a2, a3);
  *((_BYTE *)v10 + 99) = 0;
  result = snprintf(v8, 0x63uLL, "%llu", a4);
  v8[99] = 0;
  *((_QWORD *)v8 + 13) = a4;
  return result;
}

BOOL sub_100036290(uint64_t a1, uint64_t a2, char *a3, size_t *a4, _DWORD *a5, unsigned int *a6)
{
  int v9;
  size_t v10;
  uint64_t v11;
  tm *v12;
  unsigned int v13;
  size_t v14;
  _BOOL4 v15;
  char *v16;
  char *v17;
  size_t v18;
  char *v19;
  unsigned int v20;
  unsigned int v21;
  _DWORD *v22;
  uint64_t v23;
  unsigned int *v24;
  unint64_t v25;
  unint64_t v26;
  unsigned int v27;
  unsigned int *v28;
  unsigned int v29;
  unsigned int v30;
  const char *v31;
  size_t v32;
  BOOL v33;
  uint64_t v34;
  unsigned int v35;
  uint64_t v36;
  unsigned int v37;
  char v38;
  unsigned int *v39;
  const char *v40;
  int v41;
  int v42;
  const char *v43;
  unsigned int v44;
  unsigned int *v45;
  unsigned int v46;
  const char *v47;
  const char *v48;
  unsigned int v49;
  uint64_t v50;
  unsigned int v51;
  uint64_t v52;
  unsigned int v53;
  const char *v54;
  unsigned int v55;
  uint64_t v56;
  unsigned int v57;
  uint64_t v58;
  unsigned int v59;
  unsigned int v60;
  _BOOL8 result;
  unsigned int v62;
  uint64_t v63;
  unsigned int v64;
  char *v65;
  _DWORD *v68;
  char *v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  timeval v73;
  char v74[16];
  __int128 v75;
  char v76[8];
  uint64_t v77;
  uint64_t v78;

  *(_OWORD *)v74 = 0u;
  v75 = 0u;
  if (!a5)
    return 0;
  v9 = a5[3];
  v10 = *a4;
  v11 = a5[6];
  v73.tv_sec = 0;
  *(_QWORD *)&v73.tv_usec = 0;
  *(_QWORD *)v76 = 0;
  v77 = 0;
  v78 = 0;
  gettimeofday(&v73, 0);
  v12 = localtime(&v73.tv_sec);
  strftime(v76, 0x18uLL, "%Y-%m-%d %H:%M:%S", v12);
  __sprintf_chk(v74, 0, 0x20uLL, "%s.%03d", v76, v73.tv_usec / 1000);
  v13 = snprintf(a3, v10, "Captured at: %s\n", v74);
  v14 = v10 - v13;
  v15 = v10 <= v13;
  v16 = &a3[v13];
  v69 = a3;
  if (v10 > v13)
    v17 = &a3[v13];
  else
    v17 = a3;
  if (v10 > v13)
    v18 = v10 - v13;
  else
    v18 = v10;
  v68 = a5;
  if (*a6)
    goto LABEL_9;
  if (a5[1] >= 6u)
  {
    if (v10 > v13)
    {
      v62 = snprintf(&a3[v13], v14, "- ASP Snapshot - \n%s\n");
      goto LABEL_92;
    }
LABEL_94:
    v19 = 0;
    v15 = 1;
    goto LABEL_95;
  }
  if (v10 <= v13)
    goto LABEL_94;
  v62 = snprintf(&a3[v13], v14, "Key: \nT   - Timestamp\nE   - Erased bands during this time interval\nHR  - Host Reads (in 4k sectors)\nHW  - Host Writes (in 4k sectors)\nNR  - Nand Reads (in 4k sectors)\nNW  - Nand Writes (in 4k sectors)\nTH  - Time in Hysteresis in this time interval (in ms)\nGC  - Number of sectors (4k bytes) completed GC in this time interval\nW   - Number of wear level bands completed in this time interval\nBI  - Bands Intermediate (SLC) PendingErase\nBU  - Bands User (MLC) PendingErase\nV   - Number of Free Nodes\nBF  - Buffer Fragments/BufferHighWater\nP   - Percent of time in DoPreempt rather than DoNormal\nH   - Qos Delays: Normal/Extreme\nX   - Successful expedite commands/Failed expedite commands\n"
          "L   - Age of the oldest command in ms (calculated every second)/Qos Interval (in 100us units)\n"
          "C   - Command tags in use by host (Min/Max)S   - Number of free segs\n"
          "U   - Sectors of host unmaps\n"
          "RO  - Num read ops for this time interval: priority0/priority1/...\n"
          "RL  - Total Read Latency (in us) for this time interval: priority0/priority1/...\n"
          "RM  - Max Read Latency (int us) for this time interval: priority0/priority1/...\n"
          "WO  - Num write ops for this time interval: priority0/priority1/...\n"
          "WL  - Total write latency (in us) for this time interval: priority0/priority1/...\n"
          "WM  - Max write latency (in us) for this time interval: priority0/priority1/...\n"
          "\n");
LABEL_92:
  if (v14 <= v62)
    goto LABEL_94;
  v15 = 0;
  v17 = &v16[v62];
  v18 = v14 - v62;
LABEL_9:
  v19 = 0;
  v20 = v9 - 1;
  v21 = *a6;
  if (*a6 >= v9 - 1 || v15)
    goto LABEL_95;
  v19 = 0;
  v23 = a1;
  v22 = a5;
  v24 = (_DWORD *)((char *)a5 + v11);
  v25 = *v24;
  v64 = v9 - 1;
  v70 = v25;
  while (2)
  {
    v72 = v23 + v22[2] * v21;
    if (!*(_DWORD *)(v72 + v24[3]))
      goto LABEL_83;
    v65 = v19;
    if (!(_DWORD)v25)
      goto LABEL_81;
    v26 = 0;
    do
    {
      v27 = LOWORD(v24[7 * v26 + 2]);
      if (v27 < 2)
      {
        v39 = &v24[7 * v26];
        v42 = *((unsigned __int8 *)v39 + 20);
        v40 = (const char *)(v39 + 5);
        v41 = v42;
        if (!v42)
          goto LABEL_78;
        v43 = fmtcheck(v40, "%u");
        v44 = snprintf(v17, v18, v43, *(unsigned int *)(v72 + v24[7 * v26 + 3]), v63);
      }
      else
      {
        if (v27 != 2)
        {
          if (v27 == 3)
          {
            v28 = &v24[7 * v26];
            v29 = v28[4];
            v30 = v29 / 0xC;
            v71 = (char *)(v28 + 5);
            v31 = fmtcheck((const char *)v28 + 20, "%s");
            v32 = snprintf(v17, v18, v31, "O");
            v33 = v18 <= v32;
            if (v18 <= v32)
              v32 = 0;
            v17 += v32;
            v18 -= v32;
            if (v29 >= 0xC)
            {
              v34 = 0;
              if (v30 <= 1)
                v35 = 1;
              else
                v35 = v29 / 0xC;
              v36 = 12 * v35;
              do
              {
                if (v33)
                {
                  v33 = 1;
                }
                else
                {
                  if (v34)
                    v37 = snprintf(v17, v18, "/%4u");
                  else
                    v37 = snprintf(v17, v18, "%4u");
                  if (v18 <= v37)
                  {
                    v33 = 1;
                  }
                  else
                  {
                    v17 += v37;
                    v18 -= v37;
                    v33 = 0;
                  }
                }
                v34 += 12;
              }
              while (v36 != v34);
            }
            if (v33)
            {
              v38 = 1;
            }
            else
            {
              v48 = fmtcheck(v71, "%s");
              v49 = snprintf(v17, v18, v48, "L");
              if (v18 <= v49)
              {
                v38 = 1;
              }
              else
              {
                v17 += v49;
                v18 -= v49;
                v38 = 0;
              }
            }
            if (v29 >= 0xC)
            {
              v50 = 0;
              if (v30 <= 1)
                v51 = 1;
              else
                v51 = v29 / 0xC;
              v52 = 12 * v51;
              do
              {
                if ((v38 & 1) != 0)
                {
                  v38 = 1;
                }
                else
                {
                  if (v50)
                    v53 = snprintf(v17, v18, "/%7u");
                  else
                    v53 = snprintf(v17, v18, "%7u");
                  if (v18 <= v53)
                  {
                    v38 = 1;
                  }
                  else
                  {
                    v17 += v53;
                    v18 -= v53;
                    v38 = 0;
                  }
                }
                v50 += 12;
              }
              while (v52 != v50);
            }
            if ((v38 & 1) != 0)
            {
              v41 = 1;
            }
            else
            {
              v54 = fmtcheck(v71, "%s");
              v55 = snprintf(v17, v18, v54, "M");
              if (v18 <= v55)
              {
                v41 = 1;
              }
              else
              {
                v17 += v55;
                v18 -= v55;
                v41 = 0;
              }
            }
            v25 = v70;
            if (v29 >= 0xC)
            {
              v56 = 0;
              if (v30 <= 1)
                v57 = 1;
              else
                v57 = v30;
              v58 = 12 * v57;
              do
              {
                if ((v41 & 1) != 0)
                {
                  v41 = 1;
                }
                else
                {
                  if (v56)
                    v59 = snprintf(v17, v18, "/%5u");
                  else
                    v59 = snprintf(v17, v18, "%5u");
                  if (v18 <= v59)
                  {
                    v41 = 1;
                  }
                  else
                  {
                    v17 += v59;
                    v18 -= v59;
                    v41 = 0;
                  }
                }
                v56 += 12;
              }
              while (v58 != v56);
            }
          }
          else
          {
            v41 = 0;
          }
          goto LABEL_78;
        }
        v45 = &v24[7 * v26];
        v46 = *(_DWORD *)(v72 + v45[3]);
        v47 = fmtcheck((const char *)v45 + 20, "%u %u");
        v44 = snprintf(v17, v18, v47, v46 / 0x3E8uLL, v46 % 0x3E8 / 0xAuLL);
      }
      if (v18 <= v44)
        goto LABEL_89;
      v41 = 0;
      v17 += v44;
      v18 -= v44;
LABEL_78:
      ++v26;
    }
    while (v26 < v25 && !v41);
    if ((v41 & 1) == 0)
    {
LABEL_81:
      v60 = snprintf(v17, v18, "\n");
      if (v18 > v60)
      {
        v17 += v60;
        v18 -= v60;
        v19 = (char *)(v17 - v69);
        v23 = a1;
        v22 = v68;
        v20 = v64;
LABEL_83:
        v21 = *a6 + 1;
        *a6 = v21;
        if (v21 >= v20)
        {
          v15 = 0;
          goto LABEL_95;
        }
        continue;
      }
    }
    break;
  }
LABEL_89:
  ++*a6;
  v15 = 1;
  v19 = v65;
LABEL_95:
  result = !v15;
  v19[(_QWORD)v69] = 0;
  *a4 = (size_t)(v19 + 1);
  return result;
}

uint64_t sub_1000368F4(uint64_t a1, unint64_t a2, char *__str, size_t *a4)
{
  size_t *v4;
  unint64_t v8;
  unsigned int v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  int v16;
  unsigned int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  _DWORD *v39;
  int v40;
  char *v41;
  unsigned int v42;
  uint64_t v43;
  char *v44;
  size_t v45;
  unsigned int v46;
  unsigned int v47;
  uint64_t v48;
  char *v49;
  size_t v50;
  unsigned int v51;
  unsigned int v52;
  uint64_t v53;
  char *v54;
  size_t v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  unsigned int v60;
  char *v61;
  size_t v62;
  uint64_t v63;
  unsigned int v64;
  unsigned int v65;
  char *v66;
  size_t v67;
  uint64_t v68;
  unsigned int v69;
  unsigned int v70;
  char *v71;
  size_t v72;
  uint64_t v73;
  unsigned int v74;
  unsigned int v75;
  uint64_t v76;
  unsigned int v77;
  int v79;
  uint64_t v80;
  size_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  int v87;
  uint64_t v88;

  v4 = a4;
  v8 = *a4;
  v9 = snprintf(__str, *a4, "Key: \nT   - Timestamp\nE   - Erased bands during this time interval\nHR  - Host Reads (in 4k sectors)\nHW  - Host Writes (in 4k sectors)\nNR  - Nand Reads (in 4k sectors)\nNW  - Nand Writes (in 4k sectors)\nTH  - Time in Hysteresis in this time interval (in ms)\nGC  - Number of sectors (4k bytes) completed GC in this time interval\nW   - Number of wear level bands completed in this time interval\nBI  - Bands Intermediate (SLC) PendingErase\nBU  - Bands User (MLC) PendingErase\nV   - Number of Free Nodes\nBF  - Buffer Fragments/BufferHighWater\nP   - Percent of time in DoPreempt rather than DoNormal\nH   - Qos Delays: Normal/Extreme\nX   - Successful expedite commands/Failed expedite commands\n"
         "L   - Age of the oldest command in ms (calculated every second)/Qos Interval (in 100us units)\n"
         "C   - Command tags in use by host (Min/Max)S   - Number of free segs\n"
         "U   - Sectors of host unmaps\n"
         "RO  - Num read ops for this time interval: priority0/priority1/...\n"
         "RL  - Total Read Latency (in us) for this time interval: priority0/priority1/...\n"
         "RM  - Max Read Latency (int us) for this time interval: priority0/priority1/...\n"
         "WO  - Num write ops for this time interval: priority0/priority1/...\n"
         "WL  - Total write latency (in us) for this time interval: priority0/priority1/...\n"
         "WM  - Max write latency (in us) for this time interval: priority0/priority1/...\n"
         "\n");
  if (v8 > v9)
  {
    v10 = v9;
    v11 = &__str[v9];
    v12 = v8 - v10;
    if ((a2 / 0xF8))
    {
      v80 = (a2 / 0xF8);
      v81 = v4;
      v13 = 0;
      v14 = a1 + 68;
      v84 = a1 + 76;
      v85 = a1 + 72;
      v88 = a1;
      v82 = a1;
LABEL_4:
      v83 = v13;
      v15 = (int *)(a1 + 248 * v13);
      v87 = v15[26];
      v16 = v15[28];
      v86 = v15[27];
      v17 = v15[38];
      v18 = v15[39];
      v19 = v15[29];
      v20 = v15[30];
      v21 = v15[31];
      v22 = v15[32];
      v24 = v15[35];
      v23 = v15[36];
      v26 = v15[43];
      v25 = v15[44];
      v27 = v15[46];
      v28 = v15[47];
      v29 = *v15;
      v30 = v15[1];
      v31 = v15[49];
      v32 = v15[50];
      v34 = v15[41];
      v33 = v15[42];
      v36 = v15[52];
      v35 = v15[53];
      v37 = v15[40];
      v38 = v15[51];
      v40 = v15[14];
      v39 = v15 + 14;
      v79 = v34;
      v41 = v11;
      v42 = snprintf(v11, v12, "T=%04u E=%02u HR=%4u HW=%4u NR=%4u NW=%4u TH=%8u.%02u GC=%4u W=%2u BI=%3u BU=%3u V=%5u BF=%2u/%2u P=%2u H=%2u/%2u X=%2u/%2u L=%3u/%3u C=%2u/%2u S=%4u U=%8u RO=%4u", v29, v87, v86, v16, v19, v20, v17 / 0x3E8, v17 % 0x3E8 / 0xA, v21, v22, v24, v23, v25, v27, v28,
              v30,
              v37,
              v18,
              v31,
              v32,
              v33,
              v26,
              v36,
              v35,
              v79,
              v38,
              v40);
      if (v12 > v42)
      {
        v43 = 0;
        v44 = &v41[v42];
        v45 = v12 - v42;
        while (1)
        {
          v46 = snprintf(v44, v45, "/%4u", *(_DWORD *)(v14 + v43));
          if (v45 <= v46)
            break;
          v43 += 12;
          v44 += v46;
          v45 -= v46;
          if (v43 == 36)
          {
            v47 = snprintf(v44, v45, " RL=%7u", v39[1]);
            if (v45 > v47)
            {
              v48 = 0;
              v49 = &v44[v47];
              v50 = v45 - v47;
              while (1)
              {
                v51 = snprintf(v49, v50, "/%7u", *(_DWORD *)(v85 + v48));
                if (v50 <= v51)
                  break;
                v48 += 12;
                v49 += v51;
                v50 -= v51;
                if (v48 == 36)
                {
                  v52 = snprintf(v49, v50, " RM=%5u", v39[2]);
                  if (v50 > v52)
                  {
                    v53 = 0;
                    v54 = &v49[v52];
                    v55 = v50 - v52;
                    while (1)
                    {
                      v56 = snprintf(v54, v55, "/%5u", *(_DWORD *)(v84 + v53));
                      if (v55 <= v56)
                        break;
                      v53 += 12;
                      v54 += v56;
                      v55 -= v56;
                      if (v53 == 36)
                      {
                        v57 = v82 + 248 * v83;
                        v59 = *(_DWORD *)(v57 + 8);
                        v58 = v57 + 8;
                        v60 = snprintf(v54, v55, " WO=%4u", v59);
                        if (v55 > v60)
                        {
                          v61 = &v54[v60];
                          v62 = v55 - v60;
                          v63 = 20;
                          while (1)
                          {
                            v64 = snprintf(v61, v62, "/%4u", *(_DWORD *)(v88 + v63));
                            if (v62 <= v64)
                              break;
                            v63 += 12;
                            v61 += v64;
                            v62 -= v64;
                            if (v63 == 56)
                            {
                              v65 = snprintf(v61, v62, " WL=%7u", *(_DWORD *)(v58 + 4));
                              if (v62 > v65)
                              {
                                v66 = &v61[v65];
                                v67 = v62 - v65;
                                v68 = 24;
                                while (1)
                                {
                                  v69 = snprintf(v66, v67, "/%7u", *(_DWORD *)(v88 + v68));
                                  if (v67 <= v69)
                                    break;
                                  v68 += 12;
                                  v66 += v69;
                                  v67 -= v69;
                                  if (v68 == 60)
                                  {
                                    v70 = snprintf(v66, v67, " WM=%5u", *(_DWORD *)(v58 + 8));
                                    if (v67 > v70)
                                    {
                                      v71 = &v66[v70];
                                      v72 = v67 - v70;
                                      v73 = 28;
                                      while (1)
                                      {
                                        v74 = snprintf(v71, v72, "/%5u", *(_DWORD *)(v88 + v73));
                                        if (v72 <= v74)
                                          break;
                                        v73 += 12;
                                        v71 += v74;
                                        v72 -= v74;
                                        if (v73 == 64)
                                        {
                                          v75 = snprintf(v71, v72, "\n");
                                          if (v72 <= v75)
                                            return 0;
                                          v76 = v75;
                                          v11 = &v71[v75];
                                          v12 = v72 - v76;
                                          a1 = v82;
                                          v13 = v83 + 1;
                                          v14 += 248;
                                          v84 += 248;
                                          v85 += 248;
                                          v88 += 248;
                                          v4 = v81;
                                          if (v83 + 1 != v80)
                                            goto LABEL_4;
                                          goto LABEL_30;
                                        }
                                      }
                                    }
                                    return 0;
                                  }
                                }
                              }
                              return 0;
                            }
                          }
                        }
                        return 0;
                      }
                    }
                  }
                  return 0;
                }
              }
            }
            return 0;
          }
        }
      }
    }
    else
    {
LABEL_30:
      v77 = snprintf(v11, v12, "\n");
      if (v77 < v12)
      {
        *v4 += v77 - v12;
        return 1;
      }
    }
  }
  return 0;
}

CFDictionaryRef ASP_GetIndirectionTableStatistics()
{
  const __CFDictionary *v0;
  CFDictionaryRef v1;
  int v2;
  int v3;
  unint64_t v4;
  unint64_t v5;
  const __CFDictionary *v6;
  unint64_t *v7;
  unint64_t v8;
  unint64_t v9;
  CFDictionaryRef v10;
  uint64_t v12;
  float v13;
  unint64_t v14;
  unint64_t valuePtr;
  void *v16;
  void *values;
  CFTypeRef cf;
  CFTypeRef v19;
  void *keys[3];

  v16 = IND_POOL_KEY[0];
  v12 = 0;
  v0 = (const __CFDictionary *)sub_100037338(10, &v12);
  v1 = v0;
  if (v0)
  {
    v13 = 0.0;
    keys[0] = IND_POOL_SIZE_KEY[0];
    keys[1] = IND_POOL_FREE_KEY[0];
    keys[2] = IND_POOL_FULL_KEY;
    if ((v12 & 0xFFFFFFF8) != 0)
    {
      v2 = 0;
      v3 = 0;
      v4 = 0;
      v5 = 0;
      v6 = v0;
      do
      {
        v9 = *(_QWORD *)v6;
        v7 = (unint64_t *)((char *)v6 + 8);
        v8 = v9;
        if ((_DWORD)v9 == 12)
        {
          v4 = *v7;
          v2 = 1;
        }
        else if ((_DWORD)v8 == 13)
        {
          v5 = *v7;
          v3 = 1;
        }
        if ((v2 & v3 & 1) != 0)
          break;
        v6 = (const __CFDictionary *)&v7[HIDWORD(v8)];
      }
      while (v6 < (const __CFDictionary *)((char *)v0 + (v12 & 0xFFFFFFF8)));
      v14 = v4;
      valuePtr = v5;
      if (v5)
        v13 = 1.0 - (float)((float)v4 / (float)v5);
    }
    else
    {
      v14 = 0;
      valuePtr = 0;
    }
    values = CFNumberCreate(0, kCFNumberSInt64Type, &valuePtr);
    cf = CFNumberCreate(0, kCFNumberSInt64Type, &v14);
    v19 = CFNumberCreate(0, kCFNumberFloat32Type, &v13);
    v10 = CFDictionaryCreate(0, (const void **)keys, (const void **)&values, 3, &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
    CFRelease(values);
    CFRelease(cf);
    CFRelease(v19);
    free(v1);
    keys[0] = v10;
    v1 = CFDictionaryCreate(0, (const void **)&v16, (const void **)keys, 1, &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
    CFRelease(keys[0]);
  }
  return v1;
}

void *sub_100036FB0(char **a1, int a2, int a3, int a4, _QWORD *a5, char a6, char a7)
{
  char **v13;
  int v14;
  unsigned int v15;
  uint64_t v16;
  size_t v17;
  void *v18;
  void *v19;
  char **v21;

  v13 = a1;
  v21 = 0;
  *a5 = 0;
  if (!a1 && (!sub_1000373D0(&v21) || (v13 = v21) == 0 || !*((_DWORD *)v21 + 4)))
  {
    fwrite("Err: Finding internal NAND exporter failed for fetch tunnel buffer.\n", 0x44uLL, 1uLL, __stderrp);
LABEL_11:
    v19 = 0;
    goto LABEL_14;
  }
  v14 = a3;
  v15 = sub_100037154((uint64_t)v13, a2, a3, a4, a7);
  if (!v15)
  {
    fprintf(__stderrp, "failed to get data size for cmd option %d\n", a2);
    goto LABEL_11;
  }
  v16 = v15;
  v17 = (vm_page_size + v15 - 1) / vm_page_size * vm_page_size;
  v18 = malloc_type_valloc(v17, 0x7C7CDE6BuLL);
  v19 = v18;
  if (v18)
  {
    bzero(v18, v17);
    if ((sub_100037218((uint64_t)v13, a2, v14, a4, v19, v17, a6, a7) & 1) != 0)
    {
      *a5 = v16;
    }
    else
    {
      free(v19);
      v19 = 0;
      *a5 = 0;
    }
  }
  else
  {
    fwrite("can't allocate buffer!\n", 0x17uLL, 1uLL, __stderrp);
  }
LABEL_14:
  if (v21)
    sub_100037518((uint64_t)v21);
  return v19;
}

uint64_t sub_100037154(uint64_t a1, int a2, int a3, int a4, char a5)
{
  kern_return_t v7;
  uint64_t result;
  size_t outputStructCnt;
  unsigned int outputStruct;
  _DWORD inputStruct[3];
  uint64_t v12;
  int v13;

  v13 = 0;
  v12 = 0;
  outputStruct = 0;
  inputStruct[0] = a2;
  outputStructCnt = 4;
  inputStruct[2] = a4;
  inputStruct[1] = a3 | 1;
  v7 = IOConnectCallStructMethod(*(_DWORD *)(a1 + 16), *(_DWORD *)(a1 + 28), inputStruct, 0x18uLL, &outputStruct, &outputStructCnt);
  if (v7)
  {
    if ((a5 & 1) == 0)
      fprintf(__stderrp, "Error calling CoreDebugTunnel method! - 0x%X\n", v7);
    return 0;
  }
  else
  {
    result = outputStruct;
    if (!outputStruct && (a5 & 1) == 0)
    {
      fprintf(__stderrp, "SizeOnly for tunnel command 0x%x returned 0\n", a2);
      return outputStruct;
    }
  }
  return result;
}

uint64_t sub_100037218(uint64_t a1, int a2, int a3, int a4, void *outputStruct, size_t a6, char a7, char a8)
{
  uint64_t v9;
  kern_return_t v15;
  size_t v16;
  _DWORD inputStruct[3];
  uint64_t v19;
  int v20;
  size_t outputStructCnt;

  LOBYTE(v9) = a7;
  outputStructCnt = a6;
  v20 = 0;
  v19 = 0;
  while (1)
  {
    inputStruct[0] = a2;
    inputStruct[1] = a3;
    inputStruct[2] = a4;
    v15 = IOConnectCallStructMethod(*(_DWORD *)(a1 + 16), *(_DWORD *)(a1 + 28), inputStruct, 0x18uLL, outputStruct, &outputStructCnt);
    if (v15 != -536870211)
      break;
    if ((v9 & 1) == 0)
      goto LABEL_10;
    if ((a8 & 1) == 0)
      fprintf(__stderrp, "CoreDebugTunnel 0x%x returned kIOReturnNoMemory\n", a2);
    v16 = outputStructCnt;
    outputStructCnt = vm_page_size;
    v9 = 1;
    if (vm_page_size == v16)
      return v9;
  }
  if (!v15)
    return 1;
LABEL_10:
  if ((a8 & 1) == 0)
    fprintf(__stderrp, "Error calling CoreDebugTunnel method! - 0x%X\n", v15);
  return 0;
}

void *sub_100037338(int a1, _QWORD *a2)
{
  return sub_100036FB0(0, a1, 0, 0, a2, 0, 0);
}

void *sub_100037358()
{
  return &unk_10007FD58;
}

void *sub_100037364()
{
  return &unk_10007FD60;
}

void *sub_100037370()
{
  return &unk_10007FD68;
}

void *sub_10003737C()
{
  return &unk_10007FD78;
}

void *sub_100037388()
{
  return &unk_10007FD80;
}

void *sub_100037394()
{
  return &unk_10007FD88;
}

void *sub_1000373A0()
{
  return &unk_10007FD90;
}

void *sub_1000373AC()
{
  return &unk_10007FD98;
}

void *sub_1000373B8()
{
  return &unk_10007FD70;
}

void *sub_1000373C4()
{
  return &unk_10007FDA0;
}

char *sub_1000373D0(char ***a1)
{
  int v2;
  int *v3;
  char *result;
  char **v5;
  const __CFDictionary *v6;
  io_service_t MatchingService;
  io_object_t v8;
  const char *v9;
  io_connect_t connect;

  connect = 0;
  *a1 = 0;
  v2 = pthread_mutex_trylock(&stru_10007FDA8);
  if (v2)
  {
    if (v2 != 16
      || (syslog(3, "Error: NANDInfo: NANDExporter: serializeAccess already locked. waiting for lock !\n"),
          pthread_mutex_lock(&stru_10007FDA8)))
    {
      v3 = __error();
      syslog(3, "Error: NANDInfo: NANDExporter: pthread_mutex_trylock() (%d) failed \n", *v3);
      return 0;
    }
  }
  syslog(5, "NANDInfo: NANDExporter object locked ! \n");
  v5 = &off_10007FDE8;
  result = off_10007FDE8;
  if (!off_10007FDE8)
  {
LABEL_11:
    v8 = 0;
    goto LABEL_12;
  }
  while (1)
  {
    v6 = IOServiceMatching(result);
    if (!v6)
      goto LABEL_10;
    MatchingService = IOServiceGetMatchingService(kIOMainPortDefault, v6);
    if (!MatchingService)
      goto LABEL_10;
    v8 = MatchingService;
    if (!IOServiceOpen(MatchingService, mach_task_self_, 0, &connect))
      break;
    IOServiceClose(connect);
    connect = 0;
    IOObjectRelease(v8);
LABEL_10:
    v9 = v5[21];
    v5 += 21;
    result = (char *)v9;
    if (!v9)
      goto LABEL_11;
  }
  syslog(5, "NANDInfo: findNandExporter_tunnel: Controller found: %s\n", *v5);
  result = (char *)1;
LABEL_12:
  *((_DWORD *)v5 + 4) = connect;
  *((_DWORD *)v5 + 5) = v8;
  *a1 = v5;
  return result;
}

uint64_t sub_100037518(uint64_t a1)
{
  io_connect_t v2;
  io_object_t v3;

  v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    IOServiceClose(v2);
    *(_DWORD *)(a1 + 16) = 0;
  }
  v3 = *(_DWORD *)(a1 + 20);
  if (v3)
  {
    IOObjectRelease(v3);
    *(_DWORD *)(a1 + 20) = 0;
  }
  syslog(5, "NANDInfo: NANDExporter object unlocked ! \n");
  return pthread_mutex_unlock(&stru_10007FDA8);
}

uint64_t nand_get_snapshot(uint64_t a1, char *a2, size_t a3, size_t *a4)
{
  _DWORD *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  size_t v12;
  uint64_t v13;
  int v14[2];
  unsigned int v15;

  v13 = 0;
  *(_QWORD *)v14 = 0;
  v12 = a3;
  v7 = sub_100037338(145, &v13);
  v8 = sub_100037338(22, v14);
  if (!v8)
    return 5;
  v9 = v8;
  if (v7 && v7[1] >= 6u)
  {
    v15 = 0;
    if (sub_100036290((uint64_t)v8, *(uint64_t *)v14, a2, &v12, v7, &v15))
      v10 = 0;
    else
      v10 = 52;
    *a4 = v12;
    free(v9);
    goto LABEL_14;
  }
  *a4 = a3;
  if (sub_1000368F4((uint64_t)v8, *(unint64_t *)v14, a2, a4))
    v10 = 0;
  else
    v10 = 3;
  free(v9);
  if (v7)
LABEL_14:
    free(v7);
  return v10;
}

void sub_100037668(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "No parent record for %@", (uint8_t *)&v2, 0xCu);
}

void sub_1000376DC(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_fault_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_FAULT, "HangTracer: pathForPid was found invalid UTF8 string, trying ascii encoding = %@", (uint8_t *)&v2, 0xCu);
}

void sub_100037750()
{
  uint64_t v0;
  NSObject *v1;
  uint8_t v2[12];
  __int16 v3;
  uint64_t v4;

  sub_100011D98();
  v3 = 2080;
  v4 = v0;
  sub_100011DAC((void *)&_mh_execute_header, v1, (uint64_t)v1, "unable to write to compressed file %s, error: %s", v2);
  sub_100011CA4();
}

void sub_1000377C4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100011D38();
  sub_100011CF8((void *)&_mh_execute_header, v0, v1, "Finished parsing the reason string, attempting to move tailspin from the spool directory", v2, v3, v4, v5, v6);
  sub_100011D20();
}

void sub_1000377F0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100011D38();
  sub_100011CF8((void *)&_mh_execute_header, v0, v1, "Sentry tailspin detected.", v2, v3, v4, v5, v6);
  sub_100011D20();
}

void sub_10003781C()
{
  __assert_rtn("postNotificationForSentryTailspin", "hangreporter.m", 1972, "refNumber != nil");
}

void sub_100037844()
{
  __assert_rtn("postNotificationForSentryTailspin", "hangreporter.m", 1973, "newPath != nil");
}

void sub_10003786C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100011D38();
  sub_100011CF8((void *)&_mh_execute_header, v0, v1, "Posting com.apple.hangreporter.processing notification", v2, v3, v4, v5, v6);
  sub_100011D20();
}

void sub_100037898()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100011D38();
  sub_100011D88((void *)&_mh_execute_header, v0, v1, "Unable to find slowest fence client despite signsposts in tailspin", v2, v3, v4, v5, v6);
  sub_100011D20();
}

void sub_1000378C4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100011D38();
  sub_100011D88((void *)&_mh_execute_header, v0, v1, "Did not attempt to update fence hang's information", v2, v3, v4, v5, v6);
  sub_100011D20();
}

void sub_1000378F0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100011D98();
  sub_100011CE8((void *)&_mh_execute_header, v0, v1, "apfs Volume Info: %@", v2, v3, v4, v5, v6);
  sub_100011CA4();
}

void sub_100037950()
{
  __assert_rtn("APFSVolumeInfo", "hangreporter.m", 251, "!apfsVolumesInfo[@(registryEntryName)]");
}

void sub_100037978(unint64_t a1, NSObject *a2, double a3)
{
  void *v6;
  id v7;
  __CFString *v8;
  void *v9;
  int v10;
  double v11;
  __int16 v12;
  id v13;
  __int16 v14;
  void *v15;

  v6 = (void *)objc_claimAutoreleasedReturnValue(+[HTPrefs sharedPrefs](HTPrefs, "sharedPrefs"));
  v7 = objc_msgSend(v6, "runloopHangTimeoutDurationMSec");
  v8 = sub_100006030(a1);
  v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  v10 = 134218498;
  v11 = a3;
  v12 = 2048;
  v13 = v7;
  v14 = 2112;
  v15 = v9;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "Should capture heavy log due to hang duration of %.4f (pref is %llu), type %@", (uint8_t *)&v10, 0x20u);

}

void sub_100037A64()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100011D38();
  sub_100011CF8((void *)&_mh_execute_header, v0, v1, "Should capture heavy log due to user switched away hang", v2, v3, v4, v5, v6);
  sub_100011D20();
}

void sub_100037A90()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100011D98();
  sub_100011CE8((void *)&_mh_execute_header, v0, v1, "Info Dict: %@", v2, v3, v4, v5, v6);
  sub_100011CA4();
}

void sub_100037AF0(uint64_t a1, void *a2, NSObject *a3)
{
  void *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  void *v10;

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "debugDescription"));
  v7 = 138412546;
  v8 = a1;
  v9 = 2112;
  v10 = v5;
  sub_100011DAC((void *)&_mh_execute_header, a3, v6, "Post Processing %@: No hang in info dict array %@", (uint8_t *)&v7);

  sub_100011DA4();
}

void sub_100037B98(int a1, NSObject *a2)
{
  _DWORD v2[2];

  v2[0] = 67109120;
  v2[1] = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "No fence hangs to update (%d previously attempted)", (uint8_t *)v2, 8u);
  sub_100011D20();
}

void sub_100037C08(int a1, NSObject *a2)
{
  _DWORD v2[2];

  v2[0] = 67109120;
  v2[1] = a1;
  _os_log_fault_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_FAULT, "Update to create ktrace session to update %d fence hangs", (uint8_t *)v2, 8u);
  sub_100011D20();
}

void sub_100037C78(int a1, NSObject *a2)
{
  int v2;
  uint64_t v3;
  __int16 v4;
  int v5;

  v2 = 134218240;
  v3 = 100;
  v4 = 1024;
  v5 = a1;
  _os_log_fault_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_FAULT, "Timed out (%lld) parsing trace buffer to update %d fence hangs", (uint8_t *)&v2, 0x12u);
  sub_100011CA4();
}

void sub_100037CF8()
{
  uint64_t v0;
  os_log_t v1;
  int v2;
  int v3;

  sub_100011C4C();
  sub_100011C90((void *)&_mh_execute_header, v0, v1, "Update to start ktrace session to update %d fence hangs: %d", v2, v3);
  sub_100011CA4();
}

void sub_100037D58()
{
  uint64_t v0;
  os_log_t v1;
  int v2;
  int v3;

  sub_100011C4C();
  sub_100011C90((void *)&_mh_execute_header, v0, v1, "Update to set callback for kEventFenceHandle for ktrace session to update %d fence hangs: %d", v2, v3);
  sub_100011CA4();
}

void sub_100037DB8()
{
  uint64_t v0;
  os_log_t v1;
  int v2;
  int v3;

  sub_100011C4C();
  sub_100011C90((void *)&_mh_execute_header, v0, v1, "Update to set callback for kEventFenceTimedOut for ktrace session to update %d fence hangs: %d", v2, v3);
  sub_100011CA4();
}

void sub_100037E18()
{
  uint64_t v0;
  os_log_t v1;
  int v2;
  int v3;

  sub_100011C4C();
  sub_100011C90((void *)&_mh_execute_header, v0, v1, "Update to set callback for kEventFence for ktrace session to update %d fence hangs: %d", v2, v3);
  sub_100011CA4();
}

void sub_100037E78()
{
  uint64_t v0;
  os_log_t v1;
  int v2;
  int v3;

  sub_100011C4C();
  sub_100011C90((void *)&_mh_execute_header, v0, v1, "Update to set file for ktrace session to update %d fence hangs: %d", v2, v3);
  sub_100011CA4();
}

void sub_100037ED8()
{
  os_log_t v0;
  uint8_t v1[24];

  sub_100011C4C();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "Updating %d fence hangs (%d previously attempted)", v1, 0xEu);
  sub_100011CA4();
}

void sub_100037F48()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100011D98();
  sub_100011CE8((void *)&_mh_execute_header, v0, v1, "Beginning augmenting tailspin at %@ with symbols", v2, v3, v4, v5, v6);
  sub_100011CA4();
}

void sub_100037FA8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100011D08(__stack_chk_guard);
  sub_100011C64();
  sub_100011D28((void *)&_mh_execute_header, v0, v1, "Fence_End, fence=%llu, pid=%d, tid=%llu, time=%llu", v2, v3, v4, v5, v6);
  sub_100011DB8();
}

void sub_100038008()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100011D08(__stack_chk_guard);
  sub_100011C64();
  sub_100011D28((void *)&_mh_execute_header, v0, v1, "Fence_Start, fence=%llu, pid=%d, tid=%llu, time=%llu", v2, v3, v4, v5, v6);
  sub_100011DB8();
}

void sub_100038068()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100011D08(__stack_chk_guard);
  sub_100011C64();
  sub_100011D28((void *)&_mh_execute_header, v0, v1, "Fence_TimedOut, fence=%llu, pid=%d, tid=%llu, time=%llu", v2, v3, v4, v5, v6);
  sub_100011DB8();
}

void sub_1000380C8()
{
  uint64_t v0;
  os_log_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  sub_100011D6C(__stack_chk_guard);
  sub_100011CAC();
  sub_100011D58((void *)&_mh_execute_header, v0, v1, "Handle_End, fence=%llu, handle=%llu, pid=%d, foundpid=%d, tid=%llu, time=%llu", v2, v3, v4, v5, v6, v7);
  sub_100011DA4();
}

void sub_100038128()
{
  uint64_t v0;
  os_log_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  sub_100011D6C(__stack_chk_guard);
  sub_100011CAC();
  sub_100011D58((void *)&_mh_execute_header, v0, v1, "Handle_Start, fence=%llu, handle=%llu, pid=%d, foundpid=%d, tid=%llu, time=%llu", v2, v3, v4, v5, v6, v7);
  sub_100011DA4();
}

void sub_100038188(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint64_t v3;

  LODWORD(v3) = 134218240;
  HIDWORD(v3) = a2;
  sub_100011D44((void *)&_mh_execute_header, a2, a3, "Null pid in ktrace data: checked cache and found threadid %llu is from pid %i", v3, HIDWORD(a2));
  sub_100011CA4();
}

void sub_100038200()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100011D98();
  sub_100011CE8((void *)&_mh_execute_header, v0, v1, "UpdateInfoForFenceHangs checking fence=%lli", v2, v3, v4, v5, v6);
  sub_100011CA4();
}

void sub_100038260(_QWORD *a1, uint64_t a2, NSObject *a3)
{
  __int128 v3;

  LODWORD(v3) = 134218240;
  *(_QWORD *)((char *)&v3 + 4) = *a1;
  sub_100011D44((void *)&_mh_execute_header, a2, a3, "Null pid in ktrace data: iterated SA threads found threadid %llu is from pid %i", (_QWORD)v3, HIDWORD(*a1));
  sub_100011CA4();
}

void sub_1000382E0(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "No valid startState — first known display state change event must be after hang start. Defaulting to the first display state change entry.", v1, 2u);
}

void sub_100038320()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100012984();
  sub_10001299C((void *)&_mh_execute_header, v0, v1, "end index  : %d, state: %d", v2, v3, v4, v5, v6);
}

void sub_100038388()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100012984();
  sub_10001299C((void *)&_mh_execute_header, v0, v1, "start index: %d, state: %d", v2, v3, v4, v5, v6);
}

void sub_1000383F0()
{
  __assert_rtn("startHangReporterService", "HangReporterService.m", 211, "listener == nil");
}

void sub_100038418(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100016AC0((void *)&_mh_execute_header, a2, a3, "Error: %s", a5, a6, a7, a8, 2u);
  sub_100011CA4();
}

void sub_10003847C(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100016AC0((void *)&_mh_execute_header, a2, a3, "Encountered non-connection event: %s", a5, a6, a7, a8, 2u);
  sub_100011CA4();
}

void sub_1000384E0(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100016AC0((void *)&_mh_execute_header, a2, a3, "Unhandled event: %s", a5, a6, a7, a8, 2u);
  sub_100011CA4();
}

void sub_100038544(uint64_t a1, NSObject *a2)
{
  int v4;
  int v5;
  uint64_t v6;
  __int16 v7;
  int v8;

  v4 = *__error();
  v5 = 138412546;
  v6 = a1;
  v7 = 1024;
  v8 = v4;
  _os_log_fault_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_FAULT, "Could not open tailspin file %@ for finding timeout hang end time: %d", (uint8_t *)&v5, 0x12u);
}

void sub_1000385E0()
{
  uint64_t v0;
  os_log_t v1;

  sub_100016AA8();
  sub_100016A94((void *)&_mh_execute_header, v0, v1, "Unable to ktrace_start %@: %d");
  sub_100011CA4();
}

void sub_100038640()
{
  uint64_t v0;
  os_log_t v1;

  sub_100016AA8();
  sub_100016A94((void *)&_mh_execute_header, v0, v1, "Unable to ktrace_set_ktrace_file %@: %d");
  sub_100011CA4();
}

void sub_1000386A0()
{
  uint64_t v0;
  os_log_t v1;

  sub_100016AA8();
  sub_100016A94((void *)&_mh_execute_header, v0, v1, "Could not get earliest timestamp in tailspin file %@ for finding timeout hang end time: %d");
  sub_100011CA4();
}

void sub_100038700()
{
  uint64_t v0;
  os_log_t v1;

  sub_100016AA8();
  sub_100016A94((void *)&_mh_execute_header, v0, v1, "Could not get latest timestamp in tailspin file %@ for finding timeout hang end time: %d");
  sub_100011CA4();
}

void sub_100038760(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;

  v3 = 138412546;
  v4 = a1;
  v5 = 2112;
  v6 = a2;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "HTPrefs: %@ was not found in the %@ domain, a profile, by EPL, by PowerLog Tasking domain, by HT Self Enablement or by HT Sentry Enablement", (uint8_t *)&v3, 0x16u);
}

void sub_1000387E4(uint64_t a1, _QWORD *a2, NSObject *a3)
{
  _BYTE v3[24];

  *(_DWORD *)v3 = 138412802;
  *(_QWORD *)&v3[4] = CFSTR("enablementPrefix");
  *(_WORD *)&v3[12] = 2112;
  *(_QWORD *)&v3[14] = a1;
  *(_WORD *)&v3[22] = 2112;
  sub_10001C8C8((void *)&_mh_execute_header, (uint64_t)a2, a3, "HTPrefs: %@: %@ -> %@", *(_QWORD *)v3, *(_QWORD *)&v3[8], *(_QWORD *)&v3[16], *a2);
  sub_100011DB8();
}

void sub_100038868()
{
  uint64_t v0;
  os_log_t v1;

  sub_10001C8DC();
  sub_10001C8EC();
  sub_10001C8C8((void *)&_mh_execute_header, v0, v1, "HTPrefs: %@: %@ -> %@");
  sub_100011DB8();
}

void sub_1000388FC()
{
  uint64_t v0;
  os_log_t v1;

  sub_10001C8DC();
  sub_10001C8EC();
  sub_10001C8C8((void *)&_mh_execute_header, v0, v1, "HTPrefs: %@: %@ -> %@");
  sub_100011DB8();
}

void sub_100038990()
{
  uint64_t v0;
  os_log_t v1;

  sub_10001C8DC();
  sub_10001C8EC();
  sub_10001C8C8((void *)&_mh_execute_header, v0, v1, "HTPrefs: %@: %@ -> %@");
  sub_100011DB8();
}

void sub_100038A24()
{
  uint64_t v0;
  os_log_t v1;

  sub_10001C8DC();
  sub_10001C8EC();
  sub_10001C8C8((void *)&_mh_execute_header, v0, v1, "HTPrefs: %@: %@ -> %@");
  sub_100011DB8();
}

void sub_100038AB8(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Preparing prefInitList", v1, 2u);
}

void sub_100038AF8()
{
  __assert_rtn("-[HTPrefs setupPrefsWithQueue:]", "HTPrefs.m", 1486, "prefsQueue != NULL");
}

id objc_msgSend_JSONObjectWithData_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "JSONObjectWithData:options:error:");
}

id objc_msgSend_URL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URL");
}

id objc_msgSend_URLWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLWithString:");
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "UTF8String");
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "UUID");
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "UUIDString");
}

id objc_msgSend___createInternalSettings(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "__createInternalSettings");
}

id objc_msgSend_addEntriesFromDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addEntriesFromDictionary:");
}

id objc_msgSend_addIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addIndex:");
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObject:");
}

id objc_msgSend_addObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObjectsFromArray:");
}

id objc_msgSend_addSubsystem_category_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSubsystem:category:");
}

id objc_msgSend_allBlockingThreadsArray(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allBlockingThreadsArray");
}

id objc_msgSend_allocWithZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allocWithZone:");
}

id objc_msgSend_anyClientsAvailable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "anyClientsAvailable");
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "array");
}

id objc_msgSend_arrayWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:");
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:count:");
}

id objc_msgSend_attributesOfItemAtPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributesOfItemAtPath:error:");
}

id objc_msgSend_beginDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginDate");
}

id objc_msgSend_beginEvent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginEvent");
}

id objc_msgSend_beginWallTimeStringWithTimeZoneName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginWallTimeStringWithTimeZoneName:");
}

id objc_msgSend_blockingPid(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "blockingPid");
}

id objc_msgSend_blockingThreadInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "blockingThreadInfo");
}

id objc_msgSend_blockingTid(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "blockingTid");
}

id objc_msgSend_BOOLProperty_contextPrefixOut_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BOOLProperty:contextPrefixOut:");
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BOOLValue");
}

id objc_msgSend_bundleIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleIdentifier");
}

id objc_msgSend_cStringUsingEncoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cStringUsingEncoding:");
}

id objc_msgSend_capitalizedString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "capitalizedString");
}

id objc_msgSend_characterAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "characterAtIndex:");
}

id objc_msgSend_closeFile(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "closeFile");
}

id objc_msgSend_compare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compare:");
}

id objc_msgSend_containingBundleRecord(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containingBundleRecord");
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsObject:");
}

id objc_msgSend_containsString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsString:");
}

id objc_msgSend_contentsOfDirectoryAtPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentsOfDirectoryAtPath:error:");
}

id objc_msgSend_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:");
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copy");
}

id objc_msgSend_copyItemAtPath_toPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyItemAtPath:toPath:error:");
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "count");
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_cpuTimeNs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cpuTimeNs");
}

id objc_msgSend_createDirectoryAtPath_withIntermediateDirectories_attributes_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createDirectoryAtPath:withIntermediateDirectories:attributes:error:");
}

id objc_msgSend_cumulativeTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cumulativeTime");
}

id objc_msgSend_dataUsingEncoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataUsingEncoding:");
}

id objc_msgSend_dataWithJSONObject_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithJSONObject:options:error:");
}

id objc_msgSend_dateFormatter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateFormatter");
}

id objc_msgSend_dateWithTimeInterval_sinceDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithTimeInterval:sinceDate:");
}

id objc_msgSend_dateWithTimeIntervalSinceReferenceDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithTimeIntervalSinceReferenceDate:");
}

id objc_msgSend_debugDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "debugDescription");
}

id objc_msgSend_decodeInt64ForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeInt64ForKey:");
}

id objc_msgSend_decodeIntForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeIntForKey:");
}

id objc_msgSend_decodeObjectOfClass_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeObjectOfClass:forKey:");
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultCenter");
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultManager");
}

id objc_msgSend_description(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "description");
}

id objc_msgSend_developerType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "developerType");
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionary");
}

id objc_msgSend_dictionaryWithContentsOfFile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithContentsOfFile:");
}

id objc_msgSend_dictionaryWithObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObject:forKey:");
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjects:forKeys:count:");
}

id objc_msgSend_dictionaryWithObjectsAndKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjectsAndKeys:");
}

id objc_msgSend_displayEventStatesFromDisplayInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayEventStatesFromDisplayInfo:");
}

id objc_msgSend_displayEventTimestampsFromDisplayInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayEventTimestampsFromDisplayInfo:");
}

id objc_msgSend_displayInfoForSpindump_startAbsoluteTime_endAbsoluteTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayInfoForSpindump:startAbsoluteTime:endAbsoluteTime:");
}

id objc_msgSend_displayOnIntervalsForDisplayTimestamps_displayStates_startTimestamp_endTimestamp_startState_endState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayOnIntervalsForDisplayTimestamps:displayStates:startTimestamp:endTimestamp:startState:endState:");
}

id objc_msgSend_displayStateBeforeHangStartTimestamp_displayTimestamps_displayStates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayStateBeforeHangStartTimestamp:displayTimestamps:displayStates:");
}

id objc_msgSend_displayStateBeforeOrAtTime_timestamps_states_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayStateBeforeOrAtTime:timestamps:states:");
}

id objc_msgSend_distantFuture(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "distantFuture");
}

id objc_msgSend_distributorID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "distributorID");
}

id objc_msgSend_distributorInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "distributorInfo");
}

id objc_msgSend_doubleProperty_contextPrefixOut_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doubleProperty:contextPrefixOut:");
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doubleValue");
}

id objc_msgSend_durationSeconds(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "durationSeconds");
}

id objc_msgSend_earlierDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "earlierDate:");
}

id objc_msgSend_earlyInitNecessaryPrefs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "earlyInitNecessaryPrefs");
}

id objc_msgSend_enablementPrefix(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enablementPrefix");
}

id objc_msgSend_encodeInt64_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeInt64:forKey:");
}

id objc_msgSend_encodeInt_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeInt:forKey:");
}

id objc_msgSend_encodeObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeObject:forKey:");
}

id objc_msgSend_endSampleIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endSampleIndex");
}

id objc_msgSend_endThreadTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endThreadTime");
}

id objc_msgSend_endTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endTime");
}

id objc_msgSend_endTimestamp(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endTimestamp");
}

id objc_msgSend_entitlements(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "entitlements");
}

id objc_msgSend_enumerateObjectsWithOptions_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateObjectsWithOptions:usingBlock:");
}

id objc_msgSend_enumerateTasks_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateTasks:");
}

id objc_msgSend_enumeratorAtURL_includingPropertiesForKeys_options_errorHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:");
}

id objc_msgSend_eplEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "eplEnabled");
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorWithDomain:code:userInfo:");
}

id objc_msgSend_exitReasonCode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exitReasonCode");
}

id objc_msgSend_exitReasonNamespace(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exitReasonNamespace");
}

id objc_msgSend_exitTimestamp(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exitTimestamp");
}

id objc_msgSend_fenceResolutionTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fenceResolutionTime");
}

id objc_msgSend_fenceStartTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fenceStartTime");
}

id objc_msgSend_fetchProcessRecords(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchProcessRecords");
}

id objc_msgSend_fileDescriptor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileDescriptor");
}

id objc_msgSend_fileExistsAtPath_isDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileExistsAtPath:isDirectory:");
}

id objc_msgSend_fileHandleForReadingAtPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileHandleForReadingAtPath:");
}

id objc_msgSend_fileSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileSize");
}

id objc_msgSend_fileURLWithPath_isDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileURLWithPath:isDirectory:");
}

id objc_msgSend_filterToMachAbsTimeRangeStart_end_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filterToMachAbsTimeRangeStart:end:");
}

id objc_msgSend_findBlockingThreadForTailspin_sampleStore_mainThread_hangStartTime_hangEndTime_hangDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "findBlockingThreadForTailspin:sampleStore:mainThread:hangStartTime:hangEndTime:hangDuration:");
}

id objc_msgSend_findBlockingThreadFromSampleStore_mainThread_hangStartTime_hangEndTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "findBlockingThreadFromSampleStore:mainThread:hangStartTime:hangEndTime:");
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstObject");
}

id objc_msgSend_firstThreadStateOnOrAfterTime_sampleIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstThreadStateOnOrAfterTime:sampleIndex:");
}

id objc_msgSend_ge_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ge:");
}

id objc_msgSend_getDescription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getDescription:");
}

id objc_msgSend_getProcessExitsAndLaunchesDuringHang_endTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getProcessExitsAndLaunchesDuringHang:endTime:");
}

id objc_msgSend_getResourceValue_forKey_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getResourceValue:forKey:error:");
}

id objc_msgSend_guessMissingTimesBasedOnTimestamp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "guessMissingTimesBasedOnTimestamp:");
}

id objc_msgSend_handleEndTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleEndTime");
}

id objc_msgSend_handleStartTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleStartTime");
}

id objc_msgSend_hangtracerDaemonEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hangtracerDaemonEnabled");
}

id objc_msgSend_hardwareModel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hardwareModel");
}

id objc_msgSend_hasPrefix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasPrefix:");
}

id objc_msgSend_hasSuffix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasSuffix:");
}

id objc_msgSend_hidEventTimestamp(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hidEventTimestamp");
}

id objc_msgSend_hidEvents(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hidEvents");
}

id objc_msgSend_hudEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hudEnabled");
}

id objc_msgSend_iTunesMetadata(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "iTunesMetadata");
}

id objc_msgSend_inInterrupt(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inInterrupt");
}

id objc_msgSend_incidentUUID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "incidentUUID");
}

id objc_msgSend_indexOfFirstSampleOnOrAfterTimestamp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfFirstSampleOnOrAfterTimestamp:");
}

id objc_msgSend_indexOfLastSampleOnOrBeforeTimestamp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfLastSampleOnOrBeforeTimestamp:");
}

id objc_msgSend_indexOfObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfObject:");
}

id objc_msgSend_indexSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexSet");
}

id objc_msgSend_init(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "init");
}

id objc_msgSend_initForFileParsing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initForFileParsing");
}

id objc_msgSend_initWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithArray:");
}

id objc_msgSend_initWithBytesNoCopy_length_freeWhenDone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBytesNoCopy:length:freeWhenDone:");
}

id objc_msgSend_initWithFenceName_traceStart_traceEnd_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFenceName:traceStart:traceEnd:");
}

id objc_msgSend_initWithHandleName_fenceName_traceStart_traceEnd_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHandleName:fenceName:traceStart:traceEnd:");
}

id objc_msgSend_initWithInfo_pid_spawnTimestamp_exitTimestamp_exitReasonCode_exitReasonNamespace_jetsam_priority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithInfo:pid:spawnTimestamp:exitTimestamp:exitReasonCode:exitReasonNamespace:jetsam_priority:");
}

id objc_msgSend_initWithMadeRunnableByThreadID_atTime_inInterrupt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMadeRunnableByThreadID:atTime:inInterrupt:");
}

id objc_msgSend_initWithSampleStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSampleStore:");
}

id objc_msgSend_initWithSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSize:");
}

id objc_msgSend_initWithType_andTimestamp_andName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:andTimestamp:andName:");
}

id objc_msgSend_initWithURL_allowPlaceholder_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURL:allowPlaceholder:error:");
}

id objc_msgSend_initWithURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURL:error:");
}

id objc_msgSend_initWithUUIDString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUUIDString:");
}

id objc_msgSend_insert_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insert:");
}

id objc_msgSend_insertObject_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertObject:atIndex:");
}

id objc_msgSend_intProperty_contextPrefixOut_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intProperty:contextPrefixOut:");
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intValue");
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqual:");
}

id objc_msgSend_isEqualToArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToArray:");
}

id objc_msgSend_isEqualToNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToNumber:");
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_isInternal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isInternal");
}

id objc_msgSend_jetsam_priority(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "jetsam_priority");
}

id objc_msgSend_keysSortedByValueUsingComparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keysSortedByValueUsingComparator:");
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastObject");
}

id objc_msgSend_lastPathComponent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastPathComponent");
}

id objc_msgSend_lastThreadStateOnOrBeforeTime_sampleIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastThreadStateOnOrBeforeTime:sampleIndex:");
}

id objc_msgSend_le_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "le:");
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "length");
}

id objc_msgSend_lengthOfBytesUsingEncoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lengthOfBytesUsingEncoding:");
}

id objc_msgSend_localizedDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedDescription");
}

id objc_msgSend_longLongValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "longLongValue");
}

id objc_msgSend_machAbsTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "machAbsTime");
}

id objc_msgSend_madeRunnableByThreadId(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "madeRunnableByThreadId");
}

id objc_msgSend_mainBinaryPath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainBinaryPath");
}

id objc_msgSend_mainThread(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainThread");
}

id objc_msgSend_maxBlockingTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maxBlockingTime");
}

id objc_msgSend_moveItemAtPath_toPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "moveItemAtPath:toPath:error:");
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mutableCopy");
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "name");
}

id objc_msgSend_now(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "now");
}

id objc_msgSend_null(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "null");
}

id objc_msgSend_numberWithBool_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithBool:");
}

id objc_msgSend_numberWithDouble_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithDouble:");
}

id objc_msgSend_numberWithFloat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithFloat:");
}

id objc_msgSend_numberWithInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInt:");
}

id objc_msgSend_numberWithInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInteger:");
}

id objc_msgSend_numberWithLongLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithLongLong:");
}

id objc_msgSend_numberWithUnsignedInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedInt:");
}

id objc_msgSend_numberWithUnsignedLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedLong:");
}

id objc_msgSend_numberWithUnsignedLongLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedLongLong:");
}

id objc_msgSend_numberWithUnsignedShort_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedShort:");
}

id objc_msgSend_objectAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndex:");
}

id objc_msgSend_objectAtIndexedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndexedSubscript:");
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKey:");
}

id objc_msgSend_objectForKey_checkingKindOfClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKey:checkingKindOfClass:");
}

id objc_msgSend_objectForKey_ofClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKey:ofClass:");
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKeyedSubscript:");
}

id objc_msgSend_objectProperty_matchingSelector_contextPrefixOut_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectProperty:matchingSelector:contextPrefixOut:");
}

id objc_msgSend_options(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "options");
}

id objc_msgSend_parseKTraceFile_warningsOut_errorOut_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parseKTraceFile:warningsOut:errorOut:");
}

id objc_msgSend_path(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "path");
}

id objc_msgSend_pathExtension(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pathExtension");
}

id objc_msgSend_pid(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pid");
}

id objc_msgSend_postNotificationName_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotificationName:object:");
}

id objc_msgSend_postNotificationName_object_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotificationName:object:userInfo:");
}

id objc_msgSend_prefContextPrefixPriorityOrder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prefContextPrefixPriorityOrder");
}

id objc_msgSend_prefInitList(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prefInitList");
}

id objc_msgSend_prefNamed_domain_profile_matchingSelector_contextPrefixOut_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prefNamed:domain:profile:matchingSelector:contextPrefixOut:");
}

id objc_msgSend_preferredLanguages(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredLanguages");
}

id objc_msgSend_printToMutableData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "printToMutableData:");
}

id objc_msgSend_printToStream_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "printToStream:");
}

id objc_msgSend_processID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processID");
}

id objc_msgSend_processLogArchiveWithPath_startDate_endDate_errorOut_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processLogArchiveWithPath:startDate:endDate:errorOut:");
}

id objc_msgSend_processName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processName");
}

id objc_msgSend_propertyListWithData_options_format_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "propertyListWithData:options:format:error:");
}

id objc_msgSend_rangeOfString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfString:");
}

id objc_msgSend_rangeOfString_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfString:options:");
}

id objc_msgSend_readDataOfLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readDataOfLength:");
}

id objc_msgSend_reason(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reason");
}

id objc_msgSend_refreshHTPrefs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "refreshHTPrefs");
}

id objc_msgSend_removeItemAtPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeItemAtPath:error:");
}

id objc_msgSend_removeItemAtURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeItemAtURL:error:");
}

id objc_msgSend_removeObjectAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectAtIndex:");
}

id objc_msgSend_removeObjectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectForKey:");
}

id objc_msgSend_removeObjectsAtIndexes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectsAtIndexes:");
}

id objc_msgSend_resolution(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resolution");
}

id objc_msgSend_reverseObjectEnumerator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reverseObjectEnumerator");
}

id objc_msgSend_runloopHangDurationThresholdMSec(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "runloopHangDurationThresholdMSec");
}

id objc_msgSend_runloopHangPercentHeavyLogs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "runloopHangPercentHeavyLogs");
}

id objc_msgSend_runloopHangThirdPartyDurationThresholdMSec(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "runloopHangThirdPartyDurationThresholdMSec");
}

id objc_msgSend_runloopHangTimeoutDurationMSec(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "runloopHangTimeoutDurationMSec");
}

id objc_msgSend_runloopLongHangDurationThresholdMSec(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "runloopLongHangDurationThresholdMSec");
}

id objc_msgSend_sampleTimestamps(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sampleTimestamps");
}

id objc_msgSend_savedTailspinMaxMB(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "savedTailspinMaxMB");
}

id objc_msgSend_sendDiagnosticReport_forType_forSourceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendDiagnosticReport:forType:forSourceID:");
}

id objc_msgSend_setAllBlockingThreadsArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllBlockingThreadsArray:");
}

id objc_msgSend_setAttributes_ofItemAtPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttributes:ofItemAtPath:error:");
}

id objc_msgSend_setBlockingThreadInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBlockingThreadInfo:");
}

id objc_msgSend_setCumulativeTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCumulativeTime:");
}

id objc_msgSend_setDataGatheringOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDataGatheringOptions:");
}

id objc_msgSend_setDateFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateFormat:");
}

id objc_msgSend_setDisplayKernelFrames_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayKernelFrames:");
}

id objc_msgSend_setDisplayTrialInformation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayTrialInformation:");
}

id objc_msgSend_setEndThreadTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEndThreadTime:");
}

id objc_msgSend_setEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEvent:");
}

id objc_msgSend_setEventTimeRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEventTimeRange:");
}

id objc_msgSend_setFenceEndTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFenceEndTime:");
}

id objc_msgSend_setFenceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFenceName:");
}

id objc_msgSend_setFenceResolutionTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFenceResolutionTime:");
}

id objc_msgSend_setFenceStartTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFenceStartTime:");
}

id objc_msgSend_setForceOneBasedTimeIndexes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setForceOneBasedTimeIndexes:");
}

id objc_msgSend_setHandleBlown_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHandleBlown:");
}

id objc_msgSend_setHandleBlownTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHandleBlownTime:");
}

id objc_msgSend_setHandleEndTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHandleEndTime:");
}

id objc_msgSend_setHandleName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHandleName:");
}

id objc_msgSend_setHandleStartTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHandleStartTime:");
}

id objc_msgSend_setInInterrupt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInInterrupt:");
}

id objc_msgSend_setIncidentUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIncidentUUID:");
}

id objc_msgSend_setIntervalCompletionProcessingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIntervalCompletionProcessingBlock:");
}

id objc_msgSend_setMadeRunnableByThreadId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMadeRunnableByThreadId:");
}

id objc_msgSend_setMaxBlockingTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaxBlockingTime:");
}

id objc_msgSend_setMemoryLoggingIntervalSec_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMemoryLoggingIntervalSec:");
}

id objc_msgSend_setName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setName:");
}

id objc_msgSend_setObject_atIndexedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:atIndexedSubscript:");
}

id objc_msgSend_setObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKey:");
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKeyedSubscript:");
}

id objc_msgSend_setPidsToPrint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPidsToPrint:");
}

id objc_msgSend_setPrintHeavyStacks_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrintHeavyStacks:");
}

id objc_msgSend_setPrintSpinSignatureStack_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrintSpinSignatureStack:");
}

id objc_msgSend_setPrintTargetThreadOnly_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrintTargetThreadOnly:");
}

id objc_msgSend_setReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReason:");
}

id objc_msgSend_setReportTimeThreshold_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReportTimeThreshold:");
}

id objc_msgSend_setResolution_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResolution:");
}

id objc_msgSend_setSanitizePaths_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSanitizePaths:");
}

id objc_msgSend_setShouldGatherKextStat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldGatherKextStat:");
}

id objc_msgSend_setShouldPostHTPrefsChangedNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldPostHTPrefsChangedNotification:");
}

id objc_msgSend_setStartThreadTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStartThreadTime:");
}

id objc_msgSend_setSubsystemCategoryFilter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSubsystemCategoryFilter:");
}

id objc_msgSend_setTargetHIDEventMachAbs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTargetHIDEventMachAbs:");
}

id objc_msgSend_setTargetProcessId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTargetProcessId:");
}

id objc_msgSend_setTidsToPrint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTidsToPrint:");
}

id objc_msgSend_setTimestamp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimestamp:");
}

id objc_msgSend_setTopBlockingPid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTopBlockingPid:");
}

id objc_msgSend_setTransaction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransaction:");
}

id objc_msgSend_setType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setType:");
}

id objc_msgSend_setWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithArray:");
}

id objc_msgSend_setWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithObject:");
}

id objc_msgSend_setupPrefsWithQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupPrefsWithQueue:");
}

id objc_msgSend_setupPrefsWithQueue_profilePath_taskingDomainName_hangtracerDomain_setupInternalPrefs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupPrefsWithQueue:profilePath:taskingDomainName:hangtracerDomain:setupInternalPrefs:");
}

id objc_msgSend_sharedPrefs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedPrefs");
}

id objc_msgSend_shouldCollectOSSignpostsDeferred(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldCollectOSSignpostsDeferred");
}

id objc_msgSend_shouldCompressSavedTailspins(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldCompressSavedTailspins");
}

id objc_msgSend_shouldIncludeDiskInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldIncludeDiskInfo");
}

id objc_msgSend_shouldIncludeDisplayData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldIncludeDisplayData");
}

id objc_msgSend_shouldIncludeNetworkState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldIncludeNetworkState");
}

id objc_msgSend_shouldPostHTPrefsChangedNotification(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldPostHTPrefsChangedNotification");
}

id objc_msgSend_shouldSaveTailspins(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldSaveTailspins");
}

id objc_msgSend_shouldUploadToDiagPipe(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldUploadToDiagPipe");
}

id objc_msgSend_sortedArrayUsingComparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedArrayUsingComparator:");
}

id objc_msgSend_spawnTimestamp(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "spawnTimestamp");
}

id objc_msgSend_springBoardHangIORegGPUDumpTimeoutMSec(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "springBoardHangIORegGPUDumpTimeoutMSec");
}

id objc_msgSend_startSampleIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startSampleIndex");
}

id objc_msgSend_startThreadTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startThreadTime");
}

id objc_msgSend_startTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startTime");
}

id objc_msgSend_startTimestamp(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startTimestamp");
}

id objc_msgSend_storeCohortWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeCohortWithError:");
}

id objc_msgSend_storeItemIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeItemIdentifier");
}

id objc_msgSend_storeOtherBlockingThreadInfoInBlockingThreadInfo_sampleStore_mostBlockingTimeThreadId_sortedThreadsMaxCumlativeTime_blockingTimeByThread_tidToPidDict_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeOtherBlockingThreadInfoInBlockingThreadInfo:sampleStore:mostBlockingTimeThreadId:sortedThreadsMaxCumlativeTime:blockingTimeByThread:tidToPidDict:");
}

id objc_msgSend_storeTopBlockingThreadInfoInBlockingThreadInfo_sampleStore_mostBlockingTimeThreadId_pidMostBlockingTime_blockedTime_isHangMainThread_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeTopBlockingThreadInfoInBlockingThreadInfo:sampleStore:mostBlockingTimeThreadId:pidMostBlockingTime:blockedTime:isHangMainThread:");
}

id objc_msgSend_stringByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingPathComponent:");
}

id objc_msgSend_stringByAppendingPathExtension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingPathExtension:");
}

id objc_msgSend_stringByAppendingString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingString:");
}

id objc_msgSend_stringByDeletingPathExtension(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByDeletingPathExtension");
}

id objc_msgSend_stringByReplacingOccurrencesOfString_withString_options_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByReplacingOccurrencesOfString:withString:options:range:");
}

id objc_msgSend_stringFromDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringFromDate:");
}

id objc_msgSend_stringProperty_contextPrefixOut_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringProperty:contextPrefixOut:");
}

id objc_msgSend_stringWithCString_encoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithCString:encoding:");
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithFormat:");
}

id objc_msgSend_stringWithUTF8String_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithUTF8String:");
}

id objc_msgSend_substringFromIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "substringFromIndex:");
}

id objc_msgSend_targetProcess(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "targetProcess");
}

id objc_msgSend_tasksByPid(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tasksByPid");
}

id objc_msgSend_thirdPartyDevHangHUDEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "thirdPartyDevHangHUDEnabled");
}

id objc_msgSend_threadId(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "threadId");
}

id objc_msgSend_threadStates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "threadStates");
}

id objc_msgSend_threads(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "threads");
}

id objc_msgSend_tidToPidDict(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tidToPidDict");
}

id objc_msgSend_timeIntervalSinceReferenceDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeIntervalSinceReferenceDate");
}

id objc_msgSend_timeRangeStart_end_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeRangeStart:end:");
}

id objc_msgSend_timer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timer");
}

id objc_msgSend_timestamp(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timestamp");
}

id objc_msgSend_timestampWithMachAbsTime_machContTime_wallTime_machTimebase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timestampWithMachAbsTime:machContTime:wallTime:machTimebase:");
}

id objc_msgSend_topBlockingPid(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "topBlockingPid");
}

id objc_msgSend_transaction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transaction");
}

id objc_msgSend_turnstileInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "turnstileInfo");
}

id objc_msgSend_type(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "type");
}

id objc_msgSend_unsignedIntProperty_contextPrefixOut_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unsignedIntProperty:contextPrefixOut:");
}

id objc_msgSend_unsignedIntValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unsignedIntValue");
}

id objc_msgSend_unsignedIntegerValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unsignedIntegerValue");
}

id objc_msgSend_unsignedLongLongValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unsignedLongLongValue");
}

id objc_msgSend_unsignedLongProperty_contextPrefixOut_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unsignedLongProperty:contextPrefixOut:");
}

id objc_msgSend_unsignedLongValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unsignedLongValue");
}

id objc_msgSend_valueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForKey:");
}

id objc_msgSend_waitInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "waitInfo");
}

id objc_msgSend_wallTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wallTime");
}

id objc_msgSend_writeData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeData:");
}
