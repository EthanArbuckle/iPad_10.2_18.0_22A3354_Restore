BOOL sub_100003980()
{
  _BOOL8 result;
  NSObject *v1;

  qword_1004E0A48 = (uint64_t)dlopen("/usr/lib/AppleConvergedTransport.dylib", 1);
  if (qword_1004E0A48)
  {
    dlerror();
    off_1004E0A50 = (uint64_t (*)(_QWORD))dlsym((void *)qword_1004E0A48, "AppleConvergedTransportInitParameters");
    if (dlerror() || !off_1004E0A50)
    {
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004D8708);
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
        sub_100043914();
    }
    else
    {
      off_1004E0A58 = (uint64_t (*)(_QWORD, _QWORD))dlsym((void *)qword_1004E0A48, "AppleConvergedTransportCreate");
      if (dlerror() || !off_1004E0A58)
      {
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004D8748);
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
          sub_1000438A8();
      }
      else
      {
        off_1004E0A60 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))dlsym((void *)qword_1004E0A48, "AppleConvergedTransportSendImage");
        if (dlerror() || !off_1004E0A60)
        {
          if (qword_1004E2420 != -1)
            dispatch_once(&qword_1004E2420, &stru_1004D8788);
          if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
            sub_10004383C();
        }
        else
        {
          off_1004E0A68 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))dlsym((void *)qword_1004E0A48, "AppleConvergedTransportRead");
          if (dlerror() || !off_1004E0A68)
          {
            if (qword_1004E2420 != -1)
              dispatch_once(&qword_1004E2420, &stru_1004D87C8);
            if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
              sub_1000437D0();
          }
          else
          {
            off_1004E0A70 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))dlsym((void *)qword_1004E0A48, "AppleConvergedTransportWrite");
            if (dlerror() || !off_1004E0A70)
            {
              if (qword_1004E2420 != -1)
                dispatch_once(&qword_1004E2420, &stru_1004D8808);
              if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
                sub_100043764();
            }
            else
            {
              off_1004E0A78 = (uint64_t (*)(_QWORD))dlsym((void *)qword_1004E0A48, "AppleConvergedTransportFree");
              if (!dlerror() && off_1004E0A78)
                return 1;
              if (qword_1004E2420 != -1)
                dispatch_once(&qword_1004E2420, &stru_1004D8848);
              if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
                sub_1000436F8();
            }
          }
        }
      }
    }
    dlclose((void *)qword_1004E0A48);
    return 0;
  }
  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004D86C8);
  v1 = qword_1004E2428;
  result = os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR);
  if (result)
  {
    sub_10004366C(v1);
    return 0;
  }
  return result;
}

void sub_100003D40(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100003D70(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100003DA0(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100003DD0(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100003E00(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100003E30(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100003E60(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_100003E90(uint64_t *a1, void *a2, unint64_t a3, size_t *a4)
{
  uint64_t v4;
  int v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t next_slot;
  uint64_t v12;
  size_t v13;
  NSObject *v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  NSObject *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  kevent v40;
  __int128 v41;
  void *__src[2];
  __int128 v43;
  __int128 v44;

  if (!a1 || (v4 = *a1) == 0 || !a4 || (v6 = *((_DWORD *)a1 + 3), v6 == -1))
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D8888);
    v15 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100043980(v15, v16, v17, v18, v19, v20, v21, v22);
    return 0xFFFFFFFFLL;
  }
  v9 = os_channel_ring_id(*a1, 2);
  v10 = os_channel_rx_ring(v4, v9);
  v43 = 0u;
  v44 = 0u;
  v41 = 0u;
  *(_OWORD *)__src = 0u;
  memset(&v40, 0, sizeof(v40));
  if (kevent(v6, 0, 0, &v40, 1, 0) == -1 || (unsigned __int16)v40.filter != 0xFFFF)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D88C8);
    v24 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_1000439F0(v24, v25, v26, v27, v28, v29, v30, v31);
    return 0xFFFFFFFFLL;
  }
  next_slot = os_channel_get_next_slot(v10, 0, &v41);
  if (!next_slot)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D8A08);
    v32 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100043A60(v32, v33, v34, v35, v36, v37, v38, v39);
    return 0xFFFFFFFFLL;
  }
  v12 = next_slot;
  v13 = WORD1(v41);
  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004D8908);
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEBUG))
    sub_100043C2C();
  if (v13 > a3)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D8948);
    v14 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100043AD0(v13, a3, v14);
    return 0xFFFFFFFFLL;
  }
  memcpy(a2, __src[0], v13);
  *a4 = v13;
  if (os_channel_advance_slot(v10, v12))
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D8988);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100043BBC();
    return 0xFFFFFFFFLL;
  }
  result = os_channel_sync(v4, 1);
  if ((_DWORD)result)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D89C8);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100043B4C();
    return 0xFFFFFFFFLL;
  }
  return result;
}

void sub_1000041EC(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000421C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000424C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000427C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000042AC(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000042DC(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000430C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10000433C()
{
  NSObject *v0;
  const __CFDictionary *v1;
  io_service_t MatchingService;
  uint64_t result;
  NSObject *v4;
  io_connect_t connect;
  uint8_t buf[4];
  const char *v7;

  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004D8A48);
  connect = 0;
  v0 = qword_1004E2428;
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "PCIe FLR\n", buf, 2u);
  }
  v1 = IOServiceMatching("AppleBluetoothModule");
  MatchingService = IOServiceGetMatchingService(kIOMainPortDefault, v1);
  if (!MatchingService)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D8A88);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100043CA0();
    return 0xFFFFFFFFLL;
  }
  if (IOServiceOpen(MatchingService, mach_task_self_, 0, &connect))
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D8AC8);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100043D2C();
    return 0xFFFFFFFFLL;
  }
  if (IOConnectCallScalarMethod(connect, 5u, 0, 0, 0, 0))
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D8B08);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100043CCC();
    IOServiceClose(connect);
    return 0xFFFFFFFFLL;
  }
  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004D8B48);
  v4 = qword_1004E2428;
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136315138;
    v7 = "pcie_flr";
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "IOConnectCallScalarMethod succeed and ready to close IO service from %s", buf, 0xCu);
  }
  IOServiceClose(connect);
  result = 0;
  byte_1004E0A80 = 0;
  return result;
}

void sub_1000045D8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100004608(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100004638(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100004668(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100004698(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_1000046C8()
{
  NSObject *v0;
  const __CFDictionary *v1;
  io_service_t MatchingService;
  uint64_t result;
  uint8_t v4[12];
  io_connect_t connect;

  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004D8B88);
  connect = 0;
  v0 = qword_1004E2428;
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "PCIe powercycle\n", v4, 2u);
  }
  v1 = IOServiceMatching("AppleBluetoothModule");
  MatchingService = IOServiceGetMatchingService(kIOMainPortDefault, v1);
  if (!MatchingService)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D8BC8);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100043CA0();
    return 0xFFFFFFFFLL;
  }
  if (IOServiceOpen(MatchingService, mach_task_self_, 0, &connect))
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D8C08);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100043D2C();
    return 0xFFFFFFFFLL;
  }
  if (IOConnectCallScalarMethod(connect, 3u, 0, 0, 0, 0))
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D8C48);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100043D8C();
    IOServiceClose(connect);
    return 0xFFFFFFFFLL;
  }
  IOServiceClose(connect);
  result = 0;
  byte_1004E0A80 = 0;
  return result;
}

void sub_1000048C8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000048F8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100004928(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100004958(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_100004988()
{
  fwrite("-D           - Open pci transport (boot/hci)\n", 0x2DuLL, 1uLL, __stderrp);
  fwrite("-h           - Print device help prompt\n", 0x28uLL, 1uLL, __stderrp);
  return fputc(10, __stderrp);
}

uint64_t sub_1000049E0()
{
  int v0;
  int v1;
  uint64_t v2;
  _QWORD block[5];
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  char v8;

  v5 = 0;
  v6 = &v5;
  v7 = 0x2000000000;
  v8 = 1;
  block[0] = _NSConcreteStackBlock;
  block[1] = 0x40000000;
  block[2] = sub_100004B20;
  block[3] = &unk_1004D8C70;
  block[4] = &v5;
  if (qword_1004E0A88 != -1)
    dispatch_once(&qword_1004E0A88, block);
  if (*((_BYTE *)v6 + 24))
  {
    if (byte_1004E0A80)
      v0 = 2;
    else
      v0 = 1;
    if (sub_100004B7C(v0))
    {
      if (byte_1004E0A80)
        v1 = 1;
      else
        v1 = 2;
      v2 = sub_100004B7C(v1);
    }
    else
    {
      v2 = 0;
    }
  }
  else
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D8CB0);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100043DEC();
    v2 = 0xFFFFFFFFLL;
  }
  _Block_object_dispose(&v5, 8);
  return v2;
}

BOOL sub_100004B20(uint64_t a1)
{
  _BOOL8 result;

  result = sub_100003980();
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  return result;
}

void sub_100004B4C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_100004B7C(int a1)
{
  IONotificationPort *v2;
  __CFRunLoopSource *RunLoopSource;
  __CFRunLoop *Current;
  CFMutableDictionaryRef v5;
  CFMutableDictionaryRef v6;
  CFStringRef v7;
  CFStringRef v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  NSObject *v26;
  const char *v27;
  NSObject *v28;
  const char *v29;
  uint64_t result;
  NSObject *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  io_object_t v38;
  io_registry_entry_t v39;
  BOOL v40;
  CFRunLoopRunResult v41;
  const __CFString *v42;
  const __CFString *v43;
  NSObject *v44;
  NSObject *v45;
  int v46;
  NSObject *v47;
  _BOOL4 v48;
  NSObject *v49;
  NSObject *v50;
  NSObject *v51;
  CFMutableDictionaryRef v52;
  __CFDictionary *v53;
  CFStringRef v54;
  CFStringRef v55;
  io_service_t MatchingService;
  io_object_t v57;
  NSObject *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  int v64;
  int v65;
  int v66;
  int v67;
  NSObject *v68;
  int v69;
  CFTypeRef v70;
  NSObject *v71;
  NSObject *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  NSObject *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  const void *v88;
  NSObject *v89;
  NSObject *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD v98[4];
  int v99;
  uint64_t v100;
  uint64_t v101;
  char buffer[48];
  __int128 v103;
  __int128 v104;
  uint64_t v105;
  uuid_t uu;
  kevent buf;
  _BYTE notification[12];
  __int16 v109;
  char *v110;

  if (a1 != 2)
    goto LABEL_19;
  *(_DWORD *)notification = 0;
  v2 = IONotificationPortCreate(kIOMainPortDefault);
  RunLoopSource = IONotificationPortGetRunLoopSource(v2);
  Current = CFRunLoopGetCurrent();
  CFRunLoopAddSource(Current, RunLoopSource, kCFRunLoopDefaultMode);
  v5 = IOServiceMatching("AppleConvergedIPCInterface");
  if (!v5)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D8E90);
    v9 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100043E94(v9, v10, v11, v12, v13, v14, v15, v16);
    goto LABEL_19;
  }
  v6 = v5;
  v7 = CFStringCreateWithCString(kCFAllocatorDefault, "hci", 0x600u);
  if (!v7)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D8ED0);
    v17 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100043F04(v17, v18, v19, v20, v21, v22, v23, v24);
    CFRelease(v6);
    goto LABEL_19;
  }
  v8 = v7;
  CFDictionarySetValue(v6, CFSTR("ACIPCInterfaceProtocol"), v7);
  CFRelease(v8);
  if (IOServiceAddMatchingNotification(v2, "IOServiceFirstMatch", v6, (IOServiceMatchingCallback)sub_1000064BC, Current, (io_iterator_t *)notification))
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D8F10);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_10004427C();
    CFRunLoopRemoveSource(Current, RunLoopSource, kCFRunLoopDefaultMode);
    IONotificationPortDestroy(v2);
    goto LABEL_19;
  }
  v38 = IOIteratorNext(*(io_iterator_t *)notification);
  if (v38)
  {
    v39 = v38;
    v40 = 0;
    v41 = 0xFFFF;
  }
  else
  {
    do
    {
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004D8F50);
      v49 = qword_1004E2428;
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buffer = 0;
        _os_log_impl((void *)&_mh_execute_header, v49, OS_LOG_TYPE_DEFAULT, "ACIPCInterface not found, waiting for it to appear", (uint8_t *)buffer, 2u);
      }
      v41 = CFRunLoopRunInMode(kCFRunLoopDefaultMode, 5.0, 0);
      v39 = IOIteratorNext(*(io_iterator_t *)notification);
      v40 = v39 == 0;
    }
    while (!v39 && v41 != kCFRunLoopRunTimedOut);
  }
  CFRunLoopRemoveSource(Current, RunLoopSource, kCFRunLoopDefaultMode);
  IONotificationPortDestroy(v2);
  IOObjectRelease(*(io_object_t *)notification);
  if (!v40 && (v41 == 0xFFFF || v41 == kCFRunLoopRunStopped))
  {
    v42 = (const __CFString *)IORegistryEntrySearchCFProperty(v39, "IOService", CFSTR("ACIPCInterfaceTransport"), kCFAllocatorDefault, 1u);
    if (!v42)
    {
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004D90D0);
      v50 = qword_1004E2428;
      v46 = 0;
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buffer = 0;
        _os_log_impl((void *)&_mh_execute_header, v50, OS_LOG_TYPE_DEFAULT, "ACIPCInterface found, ACIPCInterfaceTransport property not found", (uint8_t *)buffer, 2u);
        v46 = 0;
      }
      goto LABEL_79;
    }
    v43 = v42;
    *(_QWORD *)buffer = 0;
    *(_QWORD *)&buffer[8] = 0;
    if (CFStringGetCString(v42, buffer, 16, 0x600u))
    {
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004D8FD0);
      v44 = qword_1004E2428;
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
      {
        LODWORD(buf.ident) = 136315138;
        *(uintptr_t *)((char *)&buf.ident + 4) = (uintptr_t)buffer;
        _os_log_impl((void *)&_mh_execute_header, v44, OS_LOG_TYPE_DEFAULT, "ACIPCInterfaceTransport \"%s\"\n", (uint8_t *)&buf, 0xCu);
      }
      if (*(_QWORD *)buffer == 0x6B6C6177796B73)
      {
        v69 = 0;
        while (1)
        {
          v70 = IORegistryEntrySearchCFProperty(v39, "IOService", CFSTR("IOSkywalkNexusUUID"), kCFAllocatorDefault, 1u);
          if (v70)
            break;
          usleep(0x30D40u);
          if (qword_1004E2420 != -1)
            dispatch_once(&qword_1004E2420, &stru_1004D9050);
          v71 = qword_1004E2428;
          if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
          {
            LODWORD(buf.ident) = 67109120;
            HIDWORD(buf.ident) = v69;
            _os_log_impl((void *)&_mh_execute_header, v71, OS_LOG_TYPE_DEFAULT, "Retry: %d - trying to find ACIPCInterfaceTransport + IOSkywalkNexusUUID\n", (uint8_t *)&buf, 8u);
          }
          if (++v69 == 25)
          {
            v46 = 0;
            goto LABEL_78;
          }
        }
        v88 = v70;
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004D9010);
        v89 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          LOWORD(buf.ident) = 0;
          _os_log_impl((void *)&_mh_execute_header, v89, OS_LOG_TYPE_DEFAULT, "ACIPCInterfaceTransport + IOSkywalkNexusUUID found\n", (uint8_t *)&buf, 2u);
        }
        CFRelease(v88);
        v46 = 1;
        goto LABEL_78;
      }
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004D9090);
      v45 = qword_1004E2428;
      v46 = 0;
      if (!os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
      {
LABEL_78:
        CFRelease(v43);
LABEL_79:
        v48 = v46 != 0;
        goto LABEL_80;
      }
      LOWORD(buf.ident) = 0;
      _os_log_impl((void *)&_mh_execute_header, v45, OS_LOG_TYPE_DEFAULT, "ACIPCInterfaceTransport is not skywalk\n", (uint8_t *)&buf, 2u);
    }
    else
    {
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004D8F90);
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
        sub_100044250();
    }
    v46 = 0;
    goto LABEL_78;
  }
  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004D9110);
  v47 = qword_1004E2428;
  v48 = 0;
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buffer = 67109120;
    *(_DWORD *)&buffer[4] = v41;
    _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_DEFAULT, "ACIPCInterface not found after 5 second -- runLoopResult = 0x%02x", (uint8_t *)buffer, 8u);
    v48 = 0;
  }
LABEL_80:
  if (!v39)
  {
    if (v48)
      goto LABEL_84;
LABEL_19:
    v105 = 0;
    v103 = 0u;
    v104 = 0u;
    memset(buffer, 0, sizeof(buffer));
    if (!qword_1004E0AA8)
    {
      v25 = dispatch_queue_attr_make_with_qos_class(0, QOS_CLASS_DEFAULT, 0);
      qword_1004E0AA8 = (uint64_t)dispatch_queue_create("com.apple.BlueTool.pcie", v25);
    }
    off_1004E0A50(buffer);
    *(_DWORD *)buffer = a1;
    *(_DWORD *)&buffer[24] = 1000;
    *(_QWORD *)&buffer[8] = qword_1004E0AA8;
    if (a1 == 2)
      *(_DWORD *)&buffer[32] |= 8u;
    v98[0] = _NSConcreteStackBlock;
    v98[1] = 0x40000000;
    v98[2] = sub_100006048;
    v98[3] = &unk_1004D8D90;
    v99 = a1;
    *(_QWORD *)&buffer[16] = v98;
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D8DD0);
    v26 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO))
    {
      v27 = "BTI";
      if (a1 == 2)
        v27 = "HCI";
      LODWORD(buf.ident) = 136315138;
      *(uintptr_t *)((char *)&buf.ident + 4) = (uintptr_t)v27;
      _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_INFO, "PCIe creating %s transport\n", (uint8_t *)&buf, 0xCu);
    }
    if ((off_1004E0A58(buffer, &qword_1004E0A90) & 1) != 0)
    {
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004D8E50);
      v28 = qword_1004E2428;
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO))
      {
        v29 = "BTI";
        if (a1 == 2)
          v29 = "HCI";
        LODWORD(buf.ident) = 136315138;
        *(uintptr_t *)((char *)&buf.ident + 4) = (uintptr_t)v29;
        _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_INFO, "PCIe successfully created %s transport\n", (uint8_t *)&buf, 0xCu);
      }
      result = 0;
      strcpy((char *)&xmmword_1004E1FC0, "PCIE");
      off_1004E23D0 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_10000622C;
      off_1004E23D8 = sub_100006234;
      off_1004E23E0 = (uint64_t (*)(_QWORD))sub_100006240;
      off_1004E23E8 = sub_100006248;
      off_1004E23F0 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_10000637C;
      off_1004E2400 = (uint64_t (*)(_QWORD))sub_100006448;
      off_1004E23F8 = (uint64_t (*)(_QWORD, _QWORD))sub_10000644C;
      off_1004E2408 = (uint64_t (*)(_QWORD))nullsub_1;
      off_1004E2410 = (uint64_t (*)(_QWORD))nullsub_2;
      dword_1004E2418 = 0;
      qword_1004E23C0 = 0;
      dword_1004E23C8 = 1;
      byte_1004E241C = 1;
      return result;
    }
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D8E10);
    v31 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100043E18(a1 == 2, v31, v32, v33, v34, v35, v36, v37);
    return 0xFFFFFFFFLL;
  }
  IOObjectRelease(v39);
  if (!v48)
    goto LABEL_19;
LABEL_84:
  qword_1004E0A98 = 0;
  qword_1004E0AA0 = -1;
  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004D93D0);
  memset(&buf, 0, sizeof(buf));
  memset(uu, 0, sizeof(uu));
  memset(buffer, 0, 37);
  v51 = qword_1004E2428;
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)notification = 136315138;
    *(_QWORD *)&notification[4] = "hci";
    _os_log_impl((void *)&_mh_execute_header, v51, OS_LOG_TYPE_DEFAULT, "retrieving uuid for %s", notification, 0xCu);
  }
  v52 = IOServiceMatching("AppleConvergedIPCInterface");
  if (!v52)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D9410);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100043FE4();
    goto LABEL_139;
  }
  v53 = v52;
  v54 = CFStringCreateWithCString(kCFAllocatorDefault, "hci", 0x600u);
  if (!v54)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D9450);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100044010();
    goto LABEL_122;
  }
  v55 = v54;
  CFDictionarySetValue(v53, CFSTR("ACIPCInterfaceProtocol"), v54);
  CFRelease(v55);
  MatchingService = IOServiceGetMatchingService(kIOMainPortDefault, v53);
  if (!MatchingService)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D9550);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_10004403C();
    goto LABEL_139;
  }
  v57 = MatchingService;
  v53 = (__CFDictionary *)IORegistryEntrySearchCFProperty(MatchingService, "IOService", CFSTR("IOSkywalkNexusUUID"), kCFAllocatorDefault, 1u);
  IOObjectRelease(v57);
  if (!v53)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D9510);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100044068();
    goto LABEL_139;
  }
  if (!CFStringGetCString((CFStringRef)v53, buffer, 37, 0x600u))
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D9490);
    v80 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100044094(v80, v81, v82, v83, v84, v85, v86, v87);
LABEL_122:
    CFRelease(v53);
LABEL_139:
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D9190);
    v72 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100043F74(v72, v73, v74, v75, v76, v77, v78, v79);
    return 0xFFFFFFFFLL;
  }
  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004D94D0);
  v58 = qword_1004E2428;
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)notification = 136315394;
    *(_QWORD *)&notification[4] = "hci";
    v109 = 2080;
    v110 = buffer;
    _os_log_impl((void *)&_mh_execute_header, v58, OS_LOG_TYPE_DEFAULT, "protocol: %s, uuidstr: %s", notification, 0x16u);
  }
  uuid_parse(buffer, uu);
  CFRelease(v53);
  v59 = os_channel_create(uu, 0);
  if (!v59)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D91D0);
    if (!os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      goto LABEL_174;
    sub_100044174();
    goto LABEL_172;
  }
  v60 = v59;
  qword_1004E0A98 = v59;
  v61 = os_channel_attr_create();
  if (v61)
  {
    v62 = v61;
    if (!os_channel_read_attr(v60, v61))
    {
      *(_QWORD *)notification = 0;
      v100 = 0;
      v101 = 0;
      os_channel_attr_get(v62, 4, notification);
      os_channel_attr_get(v62, 3, &v101);
      os_channel_attr_get(v62, 2, &v100);
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004D9210);
      v63 = qword_1004E2428;
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buffer = 134218496;
        *(_QWORD *)&buffer[4] = *(_QWORD *)notification;
        *(_WORD *)&buffer[12] = 2048;
        *(_QWORD *)&buffer[14] = v101;
        *(_WORD *)&buffer[22] = 2048;
        *(_QWORD *)&buffer[24] = v100;
        _os_log_impl((void *)&_mh_execute_header, v63, OS_LOG_TYPE_DEFAULT, "skywalk channel slotlen: %llu, rxslots: %llu, txslots: %llu", (uint8_t *)buffer, 0x20u);
      }
    }
    os_channel_attr_destroy(v62);
  }
  v64 = kqueue();
  if (v64 == -1)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D9250);
    if (!os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      goto LABEL_174;
    sub_1000441A0();
    goto LABEL_172;
  }
  v65 = v64;
  LODWORD(qword_1004E0AA0) = v64;
  buf.ident = (int)os_channel_get_fd(v60);
  memset(&buf.fflags, 0, 20);
  *(_DWORD *)&buf.filter = 393214;
  if (kevent(v65, &buf, 1, 0, 0, 0) == -1)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D9290);
    if (!os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      goto LABEL_174;
    sub_1000441CC();
    goto LABEL_172;
  }
  v66 = kqueue();
  if (v66 == -1)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D92D0);
    if (!os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      goto LABEL_174;
    sub_1000441F8();
    goto LABEL_172;
  }
  v67 = v66;
  HIDWORD(qword_1004E0AA0) = v66;
  buf.ident = (int)os_channel_get_fd(v60);
  *(_DWORD *)&buf.filter = 393215;
  *(_QWORD *)((unint64_t)&buf | 0xC) = 0;
  *(_QWORD *)(((unint64_t)&buf | 0xC) + 8) = 0;
  *(_DWORD *)(((unint64_t)&buf | 0xC) + 0x10) = 0;
  if (kevent(v67, &buf, 1, 0, 0, 0) == -1)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D9310);
    if (!os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      goto LABEL_174;
    sub_100044224();
LABEL_172:
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D9390);
LABEL_174:
    v90 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100044104(v90, v91, v92, v93, v94, v95, v96, v97);
    sub_100006DB0((uint64_t)&qword_1004E0A98);
    return 0xFFFFFFFFLL;
  }
  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004D9350);
  v68 = qword_1004E2428;
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buffer = 136315138;
    *(_QWORD *)&buffer[4] = "hci";
    _os_log_impl((void *)&_mh_execute_header, v68, OS_LOG_TYPE_DEFAULT, "channel created successfully for %s", (uint8_t *)buffer, 0xCu);
  }
  result = 0;
  strcpy((char *)&xmmword_1004E1FC0, "PCIE");
  off_1004E23D0 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_1000068B8;
  off_1004E23D8 = sub_1000068C0;
  off_1004E23E0 = (uint64_t (*)(_QWORD))sub_1000068CC;
  off_1004E23E8 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_1000068D4;
  off_1004E23F0 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_100006C98;
  off_1004E2400 = (uint64_t (*)(_QWORD))sub_100006D50;
  dword_1004E2418 = 0;
  off_1004E23F8 = (uint64_t (*)(_QWORD, _QWORD))sub_100006D70;
  qword_1004E23C0 = 0;
  off_1004E2408 = (uint64_t (*)(_QWORD))nullsub_3;
  off_1004E2410 = (uint64_t (*)(_QWORD))nullsub_4;
  dword_1004E23C8 = 1;
  byte_1004E241C = 1;
  return result;
}

uint64_t sub_100005E14(uint64_t a1, uint64_t a2)
{
  NSObject *v2;
  uint8_t v4[8];
  uint64_t v5;

  v5 = 0;
  if ((off_1004E0A60(qword_1004E0A90, a1, a2, (char *)&v5 + 4, 2000, &v5, 0) & 1) != 0)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D8D30);
    v2 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "PCIe successfully transferred FW File\n", v4, 2u);
    }
    sub_100005F9C();
    byte_1004E0A80 = 1;
    return sub_100004B7C(2);
  }
  else
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D8CF0);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_1000442DC();
    return 0xFFFFFFFFLL;
  }
}

void sub_100005F3C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100005F6C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100005F9C()
{
  if (dword_1004E23C8)
  {
    if ((off_1004E0A78(&qword_1004E0A90) & 1) == 0)
    {
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004D9910);
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
        sub_100044308();
    }
    dispatch_release((dispatch_object_t)qword_1004E0AA8);
    qword_1004E0AA8 = 0;
    dword_1004E23C8 = 0;
    byte_1004E241C = 0;
  }
}

void sub_100006048(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  NSObject *v8;
  int v9;
  const char *v10;
  int v11;
  const char *v12;
  __int16 v13;
  int v14;
  __int16 v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;

  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004D8D70);
  v8 = qword_1004E2428;
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO))
  {
    v9 = *(_DWORD *)(a1 + 32);
    v11 = 136315906;
    if (v9 == 2)
      v10 = "HCI";
    else
      v10 = "BTI";
    v12 = v10;
    v13 = 1024;
    v14 = a2;
    v15 = 2048;
    v16 = a3;
    v17 = 2048;
    v18 = a4;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "PCIe %s transport got status %u with args %p and %p\n", (uint8_t *)&v11, 0x26u);
  }
}

void sub_10000616C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000619C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000061CC(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000061FC(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10000622C()
{
  return 0xFFFFFFFFLL;
}

uint64_t sub_100006234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100006248(a1, a2 + 1, a3 - 1);
}

uint64_t sub_100006240()
{
  return 0;
}

uint64_t sub_100006248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v4;
  uint64_t result;
  BOOL v6;
  NSObject *v7;
  int v8;
  uint8_t buf[4];
  int v10;
  __int16 v11;
  int v12;
  __int16 v13;
  uint64_t v14;

  v8 = 0;
  v4 = off_1004E0A70(qword_1004E0A90, a2, a3, &v8, 0xFFFFFFFFLL, 0);
  result = 0;
  if (v4)
    v6 = v8 == a3;
  else
    v6 = 0;
  if (!v6)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D9890);
    v7 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 67109632;
      v10 = v4;
      v11 = 1024;
      v12 = v8;
      v13 = 2048;
      v14 = a3;
      _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "PCIe write failed: ret %u, written %u, expected %zu\n", buf, 0x18u);
    }
    return 0xFFFFFFFFLL;
  }
  return result;
}

uint64_t sub_10000637C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t result;
  uint64_t v7;
  unsigned int v8;

  v8 = 0;
  if ((off_1004E0A68(qword_1004E0A90, a2, a3, &v8, 0xFFFFFFFFLL, 0) & 1) != 0)
  {
    result = 0;
    v7 = v8;
  }
  else
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D98D0);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100044334((uint64_t)&v8, a3);
    v7 = 0;
    result = 0xFFFFFFFFLL;
  }
  *a4 = v7;
  return result;
}

uint64_t sub_10000644C()
{
  return 0;
}

void sub_10000645C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000648C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000064BC(__CFRunLoop *a1)
{
  NSObject *v2;
  uint8_t v3[16];

  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004D9150);
  v2 = qword_1004E2428;
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "ACIPCInterface found, releasing waiting thread", v3, 2u);
  }
  CFRunLoopStop(a1);
}

void sub_100006558(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100006588(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000065B8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000065E8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100006618(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100006648(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100006678(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000066A8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000066D8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100006708(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100006738(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100006768(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100006798(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000067C8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000067F8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100006828(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100006858(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100006888(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_1000068B8()
{
  return 0xFFFFFFFFLL;
}

uint64_t sub_1000068C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000068D4(a1, (const void *)(a2 + 1), a3 - 1);
}

uint64_t sub_1000068CC()
{
  return 0;
}

uint64_t sub_1000068D4(uint64_t a1, const void *a2, size_t a3)
{
  uint64_t v3;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t next_slot;
  NSObject *v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  NSObject *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  size_t v29;
  NSObject *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  void *__dst[2];
  __int128 v40;
  __int128 v41;
  kevent buf;

  v3 = qword_1004E0A98;
  if (!qword_1004E0A98 || !a2 || (v5 = qword_1004E0AA0, (_DWORD)qword_1004E0AA0 == -1))
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D9590);
    v12 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_1000443A8(v12, v13, v14, v15, v16, v17, v18, v19);
    return 0xFFFFFFFFLL;
  }
  v40 = 0u;
  v41 = 0u;
  v38 = 0u;
  *(_OWORD *)__dst = 0u;
  v7 = os_channel_ring_id(qword_1004E0A98, 0);
  v8 = os_channel_tx_ring(v3, v7);
  next_slot = os_channel_get_next_slot(v8, 0, &v38);
  if (!next_slot)
  {
    while (1)
    {
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004D95D0);
      v10 = qword_1004E2428;
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO))
      {
        LODWORD(buf.ident) = 136315138;
        *(uintptr_t *)((char *)&buf.ident + 4) = (uintptr_t)"skywalk_write_channel";
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "%s: empty slot. waiting for slot to become available", (uint8_t *)&buf, 0xCu);
      }
      memset(&buf, 0, sizeof(buf));
      if (kevent(v5, 0, 0, &buf, 1, 0) == -1 || (unsigned __int16)buf.filter != 65534)
        break;
      v11 = os_channel_get_next_slot(v8, 0, &v38);
      if (v11)
      {
        next_slot = v11;
        goto LABEL_23;
      }
    }
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D9610);
    v21 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_1000445FC(v21, v22, v23, v24, v25, v26, v27, v28);
    return 0xFFFFFFFFLL;
  }
LABEL_23:
  v29 = WORD1(v38);
  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004D9650);
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEBUG))
    sub_100044588();
  if (v29 < a3)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D9690);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100044418();
    return 0xFFFFFFFFLL;
  }
  memcpy(__dst[0], a2, a3);
  WORD1(v38) = a3;
  os_channel_set_slot_properties(v8, next_slot, &v38);
  if (os_channel_advance_slot(v8, next_slot))
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D96D0);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100044518();
    return 0xFFFFFFFFLL;
  }
  result = os_channel_sync(v3, 0);
  if ((_DWORD)result)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D9710);
    v30 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_1000444A8(v30, v31, v32, v33, v34, v35, v36, v37);
    return 0xFFFFFFFFLL;
  }
  return result;
}

uint64_t sub_100006C98(uint64_t a1, void *a2, unint64_t a3, uint64_t *a4)
{
  uint64_t result;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;

  v9 = 0;
  result = sub_100003E90(&qword_1004E0A98, a2, a3, (size_t *)&v9);
  if ((_DWORD)result)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D9750);
    v7 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_10004466C(&v9, a3, v7);
    v8 = 0;
    result = 0xFFFFFFFFLL;
  }
  else
  {
    v8 = v9;
  }
  *a4 = v8;
  return result;
}

void sub_100006D50()
{
  if (dword_1004E23C8)
    sub_100006DB0((uint64_t)&qword_1004E0A98);
}

uint64_t sub_100006D70()
{
  return 0;
}

void sub_100006D80(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100006DB0(uint64_t a1)
{
  int v2;
  NSObject *v3;
  int v4;
  NSObject *v5;
  NSObject *v6;
  uint8_t v7[16];
  uint8_t v8[16];
  uint8_t buf[16];

  if (a1)
  {
    v2 = *(_DWORD *)(a1 + 8);
    if (v2 != -1)
    {
      close(v2);
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004D97D0);
      v3 = qword_1004E2428;
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "closed sw_kq_write", buf, 2u);
      }
      *(_DWORD *)(a1 + 8) = -1;
    }
    v4 = *(_DWORD *)(a1 + 12);
    if (v4 != -1)
    {
      close(v4);
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004D9810);
      v5 = qword_1004E2428;
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)v8 = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "closed sw_kq_read", v8, 2u);
      }
      *(_DWORD *)(a1 + 12) = -1;
    }
    if (*(_QWORD *)a1)
    {
      os_channel_destroy();
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004D9850);
      v6 = qword_1004E2428;
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)v7 = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "closed sk_channel", v7, 2u);
      }
      *(_QWORD *)a1 = 0;
    }
    dword_1004E23C8 = 0;
    byte_1004E241C = 0;
  }
  else
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D9790);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100044700();
  }
}

void sub_100006FB8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100006FE8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100007018(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100007048(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100007078(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000070A8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000070D8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100007108(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100007138(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100007168(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100007198(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000071C8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000071F8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100007228(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100007258(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100007288(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000072B8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000072E8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100007318(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100007348(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100007378(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000073A8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000073D8(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void sub_1000073E8(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_10000741C(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

void sub_100007438(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 8u);
}

void sub_100007448(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0x12u);
}

void sub_100007478(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0x12u);
}

uint64_t sub_10000749C(int a1, char *const *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int v7;
  char *v8;
  uint64_t v9;
  unsigned int v10;
  NSObject *v11;
  NSObject *v12;
  char *v13;
  int v14;
  FILE *v15;
  FILE *v16;
  int v17;
  NSObject *v18;
  char *v19;
  const char *v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  BOOL v28;
  int v29;
  int v30;
  uint64_t v31;
  char *v32;
  const char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  const char *v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  const char *v44;
  uint64_t v45;
  unsigned int v46;
  NSObject *v47;
  NSObject *v48;
  uint64_t v49;
  int v50;
  int v52;
  FILE *v53;
  size_t v54;
  uint64_t i;
  int v56;
  ssize_t v57;
  int v58;
  char v59;
  unsigned int v60;
  int v61;
  unsigned int v62;
  ssize_t v63;
  uint64_t v65;
  unsigned int v66;
  int v67;
  unsigned int v68;
  ssize_t v69;
  uint8_t *v71;
  int v72;
  unsigned int v73;
  int v74;
  unsigned int v75;
  ssize_t v76;
  size_t v78;
  unsigned int v79;
  int v80;
  unsigned int v81;
  ssize_t v82;
  FILE *v84;
  NSObject *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  NSObject *v94;
  NSObject *v95;
  uint8_t *v96;
  uint64_t v97;
  unsigned int v98;
  NSObject *v99;
  _BOOL8 v100;
  NSObject *v101;
  uint8x8_t v102;
  int v103;
  int v104;
  int v105;
  NSObject *v106;
  const char *v107;
  NSObject *v108;
  NSObject *v109;
  unsigned int v110;
  uint64_t v111;
  char *v112;
  const char *v113;
  NSObject *v114;
  uint32_t v115;
  NSObject *v116;
  char *v117;
  uint64_t v118;
  NSObject *v119;
  NSObject *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  NSObject *v127;
  uint64_t v128;
  int v129;
  const char *v130;
  char v131;
  char v132;
  char v133;
  char v134;
  int v135;
  char __streamb;
  int __stream;
  FILE *__streama;
  uint8_t v139[16];
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int16 v155;
  uint8_t buf[32];
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  _BYTE v177[27];
  __int128 v178;
  int v179;
  __int128 v180;
  int v181;
  __int128 v182;
  int v183;
  __int128 v184;
  int v185;
  __int128 v186;
  int v187;
  __int128 v188;
  int v189;
  __int128 v190;
  int v191;
  __int128 v192;
  int v193;
  __int128 v194;
  int v195;
  __int128 v196;
  int v197;
  __int128 v198;
  int v199;
  __int128 v200;
  int v201;
  __int128 v202;
  int v203;
  __int128 v204;
  int v205;
  __int128 v206;
  int v207;
  __int128 v208;
  int v209;
  __int128 v210;
  int v211;
  __int128 v212;
  int v213;
  __int128 v214;
  int v215;
  __int128 v216;
  int v217;
  __int128 v218;
  int v219;
  __int128 v220;
  int v221;
  __int128 v222;
  int v223;
  __int128 v224;
  int v225;
  __int16 v226;
  int v227;
  __int16 v228;
  int v229;
  __int16 v230;
  int v231;
  __int16 v232;
  int v233;

  optind = 1;
  while (2)
  {
    v4 = getopt(a1, a2, "rhAa:NnBb:FptWcsSo:OURVQKw:q:");
    switch((int)v4)
    {
      case 'A':
        v5 = qword_1004E23C0;
        v6 = 0;
        return sub_100009FE0(v5, v6);
      case 'B':
        if (sub_10003E07C() == 6)
          return 0;
        v7 = qword_1004E23C0;
        v8 = 0;
        return sub_100009E8C(v7, v8);
      case 'C':
      case 'D':
      case 'E':
      case 'G':
      case 'H':
      case 'I':
      case 'J':
      case 'L':
      case 'M':
      case 'P':
      case 'T':
      case 'X':
      case 'Y':
      case 'Z':
      case '[':
      case '\\':
      case ']':
      case '^':
      case '_':
      case 'd':
      case 'e':
      case 'f':
      case 'g':
      case 'i':
      case 'j':
      case 'k':
      case 'l':
      case 'm':
      case 'u':
      case 'v':
        goto LABEL_4;
      case 'F':
        if (!dword_1004E23C8)
          goto LABEL_136;
        v9 = qword_1004E23C0;
        LOWORD(v224) = 0;
        off_1004E2408(qword_1004E23C0);
        sleep(2u);
        v10 = sub_10000AD18();
        sub_100019E20(&v224, 0, 0, 0, 0, 0);
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004D9F90);
        v11 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
          sub_100044A98((unsigned __int16 *)&v224, v10, v11);
        v12 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO))
        {
          v13 = off_1004E00B8[v10];
          *(_DWORD *)buf = 136315650;
          *(_QWORD *)&buf[4] = v13;
          *(_WORD *)&buf[12] = 1024;
          *(_DWORD *)&buf[14] = dword_1004E00D0;
          *(_WORD *)&buf[18] = 1024;
          *(_DWORD *)&buf[20] = dword_1004E00D4;
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "ACI %s chip with sw version major=%d, minor=%d.\n", buf, 0x18u);
        }
        v14 = sub_10000A7CC();
        v169 = 0u;
        v170 = 0u;
        v167 = 0u;
        v168 = 0u;
        v165 = 0u;
        v166 = 0u;
        v163 = 0u;
        v164 = 0u;
        v161 = 0u;
        v162 = 0u;
        v159 = 0u;
        v160 = 0u;
        v157 = 0u;
        v158 = 0u;
        memset(buf, 0, sizeof(buf));
        v15 = fopen("/etc/bluetool/bin_id.aci", "r");
        if (v15)
        {
          v16 = v15;
          if (fgets((char *)buf, 32, v15))
          {
            v17 = strtoul((const char *)buf, 0, 10);
            if (qword_1004E2420 != -1)
              dispatch_once(&qword_1004E2420, &stru_1004DA190);
            v18 = qword_1004E2428;
            if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)v139 = 67109120;
              *(_DWORD *)&v139[4] = v17;
              _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_INFO, "CPF bin id: 0x%08x.\n", v139, 8u);
            }
          }
          else
          {
            v17 = 0;
          }
          fclose(v16);
        }
        else
        {
          if (qword_1004E2420 != -1)
            dispatch_once(&qword_1004E2420, &stru_1004DA150);
          v85 = qword_1004E2428;
          if (!os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
          {
            v17 = 0;
            v93 = -1;
            goto LABEL_224;
          }
          sub_100044A28(v85, v86, v87, v88, v89, v90, v91, v92);
          v17 = 0;
        }
        v93 = qword_1004E2420;
LABEL_224:
        if (v14 && v14 == v17)
        {
          if (v93 != -1)
            dispatch_once(&qword_1004E2420, &stru_1004DA010);
          v111 = qword_1004E2428;
          if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO))
          {
            v112 = off_1004E00B8[v10];
            *(_DWORD *)buf = 136315394;
            *(_QWORD *)&buf[4] = v112;
            *(_WORD *)&buf[12] = 1024;
            *(_DWORD *)&buf[14] = v14;
            v113 = "ACI %s chip BIN_ID=%08x equals CPF bin_id -> Skip the boot.\n";
            v114 = v111;
            v115 = 18;
            goto LABEL_263;
          }
        }
        else
        {
          if (v93 != -1)
            dispatch_once(&qword_1004E2420, &stru_1004DA050);
          v116 = qword_1004E2428;
          if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO))
          {
            v117 = off_1004E00B8[v10];
            *(_DWORD *)buf = 136315650;
            *(_QWORD *)&buf[4] = v117;
            *(_WORD *)&buf[12] = 1024;
            *(_DWORD *)&buf[14] = v14;
            *(_WORD *)&buf[18] = 1024;
            *(_DWORD *)&buf[20] = v17;
            _os_log_impl((void *)&_mh_execute_header, v116, OS_LOG_TYPE_INFO, "ACI %s chip BIN_ID %08x differ from CPF bin_id %08x -> Go boot.\n", buf, 0x18u);
          }
          if (v10 > 1)
          {
            if (qword_1004E2420 != -1)
              dispatch_once(&qword_1004E2420, &stru_1004DA090);
            if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
              sub_1000449C8();
          }
          else if (sub_10000B8F8("/etc/bluetool/aci_boot.hcd")
                 || !sub_100009C3C(v9, "/etc/bluetool/aci_boot.hcd"))
          {
            sub_10001CDE0("power off", 0);
            usleep(0xC350u);
            sub_10001CDE0("power on", 0);
            usleep(0xC350u);
            sub_10001CDE0("device -D", 0);
            if (!v10)
              sleep(2u);
            sub_10001CDE0("aci -B", 0);
            usleep(0xC350u);
            sub_10001CDE0("hci info", 0);
            sub_10001CDE0("hci cmd 0xfe1f", 0);
            if (qword_1004E2420 != -1)
              dispatch_once(&qword_1004E2420, &stru_1004DA110);
            v118 = qword_1004E2428;
            if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)buf = 67109120;
              *(_DWORD *)&buf[4] = v10;
              v113 = "BOOT Done! for aci_platform=%d\n";
              goto LABEL_262;
            }
          }
          else
          {
            if (qword_1004E2420 != -1)
              dispatch_once(&qword_1004E2420, &stru_1004DA0D0);
            if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
              sub_100044968();
          }
        }
        return 0;
      case 'K':
        v176 = 0u;
        memset(v177, 0, sizeof(v177));
        v174 = 0u;
        v175 = 0u;
        v172 = 0u;
        v173 = 0u;
        v170 = 0u;
        v171 = 0u;
        v168 = 0u;
        v169 = 0u;
        v166 = 0u;
        v167 = 0u;
        v164 = 0u;
        v165 = 0u;
        v162 = 0u;
        v163 = 0u;
        v160 = 0u;
        v161 = 0u;
        v158 = 0u;
        v159 = 0u;
        v157 = 0u;
        memset(buf, 0, sizeof(buf));
        v19 = sub_100040610();
        v20 = (const char *)sub_100040D4C();
        if (v20 && !strcmp(v20, "APPLE_M1"))
        {
          v29 = 98;
        }
        else
        {
          v225 = -871113647;
          v224 = xmmword_100048E16;
          v223 = 1530707451;
          v222 = xmmword_100048E2A;
          __streamb = MGIsDeviceOneOfType(&v224);
          v221 = 1472775220;
          v220 = xmmword_100048E3E;
          v219 = 483476120;
          v218 = xmmword_100048E52;
          v134 = MGIsDeviceOneOfType(&v220);
          v217 = 282158961;
          v216 = xmmword_100048E66;
          v215 = 56502976;
          v214 = xmmword_100048E7A;
          v133 = MGIsDeviceOneOfType(&v216);
          v213 = -961843768;
          v212 = xmmword_100048E8E;
          v211 = 1282132887;
          v210 = xmmword_100048EA2;
          v132 = MGIsDeviceOneOfType(&v212);
          v209 = -1092155788;
          v208 = xmmword_100048EB6;
          v207 = 763775061;
          v206 = xmmword_100048ECA;
          v131 = MGIsDeviceOneOfType(&v208);
          v205 = -63049871;
          v204 = xmmword_100048EDE;
          v203 = -557458837;
          v202 = xmmword_100048EF2;
          v21 = MGIsDeviceOneOfType(&v204);
          v201 = 1730000236;
          v200 = xmmword_100048F06;
          v22 = MGIsDeviceOneOfType(&v200);
          v199 = 1530338216;
          v198 = xmmword_100048F1A;
          v197 = 406601745;
          v196 = xmmword_100048F2E;
          v23 = MGIsDeviceOneOfType(&v198);
          v195 = 1654218604;
          v194 = xmmword_100048F42;
          v193 = -1930811061;
          v192 = xmmword_100048F56;
          v24 = MGIsDeviceOneOfType(&v194);
          v191 = -182498503;
          v190 = xmmword_100048F6A;
          v25 = MGIsDeviceOneOfType(&v190);
          v189 = 841005628;
          v188 = xmmword_100048F7E;
          v187 = -2030489149;
          v186 = xmmword_100048F92;
          v26 = MGIsDeviceOneOfType(&v188);
          v185 = 1219348060;
          v184 = xmmword_100048FA6;
          v183 = 223445260;
          v182 = xmmword_100048FBA;
          v27 = MGIsDeviceOneOfType(&v184);
          v181 = -584398440;
          v180 = xmmword_100048FCE;
          v28 = (((MGIsDeviceOneOfType(&v180) | v27 | v26 | v25 | v24 | v23 | v22 | v21 | v131 | v132 | v133) | (v134 | __streamb)) & 1) == 0;
          v29 = 379;
          if (v28)
            v30 = 187;
          else
            v30 = 379;
          v179 = -879476163;
          v178 = xmmword_100048FE2;
          if (!MGIsDeviceOneOfType(&v178))
            v29 = v30;
        }
        if (sub_100018AA4((uint64_t)v19, buf))
        {
          if (qword_1004E2420 != -1)
            dispatch_once(&qword_1004E2420, &stru_1004DA450);
          if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
            sub_10004493C();
          off_1004E2408(qword_1004E23C0);
          v36 = 22;
          goto LABEL_154;
        }
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DA410);
        v94 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)v139 = 67109634;
          *(_DWORD *)&v139[4] = v29;
          *(_WORD *)&v139[8] = 1040;
          *(_DWORD *)&v139[10] = v29;
          *(_WORD *)&v139[14] = 2096;
          *(_QWORD *)&v140 = buf;
          _os_log_impl((void *)&_mh_execute_header, v94, OS_LOG_TYPE_INFO, "Regulatory Data (%d bytes): %.*P", v139, 0x18u);
        }
        off_1004E2408(qword_1004E23C0);
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DA2D0);
        v95 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)v139 = 0;
          _os_log_impl((void *)&_mh_execute_header, v95, OS_LOG_TYPE_INFO, "Power tables exist for this device", v139, 2u);
        }
        if (!sub_100040D4C())
        {
          *__error() = 94;
          v36 = 30;
          goto LABEL_154;
        }
        v96 = buf;
        do
        {
          if (*v96 != 1)
          {
            *__error() = 94;
            if (qword_1004E2420 != -1)
              dispatch_once(&qword_1004E2420, &stru_1004DA490);
            v120 = qword_1004E2428;
            if (!os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
            {
              v36 = 24;
              goto LABEL_156;
            }
            sub_1000448D4((uint64_t)v96, v120, v121, v122, v123, v124, v125, v126);
            v36 = 24;
            goto LABEL_154;
          }
          v97 = v96[3] + 4;
          if (off_1004E23D8(qword_1004E23C0, v96, v97) == -1)
          {
            if (qword_1004E2420 != -1)
              dispatch_once(&qword_1004E2420, &stru_1004DA4D0);
            if (!os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
            {
              v36 = 3;
              goto LABEL_156;
            }
            sub_10004487C();
            v36 = 3;
LABEL_154:
            if (qword_1004E2420 != -1)
              dispatch_once(&qword_1004E2420, &stru_1004DA310);
            goto LABEL_156;
          }
          v98 = *(unsigned __int16 *)(v96 + 1);
          if (qword_1004E2420 != -1)
            dispatch_once(&qword_1004E2420, &stru_1004DA510);
          v99 = qword_1004E2428;
          v100 = os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO);
          if (v100)
          {
            *(_DWORD *)v139 = 67109120;
            *(_DWORD *)&v139[4] = v98;
            _os_log_impl((void *)&_mh_execute_header, v99, OS_LOG_TYPE_INFO, "aci_download_power_tables: Handle opcode 0x%04x", v139, 8u);
          }
          if (v98 == 65411)
          {
            usleep(0xBB8u);
            goto LABEL_186;
          }
          if ((sub_10000A960(v100, v98) & 0x80000000) != 0)
          {
            if (qword_1004E2420 != -1)
              dispatch_once(&qword_1004E2420, &stru_1004DA550);
            if (!os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
            {
              v36 = 255;
LABEL_156:
              if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
                sub_100044850();
              goto LABEL_158;
            }
            sub_1000448A8();
            v36 = 255;
            goto LABEL_154;
          }
          if (qword_1004E2420 != -1)
            dispatch_once(&qword_1004E2420, &stru_1004DA590);
          v101 = qword_1004E2428;
          if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)v139 = 67109120;
            *(_DWORD *)&v139[4] = v98;
            _os_log_impl((void *)&_mh_execute_header, v101, OS_LOG_TYPE_INFO, "aci_download_power_tables: opcode 0x%04x pass", v139, 8u);
          }
LABEL_186:
          v96 += v97;
          v29 -= v97;
        }
        while ((_WORD)v29);
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DA350);
        v127 = qword_1004E2428;
        v36 = 0;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)v139 = 0;
          _os_log_impl((void *)&_mh_execute_header, v127, OS_LOG_TYPE_DEFAULT, "Power tables download Done!", v139, 2u);
          v36 = 0;
        }
LABEL_158:
        *(_QWORD *)&v224 = 0;
        v153 = 0u;
        v154 = 0u;
        v151 = 0u;
        v152 = 0u;
        v149 = 0u;
        v150 = 0u;
        v147 = 0u;
        v148 = 0u;
        v145 = 0u;
        v146 = 0u;
        v143 = 0u;
        v144 = 0u;
        v141 = 0u;
        v142 = 0u;
        *(_OWORD *)v139 = 0u;
        v140 = 0u;
        LOBYTE(v222) = 0;
        sub_10001AD7C(64817, (uint64_t)&v222, 1uLL, (uint64_t)v139, &v224, 14);
        if (v139[3])
        {
          if (qword_1004E2420 != -1)
            dispatch_once(&qword_1004E2420, &stru_1004DA3D0);
          if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
            sub_100044824();
        }
        else
        {
          if (qword_1004E2420 != -1)
            dispatch_once(&qword_1004E2420, &stru_1004DA390);
          if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEBUG))
            sub_1000447EC();
        }
        return v36;
      case 'N':
        v31 = qword_1004E23C0;
        v32 = 0;
        return sub_10000A1F0(v31, (uint64_t)v32);
      case 'O':
        if (!dword_1004E23C8)
          goto LABEL_136;
        v33 = (const char *)sub_100040D4C();
        if (v33 && !strcmp(v33, "ACIFPGA"))
          sleep(2u);
        else
          usleep(0xC350u);
        return 0;
      case 'Q':
        v34 = 0;
        goto LABEL_80;
      case 'R':
        memset(&buf[4], 0, 24);
        *(_DWORD *)buf = 419316737;
        CCRandomGenerateBytes(&buf[4], 0x18uLL);
        v35 = off_1004E23D8(qword_1004E23C0, buf, 28);
        if ((_DWORD)v35 != -1)
          return (unsigned __int16)sub_10000A960(v35, 0xFE44u);
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DA850);
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
          sub_100044B58();
        return 0xFFFFLL;
      case 'S':
        v37 = qword_1004E23C0;
        bzero(buf, 0x780uLL);
        bzero(v139, 0x780uLL);
        *(_QWORD *)&buf[8] = "cmd";
        *(_QWORD *)&buf[16] = "0x1009";
        sub_10001A080(3, (const char **)buf, (char **)v139);
        *(_QWORD *)&buf[8] = "cmd";
        *(_QWORD *)&buf[16] = "0xc1a";
        *(_QWORD *)&buf[24] = "0x03";
        sub_10001A080(4, (const char **)buf, (char **)v139);
        *(_QWORD *)&buf[8] = "cmd";
        *(_QWORD *)&buf[16] = "0xc05";
        *(_QWORD *)&buf[24] = "0x02";
        *(_QWORD *)&v157 = "0x00";
        *((_QWORD *)&v157 + 1) = "0x03";
        sub_10001A080(6, (const char **)buf, (char **)v139);
        *(_QWORD *)&buf[8] = "cmd";
        *(_QWORD *)&buf[16] = "0xfe10";
        *(_QWORD *)&buf[24] = "0x01";
        *(_QWORD *)&v157 = "0x78";
        *((_QWORD *)&v157 + 1) = "0xff";
        *(_QWORD *)&v158 = "0x01";
        *((_QWORD *)&v158 + 1) = "0xff";
        sub_10001A080(8, (const char **)buf, (char **)v139);
        *(_QWORD *)&buf[8] = "cmd";
        *(_QWORD *)&buf[16] = "0xfe11";
        sub_10001A080(3, (const char **)buf, (char **)v139);
        sub_100009FE0(v37, "06:05:04:03:02:01");
        return 0;
      case 'U':
        WORD4(v222) = 0;
        *(_QWORD *)&v222 = 0;
        v155 = 0;
        v153 = 0u;
        v154 = 0u;
        v151 = 0u;
        v152 = 0u;
        v149 = 0u;
        v150 = 0u;
        v147 = 0u;
        v148 = 0u;
        v145 = 0u;
        v146 = 0u;
        v143 = 0u;
        v144 = 0u;
        v141 = 0u;
        v142 = 0u;
        *(_OWORD *)v139 = 0u;
        v140 = 0u;
        *(_QWORD *)&v220 = 0;
        bzero(buf, 0x400uLL);
        v38 = (const char *)sub_100040D4C();
        off_1004E23E8(qword_1004E23C0, &unk_100048E13, 3);
        do
          off_1004E23F0(qword_1004E23C0, v139, 258, &v220);
        while (v139[0] != 14);
        __stream = *(unsigned __int16 *)&v139[6];
        v135 = *(unsigned __int16 *)&v139[8];
        v39 = *(unsigned __int16 *)&v139[10];
        v40 = *(unsigned __int16 *)&v139[12];
        if (!v38)
          goto LABEL_44;
        if (!strcmp(v38, "APPLE_M1"))
        {
          LODWORD(v38) = *(unsigned __int16 *)&v139[14];
          v42 = (unsigned __int16)v140;
          v41 = WORD1(v140);
        }
        else
        {
          if (strcmp(v38, "APPLE_M2") && strcmp(v38, "APPLE_M2_5"))
          {
            LODWORD(v38) = 0;
LABEL_44:
            v41 = 0;
            v42 = 0;
            v43 = 0;
LABEL_194:
            sub_100018954((uint64_t)buf);
            LODWORD(v222) = 16654081;
            if (off_1004E23D8(qword_1004E23C0, &v222, 4) == -1)
            {
              if (qword_1004E2420 != -1)
                dispatch_once(&qword_1004E2420, &stru_1004DA710);
              if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
                sub_100044B58();
            }
            else
            {
              v155 = 0;
              v153 = 0u;
              v154 = 0u;
              v151 = 0u;
              v152 = 0u;
              v149 = 0u;
              v150 = 0u;
              v147 = 0u;
              v148 = 0u;
              v145 = 0u;
              v146 = 0u;
              v143 = 0u;
              v144 = 0u;
              v141 = 0u;
              v142 = 0u;
              *(_OWORD *)v139 = 0u;
              v140 = 0u;
              do
                off_1004E23F0(qword_1004E23C0, v139, 258, &v220);
              while (v139[0] != 14);
              printf("pktlen %lu\n", (_QWORD)v220);
              v102.i32[0] = *(_DWORD *)&v139[2];
              if (vmovn_s16((int16x8_t)vmovl_u8(v102)).u32[0] == 16654081)
              {
                dword_1004E00D0 = v139[6];
                dword_1004E00D4 = v139[7];
                if (v139[6] == 8 && v139[7] == 32)
                {
                  v103 = v42;
                  v104 = v41;
                  v105 = (int)v38;
                  if (qword_1004E2420 != -1)
                    dispatch_once(&qword_1004E2420, &stru_1004DA790);
                  v106 = qword_1004E2428;
                  if (!os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO))
                    goto LABEL_286;
                  LODWORD(v224) = 67109888;
                  DWORD1(v224) = v139[6];
                  WORD4(v224) = 1024;
                  *(_DWORD *)((char *)&v224 + 10) = v139[7];
                  HIWORD(v224) = 1024;
                  v225 = v139[8];
                  v226 = 1024;
                  v227 = v139[9];
                  v107 = "Default ACI BGA SW version: %d.%d, chip revision: %d, chip mode=%d";
                }
                else
                {
                  v103 = v42;
                  if (v139[6] > 1u || v139[6] == 1 && v139[7] >= 0xBu)
                  {
                    v104 = v41;
                    v105 = (int)v38;
                    if (qword_1004E2420 != -1)
                      dispatch_once(&qword_1004E2420, &stru_1004DA7D0);
                    v109 = qword_1004E2428;
                    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO))
                    {
                      LODWORD(v224) = 67110144;
                      DWORD1(v224) = v139[6];
                      WORD4(v224) = 1024;
                      *(_DWORD *)((char *)&v224 + 10) = v139[7];
                      HIWORD(v224) = 1024;
                      v225 = v139[8];
                      v226 = 1024;
                      v227 = v139[9];
                      v228 = 1024;
                      v229 = v139[10];
                      _os_log_impl((void *)&_mh_execute_header, v109, OS_LOG_TYPE_INFO, "SW version: %d.%d.%d, chip revision: %d, chip mode=%d", (uint8_t *)&v224, 0x20u);
                    }
                    dword_1004E1FA8 = v139[8];
                    v110 = 9;
LABEL_287:
                    v128 = v110;
                    v129 = *(unsigned __int8 *)((unint64_t)v139 | v110);
                    switch(v129)
                    {
                      case 255:
                        v130 = "CHIP is: FPGA";
                        break;
                      case 32:
                        v130 = "CHIP is: BGA";
                        break;
                      case 15:
                        v130 = "CHIP is: TRIO";
                        break;
                      default:
LABEL_294:
                        printf("MAC FW Version:              %d.%d.%d.%d\n", __stream, v135, v39, v40);
                        printf("PHY FW Version:              %d.%d.%d.%d\n", v105, v103, v104, v43);
                        printf("Chip Revision:               %02x\n", *(unsigned __int8 *)(v128 | (unint64_t)v139));
                        printf("Chip mode:                   %02x\n", *(unsigned __int8 *)((v128 | (unint64_t)v139) + 1));
                        printf("ROOT Clock:                  %02x%02x\n", *(unsigned __int8 *)((v128 | (unint64_t)v139) + 3), *(unsigned __int8 *)(v128 | (unint64_t)v139 | 2));
                        printf("Slow Clock used:             %02x\n", *(unsigned __int8 *)(v128 | (unint64_t)v139 | 4));
                        printf("Process Type:                %02x\n", *(unsigned __int8 *)((v128 | (unint64_t)v139) + 5));
                        printf("ODP proccess:                %02x\n", *(unsigned __int8 *)(v128 | (unint64_t)v139 | 6));
                        if ((unint64_t)v220 >= 0x3D)
                        {
                          printf("Deep Sleep Mode:             %02x\n", *(unsigned __int8 *)((v128 | (unint64_t)v139) + 7));
                          printf("Whitening Mode:              %02x\n", *(unsigned __int8 *)((v128 | (unint64_t)v139) + 8));
                          printf("CDC Mode:                    %02x\n", *(unsigned __int8 *)((v128 | (unint64_t)v139) + 9));
                          printf("Hopping Mode:                %02x\n", *(unsigned __int8 *)((v128 | (unint64_t)v139) + 0xA));
                          printf("HCI UART Baud Rate:          %02x%02x%02x%02x\n", *(unsigned __int8 *)((v128 | (unint64_t)v139) + 0xE), *(unsigned __int8 *)((v128 | (unint64_t)v139) + 0xD), *(unsigned __int8 *)((v128 | (unint64_t)v139) + 0xC), *(unsigned __int8 *)((v128 | (unint64_t)v139) + 0xB));
                          printf("Temperature Index:           %02x\n", *(unsigned __int8 *)((v128 | (unint64_t)v139) + 0xF));
                          printf("Detected Temperature:        %02x\n", *(unsigned __int8 *)((v128 | (unint64_t)v139) + 0x10));
                          printf("FREF/TCXO Clock:             %02x%02x\n", v139[v128 | 0x12], *(unsigned __int8 *)((v128 | (unint64_t)v139) + 0x11));
                          printf("PLL Sharing Running Mode:    %02x\n", *(unsigned __int8 *)((v128 | (unint64_t)v139) + 0x13));
                          printf("RF Type:                     %02x\n", v139[v128 | 0x14]);
                          printf("RTL Version:                 %02x%02x\n", v139[v128 | 0x16], *(unsigned __int8 *)((v128 | (unint64_t)v139) + 0x15));
                          printf("FPGA User Code:              %02x%02x%02x%02x\n", *(unsigned __int8 *)((v128 | (unint64_t)v139) + 0x1A), *(unsigned __int8 *)((v128 | (unint64_t)v139) + 0x19), *(unsigned __int8 *)((v128 | (unint64_t)v139) + 0x18), *(unsigned __int8 *)((v128 | (unint64_t)v139) + 0x17));
                          printf("MAC bin id:                  %02x%02x%02x%02x\n", *(unsigned __int8 *)((v128 | (unint64_t)v139) + 0x1E), *(unsigned __int8 *)((v128 | (unint64_t)v139) + 0x1D), *(unsigned __int8 *)((v128 | (unint64_t)v139) + 0x1C), *(unsigned __int8 *)((v128 | (unint64_t)v139) + 0x1B));
                          printf("PHY bin id:                  %02x%02x%02x%02x\n", *(unsigned __int8 *)((v128 | (unint64_t)v139) + 0x22), *(unsigned __int8 *)((v128 | (unint64_t)v139) + 0x21), *(unsigned __int8 *)((v128 | (unint64_t)v139) + 0x20), *(unsigned __int8 *)((v128 | (unint64_t)v139) + 0x1F));
                        }
                        off_1004E23E8(qword_1004E23C0, &unk_100049239, 3);
                        do
                          off_1004E23F0(qword_1004E23C0, v139, 258, &v220);
                        while (v139[0] != 14);
                        printf("Bluetooth Address:           %02x:%02x:%02x:%02x:%02x:%02x\n");
                        return 0;
                    }
                    puts(v130);
                    goto LABEL_294;
                  }
                  v104 = v41;
                  v105 = (int)v38;
                  if (qword_1004E2420 != -1)
                    dispatch_once(&qword_1004E2420, &stru_1004DA810);
                  v106 = qword_1004E2428;
                  if (!os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO))
                  {
LABEL_286:
                    v110 = 8;
                    goto LABEL_287;
                  }
                  LODWORD(v224) = 67109888;
                  DWORD1(v224) = v139[6];
                  WORD4(v224) = 1024;
                  *(_DWORD *)((char *)&v224 + 10) = v139[7];
                  HIWORD(v224) = 1024;
                  v225 = v139[8];
                  v226 = 1024;
                  v227 = v139[9];
                  v107 = "SW version: %d.%d, chip revision: %d, chip mode=%d";
                }
                _os_log_impl((void *)&_mh_execute_header, v106, OS_LOG_TYPE_INFO, v107, (uint8_t *)&v224, 0x1Au);
                goto LABEL_286;
              }
              *__error() = 94;
              if (qword_1004E2420 != -1)
                dispatch_once(&qword_1004E2420, &stru_1004DA750);
              v108 = qword_1004E2428;
              if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
              {
                LODWORD(v224) = 67110656;
                DWORD1(v224) = v139[2];
                WORD4(v224) = 1024;
                *(_DWORD *)((char *)&v224 + 10) = v139[3];
                HIWORD(v224) = 1024;
                v225 = v139[4];
                v226 = 1024;
                v227 = v139[5];
                v228 = 1024;
                v229 = v139[6];
                v230 = 1024;
                v231 = v139[7];
                v232 = 1024;
                v233 = 65055;
                _os_log_error_impl((void *)&_mh_execute_header, v108, OS_LOG_TYPE_ERROR, "EVNT: Invalid opcode Got:[0x%x 0x%x 0x%x 0x%x 0x%x 0x%x], waiting for [0x%x] !", (uint8_t *)&v224, 0x2Cu);
              }
            }
            return 0xFFFFLL;
          }
          LODWORD(v38) = *(unsigned __int16 *)&v139[14];
          v41 = (unsigned __int16)v140;
          v42 = WORD1(v140);
        }
        v43 = WORD2(v140);
        __sprintf_chk((char *)buf, 0, 0x400uLL, "MAC FW Version: %d.%d.%d.%d, PHY FW Version: %d.%d.%d.%d", __stream, v135, v39, v40, (_DWORD)v38, v42, v41, WORD2(v140));
        goto LABEL_194;
      case 'V':
        if (sub_10003E07C() == 6)
          v44 = "Using ACI Chipset changes (ACI_BT_SW_%d_%04d_%04d, transport AppleBTHci)\n\n";
        else
          v44 = "Using ACI Chipset changes (ACI_BT_SW_%d_%04d_%04d)\n\n";
        printf(v44, 9, 27, 25);
        return 0;
      case 'W':
        if (!dword_1004E23C8)
        {
LABEL_136:
          v36 = 1;
          fwrite("First open the port with device -D command\n", 0x2BuLL, 1uLL, __stderrp);
          return v36;
        }
        v45 = qword_1004E23C0;
        off_1004E2408(qword_1004E23C0);
        v46 = sub_10000AD18();
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004D9C50);
        v47 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 67109120;
          *(_DWORD *)&buf[4] = v46;
          _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_INFO, "aci_platform=%d\n", buf, 8u);
        }
        if (v46 > 1)
        {
          if (qword_1004E2420 != -1)
            dispatch_once(&qword_1004E2420, &stru_1004D9C90);
          if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
            sub_10004478C();
        }
        else
        {
          if (sub_10000B8F8("/etc/bluetool/aci_init.hcd"))
          {
            if (qword_1004E2420 != -1)
              dispatch_once(&qword_1004E2420, &stru_1004D9D10);
            v48 = qword_1004E2428;
            if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)buf = 0;
              _os_log_impl((void *)&_mh_execute_header, v48, OS_LOG_TYPE_INFO, "Using default init file\n", buf, 2u);
            }
            v49 = sub_1000166FC();
            if (v49)
              sub_100018954(v49);
            v50 = sub_10000BB00(v45, (uint64_t (*)(_BYTE *))sub_10000BD24);
          }
          else
          {
            if (qword_1004E2420 != -1)
              dispatch_once(&qword_1004E2420, &stru_1004D9CD0);
            v119 = qword_1004E2428;
            if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)buf = 136315138;
              *(_QWORD *)&buf[4] = "/etc/bluetool/aci_init.hcd";
              _os_log_impl((void *)&_mh_execute_header, v119, OS_LOG_TYPE_INFO, "Using non-default init file: %s\n", buf, 0xCu);
            }
            v50 = sub_100009C3C(v45, "/etc/bluetool/aci_init.hcd");
          }
          if (v50)
          {
            if (qword_1004E2420 != -1)
              dispatch_once(&qword_1004E2420, &stru_1004D9D50);
            if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
              sub_10004472C();
          }
          else
          {
            if (qword_1004E2420 != -1)
              dispatch_once(&qword_1004E2420, &stru_1004D9D90);
            v118 = qword_1004E2428;
            if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)buf = 67109120;
              *(_DWORD *)&buf[4] = v46;
              v113 = "INIT Done! for aci_platform=%d\n";
LABEL_262:
              v114 = v118;
              v115 = 8;
LABEL_263:
              _os_log_impl((void *)&_mh_execute_header, v114, OS_LOG_TYPE_INFO, v113, buf, v115);
            }
          }
        }
        return 0;
      case 'a':
        v5 = qword_1004E23C0;
        v6 = optarg;
        return sub_100009FE0(v5, v6);
      case 'b':
        if (sub_10003E07C() == 6)
          return 0;
        v7 = qword_1004E23C0;
        v8 = optarg;
        return sub_100009E8C(v7, v8);
      case 'c':
        v52 = qword_1004E23C0;
        v169 = 0u;
        v170 = 0u;
        v167 = 0u;
        v168 = 0u;
        v165 = 0u;
        v166 = 0u;
        v163 = 0u;
        v164 = 0u;
        v161 = 0u;
        v162 = 0u;
        v159 = 0u;
        v160 = 0u;
        v157 = 0u;
        v158 = 0u;
        memset(buf, 0, sizeof(buf));
        v139[0] = 0;
        off_1004E2408(qword_1004E23C0);
        v53 = fopen("/Users/doronk/test_temp/acl_data.txt", "w+");
        while (!read(v52, v139, 1uLL))
          ;
        if (v139[0] == 2)
        {
          read(v52, buf, 4uLL);
          v54 = buf[2] | (buf[3] << 8);
          fprintf(__stderrp, "ACL data header 4 bytes=0x%x, 0x%x, 0x%x, 0x%x\n", buf[0], buf[1], buf[2], buf[3]);
          fprintf(__stderrp, "ACL data length=%d\n", v54);
          read(v52, buf, v54);
          if ((_DWORD)v54)
          {
            for (i = 0; i != v54; ++i)
            {
              fprintf(__stderrp, "Data %d = 0x%x\n", i, buf[i]);
              fprintf(v53, "%d", buf[i]);
            }
          }
        }
        else
        {
          fprintf(__stderrp, "No ACL data, first byte=%d\n", v139[0]);
        }
        v84 = v53;
        goto LABEL_131;
      case 'h':
        fprintf(__stderrp, "%s - ACI Specific Commands\n", *(const char **)a2);
        fwrite("-V    - Print ACI version information\n", 0x26uLL, 1uLL, __stderrp);
        fwrite("-W    - Download ACI init script internally or from /etc/bluetool/\n", 0x43uLL, 1uLL, __stderrp);
        fwrite("-w    - Download HCD file from /path/to/hcd/file.hcd\n", 0x35uLL, 1uLL, __stderrp);
        fwrite("-b    - Set the baud rate - Baud Rate (UART only)\n", 0x32uLL, 1uLL, __stderrp);
        fwrite("-B    - Set the baud rate using a predefined value (UART only)\n", 0x3FuLL, 1uLL, __stderrp);
        fwrite("-a    - Set BDADDR - 00:00:00:00:00:00\n", 0x27uLL, 1uLL, __stderrp);
        fwrite("-A    - Set BDADDR using devicetree\n", 0x24uLL, 1uLL, __stderrp);
        fwrite("-n    - Set the local name - Local Name\n", 0x28uLL, 1uLL, __stderrp);
        fwrite("-p    - Routes sco over PCM\n", 0x1CuLL, 1uLL, __stderrp);
        fwrite("-t    - Routes sco over Transport (HCI)\n", 0x28uLL, 1uLL, __stderrp);
        fwrite("-c    - Get ACL data, up to 256 bytes\n", 0x26uLL, 1uLL, __stderrp);
        fwrite("-s    - Get SCO data to file\n", 0x1DuLL, 1uLL, __stderrp);
        fwrite("-S    - Set device for SCO over HCI, Set Event filter to accept any connection and change the bT address to 123456\n", 0x73uLL, 1uLL, __stderrp);
        fwrite("-o    - For ACI options: \n\t addr1- to change BT address to 123456, \n\t hcivoice- for voice over HCI (UART), \n\t pcmvoice- for voice over PCM include Trio L codec configuration script\n", 0xB5uLL, 1uLL, __stderrp);
        fwrite("-O    - Sleep delay after \"power on\", adapted to different ACI chipsets (BGA, FPGA, etc...)\n", 0x5CuLL, 1uLL, __stderrp);
        fwrite("-F    - Download FW RAM image HCD file from /etc/bluetool/\n", 0x3BuLL, 1uLL, __stderrp);
        fwrite("-U    - Get System Status \n", 0x1BuLL, 1uLL, __stderrp);
        fwrite("-R    - Set Rand Seed \n", 0x17uLL, 1uLL, __stderrp);
        fwrite("-Q    - Download MSF from ioreg\n", 0x20uLL, 1uLL, __stderrp);
        fwrite("-q    - Download MSF from /path/to/msf/msf.bin\n", 0x2FuLL, 1uLL, __stderrp);
        fwrite("-K    - Download power regulatory HCD file internally\n", 0x36uLL, 1uLL, __stderrp);
        fputc(10, __stderrp);
        return 0;
      case 'n':
        v31 = qword_1004E23C0;
        v32 = optarg;
        return sub_10000A1F0(v31, (uint64_t)v32);
      case 'o':
        return 0;
      case 'p':
        *(_DWORD *)buf = 33519616;
        goto LABEL_125;
      case 'q':
        v34 = optarg;
LABEL_80:
        sub_10000A464(v34);
        return 0;
      case 'r':
        return sub_1000170A8(1);
      case 's':
        v56 = qword_1004E23C0;
        v161 = 0u;
        v162 = 0u;
        v159 = 0u;
        v160 = 0u;
        v157 = 0u;
        v158 = 0u;
        memset(buf, 0, sizeof(buf));
        v139[0] = 0;
        off_1004E2408(qword_1004E23C0);
        __streama = fopen("/Users/doronk/test_temp/sco_data.txt", "w");
        do
        {
          v57 = read(v56, v139, 1uLL);
          usleep(0x3E8u);
        }
        while ((unint64_t)(v57 + 1) < 2);
        v58 = 0;
        v59 = 1;
        while (1)
        {
          if ((v59 & 1) == 0)
          {
            while ((unint64_t)(read(v56, v139, 1uLL) + 1) < 2)
              ;
          }
          fprintf(__stderrp, "header=0x%x\n", v139[0]);
          if (v139[0] == 3)
          {
            v73 = 0;
            v74 = 0;
            do
            {
              v75 = v73;
              v76 = read(v56, &buf[(unsigned __int16)v74], 1uLL);
              v74 += v76 & ~(v76 >> 63);
              v73 = v75 + 1;
            }
            while ((unsigned __int16)v74 <= 2u && v75 < 0x752F);
            if (v75 <= 0x752E)
            {
              v78 = buf[2];
              if (!buf[2])
                goto LABEL_122;
              v79 = 0;
              v80 = 0;
              do
              {
                v81 = v79;
                v82 = read(v56, &buf[(unsigned __int16)v80], 1uLL);
                v80 += v82 & ~(v82 >> 63);
                v79 = v81 + 1;
              }
              while (v78 > (unsigned __int16)v80 && v81 < 0x752F);
              if (v81 <= 0x752E)
              {
LABEL_122:
                fprintf(__stderrp, "count = %d, length=%d\n", (unsigned __int16)++v58, v78);
                fwrite(buf, 1uLL, v78, __streama);
LABEL_123:
                v59 = 0;
                continue;
              }
            }
            return 1;
          }
          if (v139[0] != 4)
            break;
          v60 = 0;
          v61 = 0;
          do
          {
            v62 = v60;
            v63 = read(v56, &buf[(unsigned __int16)v61], 1uLL);
            v61 += v63 & ~(v63 >> 63);
            v60 = v62 + 1;
          }
          while ((unsigned __int16)v61 <= 1u && v62 < 0x752F);
          if (v62 > 0x752E)
            return 1;
          fprintf(__stderrp, "Event opcode=0x%x, length=%d\n", buf[0], buf[1]);
          v59 = 0;
          v65 = buf[1];
          if (buf[1])
          {
            v66 = 0;
            v67 = 0;
            do
            {
              v68 = v66;
              v69 = read(v56, &buf[(unsigned __int16)v67], 1uLL);
              v67 += v69 & ~(v69 >> 63);
              v66 = v68 + 1;
            }
            while (v65 > (unsigned __int16)v67 && v68 < 0x752F);
            if (v68 <= 0x752E)
            {
              v71 = buf;
              do
              {
                v72 = *v71++;
                fprintf(__stderrp, "R: 0x%02x\n", v72);
                --v65;
              }
              while (v65);
              goto LABEL_123;
            }
            return 1;
          }
        }
        fprintf(__stderrp, "No H4 data, first byte=%d, finish reading\n", v139[0]);
        v84 = __streama;
LABEL_131:
        fclose(v84);
        return 0;
      case 't':
        *(_DWORD *)buf = 33519617;
LABEL_125:
        buf[4] = -1;
        sub_10001AD7C(65040, (uint64_t)buf, 5uLL, 0, 0, 0);
        return 0;
      case 'w':
        return sub_100009C3C(qword_1004E23C0, optarg);
      default:
        if ((_DWORD)v4 == -1)
          return 0;
LABEL_4:
        fprintf(__stderrp, "Invalid option '%c'\n", v4);
        continue;
    }
  }
}

uint64_t sub_100009C3C(uint64_t a1, char *a2)
{
  int v4;
  NSObject *v5;
  NSObject *v6;
  char *v7;
  uint64_t v8;
  stat v10;
  uint8_t buf[4];
  _BYTE v12[18];

  memset(&v10, 0, sizeof(v10));
  v4 = stat(a2, &v10);
  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004DA1D0);
  v5 = qword_1004E2428;
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 67109378;
    *(_DWORD *)v12 = v4;
    *(_WORD *)&v12[4] = 2080;
    *(_QWORD *)&v12[6] = a2;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "stat_result=%d file path=%s", buf, 0x12u);
  }
  if (v4)
  {
    perror("stat ");
  }
  else
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DA210);
    v6 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO))
    {
      v7 = ctime(&v10.st_mtimespec.tv_sec);
      *(_DWORD *)buf = 136315394;
      *(_QWORD *)v12 = v7;
      *(_WORD *)&v12[8] = 2048;
      *(_QWORD *)&v12[10] = v10.st_size;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "File last changed:%s File size=%lld Bytes", buf, 0x16u);
    }
  }
  qword_1004E1FA0 = (uint64_t)fopen(a2, "r");
  if (qword_1004E1FA0)
  {
    sub_100018954((uint64_t)a2);
    v8 = sub_10000BB00(a1, sub_10000C27C);
    fclose((FILE *)qword_1004E1FA0);
  }
  else
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DA250);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100044B84();
    return 0xFFFFFFFFLL;
  }
  return v8;
}

uint64_t sub_100009E8C(int a1, char *__str)
{
  const char *v2;
  char *v3;
  unint64_t v4;
  unsigned int v5;
  uint64_t v6;
  int v8;
  __int16 v9;
  char v10;
  char v11;
  __int16 v12;

  if (__str)
  {
    if (*__str == 36)
    {
      v2 = __str + 1;
      v3 = getenv(__str + 1);
      fprintf(__stderrp, "Overriding baud rate from environment variable: %s = %s\n", v2, v3);
      v4 = strtoul(v3, 0, 0);
    }
    else
    {
      v4 = strtoul(__str, 0, 0);
    }
  }
  else
  {
    v5 = sub_10003DDA4();
    if (v5)
      v4 = v5;
    else
      v4 = 2400000;
  }
  v12 = 0;
  v8 = 83834369;
  v9 = v4;
  v10 = BYTE2(v4);
  v11 = BYTE3(v4);
  v6 = off_1004E23D8(qword_1004E23C0, &v8, 8);
  if ((_DWORD)v6)
  {
    if ((v6 & 0x80000000) == 0)
      *__error() = 5;
  }
  else if ((sub_10000A960(v6, 0xFF36u) & 0x80000000) == 0)
  {
    off_1004E23F8(qword_1004E23C0, v4);
    return 0;
  }
  return 0xFFFFFFFFLL;
}

uint64_t sub_100009FE0(uint64_t a1, const char *a2)
{
  const char *v2;
  const char *v3;
  char *v4;
  uint8x8_t v5;
  uint8x8_t v6;
  uint64_t result;
  int16x8_t v8;
  uint64_t v9;
  int16x8_t v10;
  uint64_t v11;
  int v12;
  _DWORD v13[2];
  uint64_t v14;
  char v15;
  char v16;

  memset(v13, 0, 6);
  if (!a2)
  {
    WORD2(v14) = 0;
    LODWORD(v14) = 0;
    if (sub_10003E354((unsigned __int8 *)&v14))
    {
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004D9A50);
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
        sub_100044C44();
      return 0xFFFFFFFFLL;
    }
    v5.i32[0] = *(_DWORD *)((char *)&v14 + 2);
    v8 = (int16x8_t)vmovl_u8(v5);
    *(int16x4_t *)v8.i8 = vrev64_s16(*(int16x4_t *)v8.i8);
    v13[0] = vmovn_s16(v8).u32[0];
    LOBYTE(v13[1]) = BYTE1(v14);
    BYTE1(v13[1]) = v14;
LABEL_12:
    LODWORD(v9) = 117179905;
    v6.i32[0] = *(_DWORD *)((char *)v13 + 2);
    v10 = (int16x8_t)vmovl_u8(v6);
    *(int16x4_t *)v10.i8 = vrev64_s16(*(int16x4_t *)v10.i8);
    HIDWORD(v9) = vmovn_s16(v10).u32[0];
    v14 = v9;
    v15 = BYTE1(v13[0]);
    v16 = v13[0];
    v11 = off_1004E23D8(qword_1004E23C0, &v14, 10);
    if (!(_DWORD)v11)
      return sub_10000A960(v11, 0xFC06u);
    v12 = v11;
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D9A90);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
    {
      sub_100044BE4();
      if (v12 < 0)
        return 0xFFFFFFFFLL;
    }
    else if (v12 < 0)
    {
      return 0xFFFFFFFFLL;
    }
    *__error() = 5;
    return 0xFFFFFFFFLL;
  }
  v2 = a2;
  if (*a2 == 36)
  {
    v3 = a2 + 1;
    v4 = getenv(a2 + 1);
    fprintf(__stderrp, "Overriding BDADDR from environment variable: %s = %s\n", v3, v4);
    v2 = v4;
  }
  result = sub_10000B1C0(v2, (uint64_t)v13);
  if ((_DWORD)result != -1)
    goto LABEL_12;
  return result;
}

uint64_t sub_10000A1F0(uint64_t a1, uint64_t a2)
{
  char *v2;
  int v3;
  unsigned int v4;
  uint64_t v5;
  _BYTE *v6;
  char v7;
  uint64_t v8;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  _BYTE v19[251];
  char __s[16];
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;

  v34 = 0u;
  v35 = 0u;
  v32 = 0u;
  v33 = 0u;
  v30 = 0u;
  v31 = 0u;
  v28 = 0u;
  v29 = 0u;
  v26 = 0u;
  v27 = 0u;
  v24 = 0u;
  v25 = 0u;
  v22 = 0u;
  v23 = 0u;
  *(_OWORD *)__s = 0u;
  v21 = 0u;
  if (a2)
  {
    v2 = (char *)a2;
    if (*(_BYTE *)a2 == 36)
    {
      v2 = getenv((const char *)(a2 + 1));
      fprintf(__stderrp, "Overriding hostname from environment variable: %s = %s\n");
    }
    else
    {
      fprintf(__stderrp, "Using passed hostname: %s\n");
    }
  }
  else
  {
    v34 = 0uLL;
    v35 = 0uLL;
    v32 = 0uLL;
    v33 = 0uLL;
    v30 = 0uLL;
    v31 = 0uLL;
    v28 = 0uLL;
    v29 = 0uLL;
    v26 = 0uLL;
    v27 = 0uLL;
    v24 = 0uLL;
    v25 = 0uLL;
    v22 = 0uLL;
    v23 = 0uLL;
    *(_OWORD *)__s = 0uLL;
    v21 = 0uLL;
    j__gethostname(__s, 0x100uLL);
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D9B10);
    v2 = __s;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEBUG))
      sub_100044CDC();
  }
  v3 = strlen(v2);
  if (v3)
  {
    memset(v19, 0, sizeof(v19));
    v18 = -133426431;
    v4 = v3 - 1;
    if (v3 >= 1)
    {
      if (v4 >= 0xF7)
        v4 = 247;
      v5 = v4 + 1;
      v6 = v19;
      do
      {
        v7 = *v2++;
        *v6++ = v7;
        --v5;
      }
      while (v5);
    }
    v8 = off_1004E23D8(qword_1004E23C0, &v18, 252);
    if ((_DWORD)v8 != -1)
      return sub_10000A960(v8, 0xC13u);
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D9B50);
    v10 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100044C70(v10, v11, v12, v13, v14, v15, v16, v17);
  }
  return 0xFFFFFFFFLL;
}

void sub_10000A464(const char *a1)
{
  const char *v2;
  const char *v3;
  FILE *v4;
  const char *v5;
  size_t v6;
  unsigned int v7;
  __int16 v8;
  int v9;
  unsigned __int16 v10;
  int v11;
  int v12;
  NSObject *v13;
  uint64_t v14;
  unsigned __int16 v15;
  void *v16;
  uint8_t buf[4];
  int v18;
  __int16 v19;
  char v20;
  BOOL v21;
  _BYTE v22[240];
  _BYTE v23[264];

  v2 = (const char *)sub_100040D4C();
  if (!v2)
  {
    v3 = "UNKNOWN";
LABEL_7:
    fprintf(__stderrp, "No MSF supported for chip %s\n", v3);
    return;
  }
  v3 = v2;
  if (strcmp(v2, "APPLE_M1"))
  {
    if (!strcmp(v3, "APPLE_M2") || !strcmp(v3, "APPLE_M2_5"))
    {
      sub_10000CA88(a1, 7);
      sub_10000CA88(a1, 6);
      return;
    }
    goto LABEL_7;
  }
  v16 = 0;
  v15 = 0;
  v14 = 0;
  memset(v23, 0, 256);
  if (!a1)
  {
    if (sub_10003EA18((UInt8 **)&v16, &v15))
      goto LABEL_10;
LABEL_12:
    if (v15 % 0xF0u)
      v7 = v15 / 0xF0u + 1;
    else
      v7 = v15 / 0xF0u;
    fprintf(__stderrp, "MSF: size %d. numberOfChunks %d. chunkSize %d.\n", v15, v7, 240);
    if (v7)
    {
      v8 = 0;
      v9 = 0;
      v10 = v15;
      do
      {
        memset(v22, 0, sizeof(v22));
        if (v10 >= 0xF0u)
          v11 = 240;
        else
          v11 = v10;
        v19 = v8;
        v20 = v11;
        v21 = v10 < 0xF1u;
        __memcpy_chk(v22);
        sub_10001AD7C(64791, (uint64_t)&v19, (v11 + 4), (uint64_t)v23, &v14, 14);
        v12 = v23[4];
        if (v23[4])
        {
          if (qword_1004E2420 != -1)
            dispatch_once(&qword_1004E2420, &stru_1004DA890);
          v13 = qword_1004E2428;
          if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 67109120;
            v18 = v12;
            _os_log_error_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "MSF Error in Cal data. reason %d", buf, 8u);
          }
        }
        ++v9;
        v10 = v15 - 240;
        v15 -= 240;
        v8 += 240;
      }
      while (v9 < v7);
    }
    v4 = __stderrp;
    v5 = "MSF: Finished sending MSF file to device\n";
    v6 = 41;
    goto LABEL_27;
  }
  if (!sub_10000C874(a1, &v16, &v15))
    goto LABEL_12;
LABEL_10:
  v4 = __stderrp;
  v5 = "No MSF cal data in ioreg.\n";
  v6 = 26;
LABEL_27:
  fwrite(v5, v6, 1uLL, v4);
  if (v16)
    free(v16);
}

uint64_t sub_10000A7C4()
{
  return 0;
}

uint64_t sub_10000A7CC()
{
  uint64_t v0;
  NSObject *v1;
  unint64_t v3;
  uint8_t buf[4];
  int v5;
  _OWORD v6[2];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int16 v21;

  v21 = 0;
  v19 = 0u;
  v20 = 0u;
  v17 = 0u;
  v18 = 0u;
  v15 = 0u;
  v16 = 0u;
  v13 = 0u;
  v14 = 0u;
  v12 = 0u;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v7 = 0u;
  memset(v6, 0, sizeof(v6));
  v3 = 0;
  off_1004E23E8(qword_1004E23C0, &unk_100048E10, 3);
  do
    off_1004E23F0(qword_1004E23C0, v6, 258, &v3);
  while (LOBYTE(v6[0]) != 14);
  if (v3 < 0x3D)
    return 0;
  v0 = DWORD1(v7);
  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004D9950);
  v1 = qword_1004E2428;
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 67109120;
    v5 = v0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_INFO, "MAC bin id: 0x%08x.\n", buf, 8u);
  }
  return v0;
}

void sub_10000A930(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10000A960(uint64_t a1, unsigned int a2)
{
  NSObject *v3;
  BOOL v4;
  NSObject *v5;
  unint64_t v7;
  uint8_t buf[4];
  int v9;
  __int16 v10;
  int v11;
  __int16 v12;
  int v13;
  __int16 v14;
  int v15;
  __int16 v16;
  int v17;
  __int16 v18;
  int v19;
  __int16 v20;
  unsigned int v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int16 v38;

  v7 = 0;
  v22 = 0u;
  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v29 = 0u;
  v30 = 0u;
  v31 = 0u;
  v32 = 0u;
  v33 = 0u;
  v34 = 0u;
  v35 = 0u;
  v36 = 0u;
  v37 = 0u;
  v38 = 0;
  off_1004E23F0(qword_1004E23C0, &v22, 258, &v7);
  if (v7 < 4)
  {
LABEL_2:
    *__error() = 5;
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D9990);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100044D48();
    return 0xFFFFFFFFLL;
  }
  while (v22 != 14)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D99D0);
    v3 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 67109120;
      v9 = v22;
      _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "EVNT: Previous command did not complete yet: %02X", buf, 8u);
    }
    v38 = 0;
    v36 = 0u;
    v37 = 0u;
    v34 = 0u;
    v35 = 0u;
    v32 = 0u;
    v33 = 0u;
    v30 = 0u;
    v31 = 0u;
    v28 = 0u;
    v29 = 0u;
    v27 = 0u;
    v25 = 0u;
    v26 = 0u;
    v23 = 0u;
    v24 = 0u;
    v22 = 0u;
    off_1004E23F0(qword_1004E23C0, &v22, 258, &v7);
    if (v7 < 4)
      goto LABEL_2;
  }
  if (BYTE2(v22) != 1
    || BYTE3(v22) != a2
    || (BYTE4(v22) == a2 >> 8 ? (v4 = BYTE5(v22) == 0) : (v4 = 0), !v4))
  {
    *__error() = 94;
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D9A10);
    v5 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 67110656;
      v9 = v22;
      v10 = 1024;
      v11 = BYTE1(v22);
      v12 = 1024;
      v13 = BYTE2(v22);
      v14 = 1024;
      v15 = BYTE3(v22);
      v16 = 1024;
      v17 = BYTE4(v22);
      v18 = 1024;
      v19 = BYTE5(v22);
      v20 = 1024;
      v21 = a2;
      _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "EVNT: Invalid opcode Got:[0x%x 0x%x 0x%x 0x%x 0x%x 0x%x], waiting for [0x%x] !", buf, 0x2Cu);
    }
    return 0xFFFFFFFFLL;
  }
  return 0;
}

void sub_10000AC84(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000ACB4(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000ACE4(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10000AD18()
{
  uint8x8_t v0;
  NSObject *v1;
  const char *v2;
  NSObject *v3;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint8_t buf[4];
  int v10;
  __int16 v11;
  int v12;
  __int16 v13;
  int v14;
  __int16 v15;
  int v16;
  __int16 v17;
  int v18;
  __int16 v19;
  int v20;
  __int16 v21;
  int v22;
  _OWORD v23[16];
  __int16 v24;
  _DWORD v25[2];
  __int16 v26;

  v26 = 0;
  v25[1] = 0;
  v8 = 0;
  v25[0] = 16654081;
  if (off_1004E23D8(qword_1004E23C0, v25, 4) == -1)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DA5D0);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100044B58();
    return 255;
  }
  v24 = 0;
  memset(v23, 0, sizeof(v23));
  do
    off_1004E23F0(qword_1004E23C0, v23, 258, &v8);
  while (LOBYTE(v23[0]) != 14);
  v0.i32[0] = *(_DWORD *)((char *)v23 + 2);
  if (vmovn_s16((int16x8_t)vmovl_u8(v0)).u32[0] != 16654081)
  {
    *__error() = 94;
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DA610);
    v3 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 67110656;
      v10 = BYTE2(v23[0]);
      v11 = 1024;
      v12 = BYTE3(v23[0]);
      v13 = 1024;
      v14 = BYTE4(v23[0]);
      v15 = 1024;
      v16 = BYTE5(v23[0]);
      v17 = 1024;
      v18 = BYTE6(v23[0]);
      v19 = 1024;
      v20 = BYTE7(v23[0]);
      v21 = 1024;
      v22 = 65055;
      _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "EVNT: Invalid opcode Got:[0x%x 0x%x 0x%x 0x%x 0x%x 0x%x], waiting for [0x%x] !", buf, 0x2Cu);
    }
    return 255;
  }
  dword_1004E00D0 = BYTE6(v23[0]);
  dword_1004E00D4 = BYTE7(v23[0]);
  if (BYTE6(v23[0]) == 8 && BYTE7(v23[0]) == 32)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DA650);
    v1 = qword_1004E2428;
    if (!os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO))
      goto LABEL_33;
    *(_DWORD *)buf = 67109888;
    v10 = BYTE6(v23[0]);
    v11 = 1024;
    v12 = BYTE7(v23[0]);
    v13 = 1024;
    v14 = BYTE8(v23[0]);
    v15 = 1024;
    v16 = BYTE9(v23[0]);
    v2 = "Default ACI BGA SW version: %d.%d, chip revision: %d, chip mode=%d";
LABEL_32:
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_INFO, v2, buf, 0x1Au);
LABEL_33:
    v6 = 8;
    goto LABEL_34;
  }
  if (BYTE6(v23[0]) <= 1u && (BYTE6(v23[0]) != 1 || BYTE7(v23[0]) < 0xBu))
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DA6D0);
    v1 = qword_1004E2428;
    if (!os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO))
      goto LABEL_33;
    *(_DWORD *)buf = 67109888;
    v10 = BYTE6(v23[0]);
    v11 = 1024;
    v12 = BYTE7(v23[0]);
    v13 = 1024;
    v14 = BYTE8(v23[0]);
    v15 = 1024;
    v16 = BYTE9(v23[0]);
    v2 = "SW version: %d.%d, chip revision: %d, chip mode=%d";
    goto LABEL_32;
  }
  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004DA690);
  v5 = qword_1004E2428;
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 67110144;
    v10 = BYTE6(v23[0]);
    v11 = 1024;
    v12 = BYTE7(v23[0]);
    v13 = 1024;
    v14 = BYTE8(v23[0]);
    v15 = 1024;
    v16 = BYTE9(v23[0]);
    v17 = 1024;
    v18 = BYTE10(v23[0]);
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "SW version: %d.%d.%d, chip revision: %d, chip mode=%d", buf, 0x20u);
  }
  dword_1004E1FA8 = BYTE8(v23[0]);
  v6 = 9;
LABEL_34:
  v7 = *(unsigned __int8 *)((unint64_t)v23 | v6);
  if (v7 == 255)
    return 0;
  if (v7 != 32)
  {
    if (v7 == 15)
      return 2;
    return 0;
  }
  return 1;
}

uint64_t sub_10000B1C0(const char *a1, uint64_t a2)
{
  NSObject *v4;
  unsigned __int8 *v6;
  uint64_t i;
  int v8;
  unsigned int v9;
  unsigned int v10;
  char v11;
  char v12;
  char v13;
  char v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  char v18;
  char v19;
  char v20;

  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004D9AD0);
  v4 = qword_1004E2428;
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
  {
    sub_100044D74(a1, v4);
    if (!a1)
      return 0xFFFFFFFFLL;
  }
  else if (!a1)
  {
    return 0xFFFFFFFFLL;
  }
  if (strlen(a1) < 0x11)
    return 0xFFFFFFFFLL;
  v6 = (unsigned __int8 *)(a1 + 1);
  for (i = 5; i != -1; --i)
  {
    v8 = *(v6 - 1);
    v9 = v8 - 48;
    v10 = v8 - 97;
    if ((v8 - 65) >= 6)
      v11 = 0;
    else
      v11 = v8 - 55;
    v12 = v8 - 87;
    if (v10 > 5)
      v12 = v11;
    if (v9 < 0xA)
      v12 = v9;
    v13 = 16 * v12;
    *(_BYTE *)(a2 + i) = v13;
    v15 = *v6;
    v6 += 3;
    v14 = v15;
    v16 = v15 - 48;
    v17 = v15 - 97;
    v18 = v15 - 55;
    if ((v15 - 65) >= 6)
      v19 = 0;
    else
      v19 = v18;
    v20 = v14 - 87;
    if (v17 > 5)
      v20 = v19;
    if (v16 < 0xA)
      v20 = v16;
    *(_BYTE *)(a2 + i) = v20 | v13;
  }
  return 0;
}

void sub_10000B2E8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000B318(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000B348(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000B378(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000B3A8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10000B3D8()
{
  NSObject *v0;
  uint64_t v2;
  uint8_t buf[4];
  int v4;
  __int16 v5;
  int v6;
  _OWORD v7[16];
  __int16 v8;

  v8 = 0;
  memset(v7, 0, sizeof(v7));
  v2 = 0;
  off_1004E23E8(qword_1004E23C0, &unk_100049233, 3);
  do
    off_1004E23F0(qword_1004E23C0, v7, 258, &v2);
  while (LOBYTE(v7[0]) != 14);
  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004D9B90);
  v0 = qword_1004E2428;
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 67109376;
    v4 = BYTE13(v7[0]);
    v5 = 1024;
    v6 = BYTE12(v7[0]);
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_INFO, "LMP Subversion: 0x%02X%02x", buf, 0xEu);
  }
  return WORD6(v7[0]);
}

void sub_10000B530(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

char *sub_10000B560(char *a1)
{
  char *v1;
  int v2;
  char *v3;
  uint64_t v4;
  char *v5;
  NSObject *v7;
  char *__endptr;
  uint8_t buf[4];
  char *v10;

  v1 = a1;
  if (strchr(a1, 58) && strchr(v1, 44))
  {
    v2 = sub_10000B3D8();
    v3 = strtok(v1, ":,");
    if (v3)
    {
      __endptr = 0;
      while (1)
      {
        v4 = strtol(v3, &__endptr, 0);
        v5 = strtok(0, ":,");
        v1 = v5;
        if (v4 == v2)
          break;
        if (!v5)
          return v1;
        v3 = strtok(0, ":,");
        if (!v3)
          return 0;
      }
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004D9BD0);
      v7 = qword_1004E2428;
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 136315138;
        v10 = v1;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Using HCD File: %s", buf, 0xCu);
      }
    }
    else
    {
      return 0;
    }
  }
  return v1;
}

void sub_10000B6C4(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10000B6F4(int a1, char *__str)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  int v5;
  char *v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;

  v11 = 0;
  v10 = 0;
  result = (uint64_t)strtok(__str, ",");
  if (result)
  {
    v3 = 0;
    v6 = 0;
    do
    {
      *((_BYTE *)&v10 + v3) = strtol((const char *)result, &v6, 0);
      result = (uint64_t)strtok(0, ",");
      ++v3;
    }
    while (result);
    if (v3 < 0xA)
      return 0;
    v7 = 217851649;
    v8 = v10;
    v9 = v11;
    v4 = off_1004E23D8(qword_1004E23C0, &v7, 16);
    if ((_DWORD)v4)
    {
      v5 = v4;
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004D9C10);
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      {
        sub_100044DF8();
        if (v5 < 0)
          return 0xFFFFFFFFLL;
      }
      else if (v5 < 0)
      {
        return 0xFFFFFFFFLL;
      }
      *__error() = 5;
      return 0xFFFFFFFFLL;
    }
    return sub_10000A960(v4, 0xFC27u);
  }
  return result;
}

void sub_10000B868(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000B898(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000B8C8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10000B8F8(const char *a1)
{
  uint64_t v2;
  NSObject *v3;
  NSObject *v4;
  char *v5;
  stat v7;
  uint8_t buf[4];
  _BYTE v9[18];

  memset(&v7, 0, sizeof(v7));
  v2 = stat(a1, &v7);
  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004D9DD0);
  v3 = qword_1004E2428;
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 67109378;
    *(_DWORD *)v9 = v2;
    *(_WORD *)&v9[4] = 2080;
    *(_QWORD *)&v9[6] = a1;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "stat_result=%d file path=%s", buf, 0x12u);
  }
  if (!(_DWORD)v2)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D9E10);
    v4 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO))
    {
      v5 = ctime(&v7.st_mtimespec.tv_sec);
      *(_DWORD *)buf = 136315394;
      *(_QWORD *)v9 = v5;
      *(_WORD *)&v9[8] = 2048;
      *(_QWORD *)&v9[10] = v7.st_size;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "File last changed:%s File size=%lld Bytes", buf, 0x16u);
    }
  }
  return v2;
}

void sub_10000BAA0(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000BAD0(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10000BB00(uint64_t a1, uint64_t (*a2)(_BYTE *))
{
  uint64_t result;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[259];

  memset(v12, 0, sizeof(v12));
  if (sub_100040D4C())
  {
    result = a2(v12);
    if ((int)result < 1)
      return result;
    while (v12[0] == 1)
    {
      v4 = off_1004E23D8(qword_1004E23C0, v12, result);
      if ((_DWORD)v4 == -1)
      {
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004D9E90);
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
          sub_100044E58();
        return 0xFFFFFFFFLL;
      }
      if (*(unsigned __int16 *)&v12[1] == 65411)
      {
        usleep(0xBB8u);
      }
      else if ((sub_10000A960(v4, *(unsigned __int16 *)&v12[1]) & 0x80000000) != 0)
      {
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004D9ED0);
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
          sub_100044E84();
        return 0xFFFFFFFFLL;
      }
      result = a2(v12);
      if ((int)result <= 0)
        return result;
    }
    *__error() = 94;
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004D9E50);
    v5 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100044EB0((uint64_t)v12, v5, v6, v7, v8, v9, v10, v11);
  }
  else
  {
    *__error() = 94;
  }
  return 0xFFFFFFFFLL;
}

uint64_t sub_10000BD24(_DWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  int v5;
  int v6;

  if (!a1)
    return 0;
  v2 = sub_10001611C(4, a1);
  v3 = v2;
  if ((_DWORD)v2)
  {
    if ((_DWORD)v2 != 4)
    {
      if ((v2 & 0x80000000) == 0)
        *__error() = 94;
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004D9F10);
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
        sub_100044F18();
      return 0xFFFFFFFFLL;
    }
    if (*(_BYTE *)a1 == 1)
    {
      v4 = 4;
    }
    else
    {
      *(_DWORD *)((char *)a1 + 1) = *a1;
      *(_BYTE *)a1 = 1;
      v4 = 5;
    }
    v3 = *((unsigned __int8 *)a1 + 3) + 4;
    v5 = v3 - v4;
    v6 = sub_10001611C(v3 - v4, (char *)a1 + v4);
    if (v6 != v5)
    {
      if ((v6 & 0x80000000) == 0)
        *__error() = 94;
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004D9F50);
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
        sub_100044F78();
      return 0xFFFFFFFFLL;
    }
  }
  return v3;
}

void sub_10000BE8C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000BEBC(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000BEEC(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000BF1C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000BF4C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000BF7C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000BFAC(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000BFDC(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000C00C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000C03C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000C06C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000C09C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000C0CC(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000C0FC(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000C12C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000C15C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000C18C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000C1BC(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000C1EC(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000C21C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000C24C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10000C27C(unsigned __int8 *a1)
{
  FILE *v2;
  size_t v4;
  size_t v5;
  NSObject *v6;
  FILE *v7;
  const char *v8;
  int v9;
  const char *v10;

  fread(a1, 1uLL, 4uLL, (FILE *)qword_1004E1FA0);
  v2 = (FILE *)qword_1004E1FA0;
  if (ferror((FILE *)qword_1004E1FA0))
  {
    v8 = "Error reading command header file";
  }
  else
  {
    if (feof(v2))
      return 0;
    v4 = a1[3];
    v5 = fread(a1 + 4, 1uLL, v4, (FILE *)qword_1004E1FA0);
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DA290);
    v6 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
    {
      v9 = 136315138;
      v10 = "aci_download_config_fd_cb";
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "we are going to read the entire packet within %s", (uint8_t *)&v9, 0xCu);
    }
    if (v5 == v4)
      return (v4 + 4);
    v7 = (FILE *)qword_1004E1FA0;
    if (!ferror((FILE *)qword_1004E1FA0))
    {
      if (feof(v7))
        return 0;
      return (v4 + 4);
    }
    v8 = "Error reading command payload from file";
  }
  perror(v8);
  return 0xFFFFFFFFLL;
}

void sub_10000C3F4(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000C424(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000C454(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000C484(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000C4B4(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000C4E4(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000C514(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000C544(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000C574(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000C5A4(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000C5D4(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000C604(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000C634(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000C664(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000C694(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000C6C4(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000C6F4(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000C724(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000C754(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000C784(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000C7B4(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000C7E4(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000C814(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000C844(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10000C874(const char *a1, void **a2, _WORD *a3)
{
  int v6;
  FILE *v7;
  char *v8;
  size_t st_size;
  size_t v10;
  FILE *v11;
  stat v13;

  fprintf(__stderrp, "read_msf_file: MSF File %s.\n", a1);
  memset(&v13, 0, sizeof(v13));
  v6 = stat(a1, &v13);
  fprintf(__stderrp, "read_msf_file: stat_result=%d file path=%s\n", v6, a1);
  if (v6)
  {
    perror("stat ");
  }
  else
  {
    v7 = __stderrp;
    v8 = ctime(&v13.st_mtimespec.tv_sec);
    fprintf(v7, "read_msf_file: MSF File last changed:%s File size=%lld Bytes\n", v8, v13.st_size);
  }
  st_size = v13.st_size;
  *a3 = v13.st_size;
  *a2 = malloc_type_malloc(st_size, 0x4B41AF32uLL);
  fwrite("read_msf_file: Open MSF File\n", 0x1DuLL, 1uLL, __stderrp);
  qword_1004E1FA0 = (uint64_t)fopen(a1, "r");
  if (!qword_1004E1FA0)
  {
    fprintf(__stderrp, "Unable to open MSF, file path=%s\n", a1);
    return 0xFFFFFFFFLL;
  }
  fwrite("read_msf_file: Read MSF File to buffer\n", 0x27uLL, 1uLL, __stderrp);
  v10 = fread(*a2, 1uLL, v13.st_size, (FILE *)qword_1004E1FA0);
  fprintf(__stderrp, "read_msf_file: Read MSF File to buffer. read_result %zu.\n", v10);
  v11 = (FILE *)qword_1004E1FA0;
  if (ferror((FILE *)qword_1004E1FA0))
  {
    perror("Error reading msf file");
    return 0xFFFFFFFFLL;
  }
  if (feof(v11))
  {
    fprintf(__stderrp, "MSF EOF found, file path=%s\n", a1);
  }
  else
  {
    fwrite("read_msf_file: Close MSF File\n", 0x1EuLL, 1uLL, __stderrp);
    fclose((FILE *)qword_1004E1FA0);
  }
  return 0;
}

void sub_10000CA58(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000CA88(const char *a1, int a2)
{
  int v3;
  int v4;
  NSObject *v5;
  unsigned __int16 v6;
  unsigned int v7;
  __int16 v8;
  int v9;
  int v10;
  int v11;
  NSObject *v12;
  uint64_t v13;
  unsigned __int16 v14;
  void *v15;
  uint8_t v16[4];
  int v17;
  __int16 v18;
  int v19;
  _BYTE buf[39];
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _BYTE v34[264];

  v15 = 0;
  v14 = 0;
  v13 = 0;
  memset(v34, 0, 256);
  if (a1)
    v3 = sub_10000C874(a1, &v15, &v14);
  else
    v3 = sub_10003EB64((UInt8 **)&v15, &v14, a2);
  v4 = v3;
  fprintf(__stderrp, "MSF-M2: type %d. file 0x%x. size %d.\n", a2, (_DWORD)v15, v14);
  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004DA8D0);
  v5 = qword_1004E2428;
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 67109634;
    *(_DWORD *)&buf[4] = v14;
    *(_WORD *)&buf[8] = 1040;
    *(_DWORD *)&buf[10] = v14;
    *(_WORD *)&buf[14] = 2096;
    *(_QWORD *)&buf[16] = v15;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Cal data (Size %d bytes): %.*P", buf, 0x18u);
  }
  if (v4)
  {
    fprintf(__stderrp, "No MSF-M2 type %d cal data in ioreg.\n");
    goto LABEL_24;
  }
  v6 = v14;
  v7 = v14 / 0xF0u;
  if (v14 % 0xF0u)
  {
    ++v7;
    goto LABEL_13;
  }
  if (v14 >= 0xF0u)
  {
LABEL_13:
    v8 = 0;
    v9 = 0;
    do
    {
      v32 = 0u;
      v33 = 0u;
      v30 = 0u;
      v31 = 0u;
      v28 = 0u;
      v29 = 0u;
      v26 = 0u;
      v27 = 0u;
      v24 = 0u;
      v25 = 0u;
      v22 = 0u;
      v23 = 0u;
      v21 = 0u;
      memset(&buf[7], 0, 32);
      if (v6 >= 0xF0u)
        v10 = 240;
      else
        v10 = v6;
      buf[0] = a2;
      *(_WORD *)&buf[1] = 0;
      *(_WORD *)&buf[3] = v8;
      buf[5] = v10;
      buf[6] = v6 < 0xF1u;
      __memcpy_chk(&buf[7]);
      sub_10001AD7C(64793, (uint64_t)buf, (v10 + 7), (uint64_t)v34, &v13, 14);
      v11 = v34[4];
      if (v34[4])
      {
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DA910);
        v12 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)v16 = 67109376;
          v17 = a2;
          v18 = 1024;
          v19 = v11;
          _os_log_error_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "MSF-M2 type %d Error in Cal data. reason %d", v16, 0xEu);
        }
      }
      ++v9;
      v6 = v14 - 240;
      v14 -= 240;
      v8 += 240;
    }
    while (v7 > v9);
  }
  fprintf(__stderrp, "MSF-M2: Finished sending MSF type %d file to device\n");
LABEL_24:
  if (v15)
    free(v15);
}

void sub_10000CDD4(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000CE04(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10000CE40(int a1, char **a2, char **a3)
{
  uint64_t v6;
  NSObject *v7;
  char *v8;
  void *v9;
  NSArray *v10;
  const char *v11;
  NSObject *v12;
  NSObject *v14;
  uint64_t v15;
  char *v16;
  NSObject *v17;
  int v18;
  NSObject *v19;
  int v20;
  NSObject *v21;
  NSObject *v23;
  uint64_t v24;
  NSObject *v25;
  int v26;
  char *v27;
  NSObject *v28;
  int v29;
  char *v30;
  NSObject *v31;
  int v32;
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  NSObject *v37;
  NSObject *v38;
  uint64_t *v39;
  __int128 *v40;
  __int16 v41;
  NSObject *v42;
  NSObject *v43;
  char *v44;
  NSObject *v45;
  NSObject *v46;
  NSObject *v47;
  unint64_t v48;
  NSObject *v49;
  NSObject *v50;
  char *v51;
  NSObject *v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  unint64_t v57;
  char *v58;
  char *v59;
  unsigned int v60;
  NSObject *v61;
  NSObject *v62;
  char *v63;
  NSObject *v64;
  int v65;
  char *v66;
  NSObject *v67;
  const char *v68;
  char *v69;
  const char *v70;
  _BOOL4 v71;
  unsigned int v72;
  id v73;
  int v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  unsigned int v78;
  int v79;
  int v80;
  int v81;
  NSObject *v82;
  int v83;
  uint64_t v84;
  FILE *v85;
  const char *v86;
  FILE *v87;
  int v89;
  int v90;
  NSObject *v91;
  char *v92;
  const char *v93;
  FILE *v94;
  FILE *v95;
  char *v96;
  char *v97;
  char *v98;
  const char *v99;
  size_t v100;
  char *v101;
  NSObject *v102;
  char *v103;
  uint64_t v104;
  NSObject *v105;
  NSObject *v106;
  io_registry_entry_t v107;
  io_object_t v108;
  const __CFData *CFProperty;
  const __CFData *v110;
  CFTypeID v111;
  unint64_t Length;
  const char *BytePtr;
  CFIndex v114;
  NSObject *v115;
  unsigned int v116;
  uint64_t v117;
  int v118;
  char *v119;
  uint64_t v120;
  NSObject *v121;
  unsigned int v122;
  uint64_t v123;
  int v124;
  NSObject *v125;
  NSObject *v126;
  NSObject *v127;
  uint64_t v128;
  char *v129;
  unsigned __int8 v130;
  size_t v131;
  NSObject *v132;
  void *v133;
  int v134;
  uint64_t v135;
  _BYTE v136[212];
  __int128 v137;
  _BYTE v138[27];
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  _BYTE v143[9];
  char v144;
  uint64_t v145;
  __int128 buf;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;

  optind = 1;
  while (2)
  {
    v6 = getopt(a1, a2, "hw:Aa:Nn:Bb:s:ptgm:PeWvr:lQR:xuLq");
    switch((int)v6)
    {
      case 'A':
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DA970);
        v25 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(_QWORD *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "ready to write BDADDR using devicetree from %s", (uint8_t *)&buf, 0xCu);
        }
        v26 = qword_1004E23C0;
        v27 = 0;
        return sub_10000F8FC(v26, v27);
      case 'B':
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DA9B0);
        v28 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(_QWORD *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, "ready to set baudrate using a predefined value from %s", (uint8_t *)&buf, 0xCu);
        }
        v29 = qword_1004E23C0;
        v30 = 0;
        return sub_10000FBE4(v29, v30);
      case 'C':
      case 'D':
      case 'E':
      case 'F':
      case 'G':
      case 'H':
      case 'I':
      case 'J':
      case 'K':
      case 'M':
      case 'O':
      case 'S':
      case 'T':
      case 'U':
      case 'V':
      case 'X':
      case 'Y':
      case 'Z':
      case '[':
      case '\\':
      case ']':
      case '^':
      case '_':
      case 'c':
      case 'd':
      case 'f':
      case 'i':
      case 'j':
      case 'k':
      case 'o':
        goto LABEL_4;
      case 'L':
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DAB90);
        v31 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(_QWORD *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, "ready to download Low power mode FW from %s", (uint8_t *)&buf, 0xCu);
        }
        v32 = qword_1004E23C0;
        v33 = (char *)sub_100016930();
        if (v33)
        {
          v34 = v33;
          v35 = sub_1000133E0(1);
          if (v35)
          {
            v36 = v35;
            if (qword_1004E2420 != -1)
              dispatch_once(&qword_1004E2420, &stru_1004DB1B0);
            if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
              sub_100045034();
          }
          else
          {
            v36 = v34;
          }
          goto LABEL_196;
        }
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DB190);
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
          sub_100045008();
        return 0xFFFFFFFFLL;
      case 'N':
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DAA50);
        v37 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(_QWORD *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_DEFAULT, "ready to set local name same as host name from %s", (uint8_t *)&buf, 0xCu);
        }
        v15 = qword_1004E23C0;
        v16 = 0;
        return sub_10000FE3C(v15, (uint64_t)v16);
      case 'P':
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DAA90);
        v38 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(_QWORD *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_DEFAULT, "ready to configure I2S PCM and GPIO pins from %s", (uint8_t *)&buf, 0xCu);
        }
        BYTE4(v139) = 0;
        LODWORD(v139) = 0;
        *(_QWORD *)v136 = 0;
        v160 = 0u;
        v161 = 0u;
        v158 = 0u;
        v159 = 0u;
        v156 = 0u;
        v157 = 0u;
        v154 = 0u;
        v155 = 0u;
        v152 = 0u;
        v153 = 0u;
        v150 = 0u;
        v151 = 0u;
        v148 = 0u;
        v149 = 0u;
        buf = 0u;
        v147 = 0u;
        v39 = (uint64_t *)&v139;
        v40 = (__int128 *)v136;
        v41 = -86;
        goto LABEL_137;
      case 'Q':
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DABD0);
        v42 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(_QWORD *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_DEFAULT, "ready to load calibration data from %s", (uint8_t *)&buf, 0xCu);
        }
        v20 = 0;
        goto LABEL_82;
      case 'R':
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DABF0);
        v7 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(_QWORD *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "ready to run RSSI sweep from %s", (uint8_t *)&buf, 0xCu);
        }
        v8 = optarg;
        v9 = objc_autoreleasePoolPush();
        v145 = 0;
        v143[4] = 0;
        *(_DWORD *)v143 = 921601;
        v135 = 0;
        v160 = 0u;
        v161 = 0u;
        v158 = 0u;
        v159 = 0u;
        v156 = 0u;
        v157 = 0u;
        v154 = 0u;
        v155 = 0u;
        v152 = 0u;
        v153 = 0u;
        v150 = 0u;
        v151 = 0u;
        v148 = 0u;
        v149 = 0u;
        buf = 0u;
        v147 = 0u;
        v10 = -[NSString componentsSeparatedByString:](+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v8), "componentsSeparatedByString:", CFSTR(", "));
        if (-[NSArray count](v10, "count") >= 5)
        {
          v11 = "RSSI Sweep requires 4 arguments -- iterations, F_start F_stop Gain";
          goto LABEL_192;
        }
        v141 = 0u;
        v142 = 0u;
        v139 = 0u;
        v140 = 0u;
        v73 = -[NSArray countByEnumeratingWithState:objects:count:](v10, "countByEnumeratingWithState:objects:count:", &v139, v136, 16);
        if (v73)
        {
          v74 = 0;
          v75 = *(_QWORD *)v140;
          while (1)
          {
            v76 = 0;
            v77 = v74;
            do
            {
              if (*(_QWORD *)v140 != v75)
                objc_enumerationMutation(v10);
              v78 = objc_msgSend(*(id *)(*((_QWORD *)&v139 + 1) + 8 * (_QWORD)v76), "intValue");
              if (v78 >= 0x10000)
              {
                v11 = "Parameter out of range";
LABEL_192:
                puts(v11);
LABEL_193:
                v24 = 0xFFFFFFFFLL;
                goto LABEL_194;
              }
              v74 = v77 + 1;
              *((_WORD *)&v145 + v77) = v78;
              v76 = (char *)v76 + 1;
              ++v77;
            }
            while (v73 != v76);
            v73 = -[NSArray countByEnumeratingWithState:objects:count:](v10, "countByEnumeratingWithState:objects:count:", &v139, v136, 16);
            if (!v73)
            {
              v79 = (unsigned __int16)v145;
              LODWORD(v73) = WORD1(v145);
              v80 = WORD2(v145);
              v81 = HIWORD(v145);
              goto LABEL_209;
            }
          }
        }
        v81 = 0;
        v80 = 0;
        v79 = 0;
LABEL_209:
        fprintf(__stderrp, "RSSI Sweep Results:\n# Iteration: %d\nStart Frequency: %d MHz \nStop Frequency: %d MHz \nGain: %d\n", v79, (_DWORD)v73, v80, v81);
        *(_WORD *)&v143[1] = v79;
        *(_WORD *)&v143[5] = (_WORD)v73;
        *(_WORD *)&v143[7] = v80;
        v144 = v81;
        sub_10001AD7C(64767, (uint64_t)v143, 0xAuLL, (uint64_t)&buf, &v135, 14);
        if (BYTE3(buf))
        {
          if (qword_1004E2420 != -1)
            dispatch_once(&qword_1004E2420, &stru_1004DB050);
          if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
            sub_100045098();
          printf("RSSI Sweep failed! Error code %02X", BYTE3(buf));
          goto LABEL_193;
        }
        if (v80 - (int)v73 >= 0)
        {
          v128 = (v80 - (_DWORD)v73 + 8) - 7;
          v129 = (char *)&buf + 7;
          do
          {
            v130 = *v129++;
            fprintf(__stderrp, "%d MHz: %d dBm \n", (_DWORD)v73, v130 | 0xFFFFFF00);
            LODWORD(v73) = (_DWORD)v73 + 1;
            --v128;
          }
          while (v128);
        }
        fputc(10, __stderrp);
        v24 = 0;
LABEL_194:
        objc_autoreleasePoolPop(v9);
        return v24;
      case 'W':
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DAB50);
        v43 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(_QWORD *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_DEFAULT, "ready to download default HCD file from %s", (uint8_t *)&buf, 0xCu);
        }
        v32 = qword_1004E23C0;
        v44 = sub_1000133E0(0);
        if (v44)
        {
          v36 = v44;
          if (qword_1004E2420 != -1)
            dispatch_once(&qword_1004E2420, &stru_1004DB090);
          if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
            sub_100044FA4();
LABEL_196:
          v65 = v32;
          v66 = v36;
          return sub_1000104F8(v65, v66);
        }
        else
        {
          v84 = sub_1000166FC();
          if (v84)
            sub_100018954(v84);
          return sub_1000117B0(v32, (uint64_t (*)(_OWORD *))sub_100013754);
        }
      case 'a':
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DA950);
        v45 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(_QWORD *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v45, OS_LOG_TYPE_DEFAULT, "ready to write all zero BDADDR from %s", (uint8_t *)&buf, 0xCu);
        }
        v26 = qword_1004E23C0;
        v27 = optarg;
        return sub_10000F8FC(v26, v27);
      case 'b':
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DA990);
        v46 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(_QWORD *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v46, OS_LOG_TYPE_DEFAULT, "ready to set baudrate from %s", (uint8_t *)&buf, 0xCu);
        }
        v29 = qword_1004E23C0;
        v30 = optarg;
        return sub_10000FBE4(v29, v30);
      case 'e':
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DA9D0);
        v12 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(_QWORD *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "ready to read power counter from %s", (uint8_t *)&buf, 0xCu);
        }
        *(_WORD *)v143 = 1008;
        v160 = 0u;
        v161 = 0u;
        v158 = 0u;
        v159 = 0u;
        v156 = 0u;
        v157 = 0u;
        v154 = 0u;
        v155 = 0u;
        v152 = 0u;
        v153 = 0u;
        v150 = 0u;
        v151 = 0u;
        v148 = 0u;
        v149 = 0u;
        buf = 0u;
        v147 = 0u;
        *(_QWORD *)v136 = 0;
        sub_10001AF50((uint64_t)v143, 2uLL, (uint64_t)&buf, v136);
        if (*(_QWORD *)v136 == 15 && (unsigned __int16)buf == 240 && BYTE2(buf) == 3)
        {
          v89 = 5 * *(_DWORD *)((char *)&buf + 3);
          if (qword_1004E2420 != -1)
            dispatch_once(&qword_1004E2420, &stru_1004DB1F0);
          v90 = 2 * v89;
          v91 = qword_1004E2428;
          if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
          {
            LODWORD(v139) = 67109120;
            DWORD1(v139) = v90;
            _os_log_impl((void *)&_mh_execute_header, v91, OS_LOG_TYPE_DEFAULT, "power=%u", (uint8_t *)&v139, 8u);
          }
          if (a3)
          {
            v92 = (char *)malloc_type_calloc(0x40uLL, 1uLL, 0x100004077774924uLL);
            *a3 = v92;
            if (v92)
              __sprintf_chk(v92, 0, 0x40uLL, "power=%u", v90);
          }
          return 0;
        }
        *__error() = -94;
        return 0xFFFFFFFFLL;
      case 'g':
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DA9F0);
        v47 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(_QWORD *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_DEFAULT, "ready to set I2S GPIO lines from %s", (uint8_t *)&buf, 0xCu);
        }
        BYTE2(v139) = 0;
        LOWORD(v139) = 2307;
        v143[2] = 0;
        *(_WORD *)v143 = 2308;
        strcpy((char *)&v145, "\a\t");
        *(_QWORD *)v136 = 0;
        v160 = 0u;
        v161 = 0u;
        v158 = 0u;
        v159 = 0u;
        v156 = 0u;
        v157 = 0u;
        v154 = 0u;
        v155 = 0u;
        v152 = 0u;
        v153 = 0u;
        v150 = 0u;
        v151 = 0u;
        v148 = 0u;
        v149 = 0u;
        buf = 0u;
        v147 = 0u;
        sub_10001AD7C(64537, (uint64_t)&v139, 3uLL, (uint64_t)&buf, v136, 14);
        sub_10001AD7C(64537, (uint64_t)v143, 3uLL, (uint64_t)&buf, v136, 14);
        v39 = &v145;
        v40 = (__int128 *)v136;
        v41 = -999;
        v48 = 3;
        goto LABEL_138;
      case 'h':
        fprintf(__stderrp, "%s - Broadcom Specific Commands\n", *a2);
        fwrite("-w    - Download HCD configuration file /path/to/hcd/file.hcd\n", 0x3EuLL, 1uLL, __stderrp);
        fwrite("-W    - Download default HCD \n", 0x1EuLL, 1uLL, __stderrp);
        fwrite("-L    - Download Low power mode FW \n", 0x24uLL, 1uLL, __stderrp);
        fwrite("-v    - prints the default hcd file loaded \n", 0x2CuLL, 1uLL, __stderrp);
        fwrite("-a    - Set BDADDR - 00:00:00:00:00:00\n", 0x27uLL, 1uLL, __stderrp);
        fwrite("-A    - Set BDADDR using devicetree\n", 0x24uLL, 1uLL, __stderrp);
        fwrite("-b    - Set the baud rate - Baud Rate\n", 0x26uLL, 1uLL, __stderrp);
        fwrite("-B    - Set the baud rate using a predefined value\n", 0x33uLL, 1uLL, __stderrp);
        fwrite("-P    - Configure I2S PCM and GPIO pins (inactive function/mode)\n", 0x41uLL, 1uLL, __stderrp);
        fwrite("-g    - Setup the I2S GPIO lines\n", 0x21uLL, 1uLL, __stderrp);
        fwrite("-p    - Routes sco over PCM\n", 0x1CuLL, 1uLL, __stderrp);
        fwrite("-t    - Routes sco over Transport (HCI)\n", 0x28uLL, 1uLL, __stderrp);
        fwrite("-n    - Set the local name - Local Name\n", 0x28uLL, 1uLL, __stderrp);
        fwrite("-N    - Set the local name to equal the host name\n", 0x32uLL, 1uLL, __stderrp);
        fwrite("-s    - Set the sleep mode - Sleep Mode, (0x09 = H5)\n", 0x35uLL, 1uLL, __stderrp);
        fwrite("                             Idle Threshold Host, (Not applicable to \n", 0x46uLL, 1uLL, __stderrp);
        fwrite("                             Idle Threshold HC,\n", 0x30uLL, 1uLL, __stderrp);
        fwrite("                             BT WAKE Active Mode,\n", 0x32uLL, 1uLL, __stderrp);
        fwrite("                             Host WAKE Active Mode,\n", 0x34uLL, 1uLL, __stderrp);
        fwrite("                             Allow Host Sleep During SCO,\n", 0x3AuLL, 1uLL, __stderrp);
        fwrite("                             Combine Sleep Mode and LPM,\n", 0x39uLL, 1uLL, __stderrp);
        fwrite("                             Enable Tristate Control of UART TX Line,\n", 0x46uLL, 1uLL, __stderrp);
        fwrite("                             Active Connection Handling On Suspend,\n", 0x44uLL, 1uLL, __stderrp);
        fwrite("                             Resume Timeout,\n", 0x2DuLL, 1uLL, __stderrp);
        fwrite("                             Enable Break to Host,\n", 0x33uLL, 1uLL, __stderrp);
        fwrite("                             Pulsed Host Wake,\n", 0x2FuLL, 1uLL, __stderrp);
        fwrite("-m    - Checks manufacturer\n", 0x1CuLL, 1uLL, __stderrp);
        fwrite("-R    - Run RSSI sweep (MFG FW required)\n", 0x29uLL, 1uLL, __stderrp);
        fwrite("-r    - Writes to RAM\n", 0x16uLL, 1uLL, __stderrp);
        fwrite("-x    - Load regulatory power table\n", 0x24uLL, 1uLL, __stderrp);
        fwrite("-u    - Update firmware in serial flash\n", 0x28uLL, 1uLL, __stderrp);
        fwrite("-Q    - Load calibration data\n", 0x1EuLL, 1uLL, __stderrp);
        fwrite("-q    - Load calibration data and print complete calibration data to stdio\n", 0x4BuLL, 1uLL, __stderrp);
        fputc(10, __stderrp);
        return 0;
      case 'l':
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DAB70);
        v49 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(_QWORD *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v49, OS_LOG_TYPE_DEFAULT, "ready to enable LMP_log from %s", (uint8_t *)&buf, 0xCu);
        }
        BYTE4(buf) = 0;
        LODWORD(buf) = 117567495;
        off_1004E23D0(qword_1004E23C0, &buf, 5);
        usleep(0xC3500u);
        off_1004E2408(qword_1004E23C0);
        return 0;
      case 'm':
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DAA10);
        v50 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(_QWORD *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v50, OS_LOG_TYPE_DEFAULT, "ready to check manufacturer from %s", (uint8_t *)&buf, 0xCu);
          v51 = optarg;
          if (qword_1004E2420 != -1)
            dispatch_once(&qword_1004E2420, &stru_1004DB1D0);
        }
        else
        {
          v51 = optarg;
        }
        v82 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(_QWORD *)((char *)&buf + 4) = "int check_manufacturer(const char *)";
          _os_log_impl((void *)&_mh_execute_header, v82, OS_LOG_TYPE_DEFAULT, "%s", (uint8_t *)&buf, 0xCu);
        }
        v83 = sub_100040068();
        if (!v83)
          return 0;
        return v83 == strtol(v51, 0, 10);
      case 'n':
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DAA30);
        v14 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(_QWORD *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "ready to set local name from %s", (uint8_t *)&buf, 0xCu);
        }
        v15 = qword_1004E23C0;
        v16 = optarg;
        return sub_10000FE3C(v15, (uint64_t)v16);
      case 'p':
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DAA70);
        v17 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(_QWORD *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "ready to route SCO over PCM from %s", (uint8_t *)&buf, 0xCu);
        }
        BYTE4(v139) = 0;
        LODWORD(v139) = 0x10000;
        v143[4] = 9;
        v18 = 134809857;
        goto LABEL_136;
      case 'q':
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DABB0);
        v19 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(_QWORD *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "ready to load calibration data (complete printed to stdio) from %s", (uint8_t *)&buf, 0xCu);
        }
        v20 = 1;
LABEL_82:
        sub_100010684(v20);
        return 0;
      case 'r':
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DAAB0);
        v52 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(_QWORD *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v52, OS_LOG_TYPE_DEFAULT, "ready to write RAM from %s", (uint8_t *)&buf, 0xCu);
        }
        v53 = optarg;
        v54 = strchr(optarg, 61);
        memset(v138, 0, sizeof(v138));
        v137 = 0u;
        memset(&v136[4], 0, 208);
        *(_QWORD *)&v139 = 0;
        v160 = 0u;
        v161 = 0u;
        v158 = 0u;
        v159 = 0u;
        v156 = 0u;
        v157 = 0u;
        v154 = 0u;
        v155 = 0u;
        v152 = 0u;
        v153 = 0u;
        v150 = 0u;
        v151 = 0u;
        v148 = 0u;
        v149 = 0u;
        buf = 0u;
        v147 = 0u;
        if (!v54)
          return 0xFFFFFFFFLL;
        v55 = v54;
        v56 = strtol(v53, 0, 0);
        v24 = 0xFFFFFFFFLL;
        if (v56 > 0xFFFFFFFFLL)
          return v24;
        *(_DWORD *)v136 = v56;
        v57 = 4;
        while (*v55)
        {
          *v55 = 0;
          v58 = v55 + 1;
          v136[v57] = strtol(v58, 0, 0);
          v59 = strchr(v58, 44);
          v60 = v57 + 1;
          if (v57 <= 0xFD)
          {
            v55 = v59;
            ++v57;
            if (v59)
              continue;
          }
          goto LABEL_216;
        }
        v60 = v57;
LABEL_216:
        v48 = v60;
        v39 = (uint64_t *)v136;
        v40 = &v139;
        v41 = -948;
LABEL_138:
        sub_10001AD7C(v41, (uint64_t)v39, v48, (uint64_t)&buf, v40, 14);
        return 0;
      case 's':
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DAAD0);
        v21 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(_QWORD *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "ready to set sleep mode from %s", (uint8_t *)&buf, 0xCu);
        }
        return sub_1000101A0(qword_1004E23C0, (uint64_t)optarg);
      case 't':
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DAAF0);
        v61 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(_QWORD *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v61, OS_LOG_TYPE_DEFAULT, "ready to route SCO over HCI from %s", (uint8_t *)&buf, 0xCu);
        }
        BYTE4(v139) = 0;
        LODWORD(v139) = 65537;
        v143[4] = 9;
        v18 = 151587073;
LABEL_136:
        *(_DWORD *)v143 = v18;
        *(_QWORD *)v136 = 0;
        v160 = 0u;
        v161 = 0u;
        v158 = 0u;
        v159 = 0u;
        v156 = 0u;
        v157 = 0u;
        v154 = 0u;
        v155 = 0u;
        v152 = 0u;
        v153 = 0u;
        v150 = 0u;
        v151 = 0u;
        v148 = 0u;
        v149 = 0u;
        buf = 0u;
        v147 = 0u;
        sub_10001AD7C(64609, (uint64_t)v143, 5uLL, (uint64_t)&buf, v136, 14);
        v39 = (uint64_t *)&v139;
        v40 = (__int128 *)v136;
        v41 = -996;
LABEL_137:
        v48 = 5;
        goto LABEL_138;
      case 'u':
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DAC30);
        v23 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(_QWORD *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "ready to update FW in serial flash from %s", (uint8_t *)&buf, 0xCu);
        }
        sub_100011574();
        return 5;
      case 'v':
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DAB10);
        v62 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(_QWORD *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v62, OS_LOG_TYPE_DEFAULT, "ready to print the default hcd file loaded from %s", (uint8_t *)&buf, 0xCu);
        }
        v63 = sub_100040610();
        v160 = 0u;
        v161 = 0u;
        v158 = 0u;
        v159 = 0u;
        v156 = 0u;
        v157 = 0u;
        v154 = 0u;
        v155 = 0u;
        v152 = 0u;
        v153 = 0u;
        v150 = 0u;
        v151 = 0u;
        v148 = 0u;
        v149 = 0u;
        buf = 0u;
        v147 = 0u;
        sub_100040D4C();
        if (sub_1000133E0(0))
        {
          fprintf(__stdoutp, "File firmware is %s\n");
        }
        else
        {
          memset(v136, 0, 144);
          snprintf((char *)&buf, 0x80uLL, "/etc/bluetool/%s.boot.script", v63);
          if (!stat((const char *)&buf, (stat *)v136))
          {
            v94 = fopen((const char *)&buf, "r");
            if (v94)
            {
              v95 = v94;
              v96 = (char *)malloc_type_malloc(0x400uLL, 0x33368D36uLL);
              if (v96)
              {
                v97 = v96;
                while (!feof(v95))
                {
                  v98 = fgets(v97, 1024, v95);
                  if (v98)
                  {
                    v99 = v98;
                    v100 = strlen(v98);
                    if (v100 >= 0xA)
                    {
                      v99[v100 - 1] = 0;
                      if (!strncmp(v99, "bcm -w ", 7uLL))
                        fprintf(__stdoutp, "File firmware is %s\n", v99 + 7);
                    }
                  }
                }
                fclose(v95);
                free(v97);
              }
              else
              {
                fclose(v95);
              }
            }
          }
          v85 = __stdoutp;
          v86 = (const char *)sub_1000166FC();
          fprintf(v85, "Default firmware is %s\n", v86);
          v87 = __stdoutp;
          sub_100040D4C();
          fprintf(v87, "Chipset is %s\n");
        }
        return 0;
      case 'w':
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DAB30);
        v64 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(_QWORD *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v64, OS_LOG_TYPE_DEFAULT, "ready to download HCD file at /path/to/hcd/file.hcd from %s", (uint8_t *)&buf, 0xCu);
        }
        v65 = qword_1004E23C0;
        v66 = optarg;
        return sub_1000104F8(v65, v66);
      case 'x':
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DAC10);
        v67 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(_QWORD *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v67, OS_LOG_TYPE_DEFAULT, "ready to load regulatory power table from %s", (uint8_t *)&buf, 0xCu);
        }
        *(_QWORD *)v143 = 0;
        v160 = 0u;
        v161 = 0u;
        v158 = 0u;
        v159 = 0u;
        v156 = 0u;
        v157 = 0u;
        v154 = 0u;
        v155 = 0u;
        v152 = 0u;
        v153 = 0u;
        v150 = 0u;
        v151 = 0u;
        v148 = 0u;
        v149 = 0u;
        buf = 0u;
        v147 = 0u;
        v68 = (const char *)sub_100040D4C();
        v69 = sub_100040610();
        v70 = (const char *)sub_100018948();
        if (strcmp(v68, "BCM4377B2"))
        {
          if (!strcmp(v68, "BCM4377B3"))
          {
            v71 = 0;
            v72 = 250;
            goto LABEL_245;
          }
          if (!strcmp(v68, "BCM4387C2"))
          {
            if (strnstr(v70, "Maldives", 0x400uLL)
              || strnstr(v70, "Madagascar", 0x400uLL)
              || strnstr(v70, "Okinawa", 0x400uLL))
            {
              goto LABEL_242;
            }
            v93 = "Macadamia";
          }
          else
          {
            if (!strcmp(v68, "BCM4387C0"))
            {
              v72 = 260;
              goto LABEL_244;
            }
            if (strcmp(v68, "BCM4378B1") && strcmp(v68, "BCM4378B3"))
            {
              if (!strcmp(v68, "BCM4388B0"))
              {
                if (strnstr(v70, "Amami", 0x400uLL) || strnstr(v70, "Tokara", 0x400uLL))
                  return 0;
                v72 = 1572;
              }
              else
              {
                if (strcmp(v68, "BCM4388C0") && strcmp(v68, "BCM4388C2"))
                {
                  v71 = 0;
                  v72 = 210;
                  goto LABEL_245;
                }
                if (!strnstr(v70, "MahoganyA", 0x400uLL)
                  && !strnstr(v70, "MahoganyB", 0x400uLL)
                  && !strnstr(v70, "HickoryA", 0x400uLL)
                  && !strnstr(v70, "HickoryB", 0x400uLL)
                  && !strnstr(v70, "Miyake", 0x400uLL)
                  && !strnstr(v70, "Tasmania", 0x400uLL)
                  && !strnstr(v70, "Sumatra", 0x400uLL)
                  && !strnstr(v70, "Java", 0x400uLL)
                  && !strnstr(v70, "Amami", 0x400uLL)
                  && !strnstr(v70, "Iona", 0x400uLL)
                  && !strnstr(v70, "Azores", 0x400uLL)
                  && !strnstr(v70, "Tokara", 0x400uLL)
                  && !strnstr(v70, "Tresco", 0x400uLL))
                {
                  return 0;
                }
                v72 = 3144;
              }
              goto LABEL_244;
            }
            if (strnstr(v70, "Marlin", 0x400uLL)
              || strnstr(v70, "Atlantis", 0x400uLL)
              || strnstr(v70, "AtlantisB", 0x400uLL)
              || strnstr(v70, "Capri", 0x400uLL)
              || strnstr(v70, "Santorini", 0x400uLL)
              || strnstr(v70, "Hazel", 0x400uLL))
            {
              goto LABEL_242;
            }
            v93 = "Redwood";
          }
          if (!strnstr(v70, v93, 0x400uLL))
          {
            v72 = 520;
            goto LABEL_244;
          }
LABEL_242:
          v72 = 786;
          goto LABEL_244;
        }
        if (strnstr(v70, "Monstro", 0x400uLL))
        {
          v72 = 378;
LABEL_244:
          v71 = 1;
          goto LABEL_245;
        }
        v72 = 378;
        if (strnstr(v70, "Pinocchio", 0x400uLL))
          goto LABEL_244;
        v101 = strnstr(v70, "MeekoB", 0x400uLL);
        v71 = v101 != 0;
        if (v101)
          v72 = 378;
        else
          v72 = 250;
LABEL_245:
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DB610);
        v102 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)v136 = 67109120;
          *(_DWORD *)&v136[4] = v72;
          _os_log_impl((void *)&_mh_execute_header, v102, OS_LOG_TYPE_DEFAULT, "Expected ptb size is %d", v136, 8u);
        }
        v103 = (char *)malloc_type_calloc(v72, 1uLL, 0x100004077774924uLL);
        if (strcmp(v68, "BCM4355C0")
          && strcmp(v68, "BCM43430B1")
          && strcmp(v68, "BCM4357B1")
          && strcmp(v68, "BCM4355C1")
          && strcmp(v68, "BCM4377B2")
          && strcmp(v68, "BCM4377B3")
          && strcmp(v68, "BCM4378B1")
          && strcmp(v68, "BCM4378B3")
          && strcmp(v68, "BCM4387C0")
          && strcmp(v68, "BCM4387C2")
          && strcmp(v68, "BCM4388B0")
          && strcmp(v68, "BCM4388C0")
          && strcmp(v68, "BCM4388C2"))
        {
          v133 = v103;
          goto LABEL_339;
        }
        if (!strcmp(v68, "BCM4377B2")
          || !strcmp(v68, "BCM4377B3")
          || !strcmp(v68, "BCM4378B1")
          || !strcmp(v68, "BCM4378B3")
          || !strcmp(v68, "BCM4387C0")
          || !strcmp(v68, "BCM4387C2")
          || !strcmp(v68, "BCM4388B0")
          || !strcmp(v68, "BCM4388C0")
          || !strcmp(v68, "BCM4388C2"))
        {
          if (qword_1004E2420 != -1)
            dispatch_once(&qword_1004E2420, &stru_1004DB630);
          v105 = qword_1004E2428;
          if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)v136 = 136315138;
            *(_QWORD *)&v136[4] = v68;
            _os_log_impl((void *)&_mh_execute_header, v105, OS_LOG_TYPE_DEFAULT, "Chipset is %s, load regulatory data from file system", v136, 0xCu);
          }
          v104 = sub_100018BA8(v72, v103);
        }
        else
        {
          v104 = sub_100018AA4((uint64_t)v69, v103);
        }
        v24 = v104;
        if (!(_DWORD)v104)
        {
          if (qword_1004E2420 != -1)
            dispatch_once(&qword_1004E2420, &stru_1004DB6B0);
          v115 = qword_1004E2428;
          if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)v136 = 68157954;
            *(_DWORD *)&v136[4] = v72;
            *(_WORD *)&v136[8] = 2096;
            *(_QWORD *)&v136[10] = v103;
            _os_log_impl((void *)&_mh_execute_header, v115, OS_LOG_TYPE_DEFAULT, "Regulatory data : %.*P", v136, 0x12u);
          }
          v133 = v103;
          if (v71)
          {
            v24 = 0;
            v116 = (40525 * v72) >> 23;
            if (v72 == 207 * v116)
              v117 = v116;
            else
              v117 = v116 + 1;
            v118 = 1;
            v119 = v103;
            v134 = v117;
            v120 = v117;
            do
            {
              if (qword_1004E2420 != -1)
                dispatch_once(&qword_1004E2420, &stru_1004DB6D0);
              v121 = qword_1004E2428;
              v122 = (unsigned __int16)v72;
              if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)v136 = 67109632;
                *(_DWORD *)&v136[4] = v118;
                *(_WORD *)&v136[8] = 1024;
                *(_DWORD *)&v136[10] = v134;
                *(_WORD *)&v136[14] = 1024;
                *(_DWORD *)&v136[16] = (unsigned __int16)v72;
                _os_log_impl((void *)&_mh_execute_header, v121, OS_LOG_TYPE_DEFAULT, "Now sending ptb chunk %u of %u, %u bytes remaining", v136, 0x14u);
                v123 = qword_1004E2420;
              }
              else
              {
                v123 = -1;
              }
              memset(&v136[2], 0, 207);
              LOWORD(v72) = v72 - 207;
              if (v122 >= 0xCF)
                v124 = 207;
              else
                v124 = v122;
              *(_WORD *)v136 = v120 - 1;
              __memcpy_chk(&v136[2]);
              if (v123 != -1)
                dispatch_once(&qword_1004E2420, &stru_1004DB6F0);
              v125 = qword_1004E2428;
              if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
              {
                LODWORD(v139) = 67109634;
                DWORD1(v139) = v124;
                WORD4(v139) = 1040;
                *(_DWORD *)((char *)&v139 + 10) = 209;
                HIWORD(v139) = 2096;
                *(_QWORD *)&v140 = v136;
                _os_log_impl((void *)&_mh_execute_header, v125, OS_LOG_TYPE_DEFAULT, "Loading %u bytes of ptb data: %.*P", (uint8_t *)&v139, 0x18u);
              }
              sub_10001AD7C(65037, (uint64_t)v136, 0xD1uLL, (uint64_t)&buf, v143, 14);
              if (BYTE3(buf))
              {
                if (qword_1004E2420 != -1)
                  dispatch_once(&qword_1004E2420, &stru_1004DB710);
                v126 = qword_1004E2428;
                if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
                {
                  LODWORD(v139) = 67109120;
                  DWORD1(v139) = v118;
                  _os_log_error_impl((void *)&_mh_execute_header, v126, OS_LOG_TYPE_ERROR, "Error in sending regulatory data in chunk %u", (uint8_t *)&v139, 8u);
                }
                v24 = 23;
              }
              ++v118;
              v119 += 207;
              --v120;
            }
            while (v120);
            if ((_DWORD)v24)
              goto LABEL_340;
            if (qword_1004E2420 != -1)
              dispatch_once(&qword_1004E2420, &stru_1004DB730);
            v127 = qword_1004E2428;
            v24 = 0;
            if (!os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
              goto LABEL_340;
            *(_WORD *)v136 = 0;
          }
          else
          {
            sub_10001AD7C(64920, (uint64_t)v103, v72, (uint64_t)&buf, v143, 14);
            if (BYTE3(buf))
            {
              if (qword_1004E2420 != -1)
                dispatch_once(&qword_1004E2420, &stru_1004DB750);
              if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
                sub_1000450FC();
              v24 = 23;
              goto LABEL_340;
            }
            if (qword_1004E2420 != -1)
              dispatch_once(&qword_1004E2420, &stru_1004DB770);
            v127 = qword_1004E2428;
            v24 = 0;
            if (!os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
              goto LABEL_340;
            *(_WORD *)v136 = 0;
          }
          _os_log_impl((void *)&_mh_execute_header, v127, OS_LOG_TYPE_DEFAULT, "Regulatory data loaded successfully", v136, 2u);
LABEL_339:
          v24 = 0;
LABEL_340:
          if (v133)
            free(v133);
          return v24;
        }
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DB650);
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
          sub_100045154();
        v106 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)v136 = 136315394;
          *(_QWORD *)&v136[4] = v68;
          *(_WORD *)&v136[12] = 2080;
          *(_QWORD *)&v136[14] = v69;
          _os_log_impl((void *)&_mh_execute_header, v106, OS_LOG_TYPE_DEFAULT, "Chipset is %s, Platform is %s", v136, 0x16u);
        }
        v107 = IORegistryEntryFromPath(kIOMainPortDefault, "IODeviceTree:/");
        if (v107)
        {
          v108 = v107;
          CFProperty = (const __CFData *)IORegistryEntryCreateCFProperty(v107, CFSTR("board-id"), 0, 0);
          if (!CFProperty)
          {
LABEL_345:
            IOObjectRelease(v108);
            return v24;
          }
          v110 = CFProperty;
          v111 = CFGetTypeID(CFProperty);
          if (v111 != CFDataGetTypeID())
            goto LABEL_344;
          memset(v136, 0, 32);
          Length = CFDataGetLength(v110);
          BytePtr = (const char *)CFDataGetBytePtr(v110);
          if (Length > 0x1F)
          {
            strncpy(v136, BytePtr, 0x20uLL);
          }
          else
          {
            v114 = CFDataGetLength(v110);
            __strncpy_chk(v136, BytePtr, v114, 32);
          }
          v131 = strlen(v136);
          if (strncmp(v136, "Mac-E43C1C25D4880AD6", v131))
          {
LABEL_344:
            CFRelease(v110);
            goto LABEL_345;
          }
          if (qword_1004E2420 != -1)
            dispatch_once(&qword_1004E2420, &stru_1004DB790);
          v132 = qword_1004E2428;
          if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
          {
            LOWORD(v139) = 0;
            _os_log_impl((void *)&_mh_execute_header, v132, OS_LOG_TYPE_DEFAULT, "[isBoardJ52FrankenStein] It is a J52 FrankenStein Setup\n", (uint8_t *)&v139, 2u);
          }
          CFRelease(v110);
          IOObjectRelease(v108);
          if (qword_1004E2420 != -1)
            dispatch_once(&qword_1004E2420, &stru_1004DB690);
          if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
            sub_100045128();
          return 0;
        }
        return v24;
      default:
        if ((_DWORD)v6 == -1)
          return 0;
LABEL_4:
        fprintf(__stderrp, "Invalid option '%c'\n", v6);
        continue;
    }
  }
}

void sub_10000F8CC(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10000F8FC(int a1, const char *a2)
{
  const char *v3;
  char *v4;
  const char *v5;
  uint8x8_t v6;
  uint64_t result;
  int16x8_t v8;
  uint64_t v9;
  ssize_t v10;
  ssize_t v11;
  unsigned __int32 v12;
  __int16 v13;
  uint64_t __buf;
  __int16 v15;

  v13 = 0;
  v12 = 0;
  if (!a2)
  {
    WORD2(__buf) = 0;
    LODWORD(__buf) = 0;
    if (sub_10003E354((unsigned __int8 *)&__buf))
    {
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DAE10);
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
        sub_100044C44();
      return 0xFFFFFFFFLL;
    }
    v6.i32[0] = *(_DWORD *)((char *)&__buf + 2);
    v8 = (int16x8_t)vmovl_u8(v6);
    *(int16x4_t *)v8.i8 = vrev64_s16(*(int16x4_t *)v8.i8);
    v12 = vmovn_s16(v8).u32[0];
    LOBYTE(v13) = BYTE1(__buf);
    HIBYTE(v13) = __buf;
LABEL_13:
    LODWORD(v9) = 117178625;
    HIDWORD(v9) = v12;
    __buf = v9;
    v15 = v13;
    if (byte_1004E241C)
    {
      v10 = off_1004E23D8(qword_1004E23C0, &__buf, 10);
      if ((v10 & 0x80000000) != 0)
      {
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DAE30);
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
          sub_100045218();
        return 0xFFFFFFFFLL;
      }
      return sub_100012024(v10, 0xFC01u);
    }
    v10 = write(a1, &__buf, 0xAuLL);
    if (v10 == 10)
      return sub_100012024(v10, 0xFC01u);
    v11 = v10;
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DAE50);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
    {
      sub_1000451B4();
      if (v11 < 0)
        return 0xFFFFFFFFLL;
    }
    else if (v11 < 0)
    {
      return 0xFFFFFFFFLL;
    }
    *__error() = 5;
    return 0xFFFFFFFFLL;
  }
  if (*a2 == 36)
  {
    v3 = a2 + 1;
    v4 = getenv(a2 + 1);
    fprintf(__stderrp, "Overriding BDADDR from environment variable: %s = %s\n", v3, v4);
    v5 = v4;
  }
  else
  {
    v5 = a2;
  }
  result = sub_1000124F8(v5, (uint64_t)&v12);
  if ((_DWORD)result != -1)
    goto LABEL_13;
  return result;
}

void sub_10000FB84(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000FBB4(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10000FBE4(int a1, char *__str)
{
  const char *v4;
  char *v5;
  unint64_t v6;
  unsigned int v7;
  ssize_t v8;
  int __buf;
  __int16 v10;
  __int16 v11;
  char v12;
  char v13;

  if (byte_1004E241C)
    return 0;
  if (__str)
  {
    if (*__str == 36)
    {
      v4 = __str + 1;
      v5 = getenv(__str + 1);
      fprintf(__stderrp, "Overriding baud rate from environment variable: %s = %s\n", v4, v5);
      v6 = strtoul(v5, 0, 0);
    }
    else
    {
      v6 = strtoul(__str, 0, 0);
    }
  }
  else
  {
    v7 = sub_10003DDA4();
    if (v7)
      v6 = v7;
    else
      v6 = 2400000;
  }
  __buf = 117184513;
  v10 = 0;
  v11 = v6;
  v12 = BYTE2(v6);
  v13 = BYTE3(v6);
  v8 = write(a1, &__buf, 0xAuLL);
  if (v8 == 10)
  {
    if ((sub_100012024(10, 0xFC18u) & 0x80000000) == 0)
    {
      off_1004E23F8(qword_1004E23C0, v6);
      return 0;
    }
  }
  else if ((v8 & 0x8000000000000000) == 0)
  {
    *__error() = 5;
  }
  return 0xFFFFFFFFLL;
}

void sub_10000FD4C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000FD7C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000FDAC(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000FDDC(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000FE0C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10000FE3C(uint64_t a1, uint64_t a2)
{
  char *v2;
  int v3;
  unsigned int v4;
  uint64_t v5;
  _BYTE *v6;
  char v7;
  uint64_t v8;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  _BYTE v19[251];
  char __s[16];
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;

  v34 = 0u;
  v35 = 0u;
  v32 = 0u;
  v33 = 0u;
  v30 = 0u;
  v31 = 0u;
  v28 = 0u;
  v29 = 0u;
  v26 = 0u;
  v27 = 0u;
  v24 = 0u;
  v25 = 0u;
  v22 = 0u;
  v23 = 0u;
  *(_OWORD *)__s = 0u;
  v21 = 0u;
  if (a2)
  {
    v2 = (char *)a2;
    if (*(_BYTE *)a2 == 36)
    {
      v2 = getenv((const char *)(a2 + 1));
      fprintf(__stderrp, "Overriding hostname from environment variable: %s = %s\n");
    }
    else
    {
      fprintf(__stderrp, "Using passed hostname: %s\n");
    }
  }
  else
  {
    v34 = 0uLL;
    v35 = 0uLL;
    v32 = 0uLL;
    v33 = 0uLL;
    v30 = 0uLL;
    v31 = 0uLL;
    v28 = 0uLL;
    v29 = 0uLL;
    v26 = 0uLL;
    v27 = 0uLL;
    v24 = 0uLL;
    v25 = 0uLL;
    v22 = 0uLL;
    v23 = 0uLL;
    *(_OWORD *)__s = 0uLL;
    v21 = 0uLL;
    j__gethostname(__s, 0x100uLL);
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DAE70);
    v2 = __s;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEBUG))
      sub_10004527C();
  }
  v3 = strlen(v2);
  if (v3)
  {
    memset(v19, 0, sizeof(v19));
    v18 = -133426431;
    v4 = v3 - 1;
    if (v3 >= 1)
    {
      if (v4 >= 0xF7)
        v4 = 247;
      v5 = v4 + 1;
      v6 = v19;
      do
      {
        v7 = *v2++;
        *v6++ = v7;
        --v5;
      }
      while (v5);
    }
    v8 = off_1004E23D8(qword_1004E23C0, &v18, 252);
    if ((_DWORD)v8 != -1)
      return sub_100012024(v8, 0xC13u);
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DAE90);
    v10 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100044C70(v10, v11, v12, v13, v14, v15, v16, v17);
  }
  return 0xFFFFFFFFLL;
}

void sub_1000100B0(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000100E0(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100010110(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100010140(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100010170(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_1000101A0(int a1, uint64_t a2)
{
  void *v4;
  NSArray *v5;
  uint64_t v6;
  id v8;
  id v9;
  int v10;
  uint64_t v11;
  void *v12;
  int v13;
  char *v14;
  uint8x8_t v15;
  uint64_t v16;
  int16x8_t v17;
  ssize_t v18;
  ssize_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _BYTE v24[128];
  int __buf;
  uint64_t v26;
  unsigned __int32 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v4 = objc_autoreleasePoolPush();
  v28 = 0;
  v29 = 0;
  v30 = 0;
  v5 = -[NSString componentsSeparatedByString:](+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", a2), "componentsSeparatedByString:", CFSTR(","));
  if (-[NSArray count](v5, "count") <= 0x18 && -[NSArray count](v5, "count") > 9)
  {
    v22 = 0u;
    v23 = 0u;
    v20 = 0u;
    v21 = 0u;
    v8 = -[NSArray countByEnumeratingWithState:objects:count:](v5, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
    if (v8)
    {
      v9 = v8;
      v10 = 0;
      v11 = *(_QWORD *)v21;
      do
      {
        v12 = 0;
        v13 = v10;
        v14 = (char *)&v28 + v10;
        do
        {
          if (*(_QWORD *)v21 != v11)
            objc_enumerationMutation(v5);
          *((_BYTE *)v12 + (_QWORD)v14) = strtol((const char *)objc_msgSend(*(id *)(*((_QWORD *)&v20 + 1) + 8 * (_QWORD)v12), "UTF8String"), 0, 0);
          v12 = (char *)v12 + 1;
        }
        while (v9 != v12);
        v9 = -[NSArray countByEnumeratingWithState:objects:count:](v5, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
        v10 = v13 + (_DWORD)v12;
      }
      while (v9);
      v16 = v28;
      v15.i32[0] = v29;
      v17 = (int16x8_t)vmovl_u8(v15);
    }
    else
    {
      v16 = 0;
      v17 = 0uLL;
    }
    __buf = 217851649;
    v26 = v16;
    v27 = vmovn_s16(v17).u32[0];
    if (byte_1004E241C)
    {
      v18 = off_1004E23D8(qword_1004E23C0, &__buf, 16);
      if ((v18 & 0x80000000) != 0)
      {
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DAEF0);
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
          sub_100045340();
        goto LABEL_4;
      }
    }
    else
    {
      v18 = write(a1, &__buf, 0x10uLL);
      if (v18 != 16)
      {
        v19 = v18;
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DAF10);
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
        {
          sub_1000452DC();
          if (v19 < 0)
            goto LABEL_4;
        }
        else if (v19 < 0)
        {
          goto LABEL_4;
        }
        *__error() = 5;
        goto LABEL_4;
      }
    }
    v6 = sub_100012024(v18, 0xFC27u);
    goto LABEL_5;
  }
  puts("Sleep mode requires less than 24 parameters");
LABEL_4:
  v6 = 0xFFFFFFFFLL;
LABEL_5:
  objc_autoreleasePoolPop(v4);
  return v6;
}

void sub_100010468(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100010498(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000104C8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_1000104F8(int a1, char *a2)
{
  char *v4;
  int v5;
  int v6;
  uint64_t v7;

  v4 = sub_100011608(a2);
  v5 = open(v4, 0);
  if (v5 < 0)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DAC50);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_10004536C();
    return 0xFFFFFFFFLL;
  }
  else
  {
    v6 = v5;
    sub_100018954((uint64_t)a2);
    dword_1004E1FB0 = v6;
    v7 = sub_1000117B0(a1, (uint64_t (*)(_OWORD *))sub_100011C88);
    close(v6);
    return v7;
  }
}

void sub_1000105C4(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000105F4(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100010624(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100010654(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100010684(int a1)
{
  const char *v2;
  const char *v3;
  NSObject *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  char *v17;
  NSObject *v18;
  size_t Length;
  CFIndex v20;
  NSObject *v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  NSObject *v32;
  NSObject *v33;
  const char *v34;
  NSObject *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  __int16 v44;
  int v45;
  char v46;
  NSObject *v47;
  NSObject *v48;
  NSObject *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  _DWORD *v58;
  _DWORD *v59;
  uint64_t i;
  size_t v61;
  uint64_t v62;
  unsigned __int16 v63;
  void *v64;
  unsigned __int16 v65;
  void *v66;
  unsigned __int16 v67;
  void *v68;
  _OWORD buf[15];
  char __str[1024];
  _OWORD v71[17];
  int v72;
  __int128 v73;
  int v74;
  __int128 v75;
  int v76;
  CFRange v77;

  v68 = 0;
  v67 = 0;
  v66 = 0;
  v65 = 0;
  v64 = 0;
  v63 = 0;
  v62 = 0;
  memset(v71, 0, 256);
  v2 = (const char *)sub_100040D4C();
  sub_100040610();
  bzero(__str, 0x400uLL);
  v61 = 1024;
  if (sysctlbyname("kern.bootargs", __str, &v61, 0, 0) || (v17 = strtok(__str, " ")) == 0)
  {
LABEL_2:
    v3 = (const char *)sub_100040D4C();
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DB3D0);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEBUG))
      sub_1000456F4();
    if (strcmp(v3, "BCM4355B3")
      && strcmp(v3, "BCM4355C0")
      && strcmp(v3, "BCM43430B1")
      && strcmp(v3, "BCM4357B1")
      && strcmp(v3, "BCM4355C1")
      && strcmp(v3, "BCM4377B2")
      && strcmp(v3, "BCM4377B3")
      && strcmp(v3, "BCM4378B1")
      && strcmp(v3, "BCM4378B3")
      && strcmp(v3, "BCM4387C0")
      && strcmp(v3, "BCM4387C2")
      && strcmp(v3, "BCM4388B0")
      && strcmp(v3, "BCM4388C0")
      && strcmp(v3, "BCM4388C2"))
    {
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DB3F0);
      v4 = qword_1004E2428;
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(buf[0]) = 0;
        v5 = "Chipset does not support taurus cal";
LABEL_62:
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, v5, (uint8_t *)buf, 2u);
        goto LABEL_63;
      }
      goto LABEL_63;
    }
    if (strcmp(v2, "BCM4378B1")
      && strcmp(v2, "BCM4378B3")
      && strcmp(v2, "BCM4387C2")
      && strcmp(v2, "BCM4388B0")
      && strcmp(v2, "BCM4388C0")
      && strcmp(v2, "BCM4388C2"))
    {
      v6 = sub_10003EBDC((UInt8 **)&v64, &v63);
      if ((_DWORD)v6)
      {
        v7 = v6;
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DB2B0);
        v8 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
        {
          sub_100045690(v7, v8, v9, v10, v11, v12, v13, v14);
          goto LABEL_134;
        }
        goto LABEL_60;
      }
      if (a1)
        sub_1000128C8((unsigned __int8 *)v64, v63);
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DB290);
      v33 = qword_1004E2428;
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
      {
        LODWORD(buf[0]) = 67109634;
        DWORD1(buf[0]) = v63;
        WORD4(buf[0]) = 1040;
        *(_DWORD *)((char *)buf + 10) = v63;
        HIWORD(buf[0]) = 2096;
        *(_QWORD *)&buf[1] = v64;
        v34 = "Cal data to be loaded (%d bytes): %.*P";
        goto LABEL_83;
      }
      goto LABEL_84;
    }
    LODWORD(buf[1]) = -1962371525;
    buf[0] = xmmword_100049051;
    if (MGIsDeviceOneOfType(buf))
    {
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DB230);
      v15 = qword_1004E2428;
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(buf[0]) = 0;
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "Loading Calibration from FDR ... ", (uint8_t *)buf, 2u);
        *(_QWORD *)&v75 = 0;
        *(_QWORD *)&v73 = 0;
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DB410);
      }
      else
      {
        *(_QWORD *)&v75 = 0;
        *(_QWORD *)&v73 = 0;
      }
      v18 = qword_1004E2428;
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(buf[0]) = 0;
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "Loading calibration of FATP stage ... \n", (uint8_t *)buf, 2u);
      }
      if (sub_1000146F8((const void **)&v73, &v75, (uint64_t)CFSTR("BWCl")) == -1)
      {
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DB430);
        v31 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          LOWORD(buf[0]) = 0;
          _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, "FATP stage calibration not found, looking for Golden calibration from SMT ... \n", (uint8_t *)buf, 2u);
        }
        if (sub_1000146F8((const void **)&v73, &v75, (uint64_t)CFSTR("0BCl")))
        {
          if ((_QWORD)v75)
          {
            if (qword_1004E2420 != -1)
              dispatch_once(&qword_1004E2420, &stru_1004DB470);
            v32 = qword_1004E2428;
            if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
              sub_100045610((CFErrorRef *)&v75, v32);
          }
          v16 = 7;
LABEL_57:
          if (qword_1004E2420 != -1)
            dispatch_once(&qword_1004E2420, &stru_1004DB270);
          v22 = qword_1004E2428;
          if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
          {
            sub_1000455AC(v16, v22, v23, v24, v25, v26, v27, v28);
LABEL_134:
            if (qword_1004E2420 != -1)
              dispatch_once(&qword_1004E2420, &stru_1004DB330);
          }
LABEL_60:
          v4 = qword_1004E2428;
          if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
          {
            LOWORD(buf[0]) = 0;
            v5 = "No taurus cal data. Load extended calibration for Simba";
            goto LABEL_62;
          }
LABEL_63:
          v29 = sub_10003EBC8((UInt8 **)&v68, &v67);
          if ((_DWORD)v29
            || (!strcmp(v2, "BCM4355B3")
              ? (v30 = sub_10003EBB4((UInt8 **)&v66, &v65))
              : (v30 = sub_10003EBA0((UInt8 **)&v66, &v65)),
                v29 = v30,
                (_DWORD)v30))
          {
            if (qword_1004E2420 != -1)
              dispatch_once(&qword_1004E2420, &stru_1004DB350);
            v49 = qword_1004E2428;
            if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
              sub_100045548(v29, v49, v50, v51, v52, v53, v54, v55);
          }
          else
          {
            if (v65 != 20 && v65 != 320 && v65 != 1360)
            {
              if (qword_1004E2420 != -1)
                dispatch_once(&qword_1004E2420, &stru_1004DB370);
              if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
                sub_10004548C();
              goto LABEL_118;
            }
            if (v67 != 206)
            {
              if (qword_1004E2420 != -1)
                dispatch_once(&qword_1004E2420, &stru_1004DB390);
              if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
                sub_10004551C();
              goto LABEL_118;
            }
            if (!strcmp(v2, "BCM4355B3"))
            {
              v58 = malloc_type_malloc(0x550uLL, 0x1000040B4D46FCDuLL);
              v59 = v66;
              *v58 = *(_DWORD *)v66;
              v58[1] = v59[1];
              LODWORD(v59) = v59[2];
              v58[2] = (_DWORD)v59;
              if ((_DWORD)v59 != 32)
              {
                if (qword_1004E2420 != -1)
                  dispatch_once(&qword_1004E2420, &stru_1004DB3B0);
                if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
                  sub_1000454B8();
                free(v58);
                goto LABEL_118;
              }
              for (i = 12; i != 1356; i += 42)
                sub_10001AD7C(64792, (uint64_t)v66 + i, 0x2AuLL, (uint64_t)v71, &v62, 14);
              free(v58);
            }
            else
            {
              v56 = 0;
              v57 = 0;
              do
              {
                sub_10001AD7C(64792, (uint64_t)v66 + v56, 0x14uLL, (uint64_t)v71, &v62, 14);
                ++v57;
                v56 += 20;
              }
              while (v57 < v65 / 0x14u);
            }
            sub_10001AD7C(64798, (uint64_t)v68, v67, (uint64_t)v71, &v62, 14);
          }
LABEL_118:
          if (v66)
            free(v66);
          if (v67)
            free(v68);
          if (v64)
            free(v64);
          return;
        }
      }
      Length = CFDataGetLength((CFDataRef)v73);
      v20 = Length;
      if (Length)
      {
        v64 = malloc_type_malloc(Length, 0x100004077774924uLL);
        v77.location = 0;
        v77.length = v20;
        CFDataGetBytes((CFDataRef)v73, v77, (UInt8 *)v64);
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DB450);
        v21 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf[0]) = 134217984;
          *(_QWORD *)((char *)buf + 4) = v20;
          _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "btbf length %ld\n", (uint8_t *)buf, 0xCu);
        }
      }
      v63 = v20;
    }
    else
    {
      v16 = sub_10003EBF0((UInt8 **)&v64, &v63);
      if ((_DWORD)v16)
        goto LABEL_57;
    }
    if (a1)
      sub_1000128C8((unsigned __int8 *)v64, v63);
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DB250);
    v33 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(buf[0]) = 67109634;
      DWORD1(buf[0]) = v63;
      WORD4(buf[0]) = 1040;
      *(_DWORD *)((char *)buf + 10) = v63;
      HIWORD(buf[0]) = 2096;
      *(_QWORD *)&buf[1] = v64;
      v34 = "Cal data for beamforming to be loaded (%d bytes): %.*P";
LABEL_83:
      _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, v34, (uint8_t *)buf, 0x18u);
    }
LABEL_84:
    if (!strcmp(v2, "BCM4355C0"))
    {
      LODWORD(buf[1]) = -350584140;
      buf[0] = xmmword_100049065;
      v76 = 368778837;
      v75 = xmmword_100049079;
      v74 = -1418383976;
      v73 = xmmword_10004908D;
      v72 = -1213485500;
      v71[16] = xmmword_1000490A1;
      if (MGIsDeviceOneOfType(buf))
      {
        if (!*((_BYTE *)v64 + 37) && sub_100013D2C((unsigned int *)v64))
        {
          if (qword_1004E2420 != -1)
            dispatch_once(&qword_1004E2420, &stru_1004DB2D0);
          v35 = qword_1004E2428;
          if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
            sub_100045420(v35, v36, v37, v38, v39, v40, v41, v42);
        }
      }
    }
    v43 = v63 / 0xE6u;
    if (v63 % 0xE6u)
    {
      ++v43;
    }
    else if (v63 < 0xE6u)
    {
      goto LABEL_118;
    }
    v44 = 0;
    v45 = 0;
    while (dword_1004E23C8)
    {
      *(_OWORD *)((char *)&buf[12] + 3) = 0u;
      memset((char *)&buf[13] + 3, 0, 22);
      *(_OWORD *)((char *)&buf[10] + 3) = 0u;
      *(_OWORD *)((char *)&buf[11] + 3) = 0u;
      *(_OWORD *)((char *)&buf[8] + 3) = 0u;
      *(_OWORD *)((char *)&buf[9] + 3) = 0u;
      *(_OWORD *)((char *)&buf[6] + 3) = 0u;
      *(_OWORD *)((char *)&buf[7] + 3) = 0u;
      *(_OWORD *)((char *)&buf[4] + 3) = 0u;
      *(_OWORD *)((char *)&buf[5] + 3) = 0u;
      *(_OWORD *)((char *)&buf[2] + 3) = 0u;
      *(_OWORD *)((char *)&buf[3] + 3) = 0u;
      memset((char *)buf + 3, 0, 32);
      LOBYTE(buf[0]) = 3;
      *(_WORD *)((char *)buf + 1) = ~v44 + v43;
      __memcpy_chk((char *)buf + 3);
      sub_10001AD7C(64919, (uint64_t)buf, 0xE9uLL, (uint64_t)v71, &v62, 14);
      v46 = BYTE4(v71[0]);
      if (BYTE4(v71[0]))
      {
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DB310);
        v47 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
          sub_1000453C4((uint8_t *)&v75, v46, (const char **)((char *)&v75 + 4), v47);
      }
      ++v45;
      v63 -= 230;
      v44 = v45;
      if (v45 >= v43)
        goto LABEL_118;
    }
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DB2F0);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100045398();
    goto LABEL_118;
  }
  while (!strstr(v17, "wifibt-external"))
  {
    v17 = strtok(0, " ");
    if (!v17)
      goto LABEL_2;
  }
  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004DB210);
  v48 = qword_1004E2428;
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(buf[0]) = 0;
    _os_log_impl((void *)&_mh_execute_header, v48, OS_LOG_TYPE_DEFAULT, "Thunderbolt to PCIe expansion chassis, so skip loading calibration data", (uint8_t *)buf, 2u);
  }
}

void sub_1000114B4(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000114E4(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100011514(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100011544(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_100011574()
{
  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004DB010);
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEBUG))
    sub_100045780();
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
    sub_100045754();
  return 5;
}

char *sub_100011608(char *a1)
{
  char *v1;
  int v2;
  char *v3;
  uint64_t v4;
  char *v5;
  NSObject *v7;
  char *__endptr;
  uint8_t buf[4];
  char *v10;

  v1 = a1;
  if (strchr(a1, 58) && strchr(v1, 44))
  {
    v2 = sub_1000126B0();
    v3 = strtok(v1, ":,");
    if (v3)
    {
      __endptr = 0;
      while (1)
      {
        v4 = strtol(v3, &__endptr, 0);
        v5 = strtok(0, ":,");
        v1 = v5;
        if (v4 == v2)
          break;
        if (!v5)
          return v1;
        v3 = strtok(0, ":,");
        if (!v3)
          return 0;
      }
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DAED0);
      v7 = qword_1004E2428;
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136315138;
        v10 = v1;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Using HCD File: %s", buf, 0xCu);
      }
    }
    else
    {
      return 0;
    }
  }
  return v1;
}

void sub_10001176C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10001179C(int a1, int a2)
{
  dword_1004E1FB0 = a2;
  return sub_1000117B0(a1, (uint64_t (*)(_OWORD *))sub_100011C88);
}

uint64_t sub_1000117B0(int a1, uint64_t (*a2)(_OWORD *))
{
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  ssize_t v7;
  ssize_t v8;
  int v9;
  unsigned int i;
  NSObject *v11;
  uint64_t v12;
  uint8_t buf[4];
  int v15;
  _OWORD __buf[17];

  v4 = sub_100040D4C();
  memset(__buf, 0, 259);
  if (byte_1004E241C)
    return a2(__buf);
  v6 = (const char *)v4;
  LODWORD(__buf[0]) = 16526849;
  v7 = write(a1, __buf, 4uLL);
  if (v7 != 4)
  {
    if ((v7 & 0x8000000000000000) == 0)
      *__error() = 5;
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DACD0);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100045894();
    return 0xFFFFFFFFLL;
  }
  if ((sub_100012024(4, 0xFC2Eu) & 0x80000000) != 0)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DACF0);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_1000457E4();
    return 0xFFFFFFFFLL;
  }
  usleep(0xC350u);
  if (!v6)
    v6 = (const char *)&unk_1004C69E6;
  if (!strcmp(v6, "BCM4325") || !strcmp(v6, "BCM4329B1") || !strcmp(v6, "BCM4329C0") || !strcmp(v6, "BCM20710"))
  {
    v8 = read(a1, __buf, 2uLL);
    if (v8 == 2)
    {
      if (LOBYTE(__buf[0]) - 48 <= 9 && BYTE1(__buf[0]) >= 0x30u && BYTE1(__buf[0]) < 0x3Au)
        goto LABEL_15;
      *__error() = 94;
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DAD30);
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
        sub_10004583C();
    }
    else
    {
      if ((v8 & 0x8000000000000000) == 0)
        *__error() = 5;
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DAD10);
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
        sub_100045868();
    }
    return 0xFFFFFFFFLL;
  }
LABEL_15:
  v9 = 0;
  for (i = 1; ; ++i)
  {
    v5 = a2(__buf);
    if (50 * (i / 0x32) - 1 == v9)
    {
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DAD50);
      v11 = qword_1004E2428;
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 67109120;
        v15 = v9 + 1;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "Loading segment %d", buf, 8u);
      }
    }
    if ((int)v5 < 1)
      break;
    if (LOBYTE(__buf[0]) != 1 || BYTE2(__buf[0]) != 252)
    {
      *__error() = 94;
      return 0xFFFFFFFFLL;
    }
    v12 = off_1004E23D8(qword_1004E23C0, __buf, v5);
    if ((_DWORD)v12 == -1)
    {
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DAD70);
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
        sub_100044B58();
      return 0xFFFFFFFFLL;
    }
    ++v9;
    if ((sub_100012024(v12, *(unsigned __int16 *)((char *)__buf + 1)) & 0x80000000) != 0)
    {
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DAD90);
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
        sub_100045810();
      return 0xFFFFFFFFLL;
    }
  }
  return v5;
}

uint64_t sub_100011C88(char *a1)
{
  size_t st_size_low;
  void *v2;
  void *v3;
  uint64_t v4;
  ssize_t v6;
  unsigned int v7;
  char *v8;
  size_t v9;
  ssize_t v10;
  NSObject *v11;
  stat v13;

  if (!byte_1004E241C)
  {
    v6 = read(dword_1004E1FB0, a1, 4uLL);
    if (!v6)
      return 0;
    if (v6 == 4)
    {
      if (*a1 == 1)
      {
        v7 = 4;
      }
      else
      {
        *(_DWORD *)(a1 + 1) = *(_DWORD *)a1;
        *a1 = 1;
        v7 = 5;
      }
      if (a1[2] == 252)
      {
        v4 = a1[3] + 4;
        v8 = &a1[v7];
        v9 = v4 - v7;
        v10 = read(dword_1004E1FB0, v8, v9);
        if (v10 == v9)
          return v4;
        if ((v10 & 0x8000000000000000) == 0)
          *__error() = 94;
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DACB0);
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
          sub_1000458EC();
      }
      else
      {
        *__error() = 94;
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DAC90);
        v11 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
          sub_100045918(v11);
      }
    }
    else
    {
      if ((v6 & 0x8000000000000000) == 0)
        *__error() = 94;
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DAC70);
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
        sub_1000458C0();
    }
    return 0xFFFFFFFFLL;
  }
  memset(&v13, 0, sizeof(v13));
  if (fstat(dword_1004E1FB0, &v13) == -1)
    st_size_low = 0xFFFFFFFFLL;
  else
    st_size_low = LODWORD(v13.st_size);
  if ((int)st_size_low < 1)
    return 0xFFFFFFFFLL;
  v2 = malloc_type_malloc(st_size_low, 0x2B7C2E49uLL);
  if (!v2)
    return 0xFFFFFFFFLL;
  v3 = v2;
  if ((_DWORD)st_size_low == read(dword_1004E1FB0, v2, st_size_low))
  {
    v4 = sub_100005E14((uint64_t)v3, st_size_low);
  }
  else
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DB070);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100045994();
    v4 = 0xFFFFFFFFLL;
  }
  free(v3);
  return v4;
}

void sub_100011F64(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100011F94(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100011FC4(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100011FF4(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_100012024(uint64_t a1, unsigned int a2)
{
  NSObject *v3;
  BOOL v4;
  NSObject *v5;
  unint64_t v7;
  uint8_t buf[4];
  int v9;
  __int16 v10;
  int v11;
  __int16 v12;
  int v13;
  __int16 v14;
  int v15;
  __int16 v16;
  int v17;
  __int16 v18;
  int v19;
  __int16 v20;
  unsigned int v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int16 v38;

  v7 = 0;
  v22 = 0u;
  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v29 = 0u;
  v30 = 0u;
  v31 = 0u;
  v32 = 0u;
  v33 = 0u;
  v34 = 0u;
  v35 = 0u;
  v36 = 0u;
  v37 = 0u;
  v38 = 0;
  off_1004E23F0(qword_1004E23C0, &v22, 258, &v7);
  if (v7 < 4)
  {
LABEL_2:
    *__error() = 5;
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DADB0);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100045A00();
    return 0xFFFFFFFFLL;
  }
  while (v22 != 14)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DADD0);
    v3 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 67109120;
      v9 = v22;
      _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "EVNT: Previous command did not complete yet: %02X", buf, 8u);
    }
    v38 = 0;
    v36 = 0u;
    v37 = 0u;
    v34 = 0u;
    v35 = 0u;
    v32 = 0u;
    v33 = 0u;
    v30 = 0u;
    v31 = 0u;
    v28 = 0u;
    v29 = 0u;
    v27 = 0u;
    v25 = 0u;
    v26 = 0u;
    v23 = 0u;
    v24 = 0u;
    v22 = 0u;
    off_1004E23F0(qword_1004E23C0, &v22, 258, &v7);
    if (v7 < 4)
      goto LABEL_2;
  }
  if (BYTE2(v22) != 1
    || BYTE3(v22) != a2
    || (BYTE4(v22) == a2 >> 8 ? (v4 = BYTE5(v22) == 0) : (v4 = 0), !v4))
  {
    *__error() = 94;
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DADF0);
    v5 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 67110656;
      v9 = v22;
      v10 = 1024;
      v11 = BYTE1(v22);
      v12 = 1024;
      v13 = BYTE2(v22);
      v14 = 1024;
      v15 = BYTE3(v22);
      v16 = 1024;
      v17 = BYTE4(v22);
      v18 = 1024;
      v19 = BYTE5(v22);
      v20 = 1024;
      v21 = a2;
      _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "EVNT: Invalid opcode Got:[0x%x 0x%x 0x%x 0x%x 0x%x 0x%x], waiting for [0x%x] !", buf, 0x2Cu);
    }
    return 0xFFFFFFFFLL;
  }
  return 0;
}

void sub_100012348(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100012378(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000123A8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000123D8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100012408(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100012438(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100012468(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100012498(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000124C8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_1000124F8(const char *a1, uint64_t a2)
{
  unsigned __int8 *v5;
  uint64_t i;
  int v7;
  unsigned int v8;
  unsigned int v9;
  char v10;
  char v11;
  char v12;
  char v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  char v17;
  char v18;
  char v19;

  if (!a1)
    return 0xFFFFFFFFLL;
  if (strlen(a1) < 0x11)
    return 0xFFFFFFFFLL;
  v5 = (unsigned __int8 *)(a1 + 1);
  for (i = 5; i != -1; --i)
  {
    v7 = *(v5 - 1);
    v8 = v7 - 48;
    v9 = v7 - 97;
    if ((v7 - 65) >= 6)
      v10 = 0;
    else
      v10 = v7 - 55;
    v11 = v7 - 87;
    if (v9 > 5)
      v11 = v10;
    if (v8 < 0xA)
      v11 = v8;
    v12 = 16 * v11;
    *(_BYTE *)(a2 + i) = v12;
    v14 = *v5;
    v5 += 3;
    v13 = v14;
    v15 = v14 - 48;
    v16 = v14 - 97;
    v17 = v14 - 55;
    if ((v14 - 65) >= 6)
      v18 = 0;
    else
      v18 = v17;
    v19 = v13 - 87;
    if (v16 > 5)
      v19 = v18;
    if (v15 < 0xA)
      v19 = v15;
    *(_BYTE *)(a2 + i) = v19 | v12;
  }
  return 0;
}

void sub_1000125C0(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000125F0(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100012620(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100012650(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100012680(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_1000126B0()
{
  NSObject *v0;
  uint64_t v2;
  uint8_t buf[4];
  int v4;
  __int16 v5;
  int v6;
  _OWORD v7[16];
  __int16 v8;

  v8 = 0;
  memset(v7, 0, sizeof(v7));
  v2 = 0;
  off_1004E23E8(qword_1004E23C0, &unk_100049233, 3);
  do
    off_1004E23F0(qword_1004E23C0, v7, 258, &v2);
  while (LOBYTE(v7[0]) != 14);
  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004DAEB0);
  v0 = qword_1004E2428;
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 67109376;
    v4 = BYTE13(v7[0]);
    v5 = 1024;
    v6 = BYTE12(v7[0]);
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "LMP Subversion: 0x%02X%02x", buf, 0xEu);
  }
  return WORD6(v7[0]);
}

void sub_100012808(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100012838(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100012868(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100012898(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

size_t sub_1000128C8(unsigned __int8 *a1, int a2)
{
  size_t result;
  unsigned __int8 *v5;
  int v6;

  result = fwrite("Cal data for beamforming to be loaded:\n", 0x27uLL, 1uLL, __stdoutp);
  if (a2)
  {
    v5 = &a1[a2];
    do
    {
      v6 = *a1++;
      result = fprintf(__stdoutp, "%02X ", v6);
    }
    while (a1 < v5);
  }
  return result;
}

void sub_100012944(uint64_t a1, unsigned int *a2, char *__s)
{
  char *v4;
  size_t v6;
  _BYTE *v7;
  _BYTE *v8;
  int v9;
  unsigned __int8 v10;
  __uint32_t v11;
  int v12;
  unsigned int v13;
  _BYTE *v14;
  char v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  char v19;
  char v20;
  unsigned int v21;

  if (a1)
  {
    if (a2)
    {
      v4 = __s;
      v6 = strlen(__s);
      v7 = malloc_type_malloc(v6 + 1, 0x68D00A07uLL);
      if (v7)
      {
        v8 = v7;
        v9 = 0;
        while (*v4)
        {
          v10 = __tolower(*v4);
          if ((v10 & 0x80) != 0)
            v11 = 0;
          else
            v11 = HIWORD(_DefaultRuneLocale.__runetype[v10]) & 1;
          ++v4;
          if (v11)
            v8[v9++] = v10;
        }
        v8[v9] = 0;
        LOBYTE(v12) = *v8;
        if (*v8)
        {
          v13 = 0;
          v14 = v8;
          do
          {
            v15 = __tolower((char)v12);
            if ((v15 - 48) >= 0xA)
              v16 = v15 - 87;
            else
              v16 = v15 - 48;
            if (v14[1])
              v17 = 2;
            else
              v17 = 1;
            if (v14[1])
              v18 = v14 + 2;
            else
              v18 = v14 + 1;
            if (v14[1])
              v19 = v14[1];
            else
              v19 = 48;
            v20 = __tolower(v19);
            v21 = v20 - 48;
            if (v21 >= 0xA)
              LOBYTE(v21) = v20 - 87;
            *(_BYTE *)(a1 + v13++) = v21 | (16 * v16);
            v12 = v14[v17];
            v14 = v18;
          }
          while (v12);
        }
        else
        {
          v13 = 0;
        }
        free(v8);
        *a2 = v13;
      }
    }
  }
}

uint64_t sub_100012A94(const char *a1, int *a2)
{
  FILE *v2;
  char v3;
  dispatch_once_t *v4;
  os_log_t *v5;
  NSObject *v6;
  dispatch_once_t *v7;
  os_log_t *v8;
  unsigned __int16 v9;
  unsigned __int16 v10;
  int v11;
  NSObject *v12;
  int v13;
  NSObject *v14;
  int v15;
  int v16;
  NSObject *v17;
  NSObject *v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  NSObject *v24;
  int v25;
  NSObject *v26;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  char *__s;
  uint64_t v35;
  uint64_t v36;
  unsigned __int16 v37;
  unsigned __int8 v38;
  unsigned __int16 v39;
  unsigned __int8 v40;
  uint8_t buf[4];
  _BYTE v42[10];
  _BYTE v43[6];
  _BYTE v44[6];
  _BYTE v45[6];
  _DWORD v46[4];
  _OWORD v47[16];
  __int16 v48;
  _BYTE v49[32];
  _BYTE v50[32];
  _OWORD v51[8];

  memset(v51, 0, sizeof(v51));
  v40 = 0;
  v39 = 0;
  v38 = 0;
  v37 = 0;
  memset(v50, 0, sizeof(v50));
  v35 = 0;
  v36 = 0;
  memset(v49, 0, sizeof(v49));
  v48 = 0;
  memset(v47, 0, sizeof(v47));
  v2 = fopen(a1, "r");
  if (fgets((char *)v51, 128, v2))
  {
    v32 = 0;
    v3 = 0;
    __s = (char *)((unint64_t)v51 | 9);
    v4 = &qword_1004E2420;
    v5 = (os_log_t *)&qword_1004E2428;
    do
    {
      if (sscanf((const char *)v51, ":%2hhx%4hx%2hhx", &v40, &v39, &v38) == 3)
      {
        if (*v4 != -1)
          dispatch_once(v4, &stru_1004DAF30);
        v6 = *v5;
        if (os_log_type_enabled(*v5, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 67109632;
          *(_DWORD *)v42 = v40;
          *(_WORD *)&v42[4] = 1024;
          *(_DWORD *)&v42[6] = v39;
          *(_WORD *)v43 = 1024;
          *(_DWORD *)&v43[2] = v38;
          _os_log_debug_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "count = 0x%02X addressOffset = 0x%04X type = 0x%02X", buf, 0x14u);
        }
        if (v38 == 4)
        {
          sscanf(__s, "%4hx", &v37);
          v15 = v37;
          v16 = v39;
          if (*v4 != -1)
            dispatch_once(v4, &stru_1004DAFB0);
          v17 = *v5;
          if (os_log_type_enabled(*v5, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)buf = 67109632;
            *(_DWORD *)v42 = v39;
            *(_WORD *)&v42[4] = 1024;
            *(_DWORD *)&v42[6] = v37;
            *(_WORD *)v43 = 1024;
            *(_DWORD *)&v43[2] = v16 | (v15 << 16);
            _os_log_debug_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEBUG, " addressOffset = 0x%04X addressBase = 0x%04X inAddress = 0x%08X", buf, 0x14u);
          }
        }
        else if (!v38)
        {
          v7 = v4;
          v8 = v5;
          v9 = v37;
          v10 = v39;
          v11 = v39 | (v37 << 16);
          if ((v3 & 1) != 0)
          {
            HIDWORD(v36) = 0;
            sub_100012944((uint64_t)v50, (unsigned int *)&v36 + 1, __s);
            if (*v7 != -1)
              dispatch_once(v7, &stru_1004DAF70);
            v12 = *v8;
            if (os_log_type_enabled(*v8, OS_LOG_TYPE_DEBUG))
            {
              v19 = v50[0];
              if (!HIDWORD(v36))
                v19 = 0;
              v20 = v50[1];
              if (HIDWORD(v36) <= 1)
                v20 = 0;
              v21 = v50[2];
              if (HIDWORD(v36) <= 2)
                v21 = 0;
              v22 = v50[3];
              if (HIDWORD(v36) <= 3)
                v22 = 0;
              *(_DWORD *)buf = 67110400;
              *(_DWORD *)v42 = v11;
              *(_WORD *)&v42[4] = 1024;
              *(_DWORD *)&v42[6] = HIDWORD(v36);
              *(_WORD *)v43 = 1024;
              *(_DWORD *)&v43[2] = v19;
              *(_WORD *)v44 = 1024;
              *(_DWORD *)&v44[2] = v20;
              *(_WORD *)v45 = 1024;
              *(_DWORD *)&v45[2] = v21;
              LOWORD(v46[0]) = 1024;
              *(_DWORD *)((char *)v46 + 2) = v22;
              _os_log_debug_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, " inAddress = 0x%08X inLength = 0x%08X inData[0-3] = 0x%02X%02X%02X%02X...", buf, 0x26u);
            }
            LOWORD(v47[0]) = v10;
            WORD1(v47[0]) = v9;
            v13 = HIDWORD(v36);
            __memcpy_chk((char *)v47 + 4);
            sub_10001AD7C(64588, (uint64_t)v47, (v13 + 3), (uint64_t)v47, &v35, 14);
            if (*v7 != -1)
              dispatch_once(v7, &stru_1004DAF90);
            v5 = v8;
            v14 = *v8;
            if (os_log_type_enabled(*v8, OS_LOG_TYPE_DEBUG))
            {
              *(_DWORD *)buf = 134219008;
              *(_QWORD *)v42 = v35;
              *(_WORD *)&v42[8] = 1024;
              *(_DWORD *)v43 = LOBYTE(v47[0]);
              *(_WORD *)&v43[4] = 1024;
              *(_DWORD *)v44 = BYTE1(v47[0]);
              *(_WORD *)&v44[4] = 1024;
              *(_DWORD *)v45 = BYTE2(v47[0]);
              *(_WORD *)&v45[4] = 1024;
              v46[0] = BYTE3(v47[0]);
              _os_log_debug_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "pktLength %zu WriteRAM 0x%02X%02X%02X%02X", buf, 0x24u);
            }
            v4 = v7;
            if (BYTE3(v47[0]))
              goto LABEL_42;
            v3 = 1;
          }
          else
          {
            *a2 = v11;
            if (*v7 != -1)
              dispatch_once(v7, &stru_1004DAF50);
            v5 = v8;
            v18 = *v8;
            if (os_log_type_enabled(*v8, OS_LOG_TYPE_DEBUG))
            {
              v23 = *a2;
              *(_DWORD *)buf = 67109120;
              *(_DWORD *)v42 = v23;
              _os_log_debug_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEBUG, " addressLaunch = 0x%08X", buf, 8u);
            }
            LODWORD(v36) = 0;
            sub_100012944((uint64_t)v49, (unsigned int *)&v36, __s);
            v3 = 1;
            v32 = v11;
            v4 = v7;
          }
        }
      }
    }
    while (fgets((char *)v51, 128, v2));
    if ((v3 & 1) == 0)
      return fclose(v2);
LABEL_42:
    if (*v4 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DAFD0);
    v24 = *v5;
    if (os_log_type_enabled(*v5, OS_LOG_TYPE_DEBUG))
    {
      v28 = v49[0];
      if (!(_DWORD)v36)
        v28 = 0;
      v29 = v49[1];
      if (v36 <= 1)
        v29 = 0;
      v30 = v49[2];
      if (v36 <= 2)
        v30 = 0;
      v31 = v49[3];
      if (v36 <= 3)
        v31 = 0;
      *(_DWORD *)buf = 67110400;
      *(_DWORD *)v42 = v32;
      *(_WORD *)&v42[4] = 1024;
      *(_DWORD *)&v42[6] = v36;
      *(_WORD *)v43 = 1024;
      *(_DWORD *)&v43[2] = v28;
      *(_WORD *)v44 = 1024;
      *(_DWORD *)&v44[2] = v29;
      *(_WORD *)v45 = 1024;
      *(_DWORD *)&v45[2] = v30;
      LOWORD(v46[0]) = 1024;
      *(_DWORD *)((char *)v46 + 2) = v31;
      _os_log_debug_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEBUG, " firstAddress = 0x%08X firstLength = 0x%08X firstData[0-3] = 0x%02X%02X%02X%02X...", buf, 0x26u);
    }
    LODWORD(v47[0]) = v32;
    v25 = v36;
    __memcpy_chk((char *)v47 + 4);
    sub_10001AD7C(64588, (uint64_t)v47, (v25 + 3), (uint64_t)v47, &v35, 14);
    if (*v4 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DAFF0);
    v26 = *v5;
    if (os_log_type_enabled(*v5, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 134219008;
      *(_QWORD *)v42 = v35;
      *(_WORD *)&v42[8] = 1024;
      *(_DWORD *)v43 = LOBYTE(v47[0]);
      *(_WORD *)&v43[4] = 1024;
      *(_DWORD *)v44 = BYTE1(v47[0]);
      *(_WORD *)&v44[4] = 1024;
      *(_DWORD *)v45 = BYTE2(v47[0]);
      *(_WORD *)&v45[4] = 1024;
      v46[0] = BYTE3(v47[0]);
      _os_log_debug_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEBUG, "pktLength %zu WriteRAM 0x%02X%02X%02X%02X", buf, 0x24u);
    }
  }
  return fclose(v2);
}

void sub_1000131D0(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100013200(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100013230(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100013260(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100013290(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000132C0(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000132F0(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100013320(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100013350(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100013380(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000133B0(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

char *sub_1000133E0(int a1)
{
  char *v1;
  uint64_t v3;
  const char *v4;
  const void *v5;
  const void *v6;
  int v7;
  int v8;
  int v9;
  int v10;
  DIR *v11;
  DIR *v12;
  dirent *v13;
  dirent *v14;
  NSObject *v15;
  char *v16;
  size_t v17;
  NSObject *v18;
  NSObject *v20;
  uint8_t buf[4];
  char *d_name;

  v1 = &byte_1004E0AB0;
  if (!byte_1004E0AB0)
  {
    v3 = sub_100040D4C();
    if (!v3)
      return 0;
    v4 = (const char *)v3;
    v5 = (const void *)MGCopyAnswer(CFSTR("ReleaseType"), 0);
    if (!v5)
      return 0;
    v6 = v5;
    v7 = CFEqual(v5, CFSTR("Vendor"));
    v8 = CFEqual(v6, CFSTR("Internal"));
    v9 = CFEqual(v6, CFSTR("NonUI"));
    v10 = CFEqual(v6, CFSTR("VendorNonUI"));
    CFRelease(v6);
    if (!v7 && !v8 && !v9 && !v10)
      return 0;
    v11 = opendir("/etc/bluetool");
    if (v11)
    {
      v12 = v11;
      v13 = readdir(v11);
      if (v13)
      {
        v14 = v13;
        while (1)
        {
          if (qword_1004E2420 != -1)
            dispatch_once(&qword_1004E2420, &stru_1004DB0B0);
          v15 = qword_1004E2428;
          if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 136315138;
            d_name = v14->d_name;
            _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "Looking at file %s", buf, 0xCu);
          }
          v16 = v14->d_name;
          v17 = strlen(v4);
          if (!strncmp(v16, v4, v17) && (strstr(v16, "LPM") == 0) != a1)
          {
            bzero(&byte_1004E0AB0, 0x400uLL);
            __strlcat_chk(&byte_1004E0AB0, "/etc/bluetool/", 1024, 1024);
            __strlcat_chk(&byte_1004E0AB0, v16, 1024, 1024);
            if (qword_1004E2420 != -1)
              dispatch_once(&qword_1004E2420, &stru_1004DB0D0);
            v18 = qword_1004E2428;
            if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 136315138;
              d_name = &byte_1004E0AB0;
              _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "Looking at firmware file %s", buf, 0xCu);
            }
            if (!access(&byte_1004E0AB0, 4))
              break;
          }
          readdir(v12);
          v14 = readdir(v12);
          if (!v14)
            goto LABEL_26;
        }
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DB0F0);
        v20 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 136315138;
          d_name = v16;
          _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "Have access to file %s", buf, 0xCu);
        }
        v1 = &byte_1004E0AB0;
      }
      else
      {
LABEL_26:
        v1 = 0;
      }
      closedir(v12);
    }
    else
    {
      return 0;
    }
  }
  return v1;
}

void sub_100013724(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_100013754(_DWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v7;
  unsigned int v8;
  int v9;
  int v10;
  NSObject *v11;

  if (byte_1004E241C)
  {
    v1 = sub_100017024();
    if ((int)v1 >= 1)
    {
      v2 = v1;
      v3 = malloc_type_malloc(v1, 0xE04AF8E8uLL);
      if (v3)
      {
        v4 = v3;
        if ((sub_100015E2C() & 0x80000000) == 0)
        {
          if (sub_10001611C(v2, v4) == (_DWORD)v2)
          {
            v5 = sub_100005E14((uint64_t)v4, v2);
LABEL_24:
            free(v4);
            return v5;
          }
          if (qword_1004E2420 != -1)
            dispatch_once(&qword_1004E2420, &stru_1004DB170);
          if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
            sub_100045A2C();
        }
        v5 = 0xFFFFFFFFLL;
        goto LABEL_24;
      }
    }
    return 0xFFFFFFFFLL;
  }
  if (!a1)
    return 0;
  v7 = sub_10001611C(4, a1);
  v5 = v7;
  if ((_DWORD)v7)
  {
    if ((_DWORD)v7 == 4)
    {
      if (*(_BYTE *)a1 == 1)
      {
        v8 = 4;
      }
      else
      {
        *(_DWORD *)((char *)a1 + 1) = *a1;
        *(_BYTE *)a1 = 1;
        v8 = 5;
      }
      if (*((unsigned __int8 *)a1 + 2) == 252)
      {
        v5 = *((unsigned __int8 *)a1 + 3) + 4;
        v9 = v5 - v8;
        v10 = sub_10001611C(v5 - v8, (char *)a1 + v8);
        if (v10 == v9)
          return v5;
        if ((v10 & 0x80000000) == 0)
          *__error() = 94;
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DB150);
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
          sub_1000458EC();
      }
      else
      {
        *__error() = 94;
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DB130);
        v11 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
          sub_100045918(v11);
      }
    }
    else
    {
      if ((v7 & 0x80000000) == 0)
        *__error() = 94;
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DB110);
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
        sub_1000458C0();
    }
    return 0xFFFFFFFFLL;
  }
  return v5;
}

void sub_1000139FC(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100013A2C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100013A5C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100013A8C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100013ABC(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100013AEC(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100013B1C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100013B4C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100013B7C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100013BAC(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100013BDC(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100013C0C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100013C3C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100013C6C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100013C9C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100013CCC(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100013CFC(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_100013D2C(unsigned int *a1)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v6;
  int v7;
  int v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  NSObject *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  signed int v17;
  signed int v18;
  _QWORD *v21;
  uint64_t v22;
  NSObject *v23;
  uint64_t v24;
  uint64_t i;
  NSObject *v26;
  int v27;
  uint64_t v28;
  NSObject *v29;
  int v31;
  uint64_t j;
  NSObject *v33;
  int v34;
  unsigned __int8 v35;
  unsigned int *v36;
  _BYTE *v37;
  char v38;
  char v39[15];
  char v40;
  char v41[15];
  char v42;
  char v43[15];
  uint8_t buf[8];
  __int16 v45;
  int v46;
  uint64_t v47;
  char v48;

  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004DB490);
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEBUG))
    sub_100045B94();
  v2 = 0;
  v3 = 0;
  v4 = (uint64_t)a1 + a1[6];
  while (*(_BYTE *)(v4 + v3 + 46) != 38)
  {
    v3 += 40;
    ++v2;
    if (v3 == 600)
      return 20;
  }
  v37 = (_BYTE *)(v4 + v3 + 46);
  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004DB4B0);
  v6 = qword_1004E2428;
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
  {
    v7 = *v37;
    *(_DWORD *)buf = 67109376;
    *(_DWORD *)&buf[4] = v7;
    v45 = 1024;
    v46 = v2;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "9.5dBm found : %d at row : %d", buf, 0xEu);
    v8 = a1[6] + v3 + 46;
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DB4D0);
  }
  else
  {
    v8 = a1[6] + v3 + 46;
  }
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEBUG))
    sub_100045AF0();
  v9 = qword_1004E2428;
  v35 = v8;
  v36 = a1;
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_debug_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "old calibration EDR data", buf, 2u);
    v10 = qword_1004E2420;
  }
  else
  {
    v10 = -1;
  }
  v11 = 13;
  v12 = (unsigned __int8 *)(v4 + v3 + 46);
  do
  {
    if (v10 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DB510);
    v13 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEBUG))
    {
      v14 = *v12;
      *(_DWORD *)buf = 67109120;
      *(_DWORD *)&buf[4] = v14;
      _os_log_debug_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "%x", buf, 8u);
      v10 = qword_1004E2420;
    }
    else
    {
      v10 = -1;
    }
    ++v12;
    --v11;
  }
  while (v11);
  v15 = 0;
  v48 = 0;
  v47 = 0;
  *v37 = 54;
  *(_BYTE *)(v4 + v3 + 47) = 10;
  *(_QWORD *)buf = *(_QWORD *)(v4 + v3 + 50);
  LOBYTE(v45) = *(_BYTE *)(v4 + v3 + 58);
  do
  {
    v16 = 0;
    while (*(unsigned __int8 *)(v4 + 11 + v15) != byte_1000491B0[v16])
    {
      if (++v16 == 31)
      {
        v17 = *((unsigned __int8 *)&v47 + v15);
        v18 = buf[v15];
        goto LABEL_32;
      }
    }
    v18 = buf[v15];
    v17 = llroundf(flt_100049134[v16] + (float)((float)(char)v18 * flt_1000490B8[v16]));
    *((_BYTE *)&v47 + v15) = v17;
LABEL_32:
    if (v17 > (char)v18 && v17 - (char)v18 >= 11)
    {
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DB5B0);
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
        sub_100045AC4(&v42, v43);
LABEL_49:
      *((_BYTE *)&v47 + v15) = v18;
      v17 = v18;
      goto LABEL_50;
    }
    if ((char)v18 > v17 && (char)v18 - v17 >= 11)
    {
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DB5D0);
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
        sub_100045AC4(&v40, v41);
      goto LABEL_49;
    }
LABEL_50:
    if (v17 >= 0x97)
    {
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DB5F0);
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEBUG))
        sub_100045A98(&v38, v39);
      LOBYTE(v17) = -106;
      *((_BYTE *)&v47 + v15) = -106;
    }
    *(_BYTE *)(v4 + v15++ + v3 + 50) = v17;
  }
  while (v15 != 9);
  v21 = (_QWORD *)((char *)v36 + v35);
  v22 = *(_QWORD *)v37;
  *(_QWORD *)((char *)v21 + 5) = *(_QWORD *)(v4 + v3 + 51);
  *v21 = v22;
  *(unsigned int *)((char *)v36 + v36[6] + v36[7] - 4) = crc32(0, (const Bytef *)v36 + v36[6], v36[7] - 4);
  v36[8] = crc32(0, (const Bytef *)v36 + v36[6], v36[7]);
  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004DB530);
  v23 = qword_1004E2428;
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_debug_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEBUG, "Updated taurus cal data :", buf, 2u);
    v24 = qword_1004E2420;
  }
  else
  {
    v24 = -1;
  }
  for (i = 0; i != 13; ++i)
  {
    if (v24 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DB550);
    v26 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEBUG))
    {
      v27 = *((unsigned __int8 *)v21 + i);
      *(_DWORD *)buf = 67109120;
      *(_DWORD *)&buf[4] = v27;
      _os_log_debug_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEBUG, "%x", buf, 8u);
      v24 = qword_1004E2420;
    }
    else
    {
      v24 = -1;
    }
  }
  v28 = -4;
  do
  {
    if (v24 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DB570);
    v29 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEBUG))
    {
      v31 = *((unsigned __int8 *)v36 + v36[6] + (unint64_t)v36[7] + v28);
      *(_DWORD *)buf = 67109120;
      *(_DWORD *)&buf[4] = v31;
      _os_log_debug_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEBUG, "Updated crc in tx segment : %x", buf, 8u);
      v24 = qword_1004E2420;
    }
    else
    {
      v24 = -1;
    }
  }
  while (!__CFADD__(v28++, 1));
  for (j = 0; j != 4; ++j)
  {
    if (v24 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DB590);
    v33 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEBUG))
    {
      v34 = *((unsigned __int8 *)v36 + j + 32);
      *(_DWORD *)buf = 67109120;
      *(_DWORD *)&buf[4] = v34;
      _os_log_debug_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEBUG, "Updated header segment crc : %x", buf, 8u);
      v24 = qword_1004E2420;
    }
    else
    {
      v24 = -1;
    }
  }
  return 0;
}

void sub_1000144E8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100014518(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100014548(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100014578(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000145A8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000145D8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100014608(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100014638(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100014668(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100014698(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000146C8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_1000146F8(const void **a1, _QWORD *a2, uint64_t a3)
{
  const __CFDictionary *v5;
  const void *Value;
  uint64_t result;
  uint64_t v8;

  v8 = 0;
  v5 = (const __CFDictionary *)AMFDRSealingMapCopyLocalDictForClass(a3, 0, &v8);
  if (a1 && v5)
  {
    Value = CFDictionaryGetValue(v5, CFSTR("BTBF"));
    *a1 = Value;
    if (!Value)
      goto LABEL_9;
LABEL_7:
    CFRetain(Value);
    result = 0;
    if (!a2)
      return result;
    goto LABEL_10;
  }
  if (a1)
  {
    Value = *a1;
    if (*a1)
      goto LABEL_7;
  }
LABEL_9:
  result = 0xFFFFFFFFLL;
  if (!a2)
    return result;
LABEL_10:
  if (v8)
    *a2 = v8;
  return result;
}

void sub_100014788(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000147B8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000147E8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100014818(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100014848(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100014878(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000148A8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000148D8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100014908(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100014938(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100014968(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100014998(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000149C8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000149F8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100014A28(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100014A58(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100014A88(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100014AB8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100014AE8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100014B18(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100014B48(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100014B78(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100014BA8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100014BD8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100014C08(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100014C38(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100014C68(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100014C98(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100014CC8(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 2u);
}

void sub_100014CD4(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 8u);
}

void sub_100014CE0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0xCu);
}

void sub_100014D08(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x18u);
}

void sub_100014D1C(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 2u);
}

_BYTE *sub_100014D28(_BYTE *result, _BYTE *a2)
{
  *result = 0;
  *a2 = 0;
  return result;
}

void sub_100014D38(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

uint64_t sub_100014D54(int a1)
{
  unsigned __int16 v1;
  _OWORD v3[13];
  uint64_t v4;

  v4 = 0;
  memset(&v3[1], 0, 192);
  if (a1)
    v1 = 16387;
  else
    v1 = 16388;
  v3[0] = 0uLL;
  return sub_100014DB0(2u, v1, (unsigned __int16 *)v3, 8, 0);
}

uint64_t sub_100014DB0(unsigned __int16 a1, unsigned __int16 a2, unsigned __int16 *a3, uint64_t a4, int a5)
{
  int v8;
  int v9;
  uint64_t v11;
  char v12;
  _OWORD v13[13];
  uint64_t v14;

  v14 = 0;
  memset(v13, 0, sizeof(v13));
  *a3 = a1;
  a3[1] = (unint64_t)(a4 + 10) >> 1;
  v8 = (unsigned __int16)word_1004E0EB0++;
  a3[2] = v8;
  a3[3] = a2;
  a3[4] = 0;
  v12 = -62;
  __memcpy_chk(v13);
  if (a5)
  {
    v11 = 217;
    v9 = sub_10001AF50((uint64_t)&v12, a4 + 11, (uint64_t)&v12, &v11);
    memcpy(a3, v13, v11 - 1);
    if (!v9)
      goto LABEL_5;
    return 0xFFFFFFFFLL;
  }
  if (sub_10001AF50((uint64_t)&v12, a4 + 11, 0, 0))
    return 0xFFFFFFFFLL;
LABEL_5:
  if (v8 != a3[2] || a3[4])
    return 0xFFFFFFFFLL;
  return 0;
}

uint64_t sub_100014F10(int a1)
{
  unsigned __int16 v1;
  _OWORD v3[13];
  uint64_t v4;

  v4 = 0;
  memset(&v3[1], 0, 192);
  if (a1)
    v1 = 16385;
  else
    v1 = 16386;
  v3[0] = 0uLL;
  return sub_100014DB0(2u, v1, (unsigned __int16 *)v3, 8, 0);
}

uint64_t sub_100014F6C(__int16 a1)
{
  _OWORD v2[13];
  uint64_t v3;

  v3 = 0;
  memset(v2, 0, sizeof(v2));
  WORD5(v2[0]) = 11;
  WORD6(v2[0]) = a1;
  return sub_100014DB0(2u, 0x5004u, (unsigned __int16 *)v2, 8, 0);
}

uint64_t sub_100014FCC()
{
  _OWORD v1[13];
  uint64_t v2;

  v2 = 0;
  memset(v1, 0, sizeof(v1));
  WORD5(v1[0]) = 10;
  return sub_100014DB0(2u, 0x5004u, (unsigned __int16 *)v1, 8, 1);
}

uint64_t sub_100015028(__int16 *a1, __int16 *a2, _WORD *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  int v10;
  int v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  v26 = -1;
  *(_QWORD *)&v6 = -1;
  *((_QWORD *)&v6 + 1) = -1;
  v24 = v6;
  v25 = v6;
  v22 = v6;
  v23 = v6;
  v20 = v6;
  v21 = v6;
  v18 = v6;
  v19 = v6;
  v16 = v6;
  v17 = v6;
  v14 = v6;
  v15 = v6;
  v13 = v6;
  if (sub_100014DB0(0, 0x281Au, (unsigned __int16 *)&v13, 8, 1))
    return 0xFFFFFFFFLL;
  *a1 = WORD5(v13);
  *(_QWORD *)&v7 = -1;
  *((_QWORD *)&v7 + 1) = -1;
  v13 = v7;
  v14 = v7;
  v15 = v7;
  v16 = v7;
  v17 = v7;
  v18 = v7;
  v19 = v7;
  v20 = v7;
  v21 = v7;
  v22 = v7;
  v23 = v7;
  v24 = v7;
  v25 = v7;
  v26 = -1;
  if (sub_100014DB0(0, 0x281Bu, (unsigned __int16 *)&v13, 8, 1))
    return 0xFFFFFFFFLL;
  *a2 = WORD5(v13);
  *(_QWORD *)&v8 = -1;
  *((_QWORD *)&v8 + 1) = -1;
  v13 = v8;
  v14 = v8;
  v15 = v8;
  v16 = v8;
  v17 = v8;
  v18 = v8;
  v19 = v8;
  v20 = v8;
  v21 = v8;
  v22 = v8;
  v23 = v8;
  v24 = v8;
  v25 = v8;
  v26 = -1;
  if (sub_100014DB0(0, 0x2819u, (unsigned __int16 *)&v13, 8, 1))
    return 0xFFFFFFFFLL;
  v10 = WORD5(v13);
  *a3 = WORD5(v13);
  if (*a1 == -1)
    return 0xFFFFFFFFLL;
  v12 = *a2 == -1 || v10 == 0xFFFF;
  return (v12 << 31 >> 31);
}

uint64_t sub_100015168(__int16 a1, void *a2, uint64_t a3)
{
  size_t v5;
  uint64_t v6;
  __int128 v8;
  _OWORD v9[12];
  uint64_t v10;

  v10 = 0;
  memset(v9, 0, sizeof(v9));
  v8 = 0u;
  WORD5(v8) = a1;
  v5 = 2 * a3;
  WORD6(v8) = a3;
  v6 = sub_100014DB0(0, 0x7003u, (unsigned __int16 *)&v8, 2 * a3 + 6, 1);
  if (!(_DWORD)v6 && a3)
    memcpy(a2, v9, v5);
  return v6;
}

uint64_t sub_10001520C(__int16 a1, const void *a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  _OWORD v9[12];
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a3 > 0x64)
    return 1;
  v11 = v3;
  v12 = v4;
  v10 = 0;
  memset(v9, 0, sizeof(v9));
  v8 = 0u;
  WORD5(v8) = a1;
  WORD6(v8) = a3;
  if (a3)
  {
    v6 = 2 * a3;
    memcpy(v9, a2, 2 * a3);
    v7 = v6 + 6;
  }
  else
  {
    v7 = 6;
  }
  return sub_100014DB0(2u, 0x7003u, (unsigned __int16 *)&v8, v7, 1);
}

uint64_t sub_1000152A0(__int16 a1, _WORD *a2)
{
  uint64_t result;
  _OWORD v4[13];
  uint64_t v5;

  v5 = 0;
  memset(v4, 0, sizeof(v4));
  WORD5(v4[0]) = a1;
  HIWORD(v4[0]) = 0;
  result = sub_100014DB0(0, 0x3006u, (unsigned __int16 *)v4, 8, 1);
  if (!(_DWORD)result)
    *a2 = WORD6(v4[0]);
  return result;
}

uint64_t sub_100015314(int a1, char **a2)
{
  const char *v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  const char *v13;
  int v14;
  char *v15;
  char *v16;
  char *v17;
  __int16 v18;
  _WORD *v19;
  _WORD *v20;
  char *v21;
  const char *v22;
  unint64_t v23;
  uint64_t v24;
  int v25;
  FILE *v26;
  int v27;
  unsigned __int16 v28;
  uint64_t v29;
  const char *v30;
  size_t v31;
  _WORD *v32;
  unint64_t v33;
  unsigned int v34;
  unsigned int v35;
  int v36;
  __int16 v38;
  __int16 v39;
  unsigned __int16 v40;
  __int16 v41[4];
  char __s[16];
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;

  v4 = "Warm";
  optind = 1;
  while (2)
  {
    while (1)
    {
      v5 = getopt(a1, a2, "hVrwRp:l:sicBT");
      v6 = v5;
      if ((int)v5 > 83)
        break;
      switch((_DWORD)v5)
      {
        case 0x52:
LABEL_14:
          v11 = sub_100014F10(v5 == 82);
          if (v11)
          {
            fprintf(__stderrp, "Unable to reset chip: %d\n", v11);
          }
          else
          {
            if (v6 == 82)
              v13 = "Cold";
            else
              v13 = v4;
            fprintf(__stderrp, "%s reset complete!\n", v13);
          }
          break;
        case 0xFFFFFFFF:
          return 0;
        case 0x42:
          v34 = sub_10003DDA4();
          if (v34)
            v35 = v34;
          else
            v35 = 2400000;
          switch(v35)
          {
            case 0x1C200u:
              LOWORD(v36) = 472;
              break;
            case 0x2DC6C0u:
              LOWORD(v36) = 12288;
              break;
            case 0x249F00u:
              LOWORD(v36) = 9830;
              break;
            default:
              v36 = (int)((double)v35 * 0.004096);
              break;
          }
          *(_WORD *)__s = v36;
          v39 = 446;
          return sub_10001520C(v39, __s, 1uLL);
        default:
LABEL_40:
          fprintf(__stderrp, "Invalid option '%c'\n", v5);
          break;
      }
    }
    switch((int)v5)
    {
      case 'h':
        fprintf(__stderrp, "%s - CSR Specific Commnads\n", *a2);
        fwrite("-V        - Get BlueCore specific version/revision information.\n", 0x40uLL, 1uLL, __stderrp);
        fwrite("-r        - Warm Reset.\n", 0x18uLL, 1uLL, __stderrp);
        fwrite("-R        - Cold Reset.\n", 0x18uLL, 1uLL, __stderrp);
        fwrite("-w        - Warm Halt.\n", 0x17uLL, 1uLL, __stderrp);
        fwrite("-s        - Deep Sleep\n", 0x17uLL, 1uLL, __stderrp);
        fwrite("-p <key>  - Read a given PSKEY\n", 0x1FuLL, 1uLL, __stderrp);
        fwrite("-l <mode> - Put device into PCM loopback\n", 0x29uLL, 1uLL, __stderrp);
        fwrite("-i\t       - Write device name and address\n", 0x2AuLL, 1uLL, __stderrp);
        fwrite("-c        - Check for wifi presence.\n", 0x25uLL, 1uLL, __stderrp);
        fwrite("-B        - Set the baud rate using a predefined value\n", 0x37uLL, 1uLL, __stderrp);
        fwrite("-T        - Set the transport using a predefined value\n", 0x37uLL, 1uLL, __stderrp);
        fputc(10, __stderrp);
        return 0;
      case 'i':
        v56 = 0u;
        v57 = 0u;
        v54 = 0u;
        v55 = 0u;
        v52 = 0u;
        v53 = 0u;
        v50 = 0u;
        v51 = 0u;
        v48 = 0u;
        v49 = 0u;
        v46 = 0u;
        v47 = 0u;
        v44 = 0u;
        v45 = 0u;
        *(_OWORD *)__s = 0u;
        v43 = 0u;
        if (!j__gethostname(__s, 0x100uLL))
        {
          v7 = strlen(__s);
          v8 = v7 + 1 >= 0 ? v7 + 1 : v7 + 2;
          v9 = sub_10001520C(264, __s, (uint64_t)v8 >> 1);
          if (v9)
            fprintf(__stderrp, "Unable to write Device Name (%d)\n", v9);
        }
        if (!sub_10003E354((unsigned __int8 *)__s))
        {
          v41[0] = __s[3];
          v41[1] = bswap32(*(unsigned __int16 *)&__s[4]) >> 16;
          v41[2] = __s[2];
          v41[3] = bswap32(*(unsigned __int16 *)__s) >> 16;
          v10 = sub_10001520C(1, v41, 4uLL);
          if (v10)
            fprintf(__stderrp, "Unable to write BDADDR (%d)\n", v10);
        }
        continue;
      case 'j':
      case 'k':
      case 'm':
      case 'n':
      case 'o':
      case 'q':
      case 't':
      case 'u':
      case 'v':
        goto LABEL_40;
      case 'l':
        v14 = strtoul(optarg, 0, 0);
        if (sub_100014F6C(v14))
          fprintf(__stderrp, "Unable to put chip into PCM Loopback Mode %d\n", v14);
        else
          fprintf(__stderrp, "Chip now in PCM Loopback Mode %d\n", v14);
        continue;
      case 'p':
        *(_WORD *)__s = 0;
        v15 = optarg;
        v16 = strchr(optarg, 61);
        if (v16)
        {
          v17 = v16;
          *v16 = 0;
          v18 = strtoul(v15, 0, 0);
          strcpy(__s, "d");
          v19 = malloc_type_malloc(0xC8uLL, 0x1000040BDFB0063uLL);
          if (!v19)
            continue;
          v20 = v19;
          v21 = strtok(v17 + 1, ",:");
          if (v21)
          {
            v22 = v4;
            v23 = 0;
            v24 = 0xFFFFFFFF00000000;
            while (v23 < *(unsigned __int16 *)__s)
            {
              v20[v23++] = strtoul(v21, 0, 0);
              v21 = strtok(0, ",:");
              v24 += (uint64_t)&_mh_execute_header;
              if (!v21)
                goto LABEL_56;
            }
            fprintf(__stderrp, "Too many values given, skipping all past 0x%04x\n", *(unsigned __int16 *)((char *)v20 + (v24 >> 31)));
LABEL_56:
            v4 = v22;
          }
          else
          {
            LOWORD(v23) = 0;
          }
          *(_WORD *)__s = v23;
          if (sub_10001520C(v18, v20, (unsigned __int16)v23))
            fprintf(__stderrp, "Unable to write PSKEY 0x%04x values: %d\n");
LABEL_59:
          free(v20);
          continue;
        }
        v28 = strtoul(v15, 0, 0);
        if (sub_1000152A0(v28, __s))
        {
          *(_WORD *)__s = 1;
          v29 = 1;
        }
        else
        {
          v29 = *(unsigned __int16 *)__s;
        }
        v32 = malloc_type_malloc(2 * v29, 0x1000040BDFB0063uLL);
        if (v32)
        {
          v20 = v32;
          if (sub_100015168(v28, v32, *(unsigned __int16 *)__s))
          {
            fprintf(__stderrp, "Unable to read PSKEY 0x%04x: %d\n");
          }
          else
          {
            fprintf(__stderrp, "PSKEY 0x%04x = ", v28);
            if (*(_WORD *)__s)
            {
              v33 = 0;
              do
                fprintf(__stderrp, "0x%04x ", (unsigned __int16)v20[v33++]);
              while (v33 < *(unsigned __int16 *)__s);
            }
            fputc(10, __stderrp);
          }
          goto LABEL_59;
        }
        continue;
      case 'r':
        goto LABEL_14;
      case 's':
        v25 = sub_100014FCC();
        v26 = __stderrp;
        if (v25)
        {
          fprintf(__stderrp, "Unable to deep sleep chip: %d\n", v25);
          continue;
        }
        v30 = "Deep Sleep Entered!\n";
        v31 = 20;
        goto LABEL_46;
      case 'w':
        v27 = sub_100014D54(0);
        v26 = __stderrp;
        if (v27)
        {
          fprintf(__stderrp, "Unable to warm halt chip: %d\n", v27);
        }
        else
        {
          v30 = "Warm Halt Entered!\n";
          v31 = 19;
LABEL_46:
          fwrite(v30, v31, 1uLL, v26);
        }
        continue;
      default:
        if ((_DWORD)v5 == 86)
        {
          *(_WORD *)__s = 0;
          v41[0] = 0;
          v40 = 0;
          v12 = sub_100015028((__int16 *)__s, v41, &v40);
          if (v12)
          {
            fprintf(__stderrp, "Unable to get CSR specific revision information: %d\n", v12);
          }
          else
          {
            fprintf(__stderrp, "CSR BlueCore Version 0x%04x, Revision 0x%04x, Build: ", *(unsigned __int16 *)__s, (unsigned __int16)v41[0]);
            if (v40 == 3164)
            {
              puts("A06");
            }
            else if (v40 == 1120)
            {
              puts("A05");
            }
            else
            {
              printf("Unknown: 0x%04x\n", v40);
            }
          }
          continue;
        }
        if ((_DWORD)v5 != 84)
          goto LABEL_40;
        switch(sub_10003E07C())
        {
          case 0u:
            v38 = 2;
            goto LABEL_86;
          case 1u:
          case 3u:
            v38 = 3;
            goto LABEL_86;
          case 2u:
            v38 = 7;
            goto LABEL_86;
          case 4u:
            v38 = 6;
            goto LABEL_86;
          case 5u:
            v38 = 1;
LABEL_86:
            *(_WORD *)__s = v38;
            break;
          default:
            *(_WORD *)__s = 0;
            break;
        }
        v39 = 505;
        return sub_10001520C(v39, __s, 1uLL);
    }
  }
}

uint64_t sub_100015AFC()
{
  uint64_t result;
  char v1;
  __int128 v2;
  int v3;
  __int128 v4;
  int v5;

  if (MGGetBoolAnswer(CFSTR("ThreadRadioCapability")))
  {
    v5 = -1441055153;
    v4 = xmmword_100049208;
    result = MGIsDeviceOneOfType(&v4);
    if ((result & 1) != 0)
      goto LABEL_3;
  }
  v3 = -1962371525;
  v2 = xmmword_10004921C;
  result = MGIsDeviceOneOfType(&v2);
  if ((_DWORD)result
    && (result = MGGetStringAnswer(CFSTR("MacFormFactor"))) != 0
    && (result = (uint64_t)objc_msgSend((id)result, "UTF8String", 0)) != 0
    && (result = strcmp((const char *)result, "rack"), !(_DWORD)result))
  {
LABEL_3:
    v1 = 1;
  }
  else
  {
    v1 = 0;
  }
  byte_1004E0EB8 = v1;
  return result;
}

uint64_t sub_100015BE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned int a9, uint64_t a10, uint64_t a11, char a12)
{
  uint64_t v12;
  uint64_t *v14;
  char *v15;
  int *v16;
  unsigned int v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  NSObject *v27;
  uint64_t result;
  char *v29;
  int v30;
  uint64_t v31;
  __int16 v32;
  uint64_t v33;
  __int16 v34;
  uint64_t v35;

  v12 = a2;
  v14 = &qword_1004E0EC8;
  if (a12)
    v14 = &qword_1004E0EC0;
  v15 = (char *)*v14;
  v16 = &dword_1004E0ED0;
  if (!a12)
    v16 = &dword_1004E0ED4;
  v17 = *v16;
  if (!v15)
  {
    v19 = a3;
    v20 = a6;
    v21 = a5;
    v22 = a4;
    v23 = a8;
    v24 = a7;
    v15 = (char *)malloc_type_calloc(0x200uLL, 0x60uLL, 0x10D00408759784FuLL);
    a7 = v24;
    a8 = v23;
    a4 = v22;
    a5 = v21;
    a6 = v20;
    a3 = v19;
    v12 = a2;
    v25 = &qword_1004E0EC0;
    if (!a12)
      v25 = &qword_1004E0EC8;
    *v25 = (uint64_t)v15;
    if (!v15)
      return 4661;
  }
  if (v17 >= 0x201)
  {
    v26 = a3;
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DB7B0);
    v27 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
    {
      v30 = 136315650;
      v31 = a1;
      v32 = 2080;
      v33 = v12;
      v34 = 2080;
      v35 = v26;
      _os_log_error_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_ERROR, "Out of memory, can't add %s_%s_%s.", (uint8_t *)&v30, 0x20u);
    }
    return 4661;
  }
  v29 = &v15[96 * v17];
  *(_QWORD *)v29 = a1;
  *((_QWORD *)v29 + 1) = v12;
  *((_QWORD *)v29 + 2) = a3;
  *((_QWORD *)v29 + 3) = a7;
  *((_QWORD *)v29 + 4) = a8;
  *((_QWORD *)v29 + 5) = a9;
  *((_QWORD *)v29 + 6) = a10;
  *((_QWORD *)v29 + 7) = a11;
  *((_QWORD *)v29 + 8) = a4;
  *((_QWORD *)v29 + 9) = a5;
  *((_QWORD *)v29 + 10) = a6;
  *((_QWORD *)v29 + 11) = 0;
  result = 0;
  if (a12)
    dword_1004E0ED0 = v17 + 1;
  else
    dword_1004E0ED4 = v17 + 1;
  return result;
}

void sub_100015DFC(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_100015E2C()
{
  char *v0;
  const char *v1;
  const char *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  int v7;
  uint64_t v8;

  v0 = sub_100040610();
  v1 = (const char *)sub_100040D4C();
  sub_100040068();
  v2 = sub_100015EB8();
  v3 = byte_1004E0EB8;
  v4 = qword_1004E0EC0;
  v5 = qword_1004E0EC8;
  result = sub_10001600C(v0, v1, v2);
  if ((_DWORD)result != -1)
  {
    v7 = result;
    result = 0;
    if (v3)
      v8 = v4;
    else
      v8 = v5;
    *(_DWORD *)(v8 + 96 * v7 + 88) = 0;
  }
  return result;
}

const char *sub_100015EB8()
{
  int v0;

  v0 = sub_100040068();
  if (v0 > 1835627634)
  {
    if (v0 <= 1886547811)
    {
      if (v0 == 1835627635)
      {
        return "MIT";
      }
      else
      {
        if (v0 != 1836413537)
          return "ALL";
        return "MUR";
      }
    }
    else
    {
      switch(v0)
      {
        case 1886547812:
          return "PROD";
        case 1936548719:
          return "SMC";
        case 1937006964:
          return "STA";
        default:
          return "ALL";
      }
    }
  }
  else if (v0 <= 544498794)
  {
    if (v0 == 538997881)
    {
      return "TY";
    }
    else
    {
      if (v0 != 543450486)
        return "ALL";
      return "DEV";
    }
  }
  else if (v0 == 544498795)
  {
    return "TDK";
  }
  else
  {
    if (v0 != 544568169)
      return "ALL";
    return "USI";
  }
}

uint64_t sub_10001600C(char *__s1, const char *a2, const char *a3)
{
  uint64_t v3;
  uint64_t *v4;
  int *v5;
  uint64_t v6;
  const char **i;
  const char *v11;

  v3 = dword_1004E09DC;
  if (dword_1004E09DC == -1)
  {
    if (byte_1004E0EB8)
      v4 = &qword_1004E0EC0;
    else
      v4 = &qword_1004E0EC8;
    v5 = &dword_1004E0ED0;
    if (!byte_1004E0EB8)
      v5 = &dword_1004E0ED4;
    v6 = *v5;
    if ((_DWORD)v6)
    {
      v3 = 0;
      for (i = (const char **)(*v4 + 16); ; i += 12)
      {
        if (!strcmp(__s1, *(i - 2)) && (!a2 || !strcmp(a2, *(i - 1))))
        {
          v11 = *i;
          if (!strcmp(a3, *i) || !strcmp("ALL", v11))
            break;
        }
        if (v6 == ++v3)
          return 0xFFFFFFFFLL;
      }
      if (a2)
        dword_1004E09DC = v3;
    }
    else
    {
      return 0xFFFFFFFFLL;
    }
  }
  return v3;
}

uint64_t sub_10001611C(uint64_t a1, void *a2)
{
  char *v4;
  uint64_t v5;
  const char *v6;
  int v7;
  int v8;
  const char *v9;
  int v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  unsigned int v19;
  int *v20;
  uint64_t v21;
  const void *v22;
  uint64_t *v23;
  NSObject *v24;
  NSObject *v25;
  int v26;
  int v28;
  int v29;
  NSObject *v30;
  NSObject *v31;
  _DWORD v32[2];
  __int16 v33;
  void *v34;
  stat buf;

  v4 = sub_100040610();
  v5 = sub_100040D4C();
  if (!v4)
    return 0xFFFFFFFFLL;
  v6 = (const char *)v5;
  if (dword_1004E09D8 == -1)
  {
    v7 = sub_100040068();
    if (v7 == -1)
      v8 = 0;
    else
      v8 = v7;
    dword_1004E09D8 = v8;
  }
  v9 = sub_100015EB8();
  v10 = sub_10001600C(v4, v6, v9);
  v11 = byte_1004E0EB8 ? &qword_1004E0EC0 : &qword_1004E0EC8;
  if (v10 == -1)
    return 0xFFFFFFFFLL;
  v12 = *v11;
  v13 = v12 + 96 * v10;
  v16 = *(int *)(v13 + 88);
  v14 = (int *)(v13 + 88);
  v15 = v16;
  v17 = v10;
  v18 = v12 + 96 * v10;
  LODWORD(v16) = *(_DWORD *)(v18 + 40);
  v20 = (int *)(v18 + 40);
  v19 = v16;
  if (v16 <= v15)
  {
    a1 = 0;
    *v14 = 0;
    return a1;
  }
  v21 = *(_QWORD *)(v12 + 96 * v10 + 48);
  if (v21)
  {
    v22 = (const void *)(v21 + v15);
    if ((int)v15 + (int)a1 >= v19)
    {
      memcpy(a2, v22, v19 - v15);
      v26 = *v20;
      *v14 = *v20;
      return (v26 - v15);
    }
    else
    {
      memcpy(a2, v22, a1);
      *v14 += a1;
    }
    return a1;
  }
  bzero(&byte_1004E1AF0, 0x400uLL);
  __strlcat_chk(&byte_1004E1AF0, "/usr/share/firmware/bluetooth/", 1024, 1024);
  if (byte_1004E0EB8)
    v23 = &qword_1004E0EC0;
  else
    v23 = &qword_1004E0EC8;
  __strlcat_chk(&byte_1004E1AF0, *(_QWORD *)(*v23 + 96 * v17 + 24), 1024, 1024);
  if (!byte_1004E1AF0)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DBDF0);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100045BC4();
    return 0xFFFFFFFFLL;
  }
  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004DBE10);
  v24 = qword_1004E2428;
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO))
  {
    buf.st_dev = 136315138;
    *(_QWORD *)&buf.st_mode = &byte_1004E1AF0;
    _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_INFO, "Expecting firmware file: %s", (uint8_t *)&buf, 0xCu);
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DBCF0);
  }
  v25 = qword_1004E2428;
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO))
  {
    buf.st_dev = 136315138;
    *(_QWORD *)&buf.st_mode = &byte_1004E1AF0;
    _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_INFO, "Opening firmware file: %s", (uint8_t *)&buf, 0xCu);
  }
  if (sub_100016B90(v17, (uint64_t)&byte_1004E1AF0, 0))
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DBD10);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100045CD4();
    return 0xFFFFFFFFLL;
  }
  v28 = open(&byte_1004E1AF0, 0);
  if (v28 < 0)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DBD30);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100045BF0();
    return 0xFFFFFFFFLL;
  }
  v29 = v28;
  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004DBD50);
  v30 = qword_1004E2428;
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO))
  {
    buf.st_dev = 136315138;
    *(_QWORD *)&buf.st_mode = &byte_1004E1AF0;
    _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_INFO, "Firmware file %s successfully opened", (uint8_t *)&buf, 0xCu);
  }
  memset(&buf, 0, sizeof(buf));
  if (fstat(v29, &buf) == -1)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DBD70);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
    {
      sub_100045C1C();
      if (!v29)
        return 0xFFFFFFFFLL;
      goto LABEL_69;
    }
    goto LABEL_68;
  }
  if (LODWORD(buf.st_size) != (_DWORD)a1)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DBDD0);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
    {
      sub_100045CA8();
      if (!v29)
        return 0xFFFFFFFFLL;
      goto LABEL_69;
    }
    goto LABEL_68;
  }
  if (read(v29, a2, SLODWORD(buf.st_size)) != (_DWORD)a1)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DBD90);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
    {
      sub_100045C48();
      if (!v29)
        return 0xFFFFFFFFLL;
      goto LABEL_69;
    }
LABEL_68:
    if (!v29)
      return 0xFFFFFFFFLL;
LABEL_69:
    close(v29);
    return 0xFFFFFFFFLL;
  }
  close(v29);
  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004DBDB0);
  v31 = qword_1004E2428;
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO))
  {
    v32[0] = 68157954;
    v32[1] = a1;
    v33 = 2096;
    v34 = a2;
    _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_INFO, "Raw firmware data loaded: %.*P", (uint8_t *)v32, 0x12u);
  }
  return a1;
}

uint64_t sub_1000166FC()
{
  char *v0;
  const char *v1;
  const char *v2;
  int v3;
  uint64_t *v4;

  v0 = sub_100040610();
  v1 = (const char *)sub_100040D4C();
  sub_100040068();
  v2 = sub_100015EB8();
  if (!v0)
    return 0;
  v3 = sub_10001600C(v0, v1, v2);
  if (v3 == -1)
    return 0;
  if (byte_1004E0EB8)
    v4 = &qword_1004E0EC0;
  else
    v4 = &qword_1004E0EC8;
  return *(_QWORD *)(*v4 + 96 * v3 + 24);
}

uint64_t sub_100016780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  char *v12;
  int v13;
  NSObject *v14;
  uint64_t result;
  char *v16;
  int v17;
  uint64_t v18;
  __int16 v19;
  uint64_t v20;
  __int16 v21;
  uint64_t v22;

  v12 = (char *)qword_1004E0ED8;
  if (!qword_1004E0ED8)
  {
    v12 = (char *)malloc_type_calloc(0x100uLL, 0x30uLL, 0x1050040F2291469uLL);
    qword_1004E0ED8 = (uint64_t)v12;
    if (!v12)
      return 4661;
  }
  v13 = dword_1004E0EE0;
  if (dword_1004E0EE0 >= 0x100)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DB7D0);
    v14 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
    {
      v17 = 136315650;
      v18 = a1;
      v19 = 2080;
      v20 = a2;
      v21 = 2080;
      v22 = a3;
      _os_log_error_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "Out of memory, can't add %s_%s_%s.", (uint8_t *)&v17, 0x20u);
    }
    return 4661;
  }
  result = 0;
  v16 = &v12[48 * dword_1004E0EE0];
  *(_QWORD *)v16 = a1;
  *((_QWORD *)v16 + 1) = a2;
  *((_QWORD *)v16 + 2) = a3;
  *((_QWORD *)v16 + 3) = a4;
  *((_DWORD *)v16 + 8) = a5;
  *((_DWORD *)v16 + 9) = 0;
  *((_QWORD *)v16 + 5) = a6;
  dword_1004E0EE0 = v13 + 1;
  return result;
}

void sub_100016900(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void *sub_100016930()
{
  char *v0;
  const char *v1;
  const char *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  const char *v7;
  NSObject *v9;
  int v10;
  void *v11;

  v0 = sub_100040610();
  v1 = (const char *)sub_100040D4C();
  sub_100040068();
  v2 = sub_100015EB8();
  bzero(&unk_1004E0EE4, 0x400uLL);
  __strlcat_chk(&unk_1004E0EE4, "/usr/share/firmware/bluetooth/", 1024, 1024);
  v3 = 0;
  if (v0 && v1)
  {
    v4 = dword_1004E0EE0;
    if (!dword_1004E0EE0)
      return 0;
    v5 = 0;
    for (i = qword_1004E0ED8 + 16; ; i += 48)
    {
      if (!strcmp(v0, *(const char **)(i - 16)) && !strcmp(v1, *(const char **)(i - 8)))
      {
        v7 = *(const char **)i;
        if (!strcmp(v2, *(const char **)i) || !strcmp("ALL", v7))
          break;
      }
      if (v4 == ++v5)
        return 0;
    }
    __strlcat_chk(&unk_1004E0EE4, *(_QWORD *)(i + 8), 1024, 1024);
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DB7F0);
    v9 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
    {
      v10 = 136315138;
      v11 = &unk_1004E0EE4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Opening firmware file: %s", (uint8_t *)&v10, 0xCu);
    }
    v3 = &unk_1004E0EE4;
    if (sub_100016B90(v5, (uint64_t)&unk_1004E0EE4, 1))
    {
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DB810);
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
        sub_100045CD4();
      return 0;
    }
  }
  return v3;
}

void sub_100016B60(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_100016B90(int a1, uint64_t a2, int a3)
{
  char v3;
  uint64_t *v6;
  NSFileManager *v7;
  NSString *v8;
  NSData *v9;
  NSMutableString *v10;
  uint64_t i;
  const char *v12;
  uint64_t result;
  uint64_t *v14;
  NSObject *v15;
  unsigned __int8 md[16];
  __int128 v17;

  v3 = a3;
  if (a3)
  {
    if (!**(_BYTE **)(qword_1004E0ED8 + 48 * a1 + 40))
    {
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DBE30);
      if (!os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
        return 10;
      goto LABEL_28;
    }
  }
  else
  {
    if (byte_1004E0EB8)
      v6 = &qword_1004E0EC0;
    else
      v6 = &qword_1004E0EC8;
    if (!**(_BYTE **)(*v6 + 96 * a1 + 56))
    {
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DBE50);
      if (!os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
        return 10;
LABEL_28:
      sub_100045D00();
      return 10;
    }
  }
  v7 = +[NSFileManager defaultManager](NSFileManager, "defaultManager");
  v8 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", a2);
  if (!-[NSFileManager fileExistsAtPath:isDirectory:](v7, "fileExistsAtPath:isDirectory:", v8, 0))
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DBED0);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100045D84();
    return 10;
  }
  v9 = +[NSData dataWithContentsOfFile:](NSData, "dataWithContentsOfFile:", v8);
  *(_OWORD *)md = 0u;
  v17 = 0u;
  v10 = +[NSMutableString stringWithCapacity:](NSMutableString, "stringWithCapacity:", 64);
  if (!CC_SHA256(-[NSData bytes](v9, "bytes"), (CC_LONG)-[NSData length](v9, "length"), md))
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DBE70);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100045D2C();
    return 14;
  }
  for (i = 0; i != 32; ++i)
    -[NSMutableString appendFormat:](v10, "appendFormat:", CFSTR("%02x"), md[i]);
  v12 = (const char *)-[NSMutableString cStringUsingEncoding:](v10, "cStringUsingEncoding:", 4);
  if ((v3 & 1) != 0)
  {
    if (strcmp(*(const char **)(qword_1004E0ED8 + 48 * a1 + 40), v12))
    {
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DBE90);
      if (!os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
        return 14;
      goto LABEL_41;
    }
  }
  else
  {
    if (byte_1004E0EB8)
      v14 = &qword_1004E0EC0;
    else
      v14 = &qword_1004E0EC8;
    if (strcmp(*(const char **)(*v14 + 96 * a1 + 56), v12))
    {
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DBEB0);
      if (!os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
        return 14;
LABEL_41:
      sub_100045D58();
      return 14;
    }
  }
  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004DBEF0);
  v15 = qword_1004E2428;
  result = os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO);
  if ((_DWORD)result)
  {
    *(_WORD *)md = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "firmeare file SHA check passed", md, 2u);
    return 0;
  }
  return result;
}

void sub_100016FF4(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_100017024()
{
  char *v0;
  const char *v1;
  const char *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v0 = sub_100040610();
  v1 = (const char *)sub_100040D4C();
  sub_100040068();
  v2 = sub_100015EB8();
  v3 = byte_1004E0EB8;
  v4 = qword_1004E0EC0;
  v5 = qword_1004E0EC8;
  result = sub_10001600C(v0, v1, v2);
  if ((_DWORD)result != -1)
  {
    if (v3)
      v7 = v4;
    else
      v7 = v5;
    return *(unsigned int *)(v7 + 96 * (int)result + 40);
  }
  return result;
}

uint64_t sub_1000170A8(int a1)
{
  char *v2;
  const char *v3;
  const char *v4;
  uint64_t *v5;
  uint64_t v6;
  const char *v7;
  const void *v8;
  const void *v9;
  _BOOL4 v10;
  _BOOL4 v11;
  NSObject *v13;
  NSObject *v14;
  NSObject *v15;
  NSObject *v16;
  NSObject *v17;
  void *v18;
  NSObject *v19;
  void *v20;
  NSObject *v21;
  id v22;
  NSObject *v23;
  const char *v24;
  const char *v25;
  NSObject *v26;
  const char *v27;
  NSObject *v28;
  int v29;
  NSObject *v30;
  uint64_t v31;
  NSObject *v32;
  unsigned int v33;
  NSObject *v34;
  int v35;
  const char *v36;
  int v37;
  NSObject *v38;
  NSObject *v39;
  NSObject *v40;
  NSObject *v41;
  NSObject *v42;
  uint64_t v43;
  int v44;
  NSObject *v45;
  NSObject *v46;
  NSObject *v47;
  NSObject *v48;
  uint64_t v49;
  NSObject *v50;
  NSObject *v51;
  NSObject *v52;
  NSObject *v53;
  uint64_t v54;
  FILE *v55;
  NSObject *v56;
  char *v57;
  char *v58;
  char *v59;
  const char *v60;
  size_t v61;
  FILE *v62;
  NSObject *v63;
  char *v64;
  char *v65;
  char *v66;
  const char *v67;
  size_t v68;
  NSObject *v69;
  uint64_t (*v70)(void);
  uint64_t v71;
  int v72;
  stat v73;
  uint8_t buf[4];
  _BYTE v75[28];
  char __str[16];
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;

  v2 = sub_100040610();
  v3 = (const char *)sub_100040D4C();
  sub_100040068();
  v4 = sub_100015EB8();
  if (byte_1004E0EB8)
    v5 = &qword_1004E0EC0;
  else
    v5 = &qword_1004E0EC8;
  v6 = *v5;
  v90 = 0u;
  v91 = 0u;
  v88 = 0u;
  v89 = 0u;
  v86 = 0u;
  v87 = 0u;
  v84 = 0u;
  v85 = 0u;
  v82 = 0u;
  v83 = 0u;
  v80 = 0u;
  v81 = 0u;
  v78 = 0u;
  v79 = 0u;
  *(_OWORD *)__str = 0u;
  v77 = 0u;
  if (!v2)
    return 10;
  v7 = v4;
  v8 = (const void *)MGCopyAnswer(CFSTR("ReleaseType"), 0);
  if (v8)
  {
    v9 = v8;
    v10 = CFEqual(v8, CFSTR("Vendor")) != 0;
    v11 = CFEqual(v9, CFSTR("Internal")) != 0;
    CFRelease(v9);
  }
  else
  {
    v11 = 0;
    v10 = 0;
  }
  v72 = a1;
  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004DB830);
  memset(&v73, 0, sizeof(v73));
  v13 = qword_1004E2428;
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136315394;
    *(_QWORD *)v75 = v2;
    *(_WORD *)&v75[8] = 2080;
    *(_QWORD *)&v75[10] = "runCommandForCurrentConfig";
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "platform = %s from %s", buf, 0x16u);
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DB850);
  }
  v14 = qword_1004E2428;
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136315394;
    *(_QWORD *)v75 = v3;
    *(_WORD *)&v75[8] = 2080;
    *(_QWORD *)&v75[10] = "runCommandForCurrentConfig";
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "chip = %s from %s", buf, 0x16u);
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DB870);
  }
  v15 = qword_1004E2428;
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136315394;
    *(_QWORD *)v75 = v7;
    *(_WORD *)&v75[8] = 2080;
    *(_QWORD *)&v75[10] = "runCommandForCurrentConfig";
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "vendor = %s from %s", buf, 0x16u);
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DB890);
  }
  v16 = qword_1004E2428;
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 67109634;
    *(_DWORD *)v75 = v10;
    *(_WORD *)&v75[4] = 1024;
    *(_DWORD *)&v75[6] = v11;
    *(_WORD *)&v75[10] = 2080;
    *(_QWORD *)&v75[12] = "runCommandForCurrentConfig";
    _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "_isVendorInstall = %d and _isInternalInstall = %d from %s", buf, 0x18u);
  }
  if (v10 || v11)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DB8B0);
    v17 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315138;
      *(_QWORD *)v75 = "runCommandForCurrentConfig";
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "we are going to look for override script in %s", buf, 0xCu);
    }
    v18 = objc_autoreleasePoolPush();
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DB8D0);
    v19 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315138;
      *(_QWORD *)v75 = "runCommandForCurrentConfig";
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "entered autoreleasepool from %s", buf, 0xCu);
    }
    v20 = (void *)MGCopyAnswer(CFSTR("/YYygAofPDbhrwToVsXdeA"), 0);
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DB8F0);
    v21 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
    {
      v22 = objc_msgSend(v20, "UTF8String");
      *(_DWORD *)buf = 136315394;
      *(_QWORD *)v75 = v22;
      *(_WORD *)&v75[8] = 2080;
      *(_QWORD *)&v75[10] = "runCommandForCurrentConfig";
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "HW Model = %s from %s", buf, 0x16u);
    }
    if (v20)
    {
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DB910);
      v23 = qword_1004E2428;
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136315138;
        *(_QWORD *)v75 = "runCommandForCurrentConfig";
        _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "entered HW Model section from %s", buf, 0xCu);
      }
      v24 = (const char *)objc_msgSend(v20, "UTF8String");
      v25 = "init";
      if (a1 != 2)
        v25 = "deepsleep";
      if (a1 == 1)
        v25 = "boot";
      snprintf(__str, 0x80uLL, "/etc/bluetool/%s.%s.script", v24, v25);
      CFRelease(v20);
      if (!stat(__str, &v73))
      {
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DB930);
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
          sub_100045DB0();
        v62 = fopen(__str, "r");
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DB950);
        v63 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 136315394;
          *(_QWORD *)v75 = __str;
          *(_WORD *)&v75[8] = 2080;
          *(_QWORD *)&v75[10] = "runCommandForCurrentConfig";
          _os_log_impl((void *)&_mh_execute_header, v63, OS_LOG_TYPE_DEFAULT, "HW Model there is override script file %s and use it from %s", buf, 0x16u);
        }
        if (v62)
        {
          v64 = (char *)malloc_type_malloc(0x400uLL, 0xEBC5F1E0uLL);
          if (v64)
          {
            v65 = v64;
            while (!feof(v62))
            {
              v66 = fgets(v65, 1024, v62);
              if (v66)
              {
                v67 = v66;
                v68 = strlen(v66);
                if (v68)
                {
                  v67[v68 - 1] = 0;
                  sub_10001CDE0(v67, 0);
                }
              }
            }
            fclose(v62);
            free(v65);
          }
          else
          {
            fclose(v62);
          }
          objc_autoreleasePoolPop(v18);
          return 0;
        }
      }
    }
    objc_autoreleasePoolPop(v18);
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DB970);
    v26 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315138;
      *(_QWORD *)v75 = "runCommandForCurrentConfig";
      _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, "didn't find HWModel override script. Continue to look for platform override script from %s", buf, 0xCu);
    }
    v27 = "init";
    if (a1 != 2)
      v27 = "deepsleep";
    if (a1 == 1)
      v27 = "boot";
    snprintf(__str, 0x80uLL, "/etc/bluetool/%s.%s.script", v2, v27);
    if (!stat(__str, &v73))
    {
      v55 = fopen(__str, "r");
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DB990);
      v56 = qword_1004E2428;
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136315394;
        *(_QWORD *)v75 = __str;
        *(_WORD *)&v75[8] = 2080;
        *(_QWORD *)&v75[10] = "runCommandForCurrentConfig";
        _os_log_impl((void *)&_mh_execute_header, v56, OS_LOG_TYPE_DEFAULT, "platform there is override script file %s and use it from %s", buf, 0x16u);
      }
      if (v55)
      {
        v57 = (char *)malloc_type_malloc(0x400uLL, 0xA812F090uLL);
        if (v57)
        {
          v58 = v57;
          while (!feof(v55))
          {
            v59 = fgets(v58, 1024, v55);
            if (v59)
            {
              v60 = v59;
              v61 = strlen(v59);
              if (v61)
              {
                v60[v61 - 1] = 0;
                sub_10001CDE0(v60, 0);
              }
            }
          }
          fclose(v55);
          free(v58);
        }
        else
        {
          fclose(v55);
        }
        return 0;
      }
    }
  }
  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004DB9B0);
  v28 = qword_1004E2428;
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136315138;
    *(_QWORD *)v75 = "runCommandForCurrentConfig";
    _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, "didn't find platform override script either. Will use builtinScript in firmwareList array from %s", buf, 0xCu);
  }
  v29 = sub_10001600C(v2, v3, v7);
  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004DB9D0);
  v30 = qword_1004E2428;
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 67109378;
    *(_DWORD *)v75 = v29;
    *(_WORD *)&v75[4] = 2080;
    *(_QWORD *)&v75[6] = "runCommandForCurrentConfig";
    _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, "getFirmwarePosForPlatform fwPos = %d from %s", buf, 0x12u);
    v31 = qword_1004E2420;
    if (v29 != -1)
      goto LABEL_77;
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DB9F0);
  }
  else if (v29 != -1)
  {
    goto LABEL_79;
  }
  v32 = qword_1004E2428;
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136315138;
    *(_QWORD *)v75 = "runCommandForCurrentConfig";
    _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, "entered fwPos == NO_FW_FOUND from %s", buf, 0xCu);
  }
  v71 = v6;
  v33 = 0;
  do
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DBA10);
    v34 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 67109120;
      *(_DWORD *)v75 = v33;
      _os_log_error_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_ERROR, "No WiFi - Iteration %d", buf, 8u);
    }
    usleep(0x7A120u);
    v35 = sub_100040068();
    v36 = sub_100015EB8();
    v37 = sub_10001600C(v2, v3, v36);
    v29 = v37;
    if (v33 > 8)
      break;
    if (v35 != -1)
      break;
    ++v33;
  }
  while (v37 == -1);
  v31 = qword_1004E2420;
  if (v37 != -1)
  {
    v6 = v71;
LABEL_77:
    if (v31 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DBA50);
LABEL_79:
    v38 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 67109378;
      *(_DWORD *)v75 = v29;
      *(_WORD *)&v75[4] = 2080;
      *(_QWORD *)&v75[6] = "runCommandForCurrentConfig";
      _os_log_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_DEFAULT, "final fwPos = %d from %s", buf, 0x12u);
    }
    switch(v72)
    {
      case 3:
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DBB70);
        v45 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v45, OS_LOG_TYPE_DEFAULT, "******************************", buf, 2u);
          if (qword_1004E2420 != -1)
            dispatch_once(&qword_1004E2420, &stru_1004DBB90);
        }
        v46 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 67109378;
          *(_DWORD *)v75 = v29;
          *(_WORD *)&v75[4] = 2080;
          *(_QWORD *)&v75[6] = "runCommandForCurrentConfig";
          _os_log_impl((void *)&_mh_execute_header, v46, OS_LOG_TYPE_DEFAULT, "running deepsleep builtin script in firmwareList array at fwPos %d from %s", buf, 0x12u);
          if (qword_1004E2420 != -1)
            dispatch_once(&qword_1004E2420, &stru_1004DBBB0);
        }
        v47 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_DEFAULT, "******************************", buf, 2u);
          if (qword_1004E2420 != -1)
            dispatch_once(&qword_1004E2420, &stru_1004DBBD0);
        }
        v48 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          v49 = *(_QWORD *)(v6 + 96 * v29 + 80);
          *(_DWORD *)buf = 134218242;
          *(_QWORD *)v75 = v49;
          *(_WORD *)&v75[8] = 2080;
          *(_QWORD *)&v75[10] = "runCommandForCurrentConfig";
          _os_log_impl((void *)&_mh_execute_header, v48, OS_LOG_TYPE_DEFAULT, "firmwareList at fwPos has deepsleep function pointer at %p from %s", buf, 0x16u);
        }
        v70 = *(uint64_t (**)(void))(v6 + 96 * v29 + 80);
        if (v70)
          return v70();
        break;
      case 2:
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DBAF0);
        v50 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v50, OS_LOG_TYPE_DEFAULT, "******************************", buf, 2u);
          if (qword_1004E2420 != -1)
            dispatch_once(&qword_1004E2420, &stru_1004DBB10);
        }
        v51 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 67109378;
          *(_DWORD *)v75 = v29;
          *(_WORD *)&v75[4] = 2080;
          *(_QWORD *)&v75[6] = "runCommandForCurrentConfig";
          _os_log_impl((void *)&_mh_execute_header, v51, OS_LOG_TYPE_DEFAULT, "running init builtin script in firmwareList array at fwPos %d from %s", buf, 0x12u);
          if (qword_1004E2420 != -1)
            dispatch_once(&qword_1004E2420, &stru_1004DBB30);
        }
        v52 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v52, OS_LOG_TYPE_DEFAULT, "******************************", buf, 2u);
          if (qword_1004E2420 != -1)
            dispatch_once(&qword_1004E2420, &stru_1004DBB50);
        }
        v53 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          v54 = *(_QWORD *)(v6 + 96 * v29 + 72);
          *(_DWORD *)buf = 134218242;
          *(_QWORD *)v75 = v54;
          *(_WORD *)&v75[8] = 2080;
          *(_QWORD *)&v75[10] = "runCommandForCurrentConfig";
          _os_log_impl((void *)&_mh_execute_header, v53, OS_LOG_TYPE_DEFAULT, "firmwareList at fwPos has init function pointer %p from %s", buf, 0x16u);
        }
        v70 = *(uint64_t (**)(void))(v6 + 96 * v29 + 72);
        if (v70)
          return v70();
        break;
      case 1:
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DBA70);
        v39 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEFAULT, "******************************", buf, 2u);
          if (qword_1004E2420 != -1)
            dispatch_once(&qword_1004E2420, &stru_1004DBA90);
        }
        v40 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 67109378;
          *(_DWORD *)v75 = v29;
          *(_WORD *)&v75[4] = 2080;
          *(_QWORD *)&v75[6] = "runCommandForCurrentConfig";
          _os_log_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_DEFAULT, "running boot builtin script in firmwareList array at fwPos %d from %s", buf, 0x12u);
          if (qword_1004E2420 != -1)
            dispatch_once(&qword_1004E2420, &stru_1004DBAB0);
        }
        v41 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEFAULT, "******************************", buf, 2u);
          if (qword_1004E2420 != -1)
            dispatch_once(&qword_1004E2420, &stru_1004DBAD0);
        }
        v42 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          v43 = *(_QWORD *)(v6 + 96 * v29 + 64);
          v44 = v29;
          *(_DWORD *)buf = 67109634;
          *(_DWORD *)v75 = v29;
          *(_WORD *)&v75[4] = 2048;
          *(_QWORD *)&v75[6] = v43;
          *(_WORD *)&v75[14] = 2080;
          *(_QWORD *)&v75[16] = "runCommandForCurrentConfig";
          _os_log_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_DEFAULT, "firmwareList at fwPos %d has boot function pointer %p from %s", buf, 0x1Cu);
        }
        else
        {
          v44 = v29;
        }
        v70 = *(uint64_t (**)(void))(v6 + 96 * v44 + 64);
        if (!v70)
          return 5;
        return v70();
      default:
        return 15;
    }
    return 5;
  }
  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004DBA30);
  v69 = qword_1004E2428;
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 136315650;
    *(_QWORD *)v75 = v2;
    *(_WORD *)&v75[8] = 2080;
    *(_QWORD *)&v75[10] = v3;
    *(_WORD *)&v75[18] = 2080;
    *(_QWORD *)&v75[20] = v36;
    _os_log_error_impl((void *)&_mh_execute_header, v69, OS_LOG_TYPE_ERROR, "Error - no firmware for this platform.  Looking for %s %s %s", buf, 0x20u);
  }
  if (v35 == -1)
    return 13;
  else
    return 10;
}

void sub_1000183A8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000183D8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100018408(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100018438(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100018468(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100018498(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000184C8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000184F8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100018528(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100018558(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100018588(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000185B8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000185E8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100018618(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100018648(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100018678(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000186A8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000186D8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100018708(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100018738(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100018768(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100018798(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000187C8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000187F8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100018828(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100018858(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100018888(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000188B8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000188E8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100018918(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void *sub_100018948()
{
  return &unk_1004E12E4;
}

uint64_t sub_100018954(uint64_t a1)
{
  return __strlcpy_chk(&unk_1004E12E4, a1, 1024, 1024);
}

uint64_t sub_10001896C(uint64_t a1, uint64_t a2, int a3)
{
  id v6;
  id v7;

  if (!qword_1004E16E8)
    qword_1004E16E8 = (uint64_t)objc_alloc_init((Class)NSMutableDictionary);
  v6 = objc_msgSend(objc_alloc((Class)NSString), "initWithUTF8String:", a1);
  if (!objc_msgSend((id)qword_1004E16E8, "objectForKey:", v6))
  {
    v7 = objc_msgSend(objc_alloc((Class)NSData), "initWithBytes:length:", a2, a3);
    objc_msgSend((id)qword_1004E16E8, "setObject:forKey:", v7, v6);
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DBBF0);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEBUG))
      sub_100045E10();

  }
  return 0;
}

void sub_100018A74(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_100018AA4(uint64_t a1, void *a2)
{
  NSString *v3;
  id v4;

  v3 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", a1);
  v4 = objc_msgSend((id)qword_1004E16E8, "objectForKey:", v3);
  if (v4)
  {
    memcpy(a2, objc_msgSend(v4, "bytes"), (size_t)objc_msgSend(v4, "length"));
    return 0;
  }
  else
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DBC10);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100045E70();
    return 22;
  }
}

void sub_100018B78(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_100018BA8(int a1, void *a2)
{
  char *v4;
  const char *v5;
  const char *v6;
  char *v7;
  int v8;
  int v9;
  uint64_t *v10;
  uint64_t v11;
  const char *v12;
  NSObject *v13;
  uint32_t v14;
  int v15;
  int v16;
  NSObject *v17;
  uint64_t result;
  NSObject *v19;
  uint64_t v20;
  NSObject *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  stat v45;
  uint8_t buf[4];
  char *v47;
  __int16 v48;
  char *v49;

  v4 = sub_100040610();
  v5 = (const char *)sub_100040D4C();
  sub_100040068();
  v6 = sub_100015EB8();
  v7 = sub_100040A38();
  v8 = sub_10001600C(v4, v5, v6);
  if (v8 == -1)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DBC30);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100045ED0();
    return 22;
  }
  v9 = v8;
  if (byte_1004E0EB8)
    v10 = &qword_1004E0EC0;
  else
    v10 = &qword_1004E0EC8;
  if (!*(_QWORD *)(*v10 + 96 * v8 + 32))
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DBF10);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100045EFC();
    return 22;
  }
  bzero(byte_1004E16F0, 0x400uLL);
  __strlcat_chk(byte_1004E16F0, "/usr/share/firmware/bluetooth/", 1024, 1024);
  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004DBF30);
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEBUG))
    sub_100046208();
  if (sub_1000196F4(v9, v7) == -1)
  {
    if (v7)
    {
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DBF50);
      v19 = qword_1004E2428;
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 136315138;
        v47 = v7;
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_INFO, "SKU=%s specific PTB file not found. Attempting to load default (non-SKU) PTB file", buf, 0xCu);
      }
      if (sub_1000196F4(v9, "R") == -1)
      {
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DBF70);
        v37 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
          sub_100046198(v37, v38, v39, v40, v41, v42, v43, v44);
        return 22;
      }
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DBF90);
      v20 = qword_1004E2428;
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 136315138;
        v47 = byte_1004E16F0;
        v12 = "Loaded default non-SKU PTB file: %s";
        v13 = v20;
        v14 = 12;
        goto LABEL_15;
      }
    }
    else
    {
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DBFB0);
      v21 = qword_1004E2428;
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
        sub_100046128(v21, v22, v23, v24, v25, v26, v27, v28);
      if (sub_1000196F4(v9, "R") == -1)
        return 22;
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DBFD0);
      v29 = qword_1004E2428;
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
        sub_1000460B8(v29, v30, v31, v32, v33, v34, v35, v36);
    }
  }
  else
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DBFF0);
    v11 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 136315394;
      v47 = v7;
      v48 = 2080;
      v49 = byte_1004E16F0;
      v12 = "Loaded SKU=%s PTB file: %s";
      v13 = v11;
      v14 = 22;
LABEL_15:
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, v12, buf, v14);
    }
  }
  if (strlen(byte_1004E16F0) <= 0x1E)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DC010);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100045F28();
    return 22;
  }
  v15 = open(byte_1004E16F0, 0);
  if (v15 < 0)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DBC50);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100045F54();
    return 22;
  }
  v16 = v15;
  memset(&v45, 0, sizeof(v45));
  if (fstat(v15, &v45) == -1)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DBC70);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
    {
      sub_100045F80();
      if (!v16)
        return 22;
      goto LABEL_78;
    }
    goto LABEL_77;
  }
  if (LODWORD(v45.st_size) != a1)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DBCD0);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
    {
      sub_10004608C();
      if (!v16)
        return 22;
      goto LABEL_78;
    }
    goto LABEL_77;
  }
  if (read(v16, a2, SLODWORD(v45.st_size)) != a1)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DBC90);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
    {
      sub_10004602C();
      if (!v16)
        return 22;
      goto LABEL_78;
    }
LABEL_77:
    if (!v16)
      return 22;
LABEL_78:
    close(v16);
    return 22;
  }
  close(v16);
  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004DBCB0);
  v17 = qword_1004E2428;
  result = os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEBUG);
  if ((_DWORD)result)
  {
    sub_100045FAC((uint64_t)a2, a1, v17);
    return 0;
  }
  return result;
}

void sub_100019244(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100019274(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000192A4(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000192D4(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100019304(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100019334(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100019364(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100019394(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000193C4(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000193F4(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100019424(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100019454(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100019484(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000194B4(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000194E4(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100019514(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100019544(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100019574(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000195A4(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000195D4(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100019604(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100019634(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100019664(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100019694(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000196C4(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_1000196F4(int a1, const char *a2)
{
  uint64_t *v2;
  const char *v3;
  NSString *v4;
  NSArray *v5;
  id v6;
  NSObject *v7;
  uint64_t result;
  const char *v9;
  id v10;
  NSObject *v11;
  const char *v12;
  uint64_t v13;
  uint8_t buf[4];
  const char *v15;
  __int16 v16;
  void *v17;

  if (byte_1004E0EB8)
    v2 = &qword_1004E0EC0;
  else
    v2 = &qword_1004E0EC8;
  v3 = "R";
  if (a2)
    v3 = a2;
  v4 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%sK_%s_*.ptb"), *(_QWORD *)(*v2 + 96 * a1 + 32), v3);
  v13 = 0;
  v5 = -[NSArray filteredArrayUsingPredicate:](-[NSFileManager contentsOfDirectoryAtPath:error:](+[NSFileManager defaultManager](NSFileManager, "defaultManager"), "contentsOfDirectoryAtPath:error:", CFSTR("/usr/share/firmware/bluetooth/"), &v13), "filteredArrayUsingPredicate:", +[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("SELF like %@"), v4));
  if (-[NSArray count](v5, "count"))
  {
    v6 = -[NSArray objectAtIndex:](v5, "objectAtIndex:", 0);
    __strlcat_chk(&unk_1004E16F0, objc_msgSend(v6, "UTF8String"), 1024, 1024);
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DC030);
    v7 = qword_1004E2428;
    result = os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO);
    if ((_DWORD)result)
    {
      v9 = -[NSString UTF8String](v4, "UTF8String");
      v10 = objc_msgSend(v6, "UTF8String");
      *(_DWORD *)buf = 136315394;
      v15 = v9;
      v16 = 2080;
      v17 = v10;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "PTB file matching %s is %s", buf, 0x16u);
      return 0;
    }
  }
  else
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DC050);
    v11 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO))
    {
      v12 = -[NSString UTF8String](v4, "UTF8String");
      *(_DWORD *)buf = 136315394;
      v15 = v12;
      v16 = 2080;
      v17 = &unk_1004E16F0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "No PTB file matching %s in %s", buf, 0x16u);
    }
    return 0xFFFFFFFFLL;
  }
  return result;
}

void sub_100019968(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100019998(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000199C8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000199F8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100019A28(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100019A58(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100019A88(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100019AB8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100019AE8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100019B18(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0xEu);
}

uint64_t sub_100019B44()
{
  time_t v0;
  uint64_t v1;
  int v2;
  unint64_t v4;
  _OWORD v5[16];
  __int16 v6;

  v6 = 0;
  memset(v5, 0, sizeof(v5));
  v4 = 0;
  v0 = time(0);
  time(0);
  do
  {
    off_1004E23F0(qword_1004E23C0, v5, 258, &v4);
    fwrite("Receive Test Statistics: ", 0x19uLL, 1uLL, __stderrp);
    if (v4)
    {
      v1 = 0;
      v2 = 0;
      do
      {
        fprintf(__stderrp, "%02X ", *((unsigned __int8 *)v5 + v1));
        v1 = ++v2;
      }
      while (v4 > v2);
    }
    fputc(10, __stderrp);
  }
  while (time(0) - v0 < qword_1004E0A28 && !byte_1004E1EF0);
  return 0;
}

uint64_t sub_100019CB0(void *a1, _BYTE *a2, int a3)
{
  size_t v8;
  char v9;
  uint64_t result;
  uint64_t v11;
  _OWORD v12[16];
  __int16 v13;

  if (dword_1004E23C8)
  {
    v13 = 0;
    memset(v12, 0, sizeof(v12));
    v11 = 0;
    off_1004E23E8(qword_1004E23C0, &unk_100049236, 3);
    do
      off_1004E23F0(qword_1004E23C0, v12, 258, &v11);
    while (LOBYTE(v12[0]) != 14 && BYTE3(v12[0]) != 12 && BYTE4(v12[0]) != 20);
    if (a3)
      printf("Local Name: %s\n", (const char *)v12 + 6);
    if (a1)
    {
      v8 = strlen((const char *)v12 + 6);
      memcpy(a1, (char *)v12 + 6, v8);
    }
    if (a2)
    {
      v9 = strlen((const char *)v12 + 6);
      result = 0;
      *a2 = v9;
    }
    else
    {
      return 0;
    }
  }
  else
  {
    fwrite("Device not open yet, use 'device' to open it.\n", 0x2EuLL, 1uLL, __stderrp);
    return 3;
  }
  return result;
}

uint64_t sub_100019E20(_WORD *a1, _BYTE *a2, _WORD *a3, _BYTE *a4, _WORD *a5, int a6)
{
  const char *v14;
  uint64_t result;
  const char *v16;
  uint64_t v17;
  _OWORD v18[16];
  __int16 v19;

  if (!dword_1004E23C8)
  {
    fwrite("Device not open yet, use 'device' to open it.\n", 0x2EuLL, 1uLL, __stderrp);
    return 3;
  }
  v19 = 0;
  memset(v18, 0, sizeof(v18));
  v17 = 0;
  off_1004E23E8(qword_1004E23C0, &unk_100049233, 3);
  do
    off_1004E23F0(qword_1004E23C0, v18, 258, &v17);
  while (LOBYTE(v18[0]) != 14 && BYTE3(v18[0]) != 16 && BYTE4(v18[0]) != 1);
  if (a6)
  {
    if (WORD5(v18[0]) > 0xEu)
    {
      if (WORD5(v18[0]) == 76)
      {
        v14 = "Apple";
        goto LABEL_23;
      }
      if (WORD5(v18[0]) == 15)
      {
        v14 = "Broadcom";
        goto LABEL_23;
      }
    }
    else
    {
      if (WORD5(v18[0]) == 10)
      {
        v14 = "CSR";
        goto LABEL_23;
      }
      if (WORD5(v18[0]) == 13)
      {
        v14 = "Texas Instruments";
LABEL_23:
        printf("Radio Manufacturer:            %s\n", v14);
        if (BYTE6(v18[0]) <= 8uLL)
          v16 = off_1004E09E0[BYTE6(v18[0])];
        else
          v16 = "NULL";
        printf("Bluetooth HCI Specification:   %s\n", v16);
        printf("Bluetooth HCI Revision:        0x%02X%02X\n", BYTE7(v18[0]), BYTE8(v18[0]));
        printf("Bluetooth LMP Version:         0x%02X\n", BYTE9(v18[0]));
        printf("Bluetooth LMP Subversion:      0x%02X%02X\n", BYTE13(v18[0]), BYTE12(v18[0]));
        goto LABEL_27;
      }
    }
    v14 = "<Unknown>";
    goto LABEL_23;
  }
LABEL_27:
  if (a1)
    *a1 = WORD5(v18[0]);
  if (a2)
    *a2 = BYTE6(v18[0]);
  if (a3)
    *a3 = *(_WORD *)((char *)v18 + 7);
  if (a4)
    *a4 = BYTE9(v18[0]);
  result = 0;
  if (a5)
    *a5 = WORD6(v18[0]);
  return result;
}

BOOL sub_10001A080(int a1, const char **a2, char **a3)
{
  const char *v6;
  NSObject *v7;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  NSObject *v19;
  int v20;
  _BOOL8 result;
  NSObject *v22;
  const char *v23;
  char *v24;
  char *v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  NSObject *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  unsigned __int8 v40;
  int v41;
  unint64_t v42;
  uint64_t v43;
  int v44;
  const char *v45;
  unsigned __int16 v46;
  unsigned __int8 v47;
  int v48;
  unint64_t v49;
  unint64_t i;
  uint64_t v51;
  int v52;
  NSObject *v53;
  uint8_t v54[8];
  unint64_t v55;
  _BYTE buf[12];
  _OWORD v57[16];
  __int16 v58;

  v58 = 0;
  memset(v57, 0, sizeof(v57));
  v55 = 0;
  if (a1 >= 2 && !strcmp(a2[1], "-h"))
  {
    fwrite("usage: hci <command>\n", 0x15uLL, 1uLL, __stderrp);
    fwrite("where <command> is one of:\n", 0x1BuLL, 1uLL, __stderrp);
    fprintf(__stderrp, "  %-16s : %s\n", "info", "Sends read local version to device");
    fprintf(__stderrp, "  %-16s : %s\n", "reset", "Sends reset command to device");
    fprintf(__stderrp, "  %-16s : %s\n", "dut", "Places device into dut test mode");
    fprintf(__stderrp, "  %-16s : %s\n", "sef", "Set event filter (Type, Condition, AutoAccept)");
    fprintf(__stderrp, "  %-16s : %s\n", "wse", "Write scan enable (Scan)");
    fprintf(__stderrp, "  %-16s : %s\n", "cmd", "Send HCI command (Command, Param1, Param2, Param3, ..., ParamN)");
    fprintf(__stderrp, "  %-16s : %s\n", "localName", "Sends the read local name command to device");
    fprintf(__stderrp, "  %-16s : %s\n", "rxTest", "Configure test time, run test or abort the test");
    return 0;
  }
  if (!dword_1004E23C8)
  {
    fwrite("Device not open yet, use 'device' to open it.\n", 0x2EuLL, 1uLL, __stderrp);
    return 0;
  }
  v6 = a2[1];
  if (!strcmp(v6, "reset"))
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DC090);
    v7 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315138;
      *(_QWORD *)&buf[4] = "bluetool_command_hci";
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "ready to send HCI_Reset command from %s", buf, 0xCu);
    }
    off_1004E23E8(qword_1004E23C0, &unk_100049230, 3);
    do
    {
      do
        off_1004E23F0(qword_1004E23C0, v57, 258, &v55);
      while (LOBYTE(v57[0]) != 14);
    }
    while (BYTE3(v57[0]) != 3 || BYTE4(v57[0]) != 12);
    if (BYTE5(v57[0]))
    {
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DC110);
      v9 = qword_1004E2428;
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
        sub_10004629C(v9, v10, v11, v12, v13, v14, v15, v16);
      if (v55)
      {
        v17 = 0;
        v18 = qword_1004E2420;
        do
        {
          if (v18 != -1)
            dispatch_once(&qword_1004E2420, &stru_1004DC150);
          v19 = qword_1004E2428;
          if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
          {
            v20 = *((unsigned __int8 *)v57 + v17);
            *(_DWORD *)buf = 67109120;
            *(_DWORD *)&buf[4] = v20;
            _os_log_error_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_ERROR, " %02X", buf, 8u);
            v18 = qword_1004E2420;
          }
          else
          {
            v18 = -1;
          }
          ++v17;
        }
        while (v17 < v55);
      }
      goto LABEL_55;
    }
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DC0D0);
    v22 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315138;
      *(_QWORD *)&buf[4] = "bluetool_command_hci";
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "HCI_Reset completed from %s", buf, 0xCu);
    }
    v23 = "Issued HCI Reset";
LABEL_54:
    puts(v23);
    goto LABEL_55;
  }
  if (!strcmp(v6, "localName"))
  {
    sub_100019CB0(0, 0, 1);
    goto LABEL_55;
  }
  if (!strcmp(v6, "info"))
  {
    sub_100019E20(0, 0, 0, 0, 0, 1);
    off_1004E23E8(qword_1004E23C0, &unk_100049239, 3);
    do
      off_1004E23F0(qword_1004E23C0, v57, 258, &v55);
    while (LOBYTE(v57[0]) != 14);
    printf("Bluetooth Address:             %02x:%02x:%02x:%02x:%02x:%02x\n", BYTE11(v57[0]), BYTE10(v57[0]), BYTE9(v57[0]), BYTE8(v57[0]), BYTE7(v57[0]), BYTE6(v57[0]));
    goto LABEL_55;
  }
  if (!strcmp(v6, "dut"))
  {
    off_1004E23E8(qword_1004E23C0, &unk_10004923C, 3);
    do
      off_1004E23F0(qword_1004E23C0, v57, 258, &v55);
    while (LOBYTE(v57[0]) != 14);
    v23 = "DUT Mode Enabled!";
    goto LABEL_54;
  }
  if (!strcmp(v6, "sef"))
  {
    *(_QWORD *)buf = 0;
    if (a1 < 5)
      return 0;
    LOBYTE(v57[0]) = strtol(a2[2], (char **)buf, 0);
    BYTE1(v57[0]) = strtol(a2[3], (char **)buf, 0);
    BYTE2(v57[0]) = strtol(a2[4], (char **)buf, 0);
    sub_10001AD7C(3077, (uint64_t)v57, 3uLL, (uint64_t)v57, &v55, 14);
    fwrite("Set Event Filter Response: ", 0x1BuLL, 1uLL, __stderrp);
    if (v55)
    {
      v38 = 0;
      v39 = 0;
      do
      {
        fprintf(__stderrp, "%02X ", *((unsigned __int8 *)v57 + v38));
        v38 = ++v39;
      }
      while (v55 > v39);
    }
    goto LABEL_101;
  }
  if (!strcmp(v6, "rfc"))
  {
    *(_QWORD *)buf = 0;
    if (a1 >= 3)
    {
      v40 = strtol(a2[2], (char **)buf, 0);
      LOBYTE(v57[0]) = v40;
      if (v40 != 49)
      {
        v41 = v40;
        v42 = 1;
LABEL_88:
        if (v41 == 80)
        {
          if (a1 < 6)
            return 1;
          BYTE1(v57[0]) = strtol(a2[3], (char **)buf, 0);
          BYTE2(v57[0]) = strtol(a2[4], (char **)buf, 0);
          BYTE3(v57[0]) = strtol(a2[5], (char **)buf, 0);
          v42 = 4;
        }
        sub_10001AD7C(64795, (uint64_t)v57, v42, (uint64_t)v57, &v55, 14);
        fwrite("Factory Calibration Read Table Response: ", 0x29uLL, 1uLL, __stderrp);
        if (v55)
        {
          for (i = 0; i < v55; ++i)
            fprintf(__stderrp, "%02X ", *((unsigned __int8 *)v57 + i));
        }
LABEL_101:
        fputc(10, __stderrp);
        goto LABEL_55;
      }
      if (a1 >= 7)
      {
        BYTE1(v57[0]) = strtol(a2[3], (char **)buf, 0);
        BYTE2(v57[0]) = strtol(a2[4], (char **)buf, 0);
        BYTE3(v57[0]) = strtol(a2[5], (char **)buf, 0);
        BYTE4(v57[0]) = strtol(a2[6], (char **)buf, 0);
        v41 = LOBYTE(v57[0]);
        v42 = 5;
        goto LABEL_88;
      }
    }
    return 1;
  }
  if (!strcmp(v6, "wse"))
  {
    *(_QWORD *)buf = 0;
    if (a1 < 3)
      return 0;
    LOBYTE(v57[0]) = strtol(a2[2], (char **)buf, 0);
    sub_10001AD7C(3098, (uint64_t)v57, 1uLL, (uint64_t)v57, &v55, 14);
    fwrite("Write Scan Enable Response: ", 0x1CuLL, 1uLL, __stderrp);
    if (v55)
    {
      v43 = 0;
      v44 = 0;
      do
      {
        fprintf(__stderrp, "%02X ", *((unsigned __int8 *)v57 + v43));
        v43 = ++v44;
      }
      while (v55 > v44);
    }
    goto LABEL_101;
  }
  if (!strcmp(v6, "rxTest"))
  {
    *(_QWORD *)buf = 0;
    if (a1 < 3)
      return 0;
    v45 = a2[2];
    if (!strcmp(v45, "-t"))
    {
      qword_1004E0A28 = strtol(a2[3], (char **)buf, 0);
      v23 = "Set test time";
    }
    else
    {
      if (strcmp(v45, "-a"))
        goto LABEL_55;
      byte_1004E1EF0 = 1;
      v23 = "Abort Receiving Rx test events";
    }
    goto LABEL_54;
  }
  if (!strcmp(v6, "cmd"))
  {
    *(_QWORD *)buf = 0;
    if (a1 < 3)
      return 0;
    v46 = strtol(a2[2], (char **)buf, 0);
    if (v46)
    {
      if (a1 < 4)
      {
        v49 = 0;
      }
      else
      {
        v47 = 0;
        v48 = 3;
        do
          *((_BYTE *)v57 + v47++) = strtol(a2[v48++], (char **)buf, 0);
        while (a1 > v48);
        v49 = v47;
      }
      sub_10001AD7C(v46, (uint64_t)v57, v49, (uint64_t)v57 + 2, &v55, 14);
      LOBYTE(v57[0]) = 14;
      BYTE1(v57[0]) = v55;
      v55 += 2;
      fwrite("HCI Command Response: ", 0x16uLL, 1uLL, __stderrp);
      if (v55)
      {
        v51 = 0;
        v52 = 0;
        do
        {
          fprintf(__stderrp, "%02X ", *((unsigned __int8 *)v57 + v51));
          v51 = ++v52;
        }
        while (v55 > v52);
      }
      fputc(10, __stderrp);
      if (v46 == 64594 && pthread_create(&qword_1004E1FB8, 0, (void *(__cdecl *)(void *))sub_100019B44, 0))
      {
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DC190);
        v53 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)v54 = 0;
          _os_log_impl((void *)&_mh_execute_header, v53, OS_LOG_TYPE_DEFAULT, "Create thread failed\n", v54, 2u);
        }
      }
    }
  }
  else
  {
    fwrite("Invalid HCI command!\n", 0x15uLL, 1uLL, __stderrp);
  }
LABEL_55:
  result = 0;
  if (!a3 || !v55)
    return result;
  v24 = (char *)malloc_type_malloc(5 * v55, 0x33E2B6B2uLL);
  *a3 = v24;
  if (v24)
  {
    v25 = v24;
    v26 = v55;
    if (v55)
    {
      v27 = 0;
      v28 = v24;
      do
      {
        snprintf(v28, 5 * v26, "0x%02x", *((unsigned __int8 *)v57 + v27));
        v28[4] = 32;
        ++v27;
        v26 = v55;
        v28 += 5;
      }
      while (v27 < v55);
      v29 = 5 * v55 - 1;
    }
    else
    {
      v29 = -1;
    }
    result = 0;
    v25[v29] = 0;
    return result;
  }
  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004DC1D0);
  v30 = qword_1004E2428;
  result = os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR);
  if (result)
  {
    sub_100046268(v30, v31, v32, v33, v34, v35, v36, v37);
    return 0;
  }
  return result;
}

void sub_10001ACBC(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001ACEC(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001AD1C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001AD4C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10001AD7C(__int16 a1, uint64_t a2, unint64_t a3, uint64_t a4, _QWORD *a5, int a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v12;
  __int16 v13;
  char __n_1;
  _BYTE __n_2[255];

  memset(__n_2, 0, sizeof(__n_2));
  if (a3 < 0x100)
  {
    v6 = a4;
    v12 = 0;
    v13 = a1;
    __n_1 = a3;
    __memcpy_chk(__n_2);
    off_1004E23E8(qword_1004E23C0, &v13, a3 + 3);
    if (v6)
    {
      do
        off_1004E23F0(qword_1004E23C0, &v13, 258, &v12);
      while (v13 != a6);
      v10 = HIBYTE(v13);
      memcpy((void *)v6, &__n_1, HIBYTE(v13));
      v6 = 0;
      *a5 = v10;
    }
  }
  else
  {
    v6 = 1;
    fwrite("Invalid packet size specified. Ignoring command.", 0x30uLL, 1uLL, __stderrp);
  }
  return v6;
}

void sub_10001AEF0(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001AF20(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10001AF50(uint64_t a1, unint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_10001AD7C(64512, a1, a2, a3, a4, 255);
}

uint64_t sub_10001AF6C()
{
  uint64_t result;

  result = sub_10001FB24();
  if (!(_DWORD)result)
  {
    strcpy((char *)&xmmword_1004E1FC0, "AppleBT HCI device");
    dword_1004E2418 = 0;
    off_1004E23D0 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_10001B024;
    off_1004E23D8 = sub_10001B02C;
    off_1004E23E0 = (uint64_t (*)(_QWORD))sub_10001B108;
    off_1004E23E8 = sub_10001B110;
    off_1004E23F0 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_10001B1D4;
    off_1004E2400 = (uint64_t (*)(_QWORD))sub_10001B410;
    off_1004E23F8 = (uint64_t (*)(_QWORD, _QWORD))sub_10001B430;
    qword_1004E23C0 = 0;
    dword_1004E23C8 = 1;
    off_1004E2408 = (uint64_t (*)(_QWORD))nullsub_5;
    off_1004E2410 = (uint64_t (*)(_QWORD))nullsub_6;
  }
  return result;
}

uint64_t sub_10001B024()
{
  return 0xFFFFFFFFLL;
}

uint64_t sub_10001B02C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  __int16 v4;
  char v5;
  _QWORD inputStruct[2];
  __int16 v8;
  char v9;
  char v10;
  _BYTE v11[1030];

  v3 = 1;
  if (a3 <= 0x406)
  {
    v4 = a3;
    bzero(v11, 0x406uLL);
    v8 = v4;
    v5 = byte_1004E1EF1++;
    v9 = v5;
    v10 = 0;
    __memcpy_chk(v11);
    inputStruct[0] = 0x10700000100;
    inputStruct[1] = &v8;
    if (sub_1000205E8(1, (unsigned __int8 *)inputStruct))
      return 0xFFFFFFFFLL;
    else
      return 0;
  }
  return v3;
}

uint64_t sub_10001B108()
{
  return 0;
}

uint64_t sub_10001B110(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;
  uint64_t v5;
  char v6;
  _BYTE v7[259];

  result = 1;
  memset(v7, 0, sizeof(v7));
  if (a3 <= 0x103)
  {
    v6 = 1;
    v5 = __memcpy_chk(v7);
    return sub_10001B02C(v5, (uint64_t)&v6, a3 + 1);
  }
  return result;
}

uint64_t sub_10001B1D4(uint64_t a1, void *a2, unint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  int v8;
  NSObject *v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  NSObject *v18;
  NSObject *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t outputStruct;
  _QWORD inputStruct[2];
  unsigned __int16 v29;
  unsigned __int8 v30[3];
  _BYTE v31[5];

  bzero(&v29, 0x40AuLL);
  outputStruct = 0;
  inputStruct[0] = 0x10600000105;
  inputStruct[1] = &v29;
  v7 = sub_100020A68(1, inputStruct, &outputStruct);
  v8 = byte_1004E1EF2++;
  if (v30[0] != v8)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DC210);
    v9 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100046434(v30, v9);
    v10 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_1000463C4((uint64_t)v30, v10, v11, v12, v13, v14, v15, v16);
    byte_1004E1EF2 = v30[0] + 1;
  }
  if (BYTE4(outputStruct) == 1)
  {
    v17 = v29 - 1;
    *a4 = v17;
    if (v17 > a3)
    {
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DC2D0);
      v18 = qword_1004E2428;
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
        sub_1000462D0(a4, a3, v18);
      *a4 = a3;
      v17 = a3;
    }
    memcpy(a2, v31, v17);
  }
  else
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DC290);
    v19 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100046358((uint64_t)&outputStruct + 4, v19, v20, v21, v22, v23, v24, v25);
    return 0xFFFFFFFFLL;
  }
  return v7;
}

uint64_t sub_10001B410()
{
  uint64_t result;

  result = sub_10002019C();
  dword_1004E23C8 = 0;
  return result;
}

uint64_t sub_10001B430()
{
  return 0xFFFFFFFFLL;
}

void sub_10001B440(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001B470(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001B4A0(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001B4D0(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

BOOL sub_10001B500()
{
  return sub_10001B51C() == 0;
}

uint64_t sub_10001B51C()
{
  uint64_t v0;
  const __CFDictionary *v1;
  io_service_t MatchingService;
  io_object_t v3;
  NSObject *v4;
  int v6;
  const char *v7;

  if (dword_1004E1EF8)
    return 0;
  if ((byte_1004E1EFC & 1) != 0)
    return 5;
  v1 = IOServiceNameMatching("AppleBTMgmt");
  MatchingService = IOServiceGetMatchingService(kIOMainPortDefault, v1);
  if (!MatchingService)
  {
    byte_1004E1EFC = 1;
    return 5;
  }
  v3 = MatchingService;
  if (IOServiceOpen(MatchingService, mach_task_self_, 0, (io_connect_t *)&dword_1004E1EF8))
  {
    if (qword_1004E1F00 != -1)
      dispatch_once(&qword_1004E1F00, &stru_1004DC310);
    if (os_log_type_enabled((os_log_t)qword_1004E1F08, OS_LOG_TYPE_ERROR))
      sub_100046504();
    v0 = 5;
  }
  else
  {
    if (qword_1004E1F00 != -1)
      dispatch_once(&qword_1004E1F00, &stru_1004DC350);
    v4 = qword_1004E1F08;
    v0 = 0;
    if (os_log_type_enabled((os_log_t)qword_1004E1F08, OS_LOG_TYPE_DEFAULT))
    {
      v6 = 136315138;
      v7 = "AppleBTMgmt";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "applebt_mgmt_connect: Service %s connected!\n", (uint8_t *)&v6, 0xCu);
      v0 = 0;
    }
  }
  IOObjectRelease(v3);
  return v0;
}

void sub_10001B6C8(id a1)
{
  qword_1004E1F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10001B6F4(id a1)
{
  qword_1004E1F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

uint64_t sub_10001B720()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  uint8_t v6[16];
  uint8_t buf[16];

  if (qword_1004E1F00 != -1)
    dispatch_once(&qword_1004E1F00, &stru_1004DC390);
  v0 = qword_1004E1F08;
  if (os_log_type_enabled((os_log_t)qword_1004E1F08, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "applebt_power_on: Calling method kAppleBTMgmtPowerOn!\n", buf, 2u);
  }
  v1 = sub_10001B51C();
  if ((_DWORD)v1)
  {
    v2 = v1;
    if (qword_1004E1F00 != -1)
      dispatch_once(&qword_1004E1F00, &stru_1004DC3D0);
    if (os_log_type_enabled((os_log_t)qword_1004E1F08, OS_LOG_TYPE_ERROR))
      sub_1000465C4();
  }
  else
  {
    v3 = IOConnectCallMethod(dword_1004E1EF8, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    if ((_DWORD)v3)
    {
      v2 = v3;
      if (qword_1004E1F00 != -1)
        dispatch_once(&qword_1004E1F00, &stru_1004DC410);
      if (os_log_type_enabled((os_log_t)qword_1004E1F08, OS_LOG_TYPE_ERROR))
        sub_100046564();
    }
    else
    {
      if (qword_1004E1F00 != -1)
        dispatch_once(&qword_1004E1F00, &stru_1004DC450);
      v4 = qword_1004E1F08;
      v2 = 0;
      if (os_log_type_enabled((os_log_t)qword_1004E1F08, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v6 = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "applebt_power_on: BT device powered on/reset!\n", v6, 2u);
        return 0;
      }
    }
  }
  return v2;
}

void sub_10001B8E8(id a1)
{
  qword_1004E1F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10001B914(id a1)
{
  qword_1004E1F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10001B940(id a1)
{
  qword_1004E1F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10001B96C(id a1)
{
  qword_1004E1F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

uint64_t sub_10001B998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  uint8_t buf[16];

  v0 = sub_10001B51C();
  if ((_DWORD)v0)
  {
    v1 = v0;
    if (qword_1004E1F00 != -1)
      dispatch_once(&qword_1004E1F00, &stru_1004DC490);
    if (os_log_type_enabled((os_log_t)qword_1004E1F08, OS_LOG_TYPE_ERROR))
      sub_100046684();
  }
  else
  {
    v2 = IOConnectCallMethod(dword_1004E1EF8, 1u, 0, 0, 0, 0, 0, 0, 0, 0);
    if ((_DWORD)v2)
    {
      v1 = v2;
      if (qword_1004E1F00 != -1)
        dispatch_once(&qword_1004E1F00, &stru_1004DC4D0);
      if (os_log_type_enabled((os_log_t)qword_1004E1F08, OS_LOG_TYPE_ERROR))
        sub_100046624();
    }
    else
    {
      if (qword_1004E1F00 != -1)
        dispatch_once(&qword_1004E1F00, &stru_1004DC510);
      v3 = qword_1004E1F08;
      v1 = 0;
      if (os_log_type_enabled((os_log_t)qword_1004E1F08, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "applebt_power_off: BT device powered off!\n", buf, 2u);
        return 0;
      }
    }
  }
  return v1;
}

void sub_10001BB04(id a1)
{
  qword_1004E1F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10001BB30(id a1)
{
  qword_1004E1F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10001BB5C(id a1)
{
  qword_1004E1F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

uint64_t sub_10001BB88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  uint8_t buf[16];

  v0 = sub_10001B51C();
  if ((_DWORD)v0)
  {
    v1 = v0;
    if (qword_1004E1F00 != -1)
      dispatch_once(&qword_1004E1F00, &stru_1004DC550);
    if (os_log_type_enabled((os_log_t)qword_1004E1F08, OS_LOG_TYPE_ERROR))
      sub_100046744();
  }
  else
  {
    v2 = IOConnectCallMethod(dword_1004E1EF8, 8u, 0, 0, 0, 0, 0, 0, 0, 0);
    if ((_DWORD)v2)
    {
      v1 = v2;
      if (qword_1004E1F00 != -1)
        dispatch_once(&qword_1004E1F00, &stru_1004DC590);
      if (os_log_type_enabled((os_log_t)qword_1004E1F08, OS_LOG_TYPE_ERROR))
        sub_1000466E4();
    }
    else
    {
      if (qword_1004E1F00 != -1)
        dispatch_once(&qword_1004E1F00, &stru_1004DC5D0);
      v3 = qword_1004E1F08;
      v1 = 0;
      if (os_log_type_enabled((os_log_t)qword_1004E1F08, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "applebt_power_sleep: BT device powered Sleep!\n", buf, 2u);
        return 0;
      }
    }
  }
  return v1;
}

void sub_10001BCF4(id a1)
{
  qword_1004E1F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10001BD20(id a1)
{
  qword_1004E1F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10001BD4C(id a1)
{
  qword_1004E1F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

uint64_t sub_10001BD78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  uint8_t buf[16];

  v0 = sub_10001B51C();
  if ((_DWORD)v0)
  {
    v1 = v0;
    if (qword_1004E1F00 != -1)
      dispatch_once(&qword_1004E1F00, &stru_1004DC610);
    if (os_log_type_enabled((os_log_t)qword_1004E1F08, OS_LOG_TYPE_ERROR))
      sub_100046804();
  }
  else
  {
    v2 = IOConnectCallMethod(dword_1004E1EF8, 9u, 0, 0, 0, 0, 0, 0, 0, 0);
    if ((_DWORD)v2)
    {
      v1 = v2;
      if (qword_1004E1F00 != -1)
        dispatch_once(&qword_1004E1F00, &stru_1004DC650);
      if (os_log_type_enabled((os_log_t)qword_1004E1F08, OS_LOG_TYPE_ERROR))
        sub_1000467A4();
    }
    else
    {
      if (qword_1004E1F00 != -1)
        dispatch_once(&qword_1004E1F00, &stru_1004DC690);
      v3 = qword_1004E1F08;
      v1 = 0;
      if (os_log_type_enabled((os_log_t)qword_1004E1F08, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "applebt_exit_power_sleep: BT device exited power Sleep!\n", buf, 2u);
        return 0;
      }
    }
  }
  return v1;
}

void sub_10001BEE4(id a1)
{
  qword_1004E1F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10001BF10(id a1)
{
  qword_1004E1F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10001BF3C(id a1)
{
  qword_1004E1F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

uint64_t sub_10001BF68(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  unsigned __int8 inputStruct;
  uint8_t buf[4];
  int v8;

  inputStruct = a1;
  v1 = sub_10001B51C();
  if ((_DWORD)v1)
  {
    v2 = v1;
    if (qword_1004E1F00 != -1)
      dispatch_once(&qword_1004E1F00, &stru_1004DC6D0);
    if (os_log_type_enabled((os_log_t)qword_1004E1F08, OS_LOG_TYPE_ERROR))
      sub_1000468C4();
  }
  else
  {
    v3 = IOConnectCallMethod(dword_1004E1EF8, 2u, 0, 0, &inputStruct, 1uLL, 0, 0, 0, 0);
    if ((_DWORD)v3)
    {
      v2 = v3;
      if (qword_1004E1F00 != -1)
        dispatch_once(&qword_1004E1F00, &stru_1004DC710);
      if (os_log_type_enabled((os_log_t)qword_1004E1F08, OS_LOG_TYPE_ERROR))
        sub_100046864();
    }
    else
    {
      if (qword_1004E1F00 != -1)
        dispatch_once(&qword_1004E1F00, &stru_1004DC750);
      v4 = qword_1004E1F08;
      v2 = 0;
      if (os_log_type_enabled((os_log_t)qword_1004E1F08, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 67109120;
        v8 = inputStruct;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "applebt_set_trace_mode: set to %d!\n", buf, 8u);
        return 0;
      }
    }
  }
  return v2;
}

void sub_10001C114(id a1)
{
  qword_1004E1F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10001C140(id a1)
{
  qword_1004E1F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10001C16C(id a1)
{
  qword_1004E1F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

uint64_t sub_10001C198(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  unsigned __int8 inputStruct;
  uint8_t buf[4];
  int v8;

  inputStruct = a1;
  v1 = sub_10001B51C();
  if ((_DWORD)v1)
  {
    v2 = v1;
    if (qword_1004E1F00 != -1)
      dispatch_once(&qword_1004E1F00, &stru_1004DC790);
    if (os_log_type_enabled((os_log_t)qword_1004E1F08, OS_LOG_TYPE_ERROR))
      sub_100046984();
  }
  else
  {
    v3 = IOConnectCallMethod(dword_1004E1EF8, 3u, 0, 0, &inputStruct, 1uLL, 0, 0, 0, 0);
    if ((_DWORD)v3)
    {
      v2 = v3;
      if (qword_1004E1F00 != -1)
        dispatch_once(&qword_1004E1F00, &stru_1004DC7D0);
      if (os_log_type_enabled((os_log_t)qword_1004E1F08, OS_LOG_TYPE_ERROR))
        sub_100046924();
    }
    else
    {
      if (qword_1004E1F00 != -1)
        dispatch_once(&qword_1004E1F00, &stru_1004DC810);
      v4 = qword_1004E1F08;
      v2 = 0;
      if (os_log_type_enabled((os_log_t)qword_1004E1F08, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 67109120;
        v8 = inputStruct;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "applebt_set_trace_level: set to %d!\n", buf, 8u);
        return 0;
      }
    }
  }
  return v2;
}

void sub_10001C344(id a1)
{
  qword_1004E1F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10001C370(id a1)
{
  qword_1004E1F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10001C39C(id a1)
{
  qword_1004E1F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

uint64_t sub_10001C3C8(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint8_t buf[4];
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;

  v2 = sub_10001B51C();
  if ((_DWORD)v2)
  {
    v3 = v2;
    if (qword_1004E1F00 != -1)
      dispatch_once(&qword_1004E1F00, &stru_1004DC850);
    if (os_log_type_enabled((os_log_t)qword_1004E1F08, OS_LOG_TYPE_ERROR))
      sub_100046A44();
  }
  else
  {
    v4 = IOConnectCallMethod(dword_1004E1EF8, 4u, 0, 0, a1, 0x20uLL, 0, 0, 0, 0);
    if ((_DWORD)v4)
    {
      v3 = v4;
      if (qword_1004E1F00 != -1)
        dispatch_once(&qword_1004E1F00, &stru_1004DC890);
      if (os_log_type_enabled((os_log_t)qword_1004E1F08, OS_LOG_TYPE_ERROR))
        sub_1000469E4();
    }
    else
    {
      if (qword_1004E1F00 != -1)
        dispatch_once(&qword_1004E1F00, &stru_1004DC8D0);
      v5 = qword_1004E1F08;
      v3 = 0;
      if (os_log_type_enabled((os_log_t)qword_1004E1F08, OS_LOG_TYPE_DEFAULT))
      {
        v6 = *a1;
        v7 = a1[1];
        v8 = a1[2];
        v9 = a1[3];
        *(_DWORD *)buf = 134218752;
        v12 = v6;
        v13 = 2048;
        v14 = v7;
        v15 = 2048;
        v16 = v8;
        v17 = 2048;
        v18 = v9;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "applebt_set_trace_mask: set to <%016llX%016llX%016llX%016llX>!\n", buf, 0x2Au);
        return 0;
      }
    }
  }
  return v3;
}

void sub_10001C59C(id a1)
{
  qword_1004E1F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10001C5C8(id a1)
{
  qword_1004E1F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10001C5F4(id a1)
{
  qword_1004E1F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

uint64_t sub_10001C620(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  int inputStruct;
  uint8_t buf[4];
  int v8;

  inputStruct = a1;
  v1 = sub_10001B51C();
  if ((_DWORD)v1)
  {
    v2 = v1;
    if (qword_1004E1F00 != -1)
      dispatch_once(&qword_1004E1F00, &stru_1004DC910);
    if (os_log_type_enabled((os_log_t)qword_1004E1F08, OS_LOG_TYPE_ERROR))
      sub_100046B04();
  }
  else
  {
    v3 = IOConnectCallMethod(dword_1004E1EF8, 5u, 0, 0, &inputStruct, 4uLL, 0, 0, 0, 0);
    if ((_DWORD)v3)
    {
      v2 = v3;
      if (qword_1004E1F00 != -1)
        dispatch_once(&qword_1004E1F00, &stru_1004DC950);
      if (os_log_type_enabled((os_log_t)qword_1004E1F08, OS_LOG_TYPE_ERROR))
        sub_100046AA4();
    }
    else
    {
      if (qword_1004E1F00 != -1)
        dispatch_once(&qword_1004E1F00, &stru_1004DC990);
      v4 = qword_1004E1F08;
      v2 = 0;
      if (os_log_type_enabled((os_log_t)qword_1004E1F08, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 67109120;
        v8 = inputStruct;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "applebt_set_capture_timeout: set to %d!\n", buf, 8u);
        return 0;
      }
    }
  }
  return v2;
}

void sub_10001C7CC(id a1)
{
  qword_1004E1F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10001C7F8(id a1)
{
  qword_1004E1F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10001C824(id a1)
{
  qword_1004E1F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

uint64_t sub_10001C850(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int inputStruct;

  inputStruct = a1;
  v1 = sub_10001B51C();
  if ((_DWORD)v1)
  {
    v2 = v1;
    if (qword_1004E1F00 != -1)
      dispatch_once(&qword_1004E1F00, &stru_1004DC9D0);
    if (os_log_type_enabled((os_log_t)qword_1004E1F08, OS_LOG_TYPE_ERROR))
      sub_100046BC4();
  }
  else
  {
    v3 = IOConnectCallMethod(dword_1004E1EF8, 6u, 0, 0, &inputStruct, 4uLL, 0, 0, 0, 0);
    v2 = v3;
    if ((_DWORD)v3 != -536870201 && (_DWORD)v3 != 0)
    {
      if (qword_1004E1F00 != -1)
        dispatch_once(&qword_1004E1F00, &stru_1004DCA10);
      if (os_log_type_enabled((os_log_t)qword_1004E1F08, OS_LOG_TYPE_ERROR))
        sub_100046B64();
    }
  }
  return v2;
}

void sub_10001C968(id a1)
{
  qword_1004E1F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10001C994(id a1)
{
  qword_1004E1F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

uint64_t sub_10001C9C0(uint32_t a1, const void *a2, unsigned int a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  uint8_t buf[16];

  v6 = sub_10001B51C();
  if ((_DWORD)v6)
  {
    v7 = v6;
    if (qword_1004E1F00 != -1)
      dispatch_once(&qword_1004E1F00, &stru_1004DCA50);
    if (os_log_type_enabled((os_log_t)qword_1004E1F08, OS_LOG_TYPE_ERROR))
      sub_100046C84();
  }
  else
  {
    v8 = IOConnectCallMethod(dword_1004E1EF8, a1, 0, 0, a2, a3, 0, 0, 0, 0);
    if ((_DWORD)v8)
    {
      v7 = v8;
      if (qword_1004E1F00 != -1)
        dispatch_once(&qword_1004E1F00, &stru_1004DCA90);
      if (os_log_type_enabled((os_log_t)qword_1004E1F08, OS_LOG_TYPE_ERROR))
        sub_100046C24();
    }
    else
    {
      if (qword_1004E1F00 != -1)
        dispatch_once(&qword_1004E1F00, &stru_1004DCAD0);
      v9 = qword_1004E1F08;
      v7 = 0;
      if (os_log_type_enabled((os_log_t)qword_1004E1F08, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "applebt_general_debug: completed!\n", buf, 2u);
        return 0;
      }
    }
  }
  return v7;
}

void sub_10001CB40(id a1)
{
  qword_1004E1F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10001CB6C(id a1)
{
  qword_1004E1F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10001CB98(id a1)
{
  qword_1004E1F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

uint64_t sub_10001CBC4(void *a1, size_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  uint8_t buf[4];
  uint32_t outputCnt;
  uint64_t output;

  v4 = sub_10001B51C();
  if ((_DWORD)v4)
  {
    v5 = v4;
    if (qword_1004E1F00 != -1)
      dispatch_once(&qword_1004E1F00, &stru_1004DCB10);
    if (os_log_type_enabled((os_log_t)qword_1004E1F08, OS_LOG_TYPE_ERROR))
      sub_100046D44();
  }
  else
  {
    output = 0;
    outputCnt = 1;
    v6 = IOConnectCallMethod(dword_1004E1EF8, 7u, 0, 0, 0, 0, &output, &outputCnt, a1, a2);
    if ((_DWORD)v6)
    {
      v5 = v6;
      if (qword_1004E1F00 != -1)
        dispatch_once(&qword_1004E1F00, &stru_1004DCB50);
      if (os_log_type_enabled((os_log_t)qword_1004E1F08, OS_LOG_TYPE_ERROR))
        sub_100046CE4();
    }
    else
    {
      *a2 = output;
      if (qword_1004E1F00 != -1)
        dispatch_once(&qword_1004E1F00, &stru_1004DCB90);
      v7 = qword_1004E1F08;
      v5 = 0;
      if (os_log_type_enabled((os_log_t)qword_1004E1F08, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "applebt_read_crash_info: completed!\n", buf, 2u);
        return 0;
      }
    }
  }
  return v5;
}

void sub_10001CD5C(id a1)
{
  qword_1004E1F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10001CD88(id a1)
{
  qword_1004E1F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10001CDB4(id a1)
{
  qword_1004E1F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

uint64_t sub_10001CDE0(const char *a1, uint64_t a2)
{
  char *v4;
  char *v5;
  uint64_t v6;
  char *v7;
  char *i;
  int v9;
  int v10;
  int v11;
  const char *v13;
  uint64_t v14;
  uint64_t (**v16)();
  uint64_t (*v17)();
  int v18;
  NSObject *v19;
  uint8_t buf[4];
  const char *v21;
  char *__s2[257];

  v4 = strdup(a1);
  if (v4)
  {
    v5 = v4;
    bzero(__s2, 0x808uLL);
    v6 = 0;
    v7 = v5;
LABEL_3:
    while (1)
    {
      for (i = v7; ; ++i)
      {
        ++v7;
        v9 = *i;
        if (v9 != 9 && v9 != 32)
          break;
      }
      if (!*i)
        break;
      __s2[v6] = i;
      if (v6 == 256)
      {
        v14 = 1;
        fwrite("Too many arguments.\n", 0x14uLL, 1uLL, __stderrp);
        goto LABEL_42;
      }
      ++v6;
      while (1)
      {
        v11 = *v7++;
        v10 = v11;
        if (!v11)
          break;
        if (v10 == 32 || v10 == 9)
        {
          *(v7 - 1) = 0;
          goto LABEL_3;
        }
      }
      --v7;
    }
    if (!(_DWORD)v6 || (v13 = __s2[0], *__s2[0] == 35))
    {
LABEL_20:
      free(v5);
      return 0;
    }
    if (byte_1004E1F10 == 1)
      add_history(a1);
    if (strcmp("?", v13))
    {
      v16 = &off_1004DCBD8;
      while (1)
      {
        v17 = *v16;
        if (!*v16)
          break;
        v18 = strcmp((const char *)*(v16 - 2), v13);
        v16 += 3;
        if (!v18)
          goto LABEL_31;
      }
      if (!strcmp(v13, "quit") || !strcmp(v13, "exit"))
      {
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DCD50);
        v19 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 136315138;
          v21 = "invoke_command";
          _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "ready to quit from %s", buf, 0xCu);
        }
        sub_10001D100();
      }
      else
      {
        fprintf(__stderrp, "%s - unknown command.\n", v13);
      }
      goto LABEL_20;
    }
    v17 = sub_10001D968;
LABEL_31:
    optreset = 1;
    optind = 1;
    v14 = ((uint64_t (*)(uint64_t, char **, uint64_t))v17)(v6, __s2, a2);
    if ((_DWORD)v14)
      fprintf(__stderrp, "%s returned %d\n", __s2[0], v14);
    else
LABEL_42:
      free(v5);
  }
  else
  {
    fwrite("Unable to allocate memory!  Abort! Abort!\n", 0x2AuLL, 1uLL, __stderrp);
    return 2;
  }
  return v14;
}

void sub_10001D0D0(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001D100()
{
  NSObject *v0;
  int v1;
  const char *v2;

  sub_10003F7E0();
  if (dword_1004E23C8)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DCE90);
    v0 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
    {
      v1 = 136315138;
      v2 = "handleQuit";
      _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "Device is opened and ready to close it from %s", (uint8_t *)&v1, 0xCu);
    }
    off_1004E2400(qword_1004E23C0);
  }
  if ((byte_1004E1F14 & 1) == 0)
    exit(0);
}

uint64_t sub_10001D208(const char *a1)
{
  FILE *v2;
  FILE *v3;
  NSObject *v4;
  char *v5;
  char *v6;
  const char *v7;
  size_t v8;
  NSObject *v10;
  int v11;
  uint8_t buf[4];
  _BYTE v13[24];

  v2 = fopen(a1, "r");
  if (v2)
  {
    v3 = v2;
    fprintf(__stderrp, "Running %s.\n", a1);
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DCDD0);
    v4 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315394;
      *(_QWORD *)v13 = a1;
      *(_WORD *)&v13[8] = 2080;
      *(_QWORD *)&v13[10] = "runScriptFile";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "running script file %s from %s", buf, 0x16u);
    }
    v5 = (char *)malloc_type_malloc(0x800uLL, 0xD38EFA3BuLL);
    if (v5)
    {
      while (!feof(v3))
      {
        v6 = fgets(v5, 2048, v3);
        if (v6)
        {
          v7 = v6;
          v8 = strlen(v6);
          if (v8)
          {
            v7[v8 - 1] = 0;
            sub_10001CDE0(v7, 0);
          }
        }
      }
    }
    free(v5);
    fclose(v3);
    return 0;
  }
  else
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DCD90);
    v10 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
    {
      v11 = *__error();
      *(_DWORD *)buf = 67109634;
      *(_DWORD *)v13 = v11;
      *(_WORD *)&v13[4] = 2080;
      *(_QWORD *)&v13[6] = a1;
      *(_WORD *)&v13[14] = 2080;
      *(_QWORD *)&v13[16] = "runScriptFile";
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "got error %d when opening script file %s from %s", buf, 0x1Cu);
    }
    fprintf(__stderrp, "Unable to open file %s.\n", a1);
    return 3;
  }
}

void sub_10001D454(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001D484(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t start(int a1, char *const *a2)
{
  int v4;
  char *v5;
  char *i;
  char *v7;
  uint64_t result;
  NSObject *v9;
  NSObject *v10;
  char *v11;
  int v12;
  int v13;
  char *v14;
  __int16 v15;
  const char *v16;

  setvbuf(__stdoutp, 0, 2, 0);
  setvbuf(__stderrp, 0, 2, 0);
  sub_100015AFC();
  while (1)
  {
    while (1)
    {
      v4 = getopt(a1, a2, "c:hf:F:R");
      if (v4 > 98)
        break;
      switch(v4)
      {
        case 70:
          if (qword_1004E2420 != -1)
            dispatch_once(&qword_1004E2420, &stru_1004DCE50);
          v10 = qword_1004E2428;
          if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
          {
            v13 = 136315394;
            v14 = optarg;
            v15 = 2080;
            v16 = "main";
            _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "try to run from command line a builtinScript %s from %s", (uint8_t *)&v13, 0x16u);
          }
          v11 = optarg;
          if (!strncmp(optarg, "boot", 5uLL))
          {
            v12 = 1;
          }
          else if (!strncmp(v11, "init", 5uLL))
          {
            v12 = 2;
          }
          else
          {
            if (strncmp(v11, "deepsleep", 0xAuLL))
              return 1;
            v12 = 3;
          }
          sub_1000170A8(v12);
          return 0;
        case 82:
          byte_1004E1F14 = 1;
          return sub_100041AE0();
        case -1:
          bzero((char *)&xmmword_1004E1FC0 + 7, 0x459uLL);
          strcpy((char *)&xmmword_1004E1FC0, "<NONE>");
          rl_readline_name = "BlueTool";
          byte_1004E1F10 = 1;
          puts("\nWelcome to BlueTool... Rev 6.0\n");
          v5 = getenv("BT_CHIP");
          if (v5 && !strcmp(v5, "ACI BT"))
            sub_10001CDE0("aci -V", 0);
          for (i = readline("bluetool-> "); i; i = readline("bluetool-> "))
          {
            if (*i)
            {
              v7 = strdup(i);
              sub_10001CDE0(v7, 0);
              free(v7);
            }
          }
          sub_10001D100();
          exit(0);
      }
    }
    if (v4 == 99)
      break;
    if (v4 == 104)
    {
      puts("BlueTool -- A Bluetooth Config/Control Tool");
      putchar(10);
      puts("Options:");
      puts("\t-h              This message.");
      puts("\t-f <filename>   Read commands from file at startup.");
      puts("\t-F sequence\t\truns the default script for a given sequence.");
      puts("\t-c <commands>   Execute commands from string at startup.");
      putchar(10);
      return 0;
    }
    if (v4 == 102)
    {
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DCE10);
      v9 = qword_1004E2428;
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
      {
        v13 = 136315394;
        v14 = optarg;
        v15 = 2080;
        v16 = "main";
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "try to run from command line an external script %s from %s", (uint8_t *)&v13, 0x16u);
      }
      return sub_10001D208(optarg);
    }
  }
  for (result = (uint64_t)strtok(optarg, "\n"); result; result = (uint64_t)strtok(0, "\n"))
    sub_10001CDE0((const char *)result, 0);
  return result;
}

void sub_10001D908(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001D938(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10001D968()
{
  char **v0;
  char *v1;

  fwrite("BlueTool Help\n", 0xEuLL, 1uLL, __stderrp);
  v0 = off_1004DCBB0;
  do
  {
    fprintf(__stderrp, "  %-16s : %s\n", *v0, v0[1]);
    v1 = v0[5];
    v0 += 3;
  }
  while (v1);
  fwrite("Give any commands '-h' for more details.\n", 0x29uLL, 1uLL, __stderrp);
  return 0;
}

uint64_t sub_10001D9FC(int a1, uint64_t a2)
{
  int v2;
  uint64_t v3;

  if (a1 == 2)
  {
    v2 = strtoul(*(const char **)(a2 + 8), 0, 0);
    if (v2 >= 1)
      usleep(1000 * v2);
    return 0;
  }
  else
  {
    v3 = 1;
    fwrite("usage: msleep <msec>\n", 0x15uLL, 1uLL, __stderrp);
  }
  return v3;
}

uint64_t sub_10001DA70()
{
  off_1004E2410(qword_1004E23C0);
  return 0;
}

uint64_t sub_10001DA98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  const char **v14;
  const char **v15;
  uint64_t v16;

  if ((int)a1 >= 6)
  {
    v7 = 0;
    v8 = a1;
    v9 = a2 + 8;
    while (strcmp(*(const char **)(v9 + 8 * v7), "?"))
    {
      if (v8 == (_DWORD)++v7)
      {
        v7 = a1;
        goto LABEL_8;
      }
    }
    v8 = v7 + 1;
LABEL_8:
    v10 = v8 + 1;
    v11 = (a1 - (v8 + 1));
    if ((int)a1 <= v8 + 1)
    {
      v11 = 0;
    }
    else
    {
      v12 = 0;
      v13 = a2 + 8 * v10;
      while (strcmp(*(const char **)(v13 + 8 * v12), ":"))
      {
        if (!(1 - (_DWORD)a1 + v8 + (_DWORD)++v12))
        {
          v10 = v8 + v12 + 1;
          goto LABEL_15;
        }
      }
      v10 = v8 + v12 + 2;
      v11 = v12;
    }
LABEL_15:
    v14 = (const char **)(a2 + 8);
    if ((int)a1 <= v10)
    {
      if (!sub_10001DD3C(v7, v14, 0))
        return 0;
    }
    else if (!sub_10001DD3C(v7, v14, 0))
    {
      if ((_DWORD)a1 != v10)
      {
        v15 = (const char **)(a2 + 8 * (v7 + v11 + 3));
        v16 = (a1 - v10);
        return sub_10001DD3C(v16, v15, a3);
      }
      return 0;
    }
    if (!(_DWORD)v11)
      return 1;
    v15 = (const char **)(a2 + 8 * (v7 + 2));
    v16 = v11;
    return sub_10001DD3C(v16, v15, a3);
  }
  v3 = 1;
  fwrite("usage: if <test> ? a : b", 0x18uLL, 1uLL, __stderrp);
  return v3;
}

uint64_t sub_10001DC2C()
{
  return 0;
}

uint64_t sub_10001DC34()
{
  return 1;
}

uint64_t sub_10001DC3C(int a1, uint64_t a2, _QWORD *a3)
{
  int v4;
  void *v5;
  const char **v6;
  uint64_t v7;
  size_t v8;
  void *v9;
  const char *v10;
  int v11;

  if (a1 < 2)
  {
    v5 = 0;
  }
  else
  {
    v4 = 0;
    v5 = 0;
    v6 = (const char **)(a2 + 8);
    v7 = a1 - 1;
    do
    {
      fprintf(__stderrp, " %s", *v6);
      if (a3)
      {
        v8 = strlen(*v6);
        v9 = reallocf(v5, v8 + v4 + 1);
        v5 = v9;
        if (v9)
        {
          v10 = *v6;
          strcpy((char *)v9 + v4, *v6);
          v11 = v4 + strlen(v10);
          v4 = v11 + 1;
          *((_BYTE *)v5 + v11) = 32;
        }
      }
      ++v6;
      --v7;
    }
    while (v7);
  }
  fputc(10, __stderrp);
  if (a3)
    *a3 = v5;
  return 0;
}

uint64_t sub_10001DD3C(uint64_t a1, const char **a2, uint64_t a3)
{
  const char *v6;
  uint64_t (**i)();
  uint64_t (*v9)();
  uint64_t (*v11)();

  v6 = *a2;
  if (!strcmp("?", *a2))
  {
    v9 = sub_10001D968;
    return ((uint64_t (*)(uint64_t, const char **, uint64_t))v9)(a1, a2, a3);
  }
  else
  {
    for (i = &off_1004DCBD8; *i; i += 3)
    {
      v11 = *i;
      if (!strcmp((const char *)*(i - 2), v6))
      {
        v9 = v11;
        return ((uint64_t (*)(uint64_t, const char **, uint64_t))v9)(a1, a2, a3);
      }
    }
    return 1;
  }
}

void sub_10001DDF0(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10001DE20(int a1, const char **a2)
{
  NSObject *v4;
  char v5;
  char v6;
  int v7;
  NSObject *v8;
  NSObject *v9;
  NSObject *v10;
  NSObject *v11;
  int v12;
  BOOL v13;
  NSObject *v14;
  NSObject *v15;
  NSObject *v16;
  FILE *v17;
  const char *v18;
  size_t v19;
  NSObject *v20;
  unint64_t v21;
  char *v22;
  int v23;
  unsigned int v24;
  char *v25;
  BOOL v26;
  FILE *v27;
  const char *v28;
  size_t v29;
  uint64_t result;
  unsigned int v31;
  uint8_t buf[4];
  const char *v33;

  if (sub_10003E07C() == 6)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DCED0);
    v4 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315138;
      v33 = "bluetool_command_device";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "HCI transport is hciTransportAPPLEBT from %s", buf, 0xCu);
    }
    v5 = 0;
    do
    {
      while (1)
      {
        while (1)
        {
          v6 = v5;
          v7 = getopt(a1, (char *const *)a2, "hDC");
          if (v7 != 67)
            break;
          if (dword_1004E23C8)
          {
            if (qword_1004E2420 != -1)
              dispatch_once(&qword_1004E2420, &stru_1004DCF50);
            v9 = qword_1004E2428;
            if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 136315138;
              v33 = "bluetool_command_device";
              _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Device is opened and ready to close it for transport AppleBT from %s", buf, 0xCu);
            }
            off_1004E2400(qword_1004E23C0);
            if (qword_1004E2420 != -1)
              dispatch_once(&qword_1004E2420, &stru_1004DCF90);
            v10 = qword_1004E2428;
            v5 = 1;
            if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 136315138;
              v33 = "bluetool_command_device";
              _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "Device is closed from %s", buf, 0xCu);
              v5 = 1;
            }
          }
          else
          {
            v5 = 1;
            fwrite("Device not Opened\n", 0x12uLL, 1uLL, __stderrp);
          }
        }
        if (v7 != 68)
          break;
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DCF10);
        v8 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 136315138;
          v33 = "bluetool_command_device";
          _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "IOS device and ready to open device IO from %s", buf, 0xCu);
        }
        sub_10001AF6C();
        v5 = 1;
      }
      v5 = 0;
    }
    while (v7 != -1);
    if ((v6 & 1) == 0)
    {
      fprintf(__stderrp, "%s - Pick a device\n", *a2);
      fwrite("-D           - Open the default device.\n", 0x28uLL, 1uLL, __stderrp);
      v17 = __stderrp;
      v18 = "-C           - Close the default device.\n";
      v19 = 41;
LABEL_85:
      fwrite(v18, v19, 1uLL, v17);
      fputc(10, __stderrp);
    }
    return 0;
  }
  if (sub_10003E07C() == 7)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DCFD0);
    v11 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315138;
      v33 = "bluetool_command_device";
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "HCI transport is PCIE and ready to open device from %s", buf, 0xCu);
    }
    while (1)
    {
      v12 = getopt(a1, (char *const *)a2, "hD");
      if (v12 != 68)
        break;
      if (dword_1004E23C8)
        v13 = off_1004E2400 == 0;
      else
        v13 = 1;
      if (!v13)
      {
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DD010);
        v14 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 136315138;
          v33 = "bluetool_command_device";
          _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "Device is opened and ready to close it for transport PCIE from %s", buf, 0xCu);
        }
        off_1004E2400(qword_1004E23C0);
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DD050);
        v15 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 136315138;
          v33 = "bluetool_command_device";
          _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "Device is closed from %s", buf, 0xCu);
        }
        if (dword_1004E23C8)
          goto LABEL_84;
      }
      if (sub_1000049E0())
        goto LABEL_93;
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DD090);
      v16 = qword_1004E2428;
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136315138;
        v33 = "bluetool_command_device";
        _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "Device opened successfully from %s", buf, 0xCu);
      }
    }
    if (v12 != -1)
    {
      if (v12 != 104)
      {
        sub_100004988();
        return 1;
      }
      sub_100004988();
    }
    return 0;
  }
  optind = 1;
  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004DD0D0);
  v20 = qword_1004E2428;
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136315138;
    v33 = "bluetool_command_device";
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "HCI transport is other types from %s", buf, 0xCu);
  }
  v21 = 0;
  v22 = 0;
  while (1)
  {
    while (1)
    {
      v23 = getopt(a1, (char *const *)a2, "hd:Ds:Sc");
      if (v23 < 99)
        break;
      if (v23 > 99)
      {
        switch(v23)
        {
          case 'd':
            v22 = optarg;
            break;
          case 's':
            v21 = strtoul(optarg, 0, 0);
            break;
          case 'h':
            fprintf(__stderrp, "%s - Pick a device\n", *a2);
            fwrite("-d <device>  - Open the specified UART device.\n", 0x2FuLL, 1uLL, __stderrp);
            fwrite("-D           - Open the default device.\n", 0x28uLL, 1uLL, __stderrp);
            fwrite("-s <#>       - Configure the device for the given speed/baudrate.\n", 0x42uLL, 1uLL, __stderrp);
            v17 = __stderrp;
            v18 = "-S           - Configure the device for using the speed/baudrate from the device tree.\n";
            v19 = 87;
            goto LABEL_85;
        }
      }
      else
      {
        sub_10001ECAC(qword_1004E23C0);
      }
    }
    if (v23 == -1)
      break;
    if (v23 == 68)
    {
      v25 = getenv("BT_UART");
      if (v25)
        v22 = v25;
      else
        v22 = "com.apple.uart.bluetooth";
    }
    else if (v23 == 83)
    {
      v24 = sub_10003DDA4();
      if (v24)
        v21 = v24;
      else
        v21 = 2400000;
    }
  }
  if (v22)
  {
    if (dword_1004E23C8)
      v26 = off_1004E2400 == 0;
    else
      v26 = 1;
    if (!v26)
    {
      off_1004E2400(qword_1004E23C0);
      if (dword_1004E23C8)
      {
LABEL_84:
        v27 = __stderrp;
        v28 = "Failed to close already opened device.\n";
        v29 = 39;
LABEL_94:
        fwrite(v28, v29, 1uLL, v27);
        return 3;
      }
    }
    if ((_DWORD)v21)
      v31 = v21;
    else
      v31 = 115200;
    printf("Opening %s @ %d baud.\n", v22, v31);
    if (sub_10001EDE0(v22, v31))
    {
LABEL_93:
      v27 = __stderrp;
      v28 = "Unable to open device.\n";
      v29 = 23;
      goto LABEL_94;
    }
    off_1004E2408(qword_1004E23C0);
    return 0;
  }
  printf("Current Device: %s\n", (const char *)&xmmword_1004E1FC0);
  result = 0;
  if ((_DWORD)v21 && dword_1004E23C8)
  {
    printf("Setting speed to %d\n", v21);
    off_1004E23F8(qword_1004E23C0, v21);
    return 0;
  }
  return result;
}

void sub_10001E68C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001E6BC(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001E6EC(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001E71C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001E74C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001E77C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001E7AC(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001E7DC(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001E80C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10001E83C(int a1, uint64_t a2)
{
  useconds_t v4;
  const char *v5;
  int v6;
  int v7;
  int v8;
  int v9;
  unint64_t v10;
  BOOL v11;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int16 v32;

  if (sub_10003E07C() == 6)
  {
    fwrite("autobaud not supported for AppleBT!\n", 0x24uLL, 1uLL, __stderrp);
    fflush(__stderrp);
    return 0;
  }
  v32 = 0;
  v30 = 0u;
  v31 = 0u;
  v28 = 0u;
  v29 = 0u;
  v26 = 0u;
  v27 = 0u;
  v24 = 0u;
  v25 = 0u;
  v22 = 0u;
  v23 = 0u;
  v20 = 0u;
  v21 = 0u;
  v18 = 0u;
  v19 = 0u;
  v16 = 0u;
  v17 = 0u;
  v15 = 0;
  puts("bluetool_command_autobaud");
  v4 = 1000;
  if (a1 >= 1)
  {
    if (a2)
    {
      v5 = *(const char **)(a2 + 8);
      if (v5)
      {
        v6 = atoi(v5);
        if (v6 >= 0)
          v4 = v6;
        else
          v4 = 3000;
      }
    }
  }
  if (dword_1004E23C8)
  {
    v7 = 1;
    while (2)
    {
      if (v7 <= 8)
        v8 = 8;
      else
        v8 = v7;
LABEL_14:
      puts("bluetool_command_autobaud : reset ON");
      sub_10003FA34();
      usleep(0x3D090u);
      puts("bluetool_command_autobaud : reset OFF");
      sub_10003FAFC();
      puts("bluetool_command_autobaud : flush");
      if (off_1004E2408)
      {
        usleep(0x3D090u);
        off_1004E2408(qword_1004E23C0);
      }
      v9 = 0;
      while (!off_1004E23E0(qword_1004E23C0))
      {
        v10 = 0;
        do
        {
          usleep(v4);
          off_1004E23D0(qword_1004E23C0, (char *)&unk_100049248 + v10, 1);
          usleep(0x3E8u);
          if (off_1004E23E0(qword_1004E23C0))
            v11 = 1;
          else
            v11 = v10 >= 0xF;
          ++v10;
        }
        while (!v11);
        if (++v9 == 11)
        {
LABEL_29:
          if (v7++ != v8)
            goto LABEL_14;
LABEL_36:
          fwrite("BlueTool: ERROR -- unable to autobaud chip.\n", 0x2CuLL, 1uLL, __stderrp);
          return 6;
        }
      }
      while (off_1004E23E0(qword_1004E23C0))
      {
        v32 = 0;
        v30 = 0u;
        v31 = 0u;
        v28 = 0u;
        v29 = 0u;
        v26 = 0u;
        v27 = 0u;
        v24 = 0u;
        v25 = 0u;
        v22 = 0u;
        v23 = 0u;
        v20 = 0u;
        v21 = 0u;
        v18 = 0u;
        v19 = 0u;
        v16 = 0u;
        v17 = 0u;
        if ((off_1004E23F0(qword_1004E23C0, &v16, 258, &v15) & 0x80000000) != 0)
          goto LABEL_29;
        puts("bluetool_command_autobaud : sleep again");
        usleep(0xEA60u);
      }
      usleep(0x493E0u);
      puts("bluetool_command_autobaud : HCI reset !");
      off_1004E23E8(qword_1004E23C0, &unk_100049230, 3);
      do
      {
        usleep(0x4E20u);
        v16 = 0u;
        v17 = 0u;
        v18 = 0u;
        v19 = 0u;
        v20 = 0u;
        v21 = 0u;
        v22 = 0u;
        v23 = 0u;
        v24 = 0u;
        v25 = 0u;
        v26 = 0u;
        v27 = 0u;
        v28 = 0u;
        v29 = 0u;
        v30 = 0u;
        v31 = 0u;
        v32 = 0;
        off_1004E23F0(qword_1004E23C0, &v16, 258, &v15);
      }
      while (v16 == 15);
      if (v16 != 14)
      {
        printf("We got packet 0x%02x\n", v16);
        if (v7++ <= 7)
          continue;
        goto LABEL_36;
      }
      break;
    }
    puts("autobaud complete!");
    return 0;
  }
  fwrite("Device not currently opened.\n", 0x1DuLL, 1uLL, __stderrp);
  return 3;
}

uint64_t sub_10001EBC4(int a1, char **a2)
{
  int v4;

  while (1)
  {
    while (1)
    {
      v4 = getopt(a1, a2, "ht:");
      if (v4 != 116)
        break;
      strtoul(optarg, 0, 0);
    }
    if (v4 == -1)
      break;
    if (v4 == 104)
    {
      fwrite("(No Parameters)  - Places device in test mode indefinitely\n", 0x3BuLL, 1uLL, __stderrp);
      fwrite("-t <#>           - Places device in test mode for # seconds\n", 0x3CuLL, 1uLL, __stderrp);
      fputc(10, __stderrp);
      return 0;
    }
  }
  fwrite("not implemented", 0xFuLL, 1uLL, __stderrp);
  return 5;
}

uint64_t sub_10001ECAC(int a1)
{
  NSObject *v1;
  const char *v2;
  int v4;
  uint8_t buf[4];
  const char *v6;

  v4 = 0;
  ioctl(a1, 0x4004746AuLL, &v4);
  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004DD110);
  v1 = qword_1004E2428;
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO))
  {
    if ((v4 & 0x20) != 0)
      v2 = "ASSERTED";
    else
      v2 = "DEASSERTED";
    *(_DWORD *)buf = 136315138;
    v6 = v2;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_INFO, "CTS is %s", buf, 0xCu);
  }
  return v4 & 0x20;
}

void sub_10001EDB0(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10001EDE0(const char *a1, unsigned int a2)
{
  int v4;
  unsigned int v5;
  uint64_t result;
  _BYTE v7[20];
  uint64_t v8;
  int v9;
  _OWORD v10[6];
  int v11;

  v8 = 0;
  *(_QWORD *)&v7[12] = 0;
  v9 = 0;
  v4 = socket(32, 1, 2);
  if (v4 < 0)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DD150);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100046DA4();
    return 0xFFFFFFFFLL;
  }
  v5 = v4;
  *(_DWORD *)v7 = 139296;
  memset(v10, 0, sizeof(v10));
  v11 = 0;
  __strlcpy_chk((char *)v10 + 4, a1, 96, 96);
  if (ioctl(v5, 0xC0644E03uLL, v10))
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DD190);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100046E8C();
    return 0xFFFFFFFFLL;
  }
  *(_DWORD *)&v7[4] = v10[0];
  *(_DWORD *)&v7[8] = 0;
  if (connect(v5, (const sockaddr *)v7, 0x20u) == -1)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DD1D0);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100046E1C();
    return 0xFFFFFFFFLL;
  }
  sub_10001F11C(v5, a2);
  snprintf((char *)&xmmword_1004E1FC0, 0x3FFuLL, "UART - %s", a1);
  result = 0;
  off_1004E23D0 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_10001F1EC;
  off_1004E23D8 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_10001F1F4;
  off_1004E23E0 = (uint64_t (*)(_QWORD))sub_10001F1FC;
  off_1004E23E8 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_10001F28C;
  off_1004E23F0 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_10001F360;
  off_1004E2400 = (uint64_t (*)(_QWORD))sub_10001F5E0;
  dword_1004E2418 = 0;
  off_1004E23F8 = (uint64_t (*)(_QWORD, _QWORD))sub_10001F11C;
  qword_1004E23C0 = v5;
  dword_1004E23C8 = 1;
  off_1004E2408 = (uint64_t (*)(_QWORD))sub_10001F600;
  off_1004E2410 = (uint64_t (*)(_QWORD))sub_10001F608;
  return result;
}

void sub_10001F08C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001F0BC(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001F0EC(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10001F11C(int a1, unsigned int a2)
{
  socklen_t v5;
  termios v6;

  memset(&v6, 0, sizeof(v6));
  v5 = 72;
  getsockopt(a1, 2, 1078490131, &v6, &v5);
  cfmakeraw(&v6);
  cfsetspeed(&v6, a2);
  v6.c_iflag |= 4uLL;
  v6.c_cflag = 232192;
  setsockopt(a1, 2, -2142735340, &v6, 0x48u);
  return 0;
}

uint64_t sub_10001F1EC(int a1, char *a2, uint64_t a3)
{
  return sub_10001F7D8(a1, a2, a3, 1uLL);
}

uint64_t sub_10001F1F4(int a1, char *a2, unint64_t a3)
{
  return sub_10001F7D8(a1, a2, a3, a3);
}

BOOL sub_10001F1FC(int a1)
{
  timeval v3;
  fd_set v4;

  v3.tv_sec = 0;
  *(_QWORD *)&v3.tv_usec = 0;
  memset(&v4, 0, sizeof(v4));
  if (__darwin_check_fd_set_overflow(a1, &v4, 0))
    *(__int32_t *)((char *)v4.fds_bits + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFFCLL)) |= 1 << a1;
  return select(a1 + 1, &v4, 0, 0, &v3) > 0;
}

uint64_t sub_10001F28C(int a1, char *a2, uint64_t a3)
{
  char __buf;

  __buf = 1;
  if (write(a1, &__buf, 1uLL) != 1)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DD250);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100046EFC();
    *__error() = 0;
  }
  return sub_10001F7D8(a1, a2, a3, 1uLL);
}

uint64_t sub_10001F360(int a1, uint64_t a2, unint64_t a3, _QWORD *a4)
{
  unsigned __int8 *v8;
  FILE **v9;
  int v10;
  int v11;
  int v12;
  FILE **v13;
  _QWORD *v14;
  int v15;
  unsigned int v16;
  void *v17;
  int v18;
  const char *v19;
  uint64_t result;
  FILE **v21;
  int i;
  int v23;
  unint64_t v24;
  unsigned __int8 v25;

  v8 = (unsigned __int8 *)(a2 + 2);
  v9 = &__stderrp;
  while (2)
  {
    while (1)
    {
      v10 = 0;
      v25 = 0;
      while (1)
      {
        v11 = read(a1, &v25 + v10, (1 - v10));
        if (v11 < 1)
        {
          if (qword_1004E2420 != -1)
            dispatch_once(&qword_1004E2420, &stru_1004DD290);
          if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
            sub_100046FA0();
          return 0xFFFFFFFFLL;
        }
        v10 += v11;
        if (v10 >= 1)
        {
          v10 = 0;
          if (v25 - 5 >= 0xFFFFFFFD)
            break;
        }
      }
      if (v25 - 2 >= 2)
        break;
      fwrite("ACL/SCO DATA?!?!? What do you think I am? A Bluetooth stack?\n", 0x3DuLL, 1uLL, *v9);
      if (v25 == 2)
        v12 = 4;
      else
        v12 = 3;
      if ((int)sub_10001F9A0(a1, a2, v12) <= 0)
      {
        v19 = "read() H4_HCI_DATA header";
        goto LABEL_34;
      }
      v13 = v9;
      v14 = a4;
      if (v25 == 2)
        v15 = *(unsigned __int8 *)(a2 + 3) << 8;
      else
        v15 = 0;
      v16 = v15 | *v8;
      v17 = malloc_type_malloc(v16, 0x9ED3F775uLL);
      v18 = sub_10001F9A0(a1, (uint64_t)v17, v16);
      free(v17);
      a4 = v14;
      v9 = v13;
      if (v18 <= 0)
      {
        v19 = "read() H4_HCI_DATA body";
        goto LABEL_34;
      }
    }
    if (v25 != 4)
      continue;
    break;
  }
  v21 = v9;
  for (i = 0; i <= 1; i += v23)
  {
    v23 = read(a1, (void *)(a2 + i), (2 - i));
    if (v23 < 1)
    {
      v19 = "read() H4_HCI_EVENT header";
      goto LABEL_34;
    }
  }
  v24 = *v8 + 2;
  if (v24 > a3)
  {
    fprintf(*v21, "buffer passed into %s is too small to hold %d bytes\n", "uart_get_hci_event", v24);
    return 0xFFFFFFFFLL;
  }
  if ((int)sub_10001F9A0(a1, (uint64_t)v8, *(unsigned __int8 *)(a2 + 1)) <= 0)
  {
    v19 = "read() H4_HCI_EVENT body";
LABEL_34:
    perror(v19);
    return 0xFFFFFFFFLL;
  }
  result = 0;
  if (a4)
    *a4 = *(unsigned __int8 *)(a2 + 1);
  return result;
}

uint64_t sub_10001F5E0(int a1)
{
  uint64_t result;

  result = close(a1);
  dword_1004E23C8 = 0;
  return result;
}

uint64_t sub_10001F600(int a1)
{
  return tcflush(a1, 3);
}

void sub_10001F608(int a1)
{
  NSObject *v2;
  NSObject *v3;
  NSObject *v4;
  int *v5;
  char *v6;
  uint8_t buf[4];
  char *v8;
  unsigned __int8 __buf;

  __buf = -86;
  tcflush(a1, 3);
  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004DD2D0);
  v2 = qword_1004E2428;
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 67109120;
    LODWORD(v8) = 170;
    _os_log_debug_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Spaming %02X to UART", buf, 8u);
  }
  while (1)
  {
    while (write(a1, &__buf, 1uLL) > 0)
    {
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DD350);
      v3 = qword_1004E2428;
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 67109120;
        LODWORD(v8) = __buf;
        _os_log_debug_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "W: 0x%02x", buf, 8u);
      }
    }
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DD310);
    v4 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
    {
      v5 = __error();
      v6 = strerror(*v5);
      *(_DWORD *)buf = 136315138;
      v8 = v6;
      _os_log_error_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "Error writing byte to device: %s", buf, 0xCu);
    }
  }
}

uint64_t sub_10001F7D8(int __fd, char *__buf, uint64_t a3, unint64_t a4)
{
  ssize_t v8;
  size_t v9;
  ssize_t v10;
  BOOL v11;
  NSObject *v13;
  int *v14;
  char *v15;
  int v16;
  size_t v17;
  __int16 v18;
  uint64_t v19;
  __int16 v20;
  uint64_t v21;
  __int16 v22;
  char *v23;

  if (a3 < 1)
  {
LABEL_9:
    tcdrain(__fd);
    return 0;
  }
  else
  {
    v8 = a3;
    while (1)
    {
      v9 = v8 >= a4 ? a4 : v8;
      v10 = write(__fd, __buf, v9);
      if (v10 <= 0)
        break;
      __buf += v10;
      v11 = v8 <= v10;
      v8 -= v10;
      if (v11)
        goto LABEL_9;
    }
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DD210);
    v13 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
    {
      v14 = __error();
      v15 = strerror(*v14);
      v16 = 134218754;
      v17 = v9;
      v18 = 2048;
      v19 = a3 - v8;
      v20 = 2048;
      v21 = a3;
      v22 = 2080;
      v23 = v15;
      _os_log_error_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "Error writing %zu bytes %zd / %zu to device: %s", (uint8_t *)&v16, 0x2Au);
    }
    return 0xFFFFFFFFLL;
  }
}

void sub_10001F940(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001F970(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10001F9A0(int a1, uint64_t a2, int a3)
{
  uint64_t v6;
  int v7;

  if (a3 >= 1)
  {
    LODWORD(v6) = 0;
    while (1)
    {
      v7 = read(a1, (void *)(a2 + (int)v6), a3 - (int)v6);
      if (v7 < 1)
        break;
      v6 = (v6 + v7);
      if ((int)v6 >= a3)
        return v6;
    }
  }
  return 0xFFFFFFFFLL;
}

void sub_10001FA0C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001FA3C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001FA6C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001FA9C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001FAD8(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

int *sub_10001FB04()
{
  return __error();
}

char *sub_10001FB1C(int *a1)
{
  return strerror(*a1);
}

uint64_t sub_10001FB24()
{
  uint64_t v0;
  mach_port_t v1;
  uint64_t v2;
  IONotificationPort *v3;
  __CFRunLoopSource *RunLoopSource;
  __CFRunLoop *Current;
  const __CFDictionary *v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  io_service_t v16;
  NSObject *v17;
  NSObject *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  NSObject *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  io_iterator_t notification;
  uint8_t buf[4];
  const char *v36;

  if ((byte_1004E1F18 & 1) != 0)
    return 0;
  v1 = dword_1004E1F30;
  if (dword_1004E1F30)
    goto LABEL_4;
  notification = 0;
  v3 = IONotificationPortCreate(kIOMainPortDefault);
  RunLoopSource = IONotificationPortGetRunLoopSource(v3);
  Current = CFRunLoopGetCurrent();
  CFRunLoopAddSource(Current, RunLoopSource, kCFRunLoopDefaultMode);
  v6 = IOServiceNameMatching("AppleBTHci");
  v7 = IOServiceAddMatchingNotification(v3, "IOServiceFirstMatch", v6, (IOServiceMatchingCallback)sub_100020D70, Current, &notification);
  if ((_DWORD)v7)
  {
    v0 = v7;
    if (qword_1004E1F20 != -1)
      dispatch_once(&qword_1004E1F20, &stru_1004DD810);
    v8 = qword_1004E1F28;
    if (os_log_type_enabled((os_log_t)qword_1004E1F28, OS_LOG_TYPE_ERROR))
      sub_100047154(v0, v8, v9, v10, v11, v12, v13, v14);
  }
  else
  {
    v16 = IOIteratorNext(notification);
    for (dword_1004E1F34 = v16; !v16; dword_1004E1F34 = v16)
    {
      if (qword_1004E1F20 != -1)
        dispatch_once(&qword_1004E1F20, &stru_1004DD850);
      v17 = qword_1004E1F28;
      if (os_log_type_enabled((os_log_t)qword_1004E1F28, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136315138;
        v36 = "AppleBTHci";
        _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "applebt_hci_connect: Couldn't find %s service, waiting for first match\n", buf, 0xCu);
      }
      CFRunLoopRun();
      v16 = IOIteratorNext(notification);
    }
    v0 = IOServiceOpen(v16, mach_task_self_, 0, (io_connect_t *)&dword_1004E1F30);
    if ((_DWORD)v0)
    {
      if (qword_1004E1F20 != -1)
        dispatch_once(&qword_1004E1F20, &stru_1004DD890);
      v18 = qword_1004E1F28;
      if (os_log_type_enabled((os_log_t)qword_1004E1F28, OS_LOG_TYPE_ERROR))
        sub_1000470F0(v0, v18, v19, v20, v21, v22, v23, v24);
    }
  }
  CFRunLoopRemoveSource(Current, RunLoopSource, kCFRunLoopDefaultMode);
  IONotificationPortDestroy(v3);
  IOObjectRelease(notification);
  if (qword_1004E1F20 != -1)
    dispatch_once(&qword_1004E1F20, &stru_1004DD8D0);
  v25 = qword_1004E1F28;
  if (os_log_type_enabled((os_log_t)qword_1004E1F28, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136315138;
    v36 = "AppleBTHci";
    _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "applebt_hci_connect: Service %s connected!\n", buf, 0xCu);
  }
  if (!(_DWORD)v0)
  {
    v1 = dword_1004E1F30;
LABEL_4:
    v2 = IOConnectCallMethod(v1, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    if ((_DWORD)v2)
    {
      v0 = v2;
      if (qword_1004E1F20 != -1)
        dispatch_once(&qword_1004E1F20, &stru_1004DD3D0);
      if (os_log_type_enabled((os_log_t)qword_1004E1F28, OS_LOG_TYPE_ERROR))
        sub_100047024();
    }
    else
    {
      if (qword_1004E1F20 != -1)
        dispatch_once(&qword_1004E1F20, &stru_1004DD410);
      v15 = qword_1004E1F28;
      if (os_log_type_enabled((os_log_t)qword_1004E1F28, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136315138;
        v36 = "AppleBTHci";
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "applebt_hci_open: Service %s opened!\n", buf, 0xCu);
      }
      v0 = 0;
      byte_1004E1F18 = 1;
    }
    return v0;
  }
  if (qword_1004E1F20 != -1)
    dispatch_once(&qword_1004E1F20, &stru_1004DD390);
  v26 = qword_1004E1F28;
  if (os_log_type_enabled((os_log_t)qword_1004E1F28, OS_LOG_TYPE_ERROR))
    sub_10004708C(v0, v26, v27, v28, v29, v30, v31, v32);
  return v0;
}

void sub_10001FF98(id a1)
{
  qword_1004E1F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_10001FFC4(id a1)
{
  qword_1004E1F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

const char *sub_10001FFF0(int a1)
{
  const char *result;

  if (a1 > -536870182)
  {
    if (a1 > -536870161)
    {
      switch(a1)
      {
        case -536870160:
          return "kIOReturnNotFound";
        case 0:
          return "kIOReturnSuccess";
        case 5:
          return "KERN_FAILURE";
      }
    }
    else
    {
      switch(a1)
      {
        case -536870181:
          return "kIOReturnNoSpace";
        case -536870167:
          return "kIOReturnDeviceError";
        case -536870165:
          return "kIOReturnAborted";
      }
    }
    return "UNKNOWN";
  }
  if (a1 <= -536870199)
  {
    if (a1 == -536870211)
      return "kIOReturnNoMemory";
    if (a1 == -536870206)
      return "kIOReturnBadArgument";
    return "UNKNOWN";
  }
  switch(a1)
  {
    case -536870198:
      result = "kIOReturnIOError";
      break;
    case -536870197:
    case -536870196:
      return "UNKNOWN";
    case -536870195:
      result = "kIOReturnNotOpen";
      break;
    case -536870194:
      result = "kIOReturnNotReadable";
      break;
    case -536870193:
      result = "kIOReturnNotWritable";
      break;
    default:
      if (a1 != -536870185)
        return "UNKNOWN";
      result = "kIOReturnOffline";
      break;
  }
  return result;
}

void sub_100020170(id a1)
{
  qword_1004E1F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

uint64_t sub_10002019C()
{
  uint64_t v0;
  NSObject *v1;
  uint8_t buf[4];
  const char *v4;

  if ((byte_1004E1F18 & 1) != 0)
  {
    byte_1004E1F18 = 0;
    v0 = IOConnectCallMethod(dword_1004E1F30, 1u, 0, 0, 0, 0, 0, 0, 0, 0);
    if ((_DWORD)v0)
    {
      if (qword_1004E1F20 != -1)
        dispatch_once(&qword_1004E1F20, &stru_1004DD490);
      if (os_log_type_enabled((os_log_t)qword_1004E1F28, OS_LOG_TYPE_ERROR))
        sub_1000471B8();
    }
    IOServiceClose(dword_1004E1F30);
    dword_1004E1F30 = 0;
    IOObjectRelease(dword_1004E1F34);
    dword_1004E1F34 = 0;
    if (qword_1004E1F20 != -1)
      dispatch_once(&qword_1004E1F20, &stru_1004DD4D0);
    v1 = qword_1004E1F28;
    if (os_log_type_enabled((os_log_t)qword_1004E1F28, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315138;
      v4 = "AppleBTHci";
      _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "applebt_hci_close: Service %s closed and disconnected!\n", buf, 0xCu);
    }
  }
  else
  {
    if (qword_1004E1F20 != -1)
      dispatch_once(&qword_1004E1F20, &stru_1004DD450);
    if (os_log_type_enabled((os_log_t)qword_1004E1F28, OS_LOG_TYPE_ERROR))
      sub_100047220();
    return 5;
  }
  return v0;
}

void sub_100020374(id a1)
{
  qword_1004E1F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_1000203A0(id a1)
{
  qword_1004E1F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_1000203CC(id a1)
{
  qword_1004E1F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

uint64_t sub_1000203F8()
{
  uint64_t v0;
  NSObject *v1;
  uint8_t buf[16];

  if ((byte_1004E1F18 & 1) != 0)
  {
    v0 = IOConnectCallMethod(dword_1004E1F30, 4u, 0, 0, 0, 0, 0, 0, 0, 0);
    if ((_DWORD)v0)
    {
      if (qword_1004E1F20 != -1)
        dispatch_once(&qword_1004E1F20, &stru_1004DD550);
      if (!os_log_type_enabled((os_log_t)qword_1004E1F28, OS_LOG_TYPE_ERROR))
        goto LABEL_9;
      sub_10004724C();
    }
    if (qword_1004E1F20 != -1)
      dispatch_once(&qword_1004E1F20, &stru_1004DD590);
LABEL_9:
    v1 = qword_1004E1F28;
    if (os_log_type_enabled((os_log_t)qword_1004E1F28, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "applebt_hci_transport_reset: HCI Transport was reset!\n", buf, 2u);
    }
    return v0;
  }
  if (qword_1004E1F20 != -1)
    dispatch_once(&qword_1004E1F20, &stru_1004DD510);
  if (os_log_type_enabled((os_log_t)qword_1004E1F28, OS_LOG_TYPE_ERROR))
    sub_1000472B4();
  return 5;
}

void sub_100020564(id a1)
{
  qword_1004E1F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_100020590(id a1)
{
  qword_1004E1F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_1000205BC(id a1)
{
  qword_1004E1F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

uint64_t sub_1000205E8(int a1, unsigned __int8 *inputStruct)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned __int8 *i;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  NSObject *v15;
  const char *v16;
  uint32_t v17;
  NSObject *v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  int v23;
  int v24;
  const char *v25;
  uint64_t v26;
  uint8_t buf[4];
  int v28;
  __int16 v29;
  int v30;
  __int16 v31;
  const char *v32;
  _OWORD outputStruct[5];
  uint64_t v34;

  if ((byte_1004E1F18 & 1) != 0)
  {
    v34 = 0;
    memset(outputStruct, 0, sizeof(outputStruct));
    v26 = 8 * a1;
    v4 = IOConnectCallMethod(dword_1004E1F30, 2u, 0, 0, inputStruct, 16 * a1, 0, 0, outputStruct, (size_t *)&v26);
    if ((_DWORD)v4)
    {
      v5 = v4;
      if (qword_1004E1F20 != -1)
        dispatch_once(&qword_1004E1F20, &stru_1004DD610);
      if (os_log_type_enabled((os_log_t)qword_1004E1F28, OS_LOG_TYPE_ERROR))
        sub_1000472E0();
      return v5;
    }
    if (a1 < 1)
      return 0;
    v5 = 0;
    v7 = a1;
    v8 = inputStruct + 1;
    for (i = (unsigned __int8 *)outputStruct + 4; ; i += 8)
    {
      v10 = *((_DWORD *)i - 1);
      if (v10)
        break;
LABEL_30:
      v8 += 16;
      if (!--v7)
        return v5;
    }
    if (v10 == -536870181)
    {
      if (qword_1004E1F20 != -1)
        dispatch_once(&qword_1004E1F20, &stru_1004DD690);
      v18 = qword_1004E1F28;
      if (os_log_type_enabled((os_log_t)qword_1004E1F28, OS_LOG_TYPE_DEFAULT))
      {
        v19 = *(v8 - 1);
        v20 = *i;
        v21 = *v8;
        *(_DWORD *)buf = 67109632;
        v28 = v19;
        v29 = 1024;
        v30 = v20;
        v31 = 1024;
        LODWORD(v32) = v21;
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "applebt_hci_write: write to discardable pipe %d failed with no space, written %d out of %d packets\n", buf, 0x14u);
      }
      goto LABEL_30;
    }
    if (v10 == -536870198)
    {
      if (qword_1004E1F20 != -1)
        dispatch_once(&qword_1004E1F20, &stru_1004DD650);
      v11 = qword_1004E1F28;
      if (!os_log_type_enabled((os_log_t)qword_1004E1F28, OS_LOG_TYPE_ERROR))
        goto LABEL_29;
      v12 = *(v8 - 1);
      v13 = *i;
      v14 = *v8;
      *(_DWORD *)buf = 67109632;
      v28 = v12;
      v29 = 1024;
      v30 = v13;
      v31 = 1024;
      LODWORD(v32) = v14;
      v15 = v11;
      v16 = "applebt_hci_write: write to non-discardable pipe %d failed with no space, written %d out of %d packets\n";
      v17 = 20;
    }
    else
    {
      if (qword_1004E1F20 != -1)
        dispatch_once(&qword_1004E1F20, &stru_1004DD6D0);
      v22 = qword_1004E1F28;
      if (!os_log_type_enabled((os_log_t)qword_1004E1F28, OS_LOG_TYPE_ERROR))
        goto LABEL_29;
      v23 = *(v8 - 1);
      v24 = *((_DWORD *)i - 1);
      v25 = sub_10001FFF0(v24);
      *(_DWORD *)buf = 67109634;
      v28 = v23;
      v29 = 1024;
      v30 = v24;
      v31 = 2080;
      v32 = v25;
      v15 = v22;
      v16 = "applebt_hci_write: write to pipe %d failed with (0x%08X, %s)\n";
      v17 = 24;
    }
    _os_log_error_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, v16, buf, v17);
LABEL_29:
    v5 = 5;
    goto LABEL_30;
  }
  if (qword_1004E1F20 != -1)
    dispatch_once(&qword_1004E1F20, &stru_1004DD5D0);
  if (os_log_type_enabled((os_log_t)qword_1004E1F28, OS_LOG_TYPE_ERROR))
    sub_100047348();
  return 5;
}

void sub_10002098C(id a1)
{
  qword_1004E1F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_1000209B8(id a1)
{
  qword_1004E1F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_1000209E4(id a1)
{
  qword_1004E1F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_100020A10(id a1)
{
  qword_1004E1F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_100020A3C(id a1)
{
  qword_1004E1F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

uint64_t sub_100020A68(int a1, void *inputStruct, void *outputStruct)
{
  size_t v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  uint8_t buf[8];
  uint64_t v11;

  if ((byte_1004E1F18 & 1) != 0)
  {
    v11 = 8 * a1;
    v5 = 16 * a1;
    while (1)
    {
      v6 = IOConnectCallMethod(dword_1004E1F30, 3u, 0, 0, inputStruct, v5, 0, 0, outputStruct, (size_t *)&v11);
      if ((_DWORD)v6 != -536870165)
        break;
      if (qword_1004E1F20 != -1)
        dispatch_once(&qword_1004E1F20, &stru_1004DD790);
      v7 = qword_1004E1F28;
      if (os_log_type_enabled((os_log_t)qword_1004E1F28, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "applebt_hci_read: method kAppleBTHciRead was aborted by signal! Read again\n", buf, 2u);
      }
    }
    v8 = v6;
    if ((_DWORD)v6)
    {
      if (qword_1004E1F20 != -1)
        dispatch_once(&qword_1004E1F20, &stru_1004DD750);
      if (os_log_type_enabled((os_log_t)qword_1004E1F28, OS_LOG_TYPE_ERROR))
        sub_100047374();
    }
  }
  else
  {
    if (qword_1004E1F20 != -1)
      dispatch_once(&qword_1004E1F20, &stru_1004DD710);
    if (os_log_type_enabled((os_log_t)qword_1004E1F28, OS_LOG_TYPE_ERROR))
      sub_1000473DC();
    return 5;
  }
  return v8;
}

void sub_100020C20(id a1)
{
  qword_1004E1F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_100020C4C(id a1)
{
  qword_1004E1F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_100020C78(id a1)
{
  qword_1004E1F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

CFTypeRef sub_100020CA4()
{
  if (dword_1004E1F34)
    return IORegistryEntrySearchCFProperty(dword_1004E1F34, "IODeviceTree", CFSTR("pipes"), kCFAllocatorDefault, 1u);
  if (qword_1004E1F20 != -1)
    dispatch_once(&qword_1004E1F20, &stru_1004DD7D0);
  if (os_log_type_enabled((os_log_t)qword_1004E1F28, OS_LOG_TYPE_ERROR))
    sub_100047408();
  return 0;
}

void sub_100020D44(id a1)
{
  qword_1004E1F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_100020D70(__CFRunLoop *a1)
{
  NSObject *v2;
  uint8_t v3[16];

  if (qword_1004E1F20 != -1)
    dispatch_once(&qword_1004E1F20, &stru_1004DD910);
  v2 = qword_1004E1F28;
  if (os_log_type_enabled((os_log_t)qword_1004E1F28, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "DeviceFoundCB: releasing waiting thread\n", v3, 2u);
  }
  CFRunLoopStop(a1);
}

void sub_100020E04(id a1)
{
  qword_1004E1F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_100020E30(id a1)
{
  qword_1004E1F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_100020E5C(id a1)
{
  qword_1004E1F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_100020E88(id a1)
{
  qword_1004E1F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_100020EB4(id a1)
{
  qword_1004E1F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_100020EE0(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x12u);
}

const char *sub_100020F0C(int a1)
{
  return sub_10001FFF0(a1);
}

uint64_t sub_100020F20()
{
  return sub_100015BE4((uint64_t)"f2281db3d48d320762314a16f0b2d337d5705cac", (uint64_t)"BCM4350C5", (uint64_t)"MUR", (uint64_t)sub_100028ABC, (uint64_t)sub_100028C70, (uint64_t)sub_100028C80, (uint64_t)"BCM4350C5_19.1.235.4922_Pinotnoir_OS_MUR_BM_MCC_20210628.hcd", 0, 0x13C5Eu, (uint64_t)&unk_100049266, 0, 0);
}

uint64_t sub_100020F94()
{
  return sub_100015BE4((uint64_t)"f2281db3d48d320762314a16f0b2d337d5705cac", (uint64_t)"BCM4350C5", (uint64_t)"USI", (uint64_t)sub_100028D08, (uint64_t)sub_100028EBC, (uint64_t)sub_100028ECC, (uint64_t)"BCM4350C5_19.1.235.4923_Pinotnoir_OS_USI_BM_MCC_20210628.hcd", 0, 0x13C5Fu, (uint64_t)&unk_10005CEC5, 0, 0);
}

uint64_t sub_100021008()
{
  return sub_100015BE4((uint64_t)"da743fdfcc2a22982c4961e06474a9baa478752b", (uint64_t)"BCM4350C5", (uint64_t)"MUR", (uint64_t)sub_100028F54, (uint64_t)sub_100029108, (uint64_t)sub_100029118, (uint64_t)"BCM4350C5_19.1.235.4922_Pinotnoir_OS_MUR_BM_MCC_20210628.hcd", 0, 0x13C5Eu, (uint64_t)&unk_100070B25, 0, 0);
}

uint64_t sub_10002107C()
{
  return sub_100015BE4((uint64_t)"da743fdfcc2a22982c4961e06474a9baa478752b", (uint64_t)"BCM4350C5", (uint64_t)"USI", (uint64_t)sub_1000291A0, (uint64_t)sub_100029354, (uint64_t)sub_100029364, (uint64_t)"BCM4350C5_19.1.235.4923_Pinotnoir_OS_USI_BM_MCC_20210628.hcd", 0, 0x13C5Fu, (uint64_t)&unk_100084784, 0, 0);
}

uint64_t sub_1000210F0()
{
  return sub_100015BE4((uint64_t)"58d9c8f15fe9815df57e1e03ee6c1c54214bcbe2", (uint64_t)"BCM4350C5", (uint64_t)"MUR", (uint64_t)sub_1000293EC, (uint64_t)sub_1000295A0, (uint64_t)sub_1000295B0, (uint64_t)"BCM4350C5_19.1.235.4920_Albarossa_OS_MUR_BM_MCC_20210628.hcd", 0, 0x13C5Eu, (uint64_t)&unk_1000983E4, 0, 0);
}

uint64_t sub_100021164()
{
  return sub_100015BE4((uint64_t)"58d9c8f15fe9815df57e1e03ee6c1c54214bcbe2", (uint64_t)"BCM4350C5", (uint64_t)"USI", (uint64_t)sub_100029638, (uint64_t)sub_1000297EC, (uint64_t)sub_1000297FC, (uint64_t)"BCM4350C5_19.1.235.4921_Albarossa_OS_USI_BM_MCC_20210628.hcd", 0, 0x13C5Fu, (uint64_t)&unk_1000AC043, 0, 0);
}

uint64_t sub_1000211D8()
{
  return sub_100015BE4((uint64_t)"cf6ae0d725548493801a64450abffb4626a6dc34", (uint64_t)"BCM4350C5", (uint64_t)"MUR", (uint64_t)sub_100029884, (uint64_t)sub_100029A38, (uint64_t)sub_100029A48, (uint64_t)"BCM4350C5_19.1.235.4920_Albarossa_OS_MUR_BM_MCC_20210628.hcd", 0, 0x13C5Eu, (uint64_t)&unk_1000BFCA3, 0, 0);
}

uint64_t sub_10002124C()
{
  return sub_100015BE4((uint64_t)"cf6ae0d725548493801a64450abffb4626a6dc34", (uint64_t)"BCM4350C5", (uint64_t)"USI", (uint64_t)sub_100029AD0, (uint64_t)sub_100029C84, (uint64_t)sub_100029C94, (uint64_t)"BCM4350C5_19.1.235.4921_Albarossa_OS_USI_BM_MCC_20210628.hcd", 0, 0x13C5Fu, (uint64_t)&unk_1000D3902, 0, 0);
}

uint64_t sub_1000212C0()
{
  return sub_100015BE4((uint64_t)"62374b79ab4ea32a2153b8702c4d05e76efe643e", (uint64_t)"BCM43452A2", (uint64_t)"MUR", (uint64_t)sub_100029D1C, (uint64_t)sub_100029EE4, (uint64_t)sub_100029EF4, (uint64_t)"BCM43452A2_19.1.144.601_Hans_OS_MUR_20210524.hcd", 0, 0x116BAu, (uint64_t)&unk_1000E7562, 0, 0);
}

uint64_t sub_100021334()
{
  return sub_100015BE4((uint64_t)"62374b79ab4ea32a2153b8702c4d05e76efe643e", (uint64_t)"BCM43452A2", (uint64_t)"TDK", (uint64_t)sub_100029F7C, (uint64_t)sub_10002A144, (uint64_t)sub_10002A154, (uint64_t)"BCM43452A2_19.1.144.602_Hans_OS_TDK_20210524.hcd", 0, 0x116F7u, (uint64_t)&unk_1000F8C1D, 0, 0);
}

uint64_t sub_1000213A8()
{
  return sub_100015BE4((uint64_t)"62374b79ab4ea32a2153b8702c4d05e76efe643e", (uint64_t)"BCM43452A2", (uint64_t)"USI", (uint64_t)sub_10002A1DC, (uint64_t)sub_10002A3A4, (uint64_t)sub_10002A3B4, (uint64_t)"BCM43452A2_19.1.144.603_Hans_OS_USI_20210524.hcd", 0, 0x116F7u, (uint64_t)&unk_10010A315, 0, 0);
}

uint64_t sub_10002141C()
{
  return sub_100015BE4((uint64_t)"bd44635a8f05ab73f759d0531caff9e88fbcbff4", (uint64_t)"BCM43452A2", (uint64_t)"MUR", (uint64_t)sub_10002A43C, (uint64_t)sub_10002A604, (uint64_t)sub_10002A614, (uint64_t)"BCM43452A2_19.1.144.601_Hans_OS_MUR_20210524.hcd", 0, 0x116BAu, (uint64_t)&unk_10011BA0D, 0, 0);
}

uint64_t sub_100021490()
{
  return sub_100015BE4((uint64_t)"bd44635a8f05ab73f759d0531caff9e88fbcbff4", (uint64_t)"BCM43452A2", (uint64_t)"TDK", (uint64_t)sub_10002A69C, (uint64_t)sub_10002A864, (uint64_t)sub_10002A874, (uint64_t)"BCM43452A2_19.1.144.602_Hans_OS_TDK_20210524.hcd", 0, 0x116F7u, (uint64_t)&unk_10012D0C8, 0, 0);
}

uint64_t sub_100021504()
{
  return sub_100015BE4((uint64_t)"bd44635a8f05ab73f759d0531caff9e88fbcbff4", (uint64_t)"BCM43452A2", (uint64_t)"USI", (uint64_t)sub_10002A8FC, (uint64_t)sub_10002AAC4, (uint64_t)sub_10002AAD4, (uint64_t)"BCM43452A2_19.1.144.603_Hans_OS_USI_20210524.hcd", 0, 0x116F7u, (uint64_t)&unk_10013E7C0, 0, 0);
}

uint64_t sub_100021578()
{
  return sub_100015BE4((uint64_t)"5308f5a2a893cd444946cab7aec4ab2eb4821aeb", (uint64_t)"BCM4355C0", (uint64_t)"MUR", (uint64_t)sub_10002AB5C, (uint64_t)sub_10002AD24, (uint64_t)sub_10002AD34, (uint64_t)"BCM4355C0_19.1.206.5415_Kristoff_OS_MUR_MCC_TRS_20210531.hcd", 0, 0x16A22u, (uint64_t)&unk_10014FEB8, 0, 0);
}

uint64_t sub_1000215EC()
{
  return sub_10001896C((uint64_t)"5308f5a2a893cd444946cab7aec4ab2eb4821aeb", (uint64_t)&unk_1004C40CE, 210);
}

uint64_t sub_100021604()
{
  return sub_100015BE4((uint64_t)"5308f5a2a893cd444946cab7aec4ab2eb4821aeb", (uint64_t)"BCM4355C0", (uint64_t)"USI", (uint64_t)sub_10002ADBC, (uint64_t)sub_10002AF84, (uint64_t)sub_10002AF94, (uint64_t)"BCM4355C0_19.1.206.5417_Kristoff_OS_USI_MCC_TRS_20210531.hcd", 0, 0x16A22u, (uint64_t)&unk_1001668DB, 0, 0);
}

uint64_t sub_100021678()
{
  return sub_10001896C((uint64_t)"5308f5a2a893cd444946cab7aec4ab2eb4821aeb", (uint64_t)&unk_1004C41A0, 210);
}

uint64_t sub_100021690()
{
  return sub_100015BE4((uint64_t)"9cb119b5ec7048720181a59cd70a45bd551efb15", (uint64_t)"BCM4355C0", (uint64_t)"MUR", (uint64_t)sub_10002B01C, (uint64_t)sub_10002B1E4, (uint64_t)sub_10002B1F4, (uint64_t)"BCM4355C0_19.1.206.5422_Sven_OS_MUR_MCC_TRS_20210531.hcd", 0, 0x16A1Eu, (uint64_t)&unk_10017D2FE, 0, 0);
}

uint64_t sub_100021704()
{
  return sub_10001896C((uint64_t)"9cb119b5ec7048720181a59cd70a45bd551efb15", (uint64_t)&unk_1004C4272, 210);
}

uint64_t sub_10002171C()
{
  return sub_100015BE4((uint64_t)"9cb119b5ec7048720181a59cd70a45bd551efb15", (uint64_t)"BCM4355C0", (uint64_t)"USI", (uint64_t)sub_10002B27C, (uint64_t)sub_10002B444, (uint64_t)sub_10002B454, (uint64_t)"BCM4355C0_19.1.206.5423_Sven_OS_USI_MCC_TRS_20210531.hcd", 0, 0x16A1Eu, (uint64_t)&unk_100193D1D, 0, 0);
}

uint64_t sub_100021790()
{
  return sub_10001896C((uint64_t)"9cb119b5ec7048720181a59cd70a45bd551efb15", (uint64_t)&unk_1004C4344, 210);
}

uint64_t sub_1000217A8()
{
  return sub_100015BE4((uint64_t)"a94c45df4cbe703d55f22864d18bdee9982d75ab", (uint64_t)"BCM4355C0", (uint64_t)"MUR", (uint64_t)sub_10002B4DC, (uint64_t)sub_10002B6A4, (uint64_t)sub_10002B6B4, (uint64_t)"BCM4355C0_19.1.206.5405_Elsa_OS_MUR_MCC_TRS_20210531.hcd", 0, 0x1638Fu, (uint64_t)&unk_1001AA73C, 0, 0);
}

uint64_t sub_10002181C()
{
  return sub_10001896C((uint64_t)"a94c45df4cbe703d55f22864d18bdee9982d75ab", (uint64_t)&unk_1004C4416, 210);
}

uint64_t sub_100021834()
{
  return sub_100015BE4((uint64_t)"a94c45df4cbe703d55f22864d18bdee9982d75ab", (uint64_t)"BCM4355C0", (uint64_t)"USI", (uint64_t)sub_10002B73C, (uint64_t)sub_10002B904, (uint64_t)sub_10002B914, (uint64_t)"BCM4355C0_19.1.206.5406_Elsa_OS_USI_MCC_TRS_20210531.hcd", 0, 0x1638Fu, (uint64_t)&unk_1001C0ACC, 0, 0);
}

uint64_t sub_1000218A8()
{
  return sub_10001896C((uint64_t)"a94c45df4cbe703d55f22864d18bdee9982d75ab", (uint64_t)&unk_1004C44E8, 210);
}

uint64_t sub_1000218C0()
{
  return sub_100015BE4((uint64_t)"a819bec4fdfaa9e3845d57122e334f6844aeabb7", (uint64_t)"BCM4355C0", (uint64_t)"MUR", (uint64_t)sub_10002B99C, (uint64_t)sub_10002BB64, (uint64_t)sub_10002BB74, (uint64_t)"BCM4355C0_19.1.206.5420_Olaf_OS_MUR_MCC_TRS_20210531.hcd", 0, 0x1638Fu, (uint64_t)&unk_1001D6E5C, 0, 0);
}

uint64_t sub_100021934()
{
  return sub_10001896C((uint64_t)"a819bec4fdfaa9e3845d57122e334f6844aeabb7", (uint64_t)&unk_1004C45BA, 210);
}

uint64_t sub_10002194C()
{
  return sub_100015BE4((uint64_t)"a819bec4fdfaa9e3845d57122e334f6844aeabb7", (uint64_t)"BCM4355C0", (uint64_t)"USI", (uint64_t)sub_10002BBFC, (uint64_t)sub_10002BDC4, (uint64_t)sub_10002BDD4, (uint64_t)"BCM4355C0_19.1.206.5421_Olaf_OS_USI_MCC_TRS_20210531.hcd", 0, 0x1638Fu, (uint64_t)&unk_1001ED1EC, 0, 0);
}

uint64_t sub_1000219C0()
{
  return sub_10001896C((uint64_t)"a819bec4fdfaa9e3845d57122e334f6844aeabb7", (uint64_t)&unk_1004C468C, 210);
}

uint64_t sub_1000219D8()
{
  return sub_100015BE4((uint64_t)"5aaa8971a82e827670bed8a5a6e819d1996e25f2", (uint64_t)"BCM4377B2", (uint64_t)"MUR", (uint64_t)sub_10002BE5C, (uint64_t)sub_10002BF20, (uint64_t)sub_10002BF30, (uint64_t)"BCM4377B2_21.1.238.6947_PCIE_Aladdin_OS_MUR_20221212.bin", (uint64_t)"BCM4377B2_*_Aladdin_OS_MUR_*", 0x37CA8u, 0, (uint64_t)"9401b7dc718c37a0057c0ed9ff7a288de9338e89e304625f229b8492d8e9882c", 0);
}

uint64_t sub_100021A50()
{
  return sub_100015BE4((uint64_t)"5aaa8971a82e827670bed8a5a6e819d1996e25f2", (uint64_t)"BCM4377B2", (uint64_t)"USI", (uint64_t)sub_10002BF90, (uint64_t)sub_10002C054, (uint64_t)sub_10002C064, (uint64_t)"BCM4377B2_21.1.238.6948_PCIE_Aladdin_OS_USI_20221212.bin", (uint64_t)"BCM4377B2_*_Aladdin_OS_USI_*", 0x37CA8u, 0, (uint64_t)"2d29d05d97aea5f47b13398019fbc2b1abde8947151f94b8b71e1c22555186f5", 0);
}

uint64_t sub_100021AC8()
{
  return sub_100015BE4((uint64_t)"6b8380a7888b152359a8a931bbda252fcd4285e6", (uint64_t)"BCM4377B2", (uint64_t)"MUR", (uint64_t)sub_10002C0C4, (uint64_t)sub_10002C188, (uint64_t)sub_10002C198, (uint64_t)"BCM4377B2_21.1.238.6949_PCIE_Genie_OS_MUR_20221212.bin", (uint64_t)"BCM4377B2_*_Genie_OS_MUR_*", 0x37CA6u, 0, (uint64_t)"65ede5e78cb6d090596b8d521e59b3ea60fc87d8c96e96b45909e2bd77618440", 0);
}

uint64_t sub_100021B40()
{
  return sub_100015BE4((uint64_t)"6b8380a7888b152359a8a931bbda252fcd4285e6", (uint64_t)"BCM4377B2", (uint64_t)"USI", (uint64_t)sub_10002C1F8, (uint64_t)sub_10002C2BC, (uint64_t)sub_10002C2CC, (uint64_t)"BCM4377B2_21.1.238.6950_PCIE_Genie_OS_USI_20221212.bin", (uint64_t)"BCM4377B2_*_Genie_OS_USI_*", 0x37CA6u, 0, (uint64_t)"52d9ed0ef51368235ced2eb5ba2bad17f381b70f2fee8dba7a5a23a9b4b65d0b", 0);
}

uint64_t sub_100021BB8()
{
  return sub_100015BE4((uint64_t)"21419d3e868feba477deda86fe09715abd611158", (uint64_t)"BCM4377B2", (uint64_t)"MUR", (uint64_t)sub_10002C32C, (uint64_t)sub_10002C3F0, (uint64_t)sub_10002C400, (uint64_t)"BCM4377B2_21.1.238.6949_PCIE_Genie_OS_MUR_20221212.bin", (uint64_t)"BCM4377B2_*_Genie_OS_MUR_*", 0x37CA6u, 0, (uint64_t)"65ede5e78cb6d090596b8d521e59b3ea60fc87d8c96e96b45909e2bd77618440", 0);
}

uint64_t sub_100021C30()
{
  return sub_100015BE4((uint64_t)"21419d3e868feba477deda86fe09715abd611158", (uint64_t)"BCM4377B2", (uint64_t)"USI", (uint64_t)sub_10002C460, (uint64_t)sub_10002C524, (uint64_t)sub_10002C534, (uint64_t)"BCM4377B2_21.1.238.6950_PCIE_Genie_OS_USI_20221212.bin", (uint64_t)"BCM4377B2_*_Genie_OS_USI_*", 0x37CA6u, 0, (uint64_t)"52d9ed0ef51368235ced2eb5ba2bad17f381b70f2fee8dba7a5a23a9b4b65d0b", 0);
}

uint64_t sub_100021CA8()
{
  return sub_100015BE4((uint64_t)"5f77620e1b58b059cd4c6be0a3568d4e5f7d2492", (uint64_t)"BCM4357B1", (uint64_t)"MUR", (uint64_t)sub_10002C594, (uint64_t)sub_10002C75C, (uint64_t)sub_10002C76C, (uint64_t)"BCM4357B1_19.1.282.5167_Yoda_OS_MUR_20210524.hcd", 0, 0x2A1A9u, (uint64_t)&unk_10020357C, 0, 0);
}

uint64_t sub_100021D1C()
{
  return sub_10001896C((uint64_t)"5f77620e1b58b059cd4c6be0a3568d4e5f7d2492", (uint64_t)&unk_10022D726, 210);
}

uint64_t sub_100021D34()
{
  return sub_100015BE4((uint64_t)"5f77620e1b58b059cd4c6be0a3568d4e5f7d2492", (uint64_t)"BCM4357B1", (uint64_t)"USI", (uint64_t)sub_10002C7F4, (uint64_t)sub_10002C9BC, (uint64_t)sub_10002C9CC, (uint64_t)"BCM4357B1_19.1.282.5168_Yoda_OS_USI_20210524.hcd", 0, 0x2A1A6u, (uint64_t)&unk_10022D7F8, 0, 0);
}

uint64_t sub_100021DA8()
{
  return sub_10001896C((uint64_t)"5f77620e1b58b059cd4c6be0a3568d4e5f7d2492", (uint64_t)&unk_10025799F, 210);
}

uint64_t sub_100021DC0()
{
  return sub_100015BE4((uint64_t)"4e9bbf98c3d9b4e58450eb4d7a2cc2a4464418cf", (uint64_t)"BCM4378B1", (uint64_t)"MUR", (uint64_t)sub_10002CA54, (uint64_t)sub_10002CB18, (uint64_t)sub_10002CB28, (uint64_t)"BCM4378B1_22.1.534.3837_PCIE_Moana_OS_MUR_20240415.bin", (uint64_t)"BCM4378B1_*_Moana_OS_MUR_*", 0x5AD97u, 0, (uint64_t)"6baa8a79e22e0ba2db76f6b975f06a1ed6dbe833885d0452fb6a046aa0890a21", 0);
}

uint64_t sub_100021E38()
{
  return sub_100015BE4((uint64_t)"4e9bbf98c3d9b4e58450eb4d7a2cc2a4464418cf", (uint64_t)"BCM4378B1", (uint64_t)"USI", (uint64_t)sub_10002CB88, (uint64_t)sub_10002CC4C, (uint64_t)sub_10002CC5C, (uint64_t)"BCM4378B1_22.1.534.3838_PCIE_Moana_OS_USI_20240415.bin", (uint64_t)"BCM4378B1_*_Moana_OS_USI_*", 0x5AD97u, 0, (uint64_t)"59bf88003f21f29a799c3c05fa960f48de3e5ba194c366a023db4089e5297842", 0);
}

uint64_t sub_100021EB0()
{
  return sub_100015BE4((uint64_t)"fc9b492bd286df58e958cf073cbb0d97ab185dfc", (uint64_t)"BCM4378B1", (uint64_t)"MUR", (uint64_t)sub_10002CCBC, (uint64_t)sub_10002CD80, (uint64_t)sub_10002CD90, (uint64_t)"BCM4378B1_22.1.534.3835_PCIE_Hei_OS_MUR_20240415.bin", (uint64_t)"BCM4378B1_*_Hei_OS_MUR_*", 0x5AD95u, 0, (uint64_t)"6f3246e31810541910d7374533c96eea4abf58651ed57d3a64955b0f194a916b", 0);
}

uint64_t sub_100021F28()
{
  return sub_100015BE4((uint64_t)"fc9b492bd286df58e958cf073cbb0d97ab185dfc", (uint64_t)"BCM4378B1", (uint64_t)"USI", (uint64_t)sub_10002CDF0, (uint64_t)sub_10002CEB4, (uint64_t)sub_10002CEC4, (uint64_t)"BCM4378B1_22.1.534.3836_PCIE_Hei_OS_USI_20240415.bin", (uint64_t)"BCM4378B1_*_Hei_OS_USI_*", 0x5AD95u, 0, (uint64_t)"67771b9652d13f178bf6d12d08da0efc232cb73bac282e0f20a9f80c52ec0d30", 0);
}

uint64_t sub_100021FA0()
{
  return sub_100015BE4((uint64_t)"db26827f74a26f71e1b75fe586ff403e56d4f7f1", (uint64_t)"BCM4378B1", (uint64_t)"MUR", (uint64_t)sub_10002CF24, (uint64_t)sub_10002CFE8, (uint64_t)sub_10002CFF8, (uint64_t)"BCM4378B1_22.1.534.3839_PCIE_Tala_OS_MUR_20240415.bin", (uint64_t)"BCM4378B1_*_Tala_OS_MUR_*", 0x5AD96u, 0, (uint64_t)"769dcfa9d06c1ff7c8186df40e58dcafcfce140da03ce9c1f25874513ae1bc09", 0);
}

uint64_t sub_100022018()
{
  return sub_100015BE4((uint64_t)"db26827f74a26f71e1b75fe586ff403e56d4f7f1", (uint64_t)"BCM4378B1", (uint64_t)"USI", (uint64_t)sub_10002D058, (uint64_t)sub_10002D11C, (uint64_t)sub_10002D12C, (uint64_t)"BCM4378B1_22.1.534.3840_PCIE_Tala_OS_USI_20240415.bin", (uint64_t)"BCM4378B1_*_Tala_OS_USI_*", 0x5AD96u, 0, (uint64_t)"273e3a4f67d491b85b7502905e50abfffeb1813e70c435a18f6daa98effa9389", 0);
}

uint64_t sub_100022090()
{
  return sub_100015BE4((uint64_t)"c459fdb0eef455588dbc6f587c20a5372792bbf8", (uint64_t)"BCM4378B1", (uint64_t)"MUR", (uint64_t)sub_10002D18C, (uint64_t)sub_10002D250, (uint64_t)sub_10002D260, (uint64_t)"BCM4378B1_22.1.534.3841_PCIE_Fiti_OS_MUR_20240415.bin", (uint64_t)"BCM4378B1_*_Fiti_OS_MUR_*", 0x58AD6u, 0, (uint64_t)"b70dd1a6125dde7cd46508ebd9c7829196cea56da6fd358565f052c5117bd1bb", 0);
}

uint64_t sub_100022108()
{
  return sub_100015BE4((uint64_t)"c459fdb0eef455588dbc6f587c20a5372792bbf8", (uint64_t)"BCM4378B1", (uint64_t)"USI", (uint64_t)sub_10002D2C0, (uint64_t)sub_10002D384, (uint64_t)sub_10002D394, (uint64_t)"BCM4378B1_22.1.534.3842_PCIE_Fiti_OS_USI_20240415.bin", (uint64_t)"BCM4378B1_*_Fiti_OS_USI_*", 0x58AD6u, 0, (uint64_t)"735641895aeacb3eb885a463e387249d6b7c7ac4b3dc9a6ac5ddc26f7b56b54f", 0);
}

uint64_t sub_100022180()
{
  return sub_100015BE4((uint64_t)"ddeeb91dc0e9cf1f146bff1f0289ec95d9c7e43f", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10002D3F4, (uint64_t)sub_10002D4B8, (uint64_t)sub_10002D4C8, (uint64_t)"BCM4387C2_22.1.602.2824_PCIE_Pistachio_CLPC_OS_USI_20240729.bin", (uint64_t)"BCM4387C2_*_Pistachio*_OS_USI_*", 0x854D9u, 0, (uint64_t)"3cbe27985b2b6581c623afcee3a412d9423d0fe1939b4db93a015ff7899eb45a", 0);
}

uint64_t sub_1000221F8()
{
  return sub_100015BE4((uint64_t)"ddeeb91dc0e9cf1f146bff1f0289ec95d9c7e43f", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10002D528, (uint64_t)sub_10002D5EC, (uint64_t)sub_10002D5FC, (uint64_t)"BCM4387C2_22.1.602.2823_PCIE_Pistachio_CLPC_OS_STATS_20240729.bin", (uint64_t)"BCM4387C2_*_Pistachio*_OS_STATS_*", 0x854DBu, 0, (uint64_t)"d1447729c1b05be6bcb68605d08874d6f4e230e0a3df2223669e1fa1951cb3eb", 0);
}

uint64_t sub_100022270()
{
  return sub_100016780((uint64_t)"ddeeb91dc0e9cf1f146bff1f0289ec95d9c7e43f", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)"BCM4387C2_22.1.602.2822_PCIE_Pistachio_CLPC_OS_LPM_USI_20240729.bin", 546009, (uint64_t)"fbf2cf05007d90a6daa6474c2eef6d1cdf7dd84b86b4f6167d0c4dc24c2a3f6c");
}

uint64_t sub_1000222A4()
{
  return sub_100016780((uint64_t)"ddeeb91dc0e9cf1f146bff1f0289ec95d9c7e43f", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)"BCM4387C2_22.1.602.2821_PCIE_Pistachio_CLPC_OS_LPM_STATS_20240729.bin", 546011, (uint64_t)"c1bd64f3f6eda1d46ba53ef4f32155d6c31ff48112e4b9d9deb47274eb0235ae");
}

uint64_t sub_1000222D8()
{
  return sub_100015BE4((uint64_t)"1297870ae430050765cdaff76c1998211f07221a", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10002D65C, (uint64_t)sub_10002D720, (uint64_t)sub_10002D730, (uint64_t)"BCM4387C2_22.1.602.2820_PCIE_Cashew_CLPC_OS_USI_20240729.bin", (uint64_t)"BCM4387C2_*_Cashew*_OS_USI_*", 0x854D6u, 0, (uint64_t)"a3fc67d71f4eea4b9dac0fe1ca37a9de83f4a6fd43f760e3ffad489e1d730815", 0);
}

uint64_t sub_100022350()
{
  return sub_100015BE4((uint64_t)"1297870ae430050765cdaff76c1998211f07221a", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10002D790, (uint64_t)sub_10002D854, (uint64_t)sub_10002D864, (uint64_t)"BCM4387C2_22.1.602.2819_PCIE_Cashew_CLPC_OS_STATS_20240729.bin", (uint64_t)"BCM4387C2_*_Cashew*_OS_STATS_*", 0x854D8u, 0, (uint64_t)"9b1e5b8f1b87ae8fd6773c2989520c00de8d7789a8c9c1ca58d536896a1613ab", 0);
}

uint64_t sub_1000223C8()
{
  return sub_100016780((uint64_t)"1297870ae430050765cdaff76c1998211f07221a", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)"BCM4387C2_22.1.602.2818_PCIE_Cashew_CLPC_OS_LPM_USI_20240729.bin", 546006, (uint64_t)"1658fa47e461b5c73a1b7a1a983fcade8c6a2a7888f684972e519cdab512e6ee");
}

uint64_t sub_1000223FC()
{
  return sub_100016780((uint64_t)"1297870ae430050765cdaff76c1998211f07221a", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)"BCM4387C2_22.1.602.2817_PCIE_Cashew_CLPC_OS_LPM_STATS_20240729.bin", 546008, (uint64_t)"dda1a4e96cffe8ebd85c96a75c8c380a3770413f483afe0acc53ac0ebc917643");
}

uint64_t sub_100022430()
{
  return sub_100015BE4((uint64_t)"80c4b6a6939b496300b06364e53cc0e5850b2fe9", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10002D8C4, (uint64_t)sub_10002D988, (uint64_t)sub_10002D998, (uint64_t)"BCM4387C2_22.1.602.2800_PCIE_Hazelnut_CLPC_OS_USI_20240729.bin", (uint64_t)"BCM4387C2_*_Hazelnut*_OS_USI_*", 0x854D8u, 0, (uint64_t)"18597769def3a66223a772e8135a1111fe7bbf65658361eebb7f335d372458ba", 0);
}

uint64_t sub_1000224A8()
{
  return sub_100015BE4((uint64_t)"80c4b6a6939b496300b06364e53cc0e5850b2fe9", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10002D9F8, (uint64_t)sub_10002DABC, (uint64_t)sub_10002DACC, (uint64_t)"BCM4387C2_22.1.602.2799_PCIE_Hazelnut_CLPC_OS_STATS_20240729.bin", (uint64_t)"BCM4387C2_*_Hazelnut*_OS_STATS_*", 0x854DAu, 0, (uint64_t)"579d35f0d14ca7d21f84bd7877457bace1ca5f835866160ae1fd119f8a3bb7c9", 0);
}

uint64_t sub_100022520()
{
  return sub_100016780((uint64_t)"80c4b6a6939b496300b06364e53cc0e5850b2fe9", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)"BCM4387C2_22.1.602.2798_PCIE_Hazelnut_CLPC_OS_LPM_USI_20240729.bin", 546008, (uint64_t)"13b4a0ec54f3a7701f49380ffb0ead84b8c77ae40706b890fd232a11c6f69c00");
}

uint64_t sub_100022554()
{
  return sub_100016780((uint64_t)"80c4b6a6939b496300b06364e53cc0e5850b2fe9", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)"BCM4387C2_22.1.602.2797_PCIE_Hazelnut_CLPC_OS_LPM_STATS_20240729.bin", 546010, (uint64_t)"de9b1ac90b1d83ac1835c438152b7e8983b8cec88ea7469a0d10c5627dbb3b07");
}

uint64_t sub_100022588()
{
  return sub_100015BE4((uint64_t)"a1ff9324325843097f0e83afdb841592167ae25d", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10002DB2C, (uint64_t)sub_10002DBF0, (uint64_t)sub_10002DC00, (uint64_t)"BCM4387C2_22.1.602.2816_PCIE_Almond_CLPC_OS_USI_20240729.bin", (uint64_t)"BCM4387C2_*_Almond*_OS_USI_*", 0x854D6u, 0, (uint64_t)"31367935ea84db51b6ec018088075037fcebba661f582c9f72f0770b265d3fd9", 0);
}

uint64_t sub_100022600()
{
  return sub_100015BE4((uint64_t)"a1ff9324325843097f0e83afdb841592167ae25d", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10002DC60, (uint64_t)sub_10002DD24, (uint64_t)sub_10002DD34, (uint64_t)"BCM4387C2_22.1.602.2815_PCIE_Almond_CLPC_OS_STATS_20240729.bin", (uint64_t)"BCM4387C2_*_Almond*_OS_STATS_*", 0x854D8u, 0, (uint64_t)"7a3e943dce45a0be3f660ebe65240b461cb0a4ea6cd00d70569e81419ba529c5", 0);
}

uint64_t sub_100022678()
{
  return sub_100016780((uint64_t)"a1ff9324325843097f0e83afdb841592167ae25d", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)"BCM4387C2_22.1.602.2814_PCIE_Almond_CLPC_OS_LPM_USI_20240729.bin", 546006, (uint64_t)"39d45f591f65a1d31d0952bc41170f3c1c26d432c94f41a55d30c85fb78116d4");
}

uint64_t sub_1000226AC()
{
  return sub_100016780((uint64_t)"a1ff9324325843097f0e83afdb841592167ae25d", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)"BCM4387C2_22.1.602.2813_PCIE_Almond_CLPC_OS_LPM_STATS_20240729.bin", 546008, (uint64_t)"182eb631043eb15330f64cc84b088ecbfd20a6f18c628b86f811bb992018b80b");
}

uint64_t sub_1000226E0()
{
  return sub_100015BE4((uint64_t)"e153ccb9f39350dfd963a37f6de50e33b9f05607", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10002DD94, (uint64_t)sub_10002DE58, (uint64_t)sub_10002DE68, (uint64_t)"BCM4387C2_22.1.602.2848_PCIE_Mimosa_CLPC_OS_USI_20240729.bin", (uint64_t)"BCM4387C2_*_Mimosa*_OS_USI_*", 0x86CCCu, 0, (uint64_t)"42e93420a19adcbfb46e55102ad543c76fd4b02adc82bead5f3ab482176c08ac", 0);
}

uint64_t sub_100022758()
{
  return sub_100015BE4((uint64_t)"e153ccb9f39350dfd963a37f6de50e33b9f05607", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10002DEC8, (uint64_t)sub_10002DF8C, (uint64_t)sub_10002DF9C, (uint64_t)"BCM4387C2_22.1.602.2847_PCIE_Mimosa_CLPC_OS_STATS_20240729.bin", (uint64_t)"BCM4387C2_*_Mimosa*_OS_STATS_*", 0x86CCEu, 0, (uint64_t)"31de9767d7d8d941db5edcc464534c39a0be330195f001e813aebc137c0ea9a2", 0);
}

uint64_t sub_1000227D0()
{
  return sub_100016780((uint64_t)"e153ccb9f39350dfd963a37f6de50e33b9f05607", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)"BCM4387C2_22.1.602.2846_PCIE_Mimosa_CLPC_OS_LPM_USI_20240729.bin", 552140, (uint64_t)"56b1899fc9eda0cecf5b24b08801083d0f4046b93f0fab4b3f50f9011c8c37d4");
}

uint64_t sub_100022804()
{
  return sub_100016780((uint64_t)"e153ccb9f39350dfd963a37f6de50e33b9f05607", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)"BCM4387C2_22.1.602.2845_PCIE_Mimosa_CLPC_OS_LPM_STATS_20240729.bin", 552142, (uint64_t)"4550749102b29fdbff29cc13240ede01f102dc32bc082d0b59b194787fda6d85");
}

uint64_t sub_100022838()
{
  return sub_100015BE4((uint64_t)"5372a3e8dacaa21c3b4ef319f8d37b32a90a9f28", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10002DFFC, (uint64_t)sub_10002E0C0, (uint64_t)sub_10002E0D0, (uint64_t)"BCM4387C2_22.1.602.2840_PCIE_Lilac_CLPC_OS_USI_20240729.bin", (uint64_t)"BCM4387C2_*_Lilac*_OS_USI_*", 0x86CD0u, 0, (uint64_t)"758c21cbe5f256ec3bcea4b95ff9ccba5fffc49730f5954004402bf67aae6a1f", 0);
}

uint64_t sub_1000228B0()
{
  return sub_100015BE4((uint64_t)"5372a3e8dacaa21c3b4ef319f8d37b32a90a9f28", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10002E130, (uint64_t)sub_10002E1F4, (uint64_t)sub_10002E204, (uint64_t)"BCM4387C2_22.1.602.2839_PCIE_Lilac_CLPC_OS_STATS_20240729.bin", (uint64_t)"BCM4387C2_*_Lilac*_OS_STATS_*", 0x86CCDu, 0, (uint64_t)"d7d7fbabe6cc1ebaf6cc276f40b0cb106b09856e48bd12bdae778fd0bcc84eb8", 0);
}

uint64_t sub_100022928()
{
  return sub_100016780((uint64_t)"5372a3e8dacaa21c3b4ef319f8d37b32a90a9f28", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)"BCM4387C2_22.1.602.2838_PCIE_Lilac_CLPC_OS_LPM_USI_20240729.bin", 552144, (uint64_t)"d7794991fe8ebb75132e2c3628c8dfd2f341121a16f0ad425421ce9bf80788aa");
}

uint64_t sub_10002295C()
{
  return sub_100016780((uint64_t)"5372a3e8dacaa21c3b4ef319f8d37b32a90a9f28", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)"BCM4387C2_22.1.602.2837_PCIE_Lilac_CLPC_OS_LPM_STATS_20240729.bin", 552141, (uint64_t)"f3ac37a69ef5e8e76945b150f0c3ff7f22323d94004c292a8855b641f3911f8f");
}

uint64_t sub_100022990()
{
  return sub_100015BE4((uint64_t)"1ee557dba0574cdd597fe5a73c6a7b25c332872a", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10002E264, (uint64_t)sub_10002E328, (uint64_t)sub_10002E338, (uint64_t)"BCM4387C2_22.1.602.2836_PCIE_Acacia_CLPC_OS_USI_20240729.bin", (uint64_t)"BCM4387C2_*_Acacia*_OS_USI_*", 0x86CCCu, 0, (uint64_t)"2b39002a1946e6ebf3b6cb75161523b7cddf33bb088dfa6087dd62dc20f1fff7", 0);
}

uint64_t sub_100022A08()
{
  return sub_100015BE4((uint64_t)"1ee557dba0574cdd597fe5a73c6a7b25c332872a", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10002E398, (uint64_t)sub_10002E45C, (uint64_t)sub_10002E46C, (uint64_t)"BCM4387C2_22.1.602.2835_PCIE_Acacia_CLPC_OS_STATS_20240729.bin", (uint64_t)"BCM4387C2_*_Acacia*_OS_STATS_*", 0x86CCEu, 0, (uint64_t)"6bd5577bfd78a2bb698dd2aa6f2568653acf2201ce87e4feefd4c7ca7a5e5d67", 0);
}

uint64_t sub_100022A80()
{
  return sub_100016780((uint64_t)"1ee557dba0574cdd597fe5a73c6a7b25c332872a", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)"BCM4387C2_22.1.602.2834_PCIE_Acacia_CLPC_OS_LPM_USI_20240729.bin", 552140, (uint64_t)"9137e6439e4a56a3e24255c2bbcf5a73cc46adc9b5604e7f053c36a0edce547b");
}

uint64_t sub_100022AB4()
{
  return sub_100016780((uint64_t)"1ee557dba0574cdd597fe5a73c6a7b25c332872a", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)"BCM4387C2_22.1.602.2833_PCIE_Acacia_CLPC_OS_LPM_STATS_20240729.bin", 552142, (uint64_t)"ee0823da6520ec8478433933be7a0b51297df116b58edcedf3572a0f6c7a4a97");
}

uint64_t sub_100022AE8()
{
  return sub_100015BE4((uint64_t)"e187b2b2dfa8f91c42089c199b6af4f1c633ae9e", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10002E4CC, (uint64_t)sub_10002E590, (uint64_t)sub_10002E5A0, (uint64_t)"BCM4387C2_22.1.602.2808_PCIE_Camellia_CLPC_OS_USI_20240729.bin", (uint64_t)"BCM4387C2_*_Camellia*_OS_USI_*", 0x86CCEu, 0, (uint64_t)"4069b5f80e7c59ac23ed840373772e0640eaad66b90f8f0bc5561305ffa2a9dd", 0);
}

uint64_t sub_100022B60()
{
  return sub_100015BE4((uint64_t)"e187b2b2dfa8f91c42089c199b6af4f1c633ae9e", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10002E600, (uint64_t)sub_10002E6C4, (uint64_t)sub_10002E6D4, (uint64_t)"BCM4387C2_22.1.602.2807_PCIE_Camellia_CLPC_OS_STATS_20240729.bin", (uint64_t)"BCM4387C2_*_Camellia*_OS_STATS_*", 0x86CD0u, 0, (uint64_t)"212ea39c94ded7945c98c89b249bbf441b0d322a0a48680592f91a4b859d10e7", 0);
}

uint64_t sub_100022BD8()
{
  return sub_100016780((uint64_t)"e187b2b2dfa8f91c42089c199b6af4f1c633ae9e", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)"BCM4387C2_22.1.602.2806_PCIE_Camellia_CLPC_OS_LPM_USI_20240729.bin", 552142, (uint64_t)"2e3f5c227d05b65a5d8ec761b9e80e57c7c1d81ea576131d814ef6b300b76527");
}

uint64_t sub_100022C0C()
{
  return sub_100016780((uint64_t)"e187b2b2dfa8f91c42089c199b6af4f1c633ae9e", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)"BCM4387C2_22.1.602.2805_PCIE_Camellia_CLPC_OS_LPM_STATS_20240729.bin", 552144, (uint64_t)"581545de32ab727ab9627b88f78537454e2a3e156fceb7d55d85f9848e35a4fa");
}

uint64_t sub_100022C40()
{
  return sub_100015BE4((uint64_t)"3bcf064f8c14171ba8fcea074bd60aed79caa8aa", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10002E734, (uint64_t)sub_10002E7F8, (uint64_t)sub_10002E808, (uint64_t)"BCM4387C2_22.1.602.2844_PCIE_Mahonia_CLPC_OS_USI_20240729.bin", (uint64_t)"BCM4387C2_*_Mahonia*_OS_USI_*", 0x86E19u, 0, (uint64_t)"2f6e63a73faeadf2d987c251f82d1d35ad5939b146ed090a2c8be612766e0b1b", 0);
}

uint64_t sub_100022CB8()
{
  return sub_100015BE4((uint64_t)"3bcf064f8c14171ba8fcea074bd60aed79caa8aa", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10002E868, (uint64_t)sub_10002E92C, (uint64_t)sub_10002E93C, (uint64_t)"BCM4387C2_22.1.602.2843_PCIE_Mahonia_CLPC_OS_STATS_20240729.bin", (uint64_t)"BCM4387C2_*_Mahonia*_OS_STATS_*", 0x86E1Bu, 0, (uint64_t)"d86298f97bc8e83984adcc1e168abba7636d4bfa445bf495488142fd61d2120b", 0);
}

uint64_t sub_100022D30()
{
  return sub_100016780((uint64_t)"3bcf064f8c14171ba8fcea074bd60aed79caa8aa", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)"BCM4387C2_22.1.602.2842_PCIE_Mahonia_CLPC_OS_LPM_USI_20240729.bin", 552473, (uint64_t)"71cbcb230b2c2a098789ae093c85678d231b3cebc7a7a8fa0d7471d5c5100f11");
}

uint64_t sub_100022D64()
{
  return sub_100016780((uint64_t)"3bcf064f8c14171ba8fcea074bd60aed79caa8aa", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)"BCM4387C2_22.1.602.2841_PCIE_Mahonia_CLPC_OS_LPM_STATS_20240729.bin", 552475, (uint64_t)"aa01cd864afb926b1dac180e7af67dfc1a412767648fc60d174c814877f240ff");
}

uint64_t sub_100022D98()
{
  return sub_100015BE4((uint64_t)"c495d34c5d5b2b33e0e978ef0aeed9ef9654cb1f", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10002E99C, (uint64_t)sub_10002EA60, (uint64_t)sub_10002EA70, (uint64_t)"BCM4387C2_22.1.602.2876_PCIE_Koa_CLPC_OS_USI_20240729.bin", (uint64_t)"BCM4387C2_*_Koa*_OS_USI_*", 0x871B8u, 0, (uint64_t)"5b5f0d91821a570157d524d48d6efd00beb7ef4e1f961c650fc6b2c2562a0f89", 0);
}

uint64_t sub_100022E10()
{
  return sub_100015BE4((uint64_t)"c495d34c5d5b2b33e0e978ef0aeed9ef9654cb1f", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10002EAD0, (uint64_t)sub_10002EB94, (uint64_t)sub_10002EBA4, (uint64_t)"BCM4387C2_22.1.602.2875_PCIE_Koa_CLPC_OS_STATS_20240729.bin", (uint64_t)"BCM4387C2_*_Koa*_OS_STATS_*", 0x871BAu, 0, (uint64_t)"d15d232574b54f6d646c1f3d9acd6919869c5d74d22ccbb6d432406ab787156b", 0);
}

uint64_t sub_100022E88()
{
  return sub_100015BE4((uint64_t)"c495d34c5d5b2b33e0e978ef0aeed9ef9654cb1f", (uint64_t)"BCM4387C2", (uint64_t)"ALL", (uint64_t)sub_10002EC04, (uint64_t)sub_10002ECC8, (uint64_t)sub_10002ECD8, (uint64_t)"BCM4387C2_22.1.602.2871_PCIE_Koa_CLPC_OS_Amkor_20240729.bin", (uint64_t)"BCM4387C2_*_Koa*_OS_Amkor_*", 0x871BAu, 0, (uint64_t)"8b36553c8dfb0abbccaffa38607c59b246977abd6c97fdfa03d8fa8f1a7ccbf8", 0);
}

uint64_t sub_100022F00()
{
  return sub_100016780((uint64_t)"c495d34c5d5b2b33e0e978ef0aeed9ef9654cb1f", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)"BCM4387C2_22.1.602.2874_PCIE_Koa_CLPC_OS_LPM_USI_20240729.bin", 553400, (uint64_t)"29878fced8eba782a39b6c1353a13d1cba6d3b81627fcf5cb938dab15bcb87a6");
}

uint64_t sub_100022F34()
{
  return sub_100016780((uint64_t)"c495d34c5d5b2b33e0e978ef0aeed9ef9654cb1f", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)"BCM4387C2_22.1.602.2873_PCIE_Koa_CLPC_OS_LPM_STATS_20240729.bin", 553402, (uint64_t)"c3647d510fdf8b31cd42a5b09482a6597240351ad877d1e5d81ba88829f305b6");
}

uint64_t sub_100022F68()
{
  return sub_100016780((uint64_t)"c495d34c5d5b2b33e0e978ef0aeed9ef9654cb1f", (uint64_t)"BCM4387C2", (uint64_t)"ALL", (uint64_t)"BCM4387C2_22.1.602.2872_PCIE_Koa_CLPC_OS_LPM_Amkor_20240729.bin", 553402, (uint64_t)"a201e03ebcdba025057485e38646e0629c2a58258ae327ba319a476f999976f7");
}

uint64_t sub_100022F9C()
{
  return sub_100015BE4((uint64_t)"d2484c5800370d4dbf279bc608211742be2afb41", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10002ED38, (uint64_t)sub_10002EDFC, (uint64_t)sub_10002EE0C, (uint64_t)"BCM4387C2_22.1.602.2870_PCIE_Oakley_CLPC_OS_USI_20240729.bin", (uint64_t)"BCM4387C2_*_Oakley*_OS_USI_*", 0x871BBu, 0, (uint64_t)"462ef0518cda6662e2a0b6fde5ae379e3b0c495bef145465c0eaa5b040dea145", 0);
}

uint64_t sub_100023014()
{
  return sub_100015BE4((uint64_t)"d2484c5800370d4dbf279bc608211742be2afb41", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10002EE6C, (uint64_t)sub_10002EF30, (uint64_t)sub_10002EF40, (uint64_t)"BCM4387C2_22.1.602.2869_PCIE_Oakley_CLPC_OS_STATS_20240729.bin", (uint64_t)"BCM4387C2_*_Oakley*_OS_STATS_*", 0x871BDu, 0, (uint64_t)"ebbbc1b90622dfeb595eb63dbf7499d1afcbc99ffa82d792f1a000815a834a71", 0);
}

uint64_t sub_10002308C()
{
  return sub_100015BE4((uint64_t)"d2484c5800370d4dbf279bc608211742be2afb41", (uint64_t)"BCM4387C2", (uint64_t)"ALL", (uint64_t)sub_10002EFA0, (uint64_t)sub_10002F064, (uint64_t)sub_10002F074, (uint64_t)"BCM4387C2_22.1.602.2865_PCIE_Oakley_CLPC_OS_Amkor_20240729.bin", (uint64_t)"BCM4387C2_*_Oakley*_OS_Amkor_*", 0x871BDu, 0, (uint64_t)"2bf648ec1705be38a31c9b38329c82b974c1edd14fd3a02f09374848aeb71c80", 0);
}

uint64_t sub_100023104()
{
  return sub_100016780((uint64_t)"d2484c5800370d4dbf279bc608211742be2afb41", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)"BCM4387C2_22.1.602.2868_PCIE_Oakley_CLPC_OS_LPM_USI_20240729.bin", 553403, (uint64_t)"6d775c5234d89f517b321752ce22e45f2a8d331da2d654a7ae5ad8e0fc388cbf");
}

uint64_t sub_100023138()
{
  return sub_100016780((uint64_t)"d2484c5800370d4dbf279bc608211742be2afb41", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)"BCM4387C2_22.1.602.2867_PCIE_Oakley_CLPC_OS_LPM_STATS_20240729.bin", 553405, (uint64_t)"4bc5d1b4c94e7b82bc9b3f3f0a9c067c3188e7dda50bda35e219b05800e83f79");
}

uint64_t sub_10002316C()
{
  return sub_100016780((uint64_t)"d2484c5800370d4dbf279bc608211742be2afb41", (uint64_t)"BCM4387C2", (uint64_t)"ALL", (uint64_t)"BCM4387C2_22.1.602.2866_PCIE_Oakley_CLPC_OS_LPM_Amkor_20240729.bin", 553405, (uint64_t)"6adf46f07a19b6b2bb16e8b5dde6c4563a6461c85c30dfc2df0a6bdc1259f059");
}

uint64_t sub_1000231A0()
{
  return sub_100015BE4((uint64_t)"d3b5ffca33e4604460655adfd77fdfa4757e7e93", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10002F0D4, (uint64_t)sub_10002F198, (uint64_t)sub_10002F1A8, (uint64_t)"BCM4387C2_22.1.602.2796_PCIE_Juniper_CLPC_OS_USI_20240729.bin", (uint64_t)"BCM4387C2_*_Juniper*_OS_USI_*", 0x871BCu, 0, (uint64_t)"de5279f5261e081de8e498d3e1cc30fcac6e099bac17634646d75082db53fa18", 0);
}

uint64_t sub_100023218()
{
  return sub_100015BE4((uint64_t)"d3b5ffca33e4604460655adfd77fdfa4757e7e93", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10002F208, (uint64_t)sub_10002F2CC, (uint64_t)sub_10002F2DC, (uint64_t)"BCM4387C2_22.1.602.2795_PCIE_Juniper_CLPC_OS_STATS_20240729.bin", (uint64_t)"BCM4387C2_*_Juniper*_OS_STATS_*", 0x871BEu, 0, (uint64_t)"f01161ff99244a4f446c5ee340712b4cd6733acd54668f3b6750233e5d7def70", 0);
}

uint64_t sub_100023290()
{
  return sub_100015BE4((uint64_t)"d3b5ffca33e4604460655adfd77fdfa4757e7e93", (uint64_t)"BCM4387C2", (uint64_t)"ALL", (uint64_t)sub_10002F33C, (uint64_t)sub_10002F400, (uint64_t)sub_10002F410, (uint64_t)"BCM4387C2_22.1.602.2791_PCIE_Juniper_CLPC_OS_Amkor_20240729.bin", (uint64_t)"BCM4387C2_*_Juniper*_OS_Amkor_*", 0x871BEu, 0, (uint64_t)"3c91d62365062b491cafaf66d3caf91369dd8b1512ef3cd2f222deda2b4342c8", 0);
}

uint64_t sub_100023308()
{
  return sub_100016780((uint64_t)"d3b5ffca33e4604460655adfd77fdfa4757e7e93", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)"BCM4387C2_22.1.602.2794_PCIE_Juniper_CLPC_OS_LPM_USI_20240729.bin", 553404, (uint64_t)"84d165d4e7b0dfcb395eabce4aa8181b49e386c13a26a012e950cd162fa7d752");
}

uint64_t sub_10002333C()
{
  return sub_100016780((uint64_t)"d3b5ffca33e4604460655adfd77fdfa4757e7e93", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)"BCM4387C2_22.1.602.2793_PCIE_Juniper_CLPC_OS_LPM_STATS_20240729.bin", 553406, (uint64_t)"01d8b93565d3545e6f2de2f01ffba851ee9a9dc5996b6fe33760732b8e06a412");
}

uint64_t sub_100023370()
{
  return sub_100016780((uint64_t)"d3b5ffca33e4604460655adfd77fdfa4757e7e93", (uint64_t)"BCM4387C2", (uint64_t)"ALL", (uint64_t)"BCM4387C2_22.1.602.2792_PCIE_Juniper_CLPC_OS_LPM_Amkor_20240729.bin", 553406, (uint64_t)"a4f136ff2467d427ece11ff312340ff07d00ac696c0d1284052e021d6655a331");
}

uint64_t sub_1000233A4()
{
  return sub_100015BE4((uint64_t)"96c26ae5143d4462c09151ca85b7957d748d1cc8", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10002F470, (uint64_t)sub_10002F534, (uint64_t)sub_10002F544, (uint64_t)"BCM4387C2_22.1.602.2864_PCIE_Nash_CLPC_OS_USI_20240729.bin", (uint64_t)"BCM4387C2_*_Nash*_OS_USI_*", 0x871B9u, 0, (uint64_t)"b2cec24291413183c73e4a9c5b510930088c4721546b3072de0ab7c827d7721b", 0);
}

uint64_t sub_10002341C()
{
  return sub_100015BE4((uint64_t)"96c26ae5143d4462c09151ca85b7957d748d1cc8", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10002F5A4, (uint64_t)sub_10002F668, (uint64_t)sub_10002F678, (uint64_t)"BCM4387C2_22.1.602.2863_PCIE_Nash_CLPC_OS_STATS_20240729.bin", (uint64_t)"BCM4387C2_*_Nash*_OS_STATS_*", 0x871BBu, 0, (uint64_t)"ac2d927070fe37dd9c7cad8ece04f552c40a579ad6f6e3dda0ccd978d8b287fa", 0);
}

uint64_t sub_100023494()
{
  return sub_100015BE4((uint64_t)"96c26ae5143d4462c09151ca85b7957d748d1cc8", (uint64_t)"BCM4387C2", (uint64_t)"ALL", (uint64_t)sub_10002F6D8, (uint64_t)sub_10002F79C, (uint64_t)sub_10002F7AC, (uint64_t)"BCM4387C2_22.1.602.2859_PCIE_Nash_CLPC_OS_Amkor_20240729.bin", (uint64_t)"BCM4387C2_*_Nash*_OS_Amkor_*", 0x871BBu, 0, (uint64_t)"4856760f948994c12a516334fb1a80f6ceb63c95e5d6eb282eee587b1b6708c8", 0);
}

uint64_t sub_10002350C()
{
  return sub_100016780((uint64_t)"96c26ae5143d4462c09151ca85b7957d748d1cc8", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)"BCM4387C2_22.1.602.2862_PCIE_Nash_CLPC_OS_LPM_USI_20240729.bin", 553401, (uint64_t)"1beeba2a4d3d57d70b977143f8dc1284134d8427a4d3d8cbf34fa589211ce35a");
}

uint64_t sub_100023540()
{
  return sub_100016780((uint64_t)"96c26ae5143d4462c09151ca85b7957d748d1cc8", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)"BCM4387C2_22.1.602.2861_PCIE_Nash_CLPC_OS_LPM_STATS_20240729.bin", 553403, (uint64_t)"6a148f7de8fdeca0b7ea3fa6b09eef8050b992e85b539f5273ae6ffa05503891");
}

uint64_t sub_100023574()
{
  return sub_100016780((uint64_t)"96c26ae5143d4462c09151ca85b7957d748d1cc8", (uint64_t)"BCM4387C2", (uint64_t)"ALL", (uint64_t)"BCM4387C2_22.1.602.2860_PCIE_Nash_CLPC_OS_LPM_Amkor_20240729.bin", 553403, (uint64_t)"b0502c2152780628dcf2444b77e77b0e39ab9470fd73fbb7c02fd0628c7eb04d");
}

uint64_t sub_1000235A8()
{
  return sub_100015BE4((uint64_t)"97c20c842033f8450421fde63adf58f999b2aadb", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10002F80C, (uint64_t)sub_10002F8D0, (uint64_t)sub_10002F8E0, (uint64_t)"BCM4387C2_22.1.602.2882_PCIE_Muscari_CLPC_OS_USI_20240729.bin", (uint64_t)"BCM4387C2_*_PCIE_Muscari_CLPC_OS_USI_*", 0x87A8Du, 0, (uint64_t)"917984b3460b9011e198be599bb0e1d91094741bb1fd7bdf158ad19dc167a878", 0);
}

uint64_t sub_100023620()
{
  return sub_100015BE4((uint64_t)"97c20c842033f8450421fde63adf58f999b2aadb", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10002F940, (uint64_t)sub_10002FA04, (uint64_t)sub_10002FA14, (uint64_t)"BCM4387C2_22.1.602.2881_PCIE_Muscari_CLPC_OS_STATS_20240729.bin", (uint64_t)"BCM4387C2_*_PCIE_Muscari_CLPC_OS_STATS_*", 0x87A8Fu, 0, (uint64_t)"ebe79a2b56bf6f3fcf9aaac7ef7593d6280f24f3ae9e8b7f2c190d1a49a01703", 0);
}

uint64_t sub_100023698()
{
  return sub_100015BE4((uint64_t)"97c20c842033f8450421fde63adf58f999b2aadb", (uint64_t)"BCM4387C2", (uint64_t)"ALL", (uint64_t)sub_10002FA74, (uint64_t)sub_10002FB38, (uint64_t)sub_10002FB48, (uint64_t)"BCM4387C2_22.1.602.2877_PCIE_Muscari_CLPC_OS_Amkor_20240729.bin", (uint64_t)"BCM4387C2_*_PCIE_Muscari_CLPC_OS_Amkor_*", 0x87A8Fu, 0, (uint64_t)"207afb212df4fc3ef7d87a7ac534850212585f0806d8c5a3bfea0f66aea2cc7b", 0);
}

uint64_t sub_100023710()
{
  return sub_100016780((uint64_t)"97c20c842033f8450421fde63adf58f999b2aadb", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)"BCM4387C2_22.1.602.2880_PCIE_Muscari_CLPC_OS_LPM_USI_20240729.bin", 555661, (uint64_t)"e9602094f77eee6db45b123a1901aa9d20cd68fbe1310407ed300289b8b5226f");
}

uint64_t sub_100023744()
{
  return sub_100016780((uint64_t)"97c20c842033f8450421fde63adf58f999b2aadb", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)"BCM4387C2_22.1.602.2879_PCIE_Muscari_CLPC_OS_LPM_STATS_20240729.bin", 555663, (uint64_t)"47a01b6c2a36b6b29f3157bb67f504f44e751687ae2355ad65dec67e4ef7a8b2");
}

uint64_t sub_100023778()
{
  return sub_100016780((uint64_t)"97c20c842033f8450421fde63adf58f999b2aadb", (uint64_t)"BCM4387C2", (uint64_t)"ALL", (uint64_t)"BCM4387C2_22.1.602.2878_PCIE_Muscari_CLPC_OS_LPM_Amkor_20240729.bin", 555663, (uint64_t)"184ad36ce54b8406410664af217f4721ceb93430da18cbfa053edfe57ff42bcf");
}

uint64_t sub_1000237AC()
{
  return sub_100015BE4((uint64_t)"2f7332dce3b75d5d7dc66131929e3ef12d12dccb", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10002FBA8, (uint64_t)sub_10002FC6C, (uint64_t)sub_10002FC7C, (uint64_t)"BCM4387C2_22.1.602.2888_PCIE_Marigold_CLPC_OS_USI_20240729.bin", (uint64_t)"BCM4387C2_*_PCIE_Marigold_CLPC_OS_USI_*", 0x87A96u, 0, (uint64_t)"de81da6085c853e3b93773aa1fe4b93a7cb50792f914032b089f9b38c9d60765", 0);
}

uint64_t sub_100023824()
{
  return sub_100015BE4((uint64_t)"2f7332dce3b75d5d7dc66131929e3ef12d12dccb", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10002FCDC, (uint64_t)sub_10002FDA0, (uint64_t)sub_10002FDB0, (uint64_t)"BCM4387C2_22.1.602.2887_PCIE_Marigold_CLPC_OS_STATS_20240729.bin", (uint64_t)"BCM4387C2_*_PCIE_Marigold_CLPC_OS_STATS_*", 0x87A98u, 0, (uint64_t)"c3df44d3a51757d159dc13e9e775061f7c4501a1c44e1e2c9e8a7ea87591a0d6", 0);
}

uint64_t sub_10002389C()
{
  return sub_100015BE4((uint64_t)"2f7332dce3b75d5d7dc66131929e3ef12d12dccb", (uint64_t)"BCM4387C2", (uint64_t)"ALL", (uint64_t)sub_10002FE10, (uint64_t)sub_10002FED4, (uint64_t)sub_10002FEE4, (uint64_t)"BCM4387C2_22.1.602.2883_PCIE_Marigold_CLPC_OS_Amkor_20240729.bin", (uint64_t)"BCM4387C2_*_PCIE_Marigold_CLPC_OS_Amkor_*", 0x87A98u, 0, (uint64_t)"c5684cfa8b1d481880851ed3e40b4691d58661ff00e9cd09457103bf388ef8f6", 0);
}

uint64_t sub_100023914()
{
  return sub_100016780((uint64_t)"2f7332dce3b75d5d7dc66131929e3ef12d12dccb", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)"BCM4387C2_22.1.602.2886_PCIE_Marigold_CLPC_OS_LPM_USI_20240729.bin", 555670, (uint64_t)"016e5ab4497f932cdbcfc365d6a460561e6e3920234638f9367e7f92227b39dd");
}

uint64_t sub_100023948()
{
  return sub_100016780((uint64_t)"2f7332dce3b75d5d7dc66131929e3ef12d12dccb", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)"BCM4387C2_22.1.602.2885_PCIE_Marigold_CLPC_OS_LPM_STATS_20240729.bin", 555672, (uint64_t)"5d1ae18029a1b7f910c4b295a44879689decf0ea27116bfc333eceb7e9d95549");
}

uint64_t sub_10002397C()
{
  return sub_100016780((uint64_t)"2f7332dce3b75d5d7dc66131929e3ef12d12dccb", (uint64_t)"BCM4387C2", (uint64_t)"ALL", (uint64_t)"BCM4387C2_22.1.602.2884_PCIE_Marigold_CLPC_OS_LPM_Amkor_20240729.bin", 555672, (uint64_t)"e0c4ee4c14c0f5b8d46a8520b5e0f1f2e02c3a12b827e33a9485b8c02ef9d55c");
}

uint64_t sub_1000239B0()
{
  return sub_100015BE4((uint64_t)"4f2b231e0de7fd321395ca8a6a1d67fd435ab76f", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)sub_10002FF44, (uint64_t)sub_100030008, (uint64_t)sub_100030018, (uint64_t)"BCM4388C0_22.1.496.790_PCIE_Petunia_CLPC_OS_USI_20240812.bin", (uint64_t)"BCM4388C0_*_PCIE_Petunia_CLPC_OS_USI_*", 0xCF38Eu, 0, (uint64_t)"8f96e1be181fee4b381ce15165efd1b3d18560627bf3854221a1265b20d668e4", 0);
}

uint64_t sub_100023A28()
{
  return sub_100015BE4((uint64_t)"4f2b231e0de7fd321395ca8a6a1d67fd435ab76f", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)sub_100030078, (uint64_t)sub_10003013C, (uint64_t)sub_10003014C, (uint64_t)"BCM4388C0_22.1.496.789_PCIE_Petunia_CLPC_OS_STATS_20240812.bin", (uint64_t)"BCM4388C0_*_PCIE_Petunia_CLPC_OS_STATS_*", 0xCF390u, 0, (uint64_t)"1e99e0eefeca3e8f1ef428d941d15b2c46d0ac4afda217ac22a08d42b5d0666d", 0);
}

uint64_t sub_100023AA0()
{
  return sub_100016780((uint64_t)"4f2b231e0de7fd321395ca8a6a1d67fd435ab76f", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)"BCM4388C0_22.1.496.788_PCIE_Petunia_CLPC_OS_LPM_USI_20240812.bin", 848782, (uint64_t)"384d82f8da8b55f1d843fc516ee7b729d0d3d38b4acf5ea62a50df4b0c5abe4f");
}

uint64_t sub_100023AD4()
{
  return sub_100016780((uint64_t)"4f2b231e0de7fd321395ca8a6a1d67fd435ab76f", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)"BCM4388C0_22.1.496.787_PCIE_Petunia_CLPC_OS_LPM_STATS_20240812.bin", 848784, (uint64_t)"7246a7b050143651d271fc9edafcd3e762907582dac297bdd39ed903351664cf");
}

uint64_t sub_100023B08()
{
  return sub_100015BE4((uint64_t)"a67ab8192d314e67ef1b21f79aab0d9e45ee6dd1", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)sub_1000301AC, (uint64_t)sub_100030270, (uint64_t)sub_100030280, (uint64_t)"BCM4388C0_22.1.496.754_PCIE_Poppy_CLPC_OS_USI_20240812.bin", (uint64_t)"BCM4388C0_*_PCIE_Poppy_CLPC_OS_USI_*", 0xCF38Cu, 0, (uint64_t)"a36012cddb88ccdc3155b46a7d83fe8f8132ccf281fde56906c4fe390b1939d4", 0);
}

uint64_t sub_100023B80()
{
  return sub_100015BE4((uint64_t)"a67ab8192d314e67ef1b21f79aab0d9e45ee6dd1", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)sub_1000302E0, (uint64_t)sub_1000303A4, (uint64_t)sub_1000303B4, (uint64_t)"BCM4388C0_22.1.496.753_PCIE_Poppy_CLPC_OS_STATS_20240812.bin", (uint64_t)"BCM4388C0_*_PCIE_Poppy_CLPC_OS_STATS_*", 0xCF38Eu, 0, (uint64_t)"754dfd7c423c189aa533d881d5c42abdbe7b04e284207500c9734fd43b86e2c2", 0);
}

uint64_t sub_100023BF8()
{
  return sub_100016780((uint64_t)"a67ab8192d314e67ef1b21f79aab0d9e45ee6dd1", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)"BCM4388C0_22.1.496.752_PCIE_Poppy_CLPC_OS_LPM_USI_20240812.bin", 848780, (uint64_t)"d2cc2feb6b5ca3974cd34740bacca5082f84de9f3417ccb71ad0b58251cb8a4c");
}

uint64_t sub_100023C2C()
{
  return sub_100016780((uint64_t)"a67ab8192d314e67ef1b21f79aab0d9e45ee6dd1", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)"BCM4388C0_22.1.496.751_PCIE_Poppy_CLPC_OS_LPM_STATS_20240812.bin", 848782, (uint64_t)"5d2d0cf17587937d44de4228a15b3a92851fd53fd169ae2808b982cd25c9b0e2");
}

uint64_t sub_100023C60()
{
  return sub_100015BE4((uint64_t)"a351ffa1679865574bc0d49e674d563e3b996948", (uint64_t)"BCM4399B0", (uint64_t)"USI", (uint64_t)sub_100030414, (uint64_t)sub_1000304D8, (uint64_t)sub_1000304E8, (uint64_t)"BCM4399B0_22.1.83.131_PCIE_Cephalotus_CLPC_OS_USI_20231109.bin", (uint64_t)"BCM4399B0_*_PCIE_Cephalotus_CLPC_OS_USI_*", 0x69F22u, 0, (uint64_t)"c3d724bade828c4d64b4e123c8e94409ac1ceb21af300e4fafd45a282dedb64a", 0);
}

uint64_t sub_100023CD8()
{
  return sub_100015BE4((uint64_t)"a351ffa1679865574bc0d49e674d563e3b996948", (uint64_t)"BCM4399B0", (uint64_t)"STA", (uint64_t)sub_100030548, (uint64_t)sub_10003060C, (uint64_t)sub_10003061C, (uint64_t)"BCM4399B0_22.1.83.136_PCIE_Cephalotus_CLPC_OS_STATS_20231109.bin", (uint64_t)"BCM4399B0_*_PCIE_Cephalotus_CLPC_OS_STATS_*", 0x69FBCu, 0, (uint64_t)"2e2c6384a90fa8301461cb3b27db55134612df2405633390e27461e83a0cd4a1", 0);
}

uint64_t sub_100023D50()
{
  return sub_100015BE4((uint64_t)"a351ffa1679865574bc0d49e674d563e3b996948", (uint64_t)"BCM4399C0", (uint64_t)"USI", (uint64_t)sub_10003067C, (uint64_t)sub_100030740, (uint64_t)sub_100030750, (uint64_t)"BCM4399C0_22.1.83.261_PCIE_Cephalotus_CLPC_OS_USI_20240430.bin", (uint64_t)"BCM4399C0_*_PCIE_Cephalotus_CLPC_OS_USI_*", 0x8D5AEu, 0, (uint64_t)"9eae52dacc7df0f18df617d334af4614705034fca295c506d2cf66c539c70196", 0);
}

uint64_t sub_100023DC8()
{
  return sub_100015BE4((uint64_t)"a351ffa1679865574bc0d49e674d563e3b996948", (uint64_t)"BCM4399C0", (uint64_t)"STA", (uint64_t)sub_1000307B0, (uint64_t)sub_100030874, (uint64_t)sub_100030884, (uint64_t)"BCM4399C0_22.1.83.266_PCIE_Cephalotus_CLPC_OS_STATS_20240430.bin", (uint64_t)"BCM4399C0_*_PCIE_Cephalotus_CLPC_OS_STATS_*", 0x8D5C8u, 0, (uint64_t)"4a30009d1e341eff22c002df7a1170eaaa0275a1691d4f2d5399ffa06ee90d8c", 0);
}

uint64_t sub_100023E40()
{
  return sub_100015BE4((uint64_t)"a351ffa1679865574bc0d49e674d563e3b996948", (uint64_t)"BCM4399C2", (uint64_t)"USI", (uint64_t)sub_1000308E4, (uint64_t)sub_1000309A8, (uint64_t)sub_1000309B8, (uint64_t)"BCM4399C2_22.1.120.452_PCIE_Cephalotus_CLPC_OS_USI_20240809.bin", (uint64_t)"BCM4399C2_*_PCIE_Cephalotus_CLPC_OS_USI_*", 0x8F0E8u, 0, (uint64_t)"51370f0e15135daf9c56c666e42a211bc761c6d1eb1e4b5b2a78def6f5cc353e", 0);
}

uint64_t sub_100023EB8()
{
  return sub_100015BE4((uint64_t)"a351ffa1679865574bc0d49e674d563e3b996948", (uint64_t)"BCM4399C2", (uint64_t)"STA", (uint64_t)sub_100030A18, (uint64_t)sub_100030ADC, (uint64_t)sub_100030AEC, (uint64_t)"BCM4399C2_22.1.120.451_PCIE_Cephalotus_CLPC_OS_STATS_20240809.bin", (uint64_t)"BCM4399C2_*_PCIE_Cephalotus_CLPC_OS_STATS_*", 0x8F0EAu, 0, (uint64_t)"0b063d95ed5a4185207619482133aff7c179a4f290d06eaf9b15af76ba8c6328", 0);
}

uint64_t sub_100023F30()
{
  return sub_100015BE4((uint64_t)"4fcb57a0bb4e68fc2ae70383735295e2a9bc6919", (uint64_t)"BCM4399B0", (uint64_t)"USI", (uint64_t)sub_100030B4C, (uint64_t)sub_100030C10, (uint64_t)sub_100030C20, (uint64_t)"BCM4399B0_22.1.83.132_PCIE_Nepenthes_CLPC_OS_USI_20231109.bin", (uint64_t)"BCM4399B0_*_PCIE_Nepenthes_CLPC_OS_USI_*", 0x69F22u, 0, (uint64_t)"3a9176cfa32e5786b9f69dbd19c2bfa0f57ade22c73a1742163d82753aea442e", 0);
}

uint64_t sub_100023FA8()
{
  return sub_100015BE4((uint64_t)"4fcb57a0bb4e68fc2ae70383735295e2a9bc6919", (uint64_t)"BCM4399B0", (uint64_t)"STA", (uint64_t)sub_100030C80, (uint64_t)sub_100030D44, (uint64_t)sub_100030D54, (uint64_t)"BCM4399B0_22.1.83.137_PCIE_Nepenthes_CLPC_OS_STATS_20231109.bin", (uint64_t)"BCM4399B0_*_PCIE_Nepenthes_CLPC_OS_STATS_*", 0x69FBCu, 0, (uint64_t)"5174ff99997e38932aba54cc47e7396793276788176091f2e8fb00c91488c0b8", 0);
}

uint64_t sub_100024020()
{
  return sub_100015BE4((uint64_t)"4fcb57a0bb4e68fc2ae70383735295e2a9bc6919", (uint64_t)"BCM4399C0", (uint64_t)"USI", (uint64_t)sub_100030DB4, (uint64_t)sub_100030E78, (uint64_t)sub_100030E88, (uint64_t)"BCM4399C0_22.1.83.262_PCIE_Nepenthes_CLPC_OS_USI_20240430.bin", (uint64_t)"BCM4399C0_*_PCIE_Nepenthes_CLPC_OS_USI_*", 0x8D5ADu, 0, (uint64_t)"dab0d9f46a04b42723afe1b8e80cb41f0bd623674721d3aae6e9d0d8dc8fc6c4", 0);
}

uint64_t sub_100024098()
{
  return sub_100015BE4((uint64_t)"4fcb57a0bb4e68fc2ae70383735295e2a9bc6919", (uint64_t)"BCM4399C0", (uint64_t)"STA", (uint64_t)sub_100030EE8, (uint64_t)sub_100030FAC, (uint64_t)sub_100030FBC, (uint64_t)"BCM4399C0_22.1.83.267_PCIE_Nepenthes_CLPC_OS_STATS_20240430.bin", (uint64_t)"BCM4399C0_*_PCIE_Nepenthes_CLPC_OS_STATS_*", 0x8D5C7u, 0, (uint64_t)"c0cc7cfa7688d1f538d0eed752cc93e4754de5f167ea4c211fa4b69a2de00aea", 0);
}

uint64_t sub_100024110()
{
  return sub_100015BE4((uint64_t)"4fcb57a0bb4e68fc2ae70383735295e2a9bc6919", (uint64_t)"BCM4399C2", (uint64_t)"USI", (uint64_t)sub_10003101C, (uint64_t)sub_1000310E0, (uint64_t)sub_1000310F0, (uint64_t)"BCM4399C2_22.1.120.454_PCIE_Nepenthes_CLPC_OS_USI_20240809.bin", (uint64_t)"BCM4399C2_*_PCIE_Nepenthes_CLPC_OS_USI_*", 0x8F0E7u, 0, (uint64_t)"664adac23995167fe3ef253a48713f8ed7d826f6242f6c4327864ec4aaaad8ab", 0);
}

uint64_t sub_100024188()
{
  return sub_100015BE4((uint64_t)"4fcb57a0bb4e68fc2ae70383735295e2a9bc6919", (uint64_t)"BCM4399C2", (uint64_t)"STA", (uint64_t)sub_100031150, (uint64_t)sub_100031214, (uint64_t)sub_100031224, (uint64_t)"BCM4399C2_22.1.120.453_PCIE_Nepenthes_CLPC_OS_STATS_20240809.bin", (uint64_t)"BCM4399C2_*_PCIE_Nepenthes_CLPC_OS_STATS_*", 0x8F0E9u, 0, (uint64_t)"439bc77c3325b5ab2b13b5724ee7355edc301f5468cfce6c8934140a258ecc5d", 0);
}

uint64_t sub_100024200()
{
  return sub_100015BE4((uint64_t)"1c2775a019ca5e2a44e6477a56ff010d8e6ef248", (uint64_t)"BCM4399B0", (uint64_t)"USI", (uint64_t)sub_100031284, (uint64_t)sub_100031348, (uint64_t)sub_100031358, (uint64_t)"BCM4399B0_22.1.83.133_PCIE_Sundew_CLPC_OS_USI_20231109.bin", (uint64_t)"BCM4399B0_*_PCIE_Sundew_CLPC_OS_USI_*", 0x69F22u, 0, (uint64_t)"adfcf936ca580eeb9ee376446fb9f31e11dc9b9296d123b849499ff9c711bb3b", 0);
}

uint64_t sub_100024278()
{
  return sub_100015BE4((uint64_t)"1c2775a019ca5e2a44e6477a56ff010d8e6ef248", (uint64_t)"BCM4399B0", (uint64_t)"STA", (uint64_t)sub_1000313B8, (uint64_t)sub_10003147C, (uint64_t)sub_10003148C, (uint64_t)"BCM4399B0_22.1.83.138_PCIE_Sundew_CLPC_OS_STATS_20231109.bin", (uint64_t)"BCM4399B0_*_PCIE_Sundew_CLPC_OS_STATS_*", 0x69FBCu, 0, (uint64_t)"9a2e2a125d51dc104112d123512d7a8ef378c46c1a01a3ab77a105ebb238879b", 0);
}

uint64_t sub_1000242F0()
{
  return sub_100015BE4((uint64_t)"1c2775a019ca5e2a44e6477a56ff010d8e6ef248", (uint64_t)"BCM4399C0", (uint64_t)"USI", (uint64_t)sub_1000314EC, (uint64_t)sub_1000315B0, (uint64_t)sub_1000315C0, (uint64_t)"BCM4399C0_22.1.83.263_PCIE_Sundew_CLPC_OS_USI_20240430.bin", (uint64_t)"BCM4399C0_*_PCIE_Sundew_CLPC_OS_USI_*", 0x8D5AAu, 0, (uint64_t)"941c9d04363b87ea65e0e80c6293cb505102c68d49c95a5f061ca7d5eb7ce437", 0);
}

uint64_t sub_100024368()
{
  return sub_100015BE4((uint64_t)"1c2775a019ca5e2a44e6477a56ff010d8e6ef248", (uint64_t)"BCM4399C0", (uint64_t)"STA", (uint64_t)sub_100031620, (uint64_t)sub_1000316E4, (uint64_t)sub_1000316F4, (uint64_t)"BCM4399C0_22.1.83.268_PCIE_Sundew_CLPC_OS_STATS_20240430.bin", (uint64_t)"BCM4399C0_*_PCIE_Sundew_CLPC_OS_STATS_*", 0x8D5C4u, 0, (uint64_t)"bd234cf322ffa650ea4590bf19b135d30d69d36b87faa92558252bfad3a26963", 0);
}

uint64_t sub_1000243E0()
{
  return sub_100015BE4((uint64_t)"1c2775a019ca5e2a44e6477a56ff010d8e6ef248", (uint64_t)"BCM4399C2", (uint64_t)"USI", (uint64_t)sub_100031754, (uint64_t)sub_100031818, (uint64_t)sub_100031828, (uint64_t)"BCM4399C2_22.1.120.456_PCIE_Sundew_CLPC_OS_USI_20240809.bin", (uint64_t)"BCM4399C2_*_PCIE_Sundew_CLPC_OS_USI_*", 0x8F0E4u, 0, (uint64_t)"01afc5f8a989e6655999806860f7c96b959a9e8b320eb70c8d3e2252d42f5714", 0);
}

uint64_t sub_100024458()
{
  return sub_100015BE4((uint64_t)"1c2775a019ca5e2a44e6477a56ff010d8e6ef248", (uint64_t)"BCM4399C2", (uint64_t)"STA", (uint64_t)sub_100031888, (uint64_t)sub_10003194C, (uint64_t)sub_10003195C, (uint64_t)"BCM4399C2_22.1.120.455_PCIE_Sundew_CLPC_OS_STATS_20240809.bin", (uint64_t)"BCM4399C2_*_PCIE_Sundew_CLPC_OS_STATS_*", 0x8F0E6u, 0, (uint64_t)"4d31f28491bfa01ee66820caa8a36dd364fd5975e40dcf52d8e3d99d3d893700", 0);
}

uint64_t sub_1000244D0()
{
  return sub_100015BE4((uint64_t)"9b65e985f9f058219203d1a869e232e84cbb0f0b", (uint64_t)"BCM4399B0", (uint64_t)"USI", (uint64_t)sub_1000319BC, (uint64_t)sub_100031A80, (uint64_t)sub_100031A90, (uint64_t)"BCM4399B0_22.1.83.134_PCIE_Audreyii_CLPC_OS_USI_20231109.bin", (uint64_t)"BCM4399B0_*_PCIE_Audreyii_CLPC_OS_USI_*", 0x69F22u, 0, (uint64_t)"9c02201ddf402c5b15289cdcb6fda4972a53d8abe0338492b043b4021921fc5a", 0);
}

uint64_t sub_100024548()
{
  return sub_100015BE4((uint64_t)"9b65e985f9f058219203d1a869e232e84cbb0f0b", (uint64_t)"BCM4399B0", (uint64_t)"STA", (uint64_t)sub_100031AF0, (uint64_t)sub_100031BB4, (uint64_t)sub_100031BC4, (uint64_t)"BCM4399B0_22.1.83.139_PCIE_Audreyii_CLPC_OS_STATS_20231109.bin", (uint64_t)"BCM4399B0_*_PCIE_Audreyii_CLPC_OS_STATS_*", 0x69FBCu, 0, (uint64_t)"85eac92971ec615830ee2b59f7e921b3408e5825dfea52e69b3343fba5784680", 0);
}

uint64_t sub_1000245C0()
{
  return sub_100015BE4((uint64_t)"9b65e985f9f058219203d1a869e232e84cbb0f0b", (uint64_t)"BCM4399C0", (uint64_t)"USI", (uint64_t)sub_100031C24, (uint64_t)sub_100031CE8, (uint64_t)sub_100031CF8, (uint64_t)"BCM4399C0_22.1.83.264_PCIE_Audreyii_CLPC_OS_USI_20240430.bin", (uint64_t)"BCM4399C0_*_PCIE_Audreyii_CLPC_OS_USI_*", 0x8D5ACu, 0, (uint64_t)"c90d04b724ce7dea04b0f4867cd435133527f595e078195269a9ac9723d1c585", 0);
}

uint64_t sub_100024638()
{
  return sub_100015BE4((uint64_t)"9b65e985f9f058219203d1a869e232e84cbb0f0b", (uint64_t)"BCM4399C0", (uint64_t)"STA", (uint64_t)sub_100031D58, (uint64_t)sub_100031E1C, (uint64_t)sub_100031E2C, (uint64_t)"BCM4399C0_22.1.83.269_PCIE_Audreyii_CLPC_OS_STATS_20240430.bin", (uint64_t)"BCM4399C0_*_PCIE_Audreyii_CLPC_OS_STATS_*", 0x8D5C6u, 0, (uint64_t)"fef57617bee1edf5a66b03090f1cc2cee9ee6cae5ed2a4c02902df503be990f8", 0);
}

uint64_t sub_1000246B0()
{
  return sub_100015BE4((uint64_t)"9b65e985f9f058219203d1a869e232e84cbb0f0b", (uint64_t)"BCM4399C2", (uint64_t)"USI", (uint64_t)sub_100031E8C, (uint64_t)sub_100031F50, (uint64_t)sub_100031F60, (uint64_t)"BCM4399C2_22.1.120.458_PCIE_Audreyii_CLPC_OS_USI_20240809.bin", (uint64_t)"BCM4399C2_*_PCIE_Audreyii_CLPC_OS_USI_*", 0x8F0E6u, 0, (uint64_t)"66f39530f397faac04881dcc3f14ba039d5de0f45e26e45dac64905aed317f5c", 0);
}

uint64_t sub_100024728()
{
  return sub_100015BE4((uint64_t)"9b65e985f9f058219203d1a869e232e84cbb0f0b", (uint64_t)"BCM4399C2", (uint64_t)"STA", (uint64_t)sub_100031FC0, (uint64_t)sub_100032084, (uint64_t)sub_100032094, (uint64_t)"BCM4399C2_22.1.120.457_PCIE_Audreyii_CLPC_OS_STATS_20240809.bin", (uint64_t)"BCM4399C2_*_PCIE_Audreyii_CLPC_OS_STATS_*", 0x8F0E8u, 0, (uint64_t)"2d4055b1cee2fcc02746370ece7a2632e72b96b2d332ee57964a309489b544d9", 0);
}

uint64_t sub_1000247A0()
{
  return sub_100015BE4((uint64_t)"0fd3e04e3e8b617d8d2c17db8182fea74235f681", (uint64_t)"BCM43452A2", (uint64_t)"MUR", (uint64_t)sub_1000320F4, (uint64_t)sub_1000322BC, (uint64_t)sub_1000322CC, (uint64_t)"BCM43452A2_19.1.143.598_Bacchus2_OS_MUR_20210503.hcd", 0, 0x121B7u, (uint64_t)&unk_100257A71, 0, 0);
}

uint64_t sub_100024814()
{
  return sub_100015BE4((uint64_t)"0fd3e04e3e8b617d8d2c17db8182fea74235f681", (uint64_t)"BCM43452A2", (uint64_t)"TDK", (uint64_t)sub_100032354, (uint64_t)sub_10003251C, (uint64_t)sub_10003252C, (uint64_t)"BCM43452A2_19.1.143.599_Bacchus2_OS_TDK_20210503.hcd", 0, 0x121EDu, (uint64_t)&unk_100269C29, 0, 0);
}

uint64_t sub_100024888()
{
  return sub_100015BE4((uint64_t)"0fd3e04e3e8b617d8d2c17db8182fea74235f681", (uint64_t)"BCM43452A2", (uint64_t)"USI", (uint64_t)sub_1000325B4, (uint64_t)sub_10003277C, (uint64_t)sub_10003278C, (uint64_t)"BCM43452A2_19.1.143.600_Bacchus2_OS_USI_20210503.hcd", 0, 0x121EDu, (uint64_t)&unk_10027BE17, 0, 0);
}

uint64_t sub_1000248FC()
{
  return sub_100015BE4((uint64_t)"4d013e8fae976e61a7b3b69cdb5a015fa7ff04bb", (uint64_t)"BCM4355C1", (uint64_t)"MUR", (uint64_t)sub_100032814, (uint64_t)sub_1000329DC, (uint64_t)sub_1000329EC, (uint64_t)"BCM4355C1_20.3.170.1323_RudderA_OS_MUR_MCC_TRS_20221017.hcd", 0, 0x12998u, (uint64_t)&unk_10028E005, 0, 0);
}

uint64_t sub_100024970()
{
  return sub_10001896C((uint64_t)"4d013e8fae976e61a7b3b69cdb5a015fa7ff04bb", (uint64_t)&unk_1004C475E, 210);
}

uint64_t sub_100024988()
{
  return sub_100015BE4((uint64_t)"4d013e8fae976e61a7b3b69cdb5a015fa7ff04bb", (uint64_t)"BCM4355C1", (uint64_t)"USI", (uint64_t)sub_100032A74, (uint64_t)sub_100032C3C, (uint64_t)sub_100032C4C, (uint64_t)"BCM4355C1_20.3.170.1324_RudderA_OS_USI_MCC_TRS_20221017.hcd", 0, 0x12998u, (uint64_t)&unk_1002A099E, 0, 0);
}

uint64_t sub_1000249FC()
{
  return sub_10001896C((uint64_t)"4d013e8fae976e61a7b3b69cdb5a015fa7ff04bb", (uint64_t)&unk_1004C4830, 210);
}

uint64_t sub_100024A14()
{
  return sub_100015BE4((uint64_t)"ae5208f95834c10486a11d761fe2e38c7a10e280", (uint64_t)"BCM4355C1", (uint64_t)"MUR", (uint64_t)sub_100032CD4, (uint64_t)sub_100032E9C, (uint64_t)sub_100032EAC, (uint64_t)"BCM4355C1_20.3.170.1325_RudderB_OS_MUR_MCC_TRS_20221017.hcd", 0, 0x12998u, (uint64_t)&unk_1002B3337, 0, 0);
}

uint64_t sub_100024A88()
{
  return sub_10001896C((uint64_t)"ae5208f95834c10486a11d761fe2e38c7a10e280", (uint64_t)&unk_1004C4902, 210);
}

uint64_t sub_100024AA0()
{
  return sub_100015BE4((uint64_t)"ae5208f95834c10486a11d761fe2e38c7a10e280", (uint64_t)"BCM4355C1", (uint64_t)"USI", (uint64_t)sub_100032F34, (uint64_t)sub_1000330FC, (uint64_t)sub_10003310C, (uint64_t)"BCM4355C1_20.3.170.1326_RudderB_OS_USI_MCC_TRS_20221017.hcd", 0, 0x12998u, (uint64_t)&unk_1002C5CD0, 0, 0);
}

uint64_t sub_100024B14()
{
  return sub_10001896C((uint64_t)"ae5208f95834c10486a11d761fe2e38c7a10e280", (uint64_t)&unk_1004C49D4, 210);
}

uint64_t sub_100024B2C()
{
  return sub_100015BE4((uint64_t)"e329f81a9f2572f5bf38e1469ec4ff2ea7213816", (uint64_t)"BCM4355C1", (uint64_t)"MUR", (uint64_t)sub_100033194, (uint64_t)sub_10003335C, (uint64_t)sub_10003336C, (uint64_t)"BCM4355C1_20.3.170.1334_MagnoliaA_OS_MUR_MCC_TRS_20221017.hcd", 0, 0x1345Du, (uint64_t)&unk_1002D8669, 0, 0);
}

uint64_t sub_100024BA0()
{
  return sub_10001896C((uint64_t)"e329f81a9f2572f5bf38e1469ec4ff2ea7213816", (uint64_t)&unk_1004C4AA6, 210);
}

uint64_t sub_100024BB8()
{
  return sub_100015BE4((uint64_t)"e329f81a9f2572f5bf38e1469ec4ff2ea7213816", (uint64_t)"BCM4355C1", (uint64_t)"USI", (uint64_t)sub_1000333F4, (uint64_t)sub_1000335BC, (uint64_t)sub_1000335CC, (uint64_t)"BCM4355C1_20.3.170.1335_MagnoliaA_OS_USI_MCC_TRS_20221017.hcd", 0, 0x1345Du, (uint64_t)&unk_1002EBAC7, 0, 0);
}

uint64_t sub_100024C2C()
{
  return sub_10001896C((uint64_t)"e329f81a9f2572f5bf38e1469ec4ff2ea7213816", (uint64_t)&unk_1004C4B78, 210);
}

uint64_t sub_100024C44()
{
  return sub_100015BE4((uint64_t)"65ba2027292c7e4bcd6c7d818b20ee3f9abedacc", (uint64_t)"BCM4355C1", (uint64_t)"MUR", (uint64_t)sub_100033654, (uint64_t)sub_10003381C, (uint64_t)sub_10003382C, (uint64_t)"BCM4355C1_20.3.170.1336_MagnoliaB_OS_MUR_MCC_TRS_20221017.hcd", 0, 0x1345Du, (uint64_t)&unk_1002FEF25, 0, 0);
}

uint64_t sub_100024CB8()
{
  return sub_10001896C((uint64_t)"65ba2027292c7e4bcd6c7d818b20ee3f9abedacc", (uint64_t)&unk_1004C4C4A, 210);
}

uint64_t sub_100024CD0()
{
  return sub_100015BE4((uint64_t)"65ba2027292c7e4bcd6c7d818b20ee3f9abedacc", (uint64_t)"BCM4355C1", (uint64_t)"USI", (uint64_t)sub_1000338B4, (uint64_t)sub_100033A7C, (uint64_t)sub_100033A8C, (uint64_t)"BCM4355C1_20.3.170.1337_MagnoliaB_OS_USI_MCC_TRS_20221017.hcd", 0, 0x1345Du, (uint64_t)&unk_100312383, 0, 0);
}

uint64_t sub_100024D44()
{
  return sub_10001896C((uint64_t)"65ba2027292c7e4bcd6c7d818b20ee3f9abedacc", (uint64_t)&unk_1004C4D1C, 210);
}

uint64_t sub_100024D5C()
{
  return sub_100015BE4((uint64_t)"9bb321c15706c8c4e8518012b35dcd444d2655f3", (uint64_t)"BCM4355C1", (uint64_t)"MUR", (uint64_t)sub_100033B14, (uint64_t)sub_100033CDC, (uint64_t)sub_100033CEC, (uint64_t)"BCM4355C1_20.3.170.1338_LonganA_OS_MUR_MCC_TRS_20221017.hcd", 0, 0x1345Bu, (uint64_t)&unk_1003257E1, 0, 0);
}

uint64_t sub_100024DD0()
{
  return sub_10001896C((uint64_t)"9bb321c15706c8c4e8518012b35dcd444d2655f3", (uint64_t)&unk_1004C4DEE, 210);
}

uint64_t sub_100024DE8()
{
  return sub_100015BE4((uint64_t)"9bb321c15706c8c4e8518012b35dcd444d2655f3", (uint64_t)"BCM4355C1", (uint64_t)"USI", (uint64_t)sub_100033D74, (uint64_t)sub_100033F3C, (uint64_t)sub_100033F4C, (uint64_t)"BCM4355C1_20.3.170.1339_LonganA_OS_USI_MCC_TRS_20221017.hcd", 0, 0x1345Bu, (uint64_t)&unk_100338C3D, 0, 0);
}

uint64_t sub_100024E5C()
{
  return sub_10001896C((uint64_t)"9bb321c15706c8c4e8518012b35dcd444d2655f3", (uint64_t)&unk_1004C4EC0, 210);
}

uint64_t sub_100024E74()
{
  return sub_100015BE4((uint64_t)"d99e0eebda08b7d57e90479e679381e2a0b58226", (uint64_t)"BCM4355C1", (uint64_t)"MUR", (uint64_t)sub_100033FD4, (uint64_t)sub_10003419C, (uint64_t)sub_1000341AC, (uint64_t)"BCM4355C1_20.3.170.1340_LonganB_OS_MUR_MCC_TRS_20221017.hcd", 0, 0x1345Bu, (uint64_t)&unk_10034C099, 0, 0);
}

uint64_t sub_100024EE8()
{
  return sub_10001896C((uint64_t)"d99e0eebda08b7d57e90479e679381e2a0b58226", (uint64_t)&unk_1004C4F92, 210);
}

uint64_t sub_100024F00()
{
  return sub_100015BE4((uint64_t)"d99e0eebda08b7d57e90479e679381e2a0b58226", (uint64_t)"BCM4355C1", (uint64_t)"USI", (uint64_t)sub_100034234, (uint64_t)sub_1000343FC, (uint64_t)sub_10003440C, (uint64_t)"BCM4355C1_20.3.170.1341_LonganB_OS_USI_MCC_TRS_20221017.hcd", 0, 0x1345Bu, (uint64_t)&unk_10035F4F5, 0, 0);
}

uint64_t sub_100024F74()
{
  return sub_10001896C((uint64_t)"d99e0eebda08b7d57e90479e679381e2a0b58226", (uint64_t)&unk_1004C5064, 210);
}

uint64_t sub_100024F8C()
{
  return sub_100015BE4((uint64_t)"14991972ff57eeff834172b65c18210836e18d3d", (uint64_t)"BCM4350C5", (uint64_t)"MUR", (uint64_t)sub_100034494, (uint64_t)sub_10003465C, (uint64_t)sub_10003466C, (uint64_t)"BCM4350C5_19.1.235.4930_Zinfandel_OS_MUR_STC_20210628.hcd", 0, 0xD202u, (uint64_t)&unk_100372951, 0, 0);
}

uint64_t sub_100024FFC()
{
  return sub_100015BE4((uint64_t)"14991972ff57eeff834172b65c18210836e18d3d", (uint64_t)"BCM4350C5", (uint64_t)"TY", (uint64_t)sub_1000346F4, (uint64_t)sub_1000348BC, (uint64_t)sub_1000348CC, (uint64_t)"BCM4350C5_19.1.235.4931_Zinfandel_OS_TY_STC_20210628.hcd", 0, 0xD1FEu, (uint64_t)&unk_10037FB54, 0, 0);
}

uint64_t sub_10002506C()
{
  return sub_100015BE4((uint64_t)"14991972ff57eeff834172b65c18210836e18d3d", (uint64_t)"BCM4350C5", (uint64_t)"USI", (uint64_t)sub_100034954, (uint64_t)sub_100034B1C, (uint64_t)sub_100034B2C, (uint64_t)"BCM4350C5_19.1.235.4933_Zinfandel_OS_USI_STC_20210628.hcd", 0, 0xD1FFu, (uint64_t)&unk_10038CD53, 0, 0);
}

uint64_t sub_1000250DC()
{
  return sub_100015BE4((uint64_t)"8f079bbe2ababe5158d76f2a4cd199e05b73812b", (uint64_t)"BCM4350C5", (uint64_t)"MUR", (uint64_t)sub_100034BB4, (uint64_t)sub_100034D7C, (uint64_t)sub_100034D8C, (uint64_t)"BCM4350C5_19.1.235.4929_Zinfandel_OS_MUR_ST_20210628.hcd", 0, 0x10DA8u, (uint64_t)&unk_100399F53, 0, 0);
}

uint64_t sub_100025150()
{
  return sub_100015BE4((uint64_t)"8f079bbe2ababe5158d76f2a4cd199e05b73812b", (uint64_t)"BCM4350C5", (uint64_t)"USI", (uint64_t)sub_100034E14, (uint64_t)sub_100034FDC, (uint64_t)sub_100034FEC, (uint64_t)"BCM4350C5_19.1.235.4932_Zinfandel_OS_USI_ST_20210628.hcd", 0, 0x10DA5u, (uint64_t)&unk_1003AACFC, 0, 0);
}

uint64_t sub_1000251C4()
{
  return sub_100015BE4((uint64_t)"40d66158a9da2cae42932fb7737aa5a829a94d9e", (uint64_t)"BCM4350C2", (uint64_t)"MUR", (uint64_t)sub_100035074, (uint64_t)sub_100035228, (uint64_t)sub_100035238, (uint64_t)"BCM4350C2_18.1.452.1526_Riesling_OS_MUR_STC_20200320.hcd", 0, 0x11AA7u, (uint64_t)&unk_1003BBAA2, 0, 0);
}

uint64_t sub_100025238()
{
  return sub_100015BE4((uint64_t)"40d66158a9da2cae42932fb7737aa5a829a94d9e", (uint64_t)"BCM4350C2", (uint64_t)"TY", (uint64_t)sub_1000352C0, (uint64_t)sub_100035474, (uint64_t)sub_100035484, (uint64_t)"BCM4350C2_18.1.452.1527_Riesling_OS_TY_20200320.hcd", 0, 0x11AA3u, (uint64_t)&unk_1003CD54A, 0, 0);
}

uint64_t sub_1000252AC()
{
  return sub_100015BE4((uint64_t)"40d66158a9da2cae42932fb7737aa5a829a94d9e", (uint64_t)"BCM4350C2", (uint64_t)"USI", (uint64_t)sub_10003550C, (uint64_t)sub_1000356C0, (uint64_t)sub_1000356D0, (uint64_t)"BCM4350C2_18.1.452.1529_Riesling_OS_USI_STC_20200320.hcd", 0, 0x11AA8u, (uint64_t)&unk_1003DEFEE, 0, 0);
}

uint64_t sub_100025320()
{
  return sub_100015BE4((uint64_t)"94005630427bf66340961950594dfdcaa3f22d14", (uint64_t)"BCM4350C2", (uint64_t)"MUR", (uint64_t)sub_100035758, (uint64_t)sub_10003590C, (uint64_t)sub_10003591C, (uint64_t)"BCM4350C2_18.1.452.1525_Riesling_OS_MUR_ST_20200320.hcd", 0, 0x11AA7u, (uint64_t)&unk_1003F0A97, 0, 0);
}

uint64_t sub_100025394()
{
  return sub_100015BE4((uint64_t)"94005630427bf66340961950594dfdcaa3f22d14", (uint64_t)"BCM4350C2", (uint64_t)"TY", (uint64_t)sub_1000359A4, (uint64_t)sub_100035B58, (uint64_t)sub_100035B68, (uint64_t)"BCM4350C2_18.1.452.1527_Riesling_OS_TY_20200320.hcd", 0, 0x11AA3u, (uint64_t)&unk_10040253F, 0, 0);
}

uint64_t sub_100025408()
{
  return sub_100015BE4((uint64_t)"94005630427bf66340961950594dfdcaa3f22d14", (uint64_t)"BCM4350C2", (uint64_t)"USI", (uint64_t)sub_100035BF0, (uint64_t)sub_100035DA4, (uint64_t)sub_100035DB4, (uint64_t)"BCM4350C2_18.1.452.1528_Riesling_OS_USI_ST_20200320.hcd", 0, 0x11AA7u, (uint64_t)&unk_100413FE3, 0, 0);
}

uint64_t sub_10002547C()
{
  return sub_100015BE4((uint64_t)"d3485ae0ea2596be668f204f8cce168f073b0779", (uint64_t)"BCM4377B2", (uint64_t)"USI", (uint64_t)sub_100035E3C, (uint64_t)sub_100035F00, (uint64_t)sub_100035F10, (uint64_t)"BCM4377B2_21.1.238.6956_PCIE_MonstroA_OS_USI_3ANT_20221212.bin", (uint64_t)"BCM4377B2_*_MonstroA_OS_USI_*", 0x39D29u, 0, (uint64_t)"f46a5aa758db242535eeadac57ad2f0960f313d7903c18f476ac082fbcfbcc13", 0);
}

uint64_t sub_1000254F4()
{
  return sub_100015BE4((uint64_t)"d3485ae0ea2596be668f204f8cce168f073b0779", (uint64_t)"BCM4377B2", (uint64_t)"MUR", (uint64_t)sub_100035F70, (uint64_t)sub_100036034, (uint64_t)sub_100036044, (uint64_t)"BCM4377B2_21.1.238.6955_PCIE_MonstroA_OS_MUR_3ANT_20221212.bin", (uint64_t)"BCM4377B2_*_MonstroA_OS_MUR_*", 0x3A0B5u, 0, (uint64_t)"6be22b5012a5701f0ab876f4e34adb6dd44c0ea44ec802b82f3c224cbc89f3c4", 0);
}

uint64_t sub_10002556C()
{
  return sub_100015BE4((uint64_t)"18aa232bdabcf077c518c93b988e975f9b9ff1b3", (uint64_t)"BCM4377B2", (uint64_t)"USI", (uint64_t)sub_1000360A4, (uint64_t)sub_100036168, (uint64_t)sub_100036178, (uint64_t)"BCM4377B2_21.1.238.6956_PCIE_MonstroA_OS_USI_3ANT_20221212.bin", (uint64_t)"BCM4377B2_*_MonstroA_OS_USI_*", 0x39D29u, 0, (uint64_t)"f46a5aa758db242535eeadac57ad2f0960f313d7903c18f476ac082fbcfbcc13", 0);
}

uint64_t sub_1000255E4()
{
  return sub_100015BE4((uint64_t)"18aa232bdabcf077c518c93b988e975f9b9ff1b3", (uint64_t)"BCM4377B2", (uint64_t)"MUR", (uint64_t)sub_1000361D8, (uint64_t)sub_10003629C, (uint64_t)sub_1000362AC, (uint64_t)"BCM4377B2_21.1.238.6955_PCIE_MonstroA_OS_MUR_3ANT_20221212.bin", (uint64_t)"BCM4377B2_*_MonstroA_OS_MUR_*", 0x3A0B5u, 0, (uint64_t)"6be22b5012a5701f0ab876f4e34adb6dd44c0ea44ec802b82f3c224cbc89f3c4", 0);
}

uint64_t sub_10002565C()
{
  return sub_100015BE4((uint64_t)"74552176fcf284dc472c0a10df8323eb336e8dd2", (uint64_t)"BCM4377B2", (uint64_t)"USI", (uint64_t)sub_10003630C, (uint64_t)sub_1000363D0, (uint64_t)sub_1000363E0, (uint64_t)"BCM4377B2_21.1.238.6958_PCIE_MonstroB_OS_USI_3ANT_20221212.bin", (uint64_t)"BCM4377B2_*_MonstroB_OS_USI_*", 0x39D81u, 0, (uint64_t)"89794a6c4ff8d7e98afdc35f97e6219808cec2c419eae6c6ec7178f6be1274fe", 0);
}

uint64_t sub_1000256D4()
{
  return sub_100015BE4((uint64_t)"74552176fcf284dc472c0a10df8323eb336e8dd2", (uint64_t)"BCM4377B2", (uint64_t)"MUR", (uint64_t)sub_100036440, (uint64_t)sub_100036504, (uint64_t)sub_100036514, (uint64_t)"BCM4377B2_21.1.238.6957_PCIE_MonstroB_OS_MUR_3ANT_20221212.bin", (uint64_t)"BCM4377B2_*_MonstroB_OS_MUR_*", 0x3A10Du, 0, (uint64_t)"6326601cf82a5bc73033cf0e023112c2f574774fa0c93f24fca3c6af4d8fe057", 0);
}

uint64_t sub_10002574C()
{
  return sub_100015BE4((uint64_t)"9e581c149ca718b65cc247f8228061b24444258d", (uint64_t)"BCM4377B2", (uint64_t)"USI", (uint64_t)sub_100036574, (uint64_t)sub_100036638, (uint64_t)sub_100036648, (uint64_t)"BCM4377B2_21.1.238.6958_PCIE_MonstroB_OS_USI_3ANT_20221212.bin", (uint64_t)"BCM4377B2_*_MonstroB_OS_USI_*", 0x39D81u, 0, (uint64_t)"89794a6c4ff8d7e98afdc35f97e6219808cec2c419eae6c6ec7178f6be1274fe", 0);
}

uint64_t sub_1000257C4()
{
  return sub_100015BE4((uint64_t)"9e581c149ca718b65cc247f8228061b24444258d", (uint64_t)"BCM4377B2", (uint64_t)"MUR", (uint64_t)sub_1000366A8, (uint64_t)sub_10003676C, (uint64_t)sub_10003677C, (uint64_t)"BCM4377B2_21.1.238.6957_PCIE_MonstroB_OS_MUR_3ANT_20221212.bin", (uint64_t)"BCM4377B2_*_MonstroB_OS_MUR_*", 0x3A10Du, 0, (uint64_t)"6326601cf82a5bc73033cf0e023112c2f574774fa0c93f24fca3c6af4d8fe057", 0);
}

uint64_t sub_10002583C()
{
  return sub_100015BE4((uint64_t)"7222e8221d3eb7874810c899b8d1f9474c9a968e", (uint64_t)"BCM4377B2", (uint64_t)"USI", (uint64_t)sub_1000367DC, (uint64_t)sub_1000368A0, (uint64_t)sub_1000368B0, (uint64_t)"BCM4377B2_21.1.238.6964_PCIE_PinocchioA_OS_USI_3ANT_20221212.bin", (uint64_t)"BCM4377B2_*_PinocchioA_OS_USI_*", 0x39D2Au, 0, (uint64_t)"9aee0eda04a208161f1c7c249994a08ee4746f5e3fd814146c66e6db0666c490", 0);
}

uint64_t sub_1000258B4()
{
  return sub_100015BE4((uint64_t)"7222e8221d3eb7874810c899b8d1f9474c9a968e", (uint64_t)"BCM4377B2", (uint64_t)"MUR", (uint64_t)sub_100036910, (uint64_t)sub_1000369D4, (uint64_t)sub_1000369E4, (uint64_t)"BCM4377B2_21.1.238.6963_PCIE_PinocchioA_OS_MUR_3ANT_20221212.bin", (uint64_t)"BCM4377B2_*_PinocchioA_OS_MUR_*", 0x3A0B6u, 0, (uint64_t)"5a972601e7544319771a8d84395d8946861d8fd8c1234e4cf497eb3ab72c337a", 0);
}

uint64_t sub_10002592C()
{
  return sub_100015BE4((uint64_t)"eca1ea9fd896a4d821dd03ba9b40221fb40998eb", (uint64_t)"BCM4377B2", (uint64_t)"USI", (uint64_t)sub_100036A44, (uint64_t)sub_100036B08, (uint64_t)sub_100036B18, (uint64_t)"BCM4377B2_21.1.238.6964_PCIE_PinocchioA_OS_USI_3ANT_20221212.bin", (uint64_t)"BCM4377B2_*_PinocchioA_OS_USI_*", 0x39D2Au, 0, (uint64_t)"9aee0eda04a208161f1c7c249994a08ee4746f5e3fd814146c66e6db0666c490", 0);
}

uint64_t sub_1000259A4()
{
  return sub_100015BE4((uint64_t)"eca1ea9fd896a4d821dd03ba9b40221fb40998eb", (uint64_t)"BCM4377B2", (uint64_t)"MUR", (uint64_t)sub_100036B78, (uint64_t)sub_100036C3C, (uint64_t)sub_100036C4C, (uint64_t)"BCM4377B2_21.1.238.6963_PCIE_PinocchioA_OS_MUR_3ANT_20221212.bin", (uint64_t)"BCM4377B2_*_PinocchioA_OS_MUR_*", 0x3A0B6u, 0, (uint64_t)"5a972601e7544319771a8d84395d8946861d8fd8c1234e4cf497eb3ab72c337a", 0);
}

uint64_t sub_100025A1C()
{
  return sub_100015BE4((uint64_t)"7e36889100a477ebc6eb3b07f67cdc7dce63e811", (uint64_t)"BCM4377B2", (uint64_t)"USI", (uint64_t)sub_100036CAC, (uint64_t)sub_100036D70, (uint64_t)sub_100036D80, (uint64_t)"BCM4377B2_21.1.238.6966_PCIE_PinocchioB_OS_USI_3ANT_20221212.bin", (uint64_t)"BCM4377B2_*_PinocchioB_OS_USI_*", 0x39E6Eu, 0, (uint64_t)"fa5d6370d20d51888416514332e995baa366c72ef6129a5b88d664427685fe75", 0);
}

uint64_t sub_100025A94()
{
  return sub_100015BE4((uint64_t)"7e36889100a477ebc6eb3b07f67cdc7dce63e811", (uint64_t)"BCM4377B2", (uint64_t)"MUR", (uint64_t)sub_100036DE0, (uint64_t)sub_100036EA4, (uint64_t)sub_100036EB4, (uint64_t)"BCM4377B2_21.1.238.6965_PCIE_PinocchioB_OS_MUR_3ANT_20221212.bin", (uint64_t)"BCM4377B2_*_PinocchioB_OS_MUR_*", 0x3A1FAu, 0, (uint64_t)"301018514f18d594e944038ca370cc70ebcc8516833e9bd5f50110f54468f7ad", 0);
}

uint64_t sub_100025B0C()
{
  return sub_100015BE4((uint64_t)"a7865e5dfa1b55408bd1c74c169126a9a73edcb2", (uint64_t)"BCM4377B2", (uint64_t)"USI", (uint64_t)sub_100036F14, (uint64_t)sub_100036FD8, (uint64_t)sub_100036FE8, (uint64_t)"BCM4377B2_21.1.238.6966_PCIE_PinocchioB_OS_USI_3ANT_20221212.bin", (uint64_t)"BCM4377B2_*_PinocchioB_OS_USI_*", 0x39E6Eu, 0, (uint64_t)"fa5d6370d20d51888416514332e995baa366c72ef6129a5b88d664427685fe75", 0);
}

uint64_t sub_100025B84()
{
  return sub_100015BE4((uint64_t)"a7865e5dfa1b55408bd1c74c169126a9a73edcb2", (uint64_t)"BCM4377B2", (uint64_t)"MUR", (uint64_t)sub_100037048, (uint64_t)sub_10003710C, (uint64_t)sub_10003711C, (uint64_t)"BCM4377B2_21.1.238.6965_PCIE_PinocchioB_OS_MUR_3ANT_20221212.bin", (uint64_t)"BCM4377B2_*_PinocchioB_OS_MUR_*", 0x3A1FAu, 0, (uint64_t)"301018514f18d594e944038ca370cc70ebcc8516833e9bd5f50110f54468f7ad", 0);
}

uint64_t sub_100025BFC()
{
  return sub_100015BE4((uint64_t)"425d6bb3008eca94bf232eafc913ecce5cbc2e4c", (uint64_t)"BCM4377B2", (uint64_t)"MUR", (uint64_t)sub_10003717C, (uint64_t)sub_100037240, (uint64_t)sub_100037250, (uint64_t)"BCM4377B2_21.1.238.6951_PCIE_MeekoA_OS_MUR_20221212.bin", (uint64_t)"BCM4377B2_*_MeekoA_OS_MUR_*", 0x3889Eu, 0, (uint64_t)"bf13720c38093703df69aa7e16b308fa9c2350393d452efc23cd9ab599f75721", 0);
}

uint64_t sub_100025C74()
{
  return sub_100015BE4((uint64_t)"425d6bb3008eca94bf232eafc913ecce5cbc2e4c", (uint64_t)"BCM4377B2", (uint64_t)"USI", (uint64_t)sub_1000372B0, (uint64_t)sub_100037374, (uint64_t)sub_100037384, (uint64_t)"BCM4377B2_21.1.238.6952_PCIE_MeekoA_OS_USI_20221212.bin", (uint64_t)"BCM4377B2_*_MeekoA_OS_USI_*", 0x3889Eu, 0, (uint64_t)"4e5400c71f660a5ef33cd1b2774543d3c7e175caeca62fb063949fe994fb5c45", 0);
}

uint64_t sub_100025CEC()
{
  return sub_100015BE4((uint64_t)"53494ff98fc4636cea2ed1ffc9390f89a8b33992", (uint64_t)"BCM4377B2", (uint64_t)"MUR", (uint64_t)sub_1000373E4, (uint64_t)sub_1000374A8, (uint64_t)sub_1000374B8, (uint64_t)"BCM4377B2_21.1.238.6953_PCIE_MeekoB_OS_MUR_3ANT_20221212.bin", (uint64_t)"BCM4377B2_*_MeekoB_OS_MUR_*", 0x39FA7u, 0, (uint64_t)"ec59ac022f9feb9d123439129aaf855721feb5f11dc783943204ac7f25929ed2", 0);
}

uint64_t sub_100025D64()
{
  return sub_100015BE4((uint64_t)"53494ff98fc4636cea2ed1ffc9390f89a8b33992", (uint64_t)"BCM4377B2", (uint64_t)"USI", (uint64_t)sub_100037518, (uint64_t)sub_1000375DC, (uint64_t)sub_1000375EC, (uint64_t)"BCM4377B2_21.1.238.6954_PCIE_MeekoB_OS_USI_3ANT_20221212.bin", (uint64_t)"BCM4377B2_*_MeekoB_OS_USI_*", 0x39C1Bu, 0, (uint64_t)"15d5b0687f09a1d193ed6977c494fff1e56a0938768cbb68d108f184e7336152", 0);
}

uint64_t sub_100025DDC()
{
  return sub_100015BE4((uint64_t)"c0fb2dbccf234d5bceae57bcc137a1368e464f27", (uint64_t)"BCM4377B2", (uint64_t)"MUR", (uint64_t)sub_10003764C, (uint64_t)sub_100037710, (uint64_t)sub_100037720, (uint64_t)"BCM4377B2_21.1.238.6959_PCIE_NemoA_OS_MUR_20221212.bin", (uint64_t)"BCM4377B2_*_NemoA_OS_MUR_*", 0x3889Du, 0, (uint64_t)"1b85ab6e33b26e0640c880d19afc84ba3722fbded79e63486e5e961e821c7f8f", 0);
}

uint64_t sub_100025E54()
{
  return sub_100015BE4((uint64_t)"c0fb2dbccf234d5bceae57bcc137a1368e464f27", (uint64_t)"BCM4377B2", (uint64_t)"USI", (uint64_t)sub_100037780, (uint64_t)sub_100037844, (uint64_t)sub_100037854, (uint64_t)"BCM4377B2_21.1.238.6960_PCIE_NemoA_OS_USI_20221212.bin", (uint64_t)"BCM4377B2_*_NemoA_OS_USI_*", 0x3889Du, 0, (uint64_t)"6c4f2d37ed0441d9bcb7f3f4eb986f54371c1f10025f2649b6f3fcb9e260ebe5", 0);
}

uint64_t sub_100025ECC()
{
  return sub_100015BE4((uint64_t)"b418d24e5436117129fa6dda5fab49391a82bd0c", (uint64_t)"BCM4377B2", (uint64_t)"MUR", (uint64_t)sub_1000378B4, (uint64_t)sub_100037978, (uint64_t)sub_100037988, (uint64_t)"BCM4377B2_21.1.238.6961_PCIE_NemoB_OS_MUR_20221212.bin", (uint64_t)"BCM4377B2_*_NemoB_OS_MUR_*", 0x388B1u, 0, (uint64_t)"e91b5ed1c2a3b00cdc450a2cfde148958234b842508f9ca6ee31fcb1b958da0c", 0);
}

uint64_t sub_100025F44()
{
  return sub_100015BE4((uint64_t)"b418d24e5436117129fa6dda5fab49391a82bd0c", (uint64_t)"BCM4377B2", (uint64_t)"USI", (uint64_t)sub_1000379E8, (uint64_t)sub_100037AAC, (uint64_t)sub_100037ABC, (uint64_t)"BCM4377B2_21.1.238.6962_PCIE_NemoB_OS_USI_20221212.bin", (uint64_t)"BCM4377B2_*_NemoB_OS_USI_*", 0x388B1u, 0, (uint64_t)"e5bd7abaa7389368acf4edc52dafbb4e8e88548f712508405c03bb1154813ae0", 0);
}

uint64_t sub_100025FBC()
{
  return sub_100015BE4((uint64_t)"f410387dacc391c8cb729a621cb28b456c7e2843", (uint64_t)"BCM4378B1", (uint64_t)"MUR", (uint64_t)sub_100037B1C, (uint64_t)sub_100037BE0, (uint64_t)sub_100037BF0, (uint64_t)"BCM4378B1_22.1.534.3843_PCIE_MulanA_OS_MUR_20240415.bin", (uint64_t)"BCM4378B1_*_MulanA_OS_MUR_*", 0x58AFAu, 0, (uint64_t)"70da72998e23918d03442098fc3a1a5c6b83edab379c9f41df3725a79c6db616", 0);
}

uint64_t sub_100026034()
{
  return sub_100015BE4((uint64_t)"f410387dacc391c8cb729a621cb28b456c7e2843", (uint64_t)"BCM4378B1", (uint64_t)"USI", (uint64_t)sub_100037C50, (uint64_t)sub_100037D14, (uint64_t)sub_100037D24, (uint64_t)"BCM4378B1_22.1.534.3844_PCIE_MulanA_OS_USI_20240415.bin", (uint64_t)"BCM4378B1_*_MulanA_OS_USI_*", 0x58AFAu, 0, (uint64_t)"fbfec693e67be344a0e732340af3d56a65fa4bea9144ae2ad04c2cc888c1e989", 0);
}

uint64_t sub_1000260AC()
{
  return sub_100015BE4((uint64_t)"99c7aaa19f3179b9025522bfe4eee93f2b9fe311", (uint64_t)"BCM4378B1", (uint64_t)"MUR", (uint64_t)sub_100037D84, (uint64_t)sub_100037E48, (uint64_t)sub_100037E58, (uint64_t)"BCM4378B1_22.1.534.3845_PCIE_MulanB_OS_MUR_20240415.bin", (uint64_t)"BCM4378B1_*_MulanB_OS_MUR_*", 0x591F0u, 0, (uint64_t)"bb5b0232aeacabfdaf4c3ed5cde137587512715a1bc58d014959f214ad0da329", 0);
}

uint64_t sub_100026124()
{
  return sub_100015BE4((uint64_t)"99c7aaa19f3179b9025522bfe4eee93f2b9fe311", (uint64_t)"BCM4378B1", (uint64_t)"USI", (uint64_t)sub_100037EB8, (uint64_t)sub_100037F7C, (uint64_t)sub_100037F8C, (uint64_t)"BCM4378B1_22.1.534.3846_PCIE_MulanB_OS_USI_20240415.bin", (uint64_t)"BCM4378B1_*_MulanB_OS_USI_*", 0x591F0u, 0, (uint64_t)"8f2b090e86ac88f6c61c0a6a92bb61b40f97211b65f35aa41b84203e1e75cd09", 0);
}

uint64_t sub_10002619C()
{
  return sub_100015BE4((uint64_t)"80450133500158c25645d8432c247433e4327e14", (uint64_t)"BCM4378B1", (uint64_t)"MUR", (uint64_t)sub_100037FEC, (uint64_t)sub_1000380B0, (uint64_t)sub_1000380C0, (uint64_t)"BCM4378B1_22.1.534.3847_PCIE_MushuA_OS_MUR_20240415.bin", (uint64_t)"BCM4378B1_*_MushuA_OS_MUR_*", 0x58AFAu, 0, (uint64_t)"4b4dda2e6a30b619c517c73cf8749c8ec74ef5124a8629767d7f19a912414aab", 0);
}

uint64_t sub_100026214()
{
  return sub_100015BE4((uint64_t)"80450133500158c25645d8432c247433e4327e14", (uint64_t)"BCM4378B1", (uint64_t)"USI", (uint64_t)sub_100038120, (uint64_t)sub_1000381E4, (uint64_t)sub_1000381F4, (uint64_t)"BCM4378B1_22.1.534.3848_PCIE_MushuA_OS_USI_20240415.bin", (uint64_t)"BCM4378B1_*_MushuA_OS_USI_*", 0x58AFAu, 0, (uint64_t)"56af2d08023c682f4cbba69fe6c39ee6edd6e21fdcf6870e7ab5011eeb9f56d6", 0);
}

uint64_t sub_10002628C()
{
  return sub_100015BE4((uint64_t)"15ca9efe1cddfea0b8e350eb2a4d8a04ef4a1b9c", (uint64_t)"BCM4378B1", (uint64_t)"MUR", (uint64_t)sub_100038254, (uint64_t)sub_100038318, (uint64_t)sub_100038328, (uint64_t)"BCM4378B1_22.1.534.3849_PCIE_MushuB_OS_MUR_20240415.bin", (uint64_t)"BCM4378B1_*_MushuB_OS_MUR_*", 0x591F0u, 0, (uint64_t)"7beffacaf43ad61eca303452ebabe2ffe9cadb2f1ba70d1151df8416b974bd9a", 0);
}

uint64_t sub_100026304()
{
  return sub_100015BE4((uint64_t)"15ca9efe1cddfea0b8e350eb2a4d8a04ef4a1b9c", (uint64_t)"BCM4378B1", (uint64_t)"USI", (uint64_t)sub_100038388, (uint64_t)sub_10003844C, (uint64_t)sub_10003845C, (uint64_t)"BCM4378B1_22.1.534.3850_PCIE_MushuB_OS_USI_20240415.bin", (uint64_t)"BCM4378B1_*_MushuB_OS_USI_*", 0x591F0u, 0, (uint64_t)"8669bdba549a52d2cc21fe793265d1f837c6c080c04bf919083a496987e69559", 0);
}

uint64_t sub_10002637C()
{
  return sub_100015BE4((uint64_t)"8c710cd87a3297e16c10ed18e12ea4abf7479314", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_1000384BC, (uint64_t)sub_100038580, (uint64_t)sub_100038590, (uint64_t)"BCM4387C2_22.1.602.2802_PCIE_PomegranateA_CLPC_OS_USI_20240729.bin", (uint64_t)"BCM4387C2_*_PCIE_PomegranateA_CLPC_OS_USI_*", 0x7E96Bu, 0, (uint64_t)"8b500f30b9bbc524199b5dac7737b571e4ff08366f591f18b8d92dc9a660069b", 0);
}

uint64_t sub_1000263F4()
{
  return sub_100015BE4((uint64_t)"8c710cd87a3297e16c10ed18e12ea4abf7479314", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_1000385F0, (uint64_t)sub_1000386B4, (uint64_t)sub_1000386C4, (uint64_t)"BCM4387C2_22.1.602.2801_PCIE_PomegranateA_CLPC_OS_STATS_20240729.bin", (uint64_t)"BCM4387C2_*_PCIE_PomegranateA_CLPC_OS_STATS_*", 0x7E96Du, 0, (uint64_t)"37db8f33132b436544a113ad5ed58bbac3c9141bcca3898a2c00a1ae1ae2a632", 0);
}

uint64_t sub_10002646C()
{
  return sub_100015BE4((uint64_t)"b0bf53342772a8b91637b5c902accb7dd85a481a", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_100038724, (uint64_t)sub_1000387E8, (uint64_t)sub_1000387F8, (uint64_t)"BCM4387C2_22.1.602.2804_PCIE_PomegranateB_CLPC_OS_USI_20240729.bin", (uint64_t)"BCM4387C2_*_PCIE_PomegranateB_CLPC_OS_USI_*", 0x7E977u, 0, (uint64_t)"152abd6495a99071dece83ea7628121133833cb8164885ab5614d5bb7987a66c", 0);
}

uint64_t sub_1000264E4()
{
  return sub_100015BE4((uint64_t)"b0bf53342772a8b91637b5c902accb7dd85a481a", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_100038858, (uint64_t)sub_10003891C, (uint64_t)sub_10003892C, (uint64_t)"BCM4387C2_22.1.602.2803_PCIE_PomegranateB_CLPC_OS_STATS_20240729.bin", (uint64_t)"BCM4387C2_*_PCIE_PomegranateB_CLPC_OS_STATS_*", 0x7E979u, 0, (uint64_t)"ebb0b2b13fe71eb5c68b0ec6bb9bbf396be8f5574d0603ed40a24527159d1884", 0);
}

uint64_t sub_10002655C()
{
  return sub_100015BE4((uint64_t)"0c1bbe1ed1f972193dc40144a98b28307aab0a29", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10003898C, (uint64_t)sub_100038A50, (uint64_t)sub_100038A60, (uint64_t)"BCM4387C2_22.1.602.2856_PCIE_RambutanA_CLPC_OS_USI_20240729.bin", (uint64_t)"BCM4387C2_*_PCIE_RambutanA_CLPC_OS_USI_*", 0x7F027u, 0, (uint64_t)"a01887b8b57491323a7fd984969724fe957c361379a04f8d72a676f94d295b97", 0);
}

uint64_t sub_1000265D4()
{
  return sub_100015BE4((uint64_t)"0c1bbe1ed1f972193dc40144a98b28307aab0a29", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_100038AC0, (uint64_t)sub_100038B84, (uint64_t)sub_100038B94, (uint64_t)"BCM4387C2_22.1.602.2855_PCIE_RambutanA_CLPC_OS_STATS_20240729.bin", (uint64_t)"BCM4387C2_*_PCIE_RambutanA_CLPC_OS_STATS_*", 0x7F029u, 0, (uint64_t)"43541aae0165dd793c43f38c9ac503360a48e494262b63c42834459f6ce349e7", 0);
}

uint64_t sub_10002664C()
{
  return sub_100015BE4((uint64_t)"e255efceab97cb4b4299e997a5bef8cd660697e2", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_100038BF4, (uint64_t)sub_100038CB8, (uint64_t)sub_100038CC8, (uint64_t)"BCM4387C2_22.1.602.2858_PCIE_RambutanB_CLPC_OS_USI_20240729.bin", (uint64_t)"BCM4387C2_*_PCIE_RambutanB_CLPC_OS_USI_*", 0x80799u, 0, (uint64_t)"daf341682d34109857b08a350cc9043fbacc49a46325cdfbeb2048c957bdc516", 0);
}

uint64_t sub_1000266C4()
{
  return sub_100015BE4((uint64_t)"e255efceab97cb4b4299e997a5bef8cd660697e2", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_100038D28, (uint64_t)sub_100038DEC, (uint64_t)sub_100038DFC, (uint64_t)"BCM4387C2_22.1.602.2857_PCIE_RambutanB_CLPC_OS_STATS_20240729.bin", (uint64_t)"BCM4387C2_*_PCIE_RambutanB_CLPC_OS_STATS_*", 0x8079Bu, 0, (uint64_t)"d10c287ba36091f3ec9ca85cfa285000fadf67935fcab06c8d68dbc10bcfc136", 0);
}

uint64_t sub_10002673C()
{
  return sub_100015BE4((uint64_t)"9c99218366efb85adcd182800ac2b6c3ec9d7adf", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_100038E5C, (uint64_t)sub_100038F20, (uint64_t)sub_100038F30, (uint64_t)"BCM4387C2_22.1.602.2852_PCIE_LycheeA_CLPC_OS_USI_20240729.bin", (uint64_t)"BCM4387C2_*_PCIE_LycheeA_CLPC_OS_USI_*", 0x7F0B2u, 0, (uint64_t)"cc75f9152a22dcb3fa30298b16f943abcbe87e864f642c59f2c10108ce60c81b", 0);
}

uint64_t sub_1000267B4()
{
  return sub_100015BE4((uint64_t)"9c99218366efb85adcd182800ac2b6c3ec9d7adf", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_100038F90, (uint64_t)sub_100039054, (uint64_t)sub_100039064, (uint64_t)"BCM4387C2_22.1.602.2851_PCIE_LycheeA_CLPC_OS_STATS_20240729.bin", (uint64_t)"BCM4387C2_*_PCIE_LycheeA_CLPC_OS_STATS_*", 0x7F0B4u, 0, (uint64_t)"5c4b7ddfc4eb4c935854c8ef32a2491812460786b91acaf70294471e9797018e", 0);
}

uint64_t sub_10002682C()
{
  return sub_100015BE4((uint64_t)"671ab6461038006837f6613e6131a24d6ecf3746", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_1000390C4, (uint64_t)sub_100039188, (uint64_t)sub_100039198, (uint64_t)"BCM4387C2_22.1.602.2854_PCIE_LycheeB_CLPC_OS_USI_20240729.bin", (uint64_t)"BCM4387C2_*_PCIE_LycheeB_CLPC_OS_USI_*", 0x808DFu, 0, (uint64_t)"cd42273382009c51736388211a8b9d76b8b3c58332fd255a26dc2cf12f5ac9fb", 0);
}

uint64_t sub_1000268A4()
{
  return sub_100015BE4((uint64_t)"671ab6461038006837f6613e6131a24d6ecf3746", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_1000391F8, (uint64_t)sub_1000392BC, (uint64_t)sub_1000392CC, (uint64_t)"BCM4387C2_22.1.602.2853_PCIE_LycheeB_CLPC_OS_STATS_20240729.bin", (uint64_t)"BCM4387C2_*_PCIE_LycheeB_CLPC_OS_STATS_*", 0x808E1u, 0, (uint64_t)"a595ef491fd7db782c63db19a8e00e322b60fdb26a21bda6d55f209ebf30d337", 0);
}

uint64_t sub_10002691C()
{
  return sub_100015BE4((uint64_t)"469e8eaff261198443795930e976ca46f182b6eb", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10003932C, (uint64_t)sub_1000393F0, (uint64_t)sub_100039400, (uint64_t)"BCM4387C2_22.1.602.2810_PCIE_CarambolaA_CLPC_OS_USI_20240729.bin", (uint64_t)"BCM4387C2_*_PCIE_CarambolaA_CLPC_OS_USI_*", 0x7F015u, 0, (uint64_t)"e69f10954cc74b5f4c4b6e86a63c1618f76afae56fab021ee027a212c750e238", 0);
}

uint64_t sub_100026994()
{
  return sub_100015BE4((uint64_t)"469e8eaff261198443795930e976ca46f182b6eb", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_100039460, (uint64_t)sub_100039524, (uint64_t)sub_100039534, (uint64_t)"BCM4387C2_22.1.602.2809_PCIE_CarambolaA_CLPC_OS_STATS_20240729.bin", (uint64_t)"BCM4387C2_*_PCIE_CarambolaA_CLPC_OS_STATS_*", 0x7F017u, 0, (uint64_t)"af20d6294c555270dddb83466123fbee99f1be115884ec9fd0497117632111d7", 0);
}

uint64_t sub_100026A0C()
{
  return sub_100015BE4((uint64_t)"eeda5238acfd44909d7fa64eed1671e6abe3ad5f", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_100039594, (uint64_t)sub_100039658, (uint64_t)sub_100039668, (uint64_t)"BCM4387C2_22.1.602.2812_PCIE_CarambolaB_CLPC_OS_USI_20240729.bin", (uint64_t)"BCM4387C2_*_PCIE_CarambolaB_CLPC_OS_USI_*", 0x8091Eu, 0, (uint64_t)"328ce829b8ada35cb6495d3c58959258729ea7c81b0fd4790451355547005007", 0);
}

uint64_t sub_100026A84()
{
  return sub_100015BE4((uint64_t)"eeda5238acfd44909d7fa64eed1671e6abe3ad5f", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_1000396C8, (uint64_t)sub_10003978C, (uint64_t)sub_10003979C, (uint64_t)"BCM4387C2_22.1.602.2811_PCIE_CarambolaB_CLPC_OS_STATS_20240729.bin", (uint64_t)"BCM4387C2_*_PCIE_CarambolaB_CLPC_OS_STATS_*", 0x80920u, 0, (uint64_t)"af2edcd9105ab96e2306859cc80c36ecb254729409c585bb86052158cdcbb2b8", 0);
}

uint64_t sub_100026AFC()
{
  return sub_100015BE4((uint64_t)"cd0e337fdabd4cb9decd57700c8189532a4f2239", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)sub_1000397FC, (uint64_t)sub_1000398C0, (uint64_t)sub_1000398D0, (uint64_t)"BCM4388C0_22.1.496.810_PCIE_PineDA_CLPC_OS_USI_20240812.bin", (uint64_t)"BCM4388C0_*_PCIE_PineDA_CLPC_OS_USI_*", 0xC970Au, 0, (uint64_t)"23ab520dc2791edf19e87d36976c7a9bc6e97f20a27adfa977a71d452b3ff3a6", 0);
}

uint64_t sub_100026B74()
{
  return sub_100015BE4((uint64_t)"cd0e337fdabd4cb9decd57700c8189532a4f2239", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)sub_100039930, (uint64_t)sub_1000399F4, (uint64_t)sub_100039A04, (uint64_t)"BCM4388C0_22.1.496.809_PCIE_PineDA_CLPC_OS_STATS_20240812.bin", (uint64_t)"BCM4388C0_*_PCIE_PineDA_CLPC_OS_STATS_*", 0xC970Cu, 0, (uint64_t)"fdce7820f12cfd02cc89ec5dceec0bd944929886a8a862371fb0bb02a76305e7", 0);
}

uint64_t sub_100026BEC()
{
  return sub_100016780((uint64_t)"cd0e337fdabd4cb9decd57700c8189532a4f2239", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)"BCM4388C0_22.1.496.808_PCIE_PineDA_CLPC_OS_LPM_USI_20240812.bin", 825098, (uint64_t)"4508d5b7dc782b75a21b931f37ab57e58503aebc20672f7a83145f1fb53ac6f9");
}

uint64_t sub_100026C20()
{
  return sub_100016780((uint64_t)"cd0e337fdabd4cb9decd57700c8189532a4f2239", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)"BCM4388C0_22.1.496.807_PCIE_PineDA_CLPC_OS_LPM_STATS_20240812.bin", 825100, (uint64_t)"6e882c4c8108f7fce4b0a14d1bde79fea14f0ab3055a2aafedc4025854625655");
}

uint64_t sub_100026C54()
{
  return sub_100015BE4((uint64_t)"bab75d83e78e7bfb7a26484e9f86b7c1174c41ff", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)sub_100039A64, (uint64_t)sub_100039B28, (uint64_t)sub_100039B38, (uint64_t)"BCM4388C0_22.1.496.814_PCIE_PineDB_CLPC_OS_USI_20240812.bin", (uint64_t)"BCM4388C0_*_PCIE_PineDB_CLPC_OS_USI_*", 0xCCA88u, 0, (uint64_t)"3bce8e733dc2521ee97479027e83de94badc54f145066b157eee81b5f72eeefd", 0);
}

uint64_t sub_100026CCC()
{
  return sub_100015BE4((uint64_t)"bab75d83e78e7bfb7a26484e9f86b7c1174c41ff", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)sub_100039B98, (uint64_t)sub_100039C5C, (uint64_t)sub_100039C6C, (uint64_t)"BCM4388C0_22.1.496.813_PCIE_PineDB_CLPC_OS_STATS_20240812.bin", (uint64_t)"BCM4388C0_*_PCIE_PineDB_CLPC_OS_STATS_*", 0xCCA8Au, 0, (uint64_t)"ad73db577630d5690439b2a7cdcf2fffce0e711331f96c35e2c5c6f92f47f56b", 0);
}

uint64_t sub_100026D44()
{
  return sub_100016780((uint64_t)"bab75d83e78e7bfb7a26484e9f86b7c1174c41ff", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)"BCM4388C0_22.1.496.812_PCIE_PineDB_CLPC_OS_LPM_USI_20240812.bin", 838280, (uint64_t)"757cf5c37ab360b62f95cf4bef1c9ea42bd69bbe0792b23ade4acbad1bff22e3");
}

uint64_t sub_100026D78()
{
  return sub_100016780((uint64_t)"bab75d83e78e7bfb7a26484e9f86b7c1174c41ff", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)"BCM4388C0_22.1.496.811_PCIE_PineDB_CLPC_OS_LPM_STATS_20240812.bin", 838282, (uint64_t)"213ab7f99aeb3371fc8968d3d00371d7acbd7fcc245f39a8ef54d22238691ac6");
}

uint64_t sub_100026DAC()
{
  return sub_100015BE4((uint64_t)"8bbcb19183f4b6143b7b9c201712daf113991b52", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)sub_100039CCC, (uint64_t)sub_100039D90, (uint64_t)sub_100039DA0, (uint64_t)"BCM4388C0_22.1.496.802_PCIE_MapleDA_CLPC_OS_USI_20240812.bin", (uint64_t)"BCM4388C0_*_PCIE_MapleDA_CLPC_OS_USI_*", 0xCA057u, 0, (uint64_t)"93fa568a083669d4383e4b92e322b457258ed0da97154618272d799f5f0b8ee5", 0);
}

uint64_t sub_100026E24()
{
  return sub_100015BE4((uint64_t)"8bbcb19183f4b6143b7b9c201712daf113991b52", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)sub_100039E00, (uint64_t)sub_100039EC4, (uint64_t)sub_100039ED4, (uint64_t)"BCM4388C0_22.1.496.801_PCIE_MapleDA_CLPC_OS_STATS_20240812.bin", (uint64_t)"BCM4388C0_*_PCIE_MapleDA_CLPC_OS_STATS_*", 0xCA059u, 0, (uint64_t)"fb40b4a6116c4577da5593b3e3364f57b347976cb38b63f2197424e1baec9a6a", 0);
}

uint64_t sub_100026E9C()
{
  return sub_100016780((uint64_t)"8bbcb19183f4b6143b7b9c201712daf113991b52", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)"BCM4388C0_22.1.496.800_PCIE_MapleDA_CLPC_OS_LPM_USI_20240812.bin", 827479, (uint64_t)"90278a2658e21b8fa6f9a8d1a11c07b2b35bce0130625b3435854e5081c2b3b2");
}

uint64_t sub_100026ED0()
{
  return sub_100016780((uint64_t)"8bbcb19183f4b6143b7b9c201712daf113991b52", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)"BCM4388C0_22.1.496.799_PCIE_MapleDA_CLPC_OS_LPM_STATS_20240812.bin", 827481, (uint64_t)"dde4868f23415ca6bf192cd52dffa3a66b28d36af3f0bcafad35b71050cc3f34");
}

uint64_t sub_100026F04()
{
  return sub_100015BE4((uint64_t)"caacad8370623331ff148fa8e3422166c1181ee1", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)sub_100039F34, (uint64_t)sub_100039FF8, (uint64_t)sub_10003A008, (uint64_t)"BCM4388C0_22.1.496.806_PCIE_MapleDB_CLPC_OS_USI_20240812.bin", (uint64_t)"BCM4388C0_*_PCIE_MapleDB_CLPC_OS_USI_*", 0xCCA99u, 0, (uint64_t)"89ac8d54a6926e10cd3d757f1b71abac5ec5447eccf25b09f0e884c458ac9666", 0);
}

uint64_t sub_100026F7C()
{
  return sub_100015BE4((uint64_t)"caacad8370623331ff148fa8e3422166c1181ee1", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)sub_10003A068, (uint64_t)sub_10003A12C, (uint64_t)sub_10003A13C, (uint64_t)"BCM4388C0_22.1.496.805_PCIE_MapleDB_CLPC_OS_STATS_20240812.bin", (uint64_t)"BCM4388C0_*_PCIE_MapleDB_CLPC_OS_STATS_*", 0xCCA9Bu, 0, (uint64_t)"2d63bdb3c8d231819356cc51ae18f1b73b3582e09872a77959dd1715063973f1", 0);
}

uint64_t sub_100026FF4()
{
  return sub_100016780((uint64_t)"caacad8370623331ff148fa8e3422166c1181ee1", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)"BCM4388C0_22.1.496.804_PCIE_MapleDB_CLPC_OS_LPM_USI_20240812.bin", 838297, (uint64_t)"2e9e0d2fda16d8d21dc769189d55ba594661b03a8a9390e71458b5f52ed752d7");
}

uint64_t sub_100027028()
{
  return sub_100016780((uint64_t)"caacad8370623331ff148fa8e3422166c1181ee1", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)"BCM4388C0_22.1.496.803_PCIE_MapleDB_CLPC_OS_LPM_STATS_20240812.bin", 838299, (uint64_t)"6b3708c996a8255f91a1c1dfd38bf043d1e505d19184057ad4aca3df30f6f8d4");
}

uint64_t sub_10002705C()
{
  return sub_100015BE4((uint64_t)"d3fc929a4e75941e0f19747f3ce027b6b0978ed6", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10003A19C, (uint64_t)sub_10003A260, (uint64_t)sub_10003A270, (uint64_t)"BCM4387C2_22.1.602.2830_PCIE_BoabA_CLPC_OS_USI_20240729.bin", (uint64_t)"BCM4387C2_*_BoabA_*_OS_USI_*", 0x7EEA4u, 0, (uint64_t)"4c9e2301babe07cb4a750617c244c41669454f735c5c66e7cde396edabb1cf5a", 0);
}

uint64_t sub_1000270D4()
{
  return sub_100015BE4((uint64_t)"d3fc929a4e75941e0f19747f3ce027b6b0978ed6", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10003A2D0, (uint64_t)sub_10003A394, (uint64_t)sub_10003A3A4, (uint64_t)"BCM4387C2_22.1.602.2829_PCIE_BoabA_CLPC_OS_STATS_20240729.bin", (uint64_t)"BCM4387C2_*_BoabA_*_OS_STATS_*", 0x7EEA6u, 0, (uint64_t)"5cbb4e0c757f233baf336973db7d3bef1d672a87c1df2426eed2a5ba838706a7", 0);
}

uint64_t sub_10002714C()
{
  return sub_100015BE4((uint64_t)"4b18f9c0baffdf5ff5d13972497c8e93a983f32f", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10003A404, (uint64_t)sub_10003A4C8, (uint64_t)sub_10003A4D8, (uint64_t)"BCM4387C2_22.1.602.2830_PCIE_BoabA_CLPC_OS_USI_20240729.bin", (uint64_t)"BCM4387C2_*_BoabA_*_OS_USI_*", 0x7EEA4u, 0, (uint64_t)"4c9e2301babe07cb4a750617c244c41669454f735c5c66e7cde396edabb1cf5a", 0);
}

uint64_t sub_1000271C4()
{
  return sub_100015BE4((uint64_t)"4b18f9c0baffdf5ff5d13972497c8e93a983f32f", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10003A538, (uint64_t)sub_10003A5FC, (uint64_t)sub_10003A60C, (uint64_t)"BCM4387C2_22.1.602.2829_PCIE_BoabA_CLPC_OS_STATS_20240729.bin", (uint64_t)"BCM4387C2_*_BoabA_*_OS_STATS_*", 0x7EEA6u, 0, (uint64_t)"5cbb4e0c757f233baf336973db7d3bef1d672a87c1df2426eed2a5ba838706a7", 0);
}

uint64_t sub_10002723C()
{
  return sub_100015BE4((uint64_t)"b43f2151332cf7b48f51472d3dae9843039b3c60", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10003A66C, (uint64_t)sub_10003A730, (uint64_t)sub_10003A740, (uint64_t)"BCM4387C2_22.1.602.2832_PCIE_BoabB_CLPC_OS_USI_20240729.bin", (uint64_t)"BCM4387C2_*_BoabB_*_OS_USI_*", 0x7EED0u, 0, (uint64_t)"bee322c8f637947cd50e6940852e06c3e6444bbe086835556f9d951226098a9c", 0);
}

uint64_t sub_1000272B4()
{
  return sub_100015BE4((uint64_t)"b43f2151332cf7b48f51472d3dae9843039b3c60", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10003A7A0, (uint64_t)sub_10003A864, (uint64_t)sub_10003A874, (uint64_t)"BCM4387C2_22.1.602.2831_PCIE_BoabB_CLPC_OS_STATS_20240729.bin", (uint64_t)"BCM4387C2_*_BoabB_*_OS_STATS_*", 0x7EED2u, 0, (uint64_t)"508b8182e5ff2039503abf215cc1d4c33fa22107c58c9d981a06139dd1de9891", 0);
}

uint64_t sub_10002732C()
{
  return sub_100015BE4((uint64_t)"5503841f5e12c7ebbd59d490bf195bb600415413", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10003A8D4, (uint64_t)sub_10003A998, (uint64_t)sub_10003A9A8, (uint64_t)"BCM4387C2_22.1.602.2832_PCIE_BoabB_CLPC_OS_USI_20240729.bin", (uint64_t)"BCM4387C2_*_BoabB_*_OS_USI_*", 0x7EED0u, 0, (uint64_t)"bee322c8f637947cd50e6940852e06c3e6444bbe086835556f9d951226098a9c", 0);
}

uint64_t sub_1000273A4()
{
  return sub_100015BE4((uint64_t)"5503841f5e12c7ebbd59d490bf195bb600415413", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10003AA08, (uint64_t)sub_10003AACC, (uint64_t)sub_10003AADC, (uint64_t)"BCM4387C2_22.1.602.2831_PCIE_BoabB_CLPC_OS_STATS_20240729.bin", (uint64_t)"BCM4387C2_*_BoabB_*_OS_STATS_*", 0x7EED2u, 0, (uint64_t)"508b8182e5ff2039503abf215cc1d4c33fa22107c58c9d981a06139dd1de9891", 0);
}

uint64_t sub_10002741C()
{
  return sub_100015BE4((uint64_t)"1e8cde9590626720064ec3ad3ca99379505f6e1b", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10003AB3C, (uint64_t)sub_10003AC00, (uint64_t)sub_10003AC10, (uint64_t)"BCM4387C2_22.1.602.2826_PCIE_BaobabA_CLPC_OS_USI_20240729.bin", (uint64_t)"BCM4387C2_*_BaobabA_*_OS_USI_*", 0x7EEA6u, 0, (uint64_t)"d2267a01a0c90ce2770f9611e197a00a38d4d13987c9e73fce14687c9e5c5b9a", 0);
}

uint64_t sub_100027494()
{
  return sub_100015BE4((uint64_t)"1e8cde9590626720064ec3ad3ca99379505f6e1b", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10003AC70, (uint64_t)sub_10003AD34, (uint64_t)sub_10003AD44, (uint64_t)"BCM4387C2_22.1.602.2825_PCIE_BaobabA_CLPC_OS_STATS_20240729.bin", (uint64_t)"BCM4387C2_*_BaobabA_*_OS_STATS_*", 0x7EEA8u, 0, (uint64_t)"f97b7bcbe00592fe1853e451f623cec521f88cb401ab75ffcfc71b731294e4e9", 0);
}

uint64_t sub_10002750C()
{
  return sub_100015BE4((uint64_t)"1738c33ad98962e15b468aacf72f9d2431a7d87f", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10003ADA4, (uint64_t)sub_10003AE68, (uint64_t)sub_10003AE78, (uint64_t)"BCM4387C2_22.1.602.2826_PCIE_BaobabA_CLPC_OS_USI_20240729.bin", (uint64_t)"BCM4387C2_*_BaobabA_*_OS_USI_*", 0x7EEA6u, 0, (uint64_t)"d2267a01a0c90ce2770f9611e197a00a38d4d13987c9e73fce14687c9e5c5b9a", 0);
}

uint64_t sub_100027584()
{
  return sub_100015BE4((uint64_t)"1738c33ad98962e15b468aacf72f9d2431a7d87f", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10003AED8, (uint64_t)sub_10003AF9C, (uint64_t)sub_10003AFAC, (uint64_t)"BCM4387C2_22.1.602.2825_PCIE_BaobabA_CLPC_OS_STATS_20240729.bin", (uint64_t)"BCM4387C2_*_BaobabA_*_OS_STATS_*", 0x7EEA8u, 0, (uint64_t)"f97b7bcbe00592fe1853e451f623cec521f88cb401ab75ffcfc71b731294e4e9", 0);
}

uint64_t sub_1000275FC()
{
  return sub_100015BE4((uint64_t)"44050c1747b24c055300ff2304fefd11a8839f07", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10003B00C, (uint64_t)sub_10003B0D0, (uint64_t)sub_10003B0E0, (uint64_t)"BCM4387C2_22.1.602.2828_PCIE_BaobabB_CLPC_OS_USI_20240729.bin", (uint64_t)"BCM4387C2_*_BaobabB_*_OS_USI_*", 0x7EED2u, 0, (uint64_t)"11b86dcc52f251a2f1e9d39ccd80d893e1ffe06a4cc990c97991b8388f502a2b", 0);
}

uint64_t sub_100027674()
{
  return sub_100015BE4((uint64_t)"44050c1747b24c055300ff2304fefd11a8839f07", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10003B140, (uint64_t)sub_10003B204, (uint64_t)sub_10003B214, (uint64_t)"BCM4387C2_22.1.602.2827_PCIE_BaobabB_CLPC_OS_STATS_20240729.bin", (uint64_t)"BCM4387C2_*_BaobabB_*_OS_STATS_*", 0x7EED4u, 0, (uint64_t)"3b678bc7db3595d0867ed77efabdd45a83a1c3d050a5b5a6c40dc5c951572fb2", 0);
}

uint64_t sub_1000276EC()
{
  return sub_100015BE4((uint64_t)"d0ab5982f1f1fee517ea387c5cd59879dc1fd63f", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10003B274, (uint64_t)sub_10003B338, (uint64_t)sub_10003B348, (uint64_t)"BCM4387C2_22.1.602.2828_PCIE_BaobabB_CLPC_OS_USI_20240729.bin", (uint64_t)"BCM4387C2_*_BaobabB_*_OS_USI_*", 0x7EED2u, 0, (uint64_t)"11b86dcc52f251a2f1e9d39ccd80d893e1ffe06a4cc990c97991b8388f502a2b", 0);
}

uint64_t sub_100027764()
{
  return sub_100015BE4((uint64_t)"d0ab5982f1f1fee517ea387c5cd59879dc1fd63f", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10003B3A8, (uint64_t)sub_10003B46C, (uint64_t)sub_10003B47C, (uint64_t)"BCM4387C2_22.1.602.2827_PCIE_BaobabB_CLPC_OS_STATS_20240729.bin", (uint64_t)"BCM4387C2_*_BaobabB_*_OS_STATS_*", 0x7EED4u, 0, (uint64_t)"3b678bc7db3595d0867ed77efabdd45a83a1c3d050a5b5a6c40dc5c951572fb2", 0);
}

uint64_t sub_1000277DC()
{
  return sub_100015BE4((uint64_t)"d973ac72c319475a1b4d61c8ba836b40ec64f06f", (uint64_t)"BCM4388B0", (uint64_t)"USI", (uint64_t)sub_10003B4DC, (uint64_t)sub_10003B5A0, (uint64_t)sub_10003B5B0, (uint64_t)"BCM4388B0_20.1.168.493_PCIE_MahoganyA_CLPC_OS_USI_20220318.bin", (uint64_t)"BCM4388B0_*_PCIE_MahoganyA_CLPC_OS_USI_*", 0x49D09u, 0, (uint64_t)"089076ee02c3b27760be76c41f47e26e1a03b4905ea5dfe53f147842794f303d", 0);
}

uint64_t sub_100027854()
{
  return sub_100015BE4((uint64_t)"d973ac72c319475a1b4d61c8ba836b40ec64f06f", (uint64_t)"BCM4388B0", (uint64_t)"STA", (uint64_t)sub_10003B610, (uint64_t)sub_10003B6D4, (uint64_t)sub_10003B6E4, (uint64_t)"BCM4388B0_20.1.168.492_PCIE_MahoganyA_CLPC_OS_STATS_20220318.bin", (uint64_t)"BCM4388B0_*_PCIE_MahoganyA_CLPC_OS_STATS_*", 0x49D63u, 0, (uint64_t)"f74240c983523a1ab26e7e6cae037b405332025a2bbb731f4617e020579124d3", 0);
}

uint64_t sub_1000278CC()
{
  return sub_100015BE4((uint64_t)"ecec03b5d2a104f38c04890833c815d7ce03e066", (uint64_t)"BCM4388B0", (uint64_t)"USI", (uint64_t)sub_10003B744, (uint64_t)sub_10003B808, (uint64_t)sub_10003B818, (uint64_t)"BCM4388B0_20.1.168.493_PCIE_MahoganyB_CLPC_OS_USI_20220302.bin", (uint64_t)"BCM4388B0_*_PCIE_MahoganyB_CLPC_OS_USI_*", 0x49D09u, 0, (uint64_t)"089076ee02c3b27760be76c41f47e26e1a03b4905ea5dfe53f147842794f303d", 0);
}

uint64_t sub_100027944()
{
  return sub_100015BE4((uint64_t)"ecec03b5d2a104f38c04890833c815d7ce03e066", (uint64_t)"BCM4388B0", (uint64_t)"STA", (uint64_t)sub_10003B878, (uint64_t)sub_10003B93C, (uint64_t)sub_10003B94C, (uint64_t)"BCM4388B0_20.1.168.492_PCIE_MahoganyB_CLPC_OS_STATS_20220302.bin", (uint64_t)"BCM4388B0_*_PCIE_MahoganyB_CLPC_OS_STATS_*", 0x49D63u, 0, (uint64_t)"f74240c983523a1ab26e7e6cae037b405332025a2bbb731f4617e020579124d3", 0);
}

uint64_t sub_1000279BC()
{
  return sub_100015BE4((uint64_t)"799fc3d0a43972cc867dd8cd0babc49587fd1f20", (uint64_t)"BCM4388B0", (uint64_t)"USI", (uint64_t)sub_10003B9AC, (uint64_t)sub_10003BA70, (uint64_t)sub_10003BA80, (uint64_t)"BCM4388B0_20.1.168.489_PCIE_HickoryA_CLPC_OS_USI_20220318.bin", (uint64_t)"BCM4388B0_*_PCIE_HickoryA_CLPC_OS_USI_*", 0x49CE8u, 0, (uint64_t)"309356afa7290b0a43bf2454ba3818de1a03f910926f93d12f9949c9aba16edd", 0);
}

uint64_t sub_100027A34()
{
  return sub_100015BE4((uint64_t)"799fc3d0a43972cc867dd8cd0babc49587fd1f20", (uint64_t)"BCM4388B0", (uint64_t)"STA", (uint64_t)sub_10003BAE0, (uint64_t)sub_10003BBA4, (uint64_t)sub_10003BBB4, (uint64_t)"BCM4388B0_20.1.168.488_PCIE_HickoryA_CLPC_OS_STATS_20220318.bin", (uint64_t)"BCM4388B0_*_PCIE_HickoryA_CLPC_OS_STATS_*", 0x49D3Au, 0, (uint64_t)"19424b455e7e94012c4ab529bb0f098aad8ffc553b8029d126371fd2250441e2", 0);
}

uint64_t sub_100027AAC()
{
  return sub_100015BE4((uint64_t)"9293cbbd22b61f1c7a55d12571c98c68d7f8d37a", (uint64_t)"BCM4388B0", (uint64_t)"USI", (uint64_t)sub_10003BC14, (uint64_t)sub_10003BCD8, (uint64_t)sub_10003BCE8, (uint64_t)"BCM4388B0_20.1.168.489_PCIE_HickoryB_CLPC_OS_USI_20220302.bin", (uint64_t)"BCM4388B0_*_PCIE_HickoryB_CLPC_OS_USI_*", 0x49CE8u, 0, (uint64_t)"309356afa7290b0a43bf2454ba3818de1a03f910926f93d12f9949c9aba16edd", 0);
}

uint64_t sub_100027B24()
{
  return sub_100015BE4((uint64_t)"9293cbbd22b61f1c7a55d12571c98c68d7f8d37a", (uint64_t)"BCM4388B0", (uint64_t)"STA", (uint64_t)sub_10003BD48, (uint64_t)sub_10003BE0C, (uint64_t)sub_10003BE1C, (uint64_t)"BCM4388B0_20.1.168.488_PCIE_HickoryB_CLPC_OS_STATS_20220302.bin", (uint64_t)"BCM4388B0_*_PCIE_HickoryB_CLPC_OS_STATS_*", 0x49D3Au, 0, (uint64_t)"19424b455e7e94012c4ab529bb0f098aad8ffc553b8029d126371fd2250441e2", 0);
}

uint64_t sub_100027B9C()
{
  return sub_100015BE4((uint64_t)"d973ac72c319475a1b4d61c8ba836b40ec64f06f", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)sub_10003BE7C, (uint64_t)sub_10003BF40, (uint64_t)sub_10003BF50, (uint64_t)"BCM4388C0_22.1.496.758_PCIE_MahoganyA_CLPC_OS_USI_20240812.bin", (uint64_t)"BCM4388C0_*_PCIE_MahoganyA_CLPC_OS_USI_*", 0xA084Du, 0, (uint64_t)"717367c7e561f1de57f41f3e03fa270dbcc9cf1b02cc66dc910a0cc98128b071", 0);
}

uint64_t sub_100027C14()
{
  return sub_100015BE4((uint64_t)"d973ac72c319475a1b4d61c8ba836b40ec64f06f", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)sub_10003BFB0, (uint64_t)sub_10003C074, (uint64_t)sub_10003C084, (uint64_t)"BCM4388C0_22.1.496.757_PCIE_MahoganyA_CLPC_OS_STATS_20240812.bin", (uint64_t)"BCM4388C0_*_PCIE_MahoganyA_CLPC_OS_STATS_*", 0xA084Fu, 0, (uint64_t)"8f44ad53d56870cdbd579066c3822305fd67e9a76ba206a5db9606b30755960f", 0);
}

uint64_t sub_100027C8C()
{
  return sub_100016780((uint64_t)"d973ac72c319475a1b4d61c8ba836b40ec64f06f", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)"BCM4388C0_22.1.496.756_PCIE_MahoganyA_CLPC_OS_LPM_USI_20240812.bin", 657485, (uint64_t)"a0bc8ade815245323f24fc0c7d7ce07a3ae9a20b4c0898afced1afc7b1dbf7d2");
}

uint64_t sub_100027CC0()
{
  return sub_100016780((uint64_t)"d973ac72c319475a1b4d61c8ba836b40ec64f06f", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)"BCM4388C0_22.1.496.755_PCIE_MahoganyA_CLPC_OS_LPM_STATS_20240812.bin", 657487, (uint64_t)"75e00ba61362da220b2c5589b9ffeec332af94e0d59998380f84e89c3c534398");
}

uint64_t sub_100027CF4()
{
  return sub_100015BE4((uint64_t)"ecec03b5d2a104f38c04890833c815d7ce03e066", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)sub_10003C0E4, (uint64_t)sub_10003C1A8, (uint64_t)sub_10003C1B8, (uint64_t)"BCM4388C0_22.1.496.762_PCIE_MahoganyB_CLPC_OS_USI_20240812.bin", (uint64_t)"BCM4388C0_*_PCIE_MahoganyB_CLPC_OS_USI_*", 0xA32E1u, 0, (uint64_t)"bde0e928631097cd424d34435e75c414659d50438eb30897f6706440a62cadb7", 0);
}

uint64_t sub_100027D6C()
{
  return sub_100015BE4((uint64_t)"ecec03b5d2a104f38c04890833c815d7ce03e066", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)sub_10003C218, (uint64_t)sub_10003C2DC, (uint64_t)sub_10003C2EC, (uint64_t)"BCM4388C0_22.1.496.761_PCIE_MahoganyB_CLPC_OS_STATS_20240812.bin", (uint64_t)"BCM4388C0_*_PCIE_MahoganyB_CLPC_OS_STATS_*", 0xA32E3u, 0, (uint64_t)"88f3c2e390c54669e8ed1c35732186292e7f7c3ea44625af70dfcf4f83064cd7", 0);
}

uint64_t sub_100027DE4()
{
  return sub_100016780((uint64_t)"ecec03b5d2a104f38c04890833c815d7ce03e066", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)"BCM4388C0_22.1.496.760_PCIE_MahoganyB_CLPC_OS_LPM_USI_20240812.bin", 668385, (uint64_t)"90874976f27efe138a085567424f7c1e4e4c988d4a81370c43b6b0f34f3f55d1");
}

uint64_t sub_100027E18()
{
  return sub_100016780((uint64_t)"ecec03b5d2a104f38c04890833c815d7ce03e066", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)"BCM4388C0_22.1.496.759_PCIE_MahoganyB_CLPC_OS_LPM_STATS_20240812.bin", 668387, (uint64_t)"6069eed2405ffe3b93a9f9c603a310a4f720e5ecea814a18746a909f12923a8c");
}

uint64_t sub_100027E4C()
{
  return sub_100015BE4((uint64_t)"799fc3d0a43972cc867dd8cd0babc49587fd1f20", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)sub_10003C34C, (uint64_t)sub_10003C410, (uint64_t)sub_10003C420, (uint64_t)"BCM4388C0_22.1.496.782_PCIE_HickoryA_CLPC_OS_USI_20240812.bin", (uint64_t)"BCM4388C0_*_PCIE_HickoryA_CLPC_OS_USI_*", 0xA084Cu, 0, (uint64_t)"f97c9976156088642a647e82e63c7a157ed953677af5222967858f427bae3fa9", 0);
}

uint64_t sub_100027EC4()
{
  return sub_100015BE4((uint64_t)"799fc3d0a43972cc867dd8cd0babc49587fd1f20", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)sub_10003C480, (uint64_t)sub_10003C544, (uint64_t)sub_10003C554, (uint64_t)"BCM4388C0_22.1.496.781_PCIE_HickoryA_CLPC_OS_STATS_20240812.bin", (uint64_t)"BCM4388C0_*_PCIE_HickoryA_CLPC_OS_STATS_*", 0xA084Eu, 0, (uint64_t)"0b6da2726541e8b2ee50ffbb7f8029fccfa45d7d153881e8d0f576f693d6ef70", 0);
}

uint64_t sub_100027F3C()
{
  return sub_100016780((uint64_t)"799fc3d0a43972cc867dd8cd0babc49587fd1f20", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)"BCM4388C0_22.1.496.780_PCIE_HickoryA_CLPC_OS_LPM_USI_20240812.bin", 657484, (uint64_t)"6c32c5b4025ab52bdc334db92655a2e1f97d1ba880f49156acc4e67247e7af0e");
}

uint64_t sub_100027F70()
{
  return sub_100016780((uint64_t)"799fc3d0a43972cc867dd8cd0babc49587fd1f20", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)"BCM4388C0_22.1.496.779_PCIE_HickoryA_CLPC_OS_LPM_STATS_20240812.bin", 657486, (uint64_t)"897aca691853627bd954ae49250903f5be486d7315ab8df9707b33038dd41122");
}

uint64_t sub_100027FA4()
{
  return sub_100015BE4((uint64_t)"9293cbbd22b61f1c7a55d12571c98c68d7f8d37a", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)sub_10003C5B4, (uint64_t)sub_10003C678, (uint64_t)sub_10003C688, (uint64_t)"BCM4388C0_22.1.496.786_PCIE_HickoryB_CLPC_OS_USI_20240812.bin", (uint64_t)"BCM4388C0_*_PCIE_HickoryB_CLPC_OS_USI_*", 0xA32E0u, 0, (uint64_t)"69552182338ee66cf6abd677953a638dca4df58d64ef84f1e67932d898382a53", 0);
}

uint64_t sub_10002801C()
{
  return sub_100015BE4((uint64_t)"9293cbbd22b61f1c7a55d12571c98c68d7f8d37a", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)sub_10003C6E8, (uint64_t)sub_10003C7AC, (uint64_t)sub_10003C7BC, (uint64_t)"BCM4388C0_22.1.496.785_PCIE_HickoryB_CLPC_OS_STATS_20240812.bin", (uint64_t)"BCM4388C0_*_PCIE_HickoryB_CLPC_OS_STATS_*", 0xA32E2u, 0, (uint64_t)"83feb24430e26a0970a17707010516f74dc617ff93f5f3270ddbdb6af1af455a", 0);
}

uint64_t sub_100028094()
{
  return sub_100016780((uint64_t)"9293cbbd22b61f1c7a55d12571c98c68d7f8d37a", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)"BCM4388C0_22.1.496.784_PCIE_HickoryB_CLPC_OS_LPM_USI_20240812.bin", 668384, (uint64_t)"21c07d1b1cc781510999fc6549d75fcf58b5007d531dcde9132574076658f4af");
}

uint64_t sub_1000280C8()
{
  return sub_100016780((uint64_t)"9293cbbd22b61f1c7a55d12571c98c68d7f8d37a", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)"BCM4388C0_22.1.496.783_PCIE_HickoryB_CLPC_OS_LPM_STATS_20240812.bin", 668386, (uint64_t)"cb480d49d89546a7708b30d72991549bf700b995bf73f9bf0e15add814a4ca0c");
}

uint64_t sub_1000280FC()
{
  return sub_100015BE4((uint64_t)"399f8896caa9a7c75233dcec968ce192136ed52f", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)sub_10003C81C, (uint64_t)sub_10003C8E0, (uint64_t)sub_10003C8F0, (uint64_t)"BCM4388C0_22.1.496.766_PCIE_PlumA_CLPC_OS_USI_20240812.bin", (uint64_t)"BCM4388C0_*_PCIE_PlumA_CLPC_OS_USI_*", 0xCA637u, 0, (uint64_t)"9858a2005bf8d210668ffaeedb9b77c0cd6cb8b69d19848f86502efbac7afa99", 0);
}

uint64_t sub_100028174()
{
  return sub_100015BE4((uint64_t)"399f8896caa9a7c75233dcec968ce192136ed52f", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)sub_10003C950, (uint64_t)sub_10003CA14, (uint64_t)sub_10003CA24, (uint64_t)"BCM4388C0_22.1.496.765_PCIE_PlumA_CLPC_OS_STATS_20240812.bin", (uint64_t)"BCM4388C0_*_PCIE_PlumA_CLPC_OS_STATS_*", 0xCA639u, 0, (uint64_t)"6543fc7b97f7ca16808932de7216a266d9d4847c69612f6eb1d1587a431e3ddf", 0);
}

uint64_t sub_1000281EC()
{
  return sub_100016780((uint64_t)"399f8896caa9a7c75233dcec968ce192136ed52f", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)"BCM4388C0_22.1.496.764_PCIE_PlumA_CLPC_OS_LPM_USI_20240812.bin", 828983, (uint64_t)"bc135c414f0313c7c5e93791e15e6523f3d8dc4072b89d632cedd6b25664d229");
}

uint64_t sub_100028220()
{
  return sub_100016780((uint64_t)"399f8896caa9a7c75233dcec968ce192136ed52f", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)"BCM4388C0_22.1.496.763_PCIE_PlumA_CLPC_OS_LPM_STATS_20240812.bin", 828985, (uint64_t)"56477f7e599e7a59314d935913519a478c8a44400329982751262557d1f5054c");
}

uint64_t sub_100028254()
{
  return sub_100015BE4((uint64_t)"afde173f92a5b7b9226437d48a3ce8dfd86e998d", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)sub_10003CA84, (uint64_t)sub_10003CB48, (uint64_t)sub_10003CB58, (uint64_t)"BCM4388C0_22.1.496.770_PCIE_PlumB_CLPC_OS_USI_20240812.bin", (uint64_t)"BCM4388C0_*_PCIE_PlumB_CLPC_OS_USI_*", 0xCCC8Bu, 0, (uint64_t)"ab441b3b8714c40fc4a0b73d00a86c1f67280a77768c30c76379ea6f6646d1eb", 0);
}

uint64_t sub_1000282CC()
{
  return sub_100015BE4((uint64_t)"afde173f92a5b7b9226437d48a3ce8dfd86e998d", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)sub_10003CBB8, (uint64_t)sub_10003CC7C, (uint64_t)sub_10003CC8C, (uint64_t)"BCM4388C0_22.1.496.769_PCIE_PlumB_CLPC_OS_STATS_20240812.bin", (uint64_t)"BCM4388C0_*_PCIE_PlumB_CLPC_OS_STATS_*", 0xCCC8Du, 0, (uint64_t)"e34f52b0ab708d8e176e4fc6a46128fe51bfe3cad18b4cdfa5266123c357215e", 0);
}

uint64_t sub_100028344()
{
  return sub_100016780((uint64_t)"afde173f92a5b7b9226437d48a3ce8dfd86e998d", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)"BCM4388C0_22.1.496.768_PCIE_PlumB_CLPC_OS_LPM_USI_20240812.bin", 838795, (uint64_t)"5ddda826c12819305b12a31e111880256c4314f6c7b4f8d9d8168c09d35a42fc");
}

uint64_t sub_100028378()
{
  return sub_100016780((uint64_t)"afde173f92a5b7b9226437d48a3ce8dfd86e998d", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)"BCM4388C0_22.1.496.767_PCIE_PlumB_CLPC_OS_LPM_STATS_20240812.bin", 838797, (uint64_t)"b1572fc76091dd72887c01c9441eedece42028e25b75ec194b6cdc7578fe7118");
}

uint64_t sub_1000283AC()
{
  return sub_100015BE4((uint64_t)"73fd0a58aac62c06235d178961aadf3732733b43", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)sub_10003CCEC, (uint64_t)sub_10003CDB0, (uint64_t)sub_10003CDC0, (uint64_t)"BCM4388C0_22.1.496.774_PCIE_PersimmonA_CLPC_OS_USI_20240812.bin", (uint64_t)"BCM4388C0_*_PCIE_PersimmonA_CLPC_OS_USI_*", 0xCA63Cu, 0, (uint64_t)"daf7dc0c86d73d518f208d4e053242adae55d255dbbc771cde1b717d585f5504", 0);
}

uint64_t sub_100028424()
{
  return sub_100015BE4((uint64_t)"73fd0a58aac62c06235d178961aadf3732733b43", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)sub_10003CE20, (uint64_t)sub_10003CEE4, (uint64_t)sub_10003CEF4, (uint64_t)"BCM4388C0_22.1.496.773_PCIE_PersimmonA_CLPC_OS_STATS_20240812.bin", (uint64_t)"BCM4388C0_*_PCIE_PersimmonA_CLPC_OS_STATS_*", 0xCA63Eu, 0, (uint64_t)"42a65b54184608469158df70b6e9b05640126f7f9e9b66c39f575d527682555b", 0);
}

uint64_t sub_10002849C()
{
  return sub_100016780((uint64_t)"73fd0a58aac62c06235d178961aadf3732733b43", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)"BCM4388C0_22.1.496.772_PCIE_PersimmonA_CLPC_OS_LPM_USI_20240812.bin", 828988, (uint64_t)"c89da6c1eab5ae4f8ca7fd3fb8fb21f13fad1a7e1e7c8cc2180225014ab8fb5c");
}

uint64_t sub_1000284D0()
{
  return sub_100016780((uint64_t)"73fd0a58aac62c06235d178961aadf3732733b43", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)"BCM4388C0_22.1.496.771_PCIE_PersimmonA_CLPC_OS_LPM_STATS_20240812.bin", 828990, (uint64_t)"45dd5093b435759d1ed7a0988b1ad65c6c1d8fe44bf497602dbd65fd9719d0ee");
}

uint64_t sub_100028504()
{
  return sub_100015BE4((uint64_t)"ab0e3dc0e7e9bebb3f0544980ef4922e6580024d", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)sub_10003CF54, (uint64_t)sub_10003D018, (uint64_t)sub_10003D028, (uint64_t)"BCM4388C0_22.1.496.778_PCIE_PersimmonB_CLPC_OS_USI_20240812.bin", (uint64_t)"BCM4388C0_*_PCIE_PersimmonB_CLPC_OS_USI_*", 0xCCC90u, 0, (uint64_t)"ecedbb5a5832edeecc4e323538f2bdac20da10cd9e2f0a9248d1f3f21238c1c8", 0);
}

uint64_t sub_10002857C()
{
  return sub_100015BE4((uint64_t)"ab0e3dc0e7e9bebb3f0544980ef4922e6580024d", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)sub_10003D088, (uint64_t)sub_10003D14C, (uint64_t)sub_10003D15C, (uint64_t)"BCM4388C0_22.1.496.777_PCIE_PersimmonB_CLPC_OS_STATS_20240812.bin", (uint64_t)"BCM4388C0_*_PCIE_PersimmonB_CLPC_OS_STATS_*", 0xCCC92u, 0, (uint64_t)"d1b32e1d7e5619510c5ec962ddbc484e68fe70f669d4e4abfdef807435660e1f", 0);
}

uint64_t sub_1000285F4()
{
  return sub_100016780((uint64_t)"ab0e3dc0e7e9bebb3f0544980ef4922e6580024d", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)"BCM4388C0_22.1.496.776_PCIE_PersimmonB_CLPC_OS_LPM_USI_20240812.bin", 838800, (uint64_t)"26adaa550f3197aae8a0a08544dfad7e8a611cececcd3ca2c37f0797c8a8e25e");
}

uint64_t sub_100028628()
{
  return sub_100016780((uint64_t)"ab0e3dc0e7e9bebb3f0544980ef4922e6580024d", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)"BCM4388C0_22.1.496.775_PCIE_PersimmonB_CLPC_OS_LPM_STATS_20240812.bin", 838802, (uint64_t)"2701aa84c54ca18fc055984d72f164bebae5d0989126c6f0783f62e64145dcd3");
}

uint64_t sub_10002865C()
{
  return sub_100015BE4((uint64_t)"75ca7dd93c5ac33c4811050d8987504774003971", (uint64_t)"BCM4357B1", (uint64_t)"MUR", (uint64_t)sub_10003D1BC, (uint64_t)sub_10003D384, (uint64_t)sub_10003D394, (uint64_t)"BCM4357B1_19.1.282.5161_Tuborg_OS_MUR_20210524.hcd", 0, 0x27861u, (uint64_t)&unk_100425A8B, 0, 0);
}

uint64_t sub_1000286D0()
{
  return sub_10001896C((uint64_t)"75ca7dd93c5ac33c4811050d8987504774003971", (uint64_t)&unk_10044D2ED, 210);
}

uint64_t sub_1000286E8()
{
  return sub_100015BE4((uint64_t)"75ca7dd93c5ac33c4811050d8987504774003971", (uint64_t)"BCM4357B1", (uint64_t)"USI", (uint64_t)sub_10003D41C, (uint64_t)sub_10003D5E4, (uint64_t)sub_10003D5F4, (uint64_t)"BCM4357B1_19.1.282.5162_Tuborg_OS_USI_20210524.hcd", 0, 0x278BDu, (uint64_t)&unk_10044D3BF, 0, 0);
}

uint64_t sub_10002875C()
{
  return sub_10001896C((uint64_t)"75ca7dd93c5ac33c4811050d8987504774003971", (uint64_t)&unk_100474C7D, 210);
}

uint64_t sub_100028774()
{
  return sub_100015BE4((uint64_t)"2dd42fd91f1ffb3344956ece1867a06a12aaf354", (uint64_t)"BCM4357B1", (uint64_t)"MUR", (uint64_t)sub_10003D67C, (uint64_t)sub_10003D844, (uint64_t)sub_10003D854, (uint64_t)"BCM4357B1_19.1.282.5161_Tuborg_OS_MUR_20210524.hcd", 0, 0x27861u, (uint64_t)&unk_100474D4F, 0, 0);
}

uint64_t sub_1000287E8()
{
  return sub_10001896C((uint64_t)"2dd42fd91f1ffb3344956ece1867a06a12aaf354", (uint64_t)&unk_10049C5B1, 210);
}

uint64_t sub_100028800()
{
  return sub_100015BE4((uint64_t)"2dd42fd91f1ffb3344956ece1867a06a12aaf354", (uint64_t)"BCM4357B1", (uint64_t)"USI", (uint64_t)sub_10003D8DC, (uint64_t)sub_10003DAA4, (uint64_t)sub_10003DAB4, (uint64_t)"BCM4357B1_19.1.282.5162_Tuborg_OS_USI_20210524.hcd", 0, 0x278BDu, (uint64_t)&unk_10049C683, 0, 0);
}

uint64_t sub_100028874()
{
  return sub_10001896C((uint64_t)"2dd42fd91f1ffb3344956ece1867a06a12aaf354", (uint64_t)&unk_1004C3F41, 210);
}

uint64_t sub_10002888C()
{
  return sub_100015BE4((uint64_t)"63a62c65c42a4b575b6f86f913dfdb7d2bcd8a67", (uint64_t)"APPLE_M2", (uint64_t)"ALL", (uint64_t)sub_10003DB3C, (uint64_t)sub_10003DB4C, (uint64_t)sub_10003DC4C, (uint64_t)"aci_marconi2_init.hcd", 0, 0x34u, (uint64_t)&unk_1004C5136, 0, 0);
}

uint64_t sub_1000288FC()
{
  return sub_10001896C((uint64_t)"63a62c65c42a4b575b6f86f913dfdb7d2bcd8a67", (uint64_t)&unk_1004C4013, 187);
}

uint64_t sub_100028914()
{
  return sub_100015BE4((uint64_t)"c8f7d956382d069f92bb1c488458f5e8281faa8d", (uint64_t)"APPLE_M2_5", (uint64_t)"ALL", (uint64_t)sub_10003DC84, (uint64_t)sub_10003DC94, (uint64_t)sub_10003DD6C, (uint64_t)"aci_marconi2_5_init.hcd", 0, 0x34u, (uint64_t)&unk_1004C516B, 0, 0);
}

uint64_t sub_100028984()
{
  return sub_100016780((uint64_t)"4e9bbf98c3d9b4e58450eb4d7a2cc2a4464418cf", (uint64_t)"BCM4378B1", (uint64_t)"MUR", (uint64_t)"BCM4378B1_22.1.534.3855_PCIE_Moana_LPM_iOS_MUR_20240415.bin", 379079, (uint64_t)"7a7e98cb1a0adf8be51b5b69fd4eb8b11db7f4aa9c7917e677a8136064a07852");
}

uint64_t sub_1000289B8()
{
  return sub_100016780((uint64_t)"4e9bbf98c3d9b4e58450eb4d7a2cc2a4464418cf", (uint64_t)"BCM4378B1", (uint64_t)"USI", (uint64_t)"BCM4378B1_22.1.534.3856_PCIE_Moana_LPM_iOS_USI_20240415.bin", 379079, (uint64_t)"819436255300ce808b8a1870eff2bf53bd84e2c634d73047a7f338c4621a4d30");
}

uint64_t sub_1000289EC()
{
  return sub_100016780((uint64_t)"fc9b492bd286df58e958cf073cbb0d97ab185dfc", (uint64_t)"BCM4378B1", (uint64_t)"MUR", (uint64_t)"BCM4378B1_22.1.534.3853_PCIE_Hei_LPM_iOS_MUR_20240415.bin", 379077, (uint64_t)"fab06bc197aed1c8697e1f7a9364c02c6b98a9614df41a35a71fabf6efeddbdb");
}

uint64_t sub_100028A20()
{
  return sub_100016780((uint64_t)"fc9b492bd286df58e958cf073cbb0d97ab185dfc", (uint64_t)"BCM4378B1", (uint64_t)"USI", (uint64_t)"BCM4378B1_22.1.534.3854_PCIE_Hei_LPM_iOS_USI_20240415.bin", 379077, (uint64_t)"92a53ea636d9df7e15a5e7247530baeef3e399f677f0d12ca0c55949e7adec15");
}

uint64_t sub_100028A54()
{
  return sub_100016780((uint64_t)"db26827f74a26f71e1b75fe586ff403e56d4f7f1", (uint64_t)"BCM4378B1", (uint64_t)"MUR", (uint64_t)"BCM4378B1_22.1.534.3857_PCIE_Tala_LPM_iOS_MUR_20240415.bin", 379078, (uint64_t)"a5c824fa572184ae289d7c4997bc9e37ba31e06264c7948e5f67cd7ed5711756");
}

uint64_t sub_100028A88()
{
  return sub_100016780((uint64_t)"db26827f74a26f71e1b75fe586ff403e56d4f7f1", (uint64_t)"BCM4378B1", (uint64_t)"USI", (uint64_t)"BCM4378B1_22.1.534.3858_PCIE_Tala_LPM_iOS_USI_20240415.bin", 379078, (uint64_t)"c87d27820a04b82cb018397f587d055bd15684f1faf255db047df91699576965");
}

uint64_t sub_100028ABC()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -B", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("bcm -A", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -N", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -Q", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("msleep 200", 0);
                                        if (!(_DWORD)result)
                                          return sub_10001CDE0("quit", 0);
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100028C70()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100028C80()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_100028D08()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -B", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("bcm -A", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -N", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -Q", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("msleep 200", 0);
                                        if (!(_DWORD)result)
                                          return sub_10001CDE0("quit", 0);
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100028EBC()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100028ECC()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_100028F54()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -B", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("bcm -A", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -N", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -Q", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("msleep 200", 0);
                                        if (!(_DWORD)result)
                                          return sub_10001CDE0("quit", 0);
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100029108()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100029118()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000291A0()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -B", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("bcm -A", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -N", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -Q", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("msleep 200", 0);
                                        if (!(_DWORD)result)
                                          return sub_10001CDE0("quit", 0);
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100029354()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100029364()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000293EC()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -B", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("bcm -A", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -N", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -Q", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("msleep 200", 0);
                                        if (!(_DWORD)result)
                                          return sub_10001CDE0("quit", 0);
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000295A0()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_1000295B0()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_100029638()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -B", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("bcm -A", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -N", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -Q", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("msleep 200", 0);
                                        if (!(_DWORD)result)
                                          return sub_10001CDE0("quit", 0);
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000297EC()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_1000297FC()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_100029884()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -B", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("bcm -A", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -N", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -Q", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("msleep 200", 0);
                                        if (!(_DWORD)result)
                                          return sub_10001CDE0("quit", 0);
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100029A38()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100029A48()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_100029AD0()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -B", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("bcm -A", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -N", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -Q", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("msleep 200", 0);
                                        if (!(_DWORD)result)
                                          return sub_10001CDE0("quit", 0);
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100029C84()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100029C94()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_100029D1C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -B", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("hci reset", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -A", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -N", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -Q", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!(_DWORD)result)
                                        {
                                          result = sub_10001CDE0("msleep 200", 0);
                                          if (!(_DWORD)result)
                                            return sub_10001CDE0("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100029EE4()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100029EF4()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_100029F7C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -B", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("hci reset", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -A", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -N", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -Q", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!(_DWORD)result)
                                        {
                                          result = sub_10001CDE0("msleep 200", 0);
                                          if (!(_DWORD)result)
                                            return sub_10001CDE0("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002A144()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002A154()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002A1DC()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -B", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("hci reset", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -A", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -N", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -Q", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!(_DWORD)result)
                                        {
                                          result = sub_10001CDE0("msleep 200", 0);
                                          if (!(_DWORD)result)
                                            return sub_10001CDE0("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002A3A4()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002A3B4()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002A43C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -B", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("hci reset", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -A", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -N", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -Q", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!(_DWORD)result)
                                        {
                                          result = sub_10001CDE0("msleep 200", 0);
                                          if (!(_DWORD)result)
                                            return sub_10001CDE0("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002A604()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002A614()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002A69C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -B", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("hci reset", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -A", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -N", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -Q", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!(_DWORD)result)
                                        {
                                          result = sub_10001CDE0("msleep 200", 0);
                                          if (!(_DWORD)result)
                                            return sub_10001CDE0("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002A864()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002A874()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002A8FC()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -B", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("hci reset", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -A", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -N", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -Q", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!(_DWORD)result)
                                        {
                                          result = sub_10001CDE0("msleep 200", 0);
                                          if (!(_DWORD)result)
                                            return sub_10001CDE0("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002AAC4()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002AAD4()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002AB5C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -b 1500000", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("bcm -A", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -N", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -Q", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -x", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
                                        if (!(_DWORD)result)
                                        {
                                          result = sub_10001CDE0("msleep 200", 0);
                                          if (!(_DWORD)result)
                                            return sub_10001CDE0("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002AD24()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002AD34()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002ADBC()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -b 1500000", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("bcm -A", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -N", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -Q", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -x", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
                                        if (!(_DWORD)result)
                                        {
                                          result = sub_10001CDE0("msleep 200", 0);
                                          if (!(_DWORD)result)
                                            return sub_10001CDE0("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002AF84()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002AF94()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002B01C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -b 1500000", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("bcm -A", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -N", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -Q", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -x", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
                                        if (!(_DWORD)result)
                                        {
                                          result = sub_10001CDE0("msleep 200", 0);
                                          if (!(_DWORD)result)
                                            return sub_10001CDE0("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002B1E4()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002B1F4()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002B27C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -b 1500000", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("bcm -A", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -N", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -Q", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -x", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
                                        if (!(_DWORD)result)
                                        {
                                          result = sub_10001CDE0("msleep 200", 0);
                                          if (!(_DWORD)result)
                                            return sub_10001CDE0("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002B444()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002B454()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002B4DC()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -b 1500000", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("bcm -A", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -N", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -Q", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -x", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
                                        if (!(_DWORD)result)
                                        {
                                          result = sub_10001CDE0("msleep 200", 0);
                                          if (!(_DWORD)result)
                                            return sub_10001CDE0("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002B6A4()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002B6B4()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002B73C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -b 1500000", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("bcm -A", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -N", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -Q", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -x", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
                                        if (!(_DWORD)result)
                                        {
                                          result = sub_10001CDE0("msleep 200", 0);
                                          if (!(_DWORD)result)
                                            return sub_10001CDE0("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002B904()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002B914()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002B99C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -b 1500000", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("bcm -A", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -N", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -Q", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -x", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
                                        if (!(_DWORD)result)
                                        {
                                          result = sub_10001CDE0("msleep 200", 0);
                                          if (!(_DWORD)result)
                                            return sub_10001CDE0("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002BB64()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002BB74()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002BBFC()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -b 1500000", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("bcm -A", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -N", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -Q", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -x", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
                                        if (!(_DWORD)result)
                                        {
                                          result = sub_10001CDE0("msleep 200", 0);
                                          if (!(_DWORD)result)
                                            return sub_10001CDE0("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002BDC4()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002BDD4()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002BE5C()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002BF20()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002BF30()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002BF90()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002C054()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002C064()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002C0C4()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002C188()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002C198()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002C1F8()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002C2BC()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002C2CC()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002C32C()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002C3F0()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002C400()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002C460()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002C524()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002C534()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002C594()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -B", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("bcm -A", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -N", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -Q", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -x", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
                                        if (!(_DWORD)result)
                                        {
                                          result = sub_10001CDE0("msleep 200", 0);
                                          if (!(_DWORD)result)
                                            return sub_10001CDE0("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002C75C()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002C76C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002C7F4()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -B", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("bcm -A", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -N", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -Q", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -x", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
                                        if (!(_DWORD)result)
                                        {
                                          result = sub_10001CDE0("msleep 200", 0);
                                          if (!(_DWORD)result)
                                            return sub_10001CDE0("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002C9BC()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002C9CC()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002CA54()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002CB18()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002CB28()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002CB88()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002CC4C()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002CC5C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002CCBC()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002CD80()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002CD90()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002CDF0()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002CEB4()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002CEC4()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002CF24()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002CFE8()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002CFF8()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002D058()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002D11C()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002D12C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002D18C()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002D250()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002D260()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002D2C0()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002D384()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002D394()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002D3F4()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002D4B8()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002D4C8()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002D528()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002D5EC()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002D5FC()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002D65C()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002D720()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002D730()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002D790()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002D854()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002D864()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002D8C4()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002D988()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002D998()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002D9F8()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002DABC()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002DACC()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002DB2C()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002DBF0()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002DC00()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002DC60()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002DD24()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002DD34()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002DD94()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002DE58()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002DE68()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002DEC8()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002DF8C()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002DF9C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002DFFC()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002E0C0()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002E0D0()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002E130()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002E1F4()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002E204()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002E264()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002E328()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002E338()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002E398()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002E45C()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002E46C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002E4CC()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002E590()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002E5A0()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002E600()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002E6C4()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002E6D4()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002E734()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002E7F8()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002E808()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002E868()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002E92C()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002E93C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002E99C()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002EA60()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002EA70()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002EAD0()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002EB94()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002EBA4()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002EC04()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002ECC8()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002ECD8()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002ED38()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002EDFC()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002EE0C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002EE6C()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002EF30()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002EF40()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002EFA0()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002F064()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002F074()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002F0D4()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002F198()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002F1A8()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002F208()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002F2CC()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002F2DC()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002F33C()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002F400()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002F410()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002F470()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002F534()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002F544()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002F5A4()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002F668()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002F678()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002F6D8()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002F79C()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002F7AC()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002F80C()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002F8D0()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002F8E0()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002F940()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002FA04()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002FA14()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002FA74()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002FB38()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002FB48()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002FBA8()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002FC6C()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002FC7C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002FCDC()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002FDA0()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002FDB0()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002FE10()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002FED4()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10002FEE4()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10002FF44()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100030008()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100030018()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100030078()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003013C()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003014C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_1000301AC()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100030270()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100030280()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_1000302E0()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000303A4()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_1000303B4()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100030414()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000304D8()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_1000304E8()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100030548()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003060C()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003061C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003067C()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100030740()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100030750()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_1000307B0()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100030874()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100030884()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_1000308E4()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000309A8()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_1000309B8()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100030A18()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100030ADC()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100030AEC()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100030B4C()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100030C10()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100030C20()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100030C80()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100030D44()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100030D54()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100030DB4()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100030E78()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100030E88()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100030EE8()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100030FAC()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100030FBC()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003101C()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000310E0()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_1000310F0()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100031150()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100031214()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100031224()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100031284()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100031348()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100031358()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_1000313B8()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003147C()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003148C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_1000314EC()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000315B0()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_1000315C0()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100031620()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000316E4()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_1000316F4()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100031754()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100031818()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100031828()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100031888()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003194C()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003195C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_1000319BC()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100031A80()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100031A90()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100031AF0()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100031BB4()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100031BC4()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100031C24()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100031CE8()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100031CF8()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100031D58()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100031E1C()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100031E2C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100031E8C()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100031F50()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100031F60()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100031FC0()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100032084()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100032094()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_1000320F4()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -B", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("hci reset", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -A", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -N", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -Q", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!(_DWORD)result)
                                        {
                                          result = sub_10001CDE0("msleep 200", 0);
                                          if (!(_DWORD)result)
                                            return sub_10001CDE0("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000322BC()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_1000322CC()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_100032354()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -B", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("hci reset", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -A", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -N", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -Q", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!(_DWORD)result)
                                        {
                                          result = sub_10001CDE0("msleep 200", 0);
                                          if (!(_DWORD)result)
                                            return sub_10001CDE0("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003251C()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003252C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000325B4()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -B", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("hci reset", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -A", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -N", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -Q", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!(_DWORD)result)
                                        {
                                          result = sub_10001CDE0("msleep 200", 0);
                                          if (!(_DWORD)result)
                                            return sub_10001CDE0("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003277C()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003278C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_100032814()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -B", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("bcm -A", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -N", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -Q", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -x", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!(_DWORD)result)
                                        {
                                          result = sub_10001CDE0("msleep 200", 0);
                                          if (!(_DWORD)result)
                                            return sub_10001CDE0("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000329DC()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_1000329EC()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_100032A74()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -B", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("bcm -A", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -N", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -Q", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -x", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!(_DWORD)result)
                                        {
                                          result = sub_10001CDE0("msleep 200", 0);
                                          if (!(_DWORD)result)
                                            return sub_10001CDE0("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100032C3C()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100032C4C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_100032CD4()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -B", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("bcm -A", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -N", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -Q", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -x", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!(_DWORD)result)
                                        {
                                          result = sub_10001CDE0("msleep 200", 0);
                                          if (!(_DWORD)result)
                                            return sub_10001CDE0("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100032E9C()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100032EAC()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_100032F34()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -B", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("bcm -A", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -N", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -Q", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -x", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!(_DWORD)result)
                                        {
                                          result = sub_10001CDE0("msleep 200", 0);
                                          if (!(_DWORD)result)
                                            return sub_10001CDE0("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000330FC()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003310C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_100033194()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -B", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("bcm -A", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -N", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -Q", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -x", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!(_DWORD)result)
                                        {
                                          result = sub_10001CDE0("msleep 200", 0);
                                          if (!(_DWORD)result)
                                            return sub_10001CDE0("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003335C()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003336C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000333F4()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -B", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("bcm -A", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -N", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -Q", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -x", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!(_DWORD)result)
                                        {
                                          result = sub_10001CDE0("msleep 200", 0);
                                          if (!(_DWORD)result)
                                            return sub_10001CDE0("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000335BC()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_1000335CC()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_100033654()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -B", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("bcm -A", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -N", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -Q", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -x", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!(_DWORD)result)
                                        {
                                          result = sub_10001CDE0("msleep 200", 0);
                                          if (!(_DWORD)result)
                                            return sub_10001CDE0("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003381C()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003382C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000338B4()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -B", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("bcm -A", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -N", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -Q", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -x", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!(_DWORD)result)
                                        {
                                          result = sub_10001CDE0("msleep 200", 0);
                                          if (!(_DWORD)result)
                                            return sub_10001CDE0("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100033A7C()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100033A8C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_100033B14()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -B", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("bcm -A", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -N", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -Q", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -x", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!(_DWORD)result)
                                        {
                                          result = sub_10001CDE0("msleep 200", 0);
                                          if (!(_DWORD)result)
                                            return sub_10001CDE0("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100033CDC()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100033CEC()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_100033D74()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -B", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("bcm -A", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -N", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -Q", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -x", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!(_DWORD)result)
                                        {
                                          result = sub_10001CDE0("msleep 200", 0);
                                          if (!(_DWORD)result)
                                            return sub_10001CDE0("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100033F3C()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100033F4C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_100033FD4()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -B", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("bcm -A", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -N", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -Q", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -x", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!(_DWORD)result)
                                        {
                                          result = sub_10001CDE0("msleep 200", 0);
                                          if (!(_DWORD)result)
                                            return sub_10001CDE0("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003419C()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_1000341AC()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_100034234()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -B", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("bcm -A", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -N", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -Q", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -x", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!(_DWORD)result)
                                        {
                                          result = sub_10001CDE0("msleep 200", 0);
                                          if (!(_DWORD)result)
                                            return sub_10001CDE0("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000343FC()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003440C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_100034494()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -B", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("hci reset", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -A", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -N", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -Q", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!(_DWORD)result)
                                        {
                                          result = sub_10001CDE0("msleep 200", 0);
                                          if (!(_DWORD)result)
                                            return sub_10001CDE0("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003465C()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003466C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000346F4()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -B", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("hci reset", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -A", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -N", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -Q", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!(_DWORD)result)
                                        {
                                          result = sub_10001CDE0("msleep 200", 0);
                                          if (!(_DWORD)result)
                                            return sub_10001CDE0("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000348BC()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_1000348CC()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_100034954()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -B", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("hci reset", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -A", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -N", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -Q", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!(_DWORD)result)
                                        {
                                          result = sub_10001CDE0("msleep 200", 0);
                                          if (!(_DWORD)result)
                                            return sub_10001CDE0("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100034B1C()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100034B2C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_100034BB4()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -B", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("hci reset", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -A", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -N", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -Q", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!(_DWORD)result)
                                        {
                                          result = sub_10001CDE0("msleep 200", 0);
                                          if (!(_DWORD)result)
                                            return sub_10001CDE0("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100034D7C()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100034D8C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_100034E14()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -B", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("hci reset", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -A", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -N", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -Q", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!(_DWORD)result)
                                        {
                                          result = sub_10001CDE0("msleep 200", 0);
                                          if (!(_DWORD)result)
                                            return sub_10001CDE0("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100034FDC()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100034FEC()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_100035074()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -B", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("bcm -A", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -N", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -Q", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("msleep 200", 0);
                                        if (!(_DWORD)result)
                                          return sub_10001CDE0("quit", 0);
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100035228()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100035238()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000352C0()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -B", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("bcm -A", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -N", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -Q", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("msleep 200", 0);
                                        if (!(_DWORD)result)
                                          return sub_10001CDE0("quit", 0);
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100035474()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100035484()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003550C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -B", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("bcm -A", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -N", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -Q", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("msleep 200", 0);
                                        if (!(_DWORD)result)
                                          return sub_10001CDE0("quit", 0);
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000356C0()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_1000356D0()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_100035758()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -B", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("bcm -A", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -N", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -Q", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("msleep 200", 0);
                                        if (!(_DWORD)result)
                                          return sub_10001CDE0("quit", 0);
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003590C()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003591C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000359A4()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -B", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("bcm -A", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -N", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -Q", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("msleep 200", 0);
                                        if (!(_DWORD)result)
                                          return sub_10001CDE0("quit", 0);
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100035B58()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100035B68()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_100035BF0()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -B", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("bcm -A", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -N", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -Q", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("msleep 200", 0);
                                        if (!(_DWORD)result)
                                          return sub_10001CDE0("quit", 0);
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100035DA4()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100035DB4()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_100035E3C()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100035F00()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100035F10()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100035F70()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100036034()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100036044()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_1000360A4()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100036168()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100036178()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_1000361D8()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003629C()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_1000362AC()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003630C()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000363D0()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_1000363E0()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100036440()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100036504()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100036514()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100036574()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100036638()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100036648()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_1000366A8()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003676C()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003677C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_1000367DC()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000368A0()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_1000368B0()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100036910()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000369D4()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_1000369E4()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100036A44()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100036B08()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100036B18()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100036B78()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100036C3C()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100036C4C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100036CAC()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100036D70()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100036D80()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100036DE0()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100036EA4()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100036EB4()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100036F14()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100036FD8()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100036FE8()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100037048()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003710C()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003711C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003717C()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100037240()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100037250()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_1000372B0()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100037374()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100037384()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_1000373E4()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000374A8()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_1000374B8()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100037518()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000375DC()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_1000375EC()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003764C()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100037710()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100037720()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100037780()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100037844()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100037854()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_1000378B4()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100037978()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100037988()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_1000379E8()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100037AAC()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100037ABC()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100037B1C()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100037BE0()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100037BF0()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100037C50()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100037D14()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100037D24()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100037D84()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100037E48()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100037E58()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100037EB8()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100037F7C()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100037F8C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100037FEC()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000380B0()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_1000380C0()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100038120()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000381E4()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_1000381F4()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100038254()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100038318()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100038328()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100038388()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003844C()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003845C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_1000384BC()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100038580()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100038590()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_1000385F0()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000386B4()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_1000386C4()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100038724()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000387E8()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_1000387F8()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100038858()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003891C()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003892C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003898C()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100038A50()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100038A60()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100038AC0()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100038B84()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100038B94()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100038BF4()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100038CB8()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100038CC8()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100038D28()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100038DEC()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100038DFC()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100038E5C()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100038F20()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100038F30()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100038F90()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100039054()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100039064()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_1000390C4()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100039188()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100039198()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_1000391F8()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000392BC()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_1000392CC()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003932C()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000393F0()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100039400()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100039460()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100039524()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100039534()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100039594()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100039658()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100039668()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_1000396C8()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003978C()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003979C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_1000397FC()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000398C0()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_1000398D0()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100039930()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000399F4()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100039A04()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100039A64()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100039B28()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100039B38()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100039B98()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100039C5C()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100039C6C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100039CCC()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100039D90()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100039DA0()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100039E00()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100039EC4()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_100039ED4()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_100039F34()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100039FF8()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003A008()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003A068()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003A12C()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003A13C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003A19C()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003A260()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003A270()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003A2D0()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003A394()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003A3A4()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003A404()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003A4C8()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003A4D8()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003A538()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003A5FC()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003A60C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003A66C()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003A730()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003A740()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003A7A0()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003A864()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003A874()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003A8D4()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003A998()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003A9A8()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003AA08()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003AACC()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003AADC()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003AB3C()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003AC00()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003AC10()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003AC70()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003AD34()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003AD44()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003ADA4()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003AE68()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003AE78()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003AED8()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003AF9C()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003AFAC()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003B00C()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003B0D0()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003B0E0()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003B140()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003B204()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003B214()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003B274()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003B338()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003B348()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003B3A8()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003B46C()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003B47C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003B4DC()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003B5A0()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003B5B0()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003B610()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003B6D4()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003B6E4()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003B744()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003B808()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003B818()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003B878()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003B93C()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003B94C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003B9AC()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003BA70()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003BA80()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003BAE0()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003BBA4()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003BBB4()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003BC14()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003BCD8()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003BCE8()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003BD48()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003BE0C()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003BE1C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003BE7C()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003BF40()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003BF50()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003BFB0()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003C074()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003C084()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003C0E4()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003C1A8()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003C1B8()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003C218()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003C2DC()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003C2EC()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003C34C()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003C410()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003C420()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003C480()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003C544()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003C554()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003C5B4()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003C678()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003C688()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003C6E8()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003C7AC()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003C7BC()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003C81C()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003C8E0()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003C8F0()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003C950()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003CA14()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003CA24()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003CA84()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003CB48()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003CB58()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003CBB8()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003CC7C()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003CC8C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003CCEC()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003CDB0()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003CDC0()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003CE20()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003CEE4()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003CEF4()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003CF54()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003D018()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003D028()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003D088()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("device -D", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -W", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -A", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("bcm -N", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("bcm -Q", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("bcm -x", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!(_DWORD)result)
                  return sub_10001CDE0("quit", 0);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003D14C()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003D15C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("hci reset", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!(_DWORD)result)
        return sub_10001CDE0("quit", 0);
    }
  }
  return result;
}

uint64_t sub_10003D1BC()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -b 1500000", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("bcm -A", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -N", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -Q", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -x", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
                                        if (!(_DWORD)result)
                                        {
                                          result = sub_10001CDE0("msleep 200", 0);
                                          if (!(_DWORD)result)
                                            return sub_10001CDE0("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003D384()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003D394()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003D41C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -b 1500000", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("bcm -A", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -N", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -Q", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -x", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
                                        if (!(_DWORD)result)
                                        {
                                          result = sub_10001CDE0("msleep 200", 0);
                                          if (!(_DWORD)result)
                                            return sub_10001CDE0("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003D5E4()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003D5F4()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003D67C()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -b 1500000", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("bcm -A", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -N", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -Q", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -x", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
                                        if (!(_DWORD)result)
                                        {
                                          result = sub_10001CDE0("msleep 200", 0);
                                          if (!(_DWORD)result)
                                            return sub_10001CDE0("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003D844()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003D854()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003D8DC()
{
  uint64_t result;

  result = sub_10001CDE0("device -D", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("power off", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("msleep 100", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("power on", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("msleep 100", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("hci reset", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("bcm -b 1500000", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("msleep 200 ", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("bcm -W", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("msleep 200 ", 0);
                      if (!(_DWORD)result)
                      {
                        result = sub_10001CDE0("device -s 115200", 0);
                        if (!(_DWORD)result)
                        {
                          result = sub_10001CDE0("msleep 200 ", 0);
                          if (!(_DWORD)result)
                          {
                            result = sub_10001CDE0("bcm -B", 0);
                            if (!(_DWORD)result)
                            {
                              result = sub_10001CDE0("msleep 200 ", 0);
                              if (!(_DWORD)result)
                              {
                                result = sub_10001CDE0("bcm -A", 0);
                                if (!(_DWORD)result)
                                {
                                  result = sub_10001CDE0("bcm -N", 0);
                                  if (!(_DWORD)result)
                                  {
                                    result = sub_10001CDE0("bcm -Q", 0);
                                    if (!(_DWORD)result)
                                    {
                                      result = sub_10001CDE0("bcm -x", 0);
                                      if (!(_DWORD)result)
                                      {
                                        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
                                        if (!(_DWORD)result)
                                        {
                                          result = sub_10001CDE0("msleep 200", 0);
                                          if (!(_DWORD)result)
                                            return sub_10001CDE0("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003DAA4()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003DAB4()
{
  uint64_t result;

  result = sub_10001CDE0("device -D -S", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("wake on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("hci reset", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("wake off", 0);
          if (!(_DWORD)result)
            return sub_10001CDE0("quit", 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003DB3C()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003DB4C()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("power on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("device -D", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("aci -Q", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("aci -K", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("aci -W", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("aci -R", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("aci -A", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("aci -N", 0);
                  if (!(_DWORD)result)
                  {
                    result = sub_10001CDE0("aci -V", 0);
                    if (!(_DWORD)result)
                    {
                      result = sub_10001CDE0("aci -U", 0);
                      if (!(_DWORD)result)
                        return sub_10001CDE0("quit", 0);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003DC4C()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
    return sub_10001CDE0("quit", 0);
  return result;
}

uint64_t sub_10003DC84()
{
  return sub_10001CDE0("quit", 0);
}

uint64_t sub_10003DC94()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
  {
    result = sub_10001CDE0("power on", 0);
    if (!(_DWORD)result)
    {
      result = sub_10001CDE0("device -D", 0);
      if (!(_DWORD)result)
      {
        result = sub_10001CDE0("aci -W", 0);
        if (!(_DWORD)result)
        {
          result = sub_10001CDE0("aci -R", 0);
          if (!(_DWORD)result)
          {
            result = sub_10001CDE0("aci -A", 0);
            if (!(_DWORD)result)
            {
              result = sub_10001CDE0("aci -N", 0);
              if (!(_DWORD)result)
              {
                result = sub_10001CDE0("aci -V", 0);
                if (!(_DWORD)result)
                {
                  result = sub_10001CDE0("aci -U", 0);
                  if (!(_DWORD)result)
                    return sub_10001CDE0("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003DD6C()
{
  uint64_t result;

  result = sub_10001CDE0("power off", 0);
  if (!(_DWORD)result)
    return sub_10001CDE0("quit", 0);
  return result;
}

unint64_t sub_10003DDA4()
{
  char *v0;
  unint64_t result;
  const __CFDictionary *v2;
  io_service_t MatchingService;
  io_object_t v4;
  const __CFData *v5;
  const __CFData *v6;
  NSObject *v7;
  UInt8 buffer[4];
  CFRange v9;

  *(_DWORD *)buffer = 0;
  v0 = getenv("BT_BAUDRATE");
  if (v0)
    return strtoul(v0, 0, 0);
  v2 = IOServiceNameMatching("bluetooth");
  if (!v2)
    return 0;
  MatchingService = IOServiceGetMatchingService(kIOMainPortDefault, v2);
  if (!MatchingService)
    return 0;
  v4 = MatchingService;
  v5 = (const __CFData *)IORegistryEntrySearchCFProperty(MatchingService, "IODeviceTree", CFSTR("transport-speed"), kCFAllocatorDefault, 1u);
  if (v5)
  {
    v6 = v5;
    v9.location = 0;
    v9.length = 4;
    CFDataGetBytes(v5, v9, buffer);
    CFRelease(v6);
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DD950);
    v7 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEBUG))
      sub_100047434((int *)buffer, v7);
  }
  IOObjectRelease(v4);
  result = *(unsigned int *)buffer;
  if (*(_DWORD *)buffer >> 9 <= 0xE0u)
    return 0;
  return result;
}

void sub_10003DECC(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10003DEFC(const char *a1)
{
  unsigned __int16 v1;
  const __CFDictionary *v2;
  io_service_t MatchingService;
  io_object_t v4;
  const __CFData *v5;
  const __CFData *v6;
  NSObject *v7;
  _BOOL4 v8;
  UInt8 buffer[4];
  uint8_t buf[4];
  int v12;
  CFRange v13;

  v1 = 10;
  *(_DWORD *)buffer = 10;
  v2 = IOServiceNameMatching(a1);
  if (v2)
  {
    MatchingService = IOServiceGetMatchingService(kIOMainPortDefault, v2);
    if (MatchingService)
    {
      v4 = MatchingService;
      v5 = (const __CFData *)IORegistryEntrySearchCFProperty(MatchingService, "IODeviceTree", CFSTR("transport-encoding"), kCFAllocatorDefault, 1u);
      if (v5)
      {
        v6 = v5;
        v13.location = 0;
        v13.length = 4;
        CFDataGetBytes(v5, v13, buffer);
        CFRelease(v6);
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DD990);
        v7 = qword_1004E2428;
        v8 = os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEBUG);
        v1 = *(_WORD *)buffer;
        if (v8)
        {
          *(_DWORD *)buf = 67109120;
          v12 = *(_DWORD *)buffer;
          _os_log_debug_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "DeviceTree transport = %d", buf, 8u);
          return *(unsigned __int16 *)buffer;
        }
      }
      else
      {
        IOObjectRelease(v4);
      }
    }
  }
  return v1;
}

void sub_10003E04C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10003E07C()
{
  if (qword_1004E1F38 != -1)
    dispatch_once(&qword_1004E1F38, &stru_1004DD9D0);
  return (unsigned __int16)dword_1004E0A30;
}

void sub_10003E0BC(id a1)
{
  unint64_t v1;
  char *v2;
  char *v3;
  char *v4;
  NSObject *v5;
  size_t v6;
  char __str[1024];

  bzero(__str, 0x400uLL);
  v6 = 1024;
  if (!sysctlbyname("kern.bootargs", __str, &v6, 0, 0))
  {
    v2 = strtok(__str, " ");
    if (v2)
    {
      v3 = v2;
      while (!strstr(v3, "bt-transport-override"))
      {
        v3 = strtok(0, " ");
        if (!v3)
          goto LABEL_2;
      }
      v4 = strchr(v3, 61);
      v1 = strtol(v4 + 1, 0, 10);
      if (v1 < 0xA)
        goto LABEL_15;
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DDA10);
      v5 = qword_1004E2428;
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEBUG))
        sub_1000474AC(v1, v5);
    }
  }
LABEL_2:
  if (dword_1004E0A30 == 10)
  {
    dword_1004E0A30 = sub_10003DEFC("marconi-bt");
    if (dword_1004E0A30 == 10)
    {
      LODWORD(v1) = sub_10003DEFC("bluetooth");
LABEL_15:
      dword_1004E0A30 = v1;
    }
  }
}

void sub_10003E258(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10003E288(const char *a1, uint64_t a2)
{
  const __CFDictionary *v3;
  io_service_t MatchingService;
  io_object_t v5;
  const __CFData *v6;
  const __CFData *v7;
  uint64_t v8;
  UInt8 buffer[4];
  __int16 v11;
  CFRange v12;

  v11 = 0;
  *(_DWORD *)buffer = 0;
  v3 = IOServiceNameMatching(a1);
  if (!v3)
    return 6;
  MatchingService = IOServiceGetMatchingService(kIOMainPortDefault, v3);
  if (!MatchingService)
    return 6;
  v5 = MatchingService;
  v6 = (const __CFData *)IORegistryEntrySearchCFProperty(MatchingService, "IODeviceTree", CFSTR("local-mac-address"), kCFAllocatorDefault, 1u);
  if (v6)
  {
    v7 = v6;
    v12.location = 0;
    v12.length = 6;
    CFDataGetBytes(v6, v12, buffer);
    *(_DWORD *)a2 = *(_DWORD *)buffer;
    *(_WORD *)(a2 + 4) = v11;
    CFRelease(v7);
    v8 = 0;
  }
  else
  {
    v8 = 6;
  }
  IOObjectRelease(v5);
  return v8;
}

uint64_t sub_10003E354(unsigned __int8 *a1)
{
  char *v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  const char *v12;
  NSObject *v13;
  NSObject *v14;
  const char *v15;
  const char *v16;
  uint64_t v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  const char *v28;
  NSObject *v29;
  uint32_t v30;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t i;
  uint64_t v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  size_t v44;
  uint8_t v45[4];
  int v46;
  __int16 v47;
  int v48;
  __int16 v49;
  int v50;
  __int16 v51;
  int v52;
  __int16 v53;
  int v54;
  __int16 v55;
  int v56;
  uint8_t buf[4];
  const char *v58;
  __int16 v59;
  int v60;
  __int16 v61;
  int v62;
  __int16 v63;
  int v64;
  __int16 v65;
  int v66;
  __int16 v67;
  int v68;
  __int16 v69;
  int v70;

  v2 = getenv("BT_DEVICE_ADDRESS");
  if (v2 && (v3 = v2, strlen(v2) == 17))
  {
    sscanf(v3, "%02hhx:%02hhx:%02hhx:%02hhx:%02hhx:%02hhx", a1, a1 + 1, a1 + 2, a1 + 3, a1 + 4, a1 + 5);
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DDA50);
    v4 = qword_1004E2428;
    v5 = 0;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
    {
      v6 = *a1;
      v7 = a1[1];
      v8 = a1[2];
      v9 = a1[3];
      v10 = a1[4];
      v11 = a1[5];
      *(_DWORD *)buf = 136316674;
      v58 = v3;
      v59 = 1024;
      v60 = v6;
      v61 = 1024;
      v62 = v7;
      v63 = 1024;
      v64 = v8;
      v65 = 1024;
      v66 = v9;
      v67 = 1024;
      v68 = v10;
      v69 = 1024;
      v70 = v11;
      v12 = "BT_DEVICE_ADDRESS address (%s) %02x:%02x:%02x:%02x:%02x:%02x";
      v13 = v4;
LABEL_20:
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, v12, buf, 0x30u);
      return 0;
    }
  }
  else
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DDA90);
    v14 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "could not find BT_DEVICE_ADDRESS env variable", buf, 2u);
    }
    v15 = (const char *)sub_100041A24();
    if (v15)
    {
      v16 = v15;
      LOWORD(v46) = 0;
      *(_DWORD *)v45 = 0;
      WORD2(v44) = 0;
      LODWORD(v44) = 0;
      sscanf(v15, "%02hhx:%02hhx:%02hhx:%02hhx:%02hhx:%02hhx", v45, &v45[1], &v45[2], &v45[3], &v46, (char *)&v46 + 1);
      if (*(_DWORD *)v45 || (unsigned __int16)v46 != 0)
      {
        *(_DWORD *)a1 = *(_DWORD *)v45;
        *((_WORD *)a1 + 2) = v46;
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DDAD0);
        v18 = qword_1004E2428;
        if (!os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
          return 0;
        v19 = *a1;
        v20 = a1[1];
        v21 = a1[2];
        v22 = a1[3];
        v23 = a1[4];
        v24 = a1[5];
        *(_DWORD *)buf = 136316674;
        v58 = v16;
        v59 = 1024;
        v60 = v19;
        v61 = 1024;
        v62 = v20;
        v63 = 1024;
        v64 = v21;
        v65 = 1024;
        v66 = v22;
        v67 = 1024;
        v68 = v23;
        v69 = 1024;
        v70 = v24;
        v12 = "XPC Device address (%s) %02x:%02x:%02x:%02x:%02x:%02x";
        v13 = v18;
        goto LABEL_20;
      }
    }
    if (!sub_10003E288("marconi-bt", (uint64_t)a1))
      return 0;
    v5 = sub_10003E288("bluetooth", (uint64_t)a1);
    if ((_DWORD)v5)
    {
      bzero(buf, 0x400uLL);
      v44 = 1024;
      v25 = sysctlbyname("kern.bootargs", buf, &v44, 0, 0);
      if (v25)
      {
        v26 = v25;
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DDB90);
        v27 = qword_1004E2428;
        if (!os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
          return v5;
        *(_DWORD *)v45 = 67109120;
        v46 = v26;
        v28 = "did not find bootargs sysctlbyname returned %d";
        v29 = v27;
        v30 = 8;
      }
      else
      {
        v32 = strtok((char *)buf, " ");
        if (v32)
        {
          v33 = v32;
          while (!strstr(v33, "wlan.debug.generate-mac"))
          {
            if (strstr(v33, "wlan.factory"))
            {
              v34 = strchr(v33, 61);
              if ((strtol(v34 + 1, 0, 16) & 4) != 0)
                break;
            }
            v33 = strtok(0, " ");
            if (!v33)
              goto LABEL_36;
          }
          for (i = 0; i != 6; ++i)
            a1[i] = arc4random_uniform(0xFFu);
          if (qword_1004E2420 != -1)
            dispatch_once(&qword_1004E2420, &stru_1004DDB10);
          v37 = qword_1004E2428;
          if (!os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
            return v5;
          v38 = *a1;
          v39 = a1[1];
          v40 = a1[2];
          v41 = a1[3];
          v42 = a1[4];
          v43 = a1[5];
          *(_DWORD *)v45 = 67110400;
          v46 = v38;
          v47 = 1024;
          v48 = v39;
          v49 = 1024;
          v50 = v40;
          v51 = 1024;
          v52 = v41;
          v53 = 1024;
          v54 = v42;
          v55 = 1024;
          v56 = v43;
          v28 = "RANDOM address %02x:%02x:%02x:%02x:%02x:%02x";
          v29 = v37;
          v30 = 38;
        }
        else
        {
LABEL_36:
          if (qword_1004E2420 != -1)
            dispatch_once(&qword_1004E2420, &stru_1004DDB50);
          v35 = qword_1004E2428;
          if (!os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
            return v5;
          *(_WORD *)v45 = 0;
          v28 = "did not find bootargs for random address generation";
          v29 = v35;
          v30 = 2;
        }
      }
      _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, v28, v45, v30);
    }
  }
  return v5;
}

void sub_10003E8F8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10003E928(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10003E958(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10003E988(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10003E9B8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10003E9E8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10003EA18(UInt8 **a1, _WORD *a2)
{
  return sub_10003EA2C(CFSTR("bluetooth-aci-calibration"), a1, a2);
}

uint64_t sub_10003EA2C(const __CFString *a1, UInt8 **a2, _WORD *a3)
{
  const __CFDictionary *v6;
  io_service_t MatchingService;
  const __CFData *v8;
  const __CFData *v9;
  CFTypeID TypeID;
  size_t Length;
  CFIndex v12;
  UInt8 *v13;
  uint64_t v14;
  const __CFDictionary *v15;
  CFRange v17;

  v6 = IOServiceNameMatching("marconi-bt");
  if (!v6)
    return 6;
  MatchingService = IOServiceGetMatchingService(kIOMainPortDefault, v6);
  if (!MatchingService)
  {
    v15 = IOServiceNameMatching("bluetooth");
    if (!v15)
      return 6;
    MatchingService = IOServiceGetMatchingService(kIOMainPortDefault, v15);
    if (!MatchingService)
      return 6;
  }
  v8 = (const __CFData *)IORegistryEntrySearchCFProperty(MatchingService, "IODeviceTree", a1, kCFAllocatorDefault, 1u);
  if (v8)
  {
    v9 = v8;
    TypeID = CFDataGetTypeID();
    if (TypeID == CFGetTypeID(v9))
    {
      Length = CFDataGetLength(v9);
      v12 = Length;
      if (Length)
      {
        v13 = (UInt8 *)malloc_type_malloc(Length, 0x100004077774924uLL);
        *a2 = v13;
        v17.location = 0;
        v17.length = v12;
        CFDataGetBytes(v9, v17, v13);
      }
      *a3 = v12;
    }
    CFRelease(v9);
    v14 = 0;
  }
  else
  {
    v14 = 6;
  }
  IOObjectRelease(MatchingService);
  return v14;
}

uint64_t sub_10003EB64(UInt8 **a1, _WORD *a2, int a3)
{
  const __CFString *v5;

  if (a3 == 6)
  {
    v5 = CFSTR("bluetooth-aci-wbcl-calibration");
    return sub_10003EA2C(v5, a1, a2);
  }
  if (a3 == 7)
  {
    v5 = CFSTR("bluetooth-aci-bcal-calibration");
    return sub_10003EA2C(v5, a1, a2);
  }
  return 1;
}

uint64_t sub_10003EBA0(UInt8 **a1, _WORD *a2)
{
  return sub_10003EA2C(CFSTR("bluetooth-tx-calibration"), a1, a2);
}

uint64_t sub_10003EBB4(UInt8 **a1, _WORD *a2)
{
  return sub_10003EA2C(CFSTR("bluetooth-tx-calibration-ext"), a1, a2);
}

uint64_t sub_10003EBC8(UInt8 **a1, _WORD *a2)
{
  return sub_10003EA2C(CFSTR("bluetooth-rx-calibration"), a1, a2);
}

uint64_t sub_10003EBDC(UInt8 **a1, _WORD *a2)
{
  return sub_10003EA2C(CFSTR("bluetooth-taurus-calibration"), a1, a2);
}

uint64_t sub_10003EBF0(UInt8 **a1, _WORD *a2)
{
  return sub_10003EA2C(CFSTR("bluetooth-taurus-calibration-bf"), a1, a2);
}

uint64_t sub_10003EC04(int a1, uint64_t a2)
{
  const char *v2;
  NSObject *v3;
  uint64_t result;
  int v5;
  NSObject *v6;
  NSObject *v7;
  _BOOL4 v8;
  const char *v9;
  int v10;
  NSObject *v11;
  _BOOL4 v12;
  int v13;
  _BYTE v14[10];
  __int16 v15;
  const char *v16;

  if (a1 != 2)
    goto LABEL_4;
  v2 = *(const char **)(a2 + 8);
  if (!strcmp(v2, "on"))
  {
    if (sub_10003E07C() == 7
      || sub_10003E07C() == 6
      || (v5 = access("/dev/btpoweroff", 0), result = 0, !v5))
    {
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DDC10);
      v6 = qword_1004E2428;
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
      {
        v13 = 67109634;
        *(_DWORD *)v14 = sub_10003E07C();
        *(_WORD *)&v14[4] = 1024;
        *(_DWORD *)&v14[6] = access("/dev/btpoweroff", 0);
        v15 = 2080;
        v16 = "bluetool_command_power";
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "ready to power on with HCI transport %d, access powerOff %d from %s", (uint8_t *)&v13, 0x18u);
      }
      sub_10003FC20();
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DDC50);
      v7 = qword_1004E2428;
      v8 = os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT);
      result = 0;
      if (v8)
      {
        v13 = 136315138;
        *(_QWORD *)v14 = "bluetool_command_power";
        v9 = "bluetooth power is now ON in %s";
LABEL_32:
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, v9, (uint8_t *)&v13, 0xCu);
        return 0;
      }
    }
  }
  else
  {
    if (strcmp(v2, "off"))
    {
LABEL_4:
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DDBD0);
      v3 = qword_1004E2428;
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
        sub_100047520(v3);
      return 1;
    }
    if (sub_10003E07C() == 7
      || sub_10003E07C() == 6
      || (v10 = access("/dev/btpoweroff", 0), result = 0, !v10))
    {
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DDC90);
      v11 = qword_1004E2428;
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
      {
        v13 = 67109634;
        *(_DWORD *)v14 = sub_10003E07C();
        *(_WORD *)&v14[4] = 1024;
        *(_DWORD *)&v14[6] = access("/dev/btpoweroff", 0);
        v15 = 2080;
        v16 = "bluetool_command_power";
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "ready to power off with HCI transport %d, access powerOff %d from %s", (uint8_t *)&v13, 0x18u);
      }
      sub_10003FDEC();
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DDCD0);
      v7 = qword_1004E2428;
      v12 = os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT);
      result = 0;
      if (v12)
      {
        v13 = 136315138;
        *(_QWORD *)v14 = "bluetool_command_power";
        v9 = "bluetooth power is now OFF in %s";
        goto LABEL_32;
      }
    }
  }
  return result;
}

void sub_10003EFAC(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10003EFDC(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10003F00C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10003F03C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10003F06C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10003F09C(int a1, uint64_t a2)
{
  const char *v3;
  NSObject *v5;
  const char *v6;
  uint64_t result;
  uint64_t v8;
  const char *v9;
  NSObject *v10;
  uint32_t v11;
  int v12;
  int v13;
  useconds_t v14;
  uint64_t v15;
  int v16;
  _DWORD v17[2];

  if ((a1 - 4) < 0xFFFFFFFE)
    goto LABEL_6;
  v3 = *(const char **)(a2 + 8);
  if (!v3)
    goto LABEL_6;
  if (!strcmp(*(const char **)(a2 + 8), "on"))
  {
    if (!access("/dev/btpoweroff", 0))
      sub_10003FDEC();
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DDD50);
    v8 = qword_1004E2428;
    result = os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO);
    if (!(_DWORD)result)
      return result;
    LOWORD(v17[0]) = 0;
    v9 = "bluetooth reset is now ON";
LABEL_26:
    v10 = v8;
    v11 = 2;
LABEL_27:
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, v9, (uint8_t *)v17, v11);
    return 0;
  }
  if (!strcmp(v3, "off"))
  {
    if (!access("/dev/btpoweroff", 0))
      sub_10003FC20();
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DDD90);
    v8 = qword_1004E2428;
    result = os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO);
    if (!(_DWORD)result)
      return result;
    LOWORD(v17[0]) = 0;
    v9 = "bluetooth reset is now OFF";
    goto LABEL_26;
  }
  if (strcmp(v3, "pulse"))
  {
LABEL_6:
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DDD10);
    v5 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO))
    {
      LOWORD(v17[0]) = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "usage: reset [on|off|pulse ms]", (uint8_t *)v17, 2u);
    }
    v6 = *(const char **)(a2 + 8);
    if (!v6)
      return 1;
    result = strcmp(v6, "-h");
    if ((_DWORD)result)
      return 1;
    return result;
  }
  if (a1 != 3)
    return 0;
  v12 = strtoul(*(const char **)(a2 + 16), 0, 0);
  v13 = access("/dev/btpoweroff", 0);
  result = 0;
  if (!v13)
  {
    sub_10003FDEC();
    if (v12)
    {
      if (v12 <= 10)
        v14 = 0;
      else
        v14 = 1000 * v12 - 10000;
      usleep(v14);
    }
    sub_10003FC20();
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DDDD0);
    v15 = qword_1004E2428;
    result = os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO);
    if ((_DWORD)result)
    {
      if (v12 <= 10)
        v16 = 10;
      else
        v16 = v12;
      v17[0] = 67109120;
      v17[1] = v16;
      v9 = "bluetooth reset was pulsed %d ms";
      v10 = v15;
      v11 = 8;
      goto LABEL_27;
    }
  }
  return result;
}

void sub_10003F3C0(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10003F3F0(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10003F420(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10003F450(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

BOOL sub_10003F480(int a1, uint64_t a2)
{
  const char *v4;
  NSObject *v5;
  _BOOL8 result;
  int v7;
  int v8;
  int v9;
  useconds_t v10;
  NSObject *v11;
  int v12;
  _DWORD v13[2];

  v4 = *(const char **)(a2 + 8);
  if ((a1 - 4) <= 0xFFFFFFFD && strcmp(v4, "on") && strcmp(v4, "off") && strcmp(v4, "pulse"))
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DDE10);
    v5 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO))
    {
      LOWORD(v13[0]) = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "usage: wake [on|off|pulse ms]", (uint8_t *)v13, 2u);
    }
    return strcmp(*(const char **)(a2 + 8), "-h") != 0;
  }
  if (!strcmp(v4, "on"))
  {
    sub_10003F73C();
    return 0;
  }
  if (!strcmp(v4, "off"))
  {
    sub_10003F7E0();
    return 0;
  }
  v7 = strcmp(v4, "pulse");
  result = 0;
  if (a1 != 3 || v7)
    return result;
  v8 = strtoul(*(const char **)(a2 + 16), 0, 0);
  if (dword_1004E0A34 != -1)
    close(dword_1004E0A34);
  v9 = open("/dev/btwake", 0);
  dword_1004E0A34 = v9;
  if (v9 == -1)
    return 0;
  if (v8)
  {
    if (v8 <= 10)
      v10 = 0;
    else
      v10 = 1000 * v8 - 10000;
    usleep(v10);
    v9 = dword_1004E0A34;
  }
  close(v9);
  dword_1004E0A34 = -1;
  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004DDE50);
  v11 = qword_1004E2428;
  result = os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO);
  if (result)
  {
    if (v8 <= 10)
      v12 = 10;
    else
      v12 = v8;
    v13[0] = 67109120;
    v13[1] = v12;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "bluetooth wake was pulsed %d ms", (uint8_t *)v13, 8u);
    return 0;
  }
  return result;
}

void sub_10003F70C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10003F73C()
{
  NSObject *v0;

  if (sub_10003E07C() != 7 && dword_1004E0A34 == -1)
  {
    dword_1004E0A34 = open("/dev/btwake", 0);
    if (dword_1004E0A34 == -1)
    {
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DDED0);
      v0 = qword_1004E2428;
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
        sub_10004755C(v0);
    }
  }
}

void sub_10003F7E0()
{
  NSObject *v0;
  NSObject *v1;
  NSObject *v2;
  NSObject *v3;
  int v4;
  const char *v5;

  if (sub_10003E07C() == 7)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DDF10);
    v0 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_1000475D4(v0);
  }
  else
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DDF50);
    v1 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
    {
      v4 = 136315138;
      v5 = "bluetool_wake_off";
      _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "non-PCIE transport in %s", (uint8_t *)&v4, 0xCu);
    }
    if (dword_1004E0A34 != -1)
    {
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DDF90);
      v2 = qword_1004E2428;
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
      {
        v4 = 136315138;
        v5 = "bluetool_wake_off";
        _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "ready to close wake file descriptor from %s", (uint8_t *)&v4, 0xCu);
      }
      close(dword_1004E0A34);
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DDFD0);
      v3 = qword_1004E2428;
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
      {
        v4 = 136315138;
        v5 = "bluetool_wake_off";
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Wake file descriptor is closed from %s", (uint8_t *)&v4, 0xCu);
      }
      dword_1004E0A34 = -1;
    }
  }
}

void sub_10003FA04(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10003FA34()
{
  NSObject *v0;

  if (dword_1004E0A38 == -1)
  {
    dword_1004E0A38 = open("/dev/btreset", 0);
    if (dword_1004E0A38 == -1)
    {
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DDE90);
      v0 = qword_1004E2428;
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
        sub_100047654(v0);
    }
  }
}

void sub_10003FACC(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10003FAFC()
{
  uint64_t result;

  result = dword_1004E0A38;
  if (dword_1004E0A38 != -1)
  {
    result = close(dword_1004E0A38);
    dword_1004E0A38 = -1;
  }
  return result;
}

void sub_10003FB30(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10003FB60(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10003FB90(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10003FBC0(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10003FBF0(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10003FC20()
{
  NSObject *v0;
  int v1;
  int v2;
  NSObject *v3;
  uint64_t v4;
  int v5;
  const char *v6;

  if (sub_10003E07C() == 7)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DE010);
    v0 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
    {
      v5 = 136315138;
      v6 = "command_regon_power_on";
      _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "PCIE transport and return direclty from %s", (uint8_t *)&v5, 0xCu);
    }
  }
  else if (sub_10003E07C() == 6)
  {
    v1 = sub_10001B720();
    if (v1)
    {
      v2 = v1;
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DE050);
      v3 = qword_1004E2428;
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
        sub_1000476CC(v2, v3, v4);
    }
  }
  else if (dword_1004E0A3C != -1)
  {
    close(dword_1004E0A3C);
    dword_1004E0A3C = -1;
  }
}

void sub_10003FD8C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10003FDBC(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10003FDEC()
{
  NSObject *v0;
  int v1;
  int v2;
  NSObject *v3;
  uint64_t v4;
  NSObject *v5;
  int v6;
  const char *v7;

  if (sub_10003E07C() == 7)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DE090);
    v0 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
    {
      v6 = 136315138;
      v7 = "command_regon_power_off";
      _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "PCIE transport and ready to call pcie_flr from %s", (uint8_t *)&v6, 0xCu);
    }
    sub_10000433C();
  }
  else if (sub_10003E07C() == 6)
  {
    v1 = sub_10001B998();
    if (v1)
    {
      v2 = v1;
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DE0D0);
      v3 = qword_1004E2428;
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
        sub_100047734(v2, v3, v4);
    }
  }
  else if (dword_1004E0A3C == -1)
  {
    dword_1004E0A3C = open("/dev/btpoweroff", 0);
    if (dword_1004E0A3C == -1)
    {
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DE110);
      v5 = qword_1004E2428;
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
        sub_10004779C(v5);
    }
  }
}

void sub_10003FFC0(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10003FFF0(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100040020(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

int *sub_10004005C()
{
  return __error();
}

uint64_t sub_100040068()
{
  NSObject *v0;
  uint64_t result;
  int v2;
  NSObject *v3;
  NSObject *v4;
  const __CFString *v5;
  const __CFString *v6;
  NSObject *v7;
  int v8;
  BOOL v11;
  NSObject *v13;
  __int128 v14;
  int v15;
  __int128 v16;
  int v17;
  __int128 v18;
  int v19;
  __int128 v20;
  int v21;
  uint8_t buf[16];
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint8_t v26[4];
  uint8_t *v27;

  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004DE150);
  v0 = qword_1004E2428;
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136315138;
    *(_QWORD *)&buf[4] = "int getManufacturer()";
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "%s", buf, 0xCu);
  }
  result = dword_1004E0A40;
  if ((dword_1004E0A40 - 1) >= 0xFFFFFFFE)
  {
    v2 = 1634758764;
    v21 = 1737149739;
    v20 = xmmword_1004C51A8;
    if ((MGIsDeviceOneOfType(&v20) & 1) == 0)
    {
      v19 = -1918230744;
      v18 = xmmword_1004C51BC;
      if ((MGIsDeviceOneOfType(&v18) & 1) == 0)
      {
        v17 = -584398440;
        v16 = xmmword_1004C51D0;
        if ((MGIsDeviceOneOfType(&v16) & 1) == 0)
        {
          v15 = -879476163;
          v14 = xmmword_1004C51E4;
          if ((MGIsDeviceOneOfType(&v14) & 1) == 0)
          {
            if (qword_1004E2420 != -1)
              dispatch_once(&qword_1004E2420, &stru_1004DE650);
            v3 = qword_1004E2428;
            if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 136315138;
              *(_QWORD *)&buf[4] = "int _getManufacturerFromString(void)";
              _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%s", buf, 0xCu);
            }
            v2 = dword_1004E0A44;
            if (dword_1004E0A44 == -1)
            {
              if (qword_1004E2420 != -1)
                dispatch_once(&qword_1004E2420, &stru_1004DE690);
              v4 = qword_1004E2428;
              if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)buf = 0;
                _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "MGCopyAnswer kMGQWifiVendor", buf, 2u);
              }
              v5 = (const __CFString *)MGCopyAnswer(CFSTR("WifiVendor"), 0);
              if (v5)
              {
                v6 = v5;
                v24 = 0u;
                v25 = 0u;
                *(_OWORD *)buf = 0u;
                v23 = 0u;
                CFStringGetCString(v5, (char *)buf, 64, 0x8000100u);
                if (qword_1004E2420 != -1)
                  dispatch_once(&qword_1004E2420, &stru_1004DE6D0);
                v7 = qword_1004E2428;
                if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
                {
                  *(_DWORD *)v26 = 136315138;
                  v27 = buf;
                  _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Translating vendor %s", v26, 0xCu);
                }
                if (buf[0])
                {
                  v8 = 1836413537;
                  if ((*(_DWORD *)buf != 1634891085 || *(_DWORD *)&buf[3] != 6386785) && *(_DWORD *)buf != 7159126)
                  {
                    v8 = 544568169;
                    if (*(_DWORD *)buf != 4805461 && *(_DWORD *)buf != 7683414)
                    {
                      v8 = 1835627635;
                      if (*(_QWORD *)buf != 0x696D757374694DLL && *(_DWORD *)buf != 6896982)
                      {
                        v8 = 1936548719;
                        if ((*(_DWORD *)buf != 1668113747 || *(unsigned __int16 *)&buf[4] != 111)
                          && *(_DWORD *)buf != 7552342)
                        {
                          v8 = 544498795;
                          if (*(_DWORD *)buf != 4932692 && *(_DWORD *)buf != 7617878)
                          {
                            v8 = 538997881;
                            v11 = *(_DWORD *)buf == 2036949332 && *(unsigned __int16 *)&buf[4] == 111;
                            if (!v11 && *(_DWORD *)buf != 7945558)
                            {
                              v8 = 1937006964;
                              if (*(_DWORD *)buf != 1413567571 || *(unsigned __int16 *)&buf[4] != 83)
                              {
                                if (*(_DWORD *)buf == 6765910)
                                  v8 = 1937006964;
                                else
                                  v8 = 0;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                else
                {
                  v8 = -1;
                }
                dword_1004E0A44 = v8;
                CFRelease(v6);
              }
              v2 = dword_1004E0A44;
            }
          }
        }
      }
    }
    dword_1004E0A40 = v2;
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DE190);
    v13 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 67109120;
      *(_DWORD *)&buf[4] = dword_1004E0A40;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "Manufacturer is %d", buf, 8u);
    }
    return dword_1004E0A40;
  }
  return result;
}

void sub_1000405B0(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000405E0(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

char *sub_100040610()
{
  NSObject *v0;
  char *v1;
  NSObject *v2;
  const __CFData *v3;
  const __CFData *v4;
  const UInt8 *BytePtr;
  char *v6;
  char *v7;
  const char *v8;
  NSObject *v9;
  size_t v11;
  uint8_t v12[4];
  char *v13;
  uint8_t buf[4];
  const char *v15;

  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004DE1D0);
  v0 = qword_1004E2428;
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136315138;
    v15 = "const char *getPlatform(void)";
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "%s", buf, 0xCu);
  }
  v1 = &byte_1004E1F40;
  if (!byte_1004E1F40)
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DE210);
    v2 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "MGCopyAnswer kMGQProductHash", buf, 2u);
    }
    v3 = (const __CFData *)MGCopyAnswer(CFSTR("ProductHash"), 0);
    if (v3)
    {
      v4 = v3;
      if (CFDataGetLength(v3) == 20)
      {
        BytePtr = CFDataGetBytePtr(v4);
        v1 = &byte_1004E1F40;
        snprintf(&byte_1004E1F40, 0x29uLL, "%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x", *BytePtr, BytePtr[1], BytePtr[2], BytePtr[3], BytePtr[4], BytePtr[5], BytePtr[6], BytePtr[7], BytePtr[8], BytePtr[9], BytePtr[10], BytePtr[11], BytePtr[12], BytePtr[13], BytePtr[14], BytePtr[15],
          BytePtr[16],
          BytePtr[17],
          BytePtr[18],
          BytePtr[19]);
      }
      else
      {
        v1 = 0;
      }
      CFRelease(v4);
    }
    else
    {
      v1 = 0;
    }
    bzero(buf, 0x400uLL);
    v11 = 1024;
    if (!sysctlbyname("kern.bootargs", buf, &v11, 0, 0))
    {
      v6 = strtok((char *)buf, " ");
      if (v6)
      {
        v7 = v6;
        v8 = "a3b78d354cda3366589b53fc2bdcb21efa7de382";
        while (strcmp(v7, "wifibt-external=0x442514e4"))
        {
          if (!strcmp(v7, "wifibt-external=0x443314e4"))
          {
            v8 = "0b5de28032edced881d12d36422319da1e86dd70";
            break;
          }
          if (!strcmp(v7, "wifibt-external=0x443414e4"))
          {
            v8 = "b90333f064aafba4574548dd274f8532f0fae21d";
            break;
          }
          v7 = strtok(0, " ");
          if (!v7)
            goto LABEL_27;
        }
        v1 = &byte_1004E1F40;
        __strlcpy_chk(&byte_1004E1F40, v8, 41, 41);
      }
    }
LABEL_27:
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DE250);
    v9 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)v12 = 136315138;
      v13 = v1;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Platform is %s", v12, 0xCu);
    }
  }
  return v1;
}

void sub_1000409A8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000409D8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100040A08(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

char *sub_100040A38()
{
  NSObject *v0;
  NSObject *v1;
  const __CFData *v2;
  const __CFData *v3;
  const UInt8 *BytePtr;
  NSObject *v5;
  char *v6;
  int v8;
  char *v9;

  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004DE290);
  v0 = qword_1004E2428;
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
  {
    v8 = 136315138;
    v9 = "const char *getSKU(void)";
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "%s", (uint8_t *)&v8, 0xCu);
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DE2D0);
  }
  v1 = qword_1004E2428;
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v8) = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "MGCopyAnswer WSKU", (uint8_t *)&v8, 2u);
  }
  v2 = (const __CFData *)MGCopyAnswer(CFSTR("WSKU"), 0);
  if (v2)
  {
    v3 = v2;
    if (CFDataGetLength(v2) == 16)
    {
      BytePtr = CFDataGetBytePtr(v3);
      byte_1004E1F69 = BytePtr[8];
      *(_WORD *)algn_1004E1F6A = *(_WORD *)(BytePtr + 9);
      byte_1004E1F6C = 0;
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DE310);
      v5 = qword_1004E2428;
      v6 = &byte_1004E1F69;
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
      {
        v8 = 136315138;
        v9 = &byte_1004E1F69;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "SKU is: %s", (uint8_t *)&v8, 0xCu);
      }
    }
    else
    {
      v6 = 0;
    }
    CFRelease(v3);
  }
  else
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DE350);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100047814();
    return 0;
  }
  return v6;
}

void sub_100040C8C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100040CBC(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100040CEC(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100040D1C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_100040D4C()
{
  NSObject *v0;
  const char *v1;
  uint64_t v2;
  const char *v4;
  int v5;
  const char *v6;
  const char *v7;
  BOOL v8;
  NSObject *v9;
  char *v10;
  unsigned __int16 v11;
  char v12;
  __int16 v13;
  char v14;
  unsigned __int16 v15;
  uint8_t v16[4];
  uint64_t v17;
  __int128 v18;
  int v19;
  __int128 v20;
  int v21;
  __int128 v22;
  int v23;
  __int128 v24;
  int v25;
  _OWORD buf[16];

  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004DE390);
  v0 = qword_1004E2428;
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
  {
    LODWORD(buf[0]) = 136315138;
    *(_QWORD *)((char *)buf + 4) = "const char *getChipset(void)";
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "%s", (uint8_t *)buf, 0xCu);
  }
  v15 = 0;
  v14 = 0;
  v13 = 0;
  v12 = 0;
  v11 = 0;
  memset(buf, 0, 255);
  v1 = (const char *)qword_1004E1F70;
  if (!qword_1004E1F70)
  {
    if (sub_10003E07C() == 7)
    {
      if (qword_1004E1F88 != -1)
        dispatch_once(&qword_1004E1F88, &stru_1004DE3D0);
      return qword_1004E1F70;
    }
    if (sub_10003E07C() == 6)
    {
      v25 = 1737149739;
      v24 = xmmword_1004C51A8;
      if (MGIsDeviceOneOfType(&v24))
        qword_1004E1F70 = (uint64_t)"APPLE_M2";
      v23 = -1918230744;
      v22 = xmmword_1004C51BC;
      v1 = "APPLE_M2_5";
      if (MGIsDeviceOneOfType(&v22))
        qword_1004E1F70 = (uint64_t)"APPLE_M2_5";
      v21 = -584398440;
      v20 = xmmword_1004C51D0;
      if (MGIsDeviceOneOfType(&v20))
        qword_1004E1F70 = (uint64_t)"APPLE_M2_5";
      v19 = -879476163;
      v18 = xmmword_1004C51E4;
      if (MGIsDeviceOneOfType(&v18))
      {
        qword_1004E1F70 = (uint64_t)"APPLE_M2_5";
        return (uint64_t)v1;
      }
      v1 = (const char *)qword_1004E1F70;
      if (qword_1004E1F70)
        return (uint64_t)v1;
    }
    v2 = sub_100019E20(&v15, &v14, &v13, &v12, &v11, 0);
    if ((_DWORD)v2)
      return 0;
    v4 = "ALL";
    if (v15 > 0xEu)
    {
      if (v15 == 15)
      {
        if (v11 <= 0x420Du)
        {
          if (v11 <= 0x4108u)
          {
            if (v11 > 0x2201u)
            {
              if (v11 == 8706)
              {
                v4 = "BCM4330A1";
                goto LABEL_36;
              }
              if (v11 == 16643)
              {
                v4 = "BCM4330B1";
                goto LABEL_36;
              }
            }
            else
            {
              if (v11 == 8469)
              {
                sub_100019CB0(buf, 0, 0);
                v10 = strstr((char *)buf, "4364");
                v6 = "BCM4364A0";
                v7 = "BCM";
                v8 = v10 == 0;
LABEL_30:
                if (v8)
                  v4 = v7;
                else
                  v4 = v6;
                goto LABEL_36;
              }
              if (v11 == 8472)
              {
                v4 = "BCM20710";
                goto LABEL_36;
              }
            }
          }
          else if (v11 <= 0x4112u)
          {
            if (v11 == 16649)
            {
              sub_100019CB0(buf, 0, 0);
              v4 = "BCM43430B0";
              if (!strstr((char *)buf, "43430B") && !strstr((char *)buf, "BCM43435B"))
                v4 = "BCM";
              goto LABEL_36;
            }
            if (v11 == 16654)
            {
              v4 = "BCM4355B0";
              goto LABEL_36;
            }
          }
          else
          {
            switch(v11)
            {
              case 0x4113u:
                v4 = "BCM4330B0";
                goto LABEL_36;
              case 0x4207u:
                v4 = "BCM4355B2";
                goto LABEL_36;
              case 0x420Au:
                v4 = "BCM43430B1";
                goto LABEL_36;
            }
          }
        }
        else if (v11 > 0x610Cu)
        {
          if (v11 <= 0x6213u)
          {
            if (v11 == 24845)
            {
              v4 = "BCM4329C0";
              goto LABEL_36;
            }
            if (v11 == 25094)
            {
              v4 = "BCM43452A2";
              goto LABEL_36;
            }
          }
          else
          {
            switch(v11)
            {
              case 0x6214u:
                v4 = "BCM4355C1";
                goto LABEL_36;
              case 0x6607u:
                v4 = "BCM4350C5";
                goto LABEL_36;
              case 0x8107u:
                v4 = "BCM4325";
                goto LABEL_36;
            }
          }
        }
        else if (v11 <= 0x4309u)
        {
          if (v11 == 16910)
          {
            v4 = "BCM4357B1";
            goto LABEL_36;
          }
          if (v11 == 16919)
          {
            v4 = "BCM4329B1";
            goto LABEL_36;
          }
        }
        else
        {
          switch(v11)
          {
            case 0x430Au:
              v4 = "BCM4355B3";
              goto LABEL_36;
            case 0x6103u:
              v4 = "BCM4355C0";
              goto LABEL_36;
            case 0x610Cu:
              v4 = "BCM4350C2";
              goto LABEL_36;
          }
        }
        v4 = "BCM";
        goto LABEL_36;
      }
      if (v15 != 76)
        goto LABEL_36;
    }
    else
    {
      if (v15 == 10)
      {
        if (v11 == 4841)
          v4 = "BC6";
        else
          v4 = "CSR";
        goto LABEL_36;
      }
      if (v15 != 13)
      {
LABEL_36:
        qword_1004E1F70 = (uint64_t)v4;
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DE610);
        v9 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)v16 = 136315138;
          v17 = qword_1004E1F70;
          _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Chip is %s", v16, 0xCu);
        }
        return qword_1004E1F70;
      }
    }
    v5 = sub_10000AD14(v2);
    v6 = "ACIBGA";
    v7 = "ACIFPGA";
    v8 = v5 == 0;
    goto LABEL_30;
  }
  return (uint64_t)v1;
}

void sub_100041354(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100041384(id a1)
{
  CFMutableDictionaryRef v1;
  const __CFDictionary *v2;
  io_service_t MatchingService;
  io_object_t v4;
  const __CFDictionary *v5;
  NSObject *v6;
  NSObject *v7;
  const __CFDictionary *v8;
  const __CFNumber *Value;
  const __CFString *v10;
  NSObject *v11;
  NSObject *v12;
  char buffer[2];
  char v14;
  uint64_t valuePtr;
  uint8_t buf[4];
  char *v17;

  v1 = IOServiceNameMatching("AppleOLYHAL");
  if (!v1)
  {
LABEL_15:
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DE5D0);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100047840();
    return;
  }
  v2 = v1;
  while (1)
  {
    MatchingService = IOServiceGetMatchingService(kIOMainPortDefault, v2);
    if (!MatchingService)
    {
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DE590);
      v7 = qword_1004E2428;
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "No AppleOLYHAL service. Retrying...\n", buf, 2u);
      }
      goto LABEL_14;
    }
    v4 = MatchingService;
    v5 = (const __CFDictionary *)IORegistryEntrySearchCFProperty(MatchingService, "IODeviceTree", CFSTR("HWIdentifiers"), kCFAllocatorDefault, 1u);
    if (v5)
      break;
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DE550);
    v6 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "No HWIdentifiers property. Retrying...\n", buf, 2u);
    }
    IOObjectRelease(v4);
LABEL_14:
    usleep(0x7A120u);
    v2 = IOServiceNameMatching("AppleOLYHAL");
    if (!v2)
      goto LABEL_15;
  }
  v8 = v5;
  Value = (const __CFNumber *)CFDictionaryGetValue(v5, CFSTR("C"));
  valuePtr = 0;
  if (Value)
  {
    CFNumberGetValue(Value, kCFNumberLongType, &valuePtr);
    if (valuePtr == 276347)
      valuePtr = 4377;
  }
  else
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DE410);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_10004794C();
  }
  v10 = (const __CFString *)CFDictionaryGetValue(v8, CFSTR("s"));
  v14 = 0;
  *(_WORD *)buffer = 0;
  if (v10)
  {
    CFStringGetCString(v10, buffer, 3, 0x8000100u);
  }
  else
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DE450);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100047920();
  }
  if (valuePtr && buffer[0])
  {
    if ((snprintf(byte_1004E1F78, 0x10uLL, "BCM%llu%s", valuePtr, buffer) - 1) > 0xE)
    {
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DE4D0);
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
        sub_10004786C();
    }
    else
    {
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DE490);
      v11 = qword_1004E2428;
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136315138;
        v17 = byte_1004E1F78;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "Generated chipset string of %s from HWIdentifiers\n", buf, 0xCu);
      }
      qword_1004E1F70 = (uint64_t)byte_1004E1F78;
    }
  }
  else
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DE510);
    v12 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100047898(&valuePtr, (uint64_t)buffer, v12);
  }
  CFRelease(v8);
  IOObjectRelease(v4);
}

void sub_1000417E4(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100041814(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100041844(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100041874(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000418A4(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000418D4(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100041904(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100041934(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100041964(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100041994(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000419C4(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000419F4(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void *sub_100041A24()
{
  return &unk_1004E2430;
}

unint64_t sub_100041A30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;

  if (!dword_1004E1F94)
  {
    mach_timebase_info((mach_timebase_info_t)&dword_1004E1F90);
    v0 = dword_1004E1F94;
    v1 = dword_1004E1F90;
    while ((_DWORD)v1)
    {
      if (v1 > v0)
      {
        v2 = v1 % v0;
        v1 = v0;
        v0 = v2;
      }
      v3 = v0;
      v0 = v1;
      v4 = (_DWORD)v3 == (_DWORD)v1;
      v1 = v3;
      if (v4)
      {
        LODWORD(v0) = 1;
        break;
      }
    }
    dword_1004E1F90 /= v0;
    dword_1004E1F94 = 1000000 * (dword_1004E1F94 / v0);
  }
  v5 = mach_continuous_time();
  if (dword_1004E1F94)
    return v5 * dword_1004E1F90 / dword_1004E1F94;
  else
    return 0;
}

uint64_t sub_100041AE0()
{
  _xpc_connection_s *mach_service;
  _xpc_connection_s *v1;

  mach_service = xpc_connection_create_mach_service("com.apple.BlueTool", (dispatch_queue_t)&_dispatch_main_q, 1uLL);
  if (!mach_service)
    return 4;
  v1 = mach_service;
  xpc_connection_set_event_handler(mach_service, &stru_1004DE710);
  xpc_connection_resume(v1);
  CFRunLoopRun();
  return 0;
}

void sub_100041B3C(id a1, void *a2)
{
  xpc_type_t type;
  char *v4;
  _QWORD handler[5];

  type = xpc_get_type(a2);
  if (type == (xpc_type_t)&_xpc_type_connection)
  {
    xpc_connection_set_target_queue((xpc_connection_t)a2, (dispatch_queue_t)&_dispatch_main_q);
    handler[0] = _NSConcreteStackBlock;
    handler[1] = 0x40000000;
    handler[2] = sub_100041CC0;
    handler[3] = &unk_1004DE730;
    handler[4] = a2;
    xpc_connection_set_event_handler((xpc_connection_t)a2, handler);
    xpc_connection_resume((xpc_connection_t)a2);
  }
  else if (type == (xpc_type_t)&_xpc_type_error)
  {
    xpc_dictionary_get_string(a2, _xpc_error_key_description);
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DE770);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100047978();
  }
  else
  {
    v4 = xpc_copy_description(a2);
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DE7B0);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_1000479DC();
    free(v4);
  }
}

void sub_100041CC0(uint64_t a1, xpc_object_t object)
{
  _xpc_connection_s *v3;
  xpc_type_t type;
  NSObject *v6;
  const char *string;
  NSObject *v8;
  dispatch_time_t v9;
  xpc_object_t value;
  xpc_object_t v11;
  void *v12;
  NSObject *v13;
  int v14;
  char *v15;
  int v16;
  dispatch_time_t v17;
  xpc_object_t v18;
  xpc_object_t v19;
  void *v20;
  xpc_object_t v21;
  NSObject *v22;
  xpc_object_t v23;
  void *v24;
  int64_t v25;
  xpc_object_t v26;
  const char *string_ptr;
  char *v28;
  char *v29;
  size_t v30;
  char *v31;
  int v32;
  NSObject *v33;
  const char *v34;
  int v35;
  NSObject *v36;
  xpc_object_t v37;
  int v38;
  const char *v39;
  const char *v40;
  NSObject *v41;
  const char *v42;
  NSObject *v43;
  int64_t v44;
  char v45;
  xpc_object_t reply;
  NSObject *v47;
  int v48;
  xpc_object_t v49;
  void *v50;
  const char *v51;
  NSObject *v52;
  int v53;
  BOOL v54;
  int v55;
  NSObject *v56;
  dispatch_time_t v57;
  NSObject *v58;
  int v59;
  NSObject *v60;
  NSObject *v61;
  int v62;
  int v63;
  unint64_t v64;
  NSObject *v65;
  NSObject *v66;
  unint64_t v67;
  NSObject *v68;
  int v69;
  const char *v70;
  int v71;
  uint8_t buf[16];
  _BYTE v73[12];
  __int16 v74;
  _BYTE v75[10];
  const char *v76;
  unint64_t v77;

  v3 = *(_xpc_connection_s **)(a1 + 32);
  type = xpc_get_type(object);
  if (type != (xpc_type_t)&_xpc_type_dictionary)
  {
    if (object != &_xpc_error_connection_invalid && type == (xpc_type_t)&_xpc_type_error)
    {
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DE830);
      v6 = qword_1004E2428;
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
        sub_100047C38(object, v6);
    }
    return;
  }
  string = xpc_dictionary_get_string(object, "kMsgId");
  if (strcmp(string, "RunExternalScript"))
  {
    if (strcmp(string, "RunBuiltinScript"))
    {
      if (strcmp(string, "RunCommand"))
        abort();
      v8 = dispatch_source_create((dispatch_source_type_t)&_dispatch_source_type_timer, 0, 0, 0);
      v9 = dispatch_time(0, 30000000000);
      dispatch_source_set_timer(v8, v9, 0xFFFFFFFFFFFFFFFFLL, 0x3B9ACA00uLL);
      dispatch_source_set_event_handler(v8, &stru_1004DE8F0);
      dispatch_resume(v8);
      value = xpc_dictionary_get_value(object, "kMsgArgs");
      *(_QWORD *)v73 = 0;
      v11 = xpc_dictionary_get_value(value, "command");
      if (v11)
      {
        v12 = v11;
        if (xpc_get_type(v11) != (xpc_type_t)&_xpc_type_string)
        {
          if (qword_1004E2420 != -1)
            dispatch_once(&qword_1004E2420, &stru_1004DEF70);
          v13 = qword_1004E2428;
          v14 = 1;
          if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)buf = 0;
            v14 = 1;
            _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "Param is not a string", buf, 2u);
          }
          v15 = 0;
          v16 = 0;
          goto LABEL_101;
        }
        string_ptr = xpc_string_get_string_ptr(v12);
        if (string_ptr)
        {
          v28 = strdup(string_ptr);
          v29 = strtok(v28, "\n");
          v16 = 0;
          v15 = 0;
          if (v29)
          {
            do
            {
              *(_QWORD *)v73 = 0;
              v14 = sub_10001CDE0(v29, (uint64_t)v73);
              if (*(_QWORD *)v73)
              {
                v30 = strlen(*(const char **)v73);
                v31 = (char *)reallocf(v15, v30 + v16 + 1);
                v15 = v31;
                if (v31)
                {
                  memcpy(&v31[v16], *(const void **)v73, v30);
                  v32 = v16 + v30;
                  v16 += v30 + 1;
                  v15[v32] = 10;
                }
                else
                {
                  if (qword_1004E2420 != -1)
                    dispatch_once(&qword_1004E2420, &stru_1004DEFF0);
                  v33 = qword_1004E2428;
                  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEBUG))
                    sub_100047BFC(buf, &buf[1], v33);
                  v16 = 0;
                  v14 = 1;
                }
                free(*(void **)v73);
              }
              if (v14)
                break;
              v29 = strtok(0, "\n");
            }
            while (v29);
            if (v16)
              v15[v16 - 1] = 0;
          }
          else
          {
            v14 = 1;
          }
          free(v28);
          goto LABEL_101;
        }
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DEFB0);
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEBUG))
          sub_100047A6C();
      }
      else
      {
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DEF30);
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
          sub_100047A40();
      }
      v15 = 0;
      v16 = 0;
      v14 = 1;
LABEL_101:
      reply = xpc_dictionary_create_reply(object);
      xpc_dictionary_set_int64(reply, "result", v14);
      if (v15 && v16)
        xpc_dictionary_set_string(reply, "output", v15);
      xpc_connection_send_message(v3, reply);
      xpc_release(reply);
      if (v15)
        free(v15);
      goto LABEL_106;
    }
    v21 = xpc_dictionary_get_value(object, "kMsgArgs");
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DEA30);
    v22 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v73 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "Running xpcRunBuiltinScript", v73, 2u);
    }
    v23 = xpc_dictionary_get_value(v21, "script");
    if (!v23)
    {
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DEA70);
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      {
        sub_100047A40();
        goto LABEL_153;
      }
      goto LABEL_67;
    }
    v24 = v23;
    if (xpc_get_type(v23) != (xpc_type_t)&_xpc_type_string)
    {
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DEAB0);
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEBUG))
      {
        sub_100047A98();
LABEL_153:
        v35 = 1;
        goto LABEL_188;
      }
      goto LABEL_67;
    }
    v42 = xpc_string_get_string_ptr(v24);
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DEAF0);
    v43 = qword_1004E2428;
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)v73 = 136315650;
      *(_QWORD *)&v73[4] = v42;
      v74 = 2080;
      *(_QWORD *)v75 = "xpcRunBuiltinScript";
      *(_WORD *)&v75[8] = 2080;
      v76 = "19:36:26";
      _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_DEFAULT, "get arg = %s from %s at %s", v73, 0x20u);
    }
    if (!v42)
    {
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DEB30);
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEBUG))
      {
        sub_100047A6C();
        goto LABEL_153;
      }
LABEL_67:
      v35 = 1;
LABEL_68:
      v36 = qword_1004E2428;
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)v73 = 67109120;
        *(_DWORD *)&v73[4] = v35;
        _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_DEFAULT, "builtin script completed with result %d", v73, 8u);
      }
      v37 = xpc_dictionary_create_reply(object);
      xpc_dictionary_set_int64(v37, "result", v35);
      v38 = sub_100040068();
      xpc_dictionary_set_int64(v37, "manufacturer", v38);
      v39 = (const char *)sub_100018948();
      if (v39)
        v40 = v39;
      else
        v40 = (const char *)&unk_1004C69E6;
      if (*v40 && MGGetBoolAnswer(CFSTR("InternalBuild")))
      {
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DEEF0);
        v41 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)v73 = 136315138;
          *(_QWORD *)&v73[4] = v40;
          _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEFAULT, "Firmware is %s", v73, 0xCu);
        }
      }
      xpc_dictionary_set_string(v37, "firmware", v40);
      xpc_connection_send_message(v3, v37);
      xpc_release(v37);
      goto LABEL_107;
    }
    v44 = 30000000000;
    v69 = strncmp(v42, "boot", 5uLL);
    if (v69)
    {
      if (strncmp(v42, "init", 5uLL))
      {
        if (!strncmp(v42, "deepsleep", 0xAuLL))
        {
          v45 = 0;
          v71 = 3;
          v44 = 4000000000;
        }
        else
        {
          v71 = 0;
          v45 = 1;
        }
        goto LABEL_119;
      }
      v45 = 0;
      v48 = 2;
    }
    else
    {
      v45 = 0;
      v48 = 1;
    }
    v71 = v48;
LABEL_119:
    v49 = xpc_dictionary_get_value(v21, "btaddress");
    if (v49)
    {
      v50 = v49;
      if (xpc_get_type(v49) == (xpc_type_t)&_xpc_type_string)
      {
        v51 = xpc_string_get_string_ptr(v50);
        strlen(v51);
        __memcpy_chk(&unk_1004E2430);
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DEB70);
        v52 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)v73 = 136315138;
          *(_QWORD *)&v73[4] = &unk_1004E2430;
          _os_log_impl((void *)&_mh_execute_header, v52, OS_LOG_TYPE_DEFAULT, "xpc address %s", v73, 0xCu);
        }
      }
      else
      {
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DEBB0);
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEBUG))
          sub_100047BD0();
      }
    }
    else
    {
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DEBF0);
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
        sub_100047BA4();
    }
    if ((v45 & 1) == 0)
    {
      v53 = sub_10003E07C();
      if (v69)
        v54 = 0;
      else
        v54 = v53 == 7;
      v55 = v54;
      v56 = dispatch_source_create((dispatch_source_type_t)&_dispatch_source_type_timer, 0, 0, 0);
      v57 = dispatch_time(0, v44);
      dispatch_source_set_timer(v56, v57, 0xFFFFFFFFFFFFFFFFLL, 0x3B9ACA00uLL);
      dispatch_source_set_event_handler(v56, &stru_1004DEC30);
      dispatch_resume(v56);
      if (byte_1004E1F98 == 1)
      {
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DECB0);
        v58 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)v73 = 136315138;
          *(_QWORD *)&v73[4] = v42;
          _os_log_impl((void *)&_mh_execute_header, v58, OS_LOG_TYPE_DEFAULT, "%s script powercycling entire wifi/BT chip", v73, 0xCu);
        }
        v59 = sub_1000046C8();
        if (v59)
        {
          v35 = v59;
          if (qword_1004E2420 != -1)
            dispatch_once(&qword_1004E2420, &stru_1004DECF0);
          if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
            sub_100047B40();
          dispatch_source_cancel(v56);
          dispatch_release(v56);
          goto LABEL_188;
        }
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DED30);
        v60 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)v73 = 136315138;
          *(_QWORD *)&v73[4] = "xpcRunBuiltinScript";
          _os_log_impl((void *)&_mh_execute_header, v60, OS_LOG_TYPE_DEFAULT, "succeed from calling pcie_powercycle in %s", v73, 0xCu);
          byte_1004E1F98 = 0;
          if (qword_1004E2420 != -1)
            dispatch_once(&qword_1004E2420, &stru_1004DED70);
        }
        else
        {
          byte_1004E1F98 = 0;
        }
        v61 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)v73 = 136315138;
          *(_QWORD *)&v73[4] = "xpcRunBuiltinScript";
          _os_log_impl((void *)&_mh_execute_header, v61, OS_LOG_TYPE_DEFAULT, "changed variable pendingPCIEPowerCycle to be false in %s", v73, 0xCu);
        }
      }
      v70 = v42;
      v62 = 0;
      if (v55)
        v63 = 2;
      else
        v63 = 1;
      do
      {
        v64 = sub_100041A30();
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DEDB0);
        v65 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)v73 = 136315138;
          *(_QWORD *)&v73[4] = "xpcRunBuiltinScript";
          _os_log_impl((void *)&_mh_execute_header, v65, OS_LOG_TYPE_DEFAULT, "right before calling runCommandForCurrentConfig from %s", v73, 0xCu);
        }
        v35 = sub_1000170A8(v71);
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DEDF0);
        v66 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)v73 = 136315138;
          *(_QWORD *)&v73[4] = "xpcRunBuiltinScript";
          _os_log_impl((void *)&_mh_execute_header, v66, OS_LOG_TYPE_DEFAULT, "right after calling runCommandForCurrentConfig from %s", v73, 0xCu);
        }
        v67 = sub_100041A30();
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DEE30);
        v68 = qword_1004E2428;
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)v73 = 136316162;
          *(_QWORD *)&v73[4] = v70;
          v74 = 1024;
          *(_DWORD *)v75 = v62 + 1;
          *(_WORD *)&v75[4] = 1024;
          *(_DWORD *)&v75[6] = v63;
          LOWORD(v76) = 1024;
          *(_DWORD *)((char *)&v76 + 2) = v35;
          HIWORD(v76) = 2048;
          v77 = v67 - v64;
          _os_log_impl((void *)&_mh_execute_header, v68, OS_LOG_TYPE_DEFAULT, "%s script attempt %u of %u: result %d execution time:%llu(MS)", v73, 0x28u);
        }
        if (!v35)
          break;
        usleep(0x7A120u);
        ++v62;
      }
      while (v63 != v62);
      dispatch_source_cancel(v56);
      dispatch_release(v56);
      if (!v69 && v35 && sub_10003E07C() == 7)
      {
        if (qword_1004E2420 != -1)
          dispatch_once(&qword_1004E2420, &stru_1004DEE70);
        if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
          sub_100047AC4();
        byte_1004E1F98 = 1;
      }
      goto LABEL_188;
    }
    v35 = 1;
LABEL_188:
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DEEB0);
    goto LABEL_68;
  }
  v8 = dispatch_source_create((dispatch_source_type_t)&_dispatch_source_type_timer, 0, 0, 0);
  v17 = dispatch_time(0, 30000000000);
  dispatch_source_set_timer(v8, v17, 0xFFFFFFFFFFFFFFFFLL, 0x3B9ACA00uLL);
  dispatch_source_set_event_handler(v8, &stru_1004DE870);
  dispatch_resume(v8);
  v18 = xpc_dictionary_get_value(object, "kMsgArgs");
  v19 = xpc_dictionary_get_value(v18, "script");
  if (v19)
  {
    v20 = v19;
    if (xpc_get_type(v19) == (xpc_type_t)&_xpc_type_string)
    {
      v34 = xpc_string_get_string_ptr(v20);
      if (v34)
      {
        v25 = (int)sub_10001D208(v34);
        goto LABEL_47;
      }
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DE9F0);
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEBUG))
        sub_100047A6C();
    }
    else
    {
      if (qword_1004E2420 != -1)
        dispatch_once(&qword_1004E2420, &stru_1004DE9B0);
      if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEBUG))
        sub_100047A98();
    }
  }
  else
  {
    if (qword_1004E2420 != -1)
      dispatch_once(&qword_1004E2420, &stru_1004DE970);
    if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
      sub_100047A40();
  }
  v25 = 1;
LABEL_47:
  v26 = xpc_dictionary_create_reply(object);
  xpc_dictionary_set_int64(v26, "result", v25);
  xpc_connection_send_message(v3, v26);
  xpc_release(v26);
LABEL_106:
  dispatch_source_cancel(v8);
  dispatch_release(v8);
LABEL_107:
  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004DE7F0);
  v47 = qword_1004E2428;
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v73 = 0;
    _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_DEFAULT, "Completed handling of dictionary-xpc event", v73, 2u);
  }
}

void sub_100042E40(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100042E70(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100042EA0(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100042ED0(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100042F00(id a1)
{
  void (*v1)(const char *, uint64_t);
  NSObject *v2;
  uint8_t v3[16];

  v1 = (void (*)(const char *, uint64_t))dlsym((void *)0xFFFFFFFFFFFFFFFFLL, "WriteStackshotReport_stdc");
  if (v1)
    v1("BT BlueTool Stuck", 3172327085);
  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004DE8B0);
  v2 = qword_1004E2428;
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)v3 = 0;
    _os_log_error_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "BlueTool timed out! Exiting...", v3, 2u);
  }
  exit(1);
}

void sub_100042FB4(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100042FE4(id a1)
{
  void (*v1)(const char *, uint64_t);
  NSObject *v2;
  uint8_t v3[16];

  v1 = (void (*)(const char *, uint64_t))dlsym((void *)0xFFFFFFFFFFFFFFFFLL, "WriteStackshotReport_stdc");
  if (v1)
    v1("BT BlueTool Stuck", 3172327085);
  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004DE930);
  v2 = qword_1004E2428;
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)v3 = 0;
    _os_log_error_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "BlueTool timed out! Exiting...", v3, 2u);
  }
  exit(1);
}

void sub_100043098(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000430C8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000430F8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100043128(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100043158(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100043188(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000431B8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000431E8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100043218(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100043248(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100043278(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000432A8(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000432D8(id a1)
{
  void (*v1)(const char *, uint64_t);
  NSObject *v2;
  uint8_t v3[16];

  v1 = (void (*)(const char *, uint64_t))dlsym((void *)0xFFFFFFFFFFFFFFFFLL, "WriteStackshotReport_stdc");
  if (v1)
    v1("BT BlueTool Stuck", 3172327085);
  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004DEC70);
  v2 = qword_1004E2428;
  if (os_log_type_enabled((os_log_t)qword_1004E2428, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)v3 = 0;
    _os_log_error_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "BlueTool timed out! Exiting...", v3, 2u);
  }
  exit(1);
}

void sub_10004338C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000433BC(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000433EC(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10004341C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10004344C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10004347C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000434AC(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000434DC(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10004350C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10004353C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10004356C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10004359C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000435CC(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000435FC(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10004362C(id a1)
{
  qword_1004E2428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10004365C(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 2u);
}

void sub_10004366C(NSObject *a1)
{
  int v2[6];

  dlerror();
  v2[0] = 136315394;
  sub_100007408();
  _os_log_error_impl((void *)&_mh_execute_header, a1, OS_LOG_TYPE_ERROR, "PCIe failed to dlopen %s, error: %s\n", (uint8_t *)v2, 0x16u);
  sub_100007494();
}

void sub_1000436F8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_100007408();
  sub_10000741C((void *)&_mh_execute_header, v0, v1, "PCIe failed to dlsym %s, error: %s\n", v2, v3, v4, v5, 2u);
  sub_1000073F8();
}

void sub_100043764()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_100007408();
  sub_10000741C((void *)&_mh_execute_header, v0, v1, "PCIe failed to dlsym %s, error: %s\n", v2, v3, v4, v5, 2u);
  sub_1000073F8();
}

void sub_1000437D0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_100007408();
  sub_10000741C((void *)&_mh_execute_header, v0, v1, "PCIe failed to dlsym %s, error: %s\n", v2, v3, v4, v5, 2u);
  sub_1000073F8();
}

void sub_10004383C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_100007408();
  sub_10000741C((void *)&_mh_execute_header, v0, v1, "PCIe failed to dlsym %s, error: %s\n", v2, v3, v4, v5, 2u);
  sub_1000073F8();
}

void sub_1000438A8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_100007408();
  sub_10000741C((void *)&_mh_execute_header, v0, v1, "PCIe failed to dlsym %s, error: %s\n", v2, v3, v4, v5, 2u);
  sub_1000073F8();
}

void sub_100043914()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_100007408();
  sub_10000741C((void *)&_mh_execute_header, v0, v1, "PCIe failed to dlsym %s, error: %s\n", v2, v3, v4, v5, 2u);
  sub_1000073F8();
}

void sub_100043980(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000073E8((void *)&_mh_execute_header, a1, a3, "%s: invalid input parameter", a5, a6, a7, a8, 2u);
  sub_1000073F8();
}

void sub_1000439F0(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000073E8((void *)&_mh_execute_header, a1, a3, "%s: kevent error on sw_kq_read", a5, a6, a7, a8, 2u);
  sub_1000073F8();
}

void sub_100043A60(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000073E8((void *)&_mh_execute_header, a1, a3, "%s: empty slot", a5, a6, a7, a8, 2u);
  sub_1000073F8();
}

void sub_100043AD0(unsigned __int16 a1, uint64_t a2, NSObject *a3)
{
  _DWORD v3[2];
  __int16 v4;
  uint64_t v5;

  v3[0] = 67109376;
  v3[1] = a1;
  v4 = 2048;
  v5 = a2;
  sub_100007448((void *)&_mh_execute_header, a3, (uint64_t)a3, "slot has more data, slotLen: %u, size_in: %zu", (uint8_t *)v3);
  sub_1000073F8();
}

void sub_100043B4C()
{
  NSObject *v0;
  uint64_t v1;
  int v2[6];

  v2[0] = 136315394;
  sub_100007464();
  sub_100007448((void *)&_mh_execute_header, v0, v1, "%s: os_channel_sync rx failed - %d", (uint8_t *)v2);
  sub_1000073F8();
}

void sub_100043BBC()
{
  NSObject *v0;
  uint64_t v1;
  int v2[6];

  v2[0] = 136315394;
  sub_100007464();
  sub_100007448((void *)&_mh_execute_header, v0, v1, "%s: failed to advance slot - %d", (uint8_t *)v2);
  sub_1000073F8();
}

void sub_100043C2C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_100007454();
  sub_100007478((void *)&_mh_execute_header, v0, v1, "%s: current slot length: %u", v2, v3, v4, v5, 2u);
  sub_1000073F8();
}

void sub_100043CA0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "PCIe could not find AppleBluetoothModule service\n", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100043CCC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100007488();
  sub_100007438((void *)&_mh_execute_header, v0, v1, "PCIe FLR failed: %#x\n", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100043D2C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100007488();
  sub_100007438((void *)&_mh_execute_header, v0, v1, "PCIe could not open AppleBluetoothModule service: %#x\n", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100043D8C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100007488();
  sub_100007438((void *)&_mh_execute_header, v0, v1, "PCIe powercycle failed: %#x\n", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100043DEC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "PCIe failed to load transport library\n", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100043E18(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000073E8((void *)&_mh_execute_header, a2, a3, "PCIe failed to create %s transport\n", a5, a6, a7, a8, 2u);
  sub_1000073F8();
}

void sub_100043E94(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000073E8((void *)&_mh_execute_header, a1, a3, "%s: could not create matching dictionary", a5, a6, a7, a8, 2u);
  sub_1000073F8();
}

void sub_100043F04(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000073E8((void *)&_mh_execute_header, a1, a3, "%s: failed to create stringRef", a5, a6, a7, a8, 2u);
  sub_1000073F8();
}

void sub_100043F74(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000073E8((void *)&_mh_execute_header, a1, a3, "failed to get uuid for %s channel", a5, a6, a7, a8, 2u);
  sub_1000073F8();
}

void sub_100043FE4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "could not create matching dictionary", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100044010()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "failed to create stringRef", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_10004403C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "no matching service found", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100044068()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "no IOSkywalkNexusUUID property", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100044094(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000073E8((void *)&_mh_execute_header, a1, a3, "protocol: %s, failed to get uuid CString\n", a5, a6, a7, a8, 2u);
  sub_1000073F8();
}

void sub_100044104(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000073E8((void *)&_mh_execute_header, a1, a3, "failed to create channel for %s", a5, a6, a7, a8, 2u);
  sub_1000073F8();
}

void sub_100044174()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "failed to create channel", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_1000441A0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "failed to create write kqueue", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_1000441CC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "write kevent registration failed", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_1000441F8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "failed to create read kqueue", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100044224()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "read kevent registration failed", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100044250()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "failed to get cstring property", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_10004427C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100007488();
  sub_100007438((void *)&_mh_execute_header, v0, v1, "IOServiceAddMatchingNotification returned 0x%08x", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_1000442DC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "PCIe sendImage failed\n", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100044308()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "PCIe failed to free transport\n", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100044334(uint64_t a1, uint64_t a2)
{
  NSObject *v2;
  int v3;
  uint64_t v4;

  v3 = 134218240;
  v4 = a2;
  sub_100007454();
  sub_100007448((void *)&_mh_execute_header, v2, (uint64_t)v2, "PCIe read failed: requested %zu, received %u\n", (uint8_t *)&v3);
  sub_1000073F8();
}

void sub_1000443A8(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000073E8((void *)&_mh_execute_header, a1, a3, "%s: invalid input parameter", a5, a6, a7, a8, 2u);
  sub_1000073F8();
}

void sub_100044418()
{
  uint64_t v0;
  os_log_t v1;
  int v2;
  const char *v3;
  __int16 v4;
  uint64_t v5;

  v2 = 136315650;
  v3 = "skywalk_write_channel";
  sub_100007454();
  v4 = 2048;
  v5 = v0;
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "%s: slot_len: %u, size_in: %zu", (uint8_t *)&v2, 0x1Cu);
  sub_100007494();
}

void sub_1000444A8(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000073E8((void *)&_mh_execute_header, a1, a3, "%s: os_channel_sync tx failed", a5, a6, a7, a8, 2u);
  sub_1000073F8();
}

void sub_100044518()
{
  NSObject *v0;
  uint64_t v1;
  int v2[6];

  v2[0] = 136315394;
  sub_100007464();
  sub_100007448((void *)&_mh_execute_header, v0, v1, "%s: failed to advance slot - %d", (uint8_t *)v2);
  sub_1000073F8();
}

void sub_100044588()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_100007454();
  sub_100007478((void *)&_mh_execute_header, v0, v1, "%s: current slot length: %u", v2, v3, v4, v5, 2u);
  sub_1000073F8();
}

void sub_1000445FC(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000073E8((void *)&_mh_execute_header, a1, a3, "%s: kevent error on sw_kq_write", a5, a6, a7, a8, 2u);
  sub_1000073F8();
}

void sub_10004466C(uint64_t *a1, uint64_t a2, os_log_t log)
{
  uint64_t v3;
  int v4;
  const char *v5;
  __int16 v6;
  uint64_t v7;
  __int16 v8;
  uint64_t v9;

  v3 = *a1;
  v4 = 136315650;
  v5 = "pcie_skywalk_get_hci_event";
  v6 = 2048;
  v7 = a2;
  v8 = 2048;
  v9 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "%s: read failed: requested %zu, received %zu", (uint8_t *)&v4, 0x20u);
  sub_100007494();
}

void sub_100044700()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "invalid input, ch_data null", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_10004472C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100007488();
  sub_100007438((void *)&_mh_execute_header, v0, v1, "INIT failed!!! for the platform- aci_platform=%d\n", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_10004478C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100007488();
  sub_100007438((void *)&_mh_execute_header, v0, v1, "No init script for the platform- aci_platform=%d\n", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_1000447EC()
{
  os_log_t v0;
  uint8_t v1[16];

  sub_10000742C();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "CC0 set successfully", v1, 2u);
  sub_100007400();
}

void sub_100044824()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "Unable to set country code", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100044850()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "Power tables download failed!!!", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_10004487C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "aci_download_power_tables: FAILED to send Raw Bytes to Device IO", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_1000448A8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "aci_download_power_tables: Command result code was hosed!", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_1000448D4(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100007438((void *)&_mh_execute_header, a2, a3, "aci_download_power_tables: No HCI command at first byte-0x01, first byte=0x%x", a5, a6, a7, a8, 0);
  sub_100007400();
}

void sub_10004493C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "Failed to find platform specific Regulatory Data", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100044968()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100007488();
  sub_100007438((void *)&_mh_execute_header, v0, v1, "BOOT failed!!! for the platform- aci_platform=%d\n", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_1000449C8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100007488();
  sub_100007438((void *)&_mh_execute_header, v0, v1, "No boot script for the platform- aci_platform=%d\n", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100044A28(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000073E8((void *)&_mh_execute_header, a1, a3, "Unable to open file path=%s", a5, a6, a7, a8, 2u);
  sub_1000073F8();
}

uint64_t sub_100044A98(unsigned __int16 *a1, unsigned __int8 a2, os_log_t log)
{
  int v3;
  _DWORD v5[2];
  __int16 v6;
  int v7;

  v3 = *a1;
  v5[0] = 67109376;
  v5[1] = v3;
  v6 = 1024;
  v7 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "manufacturer = %d, aci_platform=%d", (uint8_t *)v5, 0xEu);
  if (qword_1004E2420 == -1)
    return 1;
  dispatch_once(&qword_1004E2420, &stru_1004D9FD0);
  return 0;
}

void sub_100044B58()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "FAILED", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100044B84()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000CE34();
  sub_1000073E8((void *)&_mh_execute_header, v0, v1, "Unable to load HCD, file path=%s", v2, v3, v4, v5, v6);
  sub_1000073F8();
}

void sub_100044BE4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000CE34();
  sub_1000073E8((void *)&_mh_execute_header, v0, v1, "Unable to send BDADDR: %zd", v2, v3, v4, v5, v6);
  sub_1000073F8();
}

void sub_100044C44()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "Failed to retrieve address from devicetree.", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100044C70(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100007438((void *)&_mh_execute_header, a1, a3, "Unable to send local name: %d", a5, a6, a7, a8, 0);
  sub_100007400();
}

void sub_100044CDC()
{
  os_log_t v0;
  uint8_t v1[24];

  sub_10000CE34();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "Using host name: %s", v1, 0xCu);
  sub_1000073F8();
}

void sub_100044D48()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "EVNT: Empty", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100044D74(const char *a1, NSObject *a2)
{
  uint8_t v3[24];

  strlen(a1);
  sub_10000CE34();
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "strlen(bdaddr_s) = %lu", v3, 0xCu);
}

void sub_100044DF8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000CE34();
  sub_1000073E8((void *)&_mh_execute_header, v0, v1, "Unable to send command: %zd", v2, v3, v4, v5, v6);
  sub_1000073F8();
}

void sub_100044E58()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "FAILED to send Raw Bytes to Device IO", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100044E84()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "Command result code was hosed!", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100044EB0(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100007438((void *)&_mh_execute_header, a2, a3, "No HCI command at first byte-0x01, first byte=0x%x", a5, a6, a7, a8, 0);
  sub_100007400();
}

void sub_100044F18()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000CE34();
  sub_1000073E8((void *)&_mh_execute_header, v0, v1, "Can't read HCI command header 4 bytes, from HCD file!!! result=%zd", v2, v3, v4, v5, v6);
  sub_1000073F8();
}

void sub_100044F78()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "Packet read FAILED", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100044FA4()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];

  sub_10000CE34();
  sub_100014CE0((void *)&_mh_execute_header, v0, v1, "Using non-default firmware %s", v2);
  sub_1000073F8();
}

void sub_100045008()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "Can't find LPM firmware on this platform", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100045034()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];

  sub_10000CE34();
  sub_100014CE0((void *)&_mh_execute_header, v0, v1, "Using non-default LPM firmware %s", v2);
  sub_1000073F8();
}

void sub_100045098()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100014D48();
  sub_100007438((void *)&_mh_execute_header, v0, v1, "RSSI Sweep failed! Error code %02X", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_1000450FC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "Error in sending regulatory data", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100045128()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "On J52 FrankenStein setups: IGNORE PTB loading error", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100045154()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "Unable to get regulatory data", v2, v3, v4, v5, v6);
  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004DB670);
  sub_100007400();
}

void sub_1000451B4()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];

  sub_10000CE34();
  sub_100014CE0((void *)&_mh_execute_header, v0, v1, "Unable to send BDADDR: %zd", v2);
  sub_1000073F8();
}

void sub_100045218()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];

  sub_10000CE34();
  sub_100014CE0((void *)&_mh_execute_header, v0, v1, "unable to send BDADDR: %zd\n", v2);
  sub_1000073F8();
}

void sub_10004527C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000CE34();
  sub_100014D38((void *)&_mh_execute_header, v0, v1, "Using host name: %s", v2, v3, v4, v5, v6);
  sub_1000073F8();
}

void sub_1000452DC()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];

  sub_10000CE34();
  sub_100014CE0((void *)&_mh_execute_header, v0, v1, "Unable to send command: %zd", v2);
  sub_1000073F8();
}

void sub_100045340()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "Unable to send sleep enable command\n", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_10004536C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "Unable to load HCD file", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100045398()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "Device io is not opened, please check if device used to communicate over is set.", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_1000453C4(uint8_t *a1, char a2, const char **a3, NSObject *a4)
{
  const char *v4;

  if (a2 == 5)
    v4 = "Wrong MSF version";
  else
    v4 = (const char *)&unk_1004C69E6;
  *(_DWORD *)a1 = 136315138;
  *a3 = v4;
  sub_100014CE0((void *)&_mh_execute_header, a4, (uint64_t)a3, "CRC error in Cal data %s", a1);
}

void sub_100045420(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100007438((void *)&_mh_execute_header, a1, a3, "Error in SW calibration : %d", a5, a6, a7, a8, 0);
  sub_100007400();
}

void sub_10004548C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "Invalid TX calibration data size.", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_1000454B8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100014D48();
  sub_100007438((void *)&_mh_execute_header, v0, v1, "Invalid calibration data size for 4355B3 : 0x%x", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_10004551C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "Invalid RX calibration data size.", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100045548(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100007438((void *)&_mh_execute_header, a2, a3, "No cal data found, move along: %d", a5, a6, a7, a8, 0);
  sub_100007400();
}

void sub_1000455AC(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100007438((void *)&_mh_execute_header, a2, a3, "No cal data for beamforming, error: %d", a5, a6, a7, a8, 0);
  sub_100007400();
}

void sub_100045610(CFErrorRef *a1, NSObject *a2)
{
  uint64_t v3;
  uint8_t v4[24];

  CFErrorGetCode(*a1);
  sub_10000CE34();
  sub_100014CE0((void *)&_mh_execute_header, a2, v3, "Loading FDR data got error %ld\n", v4);
}

void sub_100045690(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100007438((void *)&_mh_execute_header, a2, a3, "No cal data, error: %d", a5, a6, a7, a8, 0);
  sub_100007400();
}

void sub_1000456F4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000CE34();
  sub_100014D38((void *)&_mh_execute_header, v0, v1, "Chipset is %s", v2, v3, v4, v5, v6);
  sub_1000073F8();
}

void sub_100045754()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "updateFirmwareInSerialFlash() only works for USB or UART Mac systems", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100045780()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[16];

  sub_10000742C();
  sub_100014D1C((void *)&_mh_execute_header, v0, v1, "updateFirmwareInSerialFlash()", v2);
  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004DB030);
  sub_100007400();
}

void sub_1000457E4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "*** Command failed!", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100045810()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "Command result code was hosed!", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_10004583C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "Bad response from launch anouncement", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100045868()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "Didn't receive enough data", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100045894()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "Unable to setup device for config", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_1000458C0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "HCD file corrupt!", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_1000458EC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "Packet read FAILED", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100045918(NSObject *a1)
{
  uint64_t v2;
  uint8_t v3[8];

  __error();
  sub_100014D48();
  sub_100014CD4((void *)&_mh_execute_header, a1, v2, "HCI command is messed up: %d", v3);
  sub_1000073F8();
}

void sub_100045994()
{
  uint64_t v0;
  os_log_t v1;
  const char *v2;
  int v3;
  int v4;

  LODWORD(v2) = 136315650;
  sub_100014CEC();
  sub_100014D08((void *)&_mh_execute_header, v0, v1, "%s: expected: %d, returned: %d\n", v2, v3, v4);
  sub_1000073F8();
}

void sub_100045A00()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "EVNT: Empty", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100045A2C()
{
  uint64_t v0;
  os_log_t v1;
  const char *v2;
  int v3;
  int v4;

  LODWORD(v2) = 136315650;
  sub_100014CEC();
  sub_100014D08((void *)&_mh_execute_header, v0, v1, "%s: expected: %d, returned: %d\n", v2, v3, v4);
  sub_1000073F8();
}

void sub_100045A98(_BYTE *a1, _BYTE *a2)
{
  NSObject *v2;
  uint8_t *v3;

  sub_100014D28(a1, a2);
  sub_100014D1C((void *)&_mh_execute_header, v2, (uint64_t)v2, "Capping pad value to 150 for Temp compensation", v3);
}

void sub_100045AC4(_BYTE *a1, _BYTE *a2)
{
  NSObject *v2;
  uint8_t *v3;

  sub_100014D28(a1, a2);
  sub_100014CC8((void *)&_mh_execute_header, v2, (uint64_t)v2, "This should NEVER happen. Something went horribly wrong", v3);
}

void sub_100045AF0()
{
  os_log_t v0;
  uint8_t v1[8];

  sub_100014D48();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "Updated calibration offset index : %d", v1, 8u);
  if (qword_1004E2420 != -1)
    dispatch_once(&qword_1004E2420, &stru_1004DB4F0);
  sub_100007400();
}

void sub_100045B94()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[16];

  sub_10000742C();
  sub_100014D1C((void *)&_mh_execute_header, v0, v1, "Msf file with old power range detected. Generate cal data for 13.5dBm", v2);
  sub_100007400();
}

void sub_100045BC4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "Unable to determine firmware file path", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100045BF0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "Unable to open firmware file", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100045C1C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "Unable to get firmware file stats", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100045C48()
{
  uint64_t v0;
  os_log_t v1;
  int v2;
  int v3;

  sub_100019B2C();
  sub_100019B18((void *)&_mh_execute_header, v0, v1, "Firmware read size error: expected: %d, returned: %d", v2, v3);
  sub_1000073F8();
}

void sub_100045CA8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "Firmware file size not valid", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100045CD4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "firmware file checksum mismatch", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100045D00()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "Unable to determine firmware file hash", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100045D2C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "CC_SHA256 failed:", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100045D58()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "SHA comparison failed", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100045D84()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "firemware file missing", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100045DB0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000CE34();
  sub_1000073E8((void *)&_mh_execute_header, v0, v1, "Using alternate script %s", v2, v3, v4, v5, v6);
  sub_1000073F8();
}

void sub_100045E10()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000CE34();
  sub_100014D38((void *)&_mh_execute_header, v0, v1, "Regulatory data added for %s", v2, v3, v4, v5, v6);
  sub_1000073F8();
}

void sub_100045E70()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000CE34();
  sub_1000073E8((void *)&_mh_execute_header, v0, v1, "Regulatory data for %s does not exist", v2, v3, v4, v5, v6);
  sub_1000073F8();
}

void sub_100045ED0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "Firmware not found", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100045EFC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "Critical: No ptb File wild card found. Unable to determine regulatory file path", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100045F28()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "Unable to determine regulatory PTB file path", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100045F54()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "Unable to open regulatory file", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100045F80()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "Unable to get regulatory file stats", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100045FAC(uint64_t a1, int a2, os_log_t log)
{
  _DWORD v3[2];
  __int16 v4;
  uint64_t v5;

  v3[0] = 68157954;
  v3[1] = a2;
  v4 = 2096;
  v5 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Raw regulatory data loaded: %.*P", (uint8_t *)v3, 0x12u);
  sub_1000073F8();
}

void sub_10004602C()
{
  uint64_t v0;
  os_log_t v1;
  int v2;
  int v3;

  sub_100019B2C();
  sub_100019B18((void *)&_mh_execute_header, v0, v1, "Regulatory file read size error: expected: %d, returned: %d", v2, v3);
  sub_1000073F8();
}

void sub_10004608C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "Regulatory file size not valid", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_1000460B8(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000073E8((void *)&_mh_execute_header, a1, a3, "Loaded default non-SKU PTB file: %s (memory corruption on SKU?)", a5, a6, a7, a8, 2u);
  sub_1000073F8();
}

void sub_100046128(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000073E8((void *)&_mh_execute_header, a1, a3, "Critical: Unable to find default (SKU=NULL) PTB file at %s", a5, a6, a7, a8, 2u);
  sub_1000073F8();
}

void sub_100046198(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000073E8((void *)&_mh_execute_header, a1, a3, "Critical: Unable to find default (non-SKU) PTB file at %s", a5, a6, a7, a8, 2u);
  sub_1000073F8();
}

void sub_100046208()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000CE34();
  sub_100014D38((void *)&_mh_execute_header, v0, v1, "Trying to find PTB file for %s\n", v2, v3, v4, v5, v6);
  sub_1000073F8();
}

void sub_100046268(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000073D8((void *)&_mh_execute_header, a1, a3, "Failed to alloc output Str", a5, a6, a7, a8, 0);
}

void sub_10004629C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000073D8((void *)&_mh_execute_header, a1, a3, "HCI Reset failed, got unexpected data:", a5, a6, a7, a8, 0);
}

void sub_1000462D0(uint64_t *a1, uint64_t a2, os_log_t log)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  __int16 v6;
  uint64_t v7;

  v3 = *a1;
  v4 = 134218240;
  v5 = v3;
  v6 = 2048;
  v7 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "applebt_io_get_hci_event: retlen %ld is bigger then maxsize %ld, triming...\n", (uint8_t *)&v4, 0x16u);
}

void sub_100046358(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100007438((void *)&_mh_execute_header, a2, a3, "applebt_io_get_hci_event: num_items mismatch, expected 1 received %d\n", a5, a6, a7, a8, 0);
}

void sub_1000463C4(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100007438((void *)&_mh_execute_header, a2, a3, "applebt_io_get_hci_event: resetting next seq_num to %d\n", a5, a6, a7, a8, 0);
}

uint64_t sub_100046434(unsigned __int8 *a1, NSObject *a2)
{
  int v2;
  _DWORD v4[2];
  __int16 v5;
  int v6;
  __int16 v7;
  int v8;

  v2 = *a1;
  v4[0] = 67109632;
  v4[1] = 5;
  v5 = 1024;
  v6 = byte_1004E1EF2 - 1;
  v7 = 1024;
  v8 = v2;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "applebt_io_get_hci_event: seq_num[pipe=%d] mismatch, expected %d received %d\n", (uint8_t *)v4, 0x14u);
  if (qword_1004E2420 == -1)
    return 1;
  dispatch_once(&qword_1004E2420, &stru_1004DC250);
  return 0;
}

void sub_100046504()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100007488();
  sub_100007438((void *)&_mh_execute_header, v0, v1, "applebt_mgmt_connect: IOServiceOpen returned 0x%08X\n", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100046564()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100007488();
  sub_100007438((void *)&_mh_execute_header, v0, v1, "applebt_power_on: IOConnectCallMethod returned 0x%08X\n", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_1000465C4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100007488();
  sub_100007438((void *)&_mh_execute_header, v0, v1, "applebt_power_on: applebt_mgmt_connect returned 0x%08X\n", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100046624()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100007488();
  sub_100007438((void *)&_mh_execute_header, v0, v1, "applebt_power_off: IOConnectCallMethod returned 0x%08X\n", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100046684()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100007488();
  sub_100007438((void *)&_mh_execute_header, v0, v1, "applebt_power_off: applebt_mgmt_connect returned 0x%08X\n", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_1000466E4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100007488();
  sub_100007438((void *)&_mh_execute_header, v0, v1, "applebt_power_sleep: IOConnectCallMethod returned 0x%08X\n", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100046744()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100007488();
  sub_100007438((void *)&_mh_execute_header, v0, v1, "applebt_power_sleep: applebt_mgmt_connect returned 0x%08X\n", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_1000467A4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100007488();
  sub_100007438((void *)&_mh_execute_header, v0, v1, "applebt_exit_power_sleep: IOConnectCallMethod returned 0x%08X\n", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100046804()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100007488();
  sub_100007438((void *)&_mh_execute_header, v0, v1, "applebt_exit_power_sleep: applebt_mgmt_connect returned 0x%08X\n", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100046864()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100007488();
  sub_100007438((void *)&_mh_execute_header, v0, v1, "applebt_set_trace_mode: IOConnectCallMethod returned 0x%08X\n", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_1000468C4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100007488();
  sub_100007438((void *)&_mh_execute_header, v0, v1, "applebt_set_trace_mode: applebt_mgmt_connect returned 0x%08X\n", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100046924()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100007488();
  sub_100007438((void *)&_mh_execute_header, v0, v1, "applebt_set_trace_level: IOConnectCallMethod returned 0x%08X\n", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100046984()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100007488();
  sub_100007438((void *)&_mh_execute_header, v0, v1, "applebt_set_trace_level: applebt_mgmt_connect returned 0x%08X\n", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_1000469E4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100007488();
  sub_100007438((void *)&_mh_execute_header, v0, v1, "applebt_set_trace_mask: IOConnectCallMethod returned 0x%08X\n", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100046A44()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100007488();
  sub_100007438((void *)&_mh_execute_header, v0, v1, "applebt_set_trace_mask: applebt_mgmt_connect returned 0x%08X\n", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100046AA4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100007488();
  sub_100007438((void *)&_mh_execute_header, v0, v1, "applebt_set_capture_timeout: IOConnectCallMethod returned 0x%08X\n", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100046B04()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100007488();
  sub_100007438((void *)&_mh_execute_header, v0, v1, "applebt_set_capture_timeout: applebt_mgmt_connect returned 0x%08X\n", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100046B64()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100007488();
  sub_100007438((void *)&_mh_execute_header, v0, v1, "applebt_trigger_capture: IOConnectCallMethod returned 0x%08X\n", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100046BC4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100007488();
  sub_100007438((void *)&_mh_execute_header, v0, v1, "applebt_trigger_capture: applebt_mgmt_connect returned 0x%08X\n", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100046C24()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100007488();
  sub_100007438((void *)&_mh_execute_header, v0, v1, "applebt_general_debug: IOConnectCallMethod returned 0x%08X\n", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100046C84()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100007488();
  sub_100007438((void *)&_mh_execute_header, v0, v1, "applebt_general_debug: applebt_mgmt_connect returned 0x%08X\n", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100046CE4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100007488();
  sub_100007438((void *)&_mh_execute_header, v0, v1, "applebt_read_crash_info: IOConnectCallMethod returned 0x%08X\n", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100046D44()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100007488();
  sub_100007438((void *)&_mh_execute_header, v0, v1, "applebt_read_crash_info: applebt_mgmt_connect returned 0x%08X\n", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100046DA4()
{
  int *v0;
  void *v1;
  os_log_t v2;
  os_log_type_t v3;
  const char *v4;
  uint8_t *v5;

  v0 = sub_10001FB04();
  sub_10001FB1C(v0);
  sub_10001FB0C();
  _os_log_error_impl(v1, v2, v3, v4, v5, 0xCu);
  sub_10001FACC();
}

void sub_100046E1C()
{
  int *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint8_t v7;

  v0 = sub_10001FB04();
  sub_10001FB1C(v0);
  sub_10001FAEC();
  sub_10001FAD8((void *)&_mh_execute_header, v1, v2, "connect(%s) failed (error = %s)", v3, v4, v5, v6, v7);
  sub_10001FACC();
}

void sub_100046E8C()
{
  int *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint8_t v7;

  v0 = sub_10001FB04();
  sub_10001FB1C(v0);
  sub_10001FAEC();
  sub_10001FAD8((void *)&_mh_execute_header, v1, v2, "ioctl(CTLIOCGINFO, %s) failed (error = %s)", v3, v4, v5, v6, v7);
  sub_10001FACC();
}

void sub_100046EFC()
{
  void *v0;
  os_log_t v1;
  os_log_type_t v2;
  const char *v3;
  uint8_t *v4;

  sub_10001FB04();
  sub_10001FB0C();
  _os_log_error_impl(v0, v1, v2, v3, v4, 0x18u);
}

void sub_100046FA0()
{
  void *v0;
  os_log_t v1;
  os_log_type_t v2;
  const char *v3;
  uint8_t *v4;

  __error();
  sub_10001FB0C();
  _os_log_error_impl(v0, v1, v2, v3, v4, 8u);
}

void sub_100047024()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint8_t v7;

  sub_100020F14();
  sub_100020F0C(v0);
  sub_100020EF4();
  sub_100020EE0((void *)&_mh_execute_header, v1, v2, "applebt_hci_open: IOConnectCallMethod returned (0x%08X, %s)\n", v3, v4, v5, v6, v7);
  sub_10001FACC();
}

void sub_10004708C(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100007438((void *)&_mh_execute_header, a2, a3, "applebt_hci_open: applebt_hci_connect returned 0x%08X\n", a5, a6, a7, a8, 0);
  sub_100007400();
}

void sub_1000470F0(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100007438((void *)&_mh_execute_header, a2, a3, "applebt_hci_connect: IOServiceOpen returned 0x%08X\n", a5, a6, a7, a8, 0);
  sub_100007400();
}

void sub_100047154(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100007438((void *)&_mh_execute_header, a2, a3, "applebt_hci_connect: IOServiceAddMatchingNotification returned 0x%08X\n", a5, a6, a7, a8, 0);
  sub_100007400();
}

void sub_1000471B8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint8_t v7;

  sub_100020F14();
  sub_100020F0C(v0);
  sub_100020EF4();
  sub_100020EE0((void *)&_mh_execute_header, v1, v2, "applebt_hci_close: IOConnectCallMethod returned (0x%08X, %s), closing connection\n", v3, v4, v5, v6, v7);
  sub_10001FACC();
}

void sub_100047220()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "applebt_hci_close: Not opened\n", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_10004724C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint8_t v7;

  sub_100020F14();
  sub_100020F0C(v0);
  sub_100020EF4();
  sub_100020EE0((void *)&_mh_execute_header, v1, v2, "applebt_hci_transport_reset: IOConnectCallMethod returned (0x%08X, %s)\n", v3, v4, v5, v6, v7);
  sub_10001FACC();
}

void sub_1000472B4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "applebt_hci_transport_reset: Not opened\n", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_1000472E0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint8_t v7;

  sub_100020F14();
  sub_100020F0C(v0);
  sub_100020EF4();
  sub_100020EE0((void *)&_mh_execute_header, v1, v2, "applebt_hci_write: IOConnectCallMethod returned (0x%08X, %s)\n", v3, v4, v5, v6, v7);
  sub_10001FACC();
}

void sub_100047348()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "applebt_hci_write: Not opened\n", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100047374()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint8_t v7;

  sub_100020F14();
  sub_100020F0C(v0);
  sub_100020EF4();
  sub_100020EE0((void *)&_mh_execute_header, v1, v2, "applebt_hci_read: IOConnectCallMethod returned (0x%08X, %s)\n", v3, v4, v5, v6, v7);
  sub_10001FACC();
}

void sub_1000473DC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "applebt_hci_read: Not opened\n", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100047408()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "applebt_hci_pipes_info: service not opened\n", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100047434(int *a1, NSObject *a2)
{
  int v2;
  _DWORD v3[2];

  v2 = *a1;
  v3[0] = 67109120;
  v3[1] = v2;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "DeviceTree speed = %d", (uint8_t *)v3, 8u);
}

void sub_1000474AC(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 134217984;
  v3 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "transport override from boot-arg is invalid: %llu", (uint8_t *)&v2, 0xCu);
}

void sub_100047520(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "usage: power [on|off]", v1, 2u);
  sub_100007400();
}

void sub_10004755C(NSObject *a1)
{
  int v2;
  uint64_t v3;
  _DWORD v4[2];

  v2 = *sub_10004005C();
  v4[0] = 67109120;
  v4[1] = v2;
  sub_100014CD4((void *)&_mh_execute_header, a1, v3, "bluetool: wake failed: error %d", (uint8_t *)v4);
  sub_100040050();
}

void sub_1000475D4(os_log_t log)
{
  int v1;
  const char *v2;

  v1 = 136315138;
  v2 = "bluetool_wake_off";
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "PCIE transport and return direclty without wake_off from %s", (uint8_t *)&v1, 0xCu);
}

void sub_100047654(NSObject *a1)
{
  int v2;
  uint64_t v3;
  _DWORD v4[2];

  v2 = *sub_10004005C();
  v4[0] = 67109120;
  v4[1] = v2;
  sub_100014CD4((void *)&_mh_execute_header, a1, v3, "bluetool: reset failed: error %d", (uint8_t *)v4);
  sub_100040050();
}

void sub_1000476CC(int a1, NSObject *a2, uint64_t a3)
{
  _DWORD v3[2];

  v3[0] = 67109120;
  v3[1] = a1;
  sub_100014CD4((void *)&_mh_execute_header, a2, a3, "bluetool: power on failed: error 0x%08X", (uint8_t *)v3);
  sub_100007400();
}

void sub_100047734(int a1, NSObject *a2, uint64_t a3)
{
  _DWORD v3[2];

  v3[0] = 67109120;
  v3[1] = a1;
  sub_100014CD4((void *)&_mh_execute_header, a2, a3, "bluetool: power off failed: error 0x%08X", (uint8_t *)v3);
  sub_100007400();
}

void sub_10004779C(NSObject *a1)
{
  int v2;
  uint64_t v3;
  _DWORD v4[2];

  v2 = *sub_10004005C();
  v4[0] = 67109120;
  v4[1] = v2;
  sub_100014CD4((void *)&_mh_execute_header, a1, v3, "bluetool: reg on failed: error %d", (uint8_t *)v4);
  sub_100040050();
}

void sub_100047814()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "SKU could not be determined", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100047840()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "Failed to create matching dictionary\n", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_10004786C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "Failed to generate pcieChipset string from HWIdentifiers property\n", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100047898(uint64_t *a1, uint64_t a2, os_log_t log)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  __int16 v6;
  uint64_t v7;

  v3 = *a1;
  v4 = 134218242;
  v5 = v3;
  v6 = 2080;
  v7 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Failed to get information to generate pcieChipset string from HWIdentifiers property chipset=%llu stepping=%s\n", (uint8_t *)&v4, 0x16u);
}

void sub_100047920()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "Failed to get stepping from HWIdentifiers property\n", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_10004794C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "Failed to get chipset from HWIdentifiers property\n", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100047978()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];

  sub_10000CE34();
  sub_100014CE0((void *)&_mh_execute_header, v0, v1, "XPC server error: %s", v2);
  sub_1000073F8();
}

void sub_1000479DC()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];

  sub_10000CE34();
  sub_100014CE0((void *)&_mh_execute_header, v0, v1, "Unexpected XPC server event: %s", v2);
  sub_1000073F8();
}

void sub_100047A40()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "Could not find script param", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100047A6C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_10004365C((void *)&_mh_execute_header, v0, v1, "Failed to get the string.", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100047A98()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_10004365C((void *)&_mh_execute_header, v0, v1, "Param is not a string", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100047AC4()
{
  int v0;
  os_log_t v1;
  uint8_t v2[12];
  __int16 v3;
  int v4;

  sub_10000CE34();
  v3 = 1024;
  v4 = v0;
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "%s script failed %u times in a row. pending power cycle of entire wifi/BT chip...", v2, 0x12u);
  sub_1000073F8();
}

void sub_100047B40()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];

  sub_10000CE34();
  sub_100014CE0((void *)&_mh_execute_header, v0, v1, "%s script pcie powercycle failed", v2);
  sub_1000073F8();
}

void sub_100047BA4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_1000073D8((void *)&_mh_execute_header, v0, v1, "Could not find btaddress param", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100047BD0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10000742C();
  sub_10004365C((void *)&_mh_execute_header, v0, v1, "btaddress param is not a string", v2, v3, v4, v5, v6);
  sub_100007400();
}

void sub_100047BFC(uint8_t *buf, _BYTE *a2, os_log_t log)
{
  *buf = 0;
  *a2 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Failed to alloc output.", buf, 2u);
}

void sub_100047C38(void *a1, NSObject *a2)
{
  uint64_t v3;
  uint8_t v4[24];

  xpc_dictionary_get_string(a1, _xpc_error_key_description);
  sub_10000CE34();
  sub_100014CE0((void *)&_mh_execute_header, a2, v3, "XPC connection error: %s", v4);
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "UTF8String");
}

id objc_msgSend_appendFormat_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "appendFormat:");
}

id objc_msgSend_bytes(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bytes");
}

id objc_msgSend_cStringUsingEncoding_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cStringUsingEncoding:");
}

id objc_msgSend_componentsSeparatedByString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "componentsSeparatedByString:");
}

id objc_msgSend_contentsOfDirectoryAtPath_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentsOfDirectoryAtPath:error:");
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "count");
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_dataWithContentsOfFile_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dataWithContentsOfFile:");
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "defaultManager");
}

id objc_msgSend_fileExistsAtPath_isDirectory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fileExistsAtPath:isDirectory:");
}

id objc_msgSend_filteredArrayUsingPredicate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "filteredArrayUsingPredicate:");
}

id objc_msgSend_initWithBytes_length_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithBytes:length:");
}

id objc_msgSend_initWithUTF8String_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithUTF8String:");
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "intValue");
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "length");
}

id objc_msgSend_objectAtIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "objectAtIndex:");
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "objectForKey:");
}

id objc_msgSend_predicateWithFormat_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "predicateWithFormat:");
}

id objc_msgSend_setObject_forKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "setObject:forKey:");
}

id objc_msgSend_stringWithCapacity_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stringWithCapacity:");
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stringWithFormat:");
}

id objc_msgSend_stringWithUTF8String_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "stringWithUTF8String:");
}
