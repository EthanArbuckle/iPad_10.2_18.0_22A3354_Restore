uint64_t sub_100157FCC(int a1, __int16 a2)
{
  uint64_t v2;
  uint64_t result;

  v2 = 0;
  while (*(unsigned __int16 *)(qword_100983B00 + v2) != a1)
  {
    v2 += 184;
    if (v2 == 1472)
      return 1802;
  }
  result = 0;
  *(_WORD *)(qword_100983B00 + v2 + 86) = a2;
  return result;
}

uint64_t sub_100158014(uint64_t a1, _DWORD *a2)
{
  *a2 = *(unsigned __int16 *)(qword_100983B00 + 1508);
  return 0;
}

uint64_t sub_10015802C(uint64_t a1, BOOL *a2, unsigned int a3)
{
  uint64_t result;
  _BYTE *v4;

  if (a3 < 7)
    return 2701;
  result = 0;
  v4 = (_BYTE *)qword_100983B00;
  *a2 = *(_BYTE *)(qword_100983B00 + 1513) != 0;
  a2[1] = v4[1514] != 0;
  a2[2] = v4[1515];
  a2[3] = v4[1517];
  a2[4] = v4[1518];
  a2[5] = v4[1519] != 0;
  a2[6] = v4[1516];
  return result;
}

uint64_t sub_10015809C(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t result;
  char v5;

  if (a3 < 7)
    return 2701;
  result = 0;
  *(_DWORD *)a2 = 84082945;
  *(_WORD *)(a2 + 4) = 261;
  if ((*(_WORD *)(qword_100983B00 + 1508) & 0xC0) == 0 || (*(_WORD *)(qword_100983B00 + 1508) & 1) == 0)
    v5 = 1;
  else
    v5 = 2;
  *(_BYTE *)(a2 + 6) = v5;
  return result;
}

uint64_t sub_1001580EC(int a1, _WORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  char v5;
  __int16 v6;
  __int16 v7;
  unsigned int v8;

  v2 = 0;
  v3 = qword_100983B00;
  while (*(unsigned __int16 *)(qword_100983B00 + v2) != a1)
  {
    v2 += 184;
    if (v2 == 1472)
      return 1802;
  }
  if ((*(_WORD *)(qword_100983B00 + 1508) & 1) == 0)
    return 2701;
  v5 = *(_BYTE *)(qword_100983B00 + 1510);
  *a2 = v5 & 1;
  if ((*(_WORD *)(v3 + 1508) & 0x80) != 0)
    v6 = 30;
  else
    v6 = 10;
  v7 = v6 & 0xFFFE | v5 & 1;
  *a2 = v7;
  v8 = *(unsigned __int8 *)(v3 + 1510);
  result = 0;
  if ((v8 & 0x18) != 0)
    *a2 = v7 & 0xFF9F | (32 * ((v8 >> 3) & 3));
  return result;
}

uint64_t sub_100158184(uint64_t a1)
{
  uint64_t v1;
  int v2;

  v1 = 0;
  v2 = **(unsigned __int16 **)(a1 + 8);
  while (*(unsigned __int16 *)(qword_100983B00 + v1) != v2)
  {
    v1 += 184;
    if (v1 == 1472)
      return sub_10015BEF4(v2, 1814);
  }
  *(_QWORD *)(qword_100983B00 + v1 + 4) = 1814;
  return sub_10015BEF4(v2, 1814);
}

uint64_t sub_1001581D4(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  NSObject *v8;
  int v9;
  int v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;

  v6 = 0;
  v15 = 0;
  v16 = 0;
  v17 = 0;
  while (*(unsigned __int16 *)(qword_100983B00 + v6) != a1)
  {
    v6 += 184;
    if (v6 == 1472)
      return sub_10015BEF4(a1, 1815);
  }
  if (*(_BYTE *)(qword_100983B00 + v6 + 12))
  {
    if (sub_10005549C())
    {
      sub_100054530("Error %! occurred sending response, disconnecting\n", a3);
      v8 = sub_1000544A0(0x10u);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
        sub_1006CEEC0();
    }
    *(_DWORD *)(qword_100983B00 + v6 + 4) = a3;
    return sub_10015BEF4(a1, a3);
  }
  else
  {
    v9 = *(unsigned __int8 *)(qword_100983B00 + v6 + 168);
    v10 = sub_10005549C();
    if (v9)
    {
      if (v10)
      {
        sub_100054530("Error %! Response\n", a3);
        v11 = sub_1000544A0(0x10u);
        if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
          sub_1006CEEC0();
      }
      v12 = qword_100983B00;
      v13 = *(unsigned int *)(qword_100983B00 + v6 + 172);
      if ((_DWORD)v13)
      {
        sub_100049F6C(v13);
        v12 = qword_100983B00;
        *(_DWORD *)(qword_100983B00 + v6 + 172) = 0;
      }
      *(_BYTE *)(v12 + v6 + 168) = 0;
      LODWORD(v15) = 5;
      WORD2(v15) = a1;
      LODWORD(v16) = a3;
    }
    else
    {
      if (v10)
      {
        sub_100054530("Error %! occurred while sending response, type %d\n", a3, a2);
        v14 = sub_1000544A0(0x10u);
        if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
          sub_1006CEEC0();
      }
      v16 = __PAIR64__(a3, a2);
      WORD2(v15) = a1;
      LODWORD(v15) = 21;
      v12 = qword_100983B00;
    }
    return (*(uint64_t (**)(uint64_t *))(v12 + 1480))(&v15);
  }
}

void sub_1001583BC(int a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  sub_100158484(a1, a2, a4, 1);
}

void sub_1001583C8(int a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  sub_100158484(a1, a2, a4, 0);
}

_QWORD **sub_1001583D4(unsigned int a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD **result;
  _QWORD **v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD **v8;

  v2 = qword_100983B00;
  v3 = qword_100983B00 + 184 * a1;
  v5 = *(_QWORD ***)(v3 + 64);
  result = (_QWORD **)(v3 + 64);
  if (v5 != result)
  {
    do
    {
      v6 = sub_100253D1C(result);
      if (!v6)
        sub_100253460();
      sub_1001581D4(*(unsigned __int16 *)(qword_100983B00 + 184 * a1), *(unsigned int *)(v6 - 24), 122);
      if (*(_BYTE *)(v6 - 6))
        sub_100053298(*(void **)(v6 - 16));
      sub_100053298((void *)(v6 - 24));
      v2 = qword_100983B00;
      v7 = qword_100983B00 + 184 * a1;
      v8 = *(_QWORD ***)(v7 + 64);
      result = (_QWORD **)(v7 + 64);
    }
    while (v8 != result);
  }
  *(_BYTE *)(v2 + 184 * a1 + 56) = 0;
  return result;
}

void sub_100158484(int a1, unsigned __int8 *ptr, uint64_t a3, int a4)
{
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  _QWORD **v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  uint64_t v15;
  NSObject *v16;
  uint8_t v17[4];
  uint64_t v18;

  v8 = 64;
  while (*(unsigned __int16 *)(qword_100983B00 + v8 - 64) != a1)
  {
    v8 += 184;
    if (v8 == 1536)
    {
      if (a4)
        sub_100053298(ptr);
      return;
    }
  }
  if ((_DWORD)a3)
  {
    if (sub_10005549C())
    {
      sub_100054530("Write failed %!\n", a3);
      v9 = sub_1000544A0(0x10u);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        sub_1006CEEC0();
    }
    sub_1001581D4(a1, *(unsigned int *)(qword_100983B00 + v8 - 48), a3);
  }
  else if (*(_DWORD *)(qword_100983B00 + v8 - 48) == 20)
  {
    v10 = 0;
    while (*(unsigned __int16 *)(qword_100983B00 + v10) != a1)
    {
      v10 += 184;
      if (v10 == 1472)
        goto LABEL_19;
    }
    *(_DWORD *)(qword_100983B00 + v10 + 128) = ptr[9] != 48;
  }
LABEL_19:
  if (a4)
    sub_100053298(ptr);
  *(_DWORD *)(qword_100983B00 + v8 - 48) = 0;
  do
  {
    v11 = (_QWORD **)(qword_100983B00 + v8);
    if (v11 == *v11)
      break;
    v12 = sub_100253D1C(v11);
    if (!v12)
      sub_100253460();
    v14 = *(_DWORD *)(v12 - 24);
    v13 = (unsigned int *)(v12 - 24);
    v15 = sub_1001553F4(*(unsigned __int16 *)(qword_100983B00 + v8 - 64), v14, *((_QWORD *)v13 + 1), *((unsigned __int16 *)v13 + 8), *((unsigned __int8 *)v13 + 18));
    if ((_DWORD)v15)
    {
      if (sub_10005549C())
      {
        sub_100054530("SendResponse failed from SendNext %!, type %d\n", v15, *v13);
        v16 = sub_1000544A0(0x10u);
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
          sub_1006CEDF0(v17, &v18, v16);
      }
      sub_1001581D4(*(unsigned __int16 *)(qword_100983B00 + v8 - 64), *v13, v15);
    }
    if (*(_BYTE *)(qword_100983B00 + v8 - 8))
      --*(_BYTE *)(qword_100983B00 + v8 - 8);
    sub_100053298(v13);
  }
  while ((_DWORD)v15);
}

void sub_100158710(unsigned int a1, int a2)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v9 = 0;
  v10 = 0;
  v11 = 0;
  v3 = qword_100983B00;
  v5 = *(unsigned int *)(qword_100983B00 + 184 * a1 + 172);
  if ((_DWORD)v5)
  {
    sub_100049F6C(v5);
    v3 = qword_100983B00;
    *(_DWORD *)(qword_100983B00 + 184 * a1 + 172) = 0;
  }
  v6 = v3 + 184 * a1;
  v8 = *(unsigned __int8 *)(v6 + 168);
  v7 = (_BYTE *)(v6 + 168);
  if (v8)
  {
    *v7 = 0;
    LODWORD(v9) = 5;
    WORD2(v9) = *(_WORD *)(v3 + 184 * a1);
    LODWORD(v10) = a2;
    (*(void (**)(uint64_t *))(v3 + 1480))(&v9);
  }
}

uint64_t sub_1001587B0(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  uint64_t (**i)();
  uint64_t (*v8)(uint64_t, uint64_t);
  int v9;

  v1 = result;
  v2 = 0;
  v3 = qword_100983B00;
  while (*(_QWORD *)(qword_100983B00 + 184 * v2 + 104) != *(_QWORD *)(*(_QWORD *)(result + 32) + 8))
  {
    if (++v2 == 8)
      return result;
  }
  v4 = *(unsigned __int16 *)(qword_100983B00 + 184 * v2);
  v5 = *(const char **)(result + 8);
  if (!v5)
    goto LABEL_18;
  v6 = 0;
  for (i = &off_10091C478; strcmp((const char *)*(i - 1), v5); i += 3)
  {
    if (++v6 == 31)
    {
      if ((!*(_BYTE *)(v3 + 184 * v2 + 12) || *(_BYTE *)(v3 + 1511))
        && (v8 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 1488)) != 0)
      {
        return v8(v4, v1);
      }
      else
      {
        return sub_1001557E4(v4, 2701, 0);
      }
    }
  }
  if (*(_BYTE *)(v3 + 184 * v2 + 12) && ((0x7FFFFD59uLL >> v6) & 1) != 0)
  {
    v9 = 2701;
  }
  else
  {
    result = ((uint64_t (*)(uint64_t, uint64_t))*i)(v4, v1);
    if ((_DWORD)result == 412)
      return result;
    v9 = result;
    if (!(_DWORD)result)
    {
      if (!*(_BYTE *)(qword_100983B00 + 1512))
        return result;
LABEL_18:
      result = sub_1001557E4(v4, 0, 0);
      if ((_DWORD)result)
        return sub_1001581D4(v4, 1, result);
      return result;
    }
  }
  result = sub_100155758(v4, v9);
  if ((_DWORD)result)
    return sub_1001581D4(v4, 2, result);
  return result;
}

uint64_t sub_100158960(unsigned __int16 a1)
{
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  v4 = 0;
  v5 = 0;
  v2 = 8;
  v3 = a1;
  (*(void (**)(int *))(qword_100983B00 + 1480))(&v2);
  return 0;
}

uint64_t sub_1001589A4(unsigned int a1, uint64_t a2)
{
  uint64_t v3;
  unsigned __int8 *v5;
  __int16 v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int16 *v9;
  int v10;
  unsigned __int16 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int16 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char *v25;
  unsigned __int16 v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[2];

  v3 = 0;
  while (*(unsigned __int16 *)(qword_100983B00 + v3) != a1)
  {
    v3 += 184;
    if (v3 == 1472)
      return 1802;
  }
  v5 = sub_100137BEC(a2, (unsigned __int8 **)(a2 + 24), 0);
  if (!v5)
    return 134;
  v6 = sub_100258F90(v5);
  v7 = 0;
  v8 = qword_100983B00;
  *(_WORD *)(qword_100983B00 + v3 + 86) = v6;
  v32[0] = 0;
  v32[1] = 0;
  v9 = (unsigned __int16 *)v8;
  do
  {
    v10 = *v9;
    v9 += 92;
    if (v10 == a1)
      break;
    ++v7;
  }
  while (v7 != 8);
  v11 = *(_WORD *)(v8 + 1508);
  v12 = sub_10025909C((uint64_t)v32, 0x15uLL);
  if ((_DWORD)v12)
  {
    v13 = v12;
LABEL_26:
    v27 = a1;
    v28 = 5;
    v29 = v13;
    goto LABEL_27;
  }
  v14 = 0;
  if ((*(_WORD *)(qword_100983B00 + 184 * v7 + 86) & 0x80) != 0)
    v15 = v11;
  else
    v15 = v11 & 0xFDFF;
  while (*(unsigned __int16 *)(qword_100983B00 + v14) != a1)
  {
    v14 += 184;
    if (v14 == 1472)
    {
      v16 = 0;
      goto LABEL_19;
    }
  }
  v16 = qword_100983B00 + v14 + 80;
LABEL_19:
  v31 = 0;
  sub_100182588(v16, &v31);
  if (v31)
  {
    v23 = sub_100246DE8(v31);
    if (v23)
    {
      if (*((unsigned __int16 *)v23 + 10) < 0x107u)
        v15 &= 0xF3FFu;
    }
  }
  v24 = sub_1002596F4((uint64_t)v32, (uint64_t)"\r\n+BRSF:%d\r\n", v17, v18, v19, v20, v21, v22, v15);
  if ((_DWORD)v24)
  {
    v13 = v24;
    sub_1002590E8((uint64_t)v32);
    goto LABEL_26;
  }
  v25 = (char *)sub_10025971C((uint64_t)v32);
  v26 = strlen(v25);
  v13 = sub_1001553F4(a1, 5, v25, v26, 1);
  if ((_DWORD)v13)
    goto LABEL_26;
  if (*(_BYTE *)(qword_100983B00 + v3 + 12))
  {
    v30 = sub_1001557E4(a1, 0, 0);
    if (!(_DWORD)v30)
      return 412;
    v29 = v30;
    v27 = a1;
    v28 = 1;
LABEL_27:
    sub_1001581D4(v27, v28, v29);
    return 412;
  }
  return 0;
}

uint64_t sub_100158BAC(unsigned int a1, uint64_t a2)
{
  uint64_t v4;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  _DWORD v12[2];
  uint64_t v13;
  uint64_t v14;

  v4 = 0;
  while (*(unsigned __int16 *)(qword_100983B00 + v4) != a1)
  {
    v4 += 184;
    if (v4 == 1472)
      return 1802;
  }
  if ((*(_WORD *)(qword_100983B00 + 1508) & 0x200) == 0 || (*(_WORD *)(qword_100983B00 + v4 + 86) & 0x80) == 0)
    return 2701;
  *(_DWORD *)(qword_100983B00 + v4 + 144) = 0;
  v6 = sub_100137BEC(a2, (unsigned __int8 **)(a2 + 24), 0);
  if (v6)
  {
    v7 = v6;
    while (sub_100258FCC(v7, "1"))
    {
      if (!sub_100258FCC(v7, "2"))
      {
        v8 = 2;
        goto LABEL_26;
      }
      if (!sub_100258FCC(v7, "127"))
      {
        v8 = 4;
        goto LABEL_26;
      }
      if (!sub_100258FCC(v7, "255"))
      {
        v8 = 16;
        goto LABEL_26;
      }
      if (!sub_100258FCC(v7, "256"))
      {
        v8 = 256;
        goto LABEL_26;
      }
      if (!sub_100258FCC(v7, "128"))
      {
        v8 = 128;
        goto LABEL_26;
      }
      if (!sub_100258FCC(v7, "129"))
      {
        v8 = 512;
        goto LABEL_26;
      }
      if (!sub_100258FCC(v7, "130"))
      {
        v8 = 1024;
LABEL_26:
        *(_DWORD *)(qword_100983B00 + v4 + 144) |= v8;
      }
      v7 = sub_100137BEC(a2, (unsigned __int8 **)(a2 + 24), 0);
      if (!v7)
        goto LABEL_28;
    }
    v8 = 1;
    goto LABEL_26;
  }
LABEL_28:
  v9 = qword_100983B00;
  v10 = *(_DWORD *)(qword_100983B00 + v4 + 144) & *(_DWORD *)(qword_100983B00 + 1520);
  if ((v10 & 0x100) != 0)
  {
    *(_QWORD *)(qword_100983B00 + v4 + 88) |= 1uLL;
    if ((v10 & 0x80) == 0)
    {
LABEL_30:
      if ((v10 & 2) == 0)
        goto LABEL_31;
      goto LABEL_43;
    }
  }
  else if ((v10 & 0x80) == 0)
  {
    goto LABEL_30;
  }
  *(_QWORD *)(v9 + v4 + 88) |= 4uLL;
  if ((v10 & 2) == 0)
  {
LABEL_31:
    if ((v10 & 4) == 0)
      goto LABEL_32;
    goto LABEL_44;
  }
LABEL_43:
  *(_QWORD *)(v9 + v4 + 88) |= 2uLL;
  if ((v10 & 4) == 0)
  {
LABEL_32:
    if ((v10 & 0x10) == 0)
      goto LABEL_33;
    goto LABEL_45;
  }
LABEL_44:
  *(_QWORD *)(v9 + v4 + 88) |= 8uLL;
  if ((v10 & 0x10) == 0)
  {
LABEL_33:
    if ((v10 & 0x200) == 0)
      goto LABEL_34;
LABEL_46:
    *(_QWORD *)(v9 + v4 + 88) |= 0x20uLL;
    if ((v10 & 0x400) == 0)
      goto LABEL_36;
    goto LABEL_35;
  }
LABEL_45:
  *(_QWORD *)(v9 + v4 + 88) |= 0x10uLL;
  if ((v10 & 0x200) != 0)
    goto LABEL_46;
LABEL_34:
  if ((v10 & 0x400) != 0)
LABEL_35:
    *(_QWORD *)(v9 + v4 + 88) |= 0x40uLL;
LABEL_36:
  v11 = sub_1001557E4(a1, 0, 0);
  if ((_DWORD)v11)
    sub_1001581D4(a1, 1, v11);
  if (!*(_BYTE *)(qword_100983B00 + v4 + 12))
  {
    v14 = 0;
    v12[0] = 28;
    v12[1] = (unsigned __int16)a1;
    v13 = v10;
    (*(void (**)(_DWORD *))(qword_100983B00 + 1480))(v12);
  }
  return 412;
}

uint64_t sub_100158E94(__int16 a1, uint64_t a2)
{
  unsigned __int8 *v3;
  uint64_t v4;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unsigned __int16 v9;

  v9 = 0;
  v6 = 0;
  v7 = 0;
  v8 = 0;
  v3 = sub_100137BEC(a2, (unsigned __int8 **)(a2 + 24), &v9);
  if (!v3)
    return 134;
  v4 = v9 - 1;
  if (v3[v4] != 59)
    return 134;
  v3[v4] = 0;
  if (*v3 == 62)
  {
    LODWORD(v6) = 11;
    WORD2(v6) = a1;
    LOWORD(v7) = sub_100258F90(v3 + 1);
  }
  else
  {
    LODWORD(v6) = 10;
    WORD2(v6) = a1;
    v7 = v3;
  }
  (*(void (**)(uint64_t *))(qword_100983B00 + 1480))(&v6);
  return 0;
}

uint64_t sub_100158F4C(unsigned __int16 a1, uint64_t a2)
{
  unsigned __int8 *v3;
  int v4;
  char v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  if ((*(_WORD *)(qword_100983B00 + 1508) & 1) == 0)
    return 2701;
  v8 = 0;
  v9 = 0;
  v6 = 20;
  v7 = a1;
  v3 = sub_100137BEC(a2, (unsigned __int8 **)(a2 + 24), 0);
  if (!v3)
    return 134;
  v4 = *v3;
  if (v4 == 48)
  {
    v5 = 0;
    goto LABEL_9;
  }
  if (v4 != 49)
    return 134;
  v5 = 1;
LABEL_9:
  BYTE4(v7) = v5;
  (*(void (**)(int *))(qword_100983B00 + 1480))(&v6);
  return 0;
}

uint64_t sub_100158FF0(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unsigned __int8 *v16;
  int v17;
  char v18;
  char *v19;
  unsigned __int16 v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v3 = a1;
  v4 = 0;
  v27 = 0;
  v28 = 0;
  v29 = 0;
  v26[0] = 0;
  v26[1] = 0;
  while (*(unsigned __int16 *)(qword_100983B00 + v4) != (_DWORD)a1)
  {
    v4 += 184;
    if (v4 == 1472)
      return 1802;
  }
  if (*(_BYTE *)(qword_100983B00 + 1511))
  {
    (*(void (**)(uint64_t, uint64_t))(qword_100983B00 + 1488))(a1, a2);
    if (!*(_DWORD *)a2)
      goto LABEL_9;
    return 412;
  }
  if ((*(_WORD *)(qword_100983B00 + 1508) & 1) == 0)
    return 2701;
  if (*(_DWORD *)a2 == 2)
  {
    LODWORD(v27) = 15;
    WORD2(v27) = a1;
    v16 = sub_100137BEC(a2, (unsigned __int8 **)(a2 + 24), 0);
    if (!v16)
      return 134;
    v17 = sub_100258F90(v16);
    LODWORD(v28) = v17;
    if ((*(_BYTE *)(qword_100983B00 + 1508) & 0x80) != 0 || v17 <= 4)
    {
      (*(void (**)(uint64_t *))(qword_100983B00 + 1480))(&v27);
      return 0;
    }
    return 2701;
  }
  if (*(_DWORD *)a2)
    return 2701;
  v5 = sub_10025909C((uint64_t)v26, 0x1DuLL);
  if ((_DWORD)v5)
    return v5;
  v13 = sub_1002596F4((uint64_t)v26, (uint64_t)"\r\n+CHLD: (", v7, v8, v9, v10, v11, v12, v25);
  if ((_DWORD)v13)
    goto LABEL_24;
  v14 = qword_100983B00;
  if ((*(_BYTE *)(qword_100983B00 + 1510) & 1) != 0)
  {
    v13 = sub_1000729B4((uint64_t)v26, "0,");
    if ((_DWORD)v13)
      goto LABEL_24;
    v14 = qword_100983B00;
  }
  if ((*(_WORD *)(v14 + 1508) & 0x80) != 0)
    v15 = "1,1x,2,2x";
  else
    v15 = "1,2";
  v13 = sub_1000729B4((uint64_t)v26, v15);
  if ((_DWORD)v13)
    goto LABEL_24;
  v18 = *(_BYTE *)(qword_100983B00 + 1510);
  if ((v18 & 8) != 0)
  {
    v13 = sub_1000729B4((uint64_t)v26, ",3");
    if (!(_DWORD)v13)
    {
      v18 = *(_BYTE *)(qword_100983B00 + 1510);
      goto LABEL_34;
    }
LABEL_24:
    v5 = v13;
    sub_1002590E8((uint64_t)v26);
    return v5;
  }
LABEL_34:
  if ((v18 & 0x10) != 0)
  {
    v13 = sub_1000729B4((uint64_t)v26, ",4");
    if ((_DWORD)v13)
      goto LABEL_24;
  }
  v13 = sub_1000729B4((uint64_t)v26, ")\r\n");
  if ((_DWORD)v13)
    goto LABEL_24;
  v19 = (char *)sub_10025971C((uint64_t)v26);
  v20 = strlen(v19);
  v21 = sub_1001553F4(v3, 3, v19, v20, 1);
  if ((_DWORD)v21)
  {
    v22 = v3;
    v23 = 3;
  }
  else
  {
    v24 = sub_1001557E4(v3, 0, v21);
    if (!(_DWORD)v24)
    {
LABEL_9:
      if (*(_BYTE *)(qword_100983B00 + v4 + 12))
        sub_10015B060(v3);
      return 412;
    }
    v21 = v24;
    v22 = v3;
    v23 = 1;
  }
  sub_1001581D4(v22, v23, v21);
  return 412;
}

uint64_t sub_100159254(unsigned __int16 a1)
{
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  v4 = 0;
  v5 = 0;
  v2 = 9;
  v3 = a1;
  (*(void (**)(int *))(qword_100983B00 + 1480))(&v2);
  return 0;
}

uint64_t sub_100159298(uint64_t a1, _DWORD *a2)
{
  unsigned int v2;
  size_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int16 v13;
  char *v15;
  size_t v16;
  int v17;
  const char *v19;
  _QWORD v20[2];

  v2 = a1;
  if (!*(_BYTE *)(qword_100983B00 + 1511))
  {
    v20[0] = 0;
    v20[1] = 0;
    if (*a2)
    {
      if (*a2 != 1)
        return 2701;
      if ((*(_WORD *)(qword_100983B00 + 1508) & 1) != 0)
        v3 = 23;
      else
        v3 = 21;
      v10 = sub_10025909C((uint64_t)v20, v3);
      if ((_DWORD)v10)
        goto LABEL_28;
      if (*(_BYTE *)(qword_100983B00 + 1513))
        v11 = 49;
      else
        v11 = 48;
      if ((*(_WORD *)(qword_100983B00 + 1508) & 1) != 0)
        v12 = sub_1002596F4((uint64_t)v20, (uint64_t)"\r\n+CIND: %c,%c,%d,%d,%d,%c,%d\r\n", v4, v5, v6, v7, v8, v9, v11);
      else
        v12 = sub_1002596F4((uint64_t)v20, (uint64_t)"\r\n+CIND: %c,%c,%d,%d,%d,%c\r\n", v4, v5, v6, v7, v8, v9, v11);
      v10 = v12;
      if ((_DWORD)v12)
      {
        sub_1002590E8((uint64_t)v20);
LABEL_28:
        sub_1001581D4(v2, 4, v10);
        return 412;
      }
      v19 = (const char *)sub_10025971C((uint64_t)v20);
      v16 = (unsigned __int16)strlen(v19);
      LODWORD(a1) = v2;
      v15 = (char *)v19;
      v17 = 1;
    }
    else
    {
      v13 = *(_WORD *)(qword_100983B00 + 1508);
      if ((v13 & 0xC0) == 0 || (v13 & 1) == 0)
        v15 = "\r\n"
              "+CIND: (\"service\",(0-1)),(\"call\",(0-1)),(\"callsetup\",(0-3)),(\"battchg\",(0-5)),(\"signal\",(0-5)),("
              "\"roam\",(0-1)),(\"callheld\",(0-1))\r\n";
      else
        v15 = "\r\n"
              "+CIND: (\"service\",(0-1)),(\"call\",(0-1)),(\"callsetup\",(0-3)),(\"battchg\",(0-5)),(\"signal\",(0-5)),("
              "\"roam\",(0-1)),(\"callheld\",(0-2))\r\n";
      v16 = 132;
      v17 = 0;
    }
    v10 = sub_1001553F4(a1, 4, v15, v16, v17);
    if (!(_DWORD)v10)
    {
      v10 = sub_1001557E4(v2, 0, 0);
      if (!(_DWORD)v10)
        return 412;
    }
    goto LABEL_28;
  }
  (*(void (**)(uint64_t))(qword_100983B00 + 1488))(a1);
  return 412;
}

uint64_t sub_10015944C(unsigned int a1, uint64_t a2)
{
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = sub_100137BEC(a2, (unsigned __int8 **)(a2 + 24), 0);
  if (!v3)
    return 134;
  v4 = v3;
  if ((sub_100155660(a1) & 4) == 0)
    return 2701;
  v6 = *v4;
  if (v6 == 48)
  {
    v8 = 0;
    while (*(unsigned __int16 *)(qword_100983B00 + v8) != a1)
    {
      v8 += 184;
      if (v8 == 1472)
        goto LABEL_17;
    }
    *(_DWORD *)(qword_100983B00 + v8 + 132) = 0;
    goto LABEL_17;
  }
  if (v6 != 49)
    return 134;
  v7 = 0;
  while (*(unsigned __int16 *)(qword_100983B00 + v7) != a1)
  {
    v7 += 184;
    if (v7 == 1472)
      goto LABEL_17;
  }
  *(_DWORD *)(qword_100983B00 + v7 + 132) = 1;
LABEL_17:
  v9 = sub_1001557E4(a1, 0, 0);
  if ((_DWORD)v9)
    sub_1001581D4(a1, 1, v9);
  return 412;
}

uint64_t sub_100159544(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  unsigned __int8 *v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = a1;
  v4 = 0;
  v5 = qword_100983B00;
  while (*(unsigned __int16 *)(qword_100983B00 + v4) != (_DWORD)a1)
  {
    v4 += 184;
    if (v4 == 1472)
      return 1802;
  }
  if (*(_BYTE *)(qword_100983B00 + 1511))
  {
    v7 = 0;
    while (*(unsigned __int16 *)(qword_100983B00 + v7) != (_DWORD)a1)
    {
      v7 += 184;
      if (v7 == 1472)
        goto LABEL_36;
    }
    *(_DWORD *)(qword_100983B00 + v7 + 140) = 2;
LABEL_36:
    (*(void (**)(uint64_t, uint64_t))(v5 + 1488))(a1, a2);
    if (*(_BYTE *)(qword_100983B00 + v4 + 12)
      && ((*(_WORD *)(qword_100983B00 + 1508) & 1) == 0 || (sub_100155660(v3) & 2) == 0))
    {
      sub_10015B060(v3);
    }
    return 412;
  }
  v8 = sub_100137BEC(a2, (unsigned __int8 **)(a2 + 24), 0);
  if (!v8)
  {
LABEL_29:
    if (*(_BYTE *)(qword_100983B00 + v4 + 12)
      && ((*(_WORD *)(qword_100983B00 + 1508) & 1) == 0 || (sub_100155660(v3) & 2) == 0))
    {
      sub_10015B060(v3);
    }
    v13 = sub_1001557E4(v3, 0, 0);
    if ((_DWORD)v13)
      sub_1001581D4(v3, 1, v13);
    return 412;
  }
  v9 = 0;
  while (v9 != 3)
  {
    if (!v9 && *v8 != 51)
      return 134;
LABEL_28:
    ++v9;
    v8 = sub_100137BEC(a2, (unsigned __int8 **)(a2 + 24), 0);
    if (!v8)
      goto LABEL_29;
  }
  v10 = *v8;
  if (v10 == 48)
  {
    v12 = 0;
    while (*(unsigned __int16 *)(qword_100983B00 + v12) != v3)
    {
      v12 += 184;
      if (v12 == 1472)
        goto LABEL_28;
    }
    *(_DWORD *)(qword_100983B00 + v12 + 140) = 0;
    goto LABEL_28;
  }
  if (v10 == 49)
  {
    v11 = 0;
    while (*(unsigned __int16 *)(qword_100983B00 + v11) != v3)
    {
      v11 += 184;
      if (v11 == 1472)
        goto LABEL_28;
    }
    *(_DWORD *)(qword_100983B00 + v11 + 140) = 1;
    goto LABEL_28;
  }
  return 101;
}

uint64_t sub_100159750(__int16 a1, uint64_t a2)
{
  NSObject *v3;
  _QWORD v5[3];

  if (!sub_100137BEC(a2, (unsigned __int8 **)(a2 + 24), 0))
    return 134;
  memset(v5, 0, sizeof(v5));
  if ((*(_BYTE *)(qword_100983B00 + 1508) & 0x10) != 0)
  {
    LODWORD(v5[0]) = 14;
    WORD2(v5[0]) = a1;
    (*(void (**)(_QWORD *))(qword_100983B00 + 1480))(v5);
    return 0;
  }
  else
  {
    if (sub_10005549C())
    {
      sub_100054530("Input request not supported, rejecting %d", *(unsigned __int16 *)(qword_100983B00 + 1508));
      v3 = sub_1000544A0(0x10u);
      if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
        sub_1006CEEC0();
    }
    return 2701;
  }
}

uint64_t sub_10015981C(unsigned __int16 a1)
{
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  v4 = 0;
  v5 = 0;
  v2 = 12;
  v3 = a1;
  (*(void (**)(int *))(qword_100983B00 + 1480))(&v2);
  return 0;
}

uint64_t sub_100159860(__int16 a1, uint64_t a2)
{
  NSObject *v2;
  unsigned __int8 *v4;
  int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = 0;
  v8 = 0;
  v9 = 0;
  if ((*(_BYTE *)(qword_100983B00 + 1508) & 4) != 0)
  {
    LODWORD(v7) = 13;
    WORD2(v7) = a1;
    v4 = sub_100137BEC(a2, (unsigned __int8 **)(a2 + 24), 0);
    if (v4)
    {
      v5 = *v4;
      if (v5 == 49)
      {
        v6 = 1;
        goto LABEL_12;
      }
      if (v5 == 48)
      {
        v6 = 0;
LABEL_12:
        LOBYTE(v8) = v6;
        (*(void (**)(uint64_t *))(qword_100983B00 + 1480))(&v7);
        return 0;
      }
    }
    return 134;
  }
  if (sub_10005549C())
  {
    sub_100054530("Voice recognition not supported, rejecting");
    v2 = sub_1000544A0(0x10u);
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
      sub_1006CEEC0();
  }
  return 2701;
}

uint64_t sub_100159944(__int16 a1, uint64_t a2)
{
  unsigned __int8 *v4;
  _QWORD v5[3];

  if ((*(_WORD *)(qword_100983B00 + 1508) & 2) == 0)
    return 2701;
  v4 = sub_100137BEC(a2, (unsigned __int8 **)(a2 + 24), 0);
  if (!v4)
    return 101;
  memset(v5, 0, sizeof(v5));
  if (*v4 != 48)
    return 101;
  LODWORD(v5[0]) = 16;
  WORD2(v5[0]) = a1;
  (*(void (**)(_QWORD *))(qword_100983B00 + 1480))(v5);
  return 0;
}

uint64_t sub_1001599D4(unsigned int a1, uint64_t a2)
{
  unsigned __int8 *v3;
  int v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (*(_DWORD *)a2)
  {
    v3 = sub_100137BEC(a2, (unsigned __int8 **)(a2 + 24), 0);
    if (v3)
    {
      v7 = 0;
      v8 = 0;
      v9 = 0;
      v4 = *v3;
      if ((v4 - 48) < 0xA || v4 == 35 || v4 == 42 || (v4 - 65) <= 3)
      {
        LODWORD(v7) = 19;
        WORD2(v7) = a1;
        LOBYTE(v8) = v4;
        (*(void (**)(uint64_t *))(qword_100983B00 + 1480))(&v7);
        return 0;
      }
      else
      {
        return 101;
      }
    }
    else
    {
      return 134;
    }
  }
  else
  {
    v6 = sub_1001557E4(a1, 0, 0);
    if ((_DWORD)v6)
      sub_1001581D4(a1, 1, v6);
    return 412;
  }
}

uint64_t sub_100159AB0(unsigned __int16 a1, uint64_t a2)
{
  unsigned __int8 *v2;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;

  v6 = 0;
  v7 = 0;
  v4 = 17;
  v5 = a1;
  v2 = sub_100137BEC(a2, (unsigned __int8 **)(a2 + 24), 0);
  if (!v2)
    return 134;
  BYTE4(v5) = sub_100258F90(v2);
  (*(void (**)(int *))(qword_100983B00 + 1480))(&v4);
  return 0;
}

uint64_t sub_100159B1C(unsigned __int16 a1, uint64_t a2)
{
  unsigned __int8 *v2;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;

  v6 = 0;
  v7 = 0;
  v4 = 18;
  v5 = a1;
  v2 = sub_100137BEC(a2, (unsigned __int8 **)(a2 + 24), 0);
  if (!v2)
    return 134;
  BYTE4(v5) = sub_100258F90(v2);
  (*(void (**)(int *))(qword_100983B00 + 1480))(&v4);
  return 0;
}

uint64_t sub_100159B88(__int16 a1, uint64_t a2)
{
  unsigned __int8 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = 0;
  v6 = 0;
  v7 = 0;
  if (*(_DWORD *)a2 == 2)
  {
    v3 = sub_100137BEC(a2, (unsigned __int8 **)(a2 + 24), 0);
    if (v3)
    {
      LODWORD(v5) = 26;
      WORD2(v5) = a1;
      LODWORD(v6) = sub_100258F90(v3);
      goto LABEL_6;
    }
    return 134;
  }
  else
  {
    if (*(_DWORD *)a2 == 1)
    {
      LODWORD(v5) = 25;
      WORD2(v5) = a1;
LABEL_6:
      (*(void (**)(uint64_t *))(qword_100983B00 + 1480))(&v5);
      return 0;
    }
    return 2701;
  }
}

uint64_t sub_100159C2C(unsigned __int16 a1, _DWORD *a2)
{
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  if (*a2 != 2)
    return 2701;
  v5 = 0;
  v6 = 0;
  v3 = 24;
  v4 = a1;
  (*(void (**)(int *))(qword_100983B00 + 1480))(&v3);
  return 0;
}

uint64_t sub_100159C84(unsigned __int16 a1)
{
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  if ((*(_WORD *)(qword_100983B00 + 1508) & 0x40) == 0)
    return 2701;
  v4 = 0;
  v5 = 0;
  v2 = 22;
  v3 = a1;
  (*(void (**)(int *))(qword_100983B00 + 1480))(&v2);
  return 0;
}

uint64_t sub_100159CD8(unsigned int a1, uint64_t a2)
{
  unsigned __int8 **v5;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;

  if (*(_DWORD *)a2 == 2)
  {
    v5 = (unsigned __int8 **)(a2 + 24);
    v6 = sub_100137BEC(a2, (unsigned __int8 **)(a2 + 24), 0);
    if (v6
      && sub_100258F90(v6) == 3
      && (v7 = sub_100137BEC(a2, v5, 0)) != 0
      && !sub_100258F90(v7))
    {
      v8 = sub_1001557E4(a1, 0, 0);
      if ((_DWORD)v8)
        sub_1001581D4(a1, 1, v8);
      return 412;
    }
    else
    {
      return 134;
    }
  }
  else if (*(_DWORD *)a2 == 1)
  {
    v11 = 0;
    v12 = 0;
    v9 = 23;
    v10 = (unsigned __int16)a1;
    (*(void (**)(int *))(qword_100983B00 + 1480))(&v9);
    return 0;
  }
  else
  {
    return 2701;
  }
}

uint64_t sub_100159DC4(unsigned int a1, uint64_t a2)
{
  uint64_t v3;
  unsigned __int8 *v4;
  int v5;
  uint64_t v6;
  uint64_t v8;

  if ((*(_WORD *)(qword_100983B00 + 1508) & 0x100) != 0)
  {
    v4 = sub_100137BEC(a2, (unsigned __int8 **)(a2 + 24), 0);
    if (!v4)
      return 134;
    v5 = *v4;
    if (v5 == 48)
    {
      v8 = 0;
      while (*(unsigned __int16 *)(qword_100983B00 + v8) != a1)
      {
        v8 += 184;
        if (v8 == 1472)
          goto LABEL_18;
      }
      *(_DWORD *)(qword_100983B00 + v8 + 136) = 0;
    }
    else
    {
      if (v5 != 49)
        return 101;
      v6 = 0;
      while (*(unsigned __int16 *)(qword_100983B00 + v6) != a1)
      {
        v6 += 184;
        if (v6 == 1472)
          goto LABEL_18;
      }
      *(_DWORD *)(qword_100983B00 + v6 + 136) = 1;
    }
LABEL_18:
    v3 = sub_1001557E4(a1, 0, 0);
  }
  else
  {
    v3 = sub_100155758(a1, 2707);
  }
  if ((_DWORD)v3)
    sub_1001581D4(a1, 1, v3);
  return 412;
}

uint64_t sub_100159EC4(unsigned int a1, _DWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unsigned __int16 v17;
  uint64_t v18;
  _QWORD v20[2];

  if (*a2 != 2)
    return 2701;
  v20[0] = 0;
  v20[1] = 0;
  v3 = sub_10025909C((uint64_t)v20, 0x10uLL);
  if (!(_DWORD)v3)
  {
    v11 = sub_1002596F4((uint64_t)v20, (uint64_t)"\r\n+CSQ: %d,%d\r\n", v4, v5, v6, v7, v8, v9, algn_100739887[*(unsigned __int8 *)(qword_100983B00 + 1518)]);
    if ((_DWORD)v11)
    {
      v12 = v11;
      sub_1002590E8((uint64_t)v20);
      v13 = a1;
      v14 = 25;
      v15 = v12;
    }
    else
    {
      v16 = (char *)sub_10025971C((uint64_t)v20);
      v17 = strlen(v16);
      v15 = sub_1001553F4(a1, 25, v16, v17, 1);
      if ((_DWORD)v15)
      {
        v13 = a1;
        v14 = 25;
      }
      else
      {
        v18 = sub_1001557E4(a1, 0, v15);
        if (!(_DWORD)v18)
          return 412;
        v15 = v18;
        v13 = a1;
        v14 = 1;
      }
    }
    sub_1001581D4(v13, v14, v15);
    return 412;
  }
  v10 = v3;
  sub_1001581D4(a1, 25, v3);
  return v10;
}

uint64_t sub_100159FDC(unsigned int a1, _DWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unsigned __int16 v19;
  uint64_t v20;
  _QWORD v22[2];

  if (*a2 != 2)
    return 2701;
  v22[0] = 0;
  v22[1] = 0;
  v3 = sub_10025909C((uint64_t)v22, 0xDuLL);
  if (!(_DWORD)v3)
  {
    if (*(_BYTE *)(qword_100983B00 + 1514))
    {
      v11 = 4;
    }
    else
    {
      v12 = *(unsigned __int8 *)(qword_100983B00 + 1515) - 1;
      if (v12 > 2)
        v11 = 0;
      else
        v11 = dword_100739890[(char)v12];
    }
    v13 = sub_1002596F4((uint64_t)v22, (uint64_t)"\r\n+CPAS: %d\r\n", v4, v5, v6, v7, v8, v9, v11);
    if ((_DWORD)v13)
    {
      v14 = v13;
      sub_1002590E8((uint64_t)v22);
      v15 = a1;
      v16 = 25;
      v17 = v14;
    }
    else
    {
      v18 = (char *)sub_10025971C((uint64_t)v22);
      v19 = strlen(v18);
      v17 = sub_1001553F4(a1, 25, v18, v19, 1);
      if ((_DWORD)v17)
      {
        v15 = a1;
        v16 = 25;
      }
      else
      {
        v20 = sub_1001557E4(a1, 0, v17);
        if (!(_DWORD)v20)
          return 412;
        v17 = v20;
        v15 = a1;
        v16 = 1;
      }
    }
    sub_1001581D4(v15, v16, v17);
    return 412;
  }
  v10 = v3;
  sub_1001581D4(a1, 25, v3);
  return v10;
}

uint64_t sub_10015A118(unsigned int a1, _DWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unsigned __int16 v18;
  uint64_t v19;
  _QWORD v21[2];

  if (*a2 != 1)
    return 2701;
  v21[0] = 0;
  v21[1] = 0;
  v3 = sub_10025909C((uint64_t)v21, 0xFuLL);
  if (!(_DWORD)v3)
  {
    if (*(_BYTE *)(qword_100983B00 + 1513))
    {
      if (*(_BYTE *)(qword_100983B00 + 1519))
        v11 = 5;
      else
        v11 = 1;
    }
    else
    {
      v11 = 0;
    }
    v12 = sub_1002596F4((uint64_t)v21, (uint64_t)"\r\n+CREG: 1,%d\r\n", v4, v5, v6, v7, v8, v9, v11);
    if ((_DWORD)v12)
    {
      v13 = v12;
      sub_1002590E8((uint64_t)v21);
      v14 = a1;
      v15 = 25;
      v16 = v13;
    }
    else
    {
      v17 = (char *)sub_10025971C((uint64_t)v21);
      v18 = strlen(v17);
      v16 = sub_1001553F4(a1, 25, v17, v18, 1);
      if ((_DWORD)v16)
      {
        v14 = a1;
        v15 = 25;
      }
      else
      {
        v19 = sub_1001557E4(a1, 0, v16);
        if (!(_DWORD)v19)
          return 412;
        v16 = v19;
        v14 = a1;
        v15 = 1;
      }
    }
    sub_1001581D4(v14, v15, v16);
    return 412;
  }
  v10 = v3;
  sub_1001581D4(a1, 25, v3);
  return v10;
}

uint64_t sub_10015A23C(int a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = 0;
  while (*(unsigned __int16 *)(qword_100983B00 + v1) != a1)
  {
    v1 += 184;
    if (v1 == 1472)
      return 1802;
  }
  v4 = 0;
  v5 = 0;
  v6 = 0;
  if ((*(_WORD *)(qword_100983B00 + 1508) & 0x200) == 0)
    return 2701;
  v3 = qword_100983B00 + v1;
  if ((*(_WORD *)(v3 + 86) & 0x80) == 0)
    return 2701;
  LODWORD(v4) = 4;
  WORD2(v4) = a1;
  LODWORD(v5) = *(_DWORD *)(v3 + 164);
  (*(void (**)(uint64_t *))(qword_100983B00 + 1480))(&v4);
  return 412;
}

uint64_t sub_10015A2D4(unsigned int a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  unsigned __int8 *v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = 0;
  v4 = 0;
  v12 = 0;
  v13 = 0;
  v14 = 0;
  while (*(unsigned __int16 *)(qword_100983B00 + v3) != a1)
  {
    ++v4;
    v3 += 184;
    if (v4 == 8)
      goto LABEL_6;
  }
  if (v4 == 8)
  {
LABEL_6:
    if (sub_10005549C())
    {
      sub_100054530("Device not connected");
      v5 = sub_1000544A0(0x10u);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        sub_1006CEEC0();
    }
    return 1802;
  }
  if ((*(_WORD *)(qword_100983B00 + 1508) & 0x200) == 0 || (*(_WORD *)(qword_100983B00 + v3 + 86) & 0x80) == 0)
    return 2701;
  v7 = sub_100137BEC(a2, (unsigned __int8 **)(a2 + 24), 0);
  v8 = sub_100258F90(v7);
  if (v8 != *(_DWORD *)(qword_100983B00 + v3 + 164))
  {
    sub_100158710(v4, 1810);
    return 2701;
  }
  v9 = v8;
  sub_1001557E4(a1, 0, 0);
  v10 = qword_100983B00;
  v11 = *(unsigned int *)(qword_100983B00 + v3 + 172);
  if ((_DWORD)v11)
  {
    sub_100049F6C(v11);
    v10 = qword_100983B00;
    *(_DWORD *)(qword_100983B00 + v3 + 172) = 0;
  }
  if (*(_BYTE *)(v10 + v3 + 168))
  {
    *(_BYTE *)(v10 + v3 + 168) = 0;
    LODWORD(v12) = 27;
    WORD2(v12) = a1;
    LODWORD(v13) = v9;
    (*(void (**)(uint64_t *))(v10 + 1480))(&v12);
  }
  return 412;
}

uint64_t sub_10015A44C(unsigned int a1, uint64_t a2)
{
  uint64_t v4;
  unsigned __int8 *v5;
  unsigned __int8 *v6;
  unsigned int v7;
  unsigned int v8;
  unsigned __int8 *v9;
  NSObject *v11;
  uint64_t v13;

  v4 = -1472;
  while (*(unsigned __int16 *)(qword_100983B00 + v4 + 1472) != a1)
  {
    v4 += 184;
    if (!v4)
    {
      if (sub_10005549C())
      {
        sub_100054530("Device not connected");
        v11 = sub_1000544A0(0x10u);
        if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
          sub_1006CEEC0();
      }
      return 1802;
    }
  }
  v5 = sub_100137BEC(a2, (unsigned __int8 **)(a2 + 24), 0);
  if (!v5)
    goto LABEL_35;
  v6 = v5;
  v7 = 0;
  do
  {
    if (v7 <= 6)
    {
      switch(v7)
      {
        case 0u:
          if (sub_100258FCC(v6, "1"))
          {
            if (!sub_100258FCC(v6, "0"))
              *(_BYTE *)(qword_100983B00 + v4 + 1648) = 0;
          }
          else
          {
            *(_BYTE *)(qword_100983B00 + v4 + 1648) = 1;
          }
          break;
        case 3u:
          if (sub_100258FCC(v6, "1"))
          {
            if (!sub_100258FCC(v6, "0"))
              *(_BYTE *)(qword_100983B00 + v4 + 1651) = 0;
          }
          else
          {
            *(_BYTE *)(qword_100983B00 + v4 + 1651) = 1;
          }
          break;
        case 4u:
          if (sub_100258FCC(v6, "1"))
          {
            if (!sub_100258FCC(v6, "0"))
              *(_BYTE *)(qword_100983B00 + v4 + 1649) = 0;
          }
          else
          {
            *(_BYTE *)(qword_100983B00 + v4 + 1649) = 1;
          }
          break;
        case 5u:
          if (sub_100258FCC(v6, "1"))
          {
            if (!sub_100258FCC(v6, "0"))
              *(_BYTE *)(qword_100983B00 + v4 + 1650) = 0;
          }
          else
          {
            *(_BYTE *)(qword_100983B00 + v4 + 1650) = 1;
          }
          break;
        default:
          break;
      }
    }
    v8 = v7 + 1;
    v9 = sub_100137BEC(a2, (unsigned __int8 **)(a2 + 24), 0);
    v6 = v9;
    if (!v9)
      break;
  }
  while (v7++ < 0x13);
  if (v9 && v8 == 20)
  {
    sub_1001557E4(a1, 1811, 0);
  }
  else
  {
LABEL_35:
    v13 = sub_1001557E4(a1, 0, 0);
    if ((_DWORD)v13)
      sub_1001581D4(a1, 1, v13);
  }
  return 412;
}

uint64_t sub_10015A6E0(unsigned int a1, uint64_t a2)
{
  uint64_t i;
  NSObject *v5;
  NSObject *v7;
  NSObject *v8;
  int v9;
  unsigned __int8 *v10;
  char v11;
  char v12;
  char v13;
  int v14;
  char v15;
  char *v16;
  unsigned int v17;
  size_t v18;
  uint64_t v19;

  for (i = 0; i != 1472; i += 184)
  {
    if (*(unsigned __int16 *)(qword_100983B00 + i) == a1)
    {
      if ((*(_WORD *)(qword_100983B00 + 1508) & 0x400) == 0)
      {
        if (sub_10005549C())
        {
          sub_100054530("Received unsupported AT+BIND command");
          v7 = sub_1000544A0(0x10u);
          if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
            sub_1006CEEC0();
        }
        return 2701;
      }
      if ((*(_WORD *)(qword_100983B00 + i + 86) & 0x100) == 0)
      {
        if (sub_10005549C())
        {
          sub_100054530("Device doesn't support HF indicators. AT+BIND command is invalid");
          v8 = sub_1000544A0(0x10u);
          if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
            sub_1006CEEC0();
        }
      }
      v9 = *(_DWORD *)a2;
      if (*(_DWORD *)a2)
      {
        if (v9 != 1)
        {
          if (v9 != 2)
            return 2701;
          v10 = sub_100137BEC(a2, (unsigned __int8 **)(a2 + 24), 0);
          if (v10)
          {
            v11 = 0;
            v12 = 1;
            do
            {
              v13 = v11;
              v14 = *v10;
              if (v14 == 50)
              {
                *(_BYTE *)(qword_100983B00 + i + 181) = 1;
              }
              else
              {
                if (v14 != 49)
                  return 134;
                *(_BYTE *)(qword_100983B00 + i + 180) = 1;
              }
              v10 = sub_100137BEC(a2, (unsigned __int8 **)(a2 + 24), 0);
              v15 = (v10 != 0) & v12;
              v11 = 1;
              v12 = 0;
            }
            while ((v15 & 1) != 0);
            if (v10 == 0 || (v13 & 1) == 0)
              goto LABEL_34;
            sub_1001557E4(a1, 114, 0);
            return 412;
          }
LABEL_34:
          v19 = sub_1001557E4(a1, 0, 0);
          if ((_DWORD)v19)
            sub_1001581D4(a1, 1, v19);
          return 412;
        }
        sub_1001553F4(a1, 27, "\r\n+BIND:1,1\r\n", 0xDuLL, 0);
        v16 = "\r\n+BIND:2,1\r\n";
        v17 = a1;
        v18 = 13;
      }
      else
      {
        v16 = "\r\n+BIND:(1,2)\r\n";
        v17 = a1;
        v18 = 15;
      }
      sub_1001553F4(v17, 27, v16, v18, 0);
      goto LABEL_34;
    }
  }
  if (sub_10005549C())
  {
    sub_100054530("Device not connected");
    v5 = sub_1000544A0(0x10u);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_1006CEEC0();
  }
  return 1802;
}

uint64_t sub_10015A968(int a1, uint64_t a2)
{
  __int16 v3;
  uint64_t i;
  NSObject *v5;
  NSObject *v7;
  NSObject *v8;
  unsigned __int8 *v9;
  unsigned int v10;
  NSObject *v11;
  unsigned __int8 *v12;
  unsigned int v13;
  uint64_t v14;
  NSObject *v15;
  BOOL v16;
  NSObject *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;

  v3 = a1;
  for (i = 0; i != 1472; i += 184)
  {
    if (*(unsigned __int16 *)(qword_100983B00 + i) == a1)
    {
      v18 = 0;
      v19 = 0;
      v20 = 0;
      if ((*(_WORD *)(qword_100983B00 + 1508) & 0x400) == 0)
      {
        if (!sub_10005549C())
          return 2701;
        sub_100054530("Received unsupported AT+BIEV command");
        v7 = sub_1000544A0(0x10u);
        if (!os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
          return 2701;
        goto LABEL_21;
      }
      if ((*(_WORD *)(qword_100983B00 + i + 86) & 0x100) == 0)
      {
        if (!sub_10005549C())
          return 2701;
        sub_100054530("Device doesn't support HF indicators. AT+BIEV command is invalid");
        v8 = sub_1000544A0(0x10u);
        if (!os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
          return 2701;
        goto LABEL_21;
      }
      v9 = sub_100137BEC(a2, (unsigned __int8 **)(a2 + 24), 0);
      v10 = sub_100258F90(v9);
      if (v10 - 3 <= 0xFFFFFFFD)
      {
        if (!sub_10005549C())
          return 2701;
        sub_100054530("Invalid anum received");
        v11 = sub_1000544A0(0x10u);
        if (!os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
          return 2701;
        goto LABEL_21;
      }
      v12 = sub_100137BEC(a2, (unsigned __int8 **)(a2 + 24), 0);
      v13 = sub_100258F90(v12);
      if (v10 == 1)
      {
        v14 = qword_100983B00;
        if (*(_BYTE *)(qword_100983B00 + i + 180))
          v16 = v13 >= 2;
        else
          v16 = 0;
        if (v16)
        {
          if (!sub_10005549C())
            return 2701;
          sub_100054530("Invalid value received for enhanced safety HF indicator");
          v17 = sub_1000544A0(0x10u);
          if (!os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
            return 2701;
LABEL_21:
          sub_1006CEEC0();
          return 2701;
        }
      }
      else if (v10 == 2)
      {
        v14 = qword_100983B00;
        if (*(_BYTE *)(qword_100983B00 + i + 181) && v13 >= 0x65)
        {
          if (!sub_10005549C())
            return 2701;
          sub_100054530("Invalid value received for battery level HF indicator");
          v15 = sub_1000544A0(0x10u);
          if (!os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
            return 2701;
          goto LABEL_21;
        }
      }
      else
      {
        v14 = qword_100983B00;
      }
      LODWORD(v18) = 29;
      WORD2(v18) = v3;
      v19 = __PAIR64__(v13, v10);
      (*(void (**)(uint64_t *))(v14 + 1480))(&v18);
      return 412;
    }
  }
  if (sub_10005549C())
  {
    sub_100054530("Device not connected");
    v5 = sub_1000544A0(0x10u);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_1006CEEC0();
  }
  return 1802;
}

uint64_t sub_10015AC1C(unsigned int a1, uint64_t a2)
{
  unsigned __int8 **v4;
  unsigned __int8 *v5;
  int v6;
  unsigned __int8 *v7;
  int v8;
  uint64_t v9;
  unsigned __int16 *v10;
  int v11;
  int v12;
  int v13;
  unsigned __int8 *v14;
  int v15;
  NSObject *v16;
  NSObject *v17;
  NSObject *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  NSObject *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  __int128 buf;
  uint64_t v33;

  v4 = (unsigned __int8 **)(a2 + 24);
  v5 = sub_100137BEC(a2, (unsigned __int8 **)(a2 + 24), 0);
  v6 = atoi((const char *)v5);
  if (v6 == 2)
  {
    v14 = sub_100137BEC(a2, v4, 0);
    v15 = atoi((const char *)v14);
    if (v15 == 1)
    {
      v12 = 0;
    }
    else
    {
      if (sub_10005549C())
      {
        sub_100054530("Invalid +HAOS close parameter:%d", v15);
        v17 = sub_1000544A0(0x10u);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
          sub_1006CEEC0();
      }
      v12 = 2701;
    }
    if (sub_10005549C())
    {
      sub_100054530("disableAoSEmptyPacketReports - hfpHandle:%d", a1);
      v18 = sub_1000544A0(0x10u);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        LODWORD(buf) = 136446210;
        *(_QWORD *)((char *)&buf + 4) = sub_100054494();
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, " %{public}s", (uint8_t *)&buf, 0xCu);
      }
    }
    v19 = 0;
    while (*(unsigned __int16 *)(qword_100983B00 + v19) != a1)
    {
      v19 += 184;
      if (v19 == 1472)
      {
        v20 = 0;
        goto LABEL_33;
      }
    }
    v20 = qword_100983B00 + v19 + 80;
LABEL_33:
    *(_QWORD *)&buf = 0;
    sub_100182588(v20, (uint64_t *)&buf);
    sub_1001FB65C();
    if (sub_10005549C())
    {
      sub_100054530("exitAdvancedSniff - hfpHandle:%d", a1);
      v22 = sub_1000544A0(0x10u);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
      {
        v23 = sub_100054494();
        LODWORD(buf) = 136446210;
        *(_QWORD *)((char *)&buf + 4) = v23;
        _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, " %{public}s", (uint8_t *)&buf, 0xCu);
      }
    }
    v24 = 0;
    while (*(unsigned __int16 *)(qword_100983B00 + v24) != a1)
    {
      v24 += 184;
      if (v24 == 1472)
      {
        v25 = 0;
        goto LABEL_41;
      }
    }
    v25 = qword_100983B00 + v24 + 80;
LABEL_41:
    *(_QWORD *)&buf = 0;
    sub_100182588(v25, (uint64_t *)&buf);
    sub_1001FB43C();
  }
  else if (v6 == 1)
  {
    v7 = sub_100137BEC(a2, v4, 0);
    buf = 0uLL;
    v33 = 0;
    WORD2(buf) = a1;
    v8 = atoi((const char *)v7);
    if (v8 == 1)
    {
      v30 = 0;
      v31 = 0;
      v29 = (unsigned __int16)a1;
      v28 = 30;
      (*(void (**)(int *))(qword_100983B00 + 1480))(&v28);
      v13 = 0;
      v12 = 0;
    }
    else if (v8)
    {
      if (sub_10005549C())
      {
        sub_100054530("Invalid +HAOS setup parameter:%d", v8);
        v21 = sub_1000544A0(0x10u);
        if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
          sub_1006CEEC0();
      }
      v13 = 0;
      v12 = 2701;
    }
    else
    {
      v9 = 0;
      LODWORD(buf) = 1;
      v10 = (unsigned __int16 *)qword_100983B00;
      do
      {
        v11 = *v10;
        v10 += 92;
        if (v11 == a1)
          break;
        ++v9;
      }
      while (v9 != 8);
      *((_QWORD *)&buf + 1) = qword_100983B00 + 184 * v9 + 80;
      LODWORD(v33) = 1802;
      sub_10015C0E4(a1, 0);
      v12 = 0;
      v13 = 122;
    }
    LODWORD(buf) = 5;
    DWORD2(buf) = v13;
    (*(void (**)(__int128 *))(qword_100983B00 + 1480))(&buf);
    sub_10015C0E4(a1, 3u);
  }
  else
  {
    if (sub_10005549C())
    {
      sub_100054530("Invalid +HAOS command:%d", v6);
      v16 = sub_1000544A0(0x10u);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
        sub_1006CEEC0();
    }
    v12 = 2701;
  }
  v26 = sub_100155758(a1, v12);
  if ((_DWORD)v26)
    sub_1001581D4(a1, 1, v26);
  return 412;
}

void sub_10015B060(__int16 a1)
{
  NSObject *v1;
  uint64_t v2;
  const void *v3[2];

  v2 = 0;
  WORD2(v2) = a1;
  v3[1] = &v2;
  v3[0] = (const void *)8;
  if (sub_10004AE90((uint64_t)sub_10015B0F0, v3, 0) && sub_10005549C())
  {
    sub_100054530("Failed to register with dispatcher!\n");
    v1 = sub_1000544A0(0x10u);
    if (os_log_type_enabled(v1, OS_LOG_TYPE_ERROR))
      sub_1006CEEC0();
  }
}

uint64_t sub_10015B0F0(uint64_t a1)
{
  int *v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v9 = 0;
  v10 = 0;
  v11 = 0;
  v1 = *(int **)(a1 + 8);
  v2 = *v1;
  v3 = *((unsigned __int16 *)v1 + 2);
  v4 = qword_100983B00;
  v5 = -1472;
  while (*(unsigned __int16 *)(qword_100983B00 + v5 + 1472) != v3)
  {
    v5 += 184;
    if (!v5)
      goto LABEL_8;
  }
  v6 = *(unsigned int *)(qword_100983B00 + v5 + 1480);
  if ((_DWORD)v6)
  {
    sub_100049F6C(v6);
    v4 = qword_100983B00;
    *(_DWORD *)(qword_100983B00 + v5 + 1480) = 0;
  }
  v7 = v4 + v5;
  *(_BYTE *)(v7 + 1484) = 0;
  *(_DWORD *)(v7 + 1476) = v2;
  v10 = v4 + v5 + 1552;
LABEL_8:
  LODWORD(v11) = v2;
  WORD2(v9) = v3;
  LODWORD(v9) = 1;
  return (*(uint64_t (**)(uint64_t *))(v4 + 1480))(&v9);
}

BOOL sub_10015B1A4()
{
  return dword_100999188 && *(_BYTE *)(qword_100983B08 + 401) != 0;
}

void sub_10015B1D4(char a1)
{
  if (!dword_100999188)
    sub_100253460();
  *(_BYTE *)(qword_100983B08 + 401) = a1;
}

uint64_t sub_10015B210(uint64_t a1, _DWORD *a2, unsigned int a3, uint64_t a4, unsigned int a5, unsigned int a6)
{
  uint64_t v7;
  char *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;

  if (!a1 || !a4)
  {
    sub_100253460();
    return 101;
  }
  if (dword_100999188)
    return 140;
  v14 = (char *)sub_100114588(0x198uLL);
  qword_100983B08 = (uint64_t)v14;
  if (!v14)
    return 106;
  v15 = 0;
  v27 = 0;
  v28 = 0;
  v26 = 0;
  v23 = 0;
  v24 = 0;
  v22 = 0;
  v29 = 0u;
  v30 = 0u;
  do
  {
    *(_WORD *)&v14[v15] = -1;
    v15 += 48;
  }
  while (v15 != 384);
  v16 = (_BYTE *)sub_100252DE8(0x10u);
  v17 = qword_100983B08;
  v18 = (_BYTE *)(qword_100983B08 + 400);
  *(_BYTE *)(qword_100983B08 + 400) = *v16;
  *(_WORD *)(v17 + 402) = a5;
  *(_WORD *)(v17 + 404) = a6;
  v7 = sub_10023E274((uint64_t)sub_10015B468, (uint64_t)off_10091C758, a5, a6, v18, (uint64_t)&unk_10091C780);
  if ((_DWORD)v7)
  {
LABEL_13:
    sub_100053298((void *)qword_100983B08);
    qword_100983B08 = 0;
    return v7;
  }
  byte_100983B10 = 1;
  dword_100983B18 = *(unsigned __int8 *)(qword_100983B08 + 400);
  word_100983B12 = 1;
  byte_100983B20 = 1;
  word_100983B22 = 1;
  dword_100983B28 = (a3 >> 5) & 1;
  byte_100983B30 = 1;
  word_100983B32 = 2;
  dword_100983B38 = a3 & 0x1F | (32 * ((a3 >> 9) & 1));
  *(_QWORD *)&v29 = &unk_10091C7B0;
  WORD4(v29) = 5;
  *(_QWORD *)&v30 = *(_QWORD *)a1;
  WORD4(v30) = *(_WORD *)(a1 + 8);
  v25 = &unk_10091C828;
  LOWORD(v26) = 5;
  v27 = v30;
  LOWORD(v28) = WORD4(v30);
  v21 = &unk_10091C8A0;
  LOWORD(v22) = 5;
  v23 = v30;
  LOWORD(v24) = WORD4(v30);
  v19 = sub_1002465CC((uint64_t)&v29, (int *)(qword_100983B08 + 388));
  v20 = qword_100983B08;
  if ((_DWORD)v19)
  {
    v7 = v19;
    sub_10023E540(*(unsigned __int8 *)(qword_100983B08 + 400));
    goto LABEL_13;
  }
  *(_QWORD *)(qword_100983B08 + 392) = a4;
  sub_1002468CC(*(_DWORD *)(v20 + 388), (uint64_t)&v25);
  sub_1002468CC(*(_DWORD *)(qword_100983B08 + 388), (uint64_t)&v21);
  if (a2)
    *a2 = *(_DWORD *)(qword_100983B08 + 388);
  sub_1001F519C((uint64_t)sub_10015B5C8);
  sub_1001891E8(6291456);
  v7 = 0;
  dword_100999188 = 1;
  return v7;
}

uint64_t sub_10015B468(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  uint64_t v6;
  unsigned int v8;
  NSObject *v9;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v12 = 0;
  v13 = 0;
  v14 = 0;
  v6 = 16;
  while (*(_DWORD *)(qword_100983B08 + v6) != *(_DWORD *)a1
       || *(unsigned __int16 *)(qword_100983B08 + v6 + 4) != *(unsigned __int16 *)(a1 + 4))
  {
    v6 += 48;
    if (v6 == 400)
    {
      v8 = sub_10015BDF8((int *)a1, 2u, a4);
      if (v8 != 8)
      {
        WORD2(v12) = a4;
        v13 = qword_100983B08 + 48 * v8 + 16;
        LODWORD(v12) = 0;
        return (*(uint64_t (**)(uint64_t *))(qword_100983B08 + 392))(&v12);
      }
      if (sub_10005549C())
      {
        sub_100054530("ERROR : We are out of connection slots. %d", 8);
        v9 = sub_1000544A0(0x10u);
        if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
          goto LABEL_16;
      }
      return sub_10023EB7C((uint64_t)sub_10015BA60, a4, 0);
    }
  }
  if (sub_10005549C())
  {
    sub_100054530("ERROR : We are already connected to this device %:", a1, v12, v13, v14);
    v11 = sub_1000544A0(0x10u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
LABEL_16:
      sub_1006CEEC0();
  }
  return sub_10023EB7C((uint64_t)sub_10015BA60, a4, 0);
}

void sub_10015B5C8(uint64_t a1, int a2, int a3)
{
  __int128 *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v8;
  unsigned int v9;
  uint64_t v10;
  const char *v11;
  NSObject *v12;
  void *v13;
  int v14;
  int v15;
  unsigned __int16 v16;
  int buf;
  _BYTE buf_4[12];
  uint64_t v19;

  if (dword_100999188)
  {
    v4 = sub_10019ACEC(a2);
    v16 = 0;
    v15 = 0;
    sub_100182620((uint64_t)v4, (uint64_t)&v15);
    v5 = 0;
    v6 = qword_100983B08 + 16;
    do
    {
      if (*(_DWORD *)v6 == v15 && *(unsigned __int16 *)(v6 + 4) == v16)
        break;
      ++v5;
      v6 += 48;
    }
    while (v5 != 8);
    v9 = v5;
    v10 = *(int *)(qword_100983B08 + 48 * v5 + 32);
    if (sub_10005549C())
    {
      v11 = v10 > 4 ? "UNKNOWN" : off_10091C9A0[v10];
      sub_100054530("AdvancedSniffModeChangeCB - deviceID:%d mode:%d mediaState:%s", v9, a3, v11);
      v12 = sub_1000544A0(0x10u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        v13 = sub_100054494();
        buf = 136446210;
        *(_QWORD *)buf_4 = v13;
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, " %{public}s", (uint8_t *)&buf, 0xCu);
      }
    }
    if (!a3 && (_DWORD)v10 == 4)
    {
      v14 = *(unsigned __int16 *)(qword_100983B08 + 48 * v9);
      sub_10015C0E4(v14, 0);
      *(_WORD *)&buf_4[2] = 0;
      *(_QWORD *)&buf_4[4] = 0;
      v19 = 0;
      *(_WORD *)buf_4 = v14;
      buf = 6;
      (*(void (**)(int *))(qword_100983B08 + 392))(&buf);
    }
  }
  else if (sub_10005549C())
  {
    sub_100054530("AdvancedSniffModeChangeCB - VSE has fired but module is not initialized");
    v8 = sub_1000544A0(0x10u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
}

uint64_t sub_10015B7C4()
{
  uint64_t result;
  void *v1;

  if (!dword_100999188)
    return 408;
  if (*(_BYTE *)(qword_100983B08 + 384))
    return 141;
  result = sub_10023E540(*(unsigned __int8 *)(qword_100983B08 + 400));
  if (!(_DWORD)result)
  {
    sub_10018929C(6291456);
    sub_1002467B8(*(_DWORD *)(qword_100983B08 + 388));
    v1 = (void *)qword_100983B08;
    *(_QWORD *)(qword_100983B08 + 392) = 0;
    sub_100053298(v1);
    result = 0;
    qword_100983B08 = 0;
    dword_100999188 = 0;
  }
  return result;
}

uint64_t sub_10015B844(int a1, int a2)
{
  uint64_t v4;
  NSObject *v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  NSObject *v9;
  uint64_t v11;

  if (!dword_100999188)
    return 408;
  v4 = 0;
  while (*(unsigned __int16 *)(qword_100983B08 + v4) != a1)
  {
    v4 += 48;
    if (v4 == 384)
    {
      if (sub_10005549C())
      {
        sub_100054530("Could not find addr for device %d", a1);
        v5 = sub_1000544A0(0x10u);
        if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
          sub_1006CEEC0();
      }
      sub_10015B9C8(a1);
      return 1802;
    }
  }
  v6 = sub_10015B9C8(a1);
  if (v6 == 8)
    return 1802;
  v8 = v6;
  if (*(_BYTE *)(qword_100983B08 + 48 * v6 + 28) != 2)
    return 408;
  if (a2)
  {
    v7 = sub_10023EB7C((uint64_t)sub_10015BA60, a1, 1);
    if ((_DWORD)v7)
    {
      if (sub_10005549C())
      {
        sub_100054530("OI_RFCOMM_Accept failed: %! %d\n", v7, 1);
        v9 = sub_1000544A0(0x10u);
        if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
          sub_1006CEEC0();
      }
      sub_10015BC68(v8);
    }
    return v7;
  }
  v11 = sub_10023EB7C((uint64_t)sub_10015BA60, a1, 0);
  sub_10015BC68(v8);
  return v11;
}

uint64_t sub_10015B9C8(int a1)
{
  uint64_t v2;
  unsigned __int16 *v3;
  int v4;
  NSObject *v5;

  v2 = 0;
  v3 = (unsigned __int16 *)qword_100983B08;
  while (1)
  {
    v4 = *v3;
    v3 += 24;
    if (v4 == a1)
      break;
    if (++v2 == 8)
    {
      if (sub_10005549C())
      {
        sub_100054530("Could not find link handle for device %d", a1);
        v5 = sub_1000544A0(0x10u);
        if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
          sub_1006CEEC0();
      }
      LOBYTE(v2) = 8;
      return v2;
    }
  }
  return v2;
}

void sub_10015BA60(uint64_t a1, unsigned __int16 a2, uint64_t a3)
{
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  NSObject *v9;
  uint64_t v10;
  NSObject *v11;
  int v12;
  int v13;
  uint64_t v14;
  int v15;
  int v16;

  v6 = sub_10015B9C8(a1);
  if (v6 != 8)
  {
    v7 = v6;
    v8 = v6;
    if (*(unsigned __int16 *)(qword_100983B08 + 48 * v6) == (_DWORD)a1)
    {
      if ((_DWORD)a3)
      {
        v13 = (unsigned __int16)a1;
        v15 = a3;
        v14 = qword_100983B08 + 48 * sub_10015B9C8(a1) + 16;
        v16 = a2;
        v12 = 1;
        (*(void (**)(int *))(qword_100983B08 + 392))(&v12);
        sub_10015BC68(v7);
      }
      else
      {
        v10 = sub_10018CFE4((uint64_t)off_10091C918, qword_100983B08 + 48 * v6 + 16);
        if ((_DWORD)v10)
        {
          if (sub_10005549C())
          {
            sub_100054530("Could not register sco for link %d : %!", a1, v10);
            v11 = sub_1000544A0(0x10u);
            if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
              sub_1006CEEC0();
          }
          *(_DWORD *)(qword_100983B08 + 48 * v8 + 4) = 1817;
          sub_10023EEBC(a1, 1817);
        }
        else
        {
          *(_BYTE *)(qword_100983B08 + 48 * v8 + 28) = 3;
        }
        v13 = (unsigned __int16)a1;
        v15 = v10;
        v14 = qword_100983B08 + 48 * sub_10015B9C8(a1) + 16;
        v16 = a2;
        v12 = 1;
        (*(void (**)(int *))(qword_100983B08 + 392))(&v12);
      }
    }
    else
    {
      if (sub_10005549C())
      {
        sub_100054530("Links do not match... %!", a3);
        v9 = sub_1000544A0(0x10u);
        if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
          sub_1006CEEC0();
      }
      *(_DWORD *)(qword_100983B08 + 48 * v8 + 4) = 1816;
      sub_10023EEBC(a1, 1816);
    }
  }
}

double sub_10015BC68(unsigned int a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  _OWORD *v6;
  double result;

  v2 = sub_10018D1C8(qword_100983B08 + 48 * a1 + 16);
  if ((_DWORD)v2)
  {
    v3 = v2;
    if (sub_10005549C())
    {
      sub_100054530("DeregisterScoApplicationByAddr failed %!", v3);
      v4 = sub_1000544A0(0x10u);
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
        sub_1006CEEC0();
    }
  }
  v5 = qword_100983B08;
  v6 = (_OWORD *)(qword_100983B08 + 48 * a1);
  result = 0.0;
  *v6 = 0u;
  v6[1] = 0u;
  v6[2] = 0u;
  *(_WORD *)v6 = -1;
  --*(_BYTE *)(v5 + 384);
  return result;
}

uint64_t sub_10015BD24(int *a1, char a2)
{
  unsigned int v4;
  uint64_t v5;
  unsigned int v7;

  if (!dword_100999188)
    return 1804;
  if (a1)
  {
    if (*(_BYTE *)(qword_100983B08 + 384) == 8)
      return 133;
    v4 = sub_10015BDF8(a1, 1u, 0);
    if (v4 == 8)
    {
      return 133;
    }
    else
    {
      v7 = v4;
      v5 = sub_10023E88C((uint64_t)sub_10015BA60, off_10091C758, (uint64_t)a1, a2, 0x3FAu, 0, (_WORD *)(qword_100983B08 + 48 * v4), (uint64_t)&unk_10091C780);
      if ((_DWORD)v5)
        sub_10015BC68(v7);
    }
  }
  else
  {
    sub_100253460();
    return 101;
  }
  return v5;
}

uint64_t sub_10015BDF8(int *a1, unsigned int a2, __int16 a3)
{
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  NSObject *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;

  v5 = 0;
  for (i = 0; i != 8; ++i)
  {
    if (*(__int16 *)(qword_100983B08 + v5) == -1)
    {
      v7 = qword_100983B08 + v5;
      if (!*(_DWORD *)(qword_100983B08 + v5 + 16) && *(_WORD *)(qword_100983B08 + v5 + 20) == 0)
      {
        v10 = *a1;
        *(_WORD *)(v7 + 20) = *((_WORD *)a1 + 2);
        *(_DWORD *)(v7 + 16) = v10;
        v11 = qword_100983B08;
        v12 = qword_100983B08 + v5;
        *(_WORD *)v12 = a3;
        *(_BYTE *)(v12 + 28) = a2;
        ++*(_BYTE *)(v11 + 384);
        return i;
      }
    }
    v5 += 48;
  }
  if (sub_10005549C())
  {
    sub_100054530("Could not create raw device addr %:, state %d", a1, a2);
    v9 = sub_1000544A0(0x10u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      sub_1006CEEC0();
  }
  LOBYTE(i) = 8;
  return i;
}

uint64_t sub_10015BEF4(int a1, int a2)
{
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  int v7;
  int v8;

  if (!dword_100999188)
    return 408;
  v3 = sub_10015B9C8(a1);
  if (v3 == 8)
    return 1802;
  v4 = qword_100983B08;
  v5 = qword_100983B08 + 48 * v3;
  v8 = *(unsigned __int8 *)(v5 + 28);
  v6 = (_BYTE *)(v5 + 28);
  v7 = v8;
  if ((v8 - 4) < 2)
    return 116;
  if (v7 != 3)
    return 1802;
  *v6 = 4;
  *(_DWORD *)(v4 + 48 * v3 + 4) = a2;
  return sub_10015CBDC(v3, a2);
}

uint64_t sub_10015BF90(int a1, uint64_t a2)
{
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  _BOOL4 v12;
  BOOL v13;
  int v14;

  if (!dword_100999188)
    return 408;
  v3 = sub_10015B9C8(a1);
  if (v3 == 8)
    return 1802;
  if (*(_DWORD *)(qword_100983B08 + 48 * v3 + 32) != 1)
    return 1807;
  v11 = 3 * v3;
  LODWORD(result) = sub_10018E4FC(qword_100983B08 + 48 * v3 + 16, a2, v4, v5, v6, v7, v8, v9);
  v12 = result == 0;
  v13 = (a2 & v12) == 0;
  if ((a2 & v12) != 0)
    v14 = 2;
  else
    v14 = 0;
  if (v13)
    result = result;
  else
    result = 0;
  *(_DWORD *)(qword_100983B08 + 16 * v11 + 32) = v14;
  return result;
}

uint64_t sub_10015C040(int a1)
{
  unsigned int v1;
  unsigned int v2;
  uint64_t result;

  if (!dword_100999188)
    return 408;
  v1 = sub_10015B9C8(a1);
  if (v1 == 8 || *(_BYTE *)(qword_100983B08 + 48 * v1 + 28) != 3)
    return 1802;
  v2 = v1;
  if (*(_DWORD *)(qword_100983B08 + 48 * v1 + 32))
    return 1806;
  result = sub_10018D358(qword_100983B08 + 48 * v1 + 16);
  if (!(_DWORD)result)
    *(_DWORD *)(qword_100983B08 + 48 * v2 + 32) = 2;
  return result;
}

uint64_t sub_10015C0E4(int a1, unsigned int a2)
{
  const char *v4;
  NSObject *v5;
  unsigned int v6;
  uint64_t result;
  unsigned int v8;
  uint8_t buf[4];
  void *v10;

  if (sub_10005549C())
  {
    v4 = a2 > 4 ? "UNKNOWN" : off_10091C9A0[a2];
    sub_100054530("OI_HandsfreeAG_SetAoSMediaState - handle:%d mediaState:%s", a1, v4);
    v5 = sub_1000544A0(0x10u);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      v10 = sub_100054494();
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  v6 = sub_10015B9C8(a1);
  if (v6 == 8)
    return 1802;
  v8 = v6;
  result = 0;
  *(_DWORD *)(qword_100983B08 + 48 * v8 + 32) = a2;
  return result;
}

uint64_t sub_10015C204(int a1)
{
  return *(unsigned int *)(qword_100983B08 + 48 * sub_10015B9C8(a1) + 32);
}

uint64_t sub_10015C22C(unsigned int a1)
{
  unsigned int v2;
  uint64_t result;
  unsigned int v4;
  int v5;
  int v6;
  _BOOL4 v7;
  uint64_t v8;
  NSObject *v9;

  if (!dword_100999188)
    return 408;
  v2 = sub_10015B9C8(a1);
  if (v2 == 8)
    return 1802;
  v4 = v2;
  v5 = *(_DWORD *)(qword_100983B08 + 48 * v2 + 32);
  if (v5 == 3)
  {
    v7 = sub_100157688(a1);
    v8 = qword_100983B08 + 48 * v4;
    if (v7)
    {
      if (*(_DWORD *)(v8 + 32) == 4)
      {
        result = sub_10005549C();
        if ((_DWORD)result)
        {
          sub_100054530("Trying to close HAOS while another request is in flight");
          v9 = sub_1000544A0(0x10u);
          result = os_log_type_enabled(v9, OS_LOG_TYPE_ERROR);
          if ((_DWORD)result)
          {
            sub_1006CE7A4();
            result = 0;
          }
        }
      }
      else
      {
        result = sub_1001573E4(a1);
        if ((_DWORD)result)
          return result;
      }
    }
    else
    {
      result = sub_10018D2CC(*(_QWORD *)(v8 + 8));
      if ((_DWORD)result)
        return result;
    }
    v6 = 4;
  }
  else
  {
    if (v5 != 2)
      return 1807;
    LODWORD(result) = sub_10018F2C4(qword_100983B08 + 48 * v2 + 16);
    v6 = 0;
    if ((_DWORD)result == 1301)
      result = 1807;
    else
      result = result;
  }
  *(_DWORD *)(qword_100983B08 + 48 * v4 + 32) = v6;
  return result;
}

BOOL sub_10015C368(int a1)
{
  unsigned int v1;

  if (dword_100999188 && (v1 = sub_10015B9C8(a1), v1 != 8))
    return *(_DWORD *)(qword_100983B08 + 48 * v1 + 32) == 3;
  else
    return 0;
}

uint64_t sub_10015C3B8(unsigned int a1, uint64_t a2, char *a3, size_t a4)
{
  unsigned int v8;
  uint64_t result;
  unsigned int v10;

  if (!dword_100999188)
    return 408;
  if (!a2)
  {
    sub_100253460();
    return 101;
  }
  v8 = sub_10015B9C8(a1);
  if (v8 == 8)
    return 1802;
  if (*(_BYTE *)(qword_100983B08 + 48 * v8 + 28) != 3)
    return 408;
  v10 = v8;
  if (*(_QWORD *)(qword_100983B08 + 48 * v8 + 40))
    return 118;
  result = sub_10023E880((uint64_t)sub_10015C490, a1, a3, a4);
  if (!(_DWORD)result)
    *(_QWORD *)(qword_100983B08 + 48 * v10 + 40) = a2;
  return result;
}

uint64_t sub_10015C490(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  if (qword_100983B08)
  {
    v7 = result;
    result = sub_10015B9C8(result);
    if ((_DWORD)result != 8)
    {
      v8 = qword_100983B08 + 48 * result;
      v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 40);
      v10 = (_QWORD *)(v8 + 40);
      v9 = v11;
      if (v11)
      {
        *v10 = 0;
        return v9(v7, a2, a3, a4);
      }
    }
  }
  return result;
}

uint64_t sub_10015C51C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  NSObject *v4;

  if (*(_BYTE *)(a1 + 2) != 1)
    sub_100253460();
  v2 = 0;
  while (*(_QWORD *)(qword_100983B08 + v2 + 8) != a1)
  {
    v2 += 48;
    if (v2 == 384)
      goto LABEL_8;
  }
  result = *(unsigned __int16 *)(qword_100983B08 + v2);
  if (*(_WORD *)(qword_100983B08 + v2))
    return result;
LABEL_8:
  result = sub_10005549C();
  if ((_DWORD)result)
  {
    sub_100054530("Could not find sco hfp handle for sco hci connection handle %d", a1);
    v4 = sub_1000544A0(0x10u);
    result = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);
    if ((_DWORD)result)
    {
      sub_1006CEEC0();
      return 0;
    }
  }
  return result;
}

uint64_t sub_10015C5CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  NSObject *v5;

  if (*(_BYTE *)(a1 + 2))
    sub_100253460();
  v2 = 0;
  while (*(_DWORD *)(qword_100983B08 + v2 + 16) != *(_DWORD *)(a1 + 48)
       || *(unsigned __int16 *)(qword_100983B08 + v2 + 20) != *(unsigned __int16 *)(a1 + 52))
  {
    v2 += 48;
    if (v2 == 384)
      goto LABEL_11;
  }
  result = *(unsigned __int16 *)(qword_100983B08 + v2);
  if (*(_WORD *)(qword_100983B08 + v2))
    return result;
LABEL_11:
  result = sub_10005549C();
  if ((_DWORD)result)
  {
    sub_100054530("Could not find sco hfp handle for sco hci connection handle %d", a1);
    v5 = sub_1000544A0(0x10u);
    result = os_log_type_enabled(v5, OS_LOG_TYPE_ERROR);
    if ((_DWORD)result)
    {
      sub_1006CEEC0();
      return 0;
    }
  }
  return result;
}

uint64_t sub_10015C688()
{
  return *(unsigned __int16 *)(qword_100983B08 + 402);
}

uint64_t sub_10015C698(int *a1, char a2, _WORD *a3, _WORD *a4, int a5)
{
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  int v15;
  NSObject *v16;

  if (!dword_100999188)
    return 1804;
  if (a1)
  {
    if (*(_BYTE *)(qword_100983B08 + 384) == 8)
      return 133;
    v10 = sub_10015BDF8(a1, 1u, 0);
    if (v10 == 8)
      return 133;
    v12 = v10;
    v13 = sub_10023F0A8((uint64_t)sub_10015BA60, (uint64_t)off_10091C758, (uint64_t)a1, a2, *(unsigned __int16 *)(qword_100983B08 + 402), 0, (_WORD *)(qword_100983B08 + 48 * v10), a3, (uint64_t)&unk_10091C780, a5);
    if ((_DWORD)v13)
    {
      v11 = v13;
      sub_10015BC68(v12);
      return v11;
    }
    v15 = *(unsigned __int16 *)(qword_100983B08 + 48 * v12);
    *a4 = v15;
    if (sub_100157738(v15, a1) == 255)
    {
      return 133;
    }
    else
    {
      v11 = sub_10018CFE4((uint64_t)off_10091C918, qword_100983B08 + 48 * v12 + 16);
      if ((_DWORD)v11)
      {
        if (sub_10005549C())
        {
          sub_100054530("Could not register sco for link");
          v16 = sub_1000544A0(0x10u);
          if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
            sub_1006CEEC0();
        }
      }
      else
      {
        *(_BYTE *)(qword_100983B08 + 48 * v12 + 28) = 3;
      }
    }
  }
  else
  {
    sub_100253460();
    return 101;
  }
  return v11;
}

void sub_10015C840(uint64_t a1, unsigned int a2)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v7;

  if (dword_100999188)
  {
    sub_10018D1C8(a1);
    v4 = 0;
    v5 = qword_100983B08 + 16;
    while (*(_DWORD *)v5 != *(_DWORD *)a1 || *(unsigned __int16 *)(v5 + 4) != *(unsigned __int16 *)(a1 + 4))
    {
      ++v4;
      v5 += 48;
      if (v4 == 8)
        goto LABEL_15;
    }
    if (v4 != 8)
      sub_10015BC68(v4);
LABEL_15:
    sub_10023F45C(a1, a2);
  }
  else if (sub_10005549C())
  {
    sub_100054530("OI_HandsfreeRaw_FastConnect_DestroyChannel Handsfree AG service not started!");
    v7 = sub_1000544A0(0x10u);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      sub_1006CEEC0();
  }
}

uint64_t sub_10015C91C(unsigned int a1, uint64_t a2)
{
  NSObject *v4;
  uint64_t result;
  uint64_t v6;
  uint8_t buf[4];
  void *v8;

  if (sub_10005549C())
  {
    sub_100054530("HANDSFREE RFCOMM_ReleaseInd, link=%d, reason=%!", a1, a2);
    v4 = sub_1000544A0(0x10u);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      v8 = sub_100054494();
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  result = sub_10015B9C8(a1);
  if ((_DWORD)result != 8)
  {
    v6 = qword_100983B08 + 48 * result;
    *(_BYTE *)(v6 + 28) = 0;
    *(_DWORD *)(v6 + 4) = a2;
    return sub_10015CBDC(result, a2);
  }
  return result;
}

void sub_10015CA1C(unsigned int a1, uint64_t a2, int a3)
{
  unsigned int v6;
  NSObject *v7;
  unsigned int v8;
  unint64_t v9;
  const char *v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15[16];

  v12 = 0;
  v13 = 0;
  v14 = 0;
  v6 = sub_10015B9C8(a1);
  if (v6 == 8)
  {
    if (sub_10005549C())
    {
      sub_100054530("Ignoring received data, we are not connected to this device ... %d", 8);
      v7 = sub_1000544A0(0x10u);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
LABEL_14:
        sub_1006CEEC0();
    }
  }
  else
  {
    v8 = v6;
    if ((*(_BYTE *)(qword_100983B08 + 48 * v6 + 28) & 0xFE) == 4)
    {
      if (sub_10005549C())
      {
        v9 = *(char *)(qword_100983B08 + 48 * v8 + 28);
        v10 = v9 > 5 ? "UNKNOWN" : off_10091C9C8[v9];
        sub_100054530("Ignoring received data while in state %s", v10);
        v11 = sub_1000544A0(0x10u);
        if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
          goto LABEL_14;
      }
    }
    else if (a3 == 3)
    {
      strcpy(v15, "\r\nAT+OK\r\n");
      sub_10023E880((uint64_t)sub_10015C490, a1, v15, 0xAuLL);
    }
    else
    {
      LODWORD(v12) = 7;
      WORD2(v12) = a1;
      v13 = a2;
      LOWORD(v14) = a3;
      (*(void (**)(uint64_t *))(qword_100983B08 + 392))(&v12);
    }
  }
}

uint64_t sub_10015CBDC(unsigned int a1, int a2)
{
  uint64_t v4;
  uint64_t v6;
  NSObject *v7;
  int v8;
  BOOL v9;
  uint64_t v10;
  int *v11;
  int v12;
  NSObject *v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  void (*v17)(uint64_t *);
  uint64_t v18;
  const void *v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v21 = 0;
  v22 = 0;
  v23 = 0;
  v4 = qword_100983B08;
  if ((*(_DWORD *)(qword_100983B08 + 48 * a1 + 32) | 4) == 4)
  {
    v6 = 0;
  }
  else
  {
    v6 = sub_10018D2CC(*(_QWORD *)(qword_100983B08 + 48 * a1 + 8));
    if ((_DWORD)v6)
    {
      if (sub_10005549C())
      {
        sub_100054530("ScoDisconnect failed - %!, setting as disconnected, State %d\n", v6, *(unsigned int *)(qword_100983B08 + 48 * a1 + 32));
        v7 = sub_1000544A0(0x10u);
        if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
          sub_1006CEEC0();
      }
      v8 = 0;
    }
    else
    {
      v8 = 4;
    }
    v4 = qword_100983B08;
    *(_DWORD *)(qword_100983B08 + 48 * a1 + 32) = v8;
  }
  if (*(_BYTE *)(v4 + 48 * a1 + 28))
    v9 = *(_BYTE *)(v4 + 48 * a1 + 28) == 5;
  else
    v9 = 1;
  if (!v9)
  {
    v14 = sub_10023EEBC(*(unsigned __int16 *)(v4 + 48 * a1), a2);
    v6 = v14;
    if (!(_DWORD)v14)
    {
      v4 = qword_100983B08;
      *(_BYTE *)(qword_100983B08 + 48 * a1 + 28) = 4;
      goto LABEL_17;
    }
    if (sub_10005549C())
    {
      sub_100054530("RFCOMM_Disconnect failed - %!, forcing disconnect!, state %d\n", v6, *(unsigned __int8 *)(qword_100983B08 + 48 * a1 + 28));
      v15 = sub_1000544A0(0x10u);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
        sub_1006CEEC0();
    }
    goto LABEL_16;
  }
  if ((_DWORD)v6)
  {
LABEL_16:
    sub_10015CE8C(a1);
    v4 = qword_100983B08;
  }
LABEL_17:
  if (*(_DWORD *)(v4 + 48 * a1 + 32) || *(_BYTE *)(v4 + 48 * a1 + 28))
  {
    v10 = v4 + 48 * a1;
    v12 = *(_DWORD *)(v10 + 24);
    v11 = (int *)(v10 + 24);
    if (!v12)
    {
      v20[1] = (const void *)(v4 + 48 * a1);
      v20[0] = (const void *)2;
      v6 = sub_10004A9EC((uint64_t)sub_10015CF38, v20, 50, v11);
      if ((_DWORD)v6)
      {
        if (sub_10005549C())
        {
          sub_100054530("Register disconnect timeout handler failed %!\n", v6);
          v13 = sub_1000544A0(0x10u);
          if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
            sub_1006CEEC0();
        }
      }
    }
  }
  else
  {
    v16 = *(unsigned int *)(v4 + 48 * a1 + 24);
    if ((_DWORD)v16)
    {
      sub_100049F6C(v16);
      v4 = qword_100983B08;
      *(_DWORD *)(qword_100983B08 + 48 * a1 + 24) = 0;
    }
    v17 = *(void (**)(uint64_t *))(v4 + 392);
    if (v17)
    {
      v18 = v4 + 48 * a1;
      WORD2(v21) = *(_WORD *)v18;
      LODWORD(v21) = 2;
      LODWORD(v22) = *(_DWORD *)(v18 + 4);
      v17(&v21);
    }
    sub_10015BC68(a1);
  }
  return v6;
}

void sub_10015CE8C(unsigned int a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;

  v2 = qword_100983B08 + 48 * a1;
  *(_BYTE *)(v2 + 28) = 5;
  v3 = sub_10018070C(v2 + 16);
  if ((_DWORD)v3)
  {
    v4 = v3;
    if (sub_10005549C())
    {
      sub_100054530("ForceDisconnect failed - %!, assuming already disconnected\n", v4);
      v5 = sub_1000544A0(0x10u);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        sub_1006CEEC0();
    }
    *(_BYTE *)(qword_100983B08 + 48 * a1 + 28) = 0;
  }
}

uint64_t sub_10015CF38(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  result = sub_10015B9C8(**(unsigned __int16 **)(a1 + 8));
  if ((_DWORD)result != 8)
  {
    v2 = result;
    *(_DWORD *)(qword_100983B08 + 48 * result + 24) = 0;
    sub_10015CE8C(result);
    *(_DWORD *)(qword_100983B08 + 48 * v2 + 4) = 1814;
    return sub_10015CBDC(v2, 1814);
  }
  return result;
}

uint64_t sub_10015CFB0(uint64_t result, uint64_t a2, uint64_t a3)
{
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  unsigned int v8;
  BOOL v9;
  int v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = 0;
  v4 = qword_100983B08;
  v5 = -384;
  while (*(_DWORD *)(qword_100983B08 + v5 + 400) != *(_DWORD *)a3
       || *(unsigned __int16 *)(qword_100983B08 + v5 + 404) != *(unsigned __int16 *)(a3 + 4))
  {
    ++v3;
    v5 += 48;
    if (!v5)
      return result;
  }
  if (v3 != 8)
  {
    v12 = 0;
    v13 = 0;
    v14 = 0;
    v7 = qword_100983B08 + v5;
    if ((_DWORD)result)
    {
      if (*(_DWORD *)(v7 + 416) == 3)
        return result;
      *(_DWORD *)(v7 + 416) = 0;
    }
    else
    {
      *(_QWORD *)(v7 + 392) = a2;
      *(_DWORD *)(v7 + 416) = 3;
    }
    LODWORD(v12) = 5;
    WORD2(v12) = *(_WORD *)(v4 + v5 + 384);
    LODWORD(v13) = result;
    result = (*(uint64_t (**)(uint64_t *))(v4 + 392))(&v12);
    v8 = *(unsigned __int8 *)(qword_100983B08 + v5 + 412);
    v9 = v8 > 5;
    v10 = (1 << v8) & 0x31;
    if (!v9 && v10 != 0)
      return sub_10015CBDC(v3, *(_DWORD *)(qword_100983B08 + v5 + 388));
  }
  return result;
}

void sub_10015D0AC(int a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  NSObject *v10;
  uint64_t v11;
  unsigned int v12;
  BOOL v13;
  int v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (*(_BYTE *)(a2 + 2) != 1)
    sub_100253460();
  v6 = 0;
  v16 = 0;
  v17 = 0;
  v18 = 0;
  v7 = qword_100983B08;
  v8 = -384;
  while (*(_QWORD *)(qword_100983B08 + v8 + 392) != a2)
  {
    ++v6;
    v8 += 48;
    if (!v8)
    {
      if (sub_10005549C())
      {
        sub_100054530("Could not find sco handle for device %d", a2);
        v9 = sub_1000544A0(0x10u);
        if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        {
LABEL_8:
          sub_1006CEEC0();
          return;
        }
      }
      return;
    }
  }
  if (v6 != 8)
  {
    if (a1)
    {
      if (sub_10005549C())
      {
        sub_100054530("SCO disconnect failed for handle %d, %!", *(unsigned __int16 *)(qword_100983B08 + v8 + 384), a3);
        v10 = sub_1000544A0(0x10u);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
          goto LABEL_8;
      }
    }
    else
    {
      v11 = qword_100983B08 + v8;
      *(_DWORD *)(v11 + 416) = 0;
      *(_QWORD *)(v11 + 392) = 0;
      LODWORD(v16) = 6;
      WORD2(v16) = *(_WORD *)(v7 + v8 + 384);
      LODWORD(v17) = 0;
      (*(void (**)(uint64_t *))(v7 + 392))(&v16);
      v12 = *(unsigned __int8 *)(qword_100983B08 + v8 + 412);
      v13 = v12 > 5;
      v14 = (1 << v12) & 0x31;
      if (!v13 && v14 != 0)
        sub_10015CBDC(v6, *(_DWORD *)(qword_100983B08 + v8 + 388));
    }
  }
}

uint64_t sub_10015D230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8 = 0;
  v9 = qword_100983B08;
  while (*(_DWORD *)(qword_100983B08 + v8 + 16) != *(_DWORD *)a1
       || *(unsigned __int16 *)(qword_100983B08 + v8 + 20) != *(unsigned __int16 *)(a1 + 4))
  {
    v8 += 48;
    if (v8 == 384)
      return sub_10018E4FC(a1, 0, a3, a4, a5, a6, a7, a8);
  }
  v13 = 0;
  v14 = 0;
  v15 = 0;
  v11 = qword_100983B08 + v8;
  if (*(_BYTE *)(qword_100983B08 + v8 + 28) == 3 && (*(_DWORD *)(v11 + 32) | 2) == 2)
  {
    *(_DWORD *)(v11 + 32) = 1;
    LODWORD(v13) = 3;
    LODWORD(v14) = 1;
    WORD2(v13) = *(_WORD *)(v9 + v8);
    return (*(uint64_t (**)(uint64_t *))(v9 + 392))(&v13);
  }
  return sub_10018E4FC(a1, 0, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_10015D2EC(char *a1, uint64_t a2, _WORD *a3)
{
  uint64_t v3;
  int v4;
  char v5;

  v3 = 22;
  if (a1 && a3)
  {
    if (a2)
    {
      LOWORD(v4) = *a3;
      do
      {
        v5 = *a1++;
        v4 = word_100739960[(v5 ^ v4)] ^ ((unsigned __int16)(v4 & 0xFF00) >> 8);
        *a3 = v4;
        --a2;
      }
      while (a2);
    }
    return 0;
  }
  return v3;
}

uint64_t sub_10015D338(int a1)
{
  uint64_t v1;
  const void *v3[2];
  uint64_t v4;

  v1 = sub_10015D394(a1);
  v4 = v1;
  if (!v1)
    sub_100253460();
  v3[1] = &v4;
  v3[0] = (const void *)8;
  return sub_10004A9EC((uint64_t)sub_10015D3EC, v3, 30, (int *)(v1 + 200));
}

uint64_t sub_10015D394(int a1)
{
  uint64_t result;
  uint64_t v3;

  result = 0;
  if (a1 && dword_10099919C)
  {
    v3 = *(unsigned __int8 *)(qword_100983B40 + 36);
    if (*(_BYTE *)(qword_100983B40 + 36))
    {
      for (result = *(_QWORD *)qword_100983B40;
            !*(_DWORD *)(result + 196) || *(unsigned __int16 *)(result + 192) != a1;
            result += 216)
      {
        if (!--v3)
          return 0;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void sub_10015D3EC(uint64_t a1)
{
  uint64_t v1;
  NSObject *v2;
  void (*v3)(uint64_t);
  NSObject *v4;

  v1 = **(_QWORD **)(a1 + 8);
  if (sub_10005549C()
    && (sub_100054530("Didn't get transaction response within timeout period"),
        v2 = sub_1000544A0(0x15u),
        os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)))
  {
    sub_1006CE7A4();
    if (v1)
    {
LABEL_4:
      *(_DWORD *)(v1 + 200) = 0;
      v3 = *(void (**)(uint64_t))(*(_QWORD *)(qword_100983B40 + 8) + 40);
      if (v3)
        v3(v1);
      return;
    }
  }
  else if (v1)
  {
    goto LABEL_4;
  }
  if (sub_10005549C())
  {
    sub_100054530("Invalid HID host handle in transaction timeout");
    v4 = sub_1000544A0(0x15u);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
}

void sub_10015D4B4(int a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;

  v2 = sub_10015D394(a1);
  if (v2)
  {
    v3 = v2;
    v4 = *(unsigned int *)(v2 + 200);
    if ((_DWORD)v4)
    {
      sub_100049F6C(v4);
      *(_DWORD *)(v3 + 200) = 0;
    }
  }
  else if (sub_10005549C())
  {
    sub_100054530("CancelTransactionTimeout called on invalid handle %d", a1);
    v5 = sub_1000544A0(0x15u);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
}

double sub_10015D540(uint64_t a1)
{
  double result;

  if (!a1)
    sub_100253460();
  if (!*(_DWORD *)(a1 + 196))
    sub_100253460();
  if (*(_DWORD *)(a1 + 200))
    sub_10015D4B4(*(unsigned __int16 *)(a1 + 192));
  *(_QWORD *)(a1 + 208) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  --*(_BYTE *)(qword_100983B40 + 37);
  return result;
}

uint64_t sub_10015D5B8(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = 0;
  if (a1 && dword_10099919C)
  {
    v3 = *(unsigned __int8 *)(qword_100983B40 + 36);
    if (*(_BYTE *)(qword_100983B40 + 36))
    {
      for (result = *(_QWORD *)qword_100983B40; ; result += 216)
      {
        if (*(_DWORD *)(result + 196))
        {
          if (*(_DWORD *)a1 == *(_DWORD *)result && *(unsigned __int16 *)(a1 + 4) == *(unsigned __int16 *)(result + 4))
            break;
        }
        if (!--v3)
          return 0;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10015D620(int a1)
{
  uint64_t result;
  uint64_t v3;

  result = 0;
  if (a1 && dword_10099919C)
  {
    v3 = *(unsigned __int8 *)(qword_100983B40 + 36);
    if (*(_BYTE *)(qword_100983B40 + 36))
    {
      for (result = *(_QWORD *)qword_100983B40;
            *(unsigned __int16 *)(result + 16) != a1 && *(unsigned __int16 *)(result + 104) != a1;
            result += 216)
      {
        if (!--v3)
          return 0;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10015D67C(int a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_10015D394(a1);
  v4 = v3 + 104;
  v5 = v3 + 16;
  if (a2 != 17)
    v5 = 0;
  if (a2 != 19)
    v4 = v5;
  if (v3)
    return v4;
  else
    return 0;
}

uint64_t sub_10015D6BC(_QWORD *a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v3;
  _BYTE *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  NSObject *v13;

  if (dword_10099919C)
    return 119;
  if (!a1)
  {
    sub_100253460();
    return 101;
  }
  if (!*a1 || !a1[1] || !a1[2] || !a1[3] || !a1[4])
  {
    sub_100253460();
    if (!*a1)
      return 101;
  }
  if (!a1[1] || !a1[2] || !a1[3] || !a1[4])
    return 101;
  v7 = sub_100114588(0x28uLL);
  qword_100983B40 = (uint64_t)v7;
  if (!v7)
    return 106;
  v7[37] = 0;
  v7[36] = a2;
  v8 = sub_100114588(216 * a2);
  v9 = qword_100983B40;
  *(_QWORD *)qword_100983B40 = v8;
  *(_QWORD *)(v9 + 8) = a1;
  if (v8)
  {
    v10 = sub_1001E3870(17, (uint64_t)sub_10015D8C0);
    if ((_DWORD)v10)
    {
      v3 = v10;
      if (!sub_10005549C())
        goto LABEL_25;
      sub_100054530("Couldn't regster OI_PSM_HID_CONTROL: %!", v3);
      v11 = sub_1000544A0(0x15u);
      if (!os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
        goto LABEL_25;
    }
    else
    {
      v3 = sub_1001E3870(19, (uint64_t)sub_10015D9A8);
      if (!(_DWORD)v3)
      {
        dword_10099919C = 1;
        *a3 = qword_100983B40;
        return v3;
      }
      if (!sub_10005549C())
        goto LABEL_25;
      sub_100054530("Couldn't regster OI_PSM_HID_INTERRUPT: %!", v3);
      v13 = sub_1000544A0(0x15u);
      if (!os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
        goto LABEL_25;
    }
    sub_1006CE7A4();
  }
  else
  {
    v3 = 106;
  }
LABEL_25:
  if (*(_QWORD *)qword_100983B40)
  {
    sub_100053298(*(void **)qword_100983B40);
    *(_QWORD *)qword_100983B40 = 0;
  }
  sub_1001E3A38(17);
  sub_1001E3A38(19);
  if (qword_100983B40)
  {
    sub_100053298((void *)qword_100983B40);
    qword_100983B40 = 0;
  }
  return v3;
}

void sub_10015D8C0(int a1, int *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v8 = 0;
  if (a1 != 17)
    sub_100253460();
  if (dword_10099919C || (sub_100253460(), dword_10099919C))
  {
    v5 = sub_10015DC88(a2, 0, (uint64_t)&v8);
    v6 = v8;
    if (v5)
    {
      if (v8)
        v7 = *(_QWORD *)(v8 + 24);
      else
        v7 = 0;
      sub_1001DDCAC((uint64_t)sub_10015DDE4, (uint64_t)sub_10015DFD0, (uint64_t)sub_10015E0E8, a3, v7, 0, (uint64_t)&unk_100739B60);
    }
    else
    {
      *(_WORD *)(v8 + 192) = a3;
      *(_WORD *)(v6 + 16) = a3;
      *(_DWORD *)(v6 + 40) = 1;
      *(_BYTE *)(v6 + 96) = 0;
      *(_BYTE *)(v6 + 7) = 0;
      (**(void (***)(int *, uint64_t))(qword_100983B40 + 8))(a2, a3);
    }
  }
}

void sub_10015D9A8(int a1, uint64_t a2, unsigned int a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  NSObject *v8;
  NSObject *v9;

  if (a1 != 19)
    sub_100253460();
  if (dword_10099919C || (sub_100253460(), dword_10099919C))
  {
    v5 = sub_10015D5B8(a2);
    if (v5)
    {
      if ((*(_DWORD *)(v5 + 40) - 1) < 2)
      {
        *(_WORD *)(v5 + 104) = a3;
        v6 = 1;
        *(_DWORD *)(v5 + 128) = 1;
        v7 = *(_QWORD *)(v5 + 112);
LABEL_15:
        sub_1001DDCAC((uint64_t)sub_10015EC64, (uint64_t)sub_10015ED90, (uint64_t)sub_10015E0E8, a3, v7, v6, (uint64_t)&unk_100739B60);
        return;
      }
      if (!sub_10005549C()
        || (sub_100054530("Control channel must be connected first. Refusing."),
            v9 = sub_1000544A0(0x15u),
            !os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)))
      {
LABEL_14:
        v6 = 0;
        v7 = 0;
        goto LABEL_15;
      }
    }
    else
    {
      if (!sub_10005549C())
        goto LABEL_14;
      sub_100054530("No connection associated with this BDADDR.");
      v8 = sub_1000544A0(0x15u);
      if (!os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
        goto LABEL_14;
    }
    sub_1006CE7A4();
    goto LABEL_14;
  }
}

uint64_t sub_10015DAD8()
{
  uint64_t result;
  uint64_t v1;

  if (!dword_10099919C)
    return 121;
  if (*(_BYTE *)(qword_100983B40 + 37))
    return 141;
  result = sub_1001E3A38(17);
  if (!(_DWORD)result)
  {
    result = sub_1001E3A38(19);
    if (!(_DWORD)result)
    {
      v1 = qword_100983B40;
      *(_QWORD *)(qword_100983B40 + 8) = 0;
      *(_BYTE *)(v1 + 36) = 0;
      if (*(_QWORD *)v1)
      {
        sub_100053298(*(void **)v1);
        v1 = qword_100983B40;
        *(_QWORD *)qword_100983B40 = 0;
      }
      sub_100053298((void *)v1);
      result = 0;
      qword_100983B40 = 0;
      dword_10099919C = 0;
    }
  }
  return result;
}

uint64_t sub_10015DB6C(int *a1, uint64_t *a2, _WORD *a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  __int16 v14;
  uint64_t v15;
  uint64_t v17;

  if (!dword_10099919C)
    return 408;
  v17 = 0;
  v8 = sub_10015DC88(a1, 1, (uint64_t)&v17);
  if (!(_DWORD)v8)
  {
    if (a2)
    {
      v9 = v17;
      v10 = *a2;
      v11 = a2[1];
      *(_QWORD *)(v17 + 24) = *a2;
      *(_QWORD *)(v9 + 32) = v11;
      *(_QWORD *)(v9 + 112) = a2[2];
    }
    else
    {
      v10 = 0;
      v11 = 0;
      v9 = v17;
      *(_QWORD *)(v17 + 112) = 0;
      *(_QWORD *)(v9 + 24) = 0;
      *(_QWORD *)(v9 + 32) = 0;
    }
    *(_QWORD *)(v9 + 120) = v11;
    if (a4)
      v12 = a4;
    else
      v12 = &unk_100739B60;
    v8 = sub_1001DD1A8((uint64_t)sub_10015DDE4, (uint64_t)sub_10015DFD0, (uint64_t)sub_10015E0E8, 0x11u, v9, v10, (_WORD *)(v9 + 16), (uint64_t)v12);
    v13 = v17;
    if ((_DWORD)v8)
    {
      sub_10015D540(v17);
    }
    else
    {
      v14 = *(_WORD *)(v17 + 16);
      *(_WORD *)(v17 + 192) = v14;
      *(_DWORD *)(v13 + 40) = 1;
      *(_DWORD *)(v13 + 196) = 1;
      *a3 = v14;
      v15 = sub_10019AEA4((uint64_t)a1);
      v8 = 0;
      if (v15)
        *(_BYTE *)(v15 + 256) = 0;
    }
  }
  return v8;
}

uint64_t sub_10015DC88(int *a1, char a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t result;
  int v13;
  NSObject *v14;
  NSObject *v15;

  if (!a3)
    sub_100253460();
  v6 = qword_100983B40;
  v7 = *(unsigned __int8 *)(qword_100983B40 + 36);
  if (*(_BYTE *)(qword_100983B40 + 36))
  {
    v8 = 0;
    v9 = *(_QWORD *)qword_100983B40;
    do
    {
      v10 = v9;
      if (*(_DWORD *)(v9 + 196))
      {
        v11 = *a1 == *(_DWORD *)v9 && *((unsigned __int16 *)a1 + 2) == *(unsigned __int16 *)(v9 + 4);
        v10 = v8;
        if (v11)
        {
          if (sub_10005549C())
          {
            sub_100054530("A connection to %: already exists", a1);
            v15 = sub_1000544A0(0x15u);
            if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
              sub_1006CE7A4();
          }
          return 133;
        }
      }
      v9 += 216;
      v8 = v10;
      --v7;
    }
    while (v7);
    if (!v10)
      goto LABEL_13;
    result = 0;
    *(_QWORD *)a3 = v10;
    ++*(_BYTE *)(v6 + 37);
    *(_DWORD *)(v10 + 196) = 1;
    v13 = *a1;
    *(_WORD *)(v10 + 4) = *((_WORD *)a1 + 2);
    *(_DWORD *)v10 = v13;
    *(_BYTE *)(*(_QWORD *)a3 + 6) = a2;
  }
  else
  {
LABEL_13:
    if (sub_10005549C())
    {
      sub_100054530("Too many connections. Refusing connection allocation request.");
      v14 = sub_1000544A0(0x15u);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 104;
  }
  return result;
}

void sub_10015DDE4(int a1, __int16 a2, __int16 a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  NSObject *v12;
  NSObject *v13;

  if (!dword_10099919C)
  {
    sub_100253460();
    if (!dword_10099919C)
      return;
  }
  v8 = sub_10015D620(a1);
  if (!v8)
  {
    if (!sub_10005549C())
      return;
    sub_100054530("Unexpected L2cap connection confirmation");
    v12 = sub_1000544A0(0x15u);
    if (!os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      return;
LABEL_11:
    sub_1006CE7A4();
    return;
  }
  v9 = v8;
  if ((_DWORD)a4)
  {
    v10 = *(unsigned __int16 *)(v8 + 192);
    if (sub_10005549C())
    {
      sub_100054530("L2capControlConnectCfm: %!", a4);
      v11 = sub_1000544A0(0x15u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(qword_100983B40 + 8) + 8))(v10, a4);
    sub_10015D540(v9);
    return;
  }
  if (*(_DWORD *)(v8 + 40) != 1)
  {
    if (!sub_10005549C())
      return;
    sub_100054530("Unexpected L2cap connection confirmation");
    v13 = sub_1000544A0(0x15u);
    if (!os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      return;
    goto LABEL_11;
  }
  *(_DWORD *)(v8 + 40) = 2;
  *(_WORD *)(v8 + 44) = a2;
  *(_WORD *)(v8 + 46) = a3;
  if (*(_BYTE *)(v8 + 6))
  {
    if (sub_1001DD1A8((uint64_t)sub_10015EC64, (uint64_t)sub_10015ED90, (uint64_t)sub_10015E0E8, 0x13u, v8, *(_QWORD *)(v8 + 112), (_WORD *)(v8 + 104), (uint64_t)&unk_100739B60))
    {
      *(_DWORD *)(v9 + 196) = 5;
      sub_10015EE88(v9, 436);
    }
    else
    {
      *(_QWORD *)(v9 + 128) = 1;
    }
  }
}

void sub_10015DFD0(int a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;

  if (dword_10099919C || (sub_100253460(), dword_10099919C))
  {
    v4 = sub_10015D620(a1);
    if (v4)
    {
      v5 = v4;
      if ((*(_DWORD *)(v4 + 196) | 4) == 5)
      {
        (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(qword_100983B40 + 8) + 8))(*(unsigned __int16 *)(v4 + 192), 2603);
LABEL_6:
        sub_10015D540(v5);
        return;
      }
      if (!*(_DWORD *)(v4 + 128))
      {
        (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(qword_100983B40 + 8) + 16))(*(unsigned __int16 *)(v4 + 192), a2);
        goto LABEL_6;
      }
      *(_WORD *)(v4 + 16) = 0;
      *(_QWORD *)(v4 + 40) = 0;
      sub_10015E404(v4, a2);
    }
    else if (sub_10005549C())
    {
      sub_100054530("Unexpected L2cap disconnect indication");
      v6 = sub_1000544A0(0x15u);
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
}

void sub_10015E0E8(int a1, unsigned __int8 *a2, unsigned int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  unsigned __int16 *v10;
  unsigned int v11;
  unsigned __int8 *v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  void (*v17)(_QWORD, uint64_t, uint64_t, unsigned __int8 *, _QWORD, _BOOL8, uint64_t);
  NSObject *v18;
  NSObject *v19;
  NSObject *v20;

  if (!dword_10099919C)
  {
    sub_100253460();
    if (!dword_10099919C)
      return;
  }
  v9 = sub_10015D620(a1);
  if (!v9)
  {
    if (!sub_10005549C())
      return;
    sub_100054530("Unexpected L2capRecvDataInd");
    v18 = sub_1000544A0(0x15u);
    if (!os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
      return;
LABEL_20:
    sub_1006CE7A4();
    return;
  }
  if (!a3)
  {
    if (!sub_10005549C())
      return;
    sub_100054530("0 bytes received");
    v19 = sub_1000544A0(0x15u);
    if (!os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
      return;
    goto LABEL_20;
  }
  v10 = (unsigned __int16 *)v9;
  v11 = *(unsigned __int16 *)(v9 + 44);
  if (v11 < a3)
  {
    sub_100253460();
    v11 = v10[22];
  }
  v13 = *a2;
  v12 = a2 + 1;
  v14 = v13 >> 4;
  v15 = v13 & 0xF;
  if (v10[8] == a1)
  {
    v16 = v11 > a3;
    v17 = *(void (**)(_QWORD, uint64_t, uint64_t, unsigned __int8 *, _QWORD, _BOOL8, uint64_t))(*(_QWORD *)(qword_100983B40 + 8) + 24);
LABEL_17:
    v17(v10[96], v14, v15, v12, (unsigned __int16)(a3 - 1), v16, a5);
    return;
  }
  if (v10[52] == a1)
  {
    v16 = v11 > a3;
    v17 = *(void (**)(_QWORD, uint64_t, uint64_t, unsigned __int8 *, _QWORD, _BOOL8, uint64_t))(*(_QWORD *)(qword_100983B40 + 8) + 32);
    goto LABEL_17;
  }
  if (sub_10005549C())
  {
    sub_100054530("recvDataInd cid (%d) doesn't match control (%d) or interrupt (%d)", a1, v10[8], v10[52]);
    v20 = sub_1000544A0(0x15u);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
      goto LABEL_20;
  }
}

uint64_t sub_10015E2C0(int a1, uint64_t a2, void *a3, int a4)
{
  int8x16_t *v7;
  uint64_t v8;
  uint64_t v9;
  int8x16_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;

  if (!dword_10099919C)
    return 408;
  v7 = (int8x16_t *)sub_10015D394(a1);
  if (!v7)
    return 414;
  v8 = (uint64_t)v7;
  if (a2)
  {
    v9 = *(_QWORD *)a2;
    v10 = *(int8x16_t *)(a2 + 8);
  }
  else
  {
    v9 = 0;
    v10 = 0uLL;
  }
  v7[1].i64[1] = v9;
  v7[2].i64[0] = v10.i64[0];
  v7[7] = vextq_s8(v10, v10, 8uLL);
  if (a3)
    v12 = a3;
  else
    v12 = &unk_100739B60;
  v13 = sub_1001DDCAC((uint64_t)sub_10015DDE4, (uint64_t)sub_10015DFD0, (uint64_t)sub_10015E0E8, v7[1].u16[0], v9, a4, (uint64_t)v12);
  v11 = v13;
  if (a4 && !(_DWORD)v13 || (sub_10015D540(v8), !(_DWORD)v11))
  {
    v14 = sub_10019AEA4(v8);
    v11 = 0;
    if (v14)
      *(_BYTE *)(v14 + 256) = 0;
  }
  return v11;
}

uint64_t sub_10015E3A4(int a1)
{
  uint64_t v1;

  if (!dword_10099919C)
    return 408;
  v1 = sub_10015D394(a1);
  if (!v1)
    return 414;
  if (*(_DWORD *)(v1 + 196) != 2)
    return 122;
  *(_DWORD *)(v1 + 196) = 4;
  sub_10015E404(v1, 436);
  return 0;
}

void sub_10015E404(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  NSObject *v4;

  v3 = *(unsigned __int16 *)(a1 + 104);
  if (*(_WORD *)(a1 + 104))
  {
    *(_DWORD *)(a1 + 128) = 4;
    sub_10015EF08((uint64_t)sub_10015ED90, v3, a2);
  }
  else if (sub_10005549C())
  {
    sub_100054530("DoInterruptDisconnect called on connection with cid 0");
    v4 = sub_1000544A0(0x15u);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
}

uint64_t sub_10015E484(uint64_t a1, unsigned int a2, int a3, int a4, int a5)
{
  char *v10;
  char *v11;
  NSObject *v12;
  uint64_t v13;
  NSObject *v14;
  uint8_t buf[4];
  void *v17;

  if (!dword_10099919C)
    return 408;
  if (!sub_10015D394(a2))
    return 414;
  v10 = sub_100253D54(0);
  if (!v10)
    return 106;
  v11 = v10;
  if (sub_10005549C())
  {
    sub_100054530("SendSimple on handle 0x%x for channel 0x%x transtype 0x%x transparam 0x%x", a2, a3, a4, a5);
    v12 = sub_1000544A0(0x15u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 136446210;
      v17 = sub_100054494();
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, " %{public}s", buf, 0xCu);
    }
  }
  v13 = sub_10015E63C(a1, a2, a3, a4, a5, (uint64_t)v11);
  if ((_DWORD)v13)
  {
    if (sub_10005549C())
    {
      sub_100054530("SendSimple failed on handle 0x%x with status %!", a2, v13);
      v14 = sub_1000544A0(0x15u);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    sub_100254090(v11);
  }
  return v13;
}

uint64_t sub_10015E63C(uint64_t a1, unsigned int a2, int a3, char a4, char a5, uint64_t a6)
{
  uint64_t v12;
  int v13;
  NSObject *v14;
  uint64_t v15;
  uint64_t v17;
  NSObject *v18;
  NSObject *v19;
  NSObject *v20;

  if (!dword_10099919C)
    return 408;
  if (!a6)
  {
    sub_100253460();
    return 101;
  }
  v12 = sub_10015D394(a2);
  if (!v12)
    return 414;
  v13 = *(_DWORD *)(v12 + 196);
  if (v13 != 2)
  {
    if (v13 != 4)
    {
      if (sub_10005549C())
      {
        sub_100054530("connection isn't in connected state");
        v14 = sub_1000544A0(0x15u);
        if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
    }
    return 122;
  }
  if (a3 != 19)
  {
    if (a3 == 17)
    {
      v17 = v12 + 16;
      goto LABEL_19;
    }
    if (sub_10005549C())
    {
      sub_100054530("channel must be OI_PSM_HID_INTERRUPT or OI_PSM_HID_CONTROL");
      v19 = sub_1000544A0(0x15u);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 101;
  }
  v17 = v12 + 104;
LABEL_19:
  if (*(_QWORD *)(v17 + 72))
  {
    if (sub_10005549C())
    {
      sub_100054530("SendMbuf busy for handle 0x%x", a2);
      v18 = sub_1000544A0(0x15u);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 410;
  }
  else
  {
    *(_QWORD *)(v17 + 72) = a6;
    *(_QWORD *)(v17 + 48) = a1;
    *(_BYTE *)(v17 + 57) = a4;
    *(_BYTE *)(v17 + 58) = a5;
    v15 = sub_10015EA94((unsigned __int16 *)v17, 1);
    if ((_DWORD)v15)
    {
      if (sub_10005549C())
      {
        sub_100054530("SendFragment failed for handle 0x%x with status %!", a2, v15);
        v20 = sub_1000544A0(0x15u);
        if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      *(_QWORD *)(v17 + 72) = 0;
    }
  }
  return v15;
}

uint64_t sub_10015E844(uint64_t a1, unsigned int a2, int a3, int a4, int a5, char *a6, size_t a7)
{
  NSObject *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  NSObject *v20;
  NSObject *v21;
  uint8_t buf[4];
  void *v24;

  if (!dword_10099919C)
    return 408;
  if (sub_10005549C())
  {
    sub_100054530("Endpoint SendData(sendCfm=0x%08x, handle=0x%x, chan=%d, transType=0x%1x, transParam=0x%1x, len=%d)", a1, a2, a3, a4, a5, a7);
    v14 = sub_1000544A0(0x15u);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 136446210;
      v24 = sub_100054494();
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, " %{public}s", buf, 0xCu);
    }
  }
  v15 = sub_10015D394(a2);
  if (!v15)
    return 414;
  if (a3 == 19)
  {
    v16 = v15 + 104;
LABEL_12:
    v18 = sub_100254200(a6, a7, 2);
    if (!v18)
      return 106;
    v19 = v18;
    v17 = sub_10015E63C(a1, a2, a3, a4, a5, (uint64_t)v18);
    if ((_DWORD)v17)
    {
      if (sub_10005549C())
      {
        sub_100054530("Endpoint SendByte failed on handle 0x%x with status %!", a2, v17);
        v20 = sub_1000544A0(0x15u);
        if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      *(_QWORD *)(v16 + 32) = 0;
      *(_WORD *)(v16 + 40) = 0;
      sub_100254090(v19);
    }
    else
    {
      *(_QWORD *)(v16 + 32) = a6;
      *(_WORD *)(v16 + 40) = a7;
    }
    return v17;
  }
  if (a3 == 17)
  {
    v16 = v15 + 16;
    goto LABEL_12;
  }
  if (sub_10005549C())
  {
    sub_100054530("channel must be OI_PSM_HID_INTERRUPT or OI_PSM_HID_CONTROL");
    v21 = sub_1000544A0(0x15u);
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
  return 101;
}

uint64_t sub_10015EA94(unsigned __int16 *a1, int a2)
{
  uint64_t v4;
  unsigned __int16 v5;
  unsigned int v6;
  unsigned __int8 *v7;
  unsigned __int8 *v8;
  char v9;
  uint64_t v10;

  v4 = *((_QWORD *)a1 + 9);
  if (a2)
    sub_100254518(v4, (unsigned __int16)(a1[15] - 1));
  else
    sub_100254564(v4, (unsigned __int16)(a1[15] - 1));
  v5 = *(_WORD *)(*((_QWORD *)a1 + 9) + 4) + 1;
  v6 = a1[15];
  if (v6 < v5)
  {
    sub_100253460();
    v6 = a1[15];
  }
  *((_BYTE *)a1 + 56) = v6 != v5;
  v7 = (unsigned __int8 *)sub_100253D54(2u);
  if (!v7)
    return 106;
  v8 = v7;
  if (a2)
    v9 = 16 * *((_BYTE *)a1 + 57);
  else
    v9 = -80;
  *((_BYTE *)a1 + 59) = a1[29] & 0xF | v9;
  v10 = sub_10005336C(v7, (char *)a1 + 59, 1uLL, 2u);
  if ((_DWORD)v10
    || (v10 = sub_10025444C(v8, *((_QWORD *)a1 + 9)), (_DWORD)v10)
    || (*((_QWORD *)v8 + 1) = a1, v10 = sub_1001DBC18((uint64_t)sub_10015EBAC, *a1, 0, (uint64_t)v8, 0), (_DWORD)v10))
  {
    sub_100254090(v8);
  }
  return v10;
}

void sub_10015EBAC(int a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  unsigned __int16 *v7;
  int v8;
  BOOL v9;
  void *v10;
  void (*v11)(unsigned __int16 *, void *, uint64_t);

  if (!a2)
    sub_100253460();
  v7 = (unsigned __int16 *)a2[1];
  sub_100254090(a2);
  if (!v7)
    sub_100253460();
  if (*v7 != a1)
    sub_100253460();
  v8 = *((unsigned __int8 *)v7 + 56);
  if (!(_DWORD)a4 && !*((_BYTE *)v7 + 56))
    a4 = sub_10015EA94(v7, 0);
  if (v8)
    v9 = 0;
  else
    v9 = (_DWORD)a4 == 0;
  if (!v9)
  {
    v10 = (void *)*((_QWORD *)v7 + 9);
    *((_QWORD *)v7 + 9) = 0;
    v11 = (void (*)(unsigned __int16 *, void *, uint64_t))*((_QWORD *)v7 + 6);
    if (v11)
      v11(v7, v10, a4);
    if (v10)
      sub_100254090(v10);
  }
}

void sub_10015EC64(int a1, __int16 a2, __int16 a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;

  if (dword_10099919C || (sub_100253460(), dword_10099919C))
  {
    v8 = sub_10015D620(a1);
    if (v8 && (v9 = v8, *(_DWORD *)(v8 + 128) == 1))
    {
      v10 = *(unsigned __int16 *)(v8 + 192);
      if ((_DWORD)a4)
      {
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(qword_100983B40 + 8) + 8))(v10, a4);
        sub_10015D540(v9);
      }
      else
      {
        *(_DWORD *)(v9 + 196) = 2;
        *(_DWORD *)(v9 + 128) = 2;
        *(_WORD *)(v9 + 132) = a2;
        *(_WORD *)(v9 + 134) = a3;
        *(_BYTE *)(v9 + 8) = 1;
        (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(qword_100983B40 + 8) + 8))(v10, 0);
      }
    }
    else if (sub_10005549C())
    {
      sub_100054530("Unexpected L2cap connection confirmation");
      v11 = sub_1000544A0(0x15u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
}

double sub_10015ED90(int a1, uint64_t a2)
{
  double result;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;

  if (dword_10099919C || (sub_100253460(), dword_10099919C))
  {
    v5 = sub_10015D620(a1);
    if (v5)
    {
      v6 = v5;
      *(_WORD *)(v5 + 104) = 0;
      *(_QWORD *)(v5 + 128) = 0;
      if (*(_DWORD *)(v5 + 196) == 4)
        sub_10015EE88(v5, a2);
      else
        *(_DWORD *)(v5 + 196) = 4;
      if (!*(_DWORD *)(v6 + 40))
      {
        (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(qword_100983B40 + 8) + 16))(*(unsigned __int16 *)(v6 + 192), a2);
        return sub_10015D540(v6);
      }
    }
    else if (sub_10005549C())
    {
      sub_100054530("Unexpected L2cap disconnect indication");
      v7 = sub_1000544A0(0x15u);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
  return result;
}

void sub_10015EE88(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  NSObject *v4;

  v3 = *(unsigned __int16 *)(a1 + 16);
  if (*(_WORD *)(a1 + 16))
  {
    *(_DWORD *)(a1 + 40) = 4;
    sub_10015EF08((uint64_t)sub_10015DFD0, v3, a2);
  }
  else if (sub_10005549C())
  {
    sub_100054530("DoInterruptDisconnect called on connection with cid 0");
    v4 = sub_1000544A0(0x15u);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
}

void sub_10015EF08(uint64_t a1, unsigned int a2, uint64_t a3)
{
  unsigned __int16 v3;
  int v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  int v10;
  int v11;
  const void *v12[2];

  v3 = a2;
  v5 = sub_1001DEB7C(a2, a3);
  if (v5)
  {
    v9 = a1;
    v10 = v3;
    v11 = v5;
    v12[1] = &v9;
    v12[0] = (const void *)16;
    v6 = sub_10004AE90((uint64_t)sub_10015EFBC, v12, 0);
    if ((_DWORD)v6)
    {
      v7 = v6;
      if (sub_10005549C())
      {
        sub_100054530("OI_Dispatch_RegisterFunc failed: %!\n", v7);
        v8 = sub_1000544A0(0x15u);
        if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
    }
  }
}

uint64_t sub_10015EFBC(uint64_t a1)
{
  return (**(uint64_t (***)(_QWORD, _QWORD))(a1 + 8))(*(unsigned __int16 *)(*(_QWORD *)(a1 + 8) + 8), *(unsigned int *)(*(_QWORD *)(a1 + 8) + 12));
}

uint64_t sub_10015EFD0(unsigned int *a1, _QWORD *a2)
{
  uint64_t result;
  NSObject *v5;
  void *v6;
  int v7;
  NSObject *v8;
  uint64_t v9;
  uint8_t buf[4];
  void *v11;

  if (!a1 || !a2)
  {
    sub_100253460();
    return 101;
  }
  if (!*a2 || !a2[1] || !a2[2] || !a2[3])
  {
    sub_100253460();
    if (!*a2)
      return 101;
  }
  if (!a2[1] || !a2[2] || !a2[3])
    return 101;
  v9 = 0;
  result = sub_10015D6BC(off_10091C9F8, *a1, &v9);
  if (!(_DWORD)result)
  {
    qword_100983B48 = (uint64_t)a2;
    result = _os_feature_enabled_impl("BluetoothFeatures", "RuleBasedHIDClassification");
    if ((_DWORD)result)
    {
      if (sub_10005549C())
      {
        sub_100054530("Registering for modeChangedCB");
        v5 = sub_1000544A0(0x15u);
        if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
        {
          v6 = sub_100054494();
          *(_DWORD *)buf = 136446210;
          v11 = v6;
          _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, " %{public}s", buf, 0xCu);
        }
      }
      result = sub_100186524((uint64_t)sub_10015F180, 0);
      if ((_DWORD)result)
      {
        v7 = result;
        result = sub_10005549C();
        if ((_DWORD)result)
        {
          sub_100054530("Error registering for modeChangedCB: %d", v7);
          v8 = sub_1000544A0(0x15u);
          result = os_log_type_enabled(v8, OS_LOG_TYPE_ERROR);
          if ((_DWORD)result)
          {
            sub_1006CE7A4();
            return 0;
          }
        }
      }
    }
  }
  return result;
}

void sub_10015F180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  unint64_t v13;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  const char *v24;
  const char *v25;
  NSObject *v26;
  NSObject *v27;
  NSObject *v28;
  NSObject *v29;
  uint8_t buf[4];
  void *v31;

  if (!_os_feature_enabled_impl("BluetoothFeatures", "RuleBasedHIDClassification"))
    return;
  if (!a2)
  {
    if (!sub_10005549C())
      return;
    sub_100054530("modeChangedCB : NULL address");
    v27 = sub_1000544A0(0x15u);
    if (!os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
      return;
LABEL_27:
    sub_1006CE7A4();
    return;
  }
  v7 = sub_10019AEA4(a2);
  if (!v7)
  {
    if (!sub_10005549C())
      return;
    sub_100054530("modeChangedCB : The connection is gone.");
    v28 = sub_1000544A0(0x15u);
    if (!os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
      return;
    goto LABEL_27;
  }
  v8 = v7;
  v9 = sub_10015D5B8(a2);
  if (v9)
  {
    if ((_DWORD)a3 == 2)
    {
      v10 = v9;
      v11 = *(unsigned __int16 *)(v8 + 136);
      HIDWORD(v13) = -1431655765 * v11;
      LODWORD(v13) = -1431655765 * v11;
      v12 = v13 >> 2;
      v16 = v11 == 18 || v12 < 0x15555556 || v11 > 0x40;
      if (sub_10005549C())
      {
        v24 = (const char *)sub_10025304C(a2, v17, v18, v19, v20, v21, v22, v23);
        v25 = "poor";
        if (!*(_BYTE *)(v10 + 211))
          v25 = "good";
        sub_100054530("SniffInterval %d for %s previous: %s (%d)", v11, v24, v25, *(unsigned __int8 *)(v10 + 210));
        v26 = sub_1000544A0(0x15u);
        if (os_log_type_enabled(v26, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 136446210;
          v31 = sub_100054494();
          _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_INFO, " %{public}s", buf, 0xCu);
        }
      }
      if (v11)
      {
        if (v16)
        {
          if (*(_BYTE *)(v10 + 211))
          {
            if (!*(_BYTE *)(v10 + 210))
            {
              *(_BYTE *)(v10 + 211) = 0;
              (*(void (**)(uint64_t, uint64_t, _QWORD))(qword_100983B48 + 120))(a2, a4, 0);
            }
          }
        }
        else if (!*(_BYTE *)(v10 + 211) && !*(_BYTE *)(v10 + 210))
        {
          *(_BYTE *)(v10 + 211) = 1;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(qword_100983B48 + 120))(a2, a4, 1);
        }
        *(_BYTE *)(v10 + 210) = 1;
      }
      else if (sub_10005549C())
      {
        sub_100054530("Sniff interval should never be 0 when in sniff mode.");
        v29 = sub_1000544A0(0x15u);
        if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(qword_100983B48 + 128))(a2, a4, a3);
  }
}

uint64_t sub_10015F444()
{
  NSObject *v0;
  int v1;
  int v2;
  NSObject *v3;
  uint8_t buf[4];
  void *v6;

  if (_os_feature_enabled_impl("BluetoothFeatures", "RuleBasedHIDClassification"))
  {
    if (sub_10005549C())
    {
      sub_100054530("Unregistering the modeChangedCB");
      v0 = sub_1000544A0(0x15u);
      if (os_log_type_enabled(v0, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 136446210;
        v6 = sub_100054494();
        _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_INFO, " %{public}s", buf, 0xCu);
      }
    }
    v1 = sub_100186534((uint64_t)sub_10015F180);
    if (v1)
    {
      v2 = v1;
      if (sub_10005549C())
      {
        sub_100054530("Failed to unregister modeChangedCB with error: %d", v2);
        v3 = sub_1000544A0(0x15u);
        if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
    }
  }
  return sub_10015DAD8();
}

uint64_t sub_10015F570(int *a1, uint64_t *a2, _WORD *a3, void *a4)
{
  if (dword_10099919C)
    return sub_10015DB6C(a1, a2, a3, a4);
  else
    return 2601;
}

uint64_t sub_10015F594(unsigned int a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  unint64_t v10;
  const char *v11;
  NSObject *v12;
  char *v13;
  char *v14;
  char *v15;
  const char *v16;
  unint64_t v18;
  const char *v19;
  NSObject *v20;
  NSObject *v21;
  uint8_t buf[4];
  void *v23;

  v6 = sub_10015D394(a1);
  if (!v6)
    return 414;
  v7 = v6;
  if (*(_BYTE *)(v6 + 73))
  {
    if (sub_10005549C())
    {
      v8 = a2 > 5 ? "??" : off_10091CA28[(char)a2];
      sub_100054530("Send HID control - returning busy due for handle 0x%x to transtype %d controlop %s", a1, *(unsigned __int8 *)(v7 + 73), v8);
      v12 = sub_1000544A0(0x15u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
LABEL_24:
        *(_DWORD *)buf = 136446210;
        v23 = sub_100054494();
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
LABEL_25:
    if (a2 == 5)
      *(_BYTE *)(v7 + 77) |= 0x20u;
    return 118;
  }
  if (*(_BYTE *)(v6 + 76))
  {
    if (sub_10005549C())
    {
      v10 = *(char *)(v7 + 76);
      v11 = v10 > 5 ? "??" : off_10091CA28[v10];
      v16 = a2 > 5 ? "??" : off_10091CA28[(char)a2];
      sub_100054530("Send HID control - returning busy for handle 0x%x due to pendingControlOp %s controlop %s", a1, v11, v16);
      v12 = sub_1000544A0(0x15u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
        goto LABEL_24;
    }
    goto LABEL_25;
  }
  v13 = sub_100253D54(0);
  if (!v13)
    return 106;
  v14 = v13;
  v9 = sub_10015E63C((uint64_t)sub_10015F8EC, a1, 17, 1, a2, (uint64_t)v13);
  if ((_DWORD)v9)
  {
    if (sub_10005549C())
    {
      v15 = a2 > 5 ? "??" : off_10091CA28[(char)a2];
      sub_100054530("SendHidControl failed for op %s with status %!", v15, v9);
      v20 = sub_1000544A0(0x15u);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    *(_BYTE *)(v7 + 76) = 0;
    *(_QWORD *)(v7 + 80) = 0;
    sub_100254090(v14);
  }
  else
  {
    *(_BYTE *)(v7 + 73) = 0;
    *(_BYTE *)(v7 + 76) = a2;
    *(_QWORD *)(v7 + 80) = a3;
    if (sub_10005549C())
    {
      v18 = *(char *)(v7 + 76);
      if (v18 > 5)
        v19 = "??";
      else
        v19 = off_10091CA28[v18];
      sub_100054530("SendHidControl with pendingControlOp %s", v19);
      v21 = sub_1000544A0(0x15u);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 136446210;
        v23 = sub_100054494();
        _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_INFO, " %{public}s", buf, 0xCu);
      }
      return 0;
    }
  }
  return v9;
}

void sub_10015F8EC(unsigned __int16 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  char *v6;
  NSObject *v7;
  NSObject *v8;
  uint64_t v9;
  void (*v10)(_QWORD, _QWORD, uint64_t);
  uint8_t buf[4];
  void *v12;

  if (a1)
  {
    v5 = *((char *)a1 + 60);
    *((_BYTE *)a1 + 60) = 0;
    if (sub_10005549C())
    {
      v6 = v5 > 5 ? "??" : off_10091CA28[v5];
      sub_100054530("_SendHidControlCfm for pending control op %s with status %!", v6, a3);
      v8 = sub_1000544A0(0x15u);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 136446210;
        v12 = sub_100054494();
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, " %{public}s", buf, 0xCu);
      }
    }
    v9 = sub_10015D620(*a1);
    if (v9)
    {
      v10 = *(void (**)(_QWORD, _QWORD, uint64_t))(v9 + 80);
      if (v10)
        v10(*(unsigned __int16 *)(v9 + 192), v5, a3);
    }
  }
  else if (sub_10005549C())
  {
    sub_100054530("Send HID control - channel is invalid");
    v7 = sub_1000544A0(0x15u);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
}

uint64_t sub_10015FA48(unsigned int a1, char a2, int a3, int a4)
{
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  uint64_t v11;
  char v12;
  void *v13;
  void *v14;
  int v16;

  v8 = sub_10015D394(a1);
  if (!v8)
    return 414;
  v9 = v8;
  v16 = 0;
  if (a3 == -1)
  {
    v10 = 0;
  }
  else
  {
    LOBYTE(v16) = a3;
    v10 = 1;
  }
  v12 = a2 & 3;
  if (a4 != 0xFFFF)
  {
    *(_WORD *)((unint64_t)&v16 | v10) = a4;
    v10 = v10 | 2;
    v12 |= 8u;
  }
  v13 = sub_100254200((char *)&v16, v10, 0);
  if (!v13)
    return 106;
  v14 = v13;
  if (*(_BYTE *)(v9 + 73))
  {
    sub_100254090(v13);
    return 118;
  }
  else
  {
    *(_BYTE *)(v9 + 73) = 4;
    v11 = sub_10015E63C(0, a1, 17, 4, v12, (uint64_t)v13);
    if ((_DWORD)v11)
    {
      sub_100254090(v14);
      *(_BYTE *)(v9 + 73) = 0;
    }
    else
    {
      sub_10015D338(a1);
    }
  }
  return v11;
}

uint64_t sub_10015FB5C(unsigned int a1, int a2, char *a3, size_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v8 = sub_10015D394(a1);
  if (!v8)
    return 414;
  v9 = v8;
  if (*(_BYTE *)(v8 + 73))
    return 118;
  *(_BYTE *)(v8 + 73) = 5;
  result = sub_10015E844((uint64_t)nullsub_94, a1, 17, 5, a2, a3, a4);
  if ((_DWORD)result)
  {
    *(_BYTE *)(v9 + 73) = 0;
  }
  else
  {
    sub_10015D338(a1);
    return 0;
  }
  return result;
}

uint64_t sub_10015FC00(unsigned int a1, int a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;

  v4 = sub_10015D394(a1);
  if (!v4)
    return 414;
  v5 = v4;
  if (*(_BYTE *)(v4 + 73))
    return 118;
  *(_BYTE *)(v4 + 73) = 7;
  *(_BYTE *)(v4 + 9) = a2;
  v6 = sub_10015E484(0, a1, 17, 7, a2);
  if ((_DWORD)v6)
  {
    if (sub_10005549C())
    {
      sub_100054530("Set Protocol failed for handle %d with status %!", v6);
      v7 = sub_1000544A0(0x15u);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    *(_BYTE *)(v5 + 73) = 0;
  }
  else
  {
    sub_10015D338(a1);
  }
  return v6;
}

uint64_t sub_10015FCD8(unsigned int a1, int a2, char *a3, size_t a4)
{
  unsigned __int16 *v8;
  unsigned __int16 *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v8 = (unsigned __int16 *)sub_10015D67C(a1, 19);
  if (!v8)
    return 101;
  v9 = v8;
  v10 = sub_10015D620(*v8);
  if (!v10)
    return 414;
  v11 = v10;
  if (*(_BYTE *)(v10 + 73))
    return 118;
  result = sub_10015E844((uint64_t)sub_10015FD8C, a1, 19, 10, a2, a3, a4);
  if ((_DWORD)result)
  {
    a3 = 0;
    LOWORD(a4) = 0;
    *(_BYTE *)(v11 + 73) = 0;
  }
  *((_QWORD *)v9 + 4) = a3;
  v9[20] = a4;
  return result;
}

void sub_10015FD8C(unsigned __int16 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void (*v6)(_QWORD, _QWORD, _QWORD, uint64_t);
  NSObject *v7;

  v5 = sub_10015D620(*a1);
  if (v5)
  {
    v6 = *(void (**)(_QWORD, _QWORD, _QWORD, uint64_t))(qword_100983B48 + 88);
    if (v6)
      v6(*(unsigned __int16 *)(v5 + 192), *((_QWORD *)a1 + 4), a1[20], a3);
  }
  else if (sub_10005549C())
  {
    sub_100054530("Couldn't get endpoint handle in OutputReportSendDataCfm");
    v7 = sub_1000544A0(0x15u);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
}

uint64_t sub_10015FE24()
{
  return (*(uint64_t (**)(void))qword_100983B48)();
}

uint64_t sub_10015FE34(uint64_t a1, uint64_t a2)
{
  if (!(_DWORD)a2)
    sub_100160868(a1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(qword_100983B48 + 8))(a1, a2);
}

void sub_10015FE74(uint64_t a1, uint64_t a2)
{
  NSObject *v4;
  uint64_t v5;

  if (*(_DWORD *)(sub_10015D394(a1) + 196))
  {
    (*(void (**)(uint64_t, uint64_t))(qword_100983B48 + 16))(a1, a2);
  }
  else if (sub_10005549C())
  {
    sub_100054530("DisconnectInd received for connection that is already disconnected");
    v4 = sub_1000544A0(0x15u);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
  v5 = sub_10015D394(a1);
  if (!v5)
    sub_100253460();
  sub_100049F6C(*(unsigned int *)(v5 + 204));
  *(_DWORD *)(v5 + 204) = 0;
}

void sub_10015FF1C(uint64_t a1, int a2, uint64_t a3, _BYTE *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  int v14;
  void (*v15)(uint64_t, _QWORD, uint64_t, _BYTE *, uint64_t, BOOL, uint64_t);
  NSObject *v16;
  void (*v17)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD);
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, _QWORD);
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v12 = sub_10015D394(a1);
  if (v12)
  {
    v13 = v12;
    sub_10015D4B4(a1);
    if (a2 == 1 && (_DWORD)a3 == 5)
    {
      (*(void (**)(uint64_t))(qword_100983B48 + 24))(a1);
      return;
    }
    if (!*(_DWORD *)(v13 + 204))
      sub_100160868(a1);
    v14 = *(unsigned __int8 *)(v13 + 73);
    *(_BYTE *)(v13 + 73) = 0;
    switch(v14)
    {
      case 4:
        if ((a2 - 10) >= 2)
        {
          if (a2)
          {
            v27 = *(void (**)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(qword_100983B48 + 32);
            if (!v27)
              return;
            v29 = a1;
            v28 = 14;
          }
          else
          {
            v27 = *(void (**)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(qword_100983B48 + 32);
            if (!v27)
              return;
            if ((_DWORD)a3)
              v28 = a3;
            else
              v28 = 14;
            v29 = a1;
          }
          v27(v29, v28, 0, 0, 0, 1, 1);
        }
        else
        {
          v15 = *(void (**)(uint64_t, _QWORD, uint64_t, _BYTE *, uint64_t, BOOL, uint64_t))(qword_100983B48 + 32);
          if (v15)
            v15(a1, 0, a3 & 3, a4, a5, a2 == 10, a6);
          if ((a6 & 1) == 0)
            *(_BYTE *)(v13 + 73) = 4;
        }
        return;
      case 5:
        v17 = *(void (**)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD))(qword_100983B48 + 40);
        if (v17)
        {
          if (a2)
            v18 = 15;
          else
            v18 = a3;
          v17(a1, v18, *(_QWORD *)(v13 + 48), *(unsigned __int16 *)(v13 + 56), 0);
        }
        return;
      case 6:
        if (a2 != 10 || (_DWORD)a5 != 1)
        {
          v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(qword_100983B48 + 48);
          if (a2)
            goto LABEL_47;
          goto LABEL_43;
        }
        *(_BYTE *)(v13 + 8) = *a4;
        v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(qword_100983B48 + 48);
        if (v19)
          goto LABEL_30;
        return;
      case 7:
        if (a2)
        {
          a3 = 15;
          v20 = 1;
        }
        else
        {
          v20 = *(_BYTE *)(v13 + 9);
        }
        *(_BYTE *)(v13 + 8) = v20;
        v24 = *(void (**)(uint64_t, uint64_t, _QWORD))(qword_100983B48 + 56);
        if (v24)
        {
          v26 = a1;
          v25 = a3;
          goto LABEL_53;
        }
        return;
      case 8:
        if (a2 == 10 && (_DWORD)a5 == 1)
        {
          v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(qword_100983B48 + 64);
          if (!v19)
            return;
LABEL_30:
          v21 = *a4;
          v22 = a1;
          v23 = 0;
        }
        else
        {
          v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(qword_100983B48 + 64);
          if (a2)
          {
LABEL_47:
            if (!v19)
              return;
            v22 = a1;
            v21 = 0;
            v23 = 15;
            v30 = 411;
            goto LABEL_49;
          }
LABEL_43:
          if (!v19)
            return;
          v22 = a1;
          v21 = 0;
          v23 = a3;
        }
        v30 = 0;
LABEL_49:
        v19(v22, v21, v23, v30);
        return;
      case 9:
        v24 = *(void (**)(uint64_t, uint64_t, _QWORD))(qword_100983B48 + 72);
        if (v24)
        {
          if (a2)
            v25 = 15;
          else
            v25 = a3;
          v26 = a1;
LABEL_53:
          v24(v26, v25, 0);
        }
        return;
      default:
        if (sub_10005549C())
        {
          sub_100054530("No transactions outstanding, ignoring packet from device");
          v16 = sub_1000544A0(0x15u);
          if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
            sub_1006CE7A4();
        }
        return;
    }
  }
}

void sub_100160258(uint64_t a1, int a2, int a3, unsigned __int8 *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  NSObject *v15;
  NSObject *v16;
  uint64_t v17;
  NSObject *v18;
  void (*v19)(uint64_t, unsigned __int8 *, uint64_t, BOOL, uint64_t, uint64_t);
  int v20;
  NSObject *v21;
  NSObject *v22;
  NSObject *v23;
  NSObject *v24;
  NSObject *v25;
  NSObject *v26;
  void (*v27)(uint64_t, _QWORD, unsigned __int8 *);
  void (*v28)(uint64_t, _QWORD, _QWORD, _QWORD);

  v14 = sub_10015D394(a1);
  if (v14)
  {
    if ((a2 - 12) > 0xFFFFFFFD)
    {
      if (a3 == 1)
      {
        v17 = v14;
        if (*(_DWORD *)(v14 + 204))
          *(_BYTE *)(v14 + 208) = 1;
        else
          sub_100160868(a1);
        if (*(_BYTE *)(v17 + 8))
        {
          v19 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t, BOOL, uint64_t, uint64_t))(qword_100983B48 + 80);
          if (v19)
          {
            v19(a1, a4, a5, a2 == 10, a6, a7);
            return;
          }
          if (sub_10005549C())
          {
            sub_100054530("No report-protocol handler present. Ignoring.");
            v22 = sub_1000544A0(0x15u);
            if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
              goto LABEL_14;
          }
        }
        else if ((_DWORD)a5)
        {
          if (a2 == 10 && (a6 & 1) != 0)
          {
            v20 = *a4;
            if (v20 == 2)
            {
              if (a5 > 3)
              {
                v28 = *(void (**)(uint64_t, _QWORD, _QWORD, _QWORD))(qword_100983B48 + 104);
                if (v28)
                  v28(a1, a4[1], (char)a4[2], (char)a4[3]);
              }
              else if (sub_10005549C())
              {
                sub_100054530("Boot-mode mouse report too short. Ignoring.");
                v25 = sub_1000544A0(0x15u);
                if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
                  goto LABEL_14;
              }
            }
            else if (v20 == 1)
            {
              if (a5 > 8)
              {
                v27 = *(void (**)(uint64_t, _QWORD, unsigned __int8 *))(qword_100983B48 + 96);
                if (v27)
                  v27(a1, a4[1], a4 + 3);
              }
              else if (sub_10005549C())
              {
                sub_100054530("Boot-mode keyboard report too short. Ignoring.");
                v21 = sub_1000544A0(0x15u);
                if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
                  goto LABEL_14;
              }
            }
            else if (sub_10005549C())
            {
              sub_100054530("Received unknown boot protocol report ID %d", *a4);
              v26 = sub_1000544A0(0x15u);
              if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
                goto LABEL_14;
            }
          }
          else if (sub_10005549C())
          {
            sub_100054530("Received segmented boot report. Ignoring.");
            v24 = sub_1000544A0(0x15u);
            if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
              goto LABEL_14;
          }
        }
        else if (sub_10005549C())
        {
          sub_100054530("Received empty boot report. Ignoring.");
          v23 = sub_1000544A0(0x15u);
          if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
            goto LABEL_14;
        }
      }
      else if (sub_10005549C())
      {
        sub_100054530("Received non-input report type on interrupt endpoint. Ignoring.");
        v18 = sub_1000544A0(0x15u);
        if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
          goto LABEL_14;
      }
    }
    else if (sub_10005549C())
    {
      sub_100054530("Received non DATA/DATC transaction on interrupt endpoint. Ignoring.");
      v15 = sub_1000544A0(0x15u);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
LABEL_14:
        sub_1006CE7A4();
    }
  }
  else if (sub_10005549C())
  {
    sub_100054530("Unknown connection. Ignoring interrupt data.");
    v16 = sub_1000544A0(0x15u);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
      goto LABEL_14;
  }
}

void sub_100160628(uint64_t a1)
{
  uint64_t v1;
  int v2;
  NSObject *v3;
  NSObject *v4;
  NSObject *v5;
  void (*v6)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  void (*v7)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t);
  void (*v8)(uint64_t, _QWORD, uint64_t, uint64_t);
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  void (*v11)(uint64_t, _QWORD, _QWORD, uint64_t);

  if (a1)
  {
    v1 = *(unsigned __int16 *)(a1 + 192);
    *(_DWORD *)(a1 + 200) = 0;
    v2 = *(unsigned __int8 *)(a1 + 73);
    *(_BYTE *)(a1 + 73) = 0;
    if (sub_10005549C())
    {
      sub_100054530("HID Transaction Timeout - for handle 0x%x and previousTransType %d", v1, v2);
      v3 = sub_1000544A0(0x15u);
      if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    switch(v2)
    {
      case 1:
        sub_10015E3A4(v1);
        break;
      case 4:
        v6 = *(void (**)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(qword_100983B48 + 32);
        if (v6)
          v6(v1, 15, 0, 0, 0, 1, 1);
        break;
      case 5:
        v7 = *(void (**)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t))(qword_100983B48 + 40);
        if (v7)
          v7(v1, 15, 0, 0, 2604);
        break;
      case 6:
        v8 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(qword_100983B48 + 48);
        if (v8)
          goto LABEL_22;
        break;
      case 7:
        v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(qword_100983B48 + 56);
        if (v9)
          goto LABEL_24;
        break;
      case 8:
        v8 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(qword_100983B48 + 64);
        if (v8)
LABEL_22:
          v8(v1, 0, 15, 2604);
        break;
      case 9:
        v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(qword_100983B48 + 72);
        if (v9)
LABEL_24:
          v9(v1, 15, 2604);
        break;
      case 10:
        v10 = sub_10015D67C(v1, 19);
        if (v10)
        {
          v11 = *(void (**)(uint64_t, _QWORD, _QWORD, uint64_t))(qword_100983B48 + 88);
          if (v11)
            v11(v1, *(_QWORD *)(v10 + 32), *(unsigned __int16 *)(v10 + 40), 112);
        }
        break;
      default:
        sub_10015E3A4(v1);
        if (sub_10005549C())
        {
          sub_100054530("No transactions outstanding, disconnecting");
          v5 = sub_1000544A0(0x15u);
          if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
            goto LABEL_9;
        }
        break;
    }
  }
  else if (sub_10005549C())
  {
    sub_100054530("Invalid HID host handle in transaction timeout");
    v4 = sub_1000544A0(0x15u);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
LABEL_9:
      sub_1006CE7A4();
  }
}

uint64_t sub_100160868(int a1)
{
  uint64_t v1;
  const void *v3[2];
  __int16 v4;

  v4 = a1;
  v1 = sub_10015D394(a1);
  if (!v1)
    sub_100253460();
  if (*(_DWORD *)(v1 + 204))
    sub_100253460();
  if (*(_BYTE *)(v1 + 208))
    sub_100253460();
  v3[1] = &v4;
  v3[0] = (const void *)2;
  return sub_10004A9EC((uint64_t)sub_1001608E0, v3, 300, (int *)(v1 + 204));
}

uint64_t sub_1001608E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  int v3;

  v1 = **(unsigned __int16 **)(a1 + 8);
  result = sub_10015D394(v1);
  if (result)
  {
    v3 = *(unsigned __int8 *)(result + 208);
    *(_DWORD *)(result + 204) = 0;
    *(_BYTE *)(result + 208) = 0;
    if (v3)
      return sub_100160868(v1);
    else
      return (*(uint64_t (**)(uint64_t))(qword_100983B48 + 112))(v1);
  }
  return result;
}

uint64_t sub_100160948(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  NSObject *v4;
  void *v5;
  uint8_t buf[4];
  void *v9;

  v2 = 0;
  for (i = 0; i != 7; ++i)
  {
    if (sub_10005549C())
    {
      sub_100054530("getDevicePosFromAddress i: %d, inUse %d, addr: %:", i, *(unsigned __int8 *)(qword_100983B50 + v2), qword_100983B50 + v2 + 1);
      v4 = sub_1000544A0(0x50u);
      if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
      {
        v5 = sub_100054494();
        *(_DWORD *)buf = 136446210;
        v9 = v5;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    if (*(_BYTE *)(qword_100983B50 + v2))
    {
      if (*(_DWORD *)a1 == *(_DWORD *)(qword_100983B50 + v2 + 1)
        && *(unsigned __int16 *)(a1 + 4) == *(unsigned __int16 *)(qword_100983B50 + v2 + 5))
      {
        break;
      }
    }
    v2 += 32;
  }
  return i;
}

uint64_t sub_100160A90(_WORD *a1)
{
  _DWORD *v2;
  void *v3;
  int v4;
  uint64_t v5;
  NSObject *v6;
  const void *v8[2];

  if (sub_100160948((uint64_t)a1) != 7)
    return 3450;
  v2 = sub_100052DC0(0xB0uLL);
  if (!v2)
    return 106;
  v3 = v2;
  v4 = *(_DWORD *)a1;
  *((_WORD *)v2 + 2) = a1[2];
  *v2 = v4;
  v2[2] = 4403;
  v5 = sub_100243B30((uint64_t)v2, 2, (uint64_t)sub_100160BA0);
  if ((_DWORD)v5)
  {
    if (sub_10005549C())
    {
      sub_100054530("Error connecting to SDP %!", v5);
      v6 = sub_1000544A0(0x50u);
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    sub_100053298(v3);
    if ((_DWORD)v5 == 924 || (_DWORD)v5 == 821)
    {
      v8[1] = a1;
      v8[0] = (const void *)6;
      return sub_10004A9EC((uint64_t)sub_100160F24, v8, 20, 0);
    }
  }
  return v5;
}

void sub_100160BA0(unsigned __int16 *a1, uint64_t a2)
{
  NSObject *v4;
  unsigned int v5;
  uint64_t v6;
  char v7;
  NSObject *v8;
  _QWORD *v9;
  NSObject *v10;
  uint64_t v11;
  unsigned __int16 v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v17;
  unsigned __int8 *v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  _BYTE *v24;
  NSObject *v25;
  void *v26;
  uint64_t v27;
  unsigned __int16 v28;
  uint8_t buf[4];
  void *v30;

  v28 = 0;
  if ((_DWORD)a2)
  {
    if (sub_10005549C())
    {
      sub_100054530("Error connecting to SDP %!", a2);
      v4 = sub_1000544A0(0x50u);
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
        sub_1006D2728();
    }
    goto LABEL_33;
  }
  byte_100983BC0 = 70;
  qword_100983BD0 = (uint64_t)&unk_100739BA0;
  word_100983BC8 = 16;
  qword_100983BB0 = (uint64_t)&byte_100983BC0;
  byte_100983BB8 = 1;
  v27 = 0;
  if (sub_100182588((uint64_t)a1, &v27))
  {
    v5 = a1[83];
    if (a1[83])
      goto LABEL_7;
LABEL_14:
    v6 = sub_10018F44C((uint64_t)a1, *((_BYTE *)a1 + 164), 0, (uint64_t)&qword_100983BB0, (uint64_t)sub_100161388, (uint64_t)sub_10016144C, (uint64_t)sub_100161494, &v28, (uint64_t)&unk_10091CA58);
    v7 = 0;
    if ((_DWORD)v6)
      goto LABEL_8;
    goto LABEL_15;
  }
  v9 = sub_100246DE8(v27);
  v5 = a1[83];
  if (!a1[83] || v9 && *((_WORD *)v9 + 13) == 257)
    goto LABEL_14;
LABEL_7:
  v6 = sub_1001121BC((uint64_t)a1, v5, 0, (uint64_t)&qword_100983BB0, (uint64_t)sub_100161388, (uint64_t)sub_10016144C, (uint64_t)sub_100161494, &v28, (uint64_t)&unk_10091CA58);
  v7 = 1;
  if ((_DWORD)v6)
  {
LABEL_8:
    if (sub_10005549C())
    {
      sub_100054530("Error connecting to the message notification service %!", v6);
      v8 = sub_1000544A0(0x50u);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
        sub_1006D2728();
    }
    goto LABEL_33;
  }
LABEL_15:
  if (*(_BYTE *)(qword_100983B50 + 224) == 7)
  {
    if (sub_10005549C())
    {
      sub_100054530("No connection slots left");
      v10 = sub_1000544A0(0x50u);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
  else
  {
    v11 = 0;
    v12 = v28;
    while (1)
    {
      if (*(_BYTE *)(qword_100983B50 + v11))
      {
        v13 = qword_100983B50 + v11;
        if (*(unsigned __int16 *)(qword_100983B50 + v11 + 8) == v28)
          break;
        v14 = *(_DWORD *)(v13 + 1);
        v15 = *(unsigned __int16 *)(v13 + 5);
        if (*(_DWORD *)a1 == v14 && a1[2] == v15)
          break;
      }
      v11 += 32;
      if (v11 == 224)
      {
        v17 = 0;
        v18 = (unsigned __int8 *)qword_100983B50;
        do
        {
          v19 = *v18;
          v18 += 32;
          if (!v19)
            break;
          ++v17;
        }
        while (v17 != 7);
        v20 = v17;
        v21 = qword_100983B50 + 32 * v17;
        *(_OWORD *)v21 = 0u;
        *(_OWORD *)(v21 + 16) = 0u;
        *(_WORD *)(v21 + 8) = v12;
        v22 = *(_DWORD *)a1;
        *(_WORD *)(v21 + 5) = a1[2];
        *(_DWORD *)(v21 + 1) = v22;
        v23 = qword_100983B50;
        v24 = (_BYTE *)(qword_100983B50 + 32 * v17);
        *v24 = 1;
        v24[24] = v7;
        ++*(_BYTE *)(v23 + 224);
        if (sub_10005549C())
        {
          sub_100054530("Created MNS Device with i: %d, inUse %d, addr: %:", v20, *(unsigned __int8 *)(qword_100983B50 + 32 * v20), qword_100983B50 + 32 * v20 + 1);
          v25 = sub_1000544A0(0x50u);
          if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
          {
            v26 = sub_100054494();
            *(_DWORD *)buf = 136446210;
            v30 = v26;
            _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
        break;
      }
    }
  }
LABEL_33:
  sub_100053298(a1);
}

uint64_t sub_100160F24(uint64_t a1)
{
  int *v1;
  __int16 v2;
  uint64_t result;
  int v4;
  __int16 v5;

  v1 = *(int **)(a1 + 8);
  v2 = *((_WORD *)v1 + 2);
  v4 = *v1;
  v5 = v2;
  result = sub_100161640((uint64_t)&v4);
  if ((_DWORD)result)
    return sub_100160A90(&v4);
  return result;
}

uint64_t sub_100160F64(uint64_t a1)
{
  unsigned int v2;
  uint64_t v3;
  NSObject *v4;

  v2 = sub_100160948(a1);
  if (v2 == 7)
    return 0;
  v3 = sub_100166ED4(*(unsigned __int16 *)(qword_100983B50 + 32 * v2 + 8));
  if ((_DWORD)v3)
  {
    if (sub_10005549C())
    {
      sub_100054530("Could not disconnect MNS from %: : %!", a1, v3);
      v4 = sub_1000544A0(0x50u);
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
  return v3;
}

uint64_t sub_100161004()
{
  qword_100983B50 = (uint64_t)sub_100114588(0xE8uLL);
  if (qword_100983B50)
    return 0;
  else
    return 106;
}

void sub_100161030()
{
  sub_100053298((void *)qword_100983B50);
  qword_100983B50 = 0;
}

uint64_t sub_100161058(unsigned int *a1, void (*a2)(unint64_t, uint64_t), char a3, uint64_t a4, __int16 a5)
{
  unsigned int v10;
  NSObject *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  NSObject *v22;
  __int16 v24;
  char v25;

  v10 = sub_100160948((uint64_t)a1);
  v24 = 271;
  v25 = a3;
  if (v10 == 7)
  {
    if (sub_10005549C())
    {
      sub_100054530("Invalid connection for address %:", a1);
      v11 = sub_1000544A0(0x50u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    v12 = *a1 | ((unint64_t)*((unsigned __int16 *)a1 + 2) << 32);
    v13 = 122;
    v14 = 122;
  }
  else
  {
    qword_100983B58 = (uint64_t)byte_100983B68;
    v15 = v10;
    v16 = qword_100983B50 + 32 * v10;
    v17 = *(unsigned __int8 *)(v16 + 24);
    if (*(_BYTE *)(v16 + 24))
    {
      byte_100983B68[0] = -105;
      v17 = 1;
      byte_100983B70 = 1;
    }
    v18 = &byte_100983B68[24 * v17];
    *v18 = 66;
    *((_QWORD *)v18 + 2) = "x-bt/MAP-event-report";
    *((_WORD *)v18 + 4) = 22;
    v19 = &byte_100983B68[24 * (v17 + 1)];
    *v19 = 76;
    *((_QWORD *)v19 + 2) = &v24;
    *((_WORD *)v19 + 4) = 3;
    v20 = &byte_100983B68[24 * (v17 | 2)];
    *v20 = 73;
    *((_QWORD *)v20 + 2) = a4;
    *((_WORD *)v20 + 4) = a5;
    byte_100983B60 = v17 + 3;
    v21 = *(unsigned __int16 *)(v16 + 8);
    v13 = sub_1001660B4(*(unsigned __int16 *)(v16 + 8), (uint64_t)&qword_100983B58, (uint64_t)sub_100161240, 0);
    if (!(_DWORD)v13)
    {
      *(_QWORD *)(qword_100983B50 + 32 * v15 + 16) = a2;
      return v13;
    }
    if (sub_10005549C())
    {
      sub_100054530("MAP MNS failed to send message on connection %d : %!", v21, v13);
      v22 = sub_1000544A0(0x50u);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    v12 = *a1 | ((unint64_t)*((unsigned __int16 *)a1 + 2) << 32);
    v14 = v13;
  }
  a2(v12, v14);
  return v13;
}

void sub_100161240(unsigned int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unsigned __int16 *v6;
  unsigned int v7;
  NSObject *v8;
  NSObject *v9;
  uint64_t v10;
  void (*v11)(unint64_t, uint64_t);

  v5 = 0;
  v6 = (unsigned __int16 *)(qword_100983B50 + 8);
  while (!*((_BYTE *)v6 - 8) || *v6 != a1)
  {
    ++v5;
    v6 += 16;
    if (v5 == 7)
    {
      v7 = 7;
      if (!(_DWORD)a3)
        goto LABEL_12;
      goto LABEL_8;
    }
  }
  v7 = v5;
  if (!(_DWORD)a3)
    goto LABEL_12;
LABEL_8:
  if ((_DWORD)a3 != 1701)
  {
    if (sub_10005549C())
    {
      sub_100054530("Server didn't ACK send for connection %d : %!", a1, a3);
      v8 = sub_1000544A0(0x50u);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
LABEL_12:
  if (v7 == 7)
  {
    if (sub_10005549C())
    {
      sub_100054530("Invalid connection ID %d", a1);
      v9 = sub_1000544A0(0x50u);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
  else
  {
    v10 = qword_100983B50 + 32 * v7;
    v11 = *(void (**)(unint64_t, uint64_t))(v10 + 16);
    if (v11)
      v11(*(unsigned int *)(v10 + 1) | ((unint64_t)*(unsigned __int16 *)(v10 + 5) << 32), a3);
  }
}

double sub_100161388(int a1, uint64_t a2, uint64_t a3)
{
  double result;
  NSObject *v6;
  uint64_t v7;

  if ((_DWORD)a3)
  {
    if (sub_10005549C())
    {
      sub_100054530("Failed to connect to MNS : %!", a3);
      v6 = sub_1000544A0(0x50u);
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
        sub_1006D2728();
    }
    if (qword_100983B50)
    {
      v7 = 0;
      while (!*(_BYTE *)(qword_100983B50 + v7) || *(unsigned __int16 *)(qword_100983B50 + v7 + 8) != a1)
      {
        v7 += 32;
        if (v7 == 224)
          return result;
      }
      return sub_100161500(a1);
    }
  }
  return result;
}

double sub_10016144C(int a1)
{
  uint64_t v1;
  double result;

  if (qword_100983B50)
  {
    v1 = 0;
    while (!*(_BYTE *)(qword_100983B50 + v1) || *(unsigned __int16 *)(qword_100983B50 + v1 + 8) != a1)
    {
      v1 += 32;
      if (v1 == 224)
        return result;
    }
    return sub_100161500(a1);
  }
  return result;
}

void sub_100161494(int a1)
{
  NSObject *v2;

  if (sub_10005549C())
  {
    sub_100054530("MNS AUTH required. Handle=%d", a1);
    v2 = sub_1000544A0(0x50u);
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
}

double sub_100161500(int a1)
{
  uint64_t v1;
  unsigned __int16 *v2;
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  _OWORD *v6;
  double result;
  uint8_t buf[4];
  void *v9;

  v1 = 0;
  v2 = (unsigned __int16 *)(qword_100983B50 + 8);
  while (!*((_BYTE *)v2 - 8) || *v2 != a1)
  {
    ++v1;
    v2 += 16;
    if (v1 == 7)
    {
      v3 = 7;
      goto LABEL_7;
    }
  }
  v3 = v1;
LABEL_7:
  if (sub_10005549C())
  {
    sub_100054530("Deleting MNS Device at position i: %d, inUse %d, addr: %:", v3, *(unsigned __int8 *)(qword_100983B50 + 32 * v3), qword_100983B50 + 32 * v3 + 1);
    v4 = sub_1000544A0(0x50u);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      v9 = sub_100054494();
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if ((_DWORD)v3 == 7)
    sub_100253460();
  v5 = qword_100983B50;
  v6 = (_OWORD *)(qword_100983B50 + 32 * v3);
  result = 0.0;
  *v6 = 0u;
  v6[1] = 0u;
  --*(_BYTE *)(v5 + 224);
  return result;
}

BOOL sub_100161640(uint64_t a1)
{
  return sub_10016165C(a1) != 7;
}

uint64_t sub_10016165C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = 0;
  v2 = qword_100983BD8 + 9;
  do
  {
    if (*(_BYTE *)(v2 - 1))
    {
      if (*(_DWORD *)a1 == *(_DWORD *)v2 && *(unsigned __int16 *)(a1 + 4) == *(unsigned __int16 *)(v2 + 4))
        break;
    }
    v2 += 32;
    ++v1;
  }
  while (v1 != 7);
  return v1;
}

uint64_t sub_1001616A8(_OWORD *a1, uint64_t a2, uint64_t *a3, int a4, int a5)
{
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  NSObject *v13;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  NSObject *v19;
  NSObject *v20;
  uint64_t v21;
  __int128 v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v28 = 0;
  v29 = 0;
  v30 = 0;
  v24 = 0;
  v25 = 0;
  v26 = 0;
  v22 = unk_10091CA88;
  qword_100983BD8 = (uint64_t)sub_100114588(0x160uLL);
  if (qword_100983BD8)
  {
    v10 = sub_100161004();
    if ((_DWORD)v10)
    {
      v11 = v10;
      if (sub_10005549C())
      {
        sub_100054530("Failed to register the MAP client %!", v11);
        v12 = sub_1000544A0(0x50u);
        if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      return v11;
    }
    v15 = qword_100983BD8;
    *(_BYTE *)(qword_100983BD8 + 4) = 2;
    v16 = sub_1001683B4((uint64_t)&v22, (uint64_t)off_10091CA98, 0, (unsigned __int8 *)(v15 + 4), (uint64_t)&unk_10091CAC0);
    if ((_DWORD)v16)
    {
      v11 = v16;
      if (!sub_10005549C())
        return v11;
      sub_100054530("Failed to register the MAP OBEX server %!", v11);
      v17 = sub_1000544A0(0x50u);
      if (!os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
        return v11;
      goto LABEL_14;
    }
    v18 = sub_100259A4C((uint64_t)&v22, (uint64_t)off_10091CA98, 0, (unsigned __int16 *)(qword_100983BD8 + 6), (uint64_t)&unk_10091CAC0, 1);
    if ((_DWORD)v18)
    {
      v11 = v18;
      if (!sub_10005549C())
        return v11;
      sub_100054530("Failed to register the MAP OBEX server %!", v11);
      v19 = sub_1000544A0(0x50u);
      if (!os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
        return v11;
LABEL_14:
      sub_1006CE7A4();
      return v11;
    }
    byte_100983BE0 = 1;
    word_100983BE2 = 1;
    dword_100983BE8 = *(unsigned __int8 *)(qword_100983BD8 + 4);
    byte_100983BF0 = 1;
    word_100983BF2 = 1;
    dword_100983BF8 = a5;
    byte_100983C00 = 1;
    word_100983C02 = 4;
    dword_100983C08 = a4;
    byte_100983C10 = 1;
    word_100983C12 = 2;
    dword_100983C18 = *(unsigned __int16 *)(qword_100983BD8 + 6);
    v27 = &unk_10091CAF0;
    LOWORD(v28) = 7;
    v29 = *a3;
    LOWORD(v30) = *((_WORD *)a3 + 4);
    v23 = &unk_10091CB98;
    LOWORD(v24) = 5;
    v25 = v29;
    LOWORD(v26) = v30;
    v11 = sub_1002465CC((uint64_t)&v27, (int *)qword_100983BD8);
    if ((_DWORD)v11)
    {
      if (sub_10005549C())
      {
        sub_100054530("OI_SDPDB_AddServiceRecord failed: %!", v11);
        v20 = sub_1000544A0(0x50u);
        if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      sub_1001687E8(*(unsigned __int8 *)(qword_100983BD8 + 4));
    }
    else
    {
      sub_1002468CC(*(_DWORD *)qword_100983BD8, (uint64_t)&v23);
      v21 = qword_100983BD8;
      *(_OWORD *)(qword_100983BD8 + 240) = *a1;
      *(_OWORD *)(v21 + 256) = *(_OWORD *)a2;
      *(_OWORD *)(v21 + 272) = *(_OWORD *)(a2 + 16);
      *(_QWORD *)(v21 + 288) = *(_QWORD *)(a2 + 32);
      *(_OWORD *)(v21 + 304) = *(_OWORD *)(a2 + 40);
      *(_QWORD *)(v21 + 296) = *(_QWORD *)(a2 + 56);
      *(_OWORD *)(v21 + 320) = *(_OWORD *)(a2 + 64);
      *(_BYTE *)(v21 + 344) = 0;
    }
  }
  else
  {
    if (sub_10005549C())
    {
      sub_100054530("Failed to allocate memory for MAP server structure");
      v13 = sub_1000544A0(0x50u);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
        sub_1006D2794();
    }
    return 106;
  }
  return v11;
}

void sub_100161A14()
{
  NSObject *v0;
  NSObject *v1;
  NSObject *v2;
  NSObject *v3;

  if (qword_100983BD8)
  {
    if (sub_1001687E8(*(unsigned __int8 *)(qword_100983BD8 + 4)))
    {
      if (sub_10005549C())
      {
        sub_100054530("Error deregistering server");
        v0 = sub_1000544A0(0x50u);
        if (os_log_type_enabled(v0, OS_LOG_TYPE_ERROR))
          sub_1006D17C4();
      }
    }
    if (sub_100259DC4(*(unsigned __int16 *)(qword_100983BD8 + 6)))
    {
      if (sub_10005549C())
      {
        sub_100054530("Error deregistering L2CAP server");
        v1 = sub_1000544A0(0x50u);
        if (os_log_type_enabled(v1, OS_LOG_TYPE_ERROR))
          sub_1006D17C4();
      }
    }
    if (sub_1002467B8(*(_DWORD *)qword_100983BD8) && sub_10005549C())
    {
      sub_100054530("Error removing service record");
      v2 = sub_1000544A0(0x50u);
      if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
    sub_100161030();
    sub_100053298((void *)qword_100983BD8);
    qword_100983BD8 = 0;
  }
  else if (sub_10005549C())
  {
    sub_100054530("MAP is not registered.");
    v3 = sub_1000544A0(0x50u);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
}

uint64_t sub_100161B98(unsigned int a1)
{
  NSObject *v2;
  NSObject *v4;
  int v5;
  __int16 v6;

  v6 = 0;
  v5 = 0;
  if (qword_100983BD8)
  {
    if (sub_100161C94(a1) == 7)
    {
      if (sub_10005549C())
      {
        sub_100054530("Invalid connection ID %d.", a1);
        v2 = sub_1000544A0(0x50u);
        if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      return 3454;
    }
    else
    {
      if (!sub_10011BA08(a1, (uint64_t)&v5))
        sub_100160F64((uint64_t)&v5);
      return sub_10011BAB0(a1);
    }
  }
  else
  {
    if (sub_10005549C())
    {
      sub_100054530("MAP is not initialized");
      v4 = sub_1000544A0(0x50u);
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 103;
  }
}

uint64_t sub_100161C94(int a1)
{
  uint64_t v2;
  unsigned __int16 *v3;
  NSObject *v4;
  NSObject *v5;

  if (qword_100983BD8)
  {
    v2 = 0;
    v3 = (unsigned __int16 *)(qword_100983BD8 + 16);
    while (!*((_BYTE *)v3 - 8) || *v3 != a1)
    {
      v3 += 16;
      if (++v2 == 7)
      {
        if (!sub_10005549C())
          goto LABEL_12;
        sub_100054530("Cannot retrieve device position for connectionId %d", a1);
        v4 = sub_1000544A0(0x50u);
        if (!os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
          goto LABEL_12;
        goto LABEL_11;
      }
    }
  }
  else
  {
    if (sub_10005549C())
    {
      sub_100054530("MAP server has been unregistered. Cannot retrieve device position for connectionId %d", a1);
      v5 = sub_1000544A0(0x50u);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
LABEL_11:
        sub_1006CE7A4();
    }
LABEL_12:
    LOBYTE(v2) = 7;
  }
  return v2;
}

uint64_t sub_100161D88(unsigned int a1, int a2)
{
  NSObject *v4;
  NSObject *v6;
  int v7;

  if (qword_100983BD8)
  {
    if (sub_100161C94(a1) == 7)
    {
      if (sub_10005549C())
      {
        sub_100054530("Invalid connection ID %d.", a1);
        v4 = sub_1000544A0(0x50u);
        if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      return 3455;
    }
    else
    {
      if ((a2 & 1) != 0)
      {
        v7 = 0;
      }
      else
      {
        sub_100161E8C(a1);
        v7 = 1735;
      }
      return sub_10011B27C(a1, a2, v7);
    }
  }
  else
  {
    if (sub_10005549C())
    {
      sub_100054530("MAP is not initialized");
      v6 = sub_1000544A0(0x50u);
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 103;
  }
}

double sub_100161E8C(int a1)
{
  unsigned int v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  double result;

  v1 = sub_100161C94(a1);
  if (v1 == 7)
    sub_100253460();
  v2 = qword_100983BD8;
  v3 = *(_QWORD **)(qword_100983BD8 + 32 * v1 + 24);
  if (v3)
  {
    sub_100163FE8(v3);
    v2 = qword_100983BD8;
  }
  sub_1002512C0(*(_QWORD **)(v2 + 32 * v1 + 32));
  v4 = qword_100983BD8;
  v5 = qword_100983BD8 + 32 * v1;
  result = 0.0;
  *(_OWORD *)(v5 + 8) = 0u;
  *(_OWORD *)(v5 + 24) = 0u;
  --*(_BYTE *)(v4 + 232);
  return result;
}

void sub_100161F04(int a1, uint64_t a2, unsigned __int16 a3)
{
  unsigned int v6;
  NSObject *v7;
  NSObject *v8;
  uint64_t v9;
  int v10;
  _QWORD v11[2];

  if (qword_100983BD8)
  {
    v6 = sub_100161C94(a1);
    if (v6 == 7)
    {
      if (sub_10005549C())
      {
        sub_100054530("Invalid connection ID %d.", a1);
        v7 = sub_1000544A0(0x50u);
        if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
LABEL_5:
          sub_1006CE7A4();
      }
    }
    else
    {
      v11[0] = a2;
      v11[1] = a3;
      v9 = v6;
      v10 = sub_100056080(*(_QWORD *)(qword_100983BD8 + 32 * v6 + 32));
      sub_10025142C(*(_QWORD *)(qword_100983BD8 + 32 * v9 + 32), (uint64_t)v11, 16);
      if (!v10)
        sub_10016201C(a1);
    }
  }
  else if (sub_10005549C())
  {
    sub_100054530("MAP is not initialized");
    v8 = sub_1000544A0(0x50u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      goto LABEL_5;
  }
}

void sub_10016201C(int a1)
{
  unsigned int v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = sub_100161C94(a1);
  if (v2 == 7)
  {
    if (sub_10005549C())
    {
      sub_100054530("Invalid connection ID %d.", a1);
      v3 = sub_1000544A0(0x50u);
      if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
  else
  {
    v4 = v2;
    v5 = sub_10025155C(*(_QWORD *)(qword_100983BD8 + 32 * v2 + 32));
    sub_100161058((unsigned int *)(qword_100983BD8 + 32 * v4 + 9), (void (*)(unint64_t, uint64_t))sub_1001655E8, 0, *(_QWORD *)v5, *(_WORD *)(v5 + 8));
  }
}

uint64_t sub_1001620E0(unsigned int a1, uint64_t a2, __int16 a3, char a4, uint64_t a5)
{
  NSObject *v9;
  NSObject *v10;
  uint64_t *v11;
  char v12;
  int v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  __int16 v20;
  char v21;

  v20 = 278;
  v21 = a4;
  if (qword_100983BD8)
  {
    if (sub_100161C94(a1) == 7)
    {
      if (sub_10005549C())
      {
        sub_100054530("Invalid connection ID %d.", a1);
        v9 = sub_1000544A0(0x50u);
        if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      return 3457;
    }
    v11 = &qword_100983C68;
    qword_100983C68 = (uint64_t)byte_100983C20;
    byte_100983C70 = 0;
    if ((_DWORD)a5 || (v12 = *(_BYTE *)(qword_100983BD8 + 344), (v12 & 1) == 0))
    {
      if ((_DWORD)a5)
      {
        v11 = 0;
LABEL_18:
        v16 = sub_10011AD98(a1, (uint64_t)v11, a5);
        if ((_DWORD)v16)
        {
          v17 = v16;
          if (sub_10005549C())
          {
            sub_100054530("Failed to send GET response %!", v17);
            v18 = sub_1000544A0(0x50u);
            if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
              sub_1006CE7A4();
          }
        }
        return a5;
      }
      v13 = 0;
    }
    else
    {
      byte_100983C20[0] = -105;
      v13 = 1;
      byte_100983C28 = 1;
      *(_BYTE *)(qword_100983BD8 + 344) = v12 & 0xFA | 4;
    }
    v14 = &byte_100983C20[24 * v13];
    *v14 = 76;
    *((_QWORD *)v14 + 2) = &v20;
    *((_WORD *)v14 + 4) = 3;
    v15 = &byte_100983C20[24 * (v13 + 1)];
    *v15 = 73;
    *((_QWORD *)v15 + 2) = a2;
    *((_WORD *)v15 + 4) = a3;
    byte_100983C70 = v13 | 2;
    goto LABEL_18;
  }
  if (sub_10005549C())
  {
    sub_100054530("MAP is not initialized");
    v10 = sub_1000544A0(0x50u);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
  return 103;
}

uint64_t sub_1001622D0(unsigned int a1, char *a2, uint64_t a3)
{
  NSObject *v6;
  NSObject *v7;
  uint64_t *v8;
  char v9;
  int v10;
  char v11;
  char *v12;
  char *v13;
  NSObject *v14;
  _OWORD v16[2];

  if (qword_100983BD8)
  {
    if (sub_100161C94(a1) == 7)
    {
      if (sub_10005549C())
      {
        sub_100054530("Invalid connection ID %d.", a1);
        v6 = sub_1000544A0(0x50u);
        if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      return 3459;
    }
    v8 = &qword_100983CC0;
    qword_100983CC0 = (uint64_t)byte_100983C78;
    byte_100983CC8 = 0;
    if ((_DWORD)a3 || (v9 = *(_BYTE *)(qword_100983BD8 + 344), (v9 & 1) == 0))
    {
      if ((_DWORD)a3)
      {
        v8 = 0;
LABEL_17:
        if (sub_10011B064(a1, (uint64_t)v8, a3))
        {
          if (sub_10005549C())
          {
            sub_100054530("Failed to send PUT response %!", a3);
            v14 = sub_1000544A0(0x50u);
            if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
              sub_1006CE7A4();
          }
        }
        return a3;
      }
    }
    else
    {
      byte_100983C78[0] = -105;
      byte_100983C80 = 1;
      byte_100983CC8 = 1;
      *(_BYTE *)(qword_100983BD8 + 344) = v9 & 0xFA | 4;
    }
    memset(v16, 0, sizeof(v16));
    v10 = strlen(a2);
    sub_100258B24((unsigned __int8 *)a2, v10, v16, 16);
    v11 = byte_100983CC8;
    v12 = &byte_100983C78[24 * byte_100983CC8];
    *v12 = 1;
    *((_QWORD *)v12 + 2) = v16;
    *((_WORD *)v12 + 4) = 16;
    v13 = &byte_100983C78[24 * (v11 + 1)];
    *v13 = 73;
    *((_QWORD *)v13 + 2) = 0;
    *((_WORD *)v13 + 4) = 0;
    byte_100983CC8 = v11 + 2;
    goto LABEL_17;
  }
  if (sub_10005549C())
  {
    sub_100054530("MAP is not initialized");
    v7 = sub_1000544A0(0x50u);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
  return 103;
}

uint64_t sub_100162514(unsigned int a1, char a2, __int16 a3, uint64_t a4, int a5, char *__s)
{
  NSObject *v10;
  uint64_t v11;
  NSObject *v12;
  char v13;
  int v14;
  char *v15;
  char *v16;
  char v17;
  BOOL v18;
  NSObject *v19;
  __int16 v21;
  char v22;
  __int16 v23;
  __int128 v24;
  char v25;
  char v26;
  char v27;

  v21 = 269;
  v22 = a2;
  v23 = 3865;
  qmemcpy(&v24, "YYYYMMDDTHHM", 12);
  HIDWORD(v24) = 307450701;
  v25 = 2;
  v26 = HIBYTE(a3);
  v27 = a3;
  if (__s && strlen(__s) == 15)
  {
    *(_QWORD *)&v24 = *(_QWORD *)__s;
    *(_QWORD *)((char *)&v24 + 7) = *(_QWORD *)(__s + 7);
  }
  if (qword_100983BD8)
  {
    if (sub_100161C94(a1) == 7)
    {
      if (sub_10005549C())
      {
        sub_100054530("Invalid connection ID %d.", a1);
        v10 = sub_1000544A0(0x50u);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      return 3459;
    }
    else
    {
      qword_100983D18 = (uint64_t)byte_100983CD0;
      v13 = *(_BYTE *)(qword_100983BD8 + 344);
      if ((v13 & 1) != 0)
      {
        byte_100983CD0[0] = -105;
        v14 = 1;
        byte_100983CD8 = 1;
        *(_BYTE *)(qword_100983BD8 + 344) = v13 & 0xFA | 4;
      }
      else
      {
        v14 = 0;
      }
      v15 = &byte_100983CD0[24 * v14];
      *v15 = 76;
      *((_QWORD *)v15 + 2) = &v21;
      *((_WORD *)v15 + 4) = 24;
      v16 = &byte_100983CD0[24 * (v14 + 1)];
      *v16 = 73;
      *((_QWORD *)v16 + 2) = a4;
      *((_WORD *)v16 + 4) = a5;
      v17 = v14 | 2;
      if (a5)
        v18 = a4 == 0;
      else
        v18 = 1;
      if (v18)
        v17 = v14 + 1;
      byte_100983D20 = v17;
      v11 = sub_10011AD98(a1, (uint64_t)&qword_100983D18, 0);
      if ((_DWORD)v11)
      {
        if (sub_10005549C())
        {
          sub_100054530("Failed to send GET response %!", v11);
          v19 = sub_1000544A0(0x50u);
          if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
            sub_1006CE7A4();
        }
      }
    }
  }
  else
  {
    if (sub_10005549C())
    {
      sub_100054530("MAP is not initialized");
      v12 = sub_1000544A0(0x50u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 103;
  }
  return v11;
}

uint64_t sub_10016278C(unsigned int a1, __int16 a2, uint64_t a3, __int16 a4)
{
  NSObject *v7;
  uint64_t v8;
  NSObject *v9;
  char v10;
  int v11;
  char *v12;
  char *v13;
  NSObject *v14;
  __int16 v16;
  char v17;
  char v18;

  v16 = 529;
  v17 = HIBYTE(a2);
  v18 = a2;
  if (qword_100983BD8)
  {
    if (sub_100161C94(a1) == 7)
    {
      if (sub_10005549C())
      {
        sub_100054530("Invalid connection ID %d.", a1);
        v7 = sub_1000544A0(0x50u);
        if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      return 3460;
    }
    else
    {
      qword_100983D70 = (uint64_t)byte_100983D28;
      v10 = *(_BYTE *)(qword_100983BD8 + 344);
      if ((v10 & 1) != 0)
      {
        byte_100983D28[0] = -105;
        v11 = 1;
        byte_100983D30 = 1;
        *(_BYTE *)(qword_100983BD8 + 344) = v10 & 0xFA | 4;
      }
      else
      {
        v11 = 0;
      }
      v12 = &byte_100983D28[24 * v11];
      *v12 = 76;
      *((_QWORD *)v12 + 2) = &v16;
      *((_WORD *)v12 + 4) = 4;
      v13 = &byte_100983D28[24 * (v11 + 1)];
      *v13 = 73;
      *((_QWORD *)v13 + 2) = a3;
      *((_WORD *)v13 + 4) = a4;
      byte_100983D78 = v11 | 2;
      v8 = sub_10011AD98(a1, (uint64_t)&qword_100983D70, 0);
      if ((_DWORD)v8)
      {
        if (sub_10005549C())
        {
          sub_100054530("Failed to send GET response %!", v8);
          v14 = sub_1000544A0(0x50u);
          if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
            sub_1006CE7A4();
        }
      }
    }
  }
  else
  {
    if (sub_10005549C())
    {
      sub_100054530("MAP is not initialized");
      v9 = sub_1000544A0(0x50u);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 103;
  }
  return v8;
}

void sub_100162968(unsigned int a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;

  v2 = sub_10011B928(a1, a2);
  if ((_DWORD)v2)
  {
    v3 = v2;
    if (sub_10005549C())
    {
      sub_100054530("Can't confirm SetPath %!", v3);
      v4 = sub_1000544A0(0x50u);
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
}

void sub_1001629D8(unsigned int a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;

  v2 = sub_10011B064(a1, 0, a2);
  if ((_DWORD)v2)
  {
    v3 = v2;
    if (sub_10005549C())
    {
      sub_100054530("Could not send SetMessageStatus response : %!", v3);
      v4 = sub_1000544A0(0x50u);
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
}

void sub_100162A50(unsigned int a1, int a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;

  qword_100983D98 = (uint64_t)&byte_100983D80;
  byte_100983DA0 = 0;
  if (!a2)
  {
    v2 = *(_BYTE *)(qword_100983BD8 + 344);
    if ((v2 & 1) != 0)
    {
      byte_100983D80 = -105;
      byte_100983D88 = 1;
      byte_100983DA0 = 1;
      *(_BYTE *)(qword_100983BD8 + 344) = v2 & 0xFA | 4;
    }
  }
  v3 = sub_10011B064(a1, (uint64_t)&qword_100983D98, a2);
  if ((_DWORD)v3)
  {
    v4 = v3;
    if (sub_10005549C())
    {
      sub_100054530("Could not send BT_MAP_SetNotificationFilter response : %!", v4);
      v5 = sub_1000544A0(0x50u);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
}

void sub_100162B1C(unsigned int a1, int a2)
{
  int v2;
  char v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;

  v2 = 0;
  qword_100983DD8 = (uint64_t)byte_100983DA8;
  if (!a2)
  {
    v3 = *(_BYTE *)(qword_100983BD8 + 344);
    if ((v3 & 1) != 0)
    {
      byte_100983DA8[0] = -105;
      v2 = 1;
      byte_100983DB0 = 1;
      *(_BYTE *)(qword_100983BD8 + 344) = v3 & 0xFA | 4;
    }
  }
  v4 = &byte_100983DA8[24 * v2];
  *v4 = 73;
  *((_QWORD *)v4 + 2) = "Apple Inc.";
  *((_WORD *)v4 + 4) = 11;
  byte_100983DE0 = v2 + 1;
  v5 = sub_10011AD98(a1, (uint64_t)&qword_100983DD8, 0);
  if ((_DWORD)v5)
  {
    v6 = v5;
    if (sub_10005549C())
    {
      sub_100054530("Failed to send GET response %!", v6);
      v7 = sub_1000544A0(0x50u);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
}

void sub_100162C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  NSObject *v8;
  NSObject *v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v13;
  unsigned __int8 *v14;
  int v15;
  unsigned int v16;
  uint64_t v17;
  int v18;
  _QWORD *v19;
  uint64_t v20;
  NSObject *v21;
  NSObject *v22;
  int v23;
  __int16 v24;

  v24 = 0;
  v23 = 0;
  if (sub_10011BA08(a1, (uint64_t)&v23))
  {
    if (sub_10005549C())
    {
      sub_100054530("Failed to get client address");
      v8 = sub_1000544A0(0x50u);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
    goto LABEL_30;
  }
  if (sub_10016165C((uint64_t)&v23) == 7)
  {
    if (*(_BYTE *)(qword_100983BD8 + 232) == 7)
    {
      if (sub_10005549C())
      {
        sub_100054530("No connection slots left");
        v9 = sub_1000544A0(0x50u);
        if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
    }
    else
    {
      v11 = 0;
      while (1)
      {
        if (*(_BYTE *)(qword_100983BD8 + v11 + 8))
        {
          if (*(unsigned __int16 *)(qword_100983BD8 + v11 + 16) == (_DWORD)a1)
            break;
          if (v23 == *(_DWORD *)(qword_100983BD8 + v11 + 9) && v24 == *(_WORD *)(qword_100983BD8 + v11 + 13))
            break;
        }
        v11 += 32;
        if (v11 == 224)
        {
          v13 = 0;
          v14 = (unsigned __int8 *)(qword_100983BD8 + 8);
          while (1)
          {
            v15 = *v14;
            v14 += 32;
            if (!v15)
              break;
            if (++v13 == 7)
            {
              v16 = 7;
              goto LABEL_26;
            }
          }
          v16 = v13;
LABEL_26:
          v17 = qword_100983BD8 + 32 * v16;
          *(_OWORD *)(v17 + 8) = 0u;
          *(_OWORD *)(v17 + 24) = 0u;
          *(_WORD *)(v17 + 16) = a1;
          v18 = v23;
          *(_WORD *)(v17 + 13) = v24;
          *(_DWORD *)(v17 + 9) = v18;
          *(_BYTE *)(qword_100983BD8 + 32 * v16 + 8) = 1;
          v19 = sub_100251288((uint64_t)sub_1001636C4, (uint64_t)sub_10016370C);
          v20 = qword_100983BD8;
          *(_QWORD *)(qword_100983BD8 + 32 * v16 + 32) = v19;
          ++*(_BYTE *)(v20 + 232);
          if (v16 != 7)
          {
            (*(void (**)(int *, uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 240))(&v23, a2, a3, a4, a1);
            return;
          }
          break;
        }
      }
    }
    if (sub_10005549C())
    {
      sub_100054530("Could not create new device.");
      v21 = sub_1000544A0(0x50u);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
        goto LABEL_29;
    }
  }
  else if (sub_10005549C())
  {
    sub_100054530("Device is already connected.");
    v10 = sub_1000544A0(0x50u);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
LABEL_29:
      sub_1006CE7A4();
  }
LABEL_30:
  if (sub_10011B27C(a1, 0, 3451) && sub_10005549C())
  {
    sub_100054530("Failed to inform client of connection failure");
    v22 = sub_1000544A0(0x50u);
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
      sub_1006D17C4();
  }
}

uint64_t sub_100162EE8(uint64_t a1)
{
  uint64_t result;
  double v3;

  result = sub_100161C94(a1);
  if ((_DWORD)result != 7)
  {
    v3 = sub_100161E8C(a1);
    return (*(uint64_t (**)(uint64_t, _QWORD, double))(qword_100983BD8 + 248))(a1, 0, v3);
  }
  return result;
}

uint64_t sub_100162F38(uint64_t a1, uint64_t *a2, int a3)
{
  unsigned int v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  NSObject *v13;
  NSObject *v14;
  uint64_t v15;
  NSObject *v16;
  NSObject *v17;
  uint64_t v18;
  NSObject *v19;
  NSObject *v20;
  void (*v21)(uint64_t, uint64_t);
  NSObject *v22;

  v6 = sub_100161C94(a1);
  if (v6 >= 7)
  {
    if (sub_10005549C())
    {
      sub_100054530("Could not get the device.");
      v7 = sub_1000544A0(0x50u);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 3452;
  }
  v9 = v6;
  v10 = *(_QWORD *)(qword_100983BD8 + 32 * v6 + 24);
  if (a3 != 1752 && a3 != 1701)
  {
    v8 = 0;
    goto LABEL_16;
  }
  if (a2 && !v10)
  {
    v11 = sub_100114588(0x1B0uLL);
    if (!v11)
    {
      if (sub_10005549C())
      {
        sub_100054530("ERROR : OI_STATUS_OUT_OF_MEMORY");
        v17 = sub_1000544A0(0x50u);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      v8 = 106;
      goto LABEL_32;
    }
    v10 = (uint64_t)v11;
    *v11 = 2;
    v12 = sub_100163714(a2, (uint64_t)v11);
    if ((_DWORD)v12)
    {
      v8 = v12;
      if (!sub_10005549C())
        goto LABEL_31;
      sub_100054530("ERROR (parsing): %!", v8);
      v13 = sub_1000544A0(0x50u);
      if (!os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
        goto LABEL_31;
      goto LABEL_30;
    }
    goto LABEL_48;
  }
  if (!a2 && v10)
  {
    if (*(_BYTE *)v10 != 2)
    {
      if (sub_10005549C())
      {
        sub_100054530("ERROR : OI_OBEX_PRECONDITION_FAILED");
        v14 = sub_1000544A0(0x50u);
        if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      v8 = 1741;
      goto LABEL_31;
    }
    goto LABEL_48;
  }
  if (a2 && v10)
  {
    v15 = sub_100163714(a2, v10);
    if ((_DWORD)v15)
    {
      v8 = v15;
      if (!sub_10005549C())
        goto LABEL_31;
      sub_100054530("ERROR (parsing): %!", v8);
      v16 = sub_1000544A0(0x50u);
      if (!os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
        goto LABEL_31;
      goto LABEL_30;
    }
    if (a3 == 1752)
    {
      v18 = sub_10011AD98(a1, 0, 1701);
      if (!(_DWORD)v18)
      {
LABEL_49:
        *(_QWORD *)(qword_100983BD8 + 32 * v9 + 24) = v10;
        v8 = sub_10011AD98(a1, 0, 1701);
        if (!(_DWORD)v8)
          return v8;
        if (sub_10005549C())
        {
          sub_100054530("ERROR (OI_OBEXSRV_GetResponse): %!", v8);
          v20 = sub_1000544A0(0x50u);
          if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
            sub_1006CE7A4();
        }
LABEL_16:
        if (v10)
        {
LABEL_31:
          sub_100163FE8((_QWORD *)v10);
          *(_QWORD *)(qword_100983BD8 + 32 * v9 + 24) = 0;
        }
LABEL_32:
        if ((*(_BYTE *)(qword_100983BD8 + 344) & 4) != 0)
          *(_BYTE *)(qword_100983BD8 + 344) = 0;
        return v8;
      }
      v8 = v18;
      if (!sub_10005549C())
        goto LABEL_31;
      sub_100054530("ERROR (OI_OBEXSRV_GetResponse): %!", v8);
      v19 = sub_1000544A0(0x50u);
      if (!os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
        goto LABEL_31;
LABEL_30:
      sub_1006CE7A4();
      goto LABEL_31;
    }
  }
  else if (!((unint64_t)a2 | v10))
  {
    if (a3 != 1701)
    {
      v8 = 1741;
      goto LABEL_32;
    }
    if ((*(_BYTE *)(qword_100983BD8 + 344) & 4) != 0)
      sub_10011AF20(a1);
    return 0;
  }
LABEL_48:
  if (a3 != 1701)
    goto LABEL_49;
  v21 = *(void (**)(uint64_t, uint64_t))(v10 + 16);
  if (v21)
  {
    v21(v10, a1);
  }
  else
  {
    if (sub_10005549C())
    {
      sub_100054530("No function defined for this GET.");
      v22 = sub_1000544A0(0x50u);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    sub_10011AD98(a1, 0, 0);
  }
  sub_100163FE8((_QWORD *)v10);
  v8 = 0;
  *(_QWORD *)(qword_100983BD8 + 32 * v9 + 24) = 0;
  return v8;
}

uint64_t sub_100163378(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v6;
  NSObject *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  unsigned int v15;
  uint64_t *v16;
  uint64_t (*v17)(_QWORD *, uint64_t);
  NSObject *v18;
  NSObject *v19;

  v6 = sub_100161C94(a1);
  if (v6 >= 7)
  {
    if (sub_10005549C())
    {
      sub_100054530("Could not get the device.");
      v7 = sub_1000544A0(0x50u);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 3453;
  }
  v8 = v6;
  v9 = *(_QWORD **)(qword_100983BD8 + 32 * v6 + 24);
  if (v9)
  {
    if (*(_BYTE *)v9 != 1)
    {
      a2 = 1741;
      goto LABEL_13;
    }
  }
  else
  {
    v9 = sub_100114588(0x1B0uLL);
    *(_BYTE *)v9 = 1;
  }
  if (!a2)
  {
LABEL_13:
    sub_100163FE8(v9);
    v11 = qword_100983BD8;
    *(_QWORD *)(qword_100983BD8 + 32 * v8 + 24) = 0;
    if ((*(_BYTE *)(v11 + 344) & 4) != 0)
      *(_BYTE *)(v11 + 344) = 0;
    return a2;
  }
  v10 = sub_100163714((uint64_t *)a2, (uint64_t)v9);
  if ((_DWORD)v10)
  {
LABEL_12:
    a2 = v10;
    goto LABEL_13;
  }
  if (a3 != 1701)
  {
    v17 = (uint64_t (*)(_QWORD *, uint64_t))v9[2];
    if (!v17)
    {
      if (sub_10005549C())
      {
        sub_100054530("No function defined for this PUT.");
        v19 = sub_1000544A0(0x50u);
        if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      a2 = 0;
      goto LABEL_13;
    }
    v10 = v17(v9, a1);
    goto LABEL_12;
  }
  v13 = qword_100983BD8;
  *(_QWORD *)(qword_100983BD8 + 32 * v8 + 24) = v9;
  v14 = *(_BYTE *)(v13 + 344);
  if ((v14 & 1) != 0)
  {
    v16 = &qword_100983E18;
    qword_100983E18 = (uint64_t)&byte_100983DE8;
    byte_100983DE8 = -105;
    byte_100983DF0 = 1;
    byte_100983E20 = 1;
    *(_BYTE *)(v13 + 344) = v14 & 0xFA | 4;
    v15 = a1;
  }
  else
  {
    if ((*(_BYTE *)(v13 + 344) & 4) != 0)
      return 0;
    v15 = a1;
    v16 = 0;
  }
  a2 = sub_10011B064(v15, (uint64_t)v16, 1701);
  if ((_DWORD)a2)
  {
    if (sub_10005549C())
    {
      sub_100054530("Could not send PUT response (continue) %!", a2);
      v18 = sub_1000544A0(0x50u);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    goto LABEL_13;
  }
  return a2;
}

uint64_t sub_1001635A4(uint64_t a1, unsigned __int16 *a2, uint64_t a3, char a4)
{
  char *v8;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  unsigned __int16 v14;

  v8 = (char *)sub_100052DC0(0x100uLL);
  if ((a4 & 1) != 0)
    return 1735;
  v10 = v8;
  if (a2)
  {
    v11 = sub_100258BD0(*((_QWORD *)a2 + 1), *a2, v8, 256);
    if ((_DWORD)v11)
    {
      v12 = v11;
      if (sub_10005549C())
      {
        sub_100054530("Failed to get UTF8 string from UTF16 : %!", v12);
        v13 = sub_1000544A0(0x50u);
        if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
    }
    else
    {
      v14 = strlen(v10);
      (*(void (**)(uint64_t, char *, _QWORD, uint64_t, _QWORD))(qword_100983BD8 + 288))(a1, v10, v14, a3, 0);
    }
  }
  else
  {
    (*(void (**)(uint64_t, const char *, _QWORD, uint64_t, _QWORD))(qword_100983BD8 + 288))(a1, "", 0, a3, 0);
  }
  sub_100053298(v10);
  return 0;
}

void *sub_1001636C4(uint64_t a1, uint64_t a2)
{
  size_t v4;
  void *v5;
  void *result;

  v4 = *(unsigned __int16 *)(a2 + 8);
  v5 = sub_100052DC0(v4);
  *(_QWORD *)a1 = v5;
  result = memmove(v5, *(const void **)a2, v4);
  *(_WORD *)(a1 + 8) = v4;
  return result;
}

void sub_10016370C(void **a1)
{
  sub_100053298(*a1);
}

uint64_t sub_100163714(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  signed int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  NSObject *v18;
  signed int v19;
  BOOL v20;
  int v21;
  uint64_t v22;
  char *v23;
  void *v24;
  _BYTE *v25;
  signed int v26;
  NSObject *v27;
  signed int v28;
  NSObject *v29;
  signed int v30;
  _BYTE *v31;
  char *v32;
  _BYTE *v33;
  char v34;
  unsigned __int8 v35;
  uint64_t v36;
  BOOL v37;
  int v38;
  BOOL v39;
  void *v40;
  void *v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  size_t v45;
  unsigned __int16 *v46;
  unsigned int v47;
  char *v48;
  char *v49;
  NSObject *v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  void *v54;
  void *v55;
  uint64_t v56;
  unsigned __int16 *v57;
  _BYTE *v58;
  NSObject *v59;
  void *v60;
  NSObject *v62;
  NSObject *v63;
  signed int v64;
  char v65;
  uint8_t buf[4];
  void *v67;
  __int16 v68;
  int v69;

  if (!*((_BYTE *)a1 + 8))
    return 0;
  v4 = 0;
  while (1)
  {
    v5 = *a1;
    v6 = *(unsigned __int8 *)(*a1 + 24 * v4);
    if (v6 <= 0x48)
    {
      switch(v6)
      {
        case 1u:
          if (!*(_QWORD *)(a2 + 8))
          {
            v56 = v5 + 24 * v4;
            if (*(_QWORD *)(v56 + 16))
            {
              v57 = (unsigned __int16 *)(v56 + 8);
              if (*(_WORD *)(v56 + 8))
              {
                v58 = sub_100052DC0(*(unsigned __int16 *)(v56 + 8));
                *(_QWORD *)(a2 + 8) = v58;
                if (!v58)
                  return 106;
                if (sub_100258BD0(*((_QWORD *)v57 + 1), *v57, v58, *v57))
                {
                  sub_100053298(*(void **)(a2 + 8));
                  *(_QWORD *)(a2 + 8) = 0;
                }
              }
            }
            goto LABEL_113;
          }
          if (sub_10005549C())
          {
            sub_100054530("Got 2 names. ignoring.");
            v50 = sub_1000544A0(0x50u);
            if (os_log_type_enabled(v50, OS_LOG_TYPE_ERROR))
              goto LABEL_103;
          }
          break;
        case 0x42u:
          if (*(_QWORD *)(a2 + 16))
          {
            if (sub_10005549C())
            {
              sub_100054530("2 Header types in this header.");
              v63 = sub_1000544A0(0x50u);
              if (os_log_type_enabled(v63, OS_LOG_TYPE_ERROR))
                sub_1006CE7A4();
            }
            return 1720;
          }
          v51 = v5 + 24 * v4 + 8;
          if (!*(_WORD *)v51 || !*(_QWORD *)(v51 + 8))
            return 1735;
          v52 = 0;
          while (1)
          {
            v53 = strlen(*(const char **)(v51 + 8));
            if (!sub_100258ED8(*(unsigned __int8 **)(v51 + 8), (unsigned __int8 *)(&off_10091CC10)[v52], v53))break;
            v52 += 2;
            if (v52 == 16)
              goto LABEL_113;
          }
          *(_QWORD *)(a2 + 16) = (&off_10091CC10)[v52 + 1];
          goto LABEL_113;
        case 0x48u:
          goto LABEL_79;
      }
      goto LABEL_113;
    }
    if (*(unsigned __int8 *)(*a1 + 24 * v4) > 0x96u)
    {
      if (v6 == 151)
      {
        if (*(_BYTE *)(v5 + 24 * v4 + 8) != 1)
          goto LABEL_113;
        v42 = qword_100983BD8;
        v43 = *(_BYTE *)(qword_100983BD8 + 344) | 1;
      }
      else
      {
        if (v6 != 152 || *(_BYTE *)(v5 + 24 * v4 + 8) != 1)
          goto LABEL_113;
        v42 = qword_100983BD8;
        v43 = *(_BYTE *)(qword_100983BD8 + 344) | 2;
      }
      *(_BYTE *)(v42 + 344) = v43;
      goto LABEL_113;
    }
    if (v6 == 73)
    {
      *(_BYTE *)(a2 + 426) = 1;
LABEL_79:
      v44 = v5 + 24 * v4;
      v47 = *(unsigned __int16 *)(v44 + 8);
      v46 = (unsigned __int16 *)(v44 + 8);
      v45 = v47;
      if (*(_QWORD *)(a2 + 416))
      {
        if ((_DWORD)v45)
        {
          v48 = (char *)sub_100052DC0(*(unsigned __int16 *)(a2 + 424) + v45);
          if (v48)
          {
            v49 = v48;
            memmove(v48, *(const void **)(a2 + 416), *(unsigned __int16 *)(a2 + 424));
            memmove(&v49[*(unsigned __int16 *)(a2 + 424)], *((const void **)v46 + 1), *v46);
            sub_100053298(*(void **)(a2 + 416));
            *(_WORD *)(a2 + 424) += *v46;
            *(_QWORD *)(a2 + 416) = v49;
          }
        }
      }
      else if ((_DWORD)v45)
      {
        *(_WORD *)(a2 + 424) = v45;
        v54 = sub_100052DC0(v45);
        *(_QWORD *)(a2 + 416) = v54;
        if (v54)
        {
          memmove(v54, *(const void **)(v5 + 24 * v4 + 16), *(unsigned __int16 *)(a2 + 424));
        }
        else
        {
          if (sub_10005549C())
          {
            sub_100054530("Could not store body length.");
            v59 = sub_1000544A0(0x50u);
            if (os_log_type_enabled(v59, OS_LOG_TYPE_ERROR))
            {
              v60 = sub_100054494();
              *(_DWORD *)buf = 136446466;
              v67 = v60;
              v68 = 1024;
              v69 = 0xFFFF;
              _os_log_error_impl((void *)&_mh_execute_header, v59, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
            }
          }
          *(_WORD *)(a2 + 424) = 0;
        }
      }
      goto LABEL_113;
    }
    if (v6 == 76)
      break;
LABEL_113:
    if (++v4 >= (unint64_t)*((unsigned __int8 *)a1 + 8))
      return 0;
  }
  v7 = v5 + 24 * v4;
  v10 = *(unsigned __int16 *)(v7 + 8);
  v8 = v7 + 8;
  v9 = v10;
  if (!v10)
  {
    if (!sub_10005549C())
      goto LABEL_113;
    sub_100054530("App Params = 0. Ignoring");
    v50 = sub_1000544A0(0x50u);
    if (!os_log_type_enabled(v50, OS_LOG_TYPE_ERROR))
      goto LABEL_113;
LABEL_103:
    v55 = sub_100054494();
    *(_DWORD *)buf = 136446466;
    v67 = v55;
    v68 = 1024;
    v69 = 0xFFFF;
    _os_log_error_impl((void *)&_mh_execute_header, v50, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
    goto LABEL_113;
  }
  v11 = *(_QWORD *)(v8 + 8);
  if (!v11)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/map/map_server.c");
  v65 = 0;
  v64 = 0;
  v12 = 0;
  v13 = 0;
  while (1)
  {
LABEL_10:
    if (v9 <= (unsigned __int16)v13)
      goto LABEL_113;
    v14 = (unsigned __int16)v13;
    v15 = (unsigned __int16)v13 + 1;
    if (v9 <= (unsigned __int16)(v13 + 1))
    {
      v16 = 1;
      v13 = (unsigned __int16)v13 + 1;
    }
    else
    {
      v16 = 0;
      v13 += 2;
      v12 = *(unsigned __int8 *)(v11 + v15);
    }
    v17 = *(unsigned __int8 *)(v11 + v14);
    if ((v17 - 42) >= 0xFFFFFFD7)
      break;
    if (sub_10005549C())
    {
      sub_100054530("Unknown tag.");
      v18 = sub_1000544A0(0x50u);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
      {
        v24 = sub_100054494();
        *(_DWORD *)buf = 136446466;
        v67 = v24;
        v68 = 1024;
        v69 = 0xFFFF;
        _os_log_error_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
      }
    }
    if (v9 <= (unsigned __int16)v15)
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/map/map_server.c", 1132, "OI_STATUS ParseAppParams(const OI_OBEX_BYTESEQ *, s_OperationRequested *)");
      goto LABEL_116;
    }
    v19 = v9 - (unsigned __int16)v13;
    v20 = v19 < v12;
    if (v19 >= v12)
      v21 = v12;
    else
      v21 = 0;
    v13 += v21;
    if (v20)
      goto LABEL_116;
  }
  v22 = 0;
  v23 = &byte_100739BF5;
  while (2)
  {
    if (*(v23 - 2) == v17)
    {
      v64 = *v23;
      if (((0x10000D8uLL >> v22) & 1) != 0)
        goto LABEL_32;
LABEL_29:
      if (v64 == v12)
      {
        v65 = 0;
        v64 = v12;
        goto LABEL_33;
      }
      if (sub_10005549C())
      {
        sub_100054530("Invalid size %d != %d.", v64, v12);
        v29 = sub_1000544A0(0x50u);
        if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
        {
          v41 = sub_100054494();
          *(_DWORD *)buf = 136446466;
          v67 = v41;
          v68 = 1024;
          v69 = 0xFFFF;
          _os_log_error_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
        }
      }
      if (v9 <= (unsigned __int16)v15)
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/map/map_server.c", 1148, "OI_STATUS ParseAppParams(const OI_OBEX_BYTESEQ *, s_OperationRequested *)");
        v30 = 0;
      }
      else
      {
        v30 = v9 - (unsigned __int16)v13;
      }
      v39 = v30 < v12;
      if (v30 >= v12)
        v38 = v12;
      else
        v38 = 0;
      if (v39)
        goto LABEL_116;
      v65 = 0;
LABEL_68:
      v13 += v38;
      if (!v16)
        goto LABEL_10;
      goto LABEL_116;
    }
    ++v22;
    v23 += 3;
    if (v22 != 27)
      continue;
    break;
  }
  if ((v65 & 1) == 0)
    goto LABEL_29;
LABEL_32:
  v65 = 1;
LABEL_33:
  v25 = sub_100052DC0(v12);
  if (!v25)
  {
    if (sub_10005549C())
    {
      sub_100054530("Could not allocate buffer of size %d.", v12);
      v27 = sub_1000544A0(0x50u);
      if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
      {
        v40 = sub_100054494();
        *(_DWORD *)buf = 136446466;
        v67 = v40;
        v68 = 1024;
        v69 = 0xFFFF;
        _os_log_error_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
      }
    }
    if (v9 <= (unsigned __int16)v15)
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/map/map_server.c", 1156, "OI_STATUS ParseAppParams(const OI_OBEX_BYTESEQ *, s_OperationRequested *)");
      v28 = 0;
    }
    else
    {
      v28 = v9 - (unsigned __int16)v13;
    }
    v37 = v28 < v12;
    if (v28 >= v12)
      v38 = v12;
    else
      v38 = 0;
    if (v37)
      goto LABEL_116;
    goto LABEL_68;
  }
  if (v9 <= (unsigned __int16)v15)
  {
    v31 = v25;
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/map/map_server.c", 1161, "OI_STATUS ParseAppParams(const OI_OBEX_BYTESEQ *, s_OperationRequested *)");
    v25 = v31;
    v26 = 0;
  }
  else
  {
    v26 = v9 - (unsigned __int16)v13;
  }
  if (v26 >= v12)
  {
    if (v12)
    {
      v32 = (char *)(v11 + (unsigned __int16)v13);
      v33 = v25;
      do
      {
        v34 = *v32++;
        *v33++ = v34;
      }
      while (v33 < &v25[v12]);
    }
    v13 += v12;
  }
  else
  {
    v16 = 1;
  }
  v35 = *(_BYTE *)(a2 + 408);
  v36 = a2 + 24 * v35;
  *(_BYTE *)(v36 + 24) = v17;
  *(_QWORD *)(v36 + 32) = v25;
  *(_BYTE *)(v36 + 40) = v12;
  *(_BYTE *)(a2 + 408) = v35 + 1;
  if (!v16)
    goto LABEL_10;
LABEL_116:
  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/map/map_server.c", 1126, "OI_STATUS ParseAppParams(const OI_OBEX_BYTESEQ *, s_OperationRequested *)");
  if (sub_10005549C())
  {
    sub_100054530("MAP: Application parameters are corrupted");
    v62 = sub_1000544A0(0x50u);
    if (os_log_type_enabled(v62, OS_LOG_TYPE_ERROR))
      sub_1006D2804();
  }
  return 1741;
}

void sub_100163FE8(_QWORD *ptr)
{
  void *v2;
  void *v3;
  unint64_t v4;
  void **v5;
  void *v6;

  v2 = (void *)ptr[1];
  if (v2)
    sub_100053298(v2);
  v3 = (void *)ptr[52];
  if (v3)
    sub_100053298(v3);
  if (*((_BYTE *)ptr + 408))
  {
    v4 = 0;
    v5 = (void **)(ptr + 4);
    do
    {
      v6 = *v5;
      v5 += 3;
      sub_100053298(v6);
      ++v4;
    }
    while (v4 < *((unsigned __int8 *)ptr + 408));
  }
  *((_OWORD *)ptr + 25) = 0u;
  *((_OWORD *)ptr + 26) = 0u;
  *((_OWORD *)ptr + 23) = 0u;
  *((_OWORD *)ptr + 24) = 0u;
  *((_OWORD *)ptr + 21) = 0u;
  *((_OWORD *)ptr + 22) = 0u;
  *((_OWORD *)ptr + 19) = 0u;
  *((_OWORD *)ptr + 20) = 0u;
  *((_OWORD *)ptr + 17) = 0u;
  *((_OWORD *)ptr + 18) = 0u;
  *((_OWORD *)ptr + 15) = 0u;
  *((_OWORD *)ptr + 16) = 0u;
  *((_OWORD *)ptr + 13) = 0u;
  *((_OWORD *)ptr + 14) = 0u;
  *((_OWORD *)ptr + 11) = 0u;
  *((_OWORD *)ptr + 12) = 0u;
  *((_OWORD *)ptr + 9) = 0u;
  *((_OWORD *)ptr + 10) = 0u;
  *((_OWORD *)ptr + 7) = 0u;
  *((_OWORD *)ptr + 8) = 0u;
  *((_OWORD *)ptr + 5) = 0u;
  *((_OWORD *)ptr + 6) = 0u;
  *((_OWORD *)ptr + 3) = 0u;
  *((_OWORD *)ptr + 4) = 0u;
  *((_OWORD *)ptr + 1) = 0u;
  *((_OWORD *)ptr + 2) = 0u;
  *(_OWORD *)ptr = 0u;
  sub_100053298(ptr);
}

uint64_t sub_10016408C(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v4;
  unsigned __int8 *v5;
  NSObject *v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  NSObject *v13;
  void (*v14)(uint64_t, _QWORD);
  int v16;
  __int16 v17;
  unsigned __int8 v18;
  uint8_t buf[4];
  void *v20;
  __int16 v21;
  int v22;

  v18 = 0;
  v17 = 0;
  v16 = 0;
  if (*a1 == 1)
  {
    if (a1[408])
    {
      v4 = 0;
      v5 = a1 + 24;
      do
      {
        if (*v5 == 14)
        {
          __memmove_chk(&v18, *((_QWORD *)v5 + 1), v5[16], 1);
        }
        else if (sub_10005549C())
        {
          sub_100054530("Unknown application parameter %d", *v5);
          v6 = sub_1000544A0(0x50u);
          if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
          {
            v7 = sub_100054494();
            *(_DWORD *)buf = 136446466;
            v20 = v7;
            v21 = 1024;
            v22 = 0xFFFF;
            _os_log_error_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
          }
        }
        ++v4;
        v5 += 24;
      }
      while (v4 < a1[408]);
    }
    v10 = sub_10011B064(a2, 0, 0);
    if ((_DWORD)v10)
    {
      v9 = v10;
      if (sub_10005549C())
      {
        sub_100054530("Could not send PUT response : %!", v9);
        v11 = sub_1000544A0(0x50u);
        if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
    }
    else
    {
      v12 = sub_10011BA08(a2, (uint64_t)&v16);
      if ((_DWORD)v12)
      {
        v9 = v12;
        if (sub_10005549C())
        {
          sub_100054530("Could get address from connection %d : %!", a2, v9);
          v13 = sub_1000544A0(0x50u);
          if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
            sub_1006CE7A4();
        }
      }
      else
      {
        v14 = *(void (**)(uint64_t, _QWORD))(qword_100983BD8 + 320);
        if (v14)
          v14(a2, v18);
        if (v18)
        {
          return sub_100160A90(&v16);
        }
        else
        {
          sub_100160F64((uint64_t)&v16);
          return 0;
        }
      }
    }
  }
  else
  {
    if (sub_10005549C())
    {
      sub_100054530("Send events should be PUT, not %d", *a1);
      v8 = sub_1000544A0(0x50u);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 1720;
  }
  return v9;
}

uint64_t sub_100164350(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  _BYTE *v7;
  int v8;
  NSObject *v9;
  void (*v11)(uint64_t, _QWORD, _QWORD);

  if (*a1 == 2)
  {
    v4 = a1[408];
    if (a1[408])
    {
      LOWORD(v5) = 0;
      LOWORD(v6) = 0;
      v7 = a1 + 40;
      do
      {
        v8 = *(v7 - 16);
        if (v8 == 2)
        {
          if (*v7 == 2)
            v5 = bswap32(**((unsigned __int16 **)v7 - 1)) >> 16;
          else
            LOWORD(v5) = 0;
        }
        else if (v8 == 1)
        {
          if (*v7 == 2)
            v6 = bswap32(**((unsigned __int16 **)v7 - 1)) >> 16;
          else
            LOWORD(v6) = 0;
        }
        v7 += 24;
        --v4;
      }
      while (v4);
    }
    else
    {
      LOWORD(v6) = 0;
      LOWORD(v5) = 0;
    }
    v11 = *(void (**)(uint64_t, _QWORD, _QWORD))(qword_100983BD8 + 280);
    if (!v11)
    {
      sub_100253460();
      v11 = *(void (**)(uint64_t, _QWORD, _QWORD))(qword_100983BD8 + 280);
    }
    v11(a2, (unsigned __int16)v6, (unsigned __int16)v5);
    return 0;
  }
  else
  {
    if (sub_10005549C())
    {
      sub_100054530("Send events should be GET, not %d", *a1);
      v9 = sub_1000544A0(0x50u);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 1720;
  }
}

uint64_t sub_100164498(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unsigned int v7;
  _BYTE *v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  void *v16;
  NSObject *v17;
  void (*v19)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD, _BYTE *, _BYTE *, char, _BYTE *, _OWORD *, char);
  char v20;
  char v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  uint8_t buf[4];
  void *v25;
  __int16 v26;
  int v27;
  _OWORD v28[16];
  _BYTE v29[256];
  _BYTE v30[32];
  _BYTE v31[40];

  v23 = -1;
  v22 = 12;
  memset(v31, 0, 32);
  memset(v30, 0, sizeof(v30));
  v21 = 0;
  memset(v29, 0, 255);
  memset(v28, 0, 255);
  v20 = 0;
  if (*a1 == 2)
  {
    v4 = *((_QWORD *)a1 + 1);
    if (a1[408])
    {
      v5 = 0;
      v6 = 0;
      LOWORD(v7) = 0;
      v8 = a1 + 40;
      LOWORD(v9) = 1024;
      do
      {
        switch(*(v8 - 16))
        {
          case 1:
            if (*v8 == 2)
              v9 = bswap32(**((unsigned __int16 **)v8 - 1)) >> 16;
            else
              LOWORD(v9) = 0;
            break;
          case 2:
            if (*v8 == 2)
              v7 = bswap32(**((unsigned __int16 **)v8 - 1)) >> 16;
            else
              LOWORD(v7) = 0;
            break;
          case 3:
            v10 = *((_QWORD *)v8 - 1);
            v11 = *v8;
            v12 = &v22;
            goto LABEL_37;
          case 4:
            v10 = *((_QWORD *)v8 - 1);
            if (*v8 >= 0x1Fu)
              v11 = 31;
            else
              v11 = *v8;
            v12 = v31;
            goto LABEL_18;
          case 5:
            v10 = *((_QWORD *)v8 - 1);
            if (*v8 >= 0x1Fu)
              v11 = 31;
            else
              v11 = *v8;
            v12 = v30;
LABEL_18:
            v13 = 32;
            goto LABEL_38;
          case 6:
            v10 = *((_QWORD *)v8 - 1);
            v11 = *v8;
            v12 = (unsigned __int8 *)&v21;
            goto LABEL_37;
          case 7:
            v10 = *((_QWORD *)v8 - 1);
            if (*v8 >= 0xFEu)
              v11 = 254;
            else
              v11 = *v8;
            v12 = v29;
            goto LABEL_28;
          case 8:
            v10 = *((_QWORD *)v8 - 1);
            if (*v8 >= 0xFEu)
              v11 = 254;
            else
              v11 = *v8;
            v12 = (unsigned __int8 *)v28;
LABEL_28:
            v13 = 255;
            goto LABEL_38;
          case 9:
            v10 = *((_QWORD *)v8 - 1);
            v11 = *v8;
            v12 = (unsigned __int8 *)&v20;
            goto LABEL_37;
          case 0x10:
            if (*v8 == 4)
              v6 = bswap32(**((_DWORD **)v8 - 1));
            break;
          case 0x13:
            v10 = *((_QWORD *)v8 - 1);
            v11 = *v8;
            v12 = &v23;
LABEL_37:
            v13 = 1;
LABEL_38:
            __memmove_chk(v12, v10, v11, v13);
            break;
          default:
            if (sub_10005549C())
            {
              v14 = v4;
              sub_100054530("Unknown application parameter %d", *(v8 - 16));
              v15 = sub_1000544A0(0x50u);
              if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
              {
                v16 = sub_100054494();
                *(_DWORD *)buf = 136446466;
                v25 = v16;
                v26 = 1024;
                v27 = 0xFFFF;
                _os_log_error_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
              }
              v4 = v14;
            }
            break;
        }
        ++v5;
        v8 += 24;
      }
      while (v5 < a1[408]);
    }
    else
    {
      LOWORD(v7) = 0;
      v6 = 0;
      LOWORD(v9) = 1024;
    }
    v19 = *(void (**)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD, _BYTE *, _BYTE *, char, _BYTE *, _OWORD *, char))(qword_100983BD8 + 272);
    if (!v19)
    {
      sub_100253460();
      v19 = *(void (**)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD, _BYTE *, _BYTE *, char, _BYTE *, _OWORD *, char))(qword_100983BD8 + 272);
    }
    v19(a2, v4, (unsigned __int16)v9, (unsigned __int16)v7, v23, v6, v22, v31, v30, v21, v29, v28, v20);
    return 0;
  }
  else
  {
    if (sub_10005549C())
    {
      sub_100054530("Send events should be GET, not %d", *a1);
      v17 = sub_1000544A0(0x50u);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 1720;
  }
}

uint64_t sub_100164874(unsigned __int8 *a1, uint64_t a2)
{
  int v4;
  unint64_t v5;
  unsigned __int8 *v6;
  int v7;
  const char *v8;
  NSObject *v9;
  const char *v10;
  const char *v11;
  void *v12;
  unint64_t v13;
  unsigned __int8 *v14;
  int v15;
  const char *v16;
  NSObject *v17;
  const char *v18;
  const char *v19;
  void *v20;
  uint64_t v21;
  NSObject *v22;
  void (*v23)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD);
  void (*v24)(uint64_t, _QWORD, _QWORD);
  unsigned __int8 v26;
  unsigned __int8 v27;
  unsigned __int8 v28;
  uint8_t buf[4];
  void *v30;
  __int16 v31;
  int v32;

  v4 = *a1;
  if (v4 == 1)
  {
    v28 = 0;
    v27 = 1;
    v26 = 1;
    if (!a1[408])
    {
LABEL_63:
      v24 = *(void (**)(uint64_t, _QWORD, _QWORD))(qword_100983BD8 + 264);
      if (!v24)
      {
        sub_100253460();
        v24 = *(void (**)(uint64_t, _QWORD, _QWORD))(qword_100983BD8 + 264);
      }
      v24(a2, *((_QWORD *)a1 + 52), *((unsigned __int16 *)a1 + 212));
      return 0;
    }
    v13 = 0;
    v14 = a1 + 40;
    while (1)
    {
      v15 = *(v14 - 16);
      switch(v15)
      {
        case 20:
          __memmove_chk(&v26, *((_QWORD *)v14 - 1), *v14, 1);
          if (!sub_10005549C())
            goto LABEL_53;
          v18 = "UTF8";
          if (!v26)
            v18 = "native";
          sub_100054530("Charset is set to %s", v18);
          v17 = sub_1000544A0(0x50u);
          if (!os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
            goto LABEL_53;
          break;
        case 12:
          __memmove_chk(&v27, *((_QWORD *)v14 - 1), *v14, 1);
          if (!sub_10005549C())
            goto LABEL_53;
          v19 = v27 ? "ON" : "OFF";
          sub_100054530("Retry is set to %s", v19);
          v17 = sub_1000544A0(0x50u);
          if (!os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
            goto LABEL_53;
          break;
        case 11:
          __memmove_chk(&v28, *((_QWORD *)v14 - 1), *v14, 1);
          if (!sub_10005549C())
            goto LABEL_53;
          v16 = v28 ? "ON" : "OFF";
          sub_100054530("Transparent is set to %s", v16);
          v17 = sub_1000544A0(0x50u);
          if (!os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
            goto LABEL_53;
          break;
        default:
          if (!sub_10005549C())
            goto LABEL_53;
          sub_100054530("Unknown application parameter %d", *(v14 - 16));
          v17 = sub_1000544A0(0x50u);
          if (!os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
            goto LABEL_53;
          break;
      }
      v20 = sub_100054494();
      *(_DWORD *)buf = 136446466;
      v30 = v20;
      v31 = 1024;
      v32 = 0xFFFF;
      _os_log_error_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
LABEL_53:
      ++v13;
      v14 += 24;
      if (v13 >= a1[408])
        goto LABEL_63;
    }
  }
  if (v4 == 2)
  {
    v28 = 0;
    v27 = 1;
    v26 = 1;
    if (a1[408])
    {
      v5 = 0;
      v6 = a1 + 40;
      do
      {
        v7 = *(v6 - 16);
        switch(v7)
        {
          case 21:
            __memmove_chk(&v26, *((_QWORD *)v6 - 1), *v6, 1);
            if (!sub_10005549C())
              goto LABEL_26;
            v10 = "First";
            if (!v26)
              v10 = "Next";
            sub_100054530("Fraction set to %s", v10);
            v9 = sub_1000544A0(0x50u);
            if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
              goto LABEL_26;
            break;
          case 20:
            __memmove_chk(&v27, *((_QWORD *)v6 - 1), *v6, 1);
            if (!sub_10005549C())
              goto LABEL_26;
            v11 = "UTF8";
            if (!v27)
              v11 = "native";
            sub_100054530("Charset is set to %s", v11);
            v9 = sub_1000544A0(0x50u);
            if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
              goto LABEL_26;
            break;
          case 10:
            __memmove_chk(&v28, *((_QWORD *)v6 - 1), *v6, 1);
            if (!sub_10005549C())
              goto LABEL_26;
            v8 = v28 ? "ON" : "OFF";
            sub_100054530("Attachement is set to %s", v8);
            v9 = sub_1000544A0(0x50u);
            if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
              goto LABEL_26;
            break;
          default:
            if (!sub_10005549C())
              goto LABEL_26;
            sub_100054530("Unknown application parameter %d", *(v6 - 16));
            v9 = sub_1000544A0(0x50u);
            if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
              goto LABEL_26;
            break;
        }
        v12 = sub_100054494();
        *(_DWORD *)buf = 136446466;
        v30 = v12;
        v31 = 1024;
        v32 = 0xFFFF;
        _os_log_error_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
LABEL_26:
        ++v5;
        v6 += 24;
      }
      while (v5 < a1[408]);
    }
    v23 = *(void (**)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))(qword_100983BD8 + 256);
    if (!v23)
    {
      sub_100253460();
      v23 = *(void (**)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))(qword_100983BD8 + 256);
    }
    v23(a2, *((_QWORD *)a1 + 1), v28, v27, v26);
    return 0;
  }
  if (!sub_10005549C())
    return 1720;
  v21 = 1720;
  sub_100054530("Error in GET or PUT message : %!", 1720);
  v22 = sub_1000544A0(0x50u);
  if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
  {
    sub_1006CE7A4();
    return 1720;
  }
  return v21;
}

uint64_t sub_100164F70(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v4;
  int v5;
  int v6;
  unsigned __int8 *v7;
  int v8;
  NSObject *v9;
  void *v10;
  NSObject *v11;
  void (*v13)(uint64_t, BOOL, _QWORD);
  NSObject *v14;
  uint8_t buf[4];
  void *v16;
  __int16 v17;
  int v18;

  if (*a1 != 1)
  {
    if (sub_10005549C())
    {
      sub_100054530("Send events should be PUT, not %d", *a1);
      v11 = sub_1000544A0(0x50u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 1720;
  }
  if (!*((_QWORD *)a1 + 1))
  {
    if (sub_10005549C())
    {
      sub_100054530("Message handle is NULL");
      v14 = sub_1000544A0(0x50u);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 1739;
  }
  if (!a1[408])
  {
    v5 = 0;
LABEL_35:
    v13 = *(void (**)(uint64_t, BOOL, _QWORD))(qword_100983BD8 + 304);
    if (!v13)
    {
      sub_100253460();
      v13 = *(void (**)(uint64_t, BOOL, _QWORD))(qword_100983BD8 + 304);
    }
    goto LABEL_37;
  }
  v4 = 0;
  v5 = 0;
  v6 = 0;
  v7 = a1 + 40;
  do
  {
    v8 = *(v7 - 16);
    if (v8 == 24)
    {
      if (*v7 == 1)
      {
        v5 = **((unsigned __int8 **)v7 - 1);
        goto LABEL_19;
      }
      if (sub_10005549C())
      {
        sub_100054530("Invalid msg of len %d for MapTagStatusValue", *v7);
        v9 = sub_1000544A0(0x50u);
        if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        {
LABEL_21:
          v10 = sub_100054494();
          *(_DWORD *)buf = 136446466;
          v16 = v10;
          v17 = 1024;
          v18 = 0xFFFF;
          _os_log_error_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
        }
      }
    }
    else if (v8 == 23)
    {
      if (*v7 == 1)
      {
        v6 = **((unsigned __int8 **)v7 - 1);
        goto LABEL_19;
      }
      if (sub_10005549C())
      {
        sub_100054530("Invalid msg of len %d for MapTagStatusIndicator", *v7);
        v9 = sub_1000544A0(0x50u);
        if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
          goto LABEL_21;
      }
    }
    else if (sub_10005549C())
    {
      sub_100054530("Unknown application parameter %d", *(v7 - 16));
      v9 = sub_1000544A0(0x50u);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        goto LABEL_21;
    }
LABEL_19:
    ++v4;
    v7 += 24;
  }
  while (v4 < a1[408]);
  if (!v6)
    goto LABEL_35;
  if ((v6 & 1) == 0)
    return 0;
  v13 = *(void (**)(uint64_t, BOOL, _QWORD))(qword_100983BD8 + 312);
  if (!v13)
  {
    sub_100253460();
    (*(void (**)(uint64_t, BOOL, _QWORD))(qword_100983BD8 + 312))(a2, v5 != 0, *((_QWORD *)a1 + 1));
    return 0;
  }
LABEL_37:
  v13(a2, v5 != 0, *((_QWORD *)a1 + 1));
  return 0;
}

uint64_t sub_1001652F8(unsigned __int8 *a1, unsigned int a2)
{
  void (*v3)(void);
  uint64_t v4;
  NSObject *v5;
  NSObject *v7;

  if (*a1 == 1)
  {
    v3 = *(void (**)(void))(qword_100983BD8 + 296);
    if (v3)
      v3();
    v4 = sub_10011B064(a2, 0, 0);
    if ((_DWORD)v4)
    {
      if (sub_10005549C())
      {
        sub_100054530("Could not send PUT response : %!", v4);
        v5 = sub_1000544A0(0x50u);
        if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
    }
  }
  else
  {
    if (sub_10005549C())
    {
      sub_100054530("Send events should be PUT, not %d", *a1);
      v7 = sub_1000544A0(0x50u);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 1720;
  }
  return v4;
}

uint64_t sub_1001653EC(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v4;
  unsigned __int8 *v5;
  NSObject *v6;
  void *v7;
  NSObject *v8;
  uint64_t v10;
  unsigned int v11;
  uint8_t buf[4];
  void *v13;
  __int16 v14;
  int v15;

  v11 = 0;
  if (*a1 == 1)
  {
    if (a1[408])
    {
      v4 = 0;
      v5 = a1 + 40;
      do
      {
        if (*(v5 - 16) == 37)
        {
          __memmove_chk(&v11, *((_QWORD *)v5 - 1), *v5, 4);
          if (sub_10005549C())
          {
            sub_100054530("NotificationFilter is set to 0x%x", v11);
            v6 = sub_1000544A0(0x50u);
            if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
            {
              v7 = sub_100054494();
              *(_DWORD *)buf = 136446466;
              v13 = v7;
              v14 = 1024;
              v15 = 0xFFFF;
              _os_log_error_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
            }
          }
        }
        v5 += 24;
        ++v4;
      }
      while (v4 < a1[408]);
      v10 = v11;
    }
    else
    {
      v10 = 0;
    }
    (*(void (**)(uint64_t, uint64_t))(qword_100983BD8 + 328))(a2, v10);
    return 0;
  }
  else
  {
    if (sub_10005549C())
    {
      sub_100054530("Send events should be PUT, not %d", *a1);
      v8 = sub_1000544A0(0x50u);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 1720;
  }
}

uint64_t sub_1001655C8(uint64_t a1, unsigned int a2)
{
  sub_100162B1C(a2, 0);
  return 0;
}

void sub_1001655E8(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  NSObject *v4;
  NSObject *v5;
  unsigned int v6;
  NSObject *v7;
  uint64_t v8;

  LODWORD(v8) = a1;
  WORD2(v8) = WORD2(a1);
  if (qword_100983BD8)
  {
    v3 = sub_10016165C((uint64_t)&v8);
    if (v3 == 7)
    {
      if (sub_10005549C())
      {
        sub_100054530("Invalid connection ID %:.", &v8);
        v4 = sub_1000544A0(0x50u);
        if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
    }
    else
    {
      v6 = v3;
      if ((_DWORD)a2)
      {
        if (sub_10005549C())
        {
          sub_100054530("BT Map Send failed with status %!", a2, v8);
          v7 = sub_1000544A0(0x50u);
          if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
            sub_1006CE7A4();
        }
      }
      sub_100251574(*(_QWORD *)(qword_100983BD8 + 32 * v6 + 32), 1);
      if (sub_100056080(*(_QWORD *)(qword_100983BD8 + 32 * v6 + 32)))
        sub_10016201C(*(unsigned __int16 *)(qword_100983BD8 + 32 * v6 + 16));
    }
  }
  else if (sub_10005549C())
  {
    sub_100054530("MAP is not initialized");
    v5 = sub_1000544A0(0x50u);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
}

double sub_100165760(uint64_t a1)
{
  _OWORD *v1;
  double result;

  v1 = *(_OWORD **)(a1 + 64);
  result = 0.0;
  *(_OWORD *)((char *)v1 + 139) = 0u;
  v1[7] = 0u;
  v1[8] = 0u;
  v1[5] = 0u;
  v1[6] = 0u;
  v1[3] = 0u;
  v1[4] = 0u;
  v1[1] = 0u;
  v1[2] = 0u;
  *v1 = 0u;
  return result;
}

uint64_t sub_100165784(uint64_t a1, const void *a2, unsigned int a3, char *__s)
{
  unsigned int v8;
  uint64_t result;
  _BYTE *v10;
  char v11;

  v8 = strlen(__s);
  if (v8 > 0x10)
    return 1740;
  memmove(*(void **)(a1 + 64), __s, v8);
  v10 = *(_BYTE **)(a1 + 64);
  v10[16] = v8;
  if (a3 > 0x14)
    return 1757;
  v11 = 0;
  if (a2)
  {
    if (a3)
    {
      memmove(v10 + 17, a2, a3);
      v10 = *(_BYTE **)(a1 + 64);
      v11 = a3;
    }
  }
  result = 0;
  v10[37] = v11;
  return result;
}

uint64_t sub_10016582C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  char v7;
  uint64_t result;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  int v12;

  v4 = *(_QWORD *)(a1 + 64);
  if (!v4)
    sub_100253460();
  if (*(_BYTE *)a2 != 77)
    sub_100253460();
  v5 = *(unsigned __int16 *)(a2 + 8);
  if (*(_WORD *)(a2 + 8))
  {
    v6 = 0;
    v7 = 0;
    result = 0;
    while (1)
    {
      v9 = *(_QWORD *)(a2 + 16);
      v10 = (_BYTE *)(v9 + v6);
      v11 = v6 + 2;
      v12 = v10[1];
      if (*v10)
      {
        if (*v10 == 1)
        {
          if (v12 != 1)
            goto LABEL_13;
          v7 = *(_BYTE *)(v9 + v11);
        }
      }
      else
      {
        if (v12 != 16)
        {
LABEL_13:
          result = 1744;
          goto LABEL_14;
        }
        *(_OWORD *)(v4 + 61) = *(_OWORD *)(v9 + v11);
        v5 = *(unsigned __int16 *)(a2 + 8);
      }
LABEL_14:
      v6 = v11 + v12;
      if (v6 >= v5)
        goto LABEL_17;
    }
  }
  result = 0;
  v7 = 0;
LABEL_17:
  *(_BYTE *)(v4 + 60) = v7 & 1;
  *(_BYTE *)(a1 + 57) = (v7 & 2) != 0;
  return result;
}

uint64_t sub_100165900(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  unsigned int v8;
  unsigned int v9;

  v3 = *(_QWORD *)(a1 + 64);
  if (!v3)
    sub_100253460();
  if (*(_BYTE *)a2 != 78)
    sub_100253460();
  *(_QWORD *)(v3 + 38) = 0;
  *(_QWORD *)(v3 + 46) = 0;
  *(_DWORD *)(v3 + 54) = 0;
  *(_BYTE *)(v3 + 58) = 0;
  if (*(_WORD *)(a2 + 8))
  {
    v4 = 0;
    v5 = 0;
    while (1)
    {
      v6 = *(_QWORD *)(a2 + 16);
      v7 = (_BYTE *)(v6 + v4);
      v8 = v4 + 2;
      v9 = v7[1];
      if (*v7 == 1)
      {
        if (v7[1])
        {
          if (v9 <= 0x14)
          {
            memmove((void *)(v3 + 38), (const void *)(v6 + v8), v7[1]);
            *(_BYTE *)(v3 + 58) = v9;
            goto LABEL_15;
          }
LABEL_13:
          v5 = 1744;
        }
      }
      else if (!*v7)
      {
        if (v9 != 16)
          goto LABEL_13;
        *(_OWORD *)(v3 + 77) = *(_OWORD *)(v6 + v8);
      }
LABEL_15:
      v4 = v8 + v9;
      if (v8 + v9 >= *(unsigned __int16 *)(a2 + 8))
        return v5;
    }
  }
  return 0;
}

void sub_1001659F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  size_t v5;
  __int16 v6;
  _OWORD v7[5];
  uint64_t v8;

  v4 = *(_QWORD *)(a1 + 64);
  if (!v4)
    sub_100253460();
  v8 = 0;
  memset(v7, 0, sizeof(v7));
  sub_100251830((uint64_t)v7);
  sub_100251844((uint64_t)v7, (__int128 *)(*(_QWORD *)(a1 + 64) + 61), 0x10uLL);
  sub_100251844((uint64_t)v7, (__int128 *)":", 1uLL);
  sub_100251844((uint64_t)v7, *(__int128 **)(a1 + 64), *(unsigned __int8 *)(*(_QWORD *)(a1 + 64) + 16));
  *(_WORD *)(v4 + 93) = 4096;
  sub_10025232C((_OWORD *)(v4 + 95), (uint64_t)v7);
  v5 = *(unsigned __int8 *)(v4 + 37);
  if (*(_BYTE *)(v4 + 37))
  {
    *(_BYTE *)(v4 + 111) = 1;
    *(_BYTE *)(v4 + 112) = v5;
    memmove((void *)(v4 + 113), (const void *)(v4 + 17), v5);
    v6 = *(unsigned __int8 *)(v4 + 37) + 20;
  }
  else
  {
    v6 = 18;
  }
  *(_BYTE *)a2 = 78;
  *(_QWORD *)(a2 + 16) = v4 + 93;
  *(_WORD *)(a2 + 8) = v6;
}

void sub_100165AD8(char *__s, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unsigned __int16 v7;
  char v8;
  __int16 v9;
  _BYTE __src[88];
  uint64_t v11;

  v6 = *(_QWORD *)(a2 + 64);
  if (v6)
  {
    if (__s)
      goto LABEL_3;
  }
  else
  {
    sub_100253460();
    if (__s)
      goto LABEL_3;
  }
  sub_100253460();
LABEL_3:
  v11 = 0;
  memset(__src, 0, sizeof(__src));
  v7 = strlen(__s);
  sub_100251830((uint64_t)&__src[8]);
  sub_10004AD30((uint64_t)__src);
  sub_100251844((uint64_t)&__src[8], (__int128 *)__src, 8uLL);
  sub_100251844((uint64_t)&__src[8], (__int128 *)__s, v7);
  *(_WORD *)(v6 + 134) = 4096;
  sub_10025232C((_OWORD *)(v6 + 136), (uint64_t)&__src[8]);
  v8 = *(_BYTE *)(v6 + 59) | (2 * *(_BYTE *)(a2 + 57));
  if (v8)
  {
    *(_WORD *)(v6 + 152) = 257;
    *(_BYTE *)(v6 + 154) = v8;
    v9 = 21;
  }
  else
  {
    v9 = 18;
  }
  *(_BYTE *)a3 = 77;
  *(_QWORD *)(a3 + 16) = v6 + 134;
  *(_WORD *)(a3 + 8) = v9;
}

uint64_t sub_100165BD8(uint64_t a1)
{
  uint64_t v1;
  _OWORD v3[5];
  uint64_t v4;
  __int128 v5;

  v1 = *(_QWORD *)(a1 + 64);
  if (!v1)
    sub_100253460();
  v4 = 0;
  memset(v3, 0, sizeof(v3));
  v5 = 0uLL;
  sub_100251830((uint64_t)v3);
  sub_100251844((uint64_t)v3, (__int128 *)(v1 + 136), 0x10uLL);
  sub_100251844((uint64_t)v3, (__int128 *)":", 1uLL);
  sub_100251844((uint64_t)v3, (__int128 *)v1, *(unsigned __int8 *)(v1 + 16));
  sub_10025232C(&v5, (uint64_t)v3);
  if (v5 == *(_OWORD *)(v1 + 77))
    return 0;
  else
    return 1742;
}

uint64_t sub_100165CB4(uint64_t a1)
{
  uint64_t i;
  NSObject *v3;
  uint64_t result;

  for (i = 0; i != 6; ++i)
  {
    if (!qword_100983E28[i])
    {
      result = 0;
      qword_100983E28[i] = a1;
      *(_WORD *)(a1 + 280) = i;
      return result;
    }
  }
  if (sub_10005549C())
  {
    sub_100054530("No more OBEX handles available!");
    v3 = sub_1000544A0(0x17u);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
  return 104;
}

unsigned __int16 *sub_100165D44(int a1)
{
  uint64_t v1;
  unsigned __int16 *v2;
  NSObject *v3;

  v1 = 0;
  while (1)
  {
    v2 = (unsigned __int16 *)qword_100983E28[v1];
    if (v2)
    {
      if (*v2 == a1)
        break;
    }
    if (++v1 == 6)
    {
      if (sub_10005549C())
      {
        sub_100054530("GetObexCliConnectionByLinkHandle - context not found");
        v3 = sub_1000544A0(0x17u);
        if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      return 0;
    }
  }
  return v2;
}

void sub_100165DD0(int a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 0;
  while (1)
  {
    v3 = qword_100983E28[v2];
    if (v3)
    {
      if (*(unsigned __int16 *)(v3 + 280) == a1)
        break;
    }
    if (++v2 == 6)
    {
      sub_100253460();
      return;
    }
  }
  if (*(_QWORD *)(v3 + 8))
  {
    sub_100053298(*(void **)(v3 + 8));
    v3 = qword_100983E28[v2];
    *(_QWORD *)(v3 + 8) = 0;
  }
  if (*(_QWORD *)(v3 + 64))
  {
    sub_100053298(*(void **)(v3 + 64));
    v3 = qword_100983E28[v2];
    *(_QWORD *)(v3 + 64) = 0;
  }
  sub_100053298((void *)v3);
  qword_100983E28[v2] = 0;
}

void sub_100165E5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  void *v6;
  int v7;
  void (*v8)(_QWORD);
  void (*v9)(_QWORD);

  v4 = *(unsigned int *)(a1 + 132);
  v5 = *(_DWORD *)(a1 + 276);
  *(_DWORD *)(a1 + 276) = 0;
  if ((_DWORD)v4)
  {
    sub_100049F6C(v4);
    *(_DWORD *)(a1 + 132) = 0;
  }
  v6 = *(void **)(a1 + 40);
  if (v6)
  {
    sub_100254090(v6);
    *(_QWORD *)(a1 + 40) = 0;
  }
  switch(v5)
  {
    case 1:
    case 2:
      (*(void (**)(_QWORD, _QWORD, uint64_t))(a1 + 152))(*(unsigned __int16 *)(a1 + 280), 0, a2);
      *(_QWORD *)(a1 + 136) = 0;
      break;
    case 5:
      v7 = *(_DWORD *)(a1 + 264);
      if ((v7 - 3) < 2)
      {
        *(_DWORD *)(a1 + 264) = 0;
        v8 = *(void (**)(_QWORD))(a1 + 152);
        if (v8)
          v8(*(unsigned __int16 *)(a1 + 280));
      }
      else if (v7 == 2 || v7 == 1)
      {
        *(_DWORD *)(a1 + 264) = 0;
        (*(void (**)(_QWORD, _QWORD, uint64_t))(a1 + 152))(*(unsigned __int16 *)(a1 + 280), 0, 1719);
      }
      break;
    case 6:
    case 7:
      if ((_DWORD)v4)
        (*(void (**)(_QWORD, _QWORD, uint64_t))(a1 + 152))(*(unsigned __int16 *)(a1 + 280), 0, a2);
      break;
    case 8:
      (*(void (**)(_QWORD, uint64_t))(a1 + 152))(*(unsigned __int16 *)(a1 + 280), a2);
      break;
    default:
      break;
  }
  v9 = *(void (**)(_QWORD))(a1 + 136);
  if (v9)
    v9(*(unsigned __int16 *)(a1 + 280));
  sub_100165DD0(*(unsigned __int16 *)(a1 + 280));
  --dword_1009991A4;
}

void sub_100165F98(unsigned __int16 *a1, uint64_t a2)
{
  NSObject *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;

  if (sub_10005549C())
  {
    sub_100054530("OBEX client error %!", a2);
    v4 = sub_1000544A0(0x17u);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
  *((_DWORD *)a1 + 8) = 0;
  *((_DWORD *)a1 + 66) = 0;
  if (*((_DWORD *)a1 + 69) < 2u)
    goto LABEL_15;
  *((_BYTE *)a1 + 268) = 1;
  v5 = *((_DWORD *)a1 + 1);
  if (v5 == 1)
  {
    v6 = sub_1001DEB7C(*a1, 436);
  }
  else
  {
    if (v5)
    {
      v7 = 101;
LABEL_12:
      if (sub_10005549C())
      {
        sub_100054530("Transport disconnect failed %!", v7);
        v8 = sub_1000544A0(0x17u);
        if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
LABEL_15:
      sub_100165E5C((uint64_t)a1, a2);
      return;
    }
    v6 = sub_10023EEBC(*a1, 926);
  }
  v7 = v6;
  if ((_DWORD)v6)
    goto LABEL_12;
}

uint64_t sub_1001660B4(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v4;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  int v13;
  unsigned int v14;
  NSObject *v15;
  NSObject *v16;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if ((_DWORD)a4 == 1701)
    v4 = 2;
  else
    v4 = -126;
  if (!a3)
  {
    sub_100253460();
    return 101;
  }
  if (a1 >= 6)
    sub_100253460();
  v9 = qword_100983E28[a1];
  if (!v9)
    return 1709;
  v10 = *(_DWORD *)(v9 + 276);
  if (v10 < 4)
    return 1709;
  if (*(_DWORD *)(v9 + 132))
  {
    if (*(_DWORD *)(v9 + 264) == 4)
      return 1719;
    else
      return 1711;
  }
  if (v10 != 7 && v10 != 4)
    return 1711;
  *(_QWORD *)(v9 + 152) = a3;
  if (*(_DWORD *)(v9 + 264) == 2)
  {
LABEL_32:
    sub_1001662FC(v9);
    return 0;
  }
  v19 = 0;
  v20 = 0;
  v21 = 0;
  v18[0] = 0;
  v18[1] = 0;
  if ((_DWORD)a4 && (_DWORD)a4 != 1701)
  {
    if (sub_10005549C())
    {
      sub_100054530("OBEX client terminating PUT operation with error %!", a4);
      v15 = sub_1000544A0(0x17u);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    *(_DWORD *)(v9 + 264) = 2;
    goto LABEL_32;
  }
  if (!a2)
    return 101;
  sub_1001678B8(v9, v4, (uint64_t)v18);
  if (*(_DWORD *)(v9 + 276) == 4)
  {
    v13 = *(_DWORD *)(v9 + 260);
    if (v13 == -1)
    {
      v14 = 0;
    }
    else
    {
      LOBYTE(v19) = -53;
      LODWORD(v20) = v13;
      v14 = 1;
    }
    *(_DWORD *)(v9 + 276) = 7;
  }
  else
  {
    v14 = 0;
  }
  v11 = sub_1001671E4(v9, (uint64_t)v18, (unsigned __int8 *)&v19, v14, a2);
  if ((_DWORD)v11 || (v11 = sub_100166380((unsigned __int16 *)v9, *(unsigned __int16 *)(v9 + 128)), (_DWORD)v11))
  {
    if (sub_10005549C())
    {
      sub_100054530("OBEXCLI_PutReq %!", v11);
      v16 = sub_1000544A0(0x17u);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    *(_DWORD *)(v9 + 276) = 4;
  }
  return v11;
}

void sub_1001662FC(uint64_t a1)
{
  NSObject *v2;

  if (sub_100166F68(a1, 255, 50))
  {
    if (sub_10005549C())
    {
      sub_100054530("Could not send abort command");
      v2 = sub_1000544A0(0x17u);
      if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    sub_100165F98((unsigned __int16 *)a1, 1706);
  }
  else
  {
    *(_DWORD *)(a1 + 276) = 5;
  }
}

uint64_t sub_100166380(unsigned __int16 *a1, int a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;
  const void *v10[2];
  unsigned __int16 *v11;

  v4 = *((_DWORD *)a1 + 1);
  if (v4 == 1)
  {
    v5 = sub_1001DBC18((uint64_t)sub_100112190, *a1, 0, *((_QWORD *)a1 + 5), 0);
  }
  else
  {
    if (v4)
    {
      v6 = 101;
      goto LABEL_9;
    }
    v5 = sub_10023E63C((uint64_t)sub_10018F420, *a1, *((_QWORD *)a1 + 5));
  }
  v6 = v5;
  if ((_DWORD)v5)
  {
LABEL_9:
    sub_100254090(*((void **)a1 + 5));
    *((_QWORD *)a1 + 5) = 0;
    return v6;
  }
  v11 = a1;
  v8 = *((_DWORD *)a1 + 33);
  v7 = (unsigned int *)(a1 + 66);
  if (sub_10004A088(v8))
  {
    sub_1002537E8(*v7, a2);
  }
  else
  {
    v10[0] = (const void *)8;
    v10[1] = &v11;
    sub_10004A9EC((uint64_t)sub_100167018, v10, a2, (int *)v7);
  }
  return 0;
}

uint64_t sub_10016645C(uint64_t a1, int a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD v14[3];

  if (*(_DWORD *)(a1 + 276) != 2)
    sub_100253460();
  v12 = 0;
  v13 = 0;
  memset(v14, 0, sizeof(v14));
  v10 = 0;
  v11 = 0;
  sub_1001678B8(a1, 128, (uint64_t)&v10);
  if (HIBYTE(v11))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexcli_common.c", 1084, "OI_STATUS SendConnectRequest(OBEXCLI_CONNECTION *, OI_INTERVAL)");
    goto LABEL_21;
  }
  v4 = WORD2(v11);
  if (WORD1(v11) <= WORD2(v11) || BYTE6(v11) != 2)
LABEL_21:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexcli_common.c");
  ++WORD2(v11);
  *(_BYTE *)(v10 + v4) = 16;
  if (HIBYTE(v11))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexcli_common.c", 1085, "OI_STATUS SendConnectRequest(OBEXCLI_CONNECTION *, OI_INTERVAL)");
    goto LABEL_23;
  }
  v5 = WORD2(v11);
  if (WORD1(v11) <= WORD2(v11) || BYTE6(v11) != 2)
LABEL_23:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexcli_common.c");
  ++WORD2(v11);
  *(_BYTE *)(v10 + v5) = 0;
  if (HIBYTE(v11))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexcli_common.c", 1086, "OI_STATUS SendConnectRequest(OBEXCLI_CONNECTION *, OI_INTERVAL)");
    goto LABEL_25;
  }
  if (WORD1(v11) - WORD2(v11) <= 1 || BYTE6(v11) != 2)
LABEL_25:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexcli_common.c");
  *(_BYTE *)(v10 + WORD2(v11) + 1) = *(_BYTE *)(a1 + 74);
  *(_BYTE *)(v10 + WORD2(v11)) = *(_BYTE *)(a1 + 75);
  WORD2(v11) += 2;
  if (*(_DWORD *)(a1 + 272))
  {
    v6 = sub_100252DE8(0x17u);
    sub_100165AD8(*(char **)(v6 + 16), a1, (uint64_t)v14);
    v7 = 1;
  }
  else
  {
    v7 = 0;
  }
  if (*(_BYTE *)(a1 + 56))
  {
    v8 = v7 + 1;
    sub_1001659F0(a1, (uint64_t)v14 + 24 * v7);
    v7 = v8;
  }
  v12 = a1 + 160;
  LOBYTE(v13) = *(_BYTE *)(a1 + 256);
  result = sub_1001671E4(a1, (uint64_t)&v10, (unsigned __int8 *)v14, v7, (uint64_t)&v12);
  if (!(_DWORD)result)
    return sub_100166380((unsigned __int16 *)a1, a2);
  return result;
}

void sub_1001666FC(uint64_t a1, void *a2, size_t a3)
{
  uint64_t v4;
  NSObject *v5;

  if (a1)
  {
    v4 = sub_1001678EC(a1, a2, a3);
    if ((_DWORD)v4)
    {
      sub_100165F98((unsigned __int16 *)a1, v4);
    }
    else if (*(_DWORD *)(a1 + 32) == 2 && !*(_QWORD *)(a1 + 40))
    {
      sub_1001667B8((unsigned __int16 *)a1);
    }
  }
  else if (sub_10005549C())
  {
    sub_100054530("OBEX received data for unknown connection [%d]", &link);
    v5 = sub_1000544A0(0x17u);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
}

void sub_1001667B8(unsigned __int16 *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  int v9;
  unsigned __int8 v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int16 *v15;
  NSObject *v16;
  uint64_t v17;
  void (*v18)(_QWORD);
  int v19;
  int v20;
  uint64_t v21;
  void *v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  NSObject *v29;
  NSObject *v30;
  unsigned __int8 *v31;
  void (*v32)(_QWORD, _QWORD);
  unsigned __int8 *v33;
  unsigned __int8 *v34;
  uint64_t v35;
  size_t v36;
  void *ptr;
  uint64_t v38;

  if (*((_DWORD *)a1 + 8) != 2)
    sub_100253460();
  if (*((_BYTE *)a1 + 31))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexcli_common.c", 1268, "void HandleResponsePkt(OBEXCLI_CONNECTION *)");
    goto LABEL_105;
  }
  v2 = a1[13];
  v3 = a1[14];
  if (v2 <= v3 || *((_BYTE *)a1 + 30) != 1)
LABEL_105:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexcli_common.c");
  v4 = *((_QWORD *)a1 + 2);
  a1[14] = v3 + 1;
  if ((unint64_t)(v2 - (v3 + 1)) <= 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexcli_common.c");
  v5 = *(unsigned __int8 *)(v4 + v3);
  a1[14] = v3 + 3;
  sub_100049F6C(*((unsigned int *)a1 + 33));
  *((_DWORD *)a1 + 33) = 0;
  if (!*((_BYTE *)a1 + 268))
  {
    switch(*((_DWORD *)a1 + 69))
    {
      case 2:
        ptr = 0;
        v38 = 0;
        v6 = sub_100167028(v5, 1704);
        v7 = v6;
        if ((_DWORD)v6 != 1742 && (_DWORD)v6 != 0)
        {
          v21 = v6;
          goto LABEL_75;
        }
        if (*((_BYTE *)a1 + 30) != 1)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexcli_common.c");
        if (*((_BYTE *)a1 + 31))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexcli_common.c", 891, "void ConnectResponse(OBEXCLI_CONNECTION *, uint8_t)");
LABEL_68:
          v27 = 0;
          LOBYTE(v26) = 0;
          *((_BYTE *)a1 + 31) = 1;
LABEL_69:
          if (sub_10005549C())
          {
            sub_100054530("OBEX Client connect - version mismatch %d.%d", v27, v26 & 0xF);
            v29 = sub_1000544A0(0x17u);
            if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
              sub_1006CE7A4();
          }
          v21 = 1718;
          goto LABEL_73;
        }
        v23 = a1[13];
        v24 = a1[14];
        if (v23 <= v24)
          goto LABEL_68;
        v25 = *((_QWORD *)a1 + 2);
        a1[14] = v24 + 1;
        v26 = *(unsigned __int8 *)(v25 + v24);
        v27 = v26 >> 4;
        if (v26 >> 4 != 1)
          goto LABEL_69;
        if (v23 <= (unsigned __int16)(v24 + 1))
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexcli_common.c");
        a1[14] = v24 + 2;
        if ((int)(v23 - (v24 + 2)) <= 1)
        {
          *((_BYTE *)a1 + 31) = 1;
          v21 = 1707;
          goto LABEL_73;
        }
        v28 = __rev16(*(unsigned __int16 *)(v25 + v24 + 2));
        a1[38] = v28;
        a1[14] = v24 + 4;
        if (v28 < 0xC8)
        {
          v21 = 1736;
          goto LABEL_73;
        }
        v21 = sub_100167C6C((uint64_t)&ptr, (uint64_t *)a1 + 2);
        if ((_DWORD)v21)
          goto LABEL_73;
        if (v7)
        {
          *((_BYTE *)a1 + 56) = 1;
          v31 = sub_100167C40((unsigned __int8 **)&ptr, 77);
          if (v31)
          {
            if (*((_QWORD *)a1 + 8))
            {
              sub_10016582C((uint64_t)a1, (uint64_t)v31);
              v32 = (void (*)(_QWORD, _QWORD))*((_QWORD *)a1 + 18);
              if (v32)
                v32(a1[140], *(unsigned __int8 *)(*((_QWORD *)a1 + 8) + 60));
              v22 = ptr;
LABEL_61:
              sub_100053298(v22);
              break;
            }
            v21 = 1743;
            goto LABEL_73;
          }
          goto LABEL_101;
        }
        v33 = sub_100167C40((unsigned __int8 **)&ptr, 203);
        if (v33)
          *((_DWORD *)a1 + 65) = *((_DWORD *)v33 + 2);
        if (*((_DWORD *)a1 + 68))
        {
          v34 = sub_100167C40((unsigned __int8 **)&ptr, 78);
          if (!v34)
          {
LABEL_101:
            v21 = 1714;
LABEL_73:
            if (ptr)
            {
              sub_100053298(ptr);
              ptr = 0;
            }
LABEL_75:
            if (sub_10005549C())
            {
              sub_100054530("OBEX Client connection failed %!", v21);
              v30 = sub_1000544A0(0x17u);
              if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR))
                sub_1006CE7A4();
            }
            v15 = a1;
            v14 = v21;
LABEL_79:
            sub_100165F98(v15, v14);
            break;
          }
          sub_100165900((uint64_t)a1, (uint64_t)v34);
          v35 = *((_QWORD *)a1 + 8);
          if (*(_BYTE *)(v35 + 59)
            && ((v36 = *(unsigned __int8 *)(v35 + 58), !*(_BYTE *)(v35 + 58))
             || *(unsigned __int8 *)(v35 + 37) != (_DWORD)v36
             || strncmp((const char *)(v35 + 17), (const char *)(v35 + 38), v36))
            || sub_100165BD8((uint64_t)a1))
          {
            sub_100165760((uint64_t)a1);
            v21 = 1735;
            goto LABEL_73;
          }
        }
        *((_DWORD *)a1 + 69) = 4;
        (*((void (**)(_QWORD, _QWORD, _QWORD))a1 + 19))(a1[140], *((unsigned __int8 *)a1 + 57), 0);
        goto LABEL_60;
      case 3:
        v13 = sub_100167028(v5, 1705);
        if ((_DWORD)v13)
        {
          v14 = v13;
          v15 = a1;
          goto LABEL_79;
        }
        *((_BYTE *)a1 + 268) = 1;
        v19 = *((_DWORD *)a1 + 1);
        if (v19 == 1)
        {
          v20 = sub_1001DEB7C(*a1, 436);
        }
        else
        {
          if (v19)
            break;
          v20 = sub_10023EEBC(*a1, 926);
        }
        if (!v20)
          break;
        v15 = a1;
        v14 = 1705;
        goto LABEL_79;
      case 5:
        *((_DWORD *)a1 + 69) = 4;
        v9 = *((_DWORD *)a1 + 66);
        if ((v9 - 3) < 2)
        {
          *((_DWORD *)a1 + 66) = 0;
          v18 = (void (*)(_QWORD))*((_QWORD *)a1 + 19);
          if (v18)
            v18(a1[140]);
        }
        else if (v9 == 2 || v9 == 1)
        {
          *((_DWORD *)a1 + 66) = 0;
          (*((void (**)(_QWORD, _QWORD, uint64_t))a1 + 19))(a1[140], 0, 1719);
        }
        break;
      case 6:
        ptr = 0;
        v38 = 0;
        v17 = sub_100167C6C((uint64_t)&ptr, (uint64_t *)a1 + 2);
        if (!(_DWORD)v17)
          v17 = sub_100167028(v5, 1713);
        if ((_DWORD)v17 != 1701)
          goto LABEL_46;
        if (*((_DWORD *)a1 + 66) == 1)
        {
          if (ptr)
          {
            sub_100053298(ptr);
            ptr = 0;
          }
          goto LABEL_45;
        }
        if (*((_DWORD *)a1 + 69) == 6)
          goto LABEL_55;
        goto LABEL_58;
      case 7:
        ptr = 0;
        v38 = 0;
        v17 = sub_100167C6C((uint64_t)&ptr, (uint64_t *)a1 + 2);
        if (!(_DWORD)v17)
          v17 = sub_100167028(v5, 1712);
        if ((_DWORD)v17 != 1701)
        {
LABEL_46:
          *((_DWORD *)a1 + 69) = 4;
          *((_DWORD *)a1 + 66) = 0;
          goto LABEL_59;
        }
        if (*((_DWORD *)a1 + 66) == 2)
        {
LABEL_45:
          sub_1001662FC((uint64_t)a1);
          break;
        }
        if (*((_DWORD *)a1 + 69) != 7)
          goto LABEL_58;
LABEL_55:
        if ((a1[40] & 0xFE) == 0x48)
        {
          v17 = sub_1001670EC((uint64_t)a1);
          if (!(_DWORD)v17)
            goto LABEL_60;
        }
        else
        {
LABEL_58:
          v17 = 1701;
        }
LABEL_59:
        (*((void (**)(_QWORD, void **, uint64_t))a1 + 19))(a1[140], &ptr, v17);
LABEL_60:
        v22 = ptr;
        if (ptr)
          goto LABEL_61;
        break;
      case 8:
        if (v5 == 161)
          v10 = -96;
        else
          v10 = v5;
        v11 = sub_100167028(v10, 1706);
        if (v11 == 1724)
          v12 = 1738;
        else
          v12 = v11;
        *((_DWORD *)a1 + 69) = 4;
        (*((void (**)(_QWORD, uint64_t))a1 + 19))(a1[140], v12);
        break;
      default:
        if (sub_10005549C())
        {
          sub_100054530("Unexpected response packet");
          v16 = sub_1000544A0(0x17u);
          if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
            sub_1006CE7A4();
        }
        v15 = a1;
        v14 = 1706;
        goto LABEL_79;
    }
  }
  *((_DWORD *)a1 + 8) = 0;
}

void sub_100166E14(uint64_t a1, void *a2, uint64_t a3)
{
  NSObject *v5;

  if (a1)
  {
    *(_QWORD *)(a1 + 40) = 0;
    sub_100254090(a2);
    if ((_DWORD)a3)
    {
      sub_100165F98((unsigned __int16 *)a1, a3);
    }
    else if (*(_DWORD *)(a1 + 32) == 2)
    {
      sub_1001667B8((unsigned __int16 *)a1);
    }
  }
  else if (sub_10005549C())
  {
    sub_100054530("Write confirmation for unknown link [%d]", &link);
    v5 = sub_1000544A0(0x17u);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
}

uint64_t sub_100166ED4(unsigned int a1)
{
  uint64_t v2;
  unsigned int v3;
  unsigned __int16 *v4;
  uint64_t v5;
  uint64_t result;

  if (a1 >= 6)
    sub_100253460();
  v2 = qword_100983E28[a1];
  if (!v2)
    return 0;
  v3 = *(_DWORD *)(v2 + 276);
  if (v3 <= 3)
  {
    if (!v3)
      return 0;
    v4 = (unsigned __int16 *)v2;
    v5 = 1719;
LABEL_10:
    sub_100165F98(v4, v5);
    return 0;
  }
  if (v3 != 4)
    return 1711;
  result = sub_100166F68(v2, 129, 30);
  if ((_DWORD)result)
  {
    v5 = result;
    v4 = (unsigned __int16 *)v2;
    goto LABEL_10;
  }
  *(_DWORD *)(v2 + 276) = 3;
  return result;
}

uint64_t sub_100166F68(uint64_t a1, char a2, uint64_t a3)
{
  int v5;
  unsigned int v6;
  uint64_t result;
  _QWORD v8[2];
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v9 = 0;
  v10 = 0;
  v11 = 0;
  v8[0] = 0;
  v8[1] = 0;
  sub_1001678B8(a1, a2, (uint64_t)v8);
  v5 = *(_DWORD *)(a1 + 260);
  if (v5 == -1)
  {
    v6 = 0;
  }
  else
  {
    LOBYTE(v9) = -53;
    LODWORD(v10) = v5;
    v6 = 1;
  }
  result = sub_1001671E4(a1, (uint64_t)v8, (unsigned __int8 *)&v9, v6, 0);
  if (!(_DWORD)result)
    return sub_100166380(a1, a3);
  return result;
}

void sub_100167018(uint64_t a1)
{
  sub_100165F98(**(unsigned __int16 ***)(a1 + 8), 1703);
}

uint64_t sub_100167028(int a1, uint64_t a2)
{
  unsigned int v2;

  if (a1 <= 191)
  {
    if (a1 == 166)
      v2 = 1750;
    else
      v2 = a2;
    if (a1 == 160)
      v2 = 0;
    if (a1 == 144)
      return 1701;
    else
      return v2;
  }
  else
  {
    switch(a1)
    {
      case 192:
        a2 = 1721;
        break;
      case 193:
        a2 = 1742;
        break;
      case 195:
        a2 = 1735;
        break;
      case 196:
        a2 = 1724;
        break;
      case 197:
        a2 = 1751;
        break;
      case 198:
        a2 = 1736;
        break;
      case 203:
        a2 = 1708;
        break;
      case 204:
        a2 = 1741;
        break;
      case 207:
        a2 = 1749;
        break;
      case 208:
        a2 = 1748;
        break;
      case 209:
        a2 = 1717;
        break;
      case 211:
        a2 = 1715;
        break;
      case 224:
        a2 = 1746;
        break;
      case 225:
        a2 = 1747;
        break;
      default:
        return a2;
    }
  }
  return a2;
}

uint64_t sub_1001670EC(uint64_t a1)
{
  uint64_t result;

  result = sub_100167828(a1);
  if (!(_DWORD)result)
    return sub_100166380(a1, *(unsigned __int16 *)(a1 + 128));
  return result;
}

void sub_100167124(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_100167158()
{
  uint64_t v0;
  NSObject *v1;

  if (*(_WORD *)(v0 + 8))
  {
    if (*(_WORD *)(*(_QWORD *)(v0 + 16) + 2 * (*(unsigned __int16 *)(v0 + 8) - 1)))
    {
      if (sub_10005549C())
      {
        sub_100054530("OBEX unicode must be NUL terminated");
        v1 = sub_1000544A0(0x18u);
        if (os_log_type_enabled(v1, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
    }
    return (unsigned __int16)(2 * *(_WORD *)(v0 + 8) + 3);
  }
  else
  {
    return 3;
  }
}

uint64_t sub_1001671E4(uint64_t a1, uint64_t a2, unsigned __int8 *a3, unsigned int a4, uint64_t a5)
{
  unsigned int v10;
  unsigned __int8 v11;
  uint64_t v12;
  unsigned __int8 *v13;
  unsigned __int8 v14;
  char *v15;
  uint64_t v16;
  char v17;
  char *v18;
  unsigned __int8 *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  size_t v24;
  int v25;
  char v26;
  char v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char v31;
  size_t v32;
  __int16 v34;

  if (a5)
    v10 = *(unsigned __int8 *)(a5 + 8);
  else
    v10 = 0;
  if (*(_QWORD *)(a1 + 40))
    sub_100253460();
  if (*(_BYTE *)(a1 + 80))
    sub_100253460();
  v11 = v10 + a4 + 1;
  if (a4)
  {
    v12 = a4;
    v13 = a3;
    do
    {
      v14 = *v13;
      v13 += 24;
      if ((v14 & 0xC0) == 0x40)
        ++v11;
      --v12;
    }
    while (v12);
  }
  if (v10)
  {
    v15 = *(char **)a5;
    v16 = v10;
    do
    {
      v17 = *v15;
      v15 += 24;
      if ((v17 & 0xC0) == 0x40)
        ++v11;
      --v16;
    }
    while (v16);
  }
  v34 = *(_WORD *)(a2 + 12);
  v18 = sub_100253D54(v11);
  if (v18)
  {
    v19 = (unsigned __int8 *)v18;
    if (a4)
    {
      v20 = a4;
      do
      {
        v21 = sub_100167550(a1, v19, a3, &v34);
        if ((_DWORD)v21)
          goto LABEL_38;
        a3 += 24;
      }
      while (--v20);
    }
    if (v10)
    {
      v22 = 0;
      v23 = 24 * v10;
      while (1)
      {
        v21 = sub_100167550(a1, v19, (unsigned __int8 *)(*(_QWORD *)a5 + v22), &v34);
        if ((_DWORD)v21)
          break;
        v22 += 24;
        if (v23 == v22)
          goto LABEL_27;
      }
LABEL_38:
      v28 = v21;
LABEL_50:
      sub_100254090(v19);
      return v28;
    }
LABEL_27:
    v24 = *(unsigned __int16 *)(a2 + 12);
    *(_WORD *)(a2 + 12) = 0;
    if ((*(_BYTE *)(a1 + 80) & 0xFE) == 0x48)
    {
      v25 = *(unsigned __int8 *)(a1 + 78);
      v26 = v25 & 0x7F;
      if (v25 == 160)
        v26 = -112;
      if (v25 == 144)
        v27 = -112;
      else
        v27 = v26;
      if (*(_BYTE *)(a2 + 15))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexcommon.c", 403, "OI_STATUS OI_OBEXCOMMON_MarshalPacket(OBEX_COMMON *, OI_BYTE_STREAM *, OI_OBEX_HEADER *, uint16_t, const OI_OBEX_HEADER_LIST *)");
        goto LABEL_57;
      }
      if (!*(_WORD *)(a2 + 10) || *(_BYTE *)(a2 + 14) != 2)
LABEL_57:
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexcommon.c");
LABEL_43:
      v29 = *(char **)a2;
      *(_WORD *)(a2 + 12) = 1;
      *v29 = v27;
      if (*(_BYTE *)(a2 + 15))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexcommon.c", 407, "OI_STATUS OI_OBEXCOMMON_MarshalPacket(OBEX_COMMON *, OI_BYTE_STREAM *, OI_OBEX_HEADER *, uint16_t, const OI_OBEX_HEADER_LIST *)");
      }
      else
      {
        v30 = *(unsigned __int16 *)(a2 + 12);
        if (*(unsigned __int16 *)(a2 + 10) - (int)v30 > 1 && *(_BYTE *)(a2 + 14) == 2)
        {
          v31 = HIBYTE(v34);
          *(_BYTE *)(*(_QWORD *)a2 + v30 + 1) = v34;
          *(_BYTE *)(*(_QWORD *)a2 + *(unsigned __int16 *)(a2 + 12)) = v31;
          *(_WORD *)(a2 + 12) += 2;
          v32 = *(unsigned __int16 *)(a2 + 10);
          if (v24 > v32)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexcommon.c");
          *(_WORD *)(a2 + 12) = v24;
          if (*(_BYTE *)(a2 + 14) == 2)
          {
            *(_WORD *)(a2 + 10) = v24;
            v32 = v24;
          }
          *(_BYTE *)(a2 + 14) = 15;
          v28 = sub_1002542F8(v19, *(char **)a2, v32, 0);
          if (!(_DWORD)v28)
          {
            sub_100254518((uint64_t)v19, *(unsigned __int16 *)(a1 + 72));
            *(_QWORD *)(a1 + 40) = v19;
            return v28;
          }
          goto LABEL_50;
        }
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexcommon.c");
    }
    if (*(_BYTE *)(a2 + 15))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexcommon.c", 405, "OI_STATUS OI_OBEXCOMMON_MarshalPacket(OBEX_COMMON *, OI_BYTE_STREAM *, OI_OBEX_HEADER *, uint16_t, const OI_OBEX_HEADER_LIST *)");
    }
    else if (*(_WORD *)(a2 + 10) && *(_BYTE *)(a2 + 14) == 2)
    {
      v27 = *(_BYTE *)(a1 + 78);
      goto LABEL_43;
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexcommon.c");
  }
  return 106;
}

uint64_t sub_100167550(uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3, _WORD *a4)
{
  int v8;
  int v9;
  int v10;
  unsigned int v11;
  unsigned __int16 v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;

  v8 = *a3;
  sub_100167124((uint64_t)a3);
  if (!v9)
    return 101;
  v15 = 0;
  v10 = (unsigned __int16)*a4;
  v11 = *(unsigned __int16 *)(a1 + 76);
  if (v10 + v9 <= v11)
  {
    *a4 = v10 + v9;
    __asm { BR              X10 }
  }
  if ((*a3 & 0xFE) != 0x48)
    return 1737;
  v12 = v11 - v10;
  if ((unsigned __int16)(v11 - v10) < 4u)
    return 0;
  v14 = *((_QWORD *)a3 + 2);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)a3;
  *(_QWORD *)(a1 + 96) = v14 + v12 - 3;
  *(_WORD *)(a1 + 88) -= v12 - 3;
  *a4 += v12;
  LOBYTE(v15) = 72;
  BYTE1(v15) = HIBYTE(v12);
  BYTE2(v15) = v12;
  result = sub_10005336C(a2, (char *)&v15, 3uLL, 0);
  if (!(_DWORD)result)
    return sub_10005336C(a2, *((char **)a3 + 2), (unsigned __int16)(v12 - 3), 2u);
  return result;
}

uint64_t sub_100167828(uint64_t a1)
{
  uint64_t v2;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  int v8;
  __int16 v9;

  v2 = a1 + 80;
  if ((*(_BYTE *)(a1 + 80) & 0xFE) != 0x48)
    sub_100253460();
  v4 = *(_OWORD *)v2;
  v5 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(a1 + 40) = 0;
  *(_BYTE *)(a1 + 80) = 0;
  v6 = a1 + 48;
  v7 = 8;
  v9 = 2;
  v8 = 196616;
  return sub_1001671E4(a1, (uint64_t)&v6, (unsigned __int8 *)&v4, 1u, 0);
}

uint64_t sub_1001678B8(uint64_t result, char a2, uint64_t a3)
{
  *(_BYTE *)(result + 78) = a2;
  *(_QWORD *)(result + 40) = 0;
  *(_BYTE *)(result + 80) = 0;
  *(_QWORD *)a3 = result + 48;
  *(_WORD *)(a3 + 8) = 8;
  *(_WORD *)(a3 + 14) = 2;
  *(_DWORD *)(a3 + 10) = 196616;
  return result;
}

uint64_t sub_1001678EC(uint64_t a1, void *__src, size_t __len)
{
  unsigned int v3;
  int v6;
  NSObject *v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  uint64_t v11;
  _BOOL4 v13;
  int v14;
  uint64_t v15;
  NSObject *v16;
  uint64_t v18;
  unsigned __int16 v19;
  unsigned int v20;
  NSObject *v21;
  uint64_t v22;
  NSObject *v23;

  v3 = __len;
  v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    if (v6 == 2)
    {
      if (sub_10005549C())
      {
        sub_100054530("OBEXCOMMON ReassemblePacket discarding data");
        v7 = sub_1000544A0(0x18u);
        if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      goto LABEL_17;
    }
    v10 = *(unsigned __int16 *)(a1 + 28);
    v9 = *(unsigned __int16 *)(a1 + 26);
  }
  else
  {
    v8 = *(_QWORD *)(a1 + 8);
    if (!v8)
    {
      if (sub_10005549C())
      {
        sub_100054530("OBEXCOMMON ReassemblePacket received dual DISCONNECT messages!");
        v23 = sub_1000544A0(0x18u);
        if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      v15 = 1709;
      goto LABEL_18;
    }
    v9 = *(unsigned __int16 *)(a1 + 74);
    if (!*(_WORD *)(a1 + 74))
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexcommon.c");
    v10 = 0;
    *(_QWORD *)(a1 + 16) = v8;
    *(_WORD *)(a1 + 24) = v9;
    *(_QWORD *)(a1 + 28) = 0x100020000;
    *(_WORD *)(a1 + 26) = v9;
  }
  v11 = v10;
  v13 = v10 < 3 && v10 + (unint64_t)__len > 2;
  v14 = v9 - v10;
  if (v14 < (int)__len)
  {
LABEL_17:
    v15 = 1737;
LABEL_18:
    if (*(_DWORD *)(a1 + 32) == 1)
      *(_DWORD *)(a1 + 32) = 0;
    if (sub_10005549C())
    {
      sub_100054530("OBEXCOMMON Received Packet error %!", v15);
      v16 = sub_1000544A0(0x18u);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return v15;
  }
  v18 = *(_QWORD *)(a1 + 16);
  if (*(_BYTE *)(a1 + 31))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexcommon.c", 536, "OI_STATUS OI_OBEXCOMMON_ReassemblePacket(OBEX_COMMON *, uint8_t *, uint16_t)");
    v14 = 0;
  }
  if (v14 < (int)v3 || *(_BYTE *)(a1 + 30) != 2)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexcommon.c");
  memmove((void *)(v18 + v11), __src, v3);
  v19 = *(_WORD *)(a1 + 28) + v3;
  *(_WORD *)(a1 + 28) = v19;
  if (v13)
  {
    v20 = __rev16(*(unsigned __int16 *)(*(_QWORD *)(a1 + 16) + 1));
    if (v20 > *(unsigned __int16 *)(a1 + 74))
    {
      if (sub_10005549C())
      {
        sub_100054530("OI_OBEXCOMMON_ReassemblePacket packet len %d exceeds buffer len %d\n", v20, *(unsigned __int16 *)(a1 + 74));
        v21 = sub_1000544A0(0x18u);
        if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      goto LABEL_46;
    }
    if (v20 < v3)
    {
LABEL_46:
      v15 = 1720;
      goto LABEL_18;
    }
    if (v20 > *(unsigned __int16 *)(a1 + 24) || v20 < v19)
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexcommon.c");
    *(_WORD *)(a1 + 26) = v20;
  }
  else
  {
    v20 = *(unsigned __int16 *)(a1 + 26);
  }
  if (v20 != v19)
    return 0;
  if (*(_BYTE *)(a1 + 30) == 2)
    *(_WORD *)(a1 + 26) = v19;
  *(_BYTE *)(a1 + 30) = 15;
  v22 = *(_QWORD *)(a1 + 8);
  if (!v22 || !v19)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexcommon.c");
  v15 = 0;
  *(_QWORD *)(a1 + 16) = v22;
  *(_WORD *)(a1 + 24) = v19;
  *(_QWORD *)(a1 + 28) = 0x200010000;
  *(_WORD *)(a1 + 26) = v19;
  return v15;
}

unsigned __int8 *sub_100167C40(unsigned __int8 **a1, int a2)
{
  uint64_t v2;
  unsigned __int8 *result;

  v2 = *((unsigned __int8 *)a1 + 8);
  if (!*((_BYTE *)a1 + 8))
    return 0;
  for (result = *a1; *result != a2; result += 24)
  {
    if (!--v2)
      return 0;
  }
  return result;
}

uint64_t sub_100167C6C(uint64_t a1, uint64_t *a2)
{
  unsigned int v4;
  unsigned int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  unsigned __int16 v13;
  void *v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  int v19;
  uint64_t result;
  NSObject *v21;
  NSObject *v22;
  NSObject *v24;

  *(_BYTE *)(a1 + 8) = 0;
  *(_QWORD *)a1 = 0;
  v4 = *((unsigned __int16 *)a2 + 6);
  if (*((_BYTE *)a2 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexcommon.c", 740, "OI_STATUS OI_OBEXCOMMON_ParseHeaderList(OI_OBEX_HEADER_LIST *, OI_BYTE_STREAM *)");
    v5 = *((unsigned __int16 *)a2 + 5);
  }
  else
  {
    v5 = *((unsigned __int16 *)a2 + 5);
    if (v5 > v4)
    {
      v6 = 0;
      v7 = *((unsigned __int8 *)a2 + 14);
      v8 = *((unsigned __int16 *)a2 + 6);
      do
      {
        if (v7 != 1)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexcommon.c");
        v9 = *a2;
        v10 = (unsigned __int16)v8 + 1;
        *((_WORD *)a2 + 6) = v8 + 1;
        v11 = *(unsigned __int8 *)(v9 + (unsigned __int16)v8);
        if (v11 >> 6 >= 2)
        {
          if (v11 >> 6 == 2)
            v13 = 1;
          else
            v13 = 4;
        }
        else
        {
          if ((int)(v5 - 1) <= (unsigned __int16)(v8 + 1))
          {
            v12 = 0;
            *((_BYTE *)a2 + 15) = 1;
LABEL_35:
            if (sub_10005549C())
            {
              sub_100054530("Bad OBEX Unicode len: %d, at least: %d \n", v12, 3);
              v22 = sub_1000544A0(0x18u);
              if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
LABEL_40:
                sub_1006CE7A4();
            }
LABEL_41:
            *(_BYTE *)(a1 + 8) = 0;
            return 1720;
          }
          v12 = __rev16(*(unsigned __int16 *)(v9 + v10));
          LODWORD(v10) = v8 + 3;
          *((_WORD *)a2 + 6) = v8 + 3;
          if (v12 <= 2)
            goto LABEL_35;
          v13 = v12 - 3;
          if (v11 <= 0x3F && (v13 & 1) != 0)
          {
            if (sub_10005549C())
            {
              sub_100054530("Bad OBEX Unicode len: %d (odd)\n", v13);
              v24 = sub_1000544A0(0x18u);
              if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
                goto LABEL_40;
            }
            goto LABEL_41;
          }
        }
        if ((int)(v5 - (unsigned __int16)v10) < v13)
        {
          *((_BYTE *)a2 + 15) = 1;
          if (sub_10005549C())
          {
            sub_100054530("Bad OBEX Header:(%2x) len: (%d)\n", v11, v13);
            v21 = sub_1000544A0(0x18u);
            if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
              goto LABEL_40;
          }
          goto LABEL_41;
        }
        v8 = v13 + (_DWORD)v10;
        *((_WORD *)a2 + 6) = v13 + v10;
        *(_BYTE *)(a1 + 8) = ++v6;
      }
      while (v5 > (unsigned __int16)(v13 + v10));
    }
  }
  if (v4 > v5)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexcommon.c");
  *((_WORD *)a2 + 6) = v4;
  if (*(_BYTE *)(a1 + 8))
  {
    v15 = sub_100052DC0(24 * *(unsigned __int8 *)(a1 + 8));
    *(_QWORD *)a1 = v15;
    if (!v15)
      return 106;
    if (*(_BYTE *)(a1 + 8))
    {
      if (*((_BYTE *)a2 + 15))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexcommon.c", 644, "void ParseHeader(OI_BYTE_STREAM *, OI_OBEX_HEADER *)");
      }
      else
      {
        v16 = *((unsigned __int16 *)a2 + 6);
        if (*((unsigned __int16 *)a2 + 5) > v16 && *((_BYTE *)a2 + 14) == 1)
        {
          v17 = *(_BYTE **)a1;
          v18 = *a2;
          *((_WORD *)a2 + 6) = v16 + 1;
          v19 = *(unsigned __int8 *)(v18 + v16);
          *v17 = v19;
          __asm { BR              X14 }
        }
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexcommon.c");
    }
  }
  if (*((_BYTE *)a2 + 14) == 2)
    *((_WORD *)a2 + 5) = *((_WORD *)a2 + 6);
  result = 0;
  *((_BYTE *)a2 + 14) = 15;
  return result;
}

void sub_100168388(int a1, void *a2, uint64_t a3)
{
  unsigned __int16 *v5;

  v5 = sub_1001195C0(a1);
  sub_10011996C((uint64_t)v5, a2, a3);
}

uint64_t sub_1001683B4(uint64_t a1, uint64_t a2, int a3, unsigned __int8 *a4, uint64_t a5)
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  NSObject *v15;
  uint8_t buf[4];
  void *v17;

  if (!a5)
  {
    sub_100253460();
    return 101;
  }
  if (!a2 || a1 && !*(_QWORD *)(a1 + 8))
    return 101;
  v10 = sub_100114588(0xD8uLL);
  if (!v10)
  {
    v12 = 104;
    goto LABEL_18;
  }
  v11 = sub_100252DE8(0x18u);
  v12 = sub_10023E274((uint64_t)sub_100168684, (uint64_t)off_10091CD00, *(unsigned __int16 *)(v11 + 8), 0, a4, a5);
  if ((_DWORD)v12)
    goto LABEL_18;
  if (sub_10005549C())
  {
    sub_100054530("Registered channel number %d", *a4);
    v13 = sub_1000544A0(0x18u);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 136446210;
      v17 = sub_100054494();
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, " %{public}s", buf, 0xCu);
    }
  }
  if (a1)
  {
    v10[17] = *(_QWORD *)(a1 + 8);
    *((_WORD *)v10 + 64) = *(_WORD *)a1;
  }
  v10[18] = a2;
  *((_DWORD *)v10 + 38) = a3;
  *((_BYTE *)v10 + 200) = 0;
  *((_BYTE *)v10 + 192) = 1;
  *((_DWORD *)v10 + 51) = 0;
  *((_BYTE *)v10 + 194) = *a4;
  *((_BYTE *)v10 + 201) = 0;
  v10[8] = 0;
  v10[1] = 0;
  v12 = sub_1001198A8((uint64_t)v10);
  if ((_DWORD)v12)
  {
LABEL_18:
    if (sub_10005549C()
      && (sub_100054530("OI_OBEXSRV_RegisterServer error %!", v12),
          v15 = sub_1000544A0(0x18u),
          os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)))
    {
      sub_1006CE7A4();
      if (!v10)
        return v12;
    }
    else if (!v10)
    {
      return v12;
    }
    sub_100053298(v10);
    return v12;
  }
  ++dword_1009991A8;
  return v12;
}

void sub_1001685C0(unsigned int a1, uint64_t a2)
{
  unsigned __int16 *v4;
  NSObject *v5;

  v4 = sub_1001195C0(a1);
  if (v4)
  {
    sub_10011AB40((uint64_t)v4);
  }
  else if (sub_10005549C())
  {
    sub_100054530("OBEX server RFCOMM disconnect on bogus link handle %x %!", a1, a2);
    v5 = sub_1000544A0(0x18u);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
}

void sub_100168658(int a1, void *a2, size_t a3)
{
  unsigned __int16 *v5;

  v5 = sub_1001195C0(a1);
  sub_10011AC0C((uint64_t)v5, a2, a3);
}

void sub_100168684(int *a1, int a2, uint64_t a3, unsigned int a4)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  void *v9;
  int v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  NSObject *v15;

  v6 = sub_10011964C(a2);
  if (!v6)
  {
LABEL_14:
    sub_10023EB7C(0, a4, 0);
    return;
  }
  v7 = v6;
  v8 = *(_DWORD *)(v6 + 204);
  if (v8)
  {
LABEL_12:
    if (v8 == 1)
    {
      *(_DWORD *)(v7 + 204) = 0;
      return;
    }
    goto LABEL_14;
  }
  v9 = *(void **)(v6 + 8);
  if (v9)
    sub_100053298(v9);
  *(_QWORD *)(v7 + 112) = 0;
  *(_OWORD *)(v7 + 80) = 0u;
  *(_OWORD *)(v7 + 96) = 0u;
  *(_OWORD *)(v7 + 48) = 0u;
  *(_OWORD *)(v7 + 64) = 0u;
  *(_OWORD *)(v7 + 16) = 0u;
  *(_OWORD *)(v7 + 32) = 0u;
  *(_OWORD *)v7 = 0u;
  v10 = *a1;
  *(_WORD *)(v7 + 108) = *((_WORD *)a1 + 2);
  *(_DWORD *)(v7 + 104) = v10;
  *(_WORD *)v7 = a4;
  *(_DWORD *)(v7 + 4) = 0;
  *(_WORD *)(v7 + 76) = 200;
  v11 = *(unsigned __int16 *)(sub_100252DE8(0x18u) + 8);
  *(_WORD *)(v7 + 74) = v11;
  *(_QWORD *)(v7 + 8) = sub_100052DC0(v11);
  *(_DWORD *)(v7 + 204) = 1;
  v12 = sub_10023EB7C((uint64_t)sub_100168998, a4, 1);
  if ((_DWORD)v12)
  {
    v13 = v12;
    v14 = *(void **)(v7 + 8);
    if (v14)
    {
      sub_100053298(v14);
      *(_QWORD *)(v7 + 8) = 0;
    }
    if (sub_10005549C())
    {
      sub_100054530("OBEX server error %! accepting link request from %:", v13, a1);
      v15 = sub_1000544A0(0x18u);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    v8 = *(_DWORD *)(v7 + 204);
    goto LABEL_12;
  }
  if (sub_10023EFA4(a4, v7))
    sub_100253460();
}

uint64_t sub_1001687E8(unsigned int a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  NSObject *v6;
  NSObject *v7;
  _QWORD *v8;
  _QWORD *v9;

  v2 = sub_10011964C(a1);
  if (!v2)
  {
    if (sub_10005549C())
    {
      v4 = 1715;
      sub_100054530("OI_RFCOMM_DeregisterServer channel %d failed %!", a1, 1715);
      v6 = sub_1000544A0(0x18u);
      if (!os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
        return v4;
      sub_1006CE7A4();
    }
    return 1715;
  }
  v3 = v2;
  if (*(_DWORD *)(v2 + 204))
  {
    if (!sub_10005549C())
      return 141;
    v4 = 141;
    sub_100054530("OI_RFCOMM_DeregisterServer channel %d failed %!", a1, 141);
    v5 = sub_1000544A0(0x18u);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      sub_1006CE7A4();
      return 141;
    }
  }
  else
  {
    v4 = sub_10023E540(a1);
    if ((_DWORD)v4)
    {
      if (sub_10005549C())
      {
        sub_100054530("OI_RFCOMM_DeregisterServer channel %d failed %!", a1, v4);
        v7 = sub_1000544A0(0x18u);
        if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
    }
    else
    {
      v8 = *(_QWORD **)(v3 + 160);
      if (v8)
      {
        do
        {
          v9 = (_QWORD *)v8[4];
          sub_100053298(v8);
          v8 = v9;
        }
        while (v9);
      }
      --dword_1009991A8;
    }
    sub_1001196D8(a1);
  }
  return v4;
}

uint64_t sub_10016895C(unsigned int a1, _BYTE *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = sub_100119938(a1);
  if (!v3)
    return 1709;
  v4 = v3;
  result = 0;
  *a2 = *(_BYTE *)(v4 + 194);
  return result;
}

void sub_100168998(int a1, unsigned __int16 a2, uint64_t a3)
{
  unsigned __int16 *v6;
  unsigned __int16 *v7;
  NSObject *v8;
  void *v9;
  NSObject *v10;
  uint64_t v11;
  int *v12;
  _BOOL4 v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  const void *v18[2];
  __int16 v19;

  v19 = a1;
  v6 = sub_1001195C0(a1);
  v18[0] = 0;
  if (v6)
  {
    v7 = v6;
    if ((_DWORD)a3)
    {
      if (sub_10005549C())
      {
        sub_100054530("OBEX server RFCOMM connection failed: %!", a3, v18[0]);
        v8 = sub_1000544A0(0x18u);
        if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      *((_DWORD *)v7 + 51) = 0;
      v9 = (void *)*((_QWORD *)v7 + 1);
      if (v9)
      {
        sub_100053298(v9);
        *((_QWORD *)v7 + 1) = 0;
      }
    }
    else
    {
      v12 = (int *)(v6 + 88);
      v11 = *((unsigned int *)v6 + 44);
      v7[36] = a2;
      *((_DWORD *)v7 + 51) = 2;
      if ((_DWORD)v11)
      {
        sub_100049F6C(v11);
        *v12 = 0;
      }
      v13 = *((_DWORD *)v7 + 38) != 0;
      v14 = *(unsigned __int16 *)(sub_100252DE8(0x18u) + 2 * v13);
      v18[1] = &v19;
      LOWORD(v18[0]) = 2;
      v15 = sub_10004A9EC((uint64_t)sub_100168B2C, v18, v14, v12);
      if ((_DWORD)v15)
      {
        v16 = v15;
        if (sub_10005549C())
        {
          sub_100054530("Register connect timeout handler failed %!\n", v16);
          v17 = sub_1000544A0(0x18u);
          if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
            sub_1006CE7A4();
        }
      }
    }
  }
  else if (sub_10005549C())
  {
    sub_100054530("RFCOMM connect confirm called for bogus link handle %x", a1);
    v10 = sub_1000544A0(0x18u);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
}

uint64_t sub_100168B2C(uint64_t a1)
{
  int v1;
  unsigned __int16 *v2;
  NSObject *v3;

  v1 = **(unsigned __int16 **)(a1 + 8);
  v2 = sub_1001195C0(v1);
  if (!v2)
    sub_100253460();
  if (*((_DWORD *)v2 + 51) == 5)
    sub_100253460();
  if (sub_10005549C())
  {
    sub_100054530("Connection timeout: RFCOMM disconnect on link %x!", v1);
    v3 = sub_1000544A0(0x18u);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
  *((_DWORD *)v2 + 44) = 0;
  return sub_10011BAB0(v2[104]);
}

uint64_t sub_100168BC8(int a1)
{
  if ((a1 - 4373) < 3)
    return dword_100739D00[(__int16)(a1 - 4373)];
  sub_100253460();
  return 2;
}

uint64_t sub_100168C04(int a1)
{
  switch(a1)
  {
    case 2:
      return 4373;
    case 8:
      return 4374;
    case 4:
      return 4375;
  }
  sub_100253460();
  return 4373;
}

BOOL sub_100168C4C(int a1)
{
  return dword_1009991B4 && (*(_DWORD *)(qword_100983E58 + 12) & a1) != 0;
}

uint64_t sub_100168C7C(int a1)
{
  uint64_t v2;
  uint64_t v4;

  if (dword_1009991B4)
    goto LABEL_2;
  qword_100983E58 = (uint64_t)sub_100114588(0x10uLL);
  if (!qword_100983E58)
    return 106;
  v4 = sub_1001891E8(0x20000);
  if (!(_DWORD)v4)
  {
    dword_1009991B4 = 1;
LABEL_2:
    v2 = 0;
    *(_DWORD *)(qword_100983E58 + 12) |= a1;
    return v2;
  }
  v2 = v4;
  sub_10018FC24();
  if (qword_100983E58)
  {
    sub_100053298((void *)qword_100983E58);
    qword_100983E58 = 0;
  }
  return v2;
}

uint64_t sub_100168D18(int a1)
{
  int v2;
  int v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;

  if (!dword_1009991B4)
    sub_100253460();
  v2 = *(_DWORD *)(qword_100983E58 + 12);
  if ((v2 & a1) == 0)
    return 121;
  v3 = v2 & ~a1;
  *(_DWORD *)(qword_100983E58 + 12) = v3;
  if (v3)
    return 0;
  dword_1009991B4 = 0;
  v5 = sub_10018929C(0x20000);
  if ((_DWORD)v5)
  {
    v6 = v5;
    result = sub_10005549C();
    if ((_DWORD)result)
    {
      sub_100054530("OI_DEVMGR_DeregisterServiceClass failed in internalTerminate - %!\n", v6);
      v7 = sub_1000544A0(0x1Bu);
      result = os_log_type_enabled(v7, OS_LOG_TYPE_ERROR);
      if ((_DWORD)result)
      {
        sub_1006CEF28(v7);
        return 0;
      }
    }
  }
  else
  {
    result = qword_100983E58;
    if (qword_100983E58)
    {
      sub_100053298((void *)qword_100983E58);
      result = 0;
      qword_100983E58 = 0;
    }
  }
  return result;
}

uint64_t sub_100168DF4(int a1, int a2)
{
  uint64_t result;

  if (*(_DWORD *)(qword_100983E58 + 8) != a1)
    return 408;
  if (a1 == a2)
    return 0;
  if (a2)
  {
    if (!a1 && (a2 & ~*(_DWORD *)(qword_100983E58 + 12)) == 0)
    {
      qword_100994BD0 = (uint64_t)sub_100052DC0(0x5EAuLL);
      if (!qword_100994BD0)
        return 106;
      result = 0;
      *(_DWORD *)(qword_100983E58 + 8) = a2;
      return result;
    }
    return 408;
  }
  *(_DWORD *)(qword_100983E58 + 8) = 0;
  result = qword_100994BD0;
  if (qword_100994BD0)
  {
    sub_100053298((void *)qword_100994BD0);
    result = 0;
    qword_100994BD0 = 0;
  }
  return result;
}

uint64_t sub_100168E98(unsigned int a1, int a2, uint64_t a3, uint64_t (*a4)(uint64_t (*)(int *a1, unsigned int a2)), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  uint64_t v9;

  v9 = 101;
  if (a7 && a6 && a4 && a5 && a3 && a8)
  {
    if (dword_1009991B4)
    {
      *(_QWORD *)qword_100983E58 = 0;
      switch(a2)
      {
        case 8:
          return sub_100169F04(a1, a3, (uint64_t)a4, a5, a6, a7, a8, a9);
        case 4:
          return sub_100169DAC(a1, a3, (uint64_t)a4, a5, a6, a7, a8, a9);
        case 2:
          return sub_10016BA08(a1, a3, a4, a5, a6, a7, a8, a9);
      }
      return 101;
    }
    else
    {
      return 408;
    }
  }
  return v9;
}

uint64_t sub_100168F60(int a1, int a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t (*a6)(uint64_t (*)(int *a1, unsigned int a2)), void (*a7)(void), uint64_t a8, uint64_t a9, uint64_t a10)
{
  BOOL v10;
  __int16 v21;

  if (a9)
    v10 = a8 == 0;
  else
    v10 = 1;
  if (v10 || a6 == 0 || a7 == 0 || a5 == 0 || a10 == 0)
    return 101;
  if (!dword_1009991B4)
    return 408;
  if ((a1 & ~*(_DWORD *)(qword_100983E58 + 12)) != 0)
    return 2202;
  *(_QWORD *)qword_100983E58 = 0;
  if (a1 == 8)
  {
    if (a2 == 2)
      return sub_10016A0E4(a3, a4, a5, (uint64_t)a6, (uint64_t)a7, a8, a9, a10);
    return 2203;
  }
  if (a1 == 4)
  {
    if (a2 == 2)
      return sub_100169F28(a3, a4, a5, (uint64_t)a6, (uint64_t)a7, a8, a9, a10);
    return 2203;
  }
  if (a1 != 2)
    return 101;
  if (a2 == 2)
  {
LABEL_36:
    v21 = 4373;
    return sub_10016BD4C(v21, a3, a4, a5, a6, a7, a8, a9, a10);
  }
  if (a2 == 8)
  {
    v21 = 4374;
    return sub_10016BD4C(v21, a3, a4, a5, a6, a7, a8, a9, a10);
  }
  if (a2 != 4)
  {
    sub_100253460();
    goto LABEL_36;
  }
  v21 = 4375;
  return sub_10016BD4C(v21, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_100169110(int a1)
{
  if (!dword_1009991B4)
    return 408;
  if (*(_DWORD *)(qword_100983E58 + 8) == a1)
    return 141;
  if ((*(_DWORD *)(qword_100983E58 + 12) & a1) == 0)
    return 121;
  if (a1 == 4)
  {
    sub_100169B88();
  }
  else if (a1 == 8)
  {
    sub_100169D48();
  }
  else
  {
    sub_10016B9B4();
  }
  return 0;
}

uint64_t sub_100169190(unsigned int a1, int a2)
{
  int v2;

  if (!dword_1009991B4)
    return 408;
  v2 = *(_DWORD *)(qword_100983E58 + 8);
  if (v2 == 2)
    return sub_10016BFB4(a1, a2);
  if (v2 == 8 || v2 == 4)
    return sub_10016A108(a1, a2);
  else
    return 101;
}

uint64_t sub_1001691D8(unsigned int a1, int a2)
{
  int v2;

  if (!dword_1009991B4)
    return 408;
  v2 = *(_DWORD *)(qword_100983E58 + 8);
  if (v2 == 2)
    return sub_10016C030(a1, a2);
  if (v2 == 8 || v2 == 4)
    return sub_10016A20C(a1, a2);
  else
    return 101;
}

uint64_t sub_100169220(uint64_t a1, unsigned int a2, unsigned __int16 *a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  uint64_t v14;
  unsigned __int16 *i;

  if ((*(_BYTE *)a1 & 1) != 0)
  {
    v4 = *a4;
    if (*a4)
    {
      v5 = *((unsigned __int16 *)a4 + 4);
      if (*((_WORD *)a4 + 4))
      {
        while (1)
        {
          v6 = bswap32(*(_DWORD *)v4);
          v7 = bswap32(*(_DWORD *)a1);
          if (v6 == v7)
          {
            v6 = bswap32(*(unsigned __int16 *)(v4 + 4)) >> 16;
            v8 = bswap32(*(unsigned __int16 *)(a1 + 4));
            if (v6 == HIWORD(v8))
            {
              v9 = 0;
              goto LABEL_11;
            }
            v7 = HIWORD(v8);
          }
          if (v6 < v7)
            v9 = -1;
          else
            v9 = 1;
LABEL_11:
          if (v9 <= 0)
          {
            v10 = bswap32(*(_DWORD *)a1);
            v11 = bswap32(*(_DWORD *)(v4 + 6));
            if (v10 == v11)
            {
              v10 = bswap32(*(unsigned __int16 *)(a1 + 4)) >> 16;
              v12 = bswap32(*(unsigned __int16 *)(v4 + 10));
              if (v10 == HIWORD(v12))
              {
                v13 = 0;
                goto LABEL_19;
              }
              v11 = HIWORD(v12);
            }
            if (v10 < v11)
              v13 = -1;
            else
              v13 = 1;
LABEL_19:
            if (v13 < 1)
              goto LABEL_22;
          }
          v4 += 12;
          if (!--v5)
            return 0;
        }
      }
      return 0;
    }
  }
LABEL_22:
  if (*(_QWORD *)a3)
  {
    v14 = a3[4];
    if (!a3[4])
      return 0;
    for (i = (unsigned __int16 *)(*(_QWORD *)a3 + 2); *(i - 1) > a2 || *i < a2; i += 2)
    {
      if (!--v14)
        return 0;
    }
  }
  return 1;
}

uint64_t sub_100169334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  void *v7;
  void *v8;
  void *v9;
  uint64_t result;
  void *v11;

  v5 = *(void **)a2;
  if (!*(_WORD *)(a1 + 8))
  {
    if (!a3)
    {
      v8 = 0;
      *(_QWORD *)a2 = 0;
LABEL_11:
      result = 0;
      if (v5)
      {
        if (v5 != v8)
        {
          sub_100053298(v5);
          return 0;
        }
      }
      return result;
    }
    *(_QWORD *)a2 = *(_QWORD *)a3;
    *(_WORD *)(a2 + 8) = *(_WORD *)(a3 + 8);
LABEL_7:
    v8 = *(void **)a3;
    goto LABEL_11;
  }
  v7 = sub_100052DC0(4 * *(unsigned __int16 *)(a1 + 8));
  *(_QWORD *)a2 = v7;
  if (v7)
  {
    memmove(v7, *(const void **)a1, 4 * *(unsigned __int16 *)(a1 + 8));
    *(_WORD *)(a2 + 8) = *(_WORD *)(a1 + 8);
    if (!a3)
    {
      v8 = 0;
      goto LABEL_11;
    }
    goto LABEL_7;
  }
  if (a3)
    v9 = *(void **)a3;
  else
    v9 = 0;
  v11 = *(void **)a2;
  if (*(_QWORD *)a2 && v11 != v9)
    sub_100053298(v11);
  *(_QWORD *)a2 = v5;
  return 2023;
}

uint64_t sub_100169410(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  void *v7;
  void *v8;
  void *v9;
  uint64_t result;
  void *v11;

  v5 = *(void **)a2;
  if (!*(_WORD *)(a1 + 8))
  {
    if (!a3)
    {
      v8 = 0;
      *(_QWORD *)a2 = 0;
LABEL_11:
      result = 0;
      if (v5)
      {
        if (v5 != v8)
        {
          sub_100053298(v5);
          return 0;
        }
      }
      return result;
    }
    *(_QWORD *)a2 = *(_QWORD *)a3;
    *(_WORD *)(a2 + 8) = *(_WORD *)(a3 + 8);
LABEL_7:
    v8 = *(void **)a3;
    goto LABEL_11;
  }
  v7 = sub_100052DC0(12 * *(unsigned __int16 *)(a1 + 8));
  *(_QWORD *)a2 = v7;
  if (v7)
  {
    memmove(v7, *(const void **)a1, 12 * *(unsigned __int16 *)(a1 + 8));
    *(_WORD *)(a2 + 8) = *(_WORD *)(a1 + 8);
    if (!a3)
    {
      v8 = 0;
      goto LABEL_11;
    }
    goto LABEL_7;
  }
  if (a3)
    v9 = *(void **)a3;
  else
    v9 = 0;
  v11 = *(void **)a2;
  if (*(_QWORD *)a2 && v11 != v9)
    sub_100053298(v11);
  *(_QWORD *)a2 = v5;
  return 2033;
}

void sub_1001694F4(uint64_t a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void (*v9)(uint64_t, const void *, uint64_t);
  NSObject *v10;
  int v11;

  if (!*(_BYTE *)(qword_100983E60 + 1160))
    goto LABEL_16;
  v6 = 0;
  v7 = qword_100983E60 + 200;
  while (*(unsigned __int16 *)(v7 - 100) != (_DWORD)a1)
  {
    ++v6;
    v7 += 152;
    if (*(unsigned __int8 *)(qword_100983E60 + 1160) == v6)
      goto LABEL_16;
  }
  if ((v6 & 0x80000000) != 0)
  {
LABEL_16:
    if (sub_10005549C())
    {
      sub_100054530("Filter net type request for non-existent connection handle\n");
      v10 = sub_1000544A0(0x1Bu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return;
  }
  if (*(_QWORD *)v7)
  {
    sub_100053298(*(void **)v7);
    *(_QWORD *)v7 = 0;
  }
  *(_WORD *)(v7 + 8) = a3;
  if (!(_DWORD)a3)
    goto LABEL_12;
  v8 = sub_100052DC0(4 * a3);
  *(_QWORD *)v7 = v8;
  if (v8)
  {
    memmove(v8, a2, 4 * a3);
LABEL_12:
    if (*(_DWORD *)(qword_100983E60 + 1164) == 4
      && (v9 = *(void (**)(uint64_t, const void *, uint64_t))(qword_100983E60 + 16)) != 0
      || (v9 = *(void (**)(uint64_t, const void *, uint64_t))(qword_100983E60 + 24)) != 0)
    {
      v9(a1, a2, a3);
      return;
    }
    v11 = 2021;
    goto LABEL_22;
  }
  v11 = 2023;
LABEL_22:
  sub_100151C48(a1, v11);
  if (*(_QWORD *)v7)
  {
    sub_100053298(*(void **)v7);
    *(_QWORD *)v7 = 0;
  }
  *(_WORD *)(v7 + 8) = 0;
}

void sub_100169648(uint64_t a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void (*v9)(uint64_t, const void *, uint64_t);
  NSObject *v10;
  int v11;

  if (!*(_BYTE *)(qword_100983E60 + 1160))
    goto LABEL_16;
  v6 = 0;
  v7 = qword_100983E60 + 216;
  while (*(unsigned __int16 *)(v7 - 116) != (_DWORD)a1)
  {
    ++v6;
    v7 += 152;
    if (*(unsigned __int8 *)(qword_100983E60 + 1160) == v6)
      goto LABEL_16;
  }
  if ((v6 & 0x80000000) != 0)
  {
LABEL_16:
    if (sub_10005549C())
    {
      sub_100054530("Filter net type request for non-existent connection handle\n");
      v10 = sub_1000544A0(0x1Bu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return;
  }
  if (*(_QWORD *)v7)
  {
    sub_100053298(*(void **)v7);
    *(_QWORD *)v7 = 0;
  }
  *(_WORD *)(v7 + 8) = a3;
  if (!(_DWORD)a3)
    goto LABEL_12;
  v8 = sub_100052DC0(12 * a3);
  *(_QWORD *)v7 = v8;
  if (v8)
  {
    memmove(v8, a2, 12 * a3);
LABEL_12:
    if (*(_DWORD *)(qword_100983E60 + 1164) == 4
      && (v9 = *(void (**)(uint64_t, const void *, uint64_t))(qword_100983E60 + 32)) != 0
      || (v9 = *(void (**)(uint64_t, const void *, uint64_t))(qword_100983E60 + 40)) != 0)
    {
      v9(a1, a2, a3);
      return;
    }
    v11 = 2031;
    goto LABEL_22;
  }
  v11 = 2033;
LABEL_22:
  sub_100151CB0(a1, v11);
  if (*(_QWORD *)v7)
  {
    sub_100053298(*(void **)v7);
    *(_QWORD *)v7 = 0;
  }
  *(_WORD *)(v7 + 8) = 0;
}

uint64_t sub_1001697A0(int a1)
{
  uint64_t v2;
  BOOL v3;
  NSObject *v4;
  _QWORD *v6;
  uint64_t v7;
  NSObject *v8;

  if (sub_100168C4C(a1))
    return 0;
  if (sub_100168C4C(4))
  {
    v2 = sub_100168C7C(a1);
    if (!(_DWORD)v2)
      return v2;
    goto LABEL_7;
  }
  v3 = sub_100168C4C(8);
  v2 = sub_100168C7C(a1);
  if ((_DWORD)v2)
  {
LABEL_7:
    if (sub_10005549C())
    {
      sub_100054530("PAN_RegisterRole inside GN/NAP internalInit failed - %!\n", v2);
      v4 = sub_1000544A0(0x1Bu);
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return v2;
  }
  if (v3)
    return 0;
  v6 = sub_100114588(0x4F0uLL);
  qword_100983E60 = (uint64_t)v6;
  if (v6)
  {
    sub_100253C6C(v6 + 10);
    v2 = 0;
    v7 = qword_100983E60;
    *(_OWORD *)(qword_100983E60 + 1168) = *(_OWORD *)&off_10091CDE8;
    *(_OWORD *)(v7 + 1184) = *(_OWORD *)&off_10091CDF8;
    *(_OWORD *)(v7 + 1200) = xmmword_10091CE08;
    *(_OWORD *)(v7 + 1216) = unk_10091CE18;
    *(_BYTE *)(v7 + 1161) = 0;
    *(_DWORD *)(v7 + 1164) = 0;
    *(_OWORD *)(v7 + 1232) = unk_10091CE28;
  }
  else
  {
    sub_100168D18(a1);
    if (sub_10005549C())
    {
      sub_100054530("GN/NAP internalInit out of memory\n");
      v8 = sub_1000544A0(0x1Bu);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 106;
  }
  return v2;
}

void sub_100169914(uint64_t a1, uint64_t a2, int a3, int a4)
{
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  _DWORD *v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  void (*v25)(uint64_t, uint64_t, uint64_t, uint64_t);

  v8 = sub_10016AE70(a2);
  v9 = qword_100983E60;
  if (v8 == -1)
  {
    v10 = (*(_BYTE *)(qword_100983E60 + 1160))++;
    v11 = v9 + 152 * v10;
    v12 = *(_DWORD *)a2;
    *(_WORD *)(v11 + 106) = *(_WORD *)(a2 + 4);
    *(_DWORD *)(v11 + 102) = v12;
    *(_QWORD *)(v11 + 112) = 0;
    *(_WORD *)(v11 + 100) = a1;
  }
  else
  {
    v10 = v8;
  }
  v13 = v9 + 152 * (int)v10;
  v16 = *(_DWORD *)(v13 + 96);
  v14 = (_DWORD *)(v13 + 96);
  v15 = v16;
  if (v16 == 1)
  {
LABEL_7:
    if (a3 == 4375)
    {
      v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v9;
      v17 = sub_100168BC8(a4);
      v18 = a1;
      v19 = a2;
      v20 = 4;
    }
    else
    {
      v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8);
      v17 = sub_100168BC8(a4);
      v18 = a1;
      v19 = a2;
      v20 = 8;
    }
    v25(v18, v19, v20, v17);
    return;
  }
  if (!v15)
  {
    *v14 = 1;
    goto LABEL_7;
  }
  if (sub_10005549C())
  {
    sub_100054530("Device for connection to %: in invalid state to accept incoming connect request\n", a2);
    v21 = sub_1000544A0(0x1Bu);
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
  v22 = sub_10015171C(a1, 0, 0, 0, (__int128 *)(qword_100983E60 + 1200));
  if ((_DWORD)v22)
  {
    v23 = v22;
    if (sub_10005549C())
    {
      sub_100054530("Reject incoming connection failed - %!\n", v23);
      v24 = sub_1000544A0(0x1Bu);
      if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
}

void sub_100169ADC(int a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;

  if (sub_100168C4C(a1))
  {
    v2 = sub_100168D18(a1);
    if ((_DWORD)v2)
    {
      v3 = v2;
      if (sub_10005549C())
      {
        sub_100054530("PAN_DeregisterRole failed inside GN/NAP internalTerminate - %!\n", v3);
        v4 = sub_1000544A0(0x1Bu);
        if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
    }
    else if (!sub_100168C4C(4) && !sub_100168C4C(8) && qword_100983E60)
    {
      sub_100053298((void *)qword_100983E60);
      qword_100983E60 = 0;
    }
  }
}

uint64_t sub_100169B88()
{
  uint64_t result;

  if (!sub_100168C4C(4))
    return 408;
  result = sub_1002467B8(*(_DWORD *)(qword_100983E60 + 1252));
  if (!(_DWORD)result)
  {
    result = sub_100151180(15, 4375);
    if (!(_DWORD)result)
    {
      sub_100169ADC(4);
      return 0;
    }
  }
  return result;
}

uint64_t sub_100169BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8, int a9, int a10)
{
  uint64_t v18;
  uint64_t v19;
  __int128 v21;
  __int128 v22;

  if (!sub_100168C4C(8))
  {
    v21 = 0u;
    v22 = 0u;
    v18 = sub_1001697A0(8);
    if (!(_DWORD)v18)
    {
      v18 = sub_100150C38(15, 4374, (uint64_t)sub_100169914);
      if (!(_DWORD)v18)
      {
        v19 = qword_100983E60;
        *(_QWORD *)(qword_100983E60 + 8) = a1;
        *(_QWORD *)(v19 + 24) = a2;
        *(_QWORD *)(v19 + 56) = a3;
        *(_QWORD *)(v19 + 40) = a4;
        *(_QWORD *)(v19 + 72) = a5;
        *(_DWORD *)(v19 + 1256) = a10;
        *(_QWORD *)&v21 = &unk_10091CD28;
        WORD4(v21) = 8;
        *(_QWORD *)&v22 = *(_QWORD *)a6;
        WORD4(v22) = *(_WORD *)(a6 + 8);
        byte_100983E68 = 1;
        word_100983E6A = 2;
        dword_100983E70 = a7;
        byte_100983E78 = 1;
        word_100983E7A = 2;
        dword_100983E80 = a8;
        byte_100983E88 = 1;
        word_100983E8A = 4;
        dword_100983E90 = a9;
        v18 = sub_1002465CC((uint64_t)&v21, (int *)(v19 + 1248));
        if (!(_DWORD)v18)
          return v18;
        *(_DWORD *)(qword_100983E60 + 1248) = 0;
        sub_100151180(15, 4374);
      }
    }
    sub_100169ADC(8);
    return v18;
  }
  return 119;
}

uint64_t sub_100169D48()
{
  uint64_t result;

  if (!sub_100168C4C(8))
    return 408;
  result = sub_1002467B8(*(_DWORD *)(qword_100983E60 + 1248));
  if (!(_DWORD)result)
  {
    *(_DWORD *)(qword_100983E60 + 1248) = 0;
    result = sub_100151180(15, 4374);
    if (!(_DWORD)result)
    {
      sub_100169ADC(8);
      return 0;
    }
  }
  return result;
}

uint64_t sub_100169DAC(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return sub_100169DD0(a1, a2, a3, a4, a5, a6, a7, a8, 4375);
}

uint64_t sub_100169DD0(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, int a9)
{
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  int v14;
  unsigned int v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v19;
  __int128 *v20;
  unsigned int v21;
  _BOOL4 v22;

  v9 = *(unsigned __int8 *)(qword_100983E60 + 1160);
  if (!*(_BYTE *)(qword_100983E60 + 1160))
    return 122;
  v12 = qword_100983E60 + 96;
  v13 = 0xFFFFFFFFLL;
  while (*(unsigned __int16 *)(v12 + 4) != a1)
  {
    --v13;
    v12 += 152;
    if (!--v9)
      return 122;
  }
  if (!v13)
    return 122;
  if (a8)
  {
    *(_QWORD *)(v12 + 32) = a3;
    *(_QWORD *)(v12 + 40) = a4;
    *(_QWORD *)(v12 + 48) = a5;
    *(_QWORD *)(v12 + 56) = a6;
    *(_QWORD *)(v12 + 64) = a7;
    v14 = sub_100168BC8((unsigned __int16)a9);
    v15 = sub_10016AEC0(v12, v14);
    v16 = v15 == 0;
  }
  else
  {
    v16 = 0;
    v15 = 0;
  }
  if (*(_DWORD *)v12 != 1)
    return 408;
  v19 = qword_100983E60;
  v20 = (__int128 *)(qword_100983E60 + 1200);
  *(_BYTE *)(qword_100983E60 + 1200) = 3;
  *(_WORD *)(v19 + 1202) = 4;
  *(_DWORD *)(v19 + 1208) = a9;
  v21 = sub_10015171C(a1, (uint64_t)sub_10016AFD0, v19 + 1168, v16, v20);
  if (v16)
    v17 = v21;
  else
    v17 = v15;
  if (v21)
    v22 = 0;
  else
    v22 = v16;
  if (v22)
  {
    *(_QWORD *)(v12 + 24) = a2;
  }
  else
  {
    *(_DWORD *)v12 = 0;
    sub_10016A8CC((_QWORD *)v12);
  }
  return v17;
}

uint64_t sub_100169F04(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return sub_100169DD0(a1, a2, a3, a4, a5, a6, a7, a8, 4374);
}

uint64_t sub_100169F28(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_100169F4C(a1, a2, a3, a4, a5, a6, a7, a8, 4);
}

uint64_t sub_100169F4C(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  signed int v17;
  uint64_t v18;
  signed int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  _QWORD *v23;
  int v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  __int16 v31;
  unsigned int v33;

  v17 = sub_10016AE70(a1);
  v18 = qword_100983E60;
  if (v17 == -1)
  {
    v19 = *(unsigned __int8 *)(qword_100983E60 + 1160);
    if (v19 > 6)
      return 104;
    v33 = a2;
    *(_BYTE *)(qword_100983E60 + 1160) = v19 + 1;
    v20 = v18 + 152 * v19;
    v21 = *(_DWORD *)a1;
    *(_WORD *)(v20 + 106) = *(_WORD *)(a1 + 4);
    *(_DWORD *)(v20 + 102) = v21;
    *(_QWORD *)(v20 + 112) = 0;
  }
  else
  {
    v33 = a2;
    v19 = v17;
  }
  v22 = v18 + 152 * v19;
  v24 = *(_DWORD *)(v22 + 96);
  v23 = (_QWORD *)(v22 + 96);
  if (v24)
    return 408;
  v26 = (_QWORD *)(v18 + 152 * v19);
  v26[16] = a4;
  v26[17] = a5;
  v26[18] = a6;
  v26[19] = a7;
  v26[20] = a8;
  v25 = sub_10016AEC0((uint64_t)v23, a9);
  if (!(_DWORD)v25)
  {
    v27 = qword_100983E60;
    *(_BYTE *)(qword_100983E60 + 1200) = 3;
    *(_WORD *)(v27 + 1202) = 4;
    v28 = sub_100168C04(a9);
    v29 = qword_100983E60;
    *(_DWORD *)(qword_100983E60 + 1208) = v28;
    v30 = v29 + 1168;
    v31 = sub_100168C04(a9);
    v25 = sub_100151234(v33, (uint64_t)sub_10016AFD0, v30, a1, v31, 4373, qword_100983E60 + 1200);
    if ((_DWORD)v25)
    {
      sub_10016A860((uint64_t)v23);
      sub_10016A8CC(v23);
    }
    else
    {
      *(_QWORD *)(v18 + 152 * v19 + 120) = a3;
      *(_DWORD *)v23 = 2;
    }
  }
  return v25;
}

uint64_t sub_10016A0E4(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_100169F4C(a1, a2, a3, a4, a5, a6, a7, a8, 8);
}

uint64_t sub_10016A108(unsigned int a1, int a2)
{
  uint64_t v3;
  void **v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v8;

  if (!*(_BYTE *)(qword_100983E60 + 1160))
    goto LABEL_9;
  v3 = 0;
  v4 = (void **)(qword_100983E60 + 200);
  while (*((unsigned __int16 *)v4 - 50) != a1)
  {
    ++v3;
    v4 += 19;
    if (*(unsigned __int8 *)(qword_100983E60 + 1160) == v3)
      goto LABEL_9;
  }
  if ((v3 & 0x80000000) != 0)
  {
LABEL_9:
    if (sub_10005549C())
    {
      sub_100054530("Filter net type request for non-existent connection handle\n");
      v6 = sub_1000544A0(0x1Bu);
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 122;
  }
  if (!a2)
  {
    v8 = 56;
    if (*(_DWORD *)(qword_100983E60 + 1164) == 4)
      v8 = 48;
    v5 = sub_100169334((uint64_t)v4, (uint64_t)(v4 - 4), *(_QWORD *)(qword_100983E60 + v8));
    if ((_DWORD)v5)
      goto LABEL_17;
    a2 = 0;
  }
  v5 = sub_100151C48(a1, a2);
LABEL_17:
  if (*v4)
  {
    sub_100053298(*v4);
    *v4 = 0;
  }
  return v5;
}

uint64_t sub_10016A20C(unsigned int a1, int a2)
{
  uint64_t v3;
  void **v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v8;

  if (!*(_BYTE *)(qword_100983E60 + 1160))
    goto LABEL_9;
  v3 = 0;
  v4 = (void **)(qword_100983E60 + 216);
  while (*((unsigned __int16 *)v4 - 58) != a1)
  {
    ++v3;
    v4 += 19;
    if (*(unsigned __int8 *)(qword_100983E60 + 1160) == v3)
      goto LABEL_9;
  }
  if ((v3 & 0x80000000) != 0)
  {
LABEL_9:
    if (sub_10005549C())
    {
      sub_100054530("Filter multicast request for non-existent connection handle\n");
      v6 = sub_1000544A0(0x1Bu);
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 122;
  }
  if (!a2)
  {
    v8 = 72;
    if (*(_DWORD *)(qword_100983E60 + 1164) == 4)
      v8 = 64;
    v5 = sub_100169410((uint64_t)v4, (uint64_t)(v4 - 4), *(_QWORD *)(qword_100983E60 + v8));
    if ((_DWORD)v5)
      goto LABEL_17;
    a2 = 0;
  }
  v5 = sub_100151CB0(a1, a2);
LABEL_17:
  if (*v4)
  {
    sub_100053298(*v4);
    *v4 = 0;
  }
  return v5;
}

uint64_t sub_10016A310(_DWORD *a1)
{
  uint64_t result;

  if (!sub_100168C4C(8))
    return 408;
  result = 0;
  *a1 = *(_DWORD *)(qword_100983E60 + 1248);
  return result;
}

void sub_10016A354(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  int v11;
  _QWORD *v12;
  void (*v13)(uint64_t, uint64_t);

  v2 = qword_100983E60;
  if (!*(_BYTE *)(qword_100983E60 + 1160))
    goto LABEL_7;
  v5 = 0;
  v6 = 0;
  while (*(unsigned __int16 *)(qword_100983E60 + v6 + 100) != (_DWORD)a1)
  {
    v6 += 152;
    ++v5;
    if (152 * *(unsigned __int8 *)(qword_100983E60 + 1160) == v6)
      goto LABEL_7;
  }
  if ((_DWORD)v6 != -152)
  {
    v8 = qword_100983E60 + v6;
    v9 = (_QWORD *)(qword_100983E60 + v6 + 96);
    v10 = *(_QWORD **)(qword_100983E60 + 80);
    if (v10 != (_QWORD *)(qword_100983E60 + 80))
    {
      v11 = 1 << v5;
      do
      {
        v12 = (_QWORD *)*v10;
        if ((v11 & *((_BYTE *)v10 - 6)) != 0)
        {
          *(_QWORD *)(v8 + 112) = v10 - 194;
          sub_10016A740(a1);
          v2 = qword_100983E60;
        }
        v10 = v12;
      }
      while (v12 != (_QWORD *)(v2 + 80));
    }
    *(_DWORD *)v9 = 0;
    sub_10016A860((uint64_t)v9);
    v13 = *(void (**)(uint64_t, uint64_t))(v8 + 160);
    sub_10016A8CC(v9);
    v13(a1, a2);
  }
  else
  {
LABEL_7:
    if (sub_10005549C())
    {
      sub_100054530("DisconnectCB issued but no connection\n");
      v7 = sub_1000544A0(0x1Bu);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
}

void sub_10016A4B8(int a1, uint64_t a2, uint64_t a3, __int16 a4, const void *a5, unsigned int a6, void *__src, size_t __len)
{
  uint64_t v8;
  __int16 v9;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  BOOL v21;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  NSObject *v29;
  size_t __lena;

  v8 = *(unsigned __int8 *)(qword_100983E60 + 1160);
  if (!*(_BYTE *)(qword_100983E60 + 1160))
    goto LABEL_28;
  v9 = __len;
  v16 = qword_100983E60 + 96;
  v17 = 0xFFFFFFFFLL;
  while (*(unsigned __int16 *)(v16 + 4) != a1)
  {
    --v17;
    v16 += 152;
    if (!--v8)
      goto LABEL_28;
  }
  if (v17)
  {
    v18 = qword_100994BD0;
    if (!qword_100994BD0)
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/pan/pan_gn.c");
    v19 = *(_DWORD *)a2;
    *(_WORD *)(qword_100994BD0 + 4) = *(_WORD *)(a2 + 4);
    *(_DWORD *)v18 = v19;
    v20 = *(_DWORD *)a3;
    *(_WORD *)(v18 + 10) = *(_WORD *)(a3 + 4);
    *(_DWORD *)(v18 + 6) = v20;
    *(_WORD *)(v18 + 12) = __rev16(a4);
    if (__len >= 0x5DD)
    {
      sub_100253460();
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/pan/pan_gn.c");
    }
    memmove((void *)(v18 + 14), __src, __len);
    if (*(_DWORD *)(qword_100983E60 + 1256) == 1
      || (*(_BYTE *)a2 & 1) != 0
      || (*(_DWORD *)a2 == (_DWORD)xmmword_100998F58
        ? (v21 = *(unsigned __int16 *)(a2 + 4) == WORD2(xmmword_100998F58))
        : (v21 = 0),
          v21))
    {
      if (*(_DWORD *)a3 != (_DWORD)xmmword_100998F58 || *(unsigned __int16 *)(a3 + 4) != WORD2(xmmword_100998F58))
      {
        v23 = (*(uint64_t (**)(uint64_t, _QWORD))(v16 + 48))(v18, (unsigned __int16)(v9 + 14));
        if ((_DWORD)v23)
        {
          v24 = v23;
          if (sub_10005549C())
          {
            sub_100054530("Forwarding packet to host failed - %!\n", v24);
            v25 = sub_1000544A0(0x1Bu);
            if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
              sub_1006CE7A4();
          }
        }
      }
    }
    LOWORD(__lena) = v9;
    v26 = sub_10016AA60(v16, 0, (int *)a2, (int *)a3, a4, a5, a6, __src, __lena);
    if ((_DWORD)v26)
    {
      v27 = v26;
      if (sub_10005549C())
      {
        sub_100054530("Forwarding packet to other BT devices failed - %!\n", v27);
        v28 = sub_1000544A0(0x1Bu);
        if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
          goto LABEL_30;
      }
    }
  }
  else
  {
LABEL_28:
    if (sub_10005549C())
    {
      sub_100054530("Unknown handle\n");
      v29 = sub_1000544A0(0x1Bu);
      if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
LABEL_30:
        sub_1006CE7A4();
    }
  }
}

void sub_10016A740(int a1)
{
  uint64_t v1;
  unsigned __int16 *v2;
  uint64_t v3;
  int v4;
  NSObject *v5;
  NSObject *v6;

  if (!*(_BYTE *)(qword_100983E60 + 1160))
    goto LABEL_12;
  v1 = 0;
  v2 = (unsigned __int16 *)(qword_100983E60 + 100);
  while (*v2 != a1)
  {
    ++v1;
    v2 += 76;
    if (*(unsigned __int8 *)(qword_100983E60 + 1160) == v1)
      goto LABEL_12;
  }
  if ((v1 & 0x80000000) != 0)
  {
LABEL_12:
    if (!sub_10005549C())
      return;
    sub_100054530("BNEP write completed for non-existent connection handle\n");
    v5 = sub_1000544A0(0x1Bu);
    if (!os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      return;
    goto LABEL_14;
  }
  v3 = *(_QWORD *)(v2 + 6);
  if (!v3)
  {
    if (!sub_10005549C())
      return;
    sub_100054530("FinishSend called on NULL packet\n");
    v6 = sub_1000544A0(0x1Bu);
    if (!os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      return;
LABEL_14:
    sub_1006CE7A4();
    return;
  }
  *(_QWORD *)(v2 + 6) = 0;
  v4 = *(unsigned __int8 *)(v3 + 1546) & ~(1 << v1);
  *(_BYTE *)(v3 + 1546) = v4;
  if (!v4)
  {
    if (*(_BYTE *)(v3 + 1568))
      (*(void (**)(void))(v2 + 26))();
    sub_100253C9C((_QWORD *)(v3 + 1552));
    sub_10016AA30((_QWORD *)v3);
  }
}

void sub_10016A860(uint64_t a1)
{
  int v1;
  uint64_t v2;
  _BYTE *v3;

  v1 = (*(uint64_t (**)(void))(a1 + 40))();
  LODWORD(v2) = *(unsigned __int8 *)(qword_100983E60 + 1161);
  if ((_DWORD)v2 == 1)
  {
    if (v1)
      return;
    if (sub_100168DF4(*(_DWORD *)(qword_100983E60 + 1164), 0))
      sub_100253460();
    v2 = qword_100983E60;
    *(_DWORD *)(qword_100983E60 + 1164) = 0;
    v3 = (_BYTE *)(v2 + 1161);
    LOBYTE(v2) = *(_BYTE *)(v2 + 1161);
  }
  else
  {
    v3 = (_BYTE *)(qword_100983E60 + 1161);
  }
  *v3 = v2 - 1;
}

void sub_10016A8CC(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  void **v4;
  void *v5;
  _QWORD *v6;
  void **v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;

  v2 = qword_100983E60;
  v3 = *(_QWORD **)(qword_100983E60 + 48);
  if (v3)
    LOBYTE(v3) = a1[9] == *v3;
  v4 = *(void ***)(qword_100983E60 + 56);
  v5 = (void *)a1[9];
  if (v4)
    LOBYTE(v4) = v5 == *v4;
  if (!v5)
    LOBYTE(v3) = 1;
  if ((v3 & 1) == 0 && (v4 & 1) == 0)
  {
    sub_100053298(v5);
    v2 = qword_100983E60;
  }
  v6 = *(_QWORD **)(v2 + 64);
  if (v6)
    LOBYTE(v6) = a1[11] == *v6;
  v7 = *(void ***)(v2 + 72);
  v8 = (void *)a1[11];
  if (v7)
    LOBYTE(v7) = v8 == *v7;
  if (!v8)
    LOBYTE(v6) = 1;
  if ((v6 & 1) == 0 && (v7 & 1) == 0)
    sub_100053298(v8);
  v9 = (void *)a1[13];
  if (v9)
  {
    sub_100053298(v9);
    a1[13] = 0;
  }
  v10 = (void *)a1[15];
  if (v10)
  {
    sub_100053298(v10);
    a1[15] = 0;
  }
  v11 = qword_100983E60;
  v12 = 0x86BCA1AF286BCA1BLL * (((uint64_t)a1 - qword_100983E60 - 96) >> 3);
  v13 = v12 + 1;
  if ((v12 + 1) <= 6)
  {
    v14 = qword_100983E60 + 152 * (int)v12 + 96;
    v15 = qword_100983E60 + 152 * v13 + 96;
    do
    {
      v16 = *(_OWORD *)(v15 + 16);
      *(_OWORD *)v14 = *(_OWORD *)v15;
      *(_OWORD *)(v14 + 16) = v16;
      v17 = *(_OWORD *)(v15 + 32);
      v18 = *(_OWORD *)(v15 + 48);
      v19 = *(_OWORD *)(v15 + 80);
      *(_OWORD *)(v14 + 64) = *(_OWORD *)(v15 + 64);
      *(_OWORD *)(v14 + 80) = v19;
      *(_OWORD *)(v14 + 32) = v17;
      *(_OWORD *)(v14 + 48) = v18;
      v20 = *(_OWORD *)(v15 + 96);
      v21 = *(_OWORD *)(v15 + 112);
      v22 = *(_OWORD *)(v15 + 128);
      *(_QWORD *)(v14 + 144) = *(_QWORD *)(v15 + 144);
      *(_OWORD *)(v14 + 112) = v21;
      *(_OWORD *)(v14 + 128) = v22;
      *(_OWORD *)(v14 + 96) = v20;
      v14 += 152;
      v15 += 152;
      ++v13;
    }
    while (v13 < 7);
  }
  --*(_BYTE *)(v11 + 1160);
}

void sub_10016AA30(_QWORD *ptr)
{
  void *v2;

  v2 = (void *)ptr[192];
  if (v2)
  {
    sub_100053298(v2);
    ptr[192] = 0;
  }
  sub_100053298(ptr);
}

uint64_t sub_10016AA60(uint64_t a1, int a2, int *a3, int *a4, __int16 a5, const void *a6, unsigned int a7, const void *a8, size_t __len)
{
  _DWORD *v17;
  _DWORD *v18;
  void *v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _DWORD *v28;
  uint64_t v30;
  NSObject *v31;
  void *v32;
  uint64_t v34;
  uint8_t buf[4];
  void *v36;
  __int16 v37;
  int v38;

  v17 = sub_100052DC0(0x628uLL);
  if (!v17)
    return 106;
  v18 = v17;
  if (a6)
  {
    v19 = sub_100052DC0(a7);
    *((_QWORD *)v18 + 192) = v19;
    if (v19)
    {
      memmove(v19, a6, a7);
      goto LABEL_6;
    }
    sub_100053298(v18);
    return 106;
  }
  *((_QWORD *)v17 + 192) = 0;
LABEL_6:
  *((_WORD *)v18 + 772) = a7;
  v20 = *a3;
  *((_WORD *)v18 + 2) = *((_WORD *)a3 + 2);
  *v18 = v20;
  v21 = *a4;
  *((_WORD *)v18 + 5) = *((_WORD *)a4 + 2);
  *(_DWORD *)((char *)v18 + 6) = v21;
  *((_WORD *)v18 + 6) = a5;
  v22 = (uint64_t)memmove((char *)v18 + 14, a8, (unsigned __int16)__len);
  *((_WORD *)v18 + 764) = __len;
  *((_BYTE *)v18 + 1546) = 0;
  *((_BYTE *)v18 + 1568) = a2;
  v23 = qword_100983E60;
  if (!*(_BYTE *)(qword_100983E60 + 1160))
    goto LABEL_30;
  v34 = a1;
  v24 = 0;
  v25 = 0;
  do
  {
    if (*(_DWORD *)(v23 + v24 + 96) == 3)
    {
      if ((*(_BYTE *)a3 & 1) != 0
        || (*a3 == *(_DWORD *)(v23 + v24 + 102)
          ? (v26 = *((unsigned __int16 *)a3 + 2) == *(unsigned __int16 *)(v23 + v24 + 106))
          : (v26 = 0),
            v26))
      {
        v27 = v23 + v24;
        v28 = (_DWORD *)(v23 + v24 + 102);
        if ((*a4 != *v28 || *((unsigned __int16 *)a4 + 2) != *(unsigned __int16 *)(v23 + v24 + 106))
          && !*(_QWORD *)(v27 + 112))
        {
          v22 = sub_10016AD10((uint64_t)v18, v23 + v24 + 96);
          if ((_DWORD)v22 != 2041)
          {
            v30 = v22;
            if ((_DWORD)v22)
            {
              v22 = sub_10005549C();
              if ((_DWORD)v22)
              {
                sub_100054530("Forwarding packet to %: failed - %!\n", v28, v30);
                v31 = sub_1000544A0(0x1Bu);
                v22 = os_log_type_enabled(v31, OS_LOG_TYPE_ERROR);
                if ((_DWORD)v22)
                {
                  v32 = sub_100054494();
                  *(_DWORD *)buf = 136446466;
                  v36 = v32;
                  v37 = 1024;
                  v38 = 0xFFFF;
                  _os_log_error_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
                }
              }
            }
            else
            {
              *((_BYTE *)v18 + 1546) |= 1 << v25;
              *(_QWORD *)(v27 + 112) = v18;
            }
          }
        }
      }
    }
    ++v25;
    v23 = qword_100983E60;
    v24 += 152;
  }
  while (v25 < *(unsigned __int8 *)(qword_100983E60 + 1160));
  a1 = v34;
  if (*((_BYTE *)v18 + 1546))
  {
    sub_100253C88((_QWORD *)v18 + 194, qword_100983E60 + 80);
  }
  else
  {
LABEL_30:
    if (a2)
      (*(void (**)(uint64_t))(a1 + 56))(v22);
    sub_10016AA30(v18);
  }
  return 0;
}

uint64_t sub_10016AD10(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  char *v5;
  unsigned __int16 v6;
  char *v7;

  if (sub_100169220(a1, *(unsigned __int16 *)(a1 + 12), (unsigned __int16 *)(a2 + 72), (uint64_t *)(a2 + 88)))
  {
    v4 = *(unsigned __int16 *)(a1 + 12);
    v5 = (char *)(a1 + 14);
    v6 = *(_WORD *)(a1 + 1528);
    v7 = *(char **)(a1 + 1536);
    return sub_100151B00((uint64_t)sub_10016AD9C, *(unsigned __int16 *)(a2 + 4), a1, a1 + 6, v4, v7, *(unsigned __int16 *)(a1 + 1544), v5, v6);
  }
  v7 = *(char **)(a1 + 1536);
  if (v7)
  {
    v6 = 0;
    v5 = 0;
    v4 = 0;
    return sub_100151B00((uint64_t)sub_10016AD9C, *(unsigned __int16 *)(a2 + 4), a1, a1 + 6, v4, v7, *(unsigned __int16 *)(a1 + 1544), v5, v6);
  }
  return 2041;
}

void sub_10016AD9C(int a1)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  _QWORD *v5;
  int v6;
  _QWORD *v7;

  sub_10016A740(a1);
  v2 = qword_100983E60;
  if (*(_BYTE *)(qword_100983E60 + 1160))
  {
    v3 = 0;
    v4 = 0;
    while (*(unsigned __int16 *)(qword_100983E60 + v4 + 100) != a1)
    {
      v4 += 152;
      ++v3;
      if (152 * *(unsigned __int8 *)(qword_100983E60 + 1160) == v4)
        return;
    }
    if ((v3 & 0x80000000) == 0)
    {
      v5 = *(_QWORD **)(qword_100983E60 + 80);
      if (v5 != (_QWORD *)(qword_100983E60 + 80))
      {
        v6 = 1 << v3;
        do
        {
          v7 = (_QWORD *)*v5;
          if ((v6 & *((_BYTE *)v5 - 6)) != 0)
          {
            *(_QWORD *)(v2 + v4 + 112) = v5 - 194;
            if (!sub_10016AD10())
              return;
            sub_10016A740(a1);
            v2 = qword_100983E60;
          }
          v5 = v7;
        }
        while (v7 != (_QWORD *)(v2 + 80));
      }
    }
  }
}

uint64_t sub_10016AE70(uint64_t a1)
{
  uint64_t result;
  uint64_t i;

  if (!*(_BYTE *)(qword_100983E60 + 1160))
    return 0xFFFFFFFFLL;
  result = 0;
  for (i = qword_100983E60 + 102;
        *(_DWORD *)i != *(_DWORD *)a1 || *(unsigned __int16 *)(i + 4) != *(unsigned __int16 *)(a1 + 4);
        i += 152)
  {
    if (*(unsigned __int8 *)(qword_100983E60 + 1160) == ++result)
      return 0xFFFFFFFFLL;
  }
  return result;
}

uint64_t sub_10016AEC0(uint64_t a1, int a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;

  if (*(_BYTE *)(qword_100983E60 + 1161))
  {
    if (*(_DWORD *)(qword_100983E60 + 1164) == a2)
    {
      v4 = (*(uint64_t (**)(uint64_t (*)(uint64_t, unsigned int)))(a1 + 32))(sub_10016B1AC);
      if (!(_DWORD)v4)
        goto LABEL_12;
    }
    else
    {
      return 408;
    }
  }
  else
  {
    v4 = sub_100168DF4(0, a2);
    if (!(_DWORD)v4)
    {
      v5 = (*(uint64_t (**)(uint64_t (*)(uint64_t, unsigned int)))(a1 + 32))(sub_10016B1AC);
      if (!(_DWORD)v5)
      {
LABEL_12:
        v4 = 0;
        v9 = qword_100983E60;
        *(_DWORD *)(qword_100983E60 + 1164) = a2;
        ++*(_BYTE *)(v9 + 1161);
        return v4;
      }
      v4 = v5;
      v6 = sub_100168DF4(a2, 0);
      if ((_DWORD)v6)
      {
        v7 = v6;
        if (sub_10005549C())
        {
          sub_100054530("Could not revert role - %!\n", v7);
          v8 = sub_1000544A0(0x1Bu);
          if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
            sub_1006CE7A4();
        }
      }
    }
  }
  return v4;
}

void sub_10016AFD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v6;
  uint64_t v7;
  int v8;
  _QWORD *v9;
  void (*v10)(_QWORD, _QWORD, _QWORD);
  NSObject *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_QWORD, _QWORD, _QWORD);

  v6 = sub_10016AE70(a2);
  if (v6 != -1)
  {
    v7 = qword_100983E60;
    v8 = v6;
    v9 = (_QWORD *)(qword_100983E60 + 152 * v6 + 96);
    if ((*(_DWORD *)v9 - 1) >= 2)
      sub_100253460();
    v10 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 152 * v8 + 120);
    if ((_DWORD)a3)
    {
      *(_DWORD *)v9 = 0;
      v19 = v10;
      sub_10016A860((uint64_t)v9);
      sub_10016A8CC(v9);
      v10 = v19;
LABEL_22:
      v10(a1, a2, a3);
      return;
    }
    *(_WORD *)(v7 + 152 * v8 + 100) = a1;
    v12 = qword_100983E60;
    if (*(_DWORD *)(qword_100983E60 + 1164) == 4)
    {
      v13 = *(uint64_t **)(qword_100983E60 + 48);
      if (v13)
      {
        v14 = *v13;
        *(_WORD *)(v7 + 152 * v8 + 176) = *((_WORD *)v13 + 4);
      }
      else
      {
        v14 = 0;
      }
      *(_QWORD *)(v7 + 152 * v8 + 168) = v14;
      v17 = *(_QWORD *)(v12 + 64);
      if (v17)
      {
LABEL_17:
        v18 = v7 + 152 * v8;
        *(_QWORD *)(v18 + 184) = *(_QWORD *)v17;
        *(_WORD *)(v18 + 192) = *(_WORD *)(v17 + 8);
LABEL_21:
        *(_DWORD *)v9 = 3;
        goto LABEL_22;
      }
    }
    else
    {
      v15 = *(uint64_t **)(qword_100983E60 + 56);
      if (v15)
      {
        v16 = *v15;
        *(_WORD *)(v7 + 152 * v8 + 176) = *((_WORD *)v15 + 4);
      }
      else
      {
        v16 = 0;
      }
      *(_QWORD *)(v7 + 152 * v8 + 168) = v16;
      v17 = *(_QWORD *)(v12 + 72);
      if (v17)
        goto LABEL_17;
    }
    *(_QWORD *)(v7 + 152 * v8 + 184) = 0;
    goto LABEL_21;
  }
  if (sub_10005549C())
  {
    sub_100054530("Connection %d not found for %:\n", a1, a2);
    v11 = sub_1000544A0(0x1Bu);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
}

uint64_t sub_10016B1AC(uint64_t a1, unsigned int a2)
{
  __int16 v2;
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t result;
  NSObject *v8;
  size_t __len;
  int v10;
  __int16 v11;
  int v12;
  __int16 v13;

  if (!a1 || (v2 = a2, !a2))
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/pan/pan_gn.c");
  if (a2 <= 5)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/pan/pan_gn.c");
  v12 = *(_DWORD *)a1;
  v13 = *(_WORD *)(a1 + 4);
  if (a2 <= 0xB)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/pan/pan_gn.c");
  v10 = *(_DWORD *)(a1 + 6);
  v11 = *(_WORD *)(a1 + 10);
  if (a2 <= 0xD)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/pan/pan_gn.c");
  v4 = *(unsigned __int16 *)(a1 + 12);
  v5 = sub_10016AE70((uint64_t)&v12);
  v6 = qword_100983E60;
  if ((v5 & 0x80000000) == 0)
    goto LABEL_9;
  if (*(_BYTE *)(qword_100983E60 + 1160))
  {
    v5 = 0;
LABEL_9:
    LOWORD(__len) = v2 - 14;
    result = sub_10016AA60(qword_100983E60 + 152 * v5 + 96, 1, &v12, &v10, bswap32(v4) >> 16, 0, 0, (const void *)(a1 + 14), __len);
    if ((_DWORD)result)
    {
      (*(void (**)(void))(v6 + 152 * v5 + 152))();
      return 0;
    }
    return result;
  }
  if (sub_10005549C())
  {
    sub_100054530("BNEP write completed for non-existent connection handle\n");
    v8 = sub_1000544A0(0x1Bu);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
  return 122;
}

void sub_10016B35C(uint64_t a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  void (*v9)(uint64_t, const void *, uint64_t);
  int v10;
  uint64_t v11;
  void *v12;

  v6 = qword_100983E98;
  v7 = *(void **)(qword_100983E98 + 664);
  if (v7)
  {
    sub_100053298(v7);
    v6 = qword_100983E98;
    *(_QWORD *)(qword_100983E98 + 664) = 0;
  }
  *(_WORD *)(v6 + 672) = a3;
  if ((_DWORD)a3)
  {
    v8 = sub_100052DC0(4 * a3);
    *(_QWORD *)(qword_100983E98 + 664) = v8;
    if (!v8)
    {
      v10 = 2023;
      goto LABEL_10;
    }
    memmove(v8, a2, 4 * a3);
    v6 = qword_100983E98;
  }
  v9 = *(void (**)(uint64_t, const void *, uint64_t))(v6 + 576);
  if (v9)
  {
    v9(a1, a2, a3);
    return;
  }
  v10 = 2021;
LABEL_10:
  sub_100151C48(a1, v10);
  v11 = qword_100983E98;
  v12 = *(void **)(qword_100983E98 + 664);
  if (v12)
  {
    sub_100053298(v12);
    v11 = qword_100983E98;
    *(_QWORD *)(qword_100983E98 + 664) = 0;
  }
  *(_WORD *)(v11 + 672) = 0;
}

void sub_10016B434(uint64_t a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  void (*v9)(uint64_t, const void *, uint64_t);
  int v10;
  uint64_t v11;
  void *v12;

  v6 = qword_100983E98;
  v7 = *(void **)(qword_100983E98 + 680);
  if (v7)
  {
    sub_100053298(v7);
    v6 = qword_100983E98;
    *(_QWORD *)(qword_100983E98 + 680) = 0;
  }
  *(_WORD *)(v6 + 688) = a3;
  if ((_DWORD)a3)
  {
    v8 = sub_100052DC0(12 * a3);
    *(_QWORD *)(qword_100983E98 + 680) = v8;
    if (!v8)
    {
      v10 = 2033;
      goto LABEL_10;
    }
    memmove(v8, a2, 12 * a3);
    v6 = qword_100983E98;
  }
  v9 = *(void (**)(uint64_t, const void *, uint64_t))(v6 + 584);
  if (v9)
  {
    v9(a1, a2, a3);
    return;
  }
  v10 = 2031;
LABEL_10:
  sub_100151CB0(a1, v10);
  v11 = qword_100983E98;
  v12 = *(void **)(qword_100983E98 + 680);
  if (v12)
  {
    sub_100053298(v12);
    v11 = qword_100983E98;
    *(_QWORD *)(qword_100983E98 + 680) = 0;
  }
  *(_WORD *)(v11 + 688) = 0;
}

uint64_t sub_10016B510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  __int128 v20;
  __int128 v21;

  if (sub_100168C4C(2))
    return 119;
  v20 = 0u;
  v21 = 0u;
  if (sub_100168C4C(2))
  {
    v15 = qword_100983E98;
  }
  else
  {
    v17 = sub_100168C7C(2);
    if ((_DWORD)v17)
    {
      v14 = v17;
      if (sub_10005549C())
      {
        sub_100054530("PAN_RegisterRole inside PANU internalInit failed - %!\n", v14);
        v18 = sub_1000544A0(0x1Bu);
        if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      goto LABEL_21;
    }
    qword_100983E98 = (uint64_t)sub_100114588(0x2D0uLL);
    if (!qword_100983E98)
    {
      sub_100168D18(2);
      v14 = 106;
      goto LABEL_21;
    }
    qword_100983EB0 = (uint64_t)sub_100052DC0(0x5EAuLL);
    v15 = qword_100983E98;
    *(_OWORD *)(qword_100983E98 + 600) = *(_OWORD *)&off_10091CF58;
    *(_OWORD *)(v15 + 616) = *(_OWORD *)off_10091CF68;
  }
  *(_QWORD *)(v15 + 568) = a1;
  *(_QWORD *)(v15 + 576) = a2;
  *(_QWORD *)(v15 + 696) = a3;
  *(_QWORD *)(v15 + 584) = a4;
  *(_QWORD *)(v15 + 704) = a5;
  if (a3)
  {
    *(_QWORD *)(v15 + 632) = *(_QWORD *)a3;
    *(_WORD *)(v15 + 640) = *(_WORD *)(a3 + 8);
  }
  if (a5)
  {
    *(_QWORD *)(v15 + 648) = *(_QWORD *)a5;
    *(_WORD *)(v15 + 656) = *(_WORD *)(a5 + 8);
  }
  v14 = sub_100150C38(4111, 4373, (uint64_t)sub_10016B710);
  v16 = qword_100983E98;
  *(_WORD *)(qword_100983E98 + 562) = 0;
  if ((_DWORD)v14)
    goto LABEL_21;
  if (!a6)
    return 0;
  *(_QWORD *)&v20 = &unk_10091CE98;
  WORD4(v20) = 4;
  *(_QWORD *)&v21 = *(_QWORD *)a6;
  WORD4(v21) = *(_WORD *)(a6 + 8);
  byte_100983EA0 = 1;
  word_100983EA2 = 2;
  dword_100983EA8 = a7;
  v14 = sub_1002465CC((uint64_t)&v20, (int *)(v16 + 592));
  if ((_DWORD)v14)
  {
    sub_100151180(4111, 4373);
LABEL_21:
    sub_10016B88C();
  }
  return v14;
}

void sub_10016B710(uint64_t a1, uint64_t a2, int a3, int a4)
{
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  int v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);

  v8 = sub_10016BF64(a2);
  v9 = qword_100983E98;
  if (v8 == -1)
  {
    v10 = *(unsigned __int8 *)(qword_100983E98 + 560);
    if (v10 > 6)
      goto LABEL_10;
    *(_BYTE *)(qword_100983E98 + 560) = v10 + 1;
    v11 = v9 + 80 * v10;
    v12 = *(_DWORD *)a2;
    *(_WORD *)(v11 + 10) = *(_WORD *)(a2 + 4);
    *(_DWORD *)(v11 + 6) = v12;
    *(_DWORD *)(v11 + 12) = 0;
    *(_WORD *)(v11 + 16) = 0;
    *(_WORD *)(v11 + 4) = a1;
    *(_BYTE *)(v11 + 72) = a4 == a3;
  }
  else
  {
    if (!qword_100983E98)
      goto LABEL_10;
    v10 = v8;
  }
  v13 = (_DWORD *)(v9 + 80 * (int)v10);
  if (*v13 == 1)
  {
LABEL_9:
    v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 568);
    v14 = sub_100168BC8(a3);
    v15 = sub_100168BC8(a4);
    v19(a1, a2, v14, v15);
    return;
  }
  if (!*v13)
  {
    *v13 = 1;
    goto LABEL_9;
  }
LABEL_10:
  v16 = sub_10015171C(a1, 0, 0, 0, (__int128 *)&unk_10091CF28);
  if ((_DWORD)v16)
  {
    v17 = v16;
    if (sub_10005549C())
    {
      sub_100054530("Reject incoming connection failed - %!\n", v17);
      v18 = sub_1000544A0(0x1Bu);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
}

void sub_10016B88C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v7;
  uint64_t v8;

  if (!sub_100168C4C(2))
    return;
  v0 = sub_100168D18(2);
  if ((_DWORD)v0)
  {
    v1 = v0;
    if (sub_10005549C())
    {
      sub_100054530("PAN_DeregisterRole failed inside PANU internalTerminate - %!\n", v1);
      v2 = sub_1000544A0(0x1Bu);
      if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return;
  }
  v3 = qword_100983E98;
  v4 = *(_QWORD **)(qword_100983E98 + 696);
  v5 = *(_QWORD *)(qword_100983E98 + 632);
  if (v4)
  {
    if (v5 != *v4 && v5 != 0)
      goto LABEL_11;
  }
  else if (v5)
  {
LABEL_11:
    sub_100053298(*(void **)(qword_100983E98 + 632));
    v3 = qword_100983E98;
    *(_QWORD *)(qword_100983E98 + 632) = 0;
  }
  v7 = *(_QWORD **)(v3 + 704);
  v8 = *(_QWORD *)(v3 + 648);
  if (v7)
  {
    if (v8 == *v7 || v8 == 0)
      goto LABEL_18;
  }
  else if (!v8)
  {
    goto LABEL_18;
  }
  sub_100053298(*(void **)(v3 + 648));
  v3 = qword_100983E98;
  *(_QWORD *)(qword_100983E98 + 648) = 0;
LABEL_18:
  if (*(_QWORD *)(v3 + 664))
  {
    sub_100053298(*(void **)(v3 + 664));
    v3 = qword_100983E98;
    *(_QWORD *)(qword_100983E98 + 664) = 0;
  }
  if (*(_QWORD *)(v3 + 680))
  {
    sub_100053298(*(void **)(v3 + 680));
    v3 = qword_100983E98;
    *(_QWORD *)(qword_100983E98 + 680) = 0;
  }
  sub_100053298((void *)v3);
  qword_100983E98 = 0;
}

uint64_t sub_10016B9B4()
{
  int v0;
  uint64_t result;

  if (!sub_100168C4C(2))
    return 408;
  v0 = *(_DWORD *)(qword_100983E98 + 592);
  if (!v0 || (result = sub_1002467B8(v0), !(_DWORD)result))
  {
    result = sub_100151180(4111, 4373);
    if (!(_DWORD)result)
    {
      sub_10016B88C();
      return 0;
    }
  }
  return result;
}

uint64_t sub_10016BA08(unsigned int a1, uint64_t a2, uint64_t (*a3)(uint64_t (*)(int *a1, unsigned int a2)), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v11;
  _DWORD *v12;
  uint64_t v13;
  _QWORD *v15;
  _BOOL4 v16;
  __int128 *v17;
  uint64_t v18;
  BOOL v19;

  v8 = qword_100983E98;
  if (!*(_BYTE *)(qword_100983E98 + 560))
    return 122;
  v11 = 0;
  while (1)
  {
    v12 = (_DWORD *)(qword_100983E98 + v11);
    if (*(unsigned __int16 *)(qword_100983E98 + v11 + 4) == a1)
      break;
    v11 += 80;
    if (80 * *(unsigned __int8 *)(qword_100983E98 + 560) == v11)
      return 122;
  }
  if (v11 == 0x4FFFFFFFB0)
    return 122;
  if (a8)
  {
    v15 = (_QWORD *)(qword_100983E98 + v11);
    v15[4] = a3;
    v15[5] = a4;
    v15[6] = a5;
    v15[7] = a6;
    v15[8] = a7;
    v16 = a3(sub_10016C304) == 0;
  }
  else
  {
    v16 = 0;
  }
  if (*v12 != 1)
    return 408;
  if (*(_BYTE *)(v8 + v11 + 72))
    v17 = (__int128 *)&unk_10091CEF8;
  else
    v17 = (__int128 *)&unk_10091CF28;
  v18 = sub_10015171C(a1, (uint64_t)sub_10016BB58, qword_100983E98 + 600, v16, v17);
  if ((_DWORD)v18)
    v19 = 0;
  else
    v19 = v16;
  if (v19)
  {
    v13 = 0;
    *(_QWORD *)(v8 + v11 + 24) = a2;
  }
  else
  {
    v13 = v18;
    if (v16 && (_DWORD)v18)
      (*(void (**)(void))(v8 + v11 + 40))();
    *v12 = 0;
    sub_10016BCDC(v8 + v11);
  }
  return v13;
}

void sub_10016BB58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;

  v6 = sub_10016BF64(a2);
  if (v6 == -1 || (v7 = qword_100983E98) == 0)
  {
    if (sub_10005549C())
    {
      sub_100054530("Connection %d not found for %:\n", a1, a2);
      v10 = sub_1000544A0(0x1Bu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
  else
  {
    v8 = v6;
    v9 = qword_100983E98 + 80 * v6;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 24))(a1, a2, a3);
    if ((*(_DWORD *)v9 - 1) >= 2)
      sub_100253460();
    if ((_DWORD)a3)
    {
      *(_DWORD *)v9 = 0;
      (*(void (**)(void))(v7 + 80 * v8 + 40))();
      sub_10016BCDC(v9);
    }
    else
    {
      v11 = v7 + 80 * v8;
      *(_WORD *)(v11 + 4) = a1;
      *(_DWORD *)v9 = 3;
      *(_BYTE *)(v11 + 73) = 1;
      if (!*(_DWORD *)(qword_100983E98 + 712))
      {
        if (*(_BYTE *)(v7 + 80 * v8 + 72))
          sub_10004A9EC((uint64_t)sub_10016C59C, 0, 1200, (int *)(qword_100983E98 + 712));
      }
    }
  }
}

uint64_t sub_10016BCDC(uint64_t result)
{
  uint64_t v1;
  unint64_t v2;
  unsigned int v3;
  _OWORD *v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v1 = qword_100983E98;
  v2 = 0xCCCCCCCCCCCCCCCDLL * ((result - qword_100983E98) >> 4);
  v3 = v2 + 1;
  if ((v2 + 1) <= 6)
  {
    v4 = (_OWORD *)(qword_100983E98 + 80 * (int)v2);
    v5 = (_OWORD *)(qword_100983E98 + 80 * v3);
    do
    {
      *v4 = *v5;
      v6 = v5[1];
      v7 = v5[2];
      v8 = v5[4];
      v4[3] = v5[3];
      v4[4] = v8;
      v4[1] = v6;
      v4[2] = v7;
      v4 += 5;
      v5 += 5;
      ++v3;
    }
    while (v3 < 7);
  }
  --*(_BYTE *)(v1 + 560);
  return result;
}

uint64_t sub_10016BD4C(__int16 a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t (*a5)(uint64_t (*)(int *a1, unsigned int a2)), void (*a6)(void), uint64_t a7, uint64_t a8, uint64_t a9)
{
  signed int v17;
  uint64_t v18;
  void (*v19)(void);
  signed int v20;
  uint64_t v21;
  int v22;
  _DWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v31;
  void (**v32)(void);
  void (*v33)(void);
  uint64_t v34;
  __int16 v35;

  v17 = sub_10016BF64(a2);
  v18 = qword_100983E98;
  if (v17 != -1)
  {
    if (qword_100983E98)
    {
      v35 = a1;
      v19 = a6;
      v20 = v17;
      goto LABEL_6;
    }
    return 104;
  }
  v35 = a1;
  v20 = *(unsigned __int8 *)(qword_100983E98 + 560);
  if (v20 > 6)
    return 104;
  v19 = a6;
  *(_BYTE *)(qword_100983E98 + 560) = v20 + 1;
  v21 = v18 + 80 * v20;
  v22 = *(_DWORD *)a2;
  *(_WORD *)(v21 + 10) = *(_WORD *)(a2 + 4);
  *(_DWORD *)(v21 + 6) = v22;
  *(_DWORD *)(v21 + 12) = 0;
  *(_WORD *)(v21 + 16) = 0;
LABEL_6:
  v23 = (_DWORD *)(v18 + 80 * v20);
  if (*v23)
  {
    sub_10016BCDC((uint64_t)v23);
    return 408;
  }
  else
  {
    v34 = v18 + 80 * v20;
    *(_QWORD *)(v34 + 32) = a5;
    v33 = v19;
    *(_QWORD *)(v34 + 40) = v19;
    *(_QWORD *)(v34 + 48) = a7;
    *(_QWORD *)(v34 + 56) = a8;
    *(_QWORD *)(v34 + 64) = a9;
    v25 = a5(sub_10016C304);
    v26 = a8;
    v24 = v25;
    if (!(_DWORD)v25)
    {
      v32 = (void (**)(void))(v34 + 40);
      v31 = v26;
      if (a3 == 15)
      {
        v27 = &unk_10091CF28;
        v28 = 15;
      }
      else
      {
        v27 = &unk_10091CEF8;
        v28 = a3;
      }
      v24 = sub_100151234(v28, (uint64_t)sub_10016BB58, qword_100983E98 + 600, a2, 4373, v35, (uint64_t)v27);
      if ((_DWORD)v24)
      {
        (*v32)();
        sub_10016BCDC(v34);
      }
      else
      {
        v29 = v18 + 80 * v20;
        *(_QWORD *)(v29 + 24) = a4;
        *(_QWORD *)(v34 + 32) = a5;
        *v32 = v33;
        *(_QWORD *)(v34 + 48) = a7;
        *(_QWORD *)(v34 + 56) = v31;
        *(_QWORD *)(v34 + 64) = a9;
        *(_BYTE *)(v29 + 72) = a3 != 15;
        *(_DWORD *)v34 = 2;
      }
    }
  }
  return v24;
}

uint64_t sub_10016BF64(uint64_t a1)
{
  uint64_t result;
  uint64_t i;

  if (!*(_BYTE *)(qword_100983E98 + 560))
    return 0xFFFFFFFFLL;
  result = 0;
  for (i = qword_100983E98 + 6;
        *(_DWORD *)i != *(_DWORD *)a1 || *(unsigned __int16 *)(i + 4) != *(unsigned __int16 *)(a1 + 4);
        i += 80)
  {
    if (*(unsigned __int8 *)(qword_100983E98 + 560) == ++result)
      return 0xFFFFFFFFLL;
  }
  return result;
}

uint64_t sub_10016BFB4(unsigned int a1, int a2)
{
  uint64_t v3;
  void *v4;

  if (a2)
    goto LABEL_2;
  v3 = sub_100169334(qword_100983E98 + 664, qword_100983E98 + 632, *(_QWORD *)(qword_100983E98 + 696));
  if (!(_DWORD)v3)
  {
    a2 = 0;
LABEL_2:
    v3 = sub_100151C48(a1, a2);
  }
  v4 = *(void **)(qword_100983E98 + 664);
  if (v4)
  {
    sub_100053298(v4);
    *(_QWORD *)(qword_100983E98 + 664) = 0;
  }
  return v3;
}

uint64_t sub_10016C030(unsigned int a1, int a2)
{
  uint64_t v3;
  void *v4;

  if (a2)
    goto LABEL_2;
  v3 = sub_100169410(qword_100983E98 + 680, qword_100983E98 + 648, *(_QWORD *)(qword_100983E98 + 704));
  if (!(_DWORD)v3)
  {
    a2 = 0;
LABEL_2:
    v3 = sub_100151CB0(a1, a2);
  }
  v4 = *(void **)(qword_100983E98 + 680);
  if (v4)
  {
    sub_100053298(v4);
    *(_QWORD *)(qword_100983E98 + 680) = 0;
  }
  return v3;
}

void sub_10016C0AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;

  v2 = qword_100983E98;
  v3 = *(unsigned __int8 *)(qword_100983E98 + 560);
  if (*(_BYTE *)(qword_100983E98 + 560))
  {
    v6 = 0xFFFFFFFFLL;
    while (*(unsigned __int16 *)(v2 + 4) != (_DWORD)a1)
    {
      v2 += 80;
      --v6;
      if (!--v3)
        return;
    }
    if (v6)
    {
      *(_DWORD *)v2 = 0;
      (*(void (**)(void))(v2 + 40))();
      v7 = *(void (**)(uint64_t, uint64_t))(v2 + 64);
      sub_10016BCDC(v2);
      v7(a1, a2);
      v8 = *(unsigned int *)(qword_100983E98 + 712);
      if ((_DWORD)v8)
      {
        if (!*(_BYTE *)(qword_100983E98 + 560))
        {
          sub_100049F6C(v8);
          *(_DWORD *)(qword_100983E98 + 712) = 0;
        }
      }
    }
  }
}

void sub_10016C158(int a1, int *a2, int *a3, unsigned int a4, int a5, int a6, void *__src, size_t __len)
{
  uint64_t v8;
  __int16 v9;
  int v12;
  int v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  char v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;

  v8 = qword_100983EB0;
  if (!qword_100983EB0)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/pan/pan_user.c");
  v9 = __len;
  v12 = *a2;
  *(_WORD *)(qword_100983EB0 + 4) = *((_WORD *)a2 + 2);
  *(_DWORD *)v8 = v12;
  v13 = *a3;
  *(_WORD *)(v8 + 10) = *((_WORD *)a3 + 2);
  *(_DWORD *)(v8 + 6) = v13;
  *(_WORD *)(v8 + 12) = __rev16(a4);
  if (__len >= 0x5DD)
  {
    sub_100253460();
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/pan/pan_user.c");
  }
  memmove((void *)(v8 + 14), __src, __len);
  v15 = *(unsigned __int8 *)(qword_100983E98 + 560);
  if (*(_BYTE *)(qword_100983E98 + 560))
  {
    v16 = qword_100983E98 + 48;
    v17 = 0xFFFFFFFFLL;
    while (*(unsigned __int16 *)(v16 - 44) != a1)
    {
      --v17;
      v16 += 80;
      if (!--v15)
        return;
    }
    if (v17)
    {
      if (*(_DWORD *)(v16 - 36))
        v18 = 0;
      else
        v18 = *(unsigned __int16 *)(v16 - 32) == 0;
      if (v18 || (v19 = *(_BYTE *)a2, (*(_BYTE *)a2 & 1) == 0))
      {
        v20 = *a3;
        *(_WORD *)(v16 - 32) = *((_WORD *)a3 + 2);
        *(_DWORD *)(v16 - 36) = v20;
        v19 = *(_BYTE *)a2;
      }
      if ((v19 & 1) == 0)
        *(_BYTE *)(v16 + 25) = 1;
      v21 = (*(uint64_t (**)(uint64_t, _QWORD))v16)(v8, (unsigned __int16)(v9 + 14));
      if ((_DWORD)v21)
      {
        v22 = v21;
        if (sub_10005549C())
        {
          sub_100054530("Forwarding packet to host failed - %!\n", v22);
          v23 = sub_1000544A0(0x1Bu);
          if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
            sub_1006CE7A4();
        }
      }
    }
  }
}

uint64_t sub_10016C304(int *a1, unsigned int a2)
{
  __int16 v2;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  char *v9;
  BOOL v10;
  uint64_t v11;
  int v13;
  int v14;
  int v16;
  int v18;
  __int16 v19;
  int v20;
  unsigned __int16 v21;

  if (!a1 || (v2 = a2, !a2))
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/pan/pan_user.c");
  if (a2 <= 5)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/pan/pan_user.c");
  v20 = *a1;
  v21 = *((_WORD *)a1 + 2);
  if (a2 <= 0xB)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/pan/pan_user.c");
  v18 = *(int *)((char *)a1 + 6);
  v19 = *((_WORD *)a1 + 5);
  if (a2 <= 0xD)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/pan/pan_user.c");
  v4 = bswap32(*((unsigned __int16 *)a1 + 6)) >> 16;
  if (!sub_100169220((uint64_t)&v20, v4, (unsigned __int16 *)(qword_100983E98 + 632), (uint64_t *)(qword_100983E98 + 648)))return 2041;
  v5 = qword_100983E98;
  if (!*(_BYTE *)(qword_100983E98 + 560))
    return 122;
  v6 = 0;
  v7 = 0;
  v8 = 0;
  v9 = (char *)a1 + 14;
  do
  {
    if (*(_DWORD *)(v5 + v6) == 3)
    {
      if ((v20 & 1) != 0
        || (v20 == *(_DWORD *)(v5 + v6 + 12) ? (v10 = v21 == *(unsigned __int16 *)(v5 + v6 + 16)) : (v10 = 0), v10))
      {
        v11 = v5 + v6;
        if (v18 != *(_DWORD *)(v5 + v6 + 12) || v19 != *(_WORD *)(v5 + v6 + 16))
        {
          v13 = *(_DWORD *)(v11 + 12);
          v14 = *(unsigned __int16 *)(v11 + 16);
          if (v20 == v13 && v21 == v14)
            *(_BYTE *)(v5 + v6 + 73) = 1;
          v16 = sub_100151B00((uint64_t)sub_10016C540, *(unsigned __int16 *)(v5 + v6 + 4), (uint64_t)&v20, (uint64_t)&v18, v4, 0, 0, v9, v2 - 14);
          v5 = qword_100983E98;
          if (!v16)
          {
            ++*(_WORD *)(qword_100983E98 + 562);
            v8 = 1;
          }
        }
      }
    }
    ++v7;
    v6 += 80;
  }
  while (v7 < *(unsigned __int8 *)(v5 + 560));
  if (v8)
    return 0;
  else
    return 122;
}

uint64_t sub_10016C540(uint64_t result)
{
  uint64_t v1;
  __int16 v2;
  uint64_t v3;
  uint64_t (**v4)(void);
  uint64_t v5;

  v1 = qword_100983E98;
  v2 = *(_WORD *)(qword_100983E98 + 562) - 1;
  *(_WORD *)(qword_100983E98 + 562) = v2;
  v3 = *(unsigned __int8 *)(v1 + 560);
  if (*(_BYTE *)(v1 + 560))
  {
    v4 = (uint64_t (**)(void))(v1 + 56);
    v5 = 0xFFFFFFFFLL;
    while (*((unsigned __int16 *)v4 - 26) != (_DWORD)result)
    {
      --v5;
      v4 += 10;
      if (!--v3)
        return result;
    }
    if (v5)
    {
      if (!v2)
        return (*v4)();
    }
  }
  return result;
}

void sub_10016C59C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  char v3;
  int v4;

  v0 = qword_100983E98;
  if (!*(_BYTE *)(qword_100983E98 + 560))
    goto LABEL_12;
  v1 = 0;
  v2 = 0;
  v3 = 0;
  do
  {
    if (*(_BYTE *)(v0 + v1 + 72))
    {
      if (*(_BYTE *)(v0 + v1 + 73))
      {
        v3 = 1;
      }
      else
      {
        v4 = sub_100151A78(*(unsigned __int16 *)(v0 + v1 + 4));
        v0 = qword_100983E98;
        if (!v4)
          *(_DWORD *)(qword_100983E98 + v1) = 4;
      }
      *(_BYTE *)(v0 + v1 + 73) = 0;
    }
    ++v2;
    v1 += 80;
  }
  while (v2 < *(unsigned __int8 *)(v0 + 560));
  if ((v3 & 1) != 0)
    sub_10004A9EC((uint64_t)sub_10016C59C, 0, 1200, (int *)(v0 + 712));
  else
LABEL_12:
    *(_DWORD *)(v0 + 712) = 0;
}

void sub_10016C664(uint64_t a1)
{
  unsigned int v1;
  uint64_t v3;
  unint64_t v4;
  int v5;

  *(_BYTE *)(qword_100983EB8 + 128) = 4;
  v1 = *(unsigned __int8 *)(a1 + 8);
  if (*(_BYTE *)(a1 + 8))
  {
    v3 = 0;
    v4 = 0;
    do
    {
      v5 = *(unsigned __int8 *)(*(_QWORD *)a1 + v3);
      if (v5 == 152)
      {
        *(_BYTE *)(qword_100983EB8 + 128) = 2;
      }
      else if (v5 == 151)
      {
        sub_100253460();
        v1 = *(unsigned __int8 *)(a1 + 8);
      }
      ++v4;
      v3 += 24;
    }
    while (v4 < v1);
  }
}

uint64_t sub_10016C6F0(unsigned int a1, uint64_t a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  unsigned __int8 *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned __int16 *v21;
  uint64_t v22;
  NSObject *v23;
  int v24;
  unsigned int *v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  uint64_t v32;
  _DWORD *v34;
  unsigned __int16 *v35;
  unsigned int v36;
  uint64_t v37;
  int v38;
  uint64_t v40;
  uint64_t v41;
  unsigned int *v42;
  uint64_t v43;
  NSObject *v44;
  uint64_t v45;
  int v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  void *v53;
  uint64_t v55;
  void *v56;
  unsigned int v57;
  unsigned int v58;

  if (a3 != 1752 && a3 != 1701)
  {
    v7 = 0;
    goto LABEL_109;
  }
  v6 = qword_100983EB8;
  if (!*(_BYTE *)(qword_100983EB8 + 201))
  {
    if (*(_DWORD *)qword_100983EB8 >= 2u)
    {
      if (*(_BYTE *)(qword_100983EB8 + 128))
      {
        sub_10016C664(a2);
        v6 = qword_100983EB8;
      }
      if ((*(unsigned int (**)(_QWORD, _QWORD, _QWORD, _QWORD))(*(_QWORD *)(v6 + 16) + 32))(*(_QWORD *)(v6 + 8), *(unsigned __int16 *)(v6 + 24), sub_10016CDFC, *(unsigned __int16 *)(v6 + 26)))
      {
        v7 = sub_10011AD98(a1, 0, 1701);
        if ((_DWORD)v7)
        {
          if (sub_10005549C())
          {
            sub_100054530("Failed to inform client of read failure");
            v8 = sub_1000544A0(0x1Du);
            if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
              goto LABEL_89;
          }
        }
        goto LABEL_109;
      }
      return 0;
    }
    *(_DWORD *)(qword_100983EB8 + 124) = 1;
    *(_BYTE *)(v6 + 120) = 0;
    *(_BYTE *)(v6 + 128) = 0;
    *(_BYTE *)(v6 + 140) = 0;
    *(_BYTE *)(v6 + 148) = 0;
    *(_BYTE *)(v6 + 161) = 0;
    *(_BYTE *)(v6 + 164) = 0;
    *(_BYTE *)(v6 + 168) = 0;
    *(_BYTE *)(v6 + 180) = 0;
    *(_BYTE *)(v6 + 188) = 0;
    *(_BYTE *)(v6 + 196) = 0;
    *(_DWORD *)(v6 + 136) = 0;
    v9 = *(void **)(v6 + 152);
    if (v9)
    {
      sub_100053298(v9);
      v6 = qword_100983EB8;
      *(_QWORD *)(qword_100983EB8 + 152) = 0;
    }
    *(_BYTE *)(v6 + 160) = 0;
    *(_DWORD *)(v6 + 144) = 0;
    *(_WORD *)(v6 + 162) = -1;
    *(_WORD *)(v6 + 166) = 0;
    *(_DWORD *)(v6 + 172) = 0;
    *(_DWORD *)(v6 + 176) = 0;
    *(_DWORD *)(v6 + 184) = 0;
  }
  if (*(_BYTE *)(a2 + 8))
  {
    v10 = 0;
    v11 = 0;
    while (1)
    {
      v12 = *(_QWORD *)a2;
      v13 = *(unsigned __int8 *)(*(_QWORD *)a2 + v10);
      if (v13 <= 0x4B)
      {
        if (v13 == 1)
        {
          v21 = (unsigned __int16 *)(qword_100983EB8 + 112);
          if (!*(_WORD *)(qword_100983EB8 + 112))
          {
            v22 = v12 + v10;
            if (*(_QWORD *)(v22 + 16))
            {
              v20 = sub_10016E490((unsigned __int16 *)(v22 + 8), (_QWORD *)(qword_100983EB8 + 80), v21);
              if ((_DWORD)v20)
                goto LABEL_86;
            }
            else
            {
              *v21 = 0;
            }
          }
        }
        else if (v13 == 66)
        {
          v16 = v12 + v10;
          if (!*(_WORD *)(v12 + v10 + 8) || (v17 = *(unsigned __int8 **)(v16 + 16)) == 0)
          {
LABEL_61:
            v7 = 1735;
            goto LABEL_87;
          }
          if (sub_100258ED8(v17, "x-bt/vcard-listing", 18))
          {
            if (sub_100258ED8(*(unsigned __int8 **)(v16 + 16), "x-bt/vcard", 10))
            {
              if (sub_100258ED8(*(unsigned __int8 **)(v16 + 16), "x-bt/phonebook", 14))
                goto LABEL_61;
              v18 = qword_100983EB8;
              v19 = 2;
            }
            else
            {
              v18 = qword_100983EB8;
              v19 = 1;
            }
            *(_DWORD *)(v18 + 124) = v19;
          }
          else
          {
            *(_DWORD *)(qword_100983EB8 + 124) = 0;
          }
        }
      }
      else if (v13 == 76)
      {
        if (*(_WORD *)(v12 + v10 + 8))
        {
          v20 = sub_10016E578((unsigned __int16 *)(v12 + v10 + 8));
          if ((_DWORD)v20)
          {
LABEL_86:
            v7 = v20;
LABEL_87:
            if (sub_10005549C())
            {
              sub_100054530("Failed to parse OBEX header");
              v44 = sub_1000544A0(0x1Du);
              if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR))
LABEL_89:
                sub_1006D17C4();
            }
LABEL_109:
            v50 = qword_100983EB8;
            if (!*(_BYTE *)(qword_100983EB8 + 201) && *(_DWORD *)qword_100983EB8 >= 2u)
            {
              v51 = *(_QWORD *)(qword_100983EB8 + 8);
              if (v51)
              {
                *(_QWORD *)(qword_100983EB8 + 8) = 0;
                sub_10016D028(v51, *(_WORD *)(v50 + 26), a3);
                v50 = qword_100983EB8;
              }
            }
            v52 = *(void **)(v50 + 80);
            if (v52)
            {
              sub_100053298(v52);
              v50 = qword_100983EB8;
              *(_QWORD *)(qword_100983EB8 + 80) = 0;
            }
            *(_WORD *)(v50 + 112) = 0;
            v53 = *(void **)(v50 + 152);
            if (v53)
            {
              sub_100053298(v53);
              v50 = qword_100983EB8;
              *(_QWORD *)(qword_100983EB8 + 152) = 0;
            }
            *(_BYTE *)(v50 + 201) = 0;
            *(_DWORD *)v50 = 1;
            *(_BYTE *)(v50 + 128) = 0;
            return v7;
          }
        }
      }
      else
      {
        if (v13 != 151)
        {
          if (v13 != 152 || *(_BYTE *)(v12 + v10 + 8) != 1)
            goto LABEL_45;
          v14 = qword_100983EB8;
          v15 = *(_BYTE *)(qword_100983EB8 + 128) | 2;
          goto LABEL_37;
        }
        if (*(_BYTE *)(v12 + v10 + 8) == 1)
        {
          v14 = qword_100983EB8;
          v15 = *(_BYTE *)(qword_100983EB8 + 128) | 1;
LABEL_37:
          *(_BYTE *)(v14 + 128) = v15;
        }
      }
LABEL_45:
      ++v11;
      v10 += 24;
      if (v11 >= *(unsigned __int8 *)(a2 + 8))
      {
        v6 = qword_100983EB8;
        break;
      }
    }
  }
  *(_BYTE *)(v6 + 201) = a3 == 1752;
  if (a3 != 1752)
  {
    if (*(_BYTE *)(v6 + 164) && !*(_WORD *)(v6 + 162))
    {
      v57 = 0;
      *(_DWORD *)v6 = 3;
      v42 = (unsigned int *)(v6 + 68);
      if (*(_DWORD *)(v6 + 124))
        v43 = sub_10016EFA4((int *)&v57, v42);
      else
        v43 = sub_10016EED0((int *)&v57, v42);
      v7 = v43;
      if (!(_DWORD)v43)
      {
        v45 = qword_100983EB8;
        if (*(_DWORD *)(qword_100983EB8 + 68) == 3)
          *(_BYTE *)(qword_100983EB8 + 120) = 1;
        (*(void (**)(_QWORD, _QWORD))(v45 + 48))(*(unsigned __int16 *)(v45 + 26), v57);
        v7 = 0;
      }
      goto LABEL_108;
    }
    v58 = 0;
    v24 = *(_DWORD *)(v6 + 124);
    if (v24 != 1)
    {
      v25 = (unsigned int *)(v6 + 68);
      if (!v24)
      {
        v7 = sub_10016EED0((int *)&v58, v25);
        if (!(_DWORD)v7)
        {
          v26 = qword_100983EB8;
          if (*(_DWORD *)(qword_100983EB8 + 68) == 3)
            *(_BYTE *)(qword_100983EB8 + 120) = 1;
          *(_DWORD *)v26 = 4;
          v27 = (**(uint64_t (***)(_QWORD))(v26 + 16))(v58);
          goto LABEL_81;
        }
LABEL_107:
        *(_DWORD *)qword_100983EB8 = 1;
LABEL_108:
        if ((_DWORD)v7)
          goto LABEL_109;
        v55 = qword_100983EB8;
        v56 = *(void **)(qword_100983EB8 + 80);
        if (v56)
        {
          sub_100053298(v56);
          v55 = qword_100983EB8;
          *(_QWORD *)(qword_100983EB8 + 80) = 0;
        }
        v7 = 0;
        *(_WORD *)(v55 + 112) = 0;
        return v7;
      }
      v7 = sub_10016EFA4((int *)&v58, v25);
      if ((_DWORD)v7)
        goto LABEL_107;
      v41 = qword_100983EB8;
      if (*(_DWORD *)(qword_100983EB8 + 68) == 3)
        *(_BYTE *)(qword_100983EB8 + 120) = 1;
      *(_DWORD *)v41 = 2;
      v27 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v41 + 16) + 8))(v58);
LABEL_81:
      v7 = v27;
      if (!(_DWORD)v27)
        goto LABEL_108;
      goto LABEL_107;
    }
    v28 = sub_100258C7C((unsigned __int16 *)".");
    v29 = sub_10016F074((unsigned __int16 **)(qword_100983EB8 + 80), *(unsigned __int16 *)(qword_100983EB8 + 112), (int *)&v58);
    v30 = qword_100983EB8;
    v31 = *(unsigned __int16 *)(qword_100983EB8 + 112);
    v32 = v58;
    if (v31 != 4 || v58 != 0)
    {
      v7 = v29;
      if ((_DWORD)v29)
        goto LABEL_107;
      v34 = (_DWORD *)(v6 + 68);
      if (*(_BYTE *)(qword_100983EB8 + 73))
      {
        if (v31 != 1)
          goto LABEL_106;
        *v34 = *(_DWORD *)(qword_100983EB8 + 68);
      }
      else
      {
        if (v31 < 2)
          goto LABEL_106;
        v7 = sub_10016F114(*(unsigned __int16 **)(qword_100983EB8 + 8 * (v31 - 2) + 80), v34);
        if ((_DWORD)v7)
          goto LABEL_107;
        v30 = qword_100983EB8;
      }
      v35 = *(unsigned __int16 **)(v30 + 8 * *(unsigned __int16 *)(v30 + 112) + 72);
      v36 = sub_100258C7C(v35);
      v37 = v36 - v28;
      v38 = sub_100258CB0(&v35[v37], (unsigned __int16 *)".");
      if (v36 <= 0xF && v38 == 0)
      {
        if (v36 == v28)
        {
          v40 = 0;
        }
        else
        {
          LODWORD(v40) = 0;
          do
          {
            v47 = *v35++;
            v46 = v47;
            v48 = v47 - 48;
            if ((v47 - 48) >= 0xA)
            {
              if ((v46 - 71) > 0xFFFFFFF9)
              {
                v48 = v46 - 55;
              }
              else
              {
                if ((v46 - 103) < 0xFFFFFFFA)
                  goto LABEL_106;
                v48 = v46 - 87;
              }
            }
            v40 = (v48 + 16 * v40);
            --v37;
          }
          while (v37);
        }
        v49 = qword_100983EB8;
        *(_DWORD *)qword_100983EB8 = 5;
        v27 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, _QWORD, void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), _QWORD))(*(_QWORD *)(v49 + 16) + 16))(v32, *(unsigned int *)(v49 + 68), v40, v49 + 172, *(unsigned int *)(v49 + 184), sub_10016F18C, *(unsigned __int16 *)(v49 + 26));
        goto LABEL_81;
      }
    }
LABEL_106:
    v7 = 1724;
    goto LABEL_107;
  }
  v7 = sub_10011AD98(a1, 0, 1701);
  if ((_DWORD)v7)
  {
    if (sub_10005549C())
    {
      sub_100054530("Failed to send OBEX GET repsonse");
      v23 = sub_1000544A0(0x1Du);
      if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
        goto LABEL_89;
    }
    goto LABEL_109;
  }
  return v7;
}

void sub_10016CDFC(uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4)
{
  uint64_t v4;
  BOOL v5;
  int v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  NSObject *v17;
  _QWORD v18[2];
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v21 = 0;
  v22 = 0;
  v20 = 0;
  v4 = qword_100983EB8;
  v5 = *(_DWORD *)qword_100983EB8 > 5u || ((1 << *(_DWORD *)qword_100983EB8) & 0x34) == 0;
  if (v5 || *(_QWORD *)(qword_100983EB8 + 8) != a1)
    return;
  if (!(_DWORD)a4)
  {
    LOBYTE(v21) = 72;
    v8 = 1701;
    goto LABEL_11;
  }
  if ((_DWORD)a4 == 135)
  {
    v8 = 0;
    LOBYTE(v21) = 73;
    *(_BYTE *)(qword_100983EB8 + 128) = 0;
LABEL_11:
    v23 = a2;
    LOWORD(v22) = a3;
    v19 = &v21;
    LOBYTE(v20) = 1;
    v9 = sub_10011AD98(*(unsigned __int16 *)(v4 + 26), (uint64_t)&v19, v8);
    if ((_DWORD)v9)
    {
      v10 = v9;
      if (sub_10005549C())
      {
        sub_100054530("OI_OBEXSRV_GetResponse failed with error %!", v10);
        v11 = sub_1000544A0(0x1Du);
        if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      v12 = qword_100983EB8;
      v13 = *(_QWORD *)(qword_100983EB8 + 8);
      *(_QWORD *)(qword_100983EB8 + 8) = 0;
      sub_10016D028(v13, *(_WORD *)(v12 + 26), v10);
      v14 = qword_100983EB8;
      *(_DWORD *)qword_100983EB8 = 1;
    }
    else
    {
      v14 = qword_100983EB8;
    }
    if (*(_BYTE *)(v14 + 128) == 4)
    {
      v18[0] = 0;
      v18[1] = 0;
      sub_10016C6F0(*(unsigned __int16 *)(v14 + 26), v18, 1701);
    }
    return;
  }
  if (sub_10005549C())
  {
    sub_100054530("File read error");
    v15 = sub_1000544A0(0x1Du);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      sub_1006D17C4();
  }
  v16 = qword_100983EB8;
  *(_QWORD *)(qword_100983EB8 + 8) = 0;
  sub_10016D028(a1, *(_WORD *)(v16 + 26), a4);
  if (sub_10011AD98(*(unsigned __int16 *)(qword_100983EB8 + 26), 0, a4))
  {
    if (sub_10005549C())
    {
      sub_100054530("Failed to inform client of Read Failure (%!)", a4);
      v17 = sub_1000544A0(0x1Du);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
  }
  *(_DWORD *)qword_100983EB8 = 1;
}

void sub_10016D028(uint64_t a1, unsigned __int16 a2, int a3)
{
  NSObject *v3;
  const void *v4[2];
  uint64_t v5;
  int v6;
  int v7;

  v5 = a1;
  v6 = a3;
  v7 = a2;
  v4[1] = &v5;
  v4[0] = (const void *)16;
  if (sub_10004AE90((uint64_t)sub_10016F4FC, v4, 0) && sub_10005549C())
  {
    sub_100054530("Failed to register deferred close");
    v3 = sub_1000544A0(0x1Du);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
      sub_1006D17C4();
  }
}

uint64_t sub_10016D0C4(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _DWORD *a7, int a8, int a9)
{
  NSObject *v12;
  uint64_t v13;
  _QWORD *v20;
  _BYTE *v21;
  uint64_t v22;
  NSObject *v23;
  int *v24;
  uint64_t v25;
  NSObject *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;

  v31 = unk_10091CFD8;
  if (!a6 || !a3 || !a2 || !a5)
  {
    sub_100253460();
    return 101;
  }
  v29 = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  if (dword_1009991BC)
  {
    if (sub_10005549C())
    {
      sub_100054530("OI_PBAPServer_Register is already registered.");
      v12 = sub_1000544A0(0x1Du);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 119;
  }
  v20 = sub_100114588(0xD0uLL);
  qword_100983EB8 = (uint64_t)v20;
  v20[4] = a2;
  v20[5] = a3;
  v20[6] = a4;
  v20[1] = 0;
  v20[2] = a5;
  v21 = (_BYTE *)sub_100252DE8(0x1Du);
  v22 = qword_100983EB8;
  *(_BYTE *)(qword_100983EB8 + 60) = *v21;
  v13 = sub_1001683B4((uint64_t)&v31, (uint64_t)off_100978C58, a1, (unsigned __int8 *)(v22 + 60), (uint64_t)&unk_100739EE0);
  if ((_DWORD)v13)
    goto LABEL_14;
  v13 = sub_100259A4C((uint64_t)&v31, (uint64_t)off_100978C58, a1, (unsigned __int16 *)(qword_100983EB8 + 62), (uint64_t)&unk_100739EE0, 1);
  if ((_DWORD)v13)
    goto LABEL_14;
  byte_100983EC0 = 1;
  word_100983EC2 = 1;
  dword_100983EC8 = *(unsigned __int8 *)(qword_100983EB8 + 60);
  byte_100983ED0 = 1;
  word_100983ED2 = 1;
  dword_100983ED8 = a8;
  byte_100983EE0 = 1;
  word_100983EE2 = 4;
  dword_100983EE8 = a9;
  byte_100983EF0 = 1;
  word_100983EF2 = 2;
  dword_100983EF8 = *(unsigned __int16 *)(qword_100983EB8 + 62);
  byte_100983F00 = 1;
  word_100983F02 = 1;
  dword_100983F08 = 1;
  *(_QWORD *)&v29 = &unk_10091CFE8;
  WORD4(v29) = 6;
  *(_QWORD *)&v30 = *(_QWORD *)a6;
  WORD4(v30) = *(_WORD *)(a6 + 8);
  *(_QWORD *)&v27 = &unk_10091D078;
  WORD4(v27) = 4;
  *(_QWORD *)&v28 = v30;
  WORD4(v28) = WORD4(v30);
  v25 = sub_1002465CC((uint64_t)&v29, (int *)(qword_100983EB8 + 56));
  if ((_DWORD)v25)
  {
    v13 = v25;
    if (sub_10005549C())
    {
      sub_100054530("OI_SDPDB_AddServiceRecord failed: %!", v13);
      v26 = sub_1000544A0(0x1Du);
      if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
LABEL_14:
    if (sub_10005549C())
    {
      sub_100054530("OI_PBAPServer_Register failed");
      v23 = sub_1000544A0(0x1Du);
      if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
    if (qword_100983EB8)
    {
      sub_10018929C(0x100000);
      v24 = (int *)qword_100983EB8;
      if (*(_BYTE *)(qword_100983EB8 + 60))
      {
        sub_1001687E8(*(unsigned __int8 *)(qword_100983EB8 + 60));
        v24 = (int *)qword_100983EB8;
      }
      if (v24[14])
      {
        sub_1002467B8(v24[14]);
        v24 = (int *)qword_100983EB8;
      }
      sub_100053298(v24);
    }
    return v13;
  }
  sub_1002468CC(*(_DWORD *)(qword_100983EB8 + 56), (uint64_t)&v27);
  sub_1001891E8(0x100000);
  ++dword_1009991BC;
  v13 = 0;
  if (a7)
    *a7 = *(_DWORD *)(qword_100983EB8 + 56);
  return v13;
}

void sub_10016D410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  NSObject *v10;
  NSObject *v11;
  NSObject *v12;
  NSObject *v13;
  int v14;
  __int16 v15;

  if (a5)
  {
    sub_10016E578((unsigned __int16 *)(a5 + 8));
    v9 = qword_100983EB8;
  }
  else
  {
    v9 = qword_100983EB8;
    *(_DWORD *)(qword_100983EB8 + 192) = 0;
  }
  v15 = 0;
  v14 = 0;
  if (*(_DWORD *)v9)
  {
    if (sub_10005549C())
    {
      sub_100054530("PBAP server already in use");
      v10 = sub_1000544A0(0x1Du);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    if (sub_10011B27C(a1, 0, 104) && sub_10005549C())
    {
      sub_100054530("Failed to inform client of connection failure");
      v11 = sub_1000544A0(0x1Du);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
  }
  else
  {
    *(_BYTE *)(v9 + 200) = a2;
    *(_WORD *)(v9 + 26) = a1;
    if (sub_10011BA08(a1, (uint64_t)&v14))
    {
      if (sub_10005549C())
      {
        sub_100054530("Failed to get client address");
        v12 = sub_1000544A0(0x1Du);
        if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
          sub_1006D17C4();
      }
      if (sub_10011B27C(a1, 0, 3005))
      {
        if (sub_10005549C())
        {
          sub_100054530("Failed to inform client of connection failure");
          v13 = sub_1000544A0(0x1Du);
          if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
            sub_1006D17C4();
        }
      }
    }
    else
    {
      (*(void (**)(int *, uint64_t, uint64_t, uint64_t, uint64_t))(qword_100983EB8 + 32))(&v14, a2, a3, a4, a1);
    }
  }
}

void sub_10016D600(uint64_t a1)
{
  int v1;
  uint64_t v2;
  NSObject *v3;

  v1 = a1;
  v2 = qword_100983EB8;
  if (*(unsigned __int16 *)(qword_100983EB8 + 26) == (_DWORD)a1)
  {
    *(_DWORD *)qword_100983EB8 = 0;
    (*(void (**)(uint64_t))(v2 + 40))(a1);
  }
  else if (sub_10005549C())
  {
    sub_100054530("Received disconnect indication from invalid connectionId %d", v1);
    v3 = sub_1000544A0(0x1Du);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
}

uint64_t sub_10016D69C(uint64_t a1, uint64_t a2, unsigned int a3)
{
  unsigned int v3;

  if (a3 == 1701)
    v3 = 1721;
  else
    v3 = a3;
  if (a3)
    return v3;
  else
    return 1721;
}

uint64_t sub_10016D6B4(uint64_t a1, uint64_t a2, int a3, char a4)
{
  uint64_t v4;
  _WORD *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char v9;
  NSObject *v10;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  unsigned __int16 *v17;
  unsigned __int16 *v18;
  _DWORD *v19;
  unsigned __int16 *v20;
  int v21;
  unsigned __int16 v22;
  void *ptr[3];

  if ((a4 & 1) != 0)
  {
    v4 = 1735;
    goto LABEL_18;
  }
  if (!a2 || (v5 = *(_WORD **)(a2 + 8)) == 0 || !*v5)
  {
    v8 = qword_100983EB8;
    if (!a3)
    {
      v4 = 0;
      *(_WORD *)(qword_100983EB8 + 72) = 0;
      *(_DWORD *)(v8 + 64) = 0;
      *(_BYTE *)(v8 + 74) = 0;
      goto LABEL_18;
    }
    if (*(_BYTE *)(qword_100983EB8 + 74))
    {
      v9 = *(_BYTE *)(qword_100983EB8 + 74) - 1;
      *(_BYTE *)(qword_100983EB8 + 74) = v9;
      if (*(_BYTE *)(v8 + 73))
      {
        v4 = 0;
        *(_BYTE *)(v8 + 73) = 0;
      }
      else if (v9)
      {
        v4 = 0;
        if (v9 == 1 && *(_DWORD *)(v8 + 64) == 1)
          *(_BYTE *)(v8 + 72) = 0;
      }
      else
      {
        v4 = 0;
        *(_BYTE *)(v8 + 72) = 0;
        *(_DWORD *)(v8 + 64) = 0;
      }
      goto LABEL_18;
    }
LABEL_17:
    v4 = 1724;
    goto LABEL_18;
  }
  ptr[1] = 0;
  ptr[2] = 0;
  v22 = 3;
  if (!*(_WORD *)a2 || *(_BYTE *)(qword_100983EB8 + 73))
    goto LABEL_17;
  ptr[0] = 0;
  v6 = sub_10016E490((unsigned __int16 *)a2, ptr, &v22);
  if ((_DWORD)v6)
  {
LABEL_9:
    v4 = v6;
    goto LABEL_10;
  }
  v13 = v22;
  if (v22 + *(unsigned __int8 *)(qword_100983EB8 + 74) > 3)
  {
    v7 = ptr[0];
    v4 = 1724;
    if (ptr[0])
      goto LABEL_11;
    goto LABEL_18;
  }
  if (!v22)
  {
LABEL_52:
    v4 = 0;
    goto LABEL_10;
  }
  v14 = 0;
  while (1)
  {
    v15 = qword_100983EB8;
    v16 = *(unsigned __int8 *)(qword_100983EB8 + 74);
    if (v16 == 2)
      break;
    if (v16 == 1)
    {
      v20 = (unsigned __int16 *)ptr[v14];
      if (*(_DWORD *)(qword_100983EB8 + 64) != 1
        || (v21 = sub_100258CB0((unsigned __int16 *)ptr[v14], (unsigned __int16 *)"t"), v15 = qword_100983EB8, v21))
      {
        v19 = (_DWORD *)(v15 + 68);
        v18 = v20;
        goto LABEL_47;
      }
    }
    else
    {
      if (*(_BYTE *)(qword_100983EB8 + 74))
        goto LABEL_53;
      v17 = (unsigned __int16 *)ptr[v14];
      if (!sub_100258CB0(v17, L"SIM1"))
      {
        v15 = qword_100983EB8;
        *(_DWORD *)(qword_100983EB8 + 64) = 1;
        goto LABEL_51;
      }
      if (sub_100258CB0(v17, (unsigned __int16 *)"t"))
        goto LABEL_53;
      v15 = qword_100983EB8;
      *(_DWORD *)(qword_100983EB8 + 64) = 0;
    }
    *(_BYTE *)(v15 + 72) = 1;
LABEL_51:
    ++*(_BYTE *)(v15 + 74);
    if (++v14 >= v13)
      goto LABEL_52;
  }
  if (*(_DWORD *)(qword_100983EB8 + 64))
  {
    v18 = (unsigned __int16 *)ptr[v14];
    v19 = (_DWORD *)(qword_100983EB8 + 68);
LABEL_47:
    v6 = sub_10016F114(v18, v19);
    if ((_DWORD)v6)
      goto LABEL_9;
    v15 = qword_100983EB8;
    *(_BYTE *)(qword_100983EB8 + 73) = 1;
    goto LABEL_51;
  }
LABEL_53:
  v4 = 1724;
LABEL_10:
  v7 = ptr[0];
  if (ptr[0])
LABEL_11:
    sub_100053298(v7);
LABEL_18:
  if (sub_10011B928(*(unsigned __int16 *)(qword_100983EB8 + 26), v4))
  {
    if (sub_10005549C())
    {
      sub_100054530("Failed to confirm (%!) the set path operation with the client", v4);
      v10 = sub_1000544A0(0x1Du);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
  }
  return v4;
}

uint64_t sub_10016D988()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  NSObject *v9;

  if (!dword_1009991BC)
    return 121;
  v0 = sub_1001687E8(*(unsigned __int8 *)(qword_100983EB8 + 60));
  if ((_DWORD)v0)
  {
    v1 = v0;
    if (sub_10005549C())
    {
      sub_100054530("Error deregistering RFCOMM server");
      v2 = sub_1000544A0(0x1Du);
      if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
LABEL_19:
        sub_1006D17C4();
    }
  }
  else
  {
    v4 = sub_100259DC4(*(unsigned __int16 *)(qword_100983EB8 + 62));
    if ((_DWORD)v4)
    {
      v1 = v4;
      if (sub_10005549C())
      {
        sub_100054530("Error deregistering L2CAP server");
        v5 = sub_1000544A0(0x1Du);
        if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
          goto LABEL_19;
      }
    }
    else
    {
      v6 = sub_10018929C(0x100000);
      if ((_DWORD)v6)
      {
        v1 = v6;
        if (sub_10005549C())
        {
          sub_100054530("Error deregistering service class");
          v7 = sub_1000544A0(0x1Du);
          if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
            goto LABEL_19;
        }
      }
      else
      {
        v8 = sub_1002467B8(*(_DWORD *)(qword_100983EB8 + 56));
        if ((_DWORD)v8)
        {
          v1 = v8;
          if (sub_10005549C())
          {
            sub_100054530("Error removing service record");
            v9 = sub_1000544A0(0x1Du);
            if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
              goto LABEL_19;
          }
        }
        else
        {
          if (qword_100983EB8)
            sub_100053298((void *)qword_100983EB8);
          v1 = 0;
          qword_100983EB8 = 0;
          --dword_1009991BC;
        }
      }
    }
  }
  return v1;
}

uint64_t sub_10016DB44(unsigned int a1, char a2, char a3, int a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  NSObject *v10;
  uint64_t v11;
  int v13;

  if (!dword_1009991BC)
    return 103;
  v4 = qword_100983EB8;
  if (*(_DWORD *)qword_100983EB8 || *(unsigned __int16 *)(qword_100983EB8 + 26) != a1)
    return 1745;
  if (*(_BYTE *)(qword_100983EB8 + 200) || (a3 & 1) == 0)
  {
    v7 = sub_10011B27C(a1, 0, a4);
    if ((_DWORD)v7)
    {
      if (sub_10005549C())
      {
        sub_100054530("Failed to inform client of connection rejection");
        v10 = sub_1000544A0(0x1Du);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
          goto LABEL_9;
      }
    }
  }
  else
  {
    *(_BYTE *)(qword_100983EB8 + 74) = 0;
    *(_WORD *)(v4 + 72) = 0;
    *(_DWORD *)(v4 + 64) = 0;
    *(_BYTE *)(v4 + 121) = a2;
    v6 = sub_10011B27C(a1, 1, 0);
    if ((_DWORD)v6)
    {
      v7 = v6;
      if (sub_10005549C())
      {
        sub_100054530("PBAP: Failed to accept connection");
        v8 = sub_1000544A0(0x1Du);
        if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
LABEL_9:
          sub_1006D17C4();
      }
    }
    else
    {
      v11 = qword_100983EB8;
      *(_DWORD *)qword_100983EB8 = 1;
      *(_WORD *)(qword_100983EB8 + 24) = sub_10011B9B0(*(unsigned __int16 *)(v11 + 26));
      v13 = 0;
      sub_10011BA60(a1, &v13);
      if (*(unsigned __int16 *)(qword_100983EB8 + 24) > 0x1000u && v13 == 0)
        *(_WORD *)(qword_100983EB8 + 24) = 4096;
      return 0;
    }
  }
  return v7;
}

uint64_t sub_10016DCD4(unsigned int a1, const void *a2, unsigned int a3, char *a4)
{
  uint64_t result;
  int v7;

  if (!dword_1009991BC)
    return 103;
  if (*(_DWORD *)qword_100983EB8 || !*(_BYTE *)(qword_100983EB8 + 200))
    return 1745;
  result = sub_10011B6DC(*(unsigned __int16 *)(qword_100983EB8 + 26), a2, a3, a4, 1);
  if (!(_DWORD)result)
  {
    *(_WORD *)(qword_100983EB8 + 24) = sub_10011B9B0(*(unsigned __int16 *)(qword_100983EB8 + 26));
    v7 = 0;
    sub_10011BA60(a1, &v7);
    if (*(unsigned __int16 *)(qword_100983EB8 + 24) > 0x1000u && v7 == 0)
      *(_WORD *)(qword_100983EB8 + 24) = 4096;
    return 0;
  }
  return result;
}

uint64_t sub_10016DD88(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  uint64_t v9;
  int v10;
  unsigned int v11;
  _QWORD *v12;
  uint64_t v13;
  const char *v14;
  char v15;
  unsigned int v16;
  NSObject *v17;
  char v19;
  __int16 v20;
  int v21;
  int v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  _OWORD *v26;
  uint64_t v27;
  _QWORD v28[2];
  _QWORD v29[2];
  _QWORD v30[2];
  _OWORD v31[3];

  v30[0] = a3;
  v30[1] = a4;
  v29[0] = a5;
  v29[1] = a6;
  v28[0] = a7;
  v28[1] = a8;
  memset(v31, 0, sizeof(v31));
  v26 = v31;
  v27 = 0;
  v9 = qword_100983EB8;
  if (*(_DWORD *)qword_100983EB8 == 3)
  {
    v10 = a9;
    if (a9)
    {
      *(_DWORD *)qword_100983EB8 = 1;
      v11 = *(unsigned __int16 *)(v9 + 26);
      v12 = 0;
    }
    else
    {
      v15 = *(_BYTE *)(qword_100983EB8 + 128);
      if ((v15 & 1) != 0)
      {
        LOBYTE(v31[0]) = -105;
        v16 = 1;
        BYTE8(v31[0]) = 1;
        LOBYTE(v27) = 1;
        *(_BYTE *)(qword_100983EB8 + 128) = v15 & 0xFA | 4;
      }
      else
      {
        v16 = 0;
      }
      qword_100983F10 = (uint64_t)&word_100983F20;
      word_100983F18 = 61;
      word_100983F1E = 2;
      *(_DWORD *)&word_100983F1A = 262205;
      word_100983F20 = 520;
      byte_100983F22 = HIBYTE(a2);
      byte_100983F23 = a2;
      if (*(_BYTE *)(v9 + 120))
      {
        word_100983F24 = 265;
        v19 = *(_BYTE *)(v9 + 121);
        v20 = 7;
        word_100983F1C = 7;
        byte_100983F26 = v19;
      }
      else
      {
        v20 = 4;
      }
      if ((*(_BYTE *)(v9 + 192) & 8) != 0)
      {
        sub_10016E040(&qword_100983F10, 10, (uint64_t)v30);
        v9 = qword_100983EB8;
        v21 = *(_DWORD *)(qword_100983EB8 + 68);
        if (v21 != 5 && v21)
        {
          v20 += 18;
        }
        else
        {
          sub_10016E040(&qword_100983F10, 11, (uint64_t)v29);
          v20 += 36;
          v9 = qword_100983EB8;
        }
      }
      if ((*(_BYTE *)(v9 + 192) & 4) != 0)
      {
        v22 = *(_DWORD *)(v9 + 68);
        v23 = v28;
        if (v22 && v22 != 5)
          v23 = &unk_100994BD8;
        sub_10016E040(&qword_100983F10, 13, (uint64_t)v23);
        v20 += 18;
      }
      v24 = (char *)v31 + 24 * v16;
      *v24 = 76;
      *((_WORD *)v24 + 4) = v20;
      *((_QWORD *)v24 + 2) = qword_100983F10;
      LOBYTE(v27) = v16 + 1;
      if (word_100983F1E == 2)
        word_100983F1A = word_100983F1C;
      LOBYTE(word_100983F1E) = 15;
      v25 = qword_100983EB8;
      *(_DWORD *)qword_100983EB8 = 1;
      v11 = *(unsigned __int16 *)(v25 + 26);
      v12 = &v26;
      v10 = 0;
    }
    return sub_10011AD98(v11, (uint64_t)v12, v10);
  }
  else
  {
    if (sub_10005549C())
    {
      v13 = *(int *)qword_100983EB8;
      v14 = v13 > 5 ? "<unknown state>" : off_10091D148[v13];
      sub_100054530("Server state is %s, ignoring getsize response", v14);
      v17 = sub_1000544A0(0x1Du);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 3004;
  }
}

uint64_t *sub_10016E040(uint64_t *result, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int16 v8;
  unsigned __int16 v9;
  unsigned __int16 v10;

  if (*((_BYTE *)result + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/pbap/pbap_server.c", 294, "uint16_t AppendApplicationParameter(OI_BYTE_STREAM *, OI_PBAP_APPLICATION_PARAM_TAG_IDS, OI_UINT128 *)");
    goto LABEL_21;
  }
  v3 = *((unsigned __int16 *)result + 6);
  if (*((unsigned __int16 *)result + 5) <= v3 || *((_BYTE *)result + 14) != 2)
LABEL_21:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/pbap/pbap_server.c");
  v4 = *result;
  *((_WORD *)result + 6) = v3 + 1;
  *(_BYTE *)(v4 + v3) = a2;
  if (*((_BYTE *)result + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/pbap/pbap_server.c", 295, "uint16_t AppendApplicationParameter(OI_BYTE_STREAM *, OI_PBAP_APPLICATION_PARAM_TAG_IDS, OI_UINT128 *)");
    goto LABEL_23;
  }
  v5 = *((unsigned __int16 *)result + 6);
  if (*((unsigned __int16 *)result + 5) <= v5 || *((_BYTE *)result + 14) != 2)
LABEL_23:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/pbap/pbap_server.c");
  v6 = *result;
  *((_WORD *)result + 6) = v5 + 1;
  *(_BYTE *)(v6 + v5) = 16;
  if (*((_BYTE *)result + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/pbap/pbap_server.c", 296, "uint16_t AppendApplicationParameter(OI_BYTE_STREAM *, OI_PBAP_APPLICATION_PARAM_TAG_IDS, OI_UINT128 *)");
    goto LABEL_25;
  }
  v7 = *((unsigned __int16 *)result + 6);
  if (*((unsigned __int16 *)result + 5) - (int)v7 <= 3 || *((_BYTE *)result + 14) != 2)
LABEL_25:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/pbap/pbap_server.c");
  *(_BYTE *)(*result + v7 + 3) = *(_DWORD *)a3;
  *(_BYTE *)(*result + *((unsigned __int16 *)result + 6) + 2) = BYTE1(*(_DWORD *)a3);
  *(_BYTE *)(*result + *((unsigned __int16 *)result + 6) + 1) = *(_WORD *)(a3 + 2);
  *(_BYTE *)(*result + *((unsigned __int16 *)result + 6)) = *(_BYTE *)(a3 + 3);
  v8 = *((_WORD *)result + 6) + 4;
  *((_WORD *)result + 6) = v8;
  if (*((_BYTE *)result + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/pbap/pbap_server.c", 297, "uint16_t AppendApplicationParameter(OI_BYTE_STREAM *, OI_PBAP_APPLICATION_PARAM_TAG_IDS, OI_UINT128 *)");
    goto LABEL_27;
  }
  if (*((unsigned __int16 *)result + 5) - v8 <= 3 || *((_BYTE *)result + 14) != 2)
LABEL_27:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/pbap/pbap_server.c");
  *(_BYTE *)(*result + v8 + 3) = *(_DWORD *)(a3 + 4);
  *(_BYTE *)(*result + *((unsigned __int16 *)result + 6) + 2) = BYTE1(*(_DWORD *)(a3 + 4));
  *(_BYTE *)(*result + *((unsigned __int16 *)result + 6) + 1) = *(_WORD *)(a3 + 6);
  *(_BYTE *)(*result + *((unsigned __int16 *)result + 6)) = *(_BYTE *)(a3 + 7);
  v9 = *((_WORD *)result + 6) + 4;
  *((_WORD *)result + 6) = v9;
  if (*((_BYTE *)result + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/pbap/pbap_server.c", 298, "uint16_t AppendApplicationParameter(OI_BYTE_STREAM *, OI_PBAP_APPLICATION_PARAM_TAG_IDS, OI_UINT128 *)");
    goto LABEL_29;
  }
  if (*((unsigned __int16 *)result + 5) - v9 <= 3 || *((_BYTE *)result + 14) != 2)
LABEL_29:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/pbap/pbap_server.c");
  *(_BYTE *)(*result + v9 + 3) = *(_DWORD *)(a3 + 8);
  *(_BYTE *)(*result + *((unsigned __int16 *)result + 6) + 2) = BYTE1(*(_DWORD *)(a3 + 8));
  *(_BYTE *)(*result + *((unsigned __int16 *)result + 6) + 1) = *(_WORD *)(a3 + 10);
  *(_BYTE *)(*result + *((unsigned __int16 *)result + 6)) = *(_BYTE *)(a3 + 11);
  v10 = *((_WORD *)result + 6) + 4;
  *((_WORD *)result + 6) = v10;
  if (*((_BYTE *)result + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/pbap/pbap_server.c", 299, "uint16_t AppendApplicationParameter(OI_BYTE_STREAM *, OI_PBAP_APPLICATION_PARAM_TAG_IDS, OI_UINT128 *)");
    goto LABEL_31;
  }
  if (*((unsigned __int16 *)result + 5) - v10 <= 3 || *((_BYTE *)result + 14) != 2)
LABEL_31:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/pbap/pbap_server.c");
  *(_BYTE *)(*result + v10 + 3) = *(_DWORD *)(a3 + 12);
  *(_BYTE *)(*result + *((unsigned __int16 *)result + 6) + 2) = BYTE1(*(_DWORD *)(a3 + 12));
  *(_BYTE *)(*result + *((unsigned __int16 *)result + 6) + 1) = *(_WORD *)(a3 + 14);
  *(_BYTE *)(*result + *((unsigned __int16 *)result + 6)) = *(_BYTE *)(a3 + 15);
  *((_WORD *)result + 6) += 4;
  return result;
}

uint64_t sub_10016E448(unsigned int a1)
{
  if (!dword_1009991BC)
    return 103;
  if (*(unsigned __int16 *)(qword_100983EB8 + 26) != a1)
    return 101;
  if (*(_DWORD *)qword_100983EB8)
    return sub_10011BAB0(a1);
  return 1709;
}

uint64_t sub_10016E490(unsigned __int16 *a1, _QWORD *a2, unsigned __int16 *a3)
{
  uint64_t v4;
  int v7;
  _WORD *v8;
  _WORD *v9;
  uint64_t result;
  unsigned __int16 v11;
  uint64_t v12;

  v4 = *a1;
  if (*a1 && ((v7 = *a3, (_DWORD)v4 != 1) || **((_WORD **)a1 + 1)))
  {
    v8 = sub_100052DC0(2 * v4 + 2);
    if (v8)
    {
      v9 = v8;
      memmove(v8, *((const void **)a1 + 1), 2 * *a1);
      v9[*a1] = 0;
      if (*v9 == 47)
      {
        return 1724;
      }
      else
      {
        *a2 = v9;
        v11 = 1;
LABEL_10:
        *a3 = v11;
        while (1)
        {
          if (!*v9++)
            return 0;
          if (*(v9 - 1) == 47)
          {
            if (v7 == v11)
              return 1724;
            *(v9 - 1) = 0;
            v12 = *a3;
            a2[v12] = v9;
            v11 = v12 + 1;
            goto LABEL_10;
          }
        }
      }
    }
    else
    {
      return 106;
    }
  }
  else
  {
    result = 0;
    *a3 = 0;
  }
  return result;
}

uint64_t sub_10016E578(unsigned __int16 *a1)
{
  uint64_t v1;
  unsigned int v2;
  signed int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  signed int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  signed int v21;
  int v22;
  int v23;
  unsigned int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  unsigned int v29;
  int v30;
  char *v31;
  _BYTE *v32;
  char v33;
  NSObject *v35;
  NSObject *v36;
  NSObject *v37;
  NSObject *v38;
  NSObject *v39;
  NSObject *v40;
  int v41;
  NSObject *v42;
  NSObject *v43;
  NSObject *v44;
  NSObject *v45;
  int v46;

  v1 = *((_QWORD *)a1 + 1);
  if (!v1 || (v2 = *a1) == 0)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/pbap/pbap_server.c");
  v3 = 0;
  v4 = 0;
  v5 = v2 - 3;
  v6 = v2 - 1;
  while (2)
  {
    if (v2 <= (unsigned __int16)v4)
      return 0;
    v7 = (unsigned __int16)v4;
    v8 = (unsigned __int16)v4 + 1;
    if (v2 <= (unsigned __int16)(v4 + 1))
    {
      v9 = 1;
      v4 = (unsigned __int16)v4 + 1;
    }
    else
    {
      v9 = 0;
      v4 += 2;
      v3 = *(unsigned __int8 *)(v1 + v8);
    }
    switch(*(_BYTE *)(v1 + v7))
    {
      case 1:
        if (v3 != 1)
        {
          if (!sub_10005549C())
            return 1741;
          sub_100054530("PBAP: Order value has wrong length");
          v35 = sub_1000544A0(0x1Du);
          if (!os_log_type_enabled(v35, OS_LOG_TYPE_ERROR))
            return 1741;
          goto LABEL_141;
        }
        v10 = qword_100983EB8;
        if (*(_BYTE *)(qword_100983EB8 + 140))
        {
          if (v2 > (unsigned __int16)v8)
            goto LABEL_38;
          v41 = 695;
          goto LABEL_138;
        }
        if (v2 <= (unsigned __int16)v8)
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/pbap/pbap_server.c", 697, "OI_STATUS ParseAppParams(const OI_OBEX_BYTESEQ *)");
          v10 = qword_100983EB8;
        }
        else if (v2 > (unsigned __int16)v4)
        {
          v24 = *(unsigned __int8 *)(v1 + (unsigned __int16)v4);
          *(_DWORD *)(qword_100983EB8 + 136) = v24;
          if (v24 >= 3)
          {
            if (!sub_10005549C())
              return 1741;
            sub_100054530("PBAP: client sent invalid order value: %d\n", *(_DWORD *)(qword_100983EB8 + 136));
            v45 = sub_1000544A0(0x1Du);
            if (!os_log_type_enabled(v45, OS_LOG_TYPE_ERROR))
              return 1741;
            goto LABEL_141;
          }
          v25 = 0;
          ++v4;
LABEL_85:
          *(_BYTE *)(v10 + 140) = 1;
          if (!v25)
            continue;
          goto LABEL_139;
        }
        v25 = 1;
        *(_DWORD *)(v10 + 136) = 1;
        goto LABEL_85;
      case 2:
        if (!*(_BYTE *)(qword_100983EB8 + 161))
        {
          v46 = v5;
          *(_BYTE *)(qword_100983EB8 + 160) = v3;
          v19 = sub_100052DC0(v3);
          *(_QWORD *)(qword_100983EB8 + 152) = v19;
          if (!v19)
          {
            if (sub_10005549C())
            {
              sub_100054530("Failed to allocate memory for SearchValue");
              v43 = sub_1000544A0(0x1Du);
              if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR))
                sub_1006D2794();
            }
            return 106;
          }
          v20 = v19;
          if (v2 <= (unsigned __int16)v8)
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/pbap/pbap_server.c", 726, "OI_STATUS ParseAppParams(const OI_OBEX_BYTESEQ *)");
            v21 = 0;
          }
          else
          {
            v21 = v2 - (unsigned __int16)v4;
          }
          if (v21 >= v3)
          {
            if (v3)
            {
              v31 = (char *)(v1 + (unsigned __int16)v4);
              v32 = &v20[v3];
              do
              {
                v33 = *v31++;
                *v20++ = v33;
              }
              while (v20 < v32);
            }
            v4 += v3;
          }
          else
          {
            v9 = 1;
          }
          *(_BYTE *)(qword_100983EB8 + 161) = 1;
          v5 = v46;
LABEL_108:
          if (v9)
            goto LABEL_139;
          continue;
        }
        if (v2 <= (unsigned __int16)v8)
        {
          v11 = 716;
          goto LABEL_75;
        }
LABEL_18:
        v13 = v2 - (unsigned __int16)v4;
        goto LABEL_76;
      case 3:
        v12 = qword_100983EB8;
        if (!*(_BYTE *)(qword_100983EB8 + 148))
        {
          if (v2 <= (unsigned __int16)v8)
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/pbap/pbap_server.c", 741, "OI_STATUS ParseAppParams(const OI_OBEX_BYTESEQ *)");
            v23 = 0;
            v12 = qword_100983EB8;
          }
          else
          {
            if (v2 > (unsigned __int16)v4)
            {
              v22 = 0;
              v23 = *(unsigned __int8 *)(v1 + (unsigned __int16)v4++);
              goto LABEL_112;
            }
            v23 = 0;
          }
          v22 = 1;
LABEL_112:
          *(_DWORD *)(v12 + 144) = v23;
          *(_BYTE *)(v12 + 148) = 1;
          if (v22)
            goto LABEL_139;
          continue;
        }
        if (v2 > (unsigned __int16)v8)
          goto LABEL_18;
        v11 = 735;
LABEL_75:
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/pbap/pbap_server.c", v11, "OI_STATUS ParseAppParams(const OI_OBEX_BYTESEQ *)");
        v13 = 0;
LABEL_76:
        if (v13 < v3)
          goto LABEL_139;
        v4 += v3;
        if (v9)
          goto LABEL_139;
        continue;
      case 4:
        if (v3 != 2)
        {
          if (sub_10005549C())
          {
            sub_100054530("PBAP: MaxListCount value has wrong length");
            v36 = sub_1000544A0(0x1Du);
            if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR))
              goto LABEL_141;
          }
          return 1741;
        }
        v14 = qword_100983EB8;
        if (!*(_BYTE *)(qword_100983EB8 + 164))
        {
          if (v2 <= (unsigned __int16)v8)
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/pbap/pbap_server.c", 760, "OI_STATUS ParseAppParams(const OI_OBEX_BYTESEQ *)");
            v14 = qword_100983EB8;
          }
          else if (v6 > (unsigned __int16)v4)
          {
            v26 = 0;
            *(_WORD *)(qword_100983EB8 + 162) = bswap32(*(unsigned __int16 *)(v1 + (unsigned __int16)v4)) >> 16;
            v4 += 2;
            goto LABEL_89;
          }
          v26 = 1;
LABEL_89:
          *(_BYTE *)(v14 + 164) = 1;
          if (v26)
            goto LABEL_139;
          continue;
        }
        if (v2 <= (unsigned __int16)v8)
        {
          v41 = 757;
LABEL_138:
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/pbap/pbap_server.c", v41, "OI_STATUS ParseAppParams(const OI_OBEX_BYTESEQ *)");
LABEL_139:
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/pbap/pbap_server.c", 679, "OI_STATUS ParseAppParams(const OI_OBEX_BYTESEQ *)");
          if (sub_10005549C())
          {
            sub_100054530("PBAP: Application parameters are corrupted");
            v42 = sub_1000544A0(0x1Du);
            if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR))
              goto LABEL_141;
          }
          return 1741;
        }
LABEL_26:
        if ((int)(v2 - 2) < (unsigned __int16)v4)
          goto LABEL_139;
        v4 += 2;
        if (v9)
          goto LABEL_139;
        continue;
      case 5:
        if (v3 != 2)
        {
          if (sub_10005549C())
          {
            sub_100054530("PBAP: ListStartOffset value has wrong length");
            v37 = sub_1000544A0(0x1Du);
            if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR))
              goto LABEL_141;
          }
          return 1741;
        }
        v15 = qword_100983EB8;
        if (!*(_BYTE *)(qword_100983EB8 + 168))
        {
          if (v2 <= (unsigned __int16)v8)
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/pbap/pbap_server.c", 778, "OI_STATUS ParseAppParams(const OI_OBEX_BYTESEQ *)");
            v15 = qword_100983EB8;
          }
          else if (v6 > (unsigned __int16)v4)
          {
            v27 = 0;
            *(_WORD *)(qword_100983EB8 + 166) = bswap32(*(unsigned __int16 *)(v1 + (unsigned __int16)v4)) >> 16;
            v4 += 2;
            goto LABEL_93;
          }
          v27 = 1;
LABEL_93:
          *(_BYTE *)(v15 + 168) = 1;
          if (v27)
            goto LABEL_139;
          continue;
        }
        if (v2 <= (unsigned __int16)v8)
        {
          v41 = 775;
          goto LABEL_138;
        }
        goto LABEL_26;
      case 6:
        if (v3 != 8)
        {
          if (sub_10005549C())
          {
            sub_100054530("PBAP: Filter value has wrong length");
            v38 = sub_1000544A0(0x1Du);
            if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR))
              goto LABEL_141;
          }
          return 1741;
        }
        v16 = qword_100983EB8;
        if (!*(_BYTE *)(qword_100983EB8 + 180))
        {
          if (v2 <= (unsigned __int16)v8)
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/pbap/pbap_server.c", 796, "OI_STATUS ParseAppParams(const OI_OBEX_BYTESEQ *)");
          }
          else if (v5 > (unsigned __int16)v4)
          {
            *(_DWORD *)(qword_100983EB8 + 172) = bswap32(*(_DWORD *)(v1 + (unsigned __int16)v4));
            if (v5 <= (unsigned __int16)(v4 + 4))
            {
              v28 = 1;
              v4 += 4;
            }
            else
            {
              v28 = 0;
              *(_DWORD *)(v16 + 176) = bswap32(*(_DWORD *)(v1 + (unsigned __int16)(v4 + 4)));
              v4 += 8;
            }
LABEL_97:
            *(_BYTE *)(v16 + 180) = 1;
            if (v28)
              goto LABEL_139;
            continue;
          }
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/pbap/pbap_server.c", 798, "OI_STATUS ParseAppParams(const OI_OBEX_BYTESEQ *)");
          v16 = qword_100983EB8;
          v28 = 1;
          goto LABEL_97;
        }
        if (v2 <= (unsigned __int16)v8)
        {
          v41 = 793;
          goto LABEL_138;
        }
        if ((int)(v2 - 8) < (unsigned __int16)v4)
          goto LABEL_139;
        v4 += 8;
        if (v9)
          goto LABEL_139;
        continue;
      case 7:
        if (v3 != 1)
        {
          if (sub_10005549C())
          {
            sub_100054530("PBAP: Format has wrong length");
            v39 = sub_1000544A0(0x1Du);
            if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR))
              goto LABEL_141;
          }
          return 1741;
        }
        v17 = qword_100983EB8;
        if (*(_BYTE *)(qword_100983EB8 + 188))
        {
          if (v2 <= (unsigned __int16)v8)
          {
            v41 = 812;
            goto LABEL_138;
          }
LABEL_38:
          if (v2 <= (unsigned __int16)v4)
            goto LABEL_139;
          ++v4;
          if (v9)
            goto LABEL_139;
          continue;
        }
        if (v2 > (unsigned __int16)v8)
        {
          if (v2 <= (unsigned __int16)v4)
            goto LABEL_148;
          v29 = *(unsigned __int8 *)(v1 + (unsigned __int16)v4);
          *(_DWORD *)(qword_100983EB8 + 184) = v29;
          if (v29 >= 2)
            goto LABEL_149;
          ++v4;
          *(_BYTE *)(v17 + 188) = 1;
          continue;
        }
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/pbap/pbap_server.c", 814, "OI_STATUS ParseAppParams(const OI_OBEX_BYTESEQ *)");
        v17 = qword_100983EB8;
LABEL_148:
        *(_DWORD *)(v17 + 184) = 7;
LABEL_149:
        if (sub_10005549C())
        {
          sub_100054530("PBAP: client sent invalid Format: %d\n", *(_DWORD *)(qword_100983EB8 + 184));
          v44 = sub_1000544A0(0x1Du);
          if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR))
LABEL_141:
            sub_1006D2874();
        }
        return 1741;
      case 0x10:
        if (v3 != 4)
        {
          if (sub_10005549C())
          {
            sub_100054530("PBAP: Supported Features has wrong length");
            v40 = sub_1000544A0(0x1Du);
            if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR))
              goto LABEL_141;
          }
          return 1741;
        }
        v18 = qword_100983EB8;
        if (!*(_BYTE *)(qword_100983EB8 + 196))
        {
          if (v2 <= (unsigned __int16)v8)
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/pbap/pbap_server.c", 840, "OI_STATUS ParseAppParams(const OI_OBEX_BYTESEQ *)");
            v18 = qword_100983EB8;
          }
          else if (v5 > (unsigned __int16)v4)
          {
            v30 = 0;
            *(_DWORD *)(qword_100983EB8 + 192) = bswap32(*(_DWORD *)(v1 + (unsigned __int16)v4));
            v4 += 4;
            goto LABEL_101;
          }
          v30 = 1;
LABEL_101:
          *(_BYTE *)(v18 + 196) = 1;
          if (v30)
            goto LABEL_139;
          continue;
        }
        if (v2 <= (unsigned __int16)v8)
        {
          v41 = 837;
          goto LABEL_138;
        }
        if ((int)(v2 - 4) < (unsigned __int16)v4)
          goto LABEL_139;
        v4 += 4;
        if (v9)
          goto LABEL_139;
        continue;
      default:
        goto LABEL_108;
    }
  }
}

uint64_t sub_10016EED0(int *a1, unsigned int *a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = qword_100983EB8;
  if (*(_BYTE *)(qword_100983EB8 + 73))
  {
    if (*(_WORD *)(qword_100983EB8 + 112))
      return 1724;
    result = 0;
    *a1 = *(_DWORD *)(qword_100983EB8 + 64);
    *a2 = *(_DWORD *)(v4 + 68);
  }
  else
  {
    result = sub_10016F074((unsigned __int16 **)(qword_100983EB8 + 80), *(unsigned __int16 *)(qword_100983EB8 + 112), a1);
    v6 = *(unsigned __int16 *)(qword_100983EB8 + 112);
    if (v6 == 3 && !*a1)
      return 1724;
    if (!(_DWORD)result)
    {
      result = sub_10016F114(*(unsigned __int16 **)(qword_100983EB8 + 8 * v6 + 72), a2);
      if (!(_DWORD)result)
      {
        if (sub_100258C7C(*(unsigned __int16 **)(qword_100983EB8
                                                              + 8 * *(unsigned __int16 *)(qword_100983EB8 + 112)
                                                              + 72)) == (unsigned __int16)word_100739EAE[*a2] - 1)
          return 0;
        else
          return 1724;
      }
    }
  }
  return result;
}

uint64_t sub_10016EFA4(int *a1, _DWORD *a2)
{
  unsigned int v3;
  BOOL v4;
  uint64_t result;
  uint64_t v7;
  int v8;
  int v9;

  v3 = *(unsigned __int16 *)(qword_100983EB8 + 112);
  if (*(_BYTE *)(qword_100983EB8 + 73))
    v4 = v3 >= 2;
  else
    v4 = 1;
  if (!v4)
    return 1724;
  result = sub_10016F074((unsigned __int16 **)(qword_100983EB8 + 80), v3, a1);
  v7 = *(unsigned __int16 *)(qword_100983EB8 + 112);
  if (v7 == 3 && !*a1)
    return 1724;
  if (!(_DWORD)result)
  {
    result = sub_10016F114(*(unsigned __int16 **)(qword_100983EB8 + 8 * v7 + 72), a2);
    if (!(_DWORD)result)
    {
      v8 = sub_100258C7C(*(unsigned __int16 **)(qword_100983EB8 + 8 * *(unsigned __int16 *)(qword_100983EB8 + 112) + 72));
      v9 = (unsigned __int16)word_100739EAE[*a2];
      if (v8 == v9 + sub_100258C7C((unsigned __int16 *)".") - 1)
        return 0;
      else
        return 1724;
    }
  }
  return result;
}

uint64_t sub_10016F074(unsigned __int16 **a1, unsigned int a2, int *a3)
{
  uint64_t v4;
  int v5;
  uint64_t result;

  v4 = qword_100983EB8;
  if (*(_BYTE *)(qword_100983EB8 + 72))
    goto LABEL_2;
  if (a2 >= 2)
  {
    if (!sub_100258CB0(*a1, L"SIM1") && !sub_100258CB0(a1[1], (unsigned __int16 *)"t"))
    {
      v5 = 1;
      goto LABEL_3;
    }
    if (!sub_100258CB0(*a1, (unsigned __int16 *)"t"))
    {
      v4 = qword_100983EB8;
LABEL_2:
      v5 = *(_DWORD *)(v4 + 64);
LABEL_3:
      result = 0;
      *a3 = v5;
      return result;
    }
  }
  return 1724;
}

uint64_t sub_10016F114(unsigned __int16 *a1, _DWORD *a2)
{
  uint64_t v4;
  uint64_t result;

  v4 = 0;
  while (1)
  {
    result = sub_100258D30(a1, (unsigned __int16 *)(&off_100978C28)[v4], (unsigned __int16)(word_100739EAE[v4] - 1));
    if (!(_DWORD)result)
      break;
    if (++v4 == 6)
      return 1724;
  }
  *a2 = v4;
  return result;
}

void sub_10016F18C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  int v9;
  int v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  void *v16;
  char v17;
  unsigned int v18;
  NSObject *v19;
  char v21;
  int v22;
  int v23;
  int v24;
  _QWORD *v25;
  char *v26;
  int v27;
  uint64_t v28;
  _QWORD v29[2];
  _OWORD *v30;
  uint64_t v31;
  _QWORD v32[2];
  _QWORD v33[2];
  _QWORD v34[2];
  _OWORD v35[3];

  v34[0] = a2;
  v34[1] = a3;
  v33[0] = a4;
  v33[1] = a5;
  v32[0] = a6;
  v32[1] = a7;
  memset(v35, 0, sizeof(v35));
  v30 = v35;
  v31 = 0;
  v8 = qword_100983EB8;
  v9 = *(_DWORD *)qword_100983EB8;
  if (*(_DWORD *)qword_100983EB8 > 5u || ((1 << *(_DWORD *)qword_100983EB8) & 0x34) == 0)
    return;
  v12 = a8;
  if ((_DWORD)a8)
    goto LABEL_6;
  if (!a1)
  {
    sub_100253460();
    if (sub_10005549C())
    {
      sub_100054530("Invalid handle");
      v19 = sub_1000544A0(0x1Du);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
        sub_1006D28DC();
    }
    v12 = 101;
LABEL_6:
    v13 = qword_100983EB8;
    *(_DWORD *)qword_100983EB8 = 1;
    if (sub_10011AD98(*(unsigned __int16 *)(v13 + 26), 0, v12))
    {
      if (sub_10005549C())
      {
        sub_100054530("Failed to inform the client of the open failure (%!)", a8);
        v14 = sub_1000544A0(0x1Du);
        if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
          sub_1006D17C4();
      }
    }
    v15 = qword_100983EB8;
    if (*(_BYTE *)(qword_100983EB8 + 161))
    {
      *(_BYTE *)(qword_100983EB8 + 161) = 0;
      v16 = *(void **)(v15 + 152);
      if (v16)
      {
        sub_100053298(v16);
        *(_QWORD *)(qword_100983EB8 + 152) = 0;
      }
    }
    return;
  }
  *(_QWORD *)(qword_100983EB8 + 8) = a1;
  v17 = *(_BYTE *)(v8 + 128);
  if ((v17 & 1) != 0)
  {
    LOBYTE(v35[0]) = -105;
    v18 = 1;
    BYTE8(v35[0]) = 1;
    LOBYTE(v31) = 1;
    *(_BYTE *)(v8 + 128) = v17 & 0xFA | 4;
    v9 = *(_DWORD *)v8;
  }
  else
  {
    v18 = 0;
  }
  qword_100983F60 = (uint64_t)&word_100983F70;
  unk_100983F68 = 0x2000000390039;
  if (v9 == 4 || v9 == 2)
  {
    if (*(_BYTE *)(v8 + 120))
    {
      word_100983F70 = 265;
      v21 = *(_BYTE *)(v8 + 121);
      v22 = 3;
      word_100983F6C = 3;
      byte_100983F72 = v21;
    }
    else
    {
      v22 = 0;
    }
    if ((*(_BYTE *)(v8 + 192) & 8) != 0)
    {
      sub_10016E040(&qword_100983F60, 10, (uint64_t)v34);
      v8 = qword_100983EB8;
      v23 = *(_DWORD *)(qword_100983EB8 + 68);
      if (v23 != 5 && v23)
      {
        v22 += 18;
      }
      else
      {
        sub_10016E040(&qword_100983F60, 11, (uint64_t)v33);
        v22 |= 0x24u;
        v8 = qword_100983EB8;
      }
    }
    if ((*(_BYTE *)(v8 + 192) & 4) == 0)
    {
      if (!v22)
        goto LABEL_44;
      goto LABEL_43;
    }
LABEL_39:
    v24 = *(_DWORD *)(v8 + 68);
    v25 = v32;
    if (v24 && v24 != 5)
      v25 = &unk_100994BD8;
    sub_10016E040(&qword_100983F60, 13, (uint64_t)v25);
    LOWORD(v22) = v22 + 18;
LABEL_43:
    v26 = (char *)v35 + 24 * v18;
    *v26 = 76;
    *((_WORD *)v26 + 4) = v22;
    *((_QWORD *)v26 + 2) = qword_100983F60;
    LOBYTE(v31) = v18 + 1;
    goto LABEL_44;
  }
  if ((*(_BYTE *)(v8 + 192) & 4) != 0)
  {
    LOWORD(v22) = 0;
    goto LABEL_39;
  }
LABEL_44:
  if (byte_100983F6E == 2)
    word_100983F6A = word_100983F6C;
  byte_100983F6E = 15;
  v27 = sub_10011AD98(*(unsigned __int16 *)(qword_100983EB8 + 26), (uint64_t)&v30, 1701);
  v28 = qword_100983EB8;
  if (v27)
  {
    sub_10016D028(*(_QWORD *)(qword_100983EB8 + 8), *(_WORD *)(qword_100983EB8 + 26), v27);
    v28 = qword_100983EB8;
    *(_QWORD *)(qword_100983EB8 + 8) = 0;
    *(_DWORD *)v28 = 1;
  }
  if (*(_BYTE *)(v28 + 128) == 4)
  {
    v29[0] = 0;
    v29[1] = 0;
    sub_10016C6F0(*(unsigned __int16 *)(v28 + 26), v29, 1701);
  }
}

void sub_10016F4FC(uint64_t a1)
{
  void *v1;

  if (qword_100983EB8)
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(qword_100983EB8 + 16) + 24))(**(_QWORD **)(a1 + 8), *(unsigned __int16 *)(*(_QWORD *)(a1 + 8) + 12), *(unsigned int *)(*(_QWORD *)(a1 + 8) + 8));
    if (*(_BYTE *)(qword_100983EB8 + 161))
    {
      v1 = *(void **)(qword_100983EB8 + 152);
      if (v1)
      {
        sub_100053298(v1);
        *(_QWORD *)(qword_100983EB8 + 152) = 0;
      }
    }
  }
}

uint64_t sub_10016F578()
{
  return 102;
}

uint64_t sub_10016F580()
{
  return 102;
}

uint64_t sub_10016F588()
{
  return 102;
}

uint64_t sub_10016F590()
{
  return 102;
}

uint64_t sub_10016F598()
{
  return 102;
}

uint64_t sub_10016F5A0()
{
  return 102;
}

uint64_t sub_10016F5A8()
{
  return 0;
}

uint64_t sub_10016F5B0()
{
  return 102;
}

uint64_t sub_10016F5BC()
{
  return 102;
}

uint64_t sub_10016F5C4()
{
  return 102;
}

uint64_t sub_10016F5CC()
{
  return 102;
}

uint64_t sub_10016F5D4()
{
  return 102;
}

uint64_t sub_10016F5DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = (*((uint64_t (**)(_QWORD))off_100978DB0 + 3))(*((_QWORD *)off_100978DB0 + 2));
  if ((_DWORD)v7)
    sub_100253320((uint64_t)"Failed to initialize driver %s\n", v0, v1, v2, v3, v4, v5, v6, *((_QWORD *)off_100978DB0 + 1));
  return v7;
}

uint64_t sub_10016F630()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = (*((uint64_t (__cdecl **)())off_100978DB0 + 4))();
  if ((_DWORD)v7)
    sub_100253320((uint64_t)"Failed to initialize driver %s\n", v0, v1, v2, v3, v4, v5, v6, *((_QWORD *)off_100978DB0 + 1));
  return v7;
}

uint64_t sub_10016F688()
{
  return (*((uint64_t (__cdecl **)())off_100978DB0 + 6))();
}

uint64_t sub_10016F698()
{
  return (*((uint64_t (__cdecl **)())off_100978DB0 + 7))();
}

uint64_t sub_10016F6A8()
{
  return (*((uint64_t (**)(void))off_100978DB8 + 7))();
}

uint64_t sub_10016F6B8()
{
  return (*((uint64_t (__cdecl **)())off_100978DB8 + 8))();
}

uint64_t sub_10016F6C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = (*((uint64_t (**)(_QWORD))off_100978DB0 + 5))(*((_QWORD *)off_100978DB0 + 2));
  if ((_DWORD)v7)
    sub_100253320((uint64_t)"Failed to initialize driver %s\n", v0, v1, v2, v3, v4, v5, v6, *((_QWORD *)off_100978DB0 + 1));
  return v7;
}

uint64_t sub_10016F720()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t vars0;

  result = sub_1001E4180((uint64_t *)&off_100978DB0, &off_100978DB8);
  if ((_DWORD)result)
  {
    sub_100253320((uint64_t)"FATAL ERROR - no hci driver was found\n", v1, v2, v3, v4, v5, v6, v7, vars0);
    return 102;
  }
  return result;
}

uint64_t sub_10016F75C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (sub_1001E4180((uint64_t *)&off_100978DB0, &off_100978DB8))
  {
    sub_100253320((uint64_t)"FATAL ERROR - no hci driver was found\n", v0, v1, v2, v3, v4, v5, v6, v18);
    return 102;
  }
  else
  {
    v9 = off_100978DB8;
    if (!*off_100978DB8)
    {
      sub_10016F5DC();
      v9 = off_100978DB8;
    }
    v10 = (*((uint64_t (__cdecl **)())v9 + 2))();
    v7 = v10;
    if ((_DWORD)v10 && (_DWORD)v10 != 109)
      sub_100253320((uint64_t)"Failed to initialize transport %s\n", v11, v12, v13, v14, v15, v16, v17, *((_QWORD *)off_100978DB8 + 1));
  }
  return v7;
}

uint64_t sub_10016F7F8()
{
  return (*((uint64_t (__cdecl **)())off_100978DB8 + 3))();
}

uint64_t sub_10016F808()
{
  return (*((uint64_t (__cdecl **)())off_100978DB8 + 4))();
}

uint64_t sub_10016F818()
{
  uint64_t result;

  if (*off_100978DB8)
    return (*((uint64_t (**)(void))off_100978DB8 + 12))();
  return result;
}

uint64_t sub_10016F834()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  void (*v9)(void);
  uint64_t v10;

  if (sub_1001E4180((uint64_t *)&off_100978DB0, &off_100978DB8))
  {
    v7 = "FATAL ERROR - no hci driver was found\n";
LABEL_3:
    sub_100253320((uint64_t)v7, v0, v1, v2, v3, v4, v5, v6, v10);
    return 102;
  }
  v9 = (void (*)(void))*((_QWORD *)off_100978DB8 + 13);
  if (!v9)
  {
    v7 = "FATAL ERROR - can't find sniffLogONly function\n";
    goto LABEL_3;
  }
  v9();
  return (*((uint64_t (__cdecl **)())off_100978DB8 + 2))();
}

uint64_t (*sub_10016F8AC())(void)
{
  uint64_t (*result)(void);

  result = (uint64_t (*)(void))*((_QWORD *)off_100978DB8 + 14);
  if (result)
    return (uint64_t (*)(void))result();
  return result;
}

uint64_t sub_10016F8C4()
{
  uint64_t (*v0)(void);

  v0 = (uint64_t (*)(void))*((_QWORD *)off_100978DB8 + 18);
  if (v0)
    return v0();
  else
    return 0;
}

uint64_t sub_10016F8E0()
{
  return (*((uint64_t (__cdecl **)())off_100978DB8 + 5))();
}

uint64_t sub_10016F8F0()
{
  return (*((uint64_t (__cdecl **)())off_100978DB8 + 9))();
}

uint64_t (__cdecl *sub_10016F900())()
{
  uint64_t (__cdecl *result)();

  result = (uint64_t (__cdecl *)())*((_QWORD *)off_100978DB8 + 10);
  if (result)
    return (uint64_t (__cdecl *)())result();
  return result;
}

uint64_t (*sub_10016F918())(void)
{
  uint64_t (*result)(void);

  result = (uint64_t (*)(void))*((_QWORD *)off_100978DB8 + 15);
  if (result)
    return (uint64_t (*)(void))result();
  return result;
}

uint64_t sub_10016F930()
{
  uint64_t (*v0)(void);

  v0 = (uint64_t (*)(void))*((_QWORD *)off_100978DB8 + 16);
  if (v0)
    return v0();
  else
    return 0;
}

uint64_t (*sub_10016F94C())(void)
{
  uint64_t (*result)(void);

  result = (uint64_t (*)(void))*((_QWORD *)off_100978DB8 + 17);
  if (result)
    return (uint64_t (*)(void))result();
  return result;
}

void **sub_10016F964(void **result, uint64_t a2)
{
  off_100983FB0 = *result;
  qword_100983FB8 = a2;
  return result;
}

uint64_t sub_10016F97C(void *a1)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  __int16 v13;

  if (a1)
  {
    if (off_100983FB0)
      return off_100983FB0(a1, qword_100983FB8);
    v13 = 0;
    v12 = 0;
    v4 = sub_100187E98((uint64_t)&v12);
    if ((_DWORD)v4)
    {
      v3 = v4;
      sub_100253320((uint64_t)"OI_DEVMGR_GetCachedLocalBdAddr failed %!\n", v5, v6, v7, v8, v9, v10, v11, v4);
    }
    else
    {
      sub_100253320((uint64_t)"Local device address is: %:\n", v5, v6, v7, v8, v9, v10, v11, (uint64_t)&v12);
      off_100983FC0 = a1;
      return sub_100252B54(off_10091D178);
    }
  }
  else
  {
    sub_100253460();
    return 101;
  }
  return v3;
}

uint64_t sub_10016FA40(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);

  v2 = (uint64_t (*)(uint64_t))off_100983FC0;
  if (!off_100983FC0)
  {
    sub_100253460();
    v2 = (uint64_t (*)(uint64_t))off_100983FC0;
  }
  return v2(a1);
}

void sub_10016FA74()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;

  if (byte_100978DE3 >= 2u && sub_100187EB8() <= 3)
    byte_100978DE3 = 1;
  v0 = sub_100187EC8((void (*)(int))sub_10016FCFC, (uint64_t)&unk_100978DD0);
  if ((_DWORD)v0)
  {
    v1 = v0;
    if (sub_10005549C())
    {
      sub_100054530("OI_DEVMGR_WriteStaticSettings");
      v2 = sub_1000544A0(0x4Eu);
      if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
    sub_100252D38((void (**)(uint64_t))off_10091D178, v1);
  }
}

void sub_10016FB20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;

  v8 = sub_1001928DC((uint64_t (*)())sub_10016FDB0, a2, a3, a4, a5, a6, a7, a8, v11);
  if ((_DWORD)v8)
  {
    v9 = v8;
    if (sub_10005549C())
    {
      sub_100054530("OI_HCI_ReadLocalName");
      v10 = sub_1000544A0(0x4Eu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
    sub_100252D38((void (**)(uint64_t))off_10091D178, v9);
  }
}

void sub_10016FBA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;

  if (sub_100187EB8() < 4)
  {
    sub_100252CD4((uint64_t)off_10091D178);
  }
  else
  {
    v5 = sub_100192AFC((uint64_t (*)())sub_10016FFF4, 1u, (uint64_t)&unk_100739F80, v0, v1, v2, v3, v4);
    if ((_DWORD)v5)
    {
      v6 = v5;
      if (sub_10005549C())
      {
        sub_100054530("OI_HCI_WriteEIR");
        v7 = sub_1000544A0(0x4Eu);
        if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
          sub_1006D17C4();
      }
      sub_100252D38((void (**)(uint64_t))off_10091D178, v6);
    }
  }
}

void sub_10016FC4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v0 = sub_100049F50();
  if ((_DWORD)v0)
  {
    v8 = v0;
    sub_100253320((uint64_t)"OI_LinkKeyStorage_Init failed %!\n", v1, v2, v3, v4, v5, v6, v7, v0);
LABEL_7:
    sub_100252D38((void (**)(uint64_t))off_10091D178, v8);
    return;
  }
  v9 = sub_10024BB34(&off_10091D1A8);
  if ((_DWORD)v9)
  {
    v8 = v9;
    sub_100253320((uint64_t)"OI_SECMGR_RegisterESE failed %!\n", v10, v11, v12, v13, v14, v15, v16, v9);
    goto LABEL_7;
  }
  v17 = sub_10024BD84(&off_10091D220);
  if ((_DWORD)v17)
  {
    v8 = v17;
    sub_100253320((uint64_t)"OI_SECMGR_RegisterSecurityDB failed %!\n", v18, v19, v20, v21, v22, v23, v24, v17);
    goto LABEL_7;
  }
  sub_10024B64C(1);
  sub_100252CD4((uint64_t)off_10091D178);
}

void sub_10016FCFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  NSObject *v9;

  if ((a1 - 701) <= 0x44)
  {
    sub_100253320((uint64_t)"writeStaticSettingsCb: ignoring HCI error %!\n", a2, a3, a4, a5, a6, a7, a8, a1);
LABEL_8:
    sub_100252CD4((uint64_t)off_10091D178);
    return;
  }
  if (!(_DWORD)a1)
    goto LABEL_8;
  if (sub_10005549C())
  {
    sub_100054530("writeStaticSettingsCb");
    v9 = sub_1000544A0(0x4Eu);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      sub_1006D17C4();
  }
  sub_100252D38((void (**)(uint64_t))off_10091D178, a1);
}

void sub_10016FDB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  NSObject *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  uint64_t v33;
  int v34;
  __int16 v35;

  if ((_DWORD)a1)
  {
    v8 = a1;
    if (sub_10005549C())
    {
      sub_100054530("readNameCb");
      v9 = sub_1000544A0(0x4Eu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
LABEL_5:
    sub_100252D38((void (**)(uint64_t))off_10091D178, v8);
    return;
  }
  if (*(_BYTE *)a2)
  {
    sub_100253320((uint64_t)"Local device name is: %s\n", a2, a3, a4, a5, a6, a7, a8, a2);
    v11 = *(_QWORD *)a2;
    byte_100983FD0 = *(_BYTE *)(a2 + 8);
    qword_100983FC8 = v11;
    byte_100983FD1 = 0;
    sub_100252CD4((uint64_t)off_10091D178);
    return;
  }
  sub_100253320((uint64_t)"Device has no name\n", a2, a3, a4, a5, a6, a7, a8, v33);
  v35 = 0;
  v34 = 0;
  if (sub_100187E98((uint64_t)&v34))
  {
    if (sub_10005549C())
    {
      sub_100054530("OI_DEVMGR_GetCachedLocalBdAddr");
      v17 = sub_1000544A0(0x4Eu);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
  }
  sub_1002532F8((uint64_t)&qword_100983FC8, 10, (uint64_t)"APPLE %2x", v12, v13, v14, v15, v16, HIBYTE(v35));
  sub_100253320((uint64_t)"Writing device name as %s\n", v18, v19, v20, v21, v22, v23, v24, (uint64_t)&qword_100983FC8);
  v31 = sub_1001928B0((uint64_t (*)())sub_10016FF74, (uint64_t)&qword_100983FC8, v25, v26, v27, v28, v29, v30);
  if ((_DWORD)v31)
  {
    v8 = v31;
    if (sub_10005549C())
    {
      sub_100054530("OI_HCI_ChangeLocalName");
      v32 = sub_1000544A0(0x4Eu);
      if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
    goto LABEL_5;
  }
}

void sub_10016FF74(uint64_t a1)
{
  NSObject *v2;

  if ((_DWORD)a1)
  {
    if (sub_10005549C())
    {
      sub_100054530("writeNameCb");
      v2 = sub_1000544A0(0x4Eu);
      if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
    sub_100252D38((void (**)(uint64_t))off_10091D178, a1);
  }
  else
  {
    sub_100252CD4((uint64_t)off_10091D178);
  }
}

void sub_10016FFF4(uint64_t a1)
{
  NSObject *v2;

  if ((_DWORD)a1)
  {
    if (sub_10005549C())
    {
      sub_100054530("writeEirCb");
      v2 = sub_1000544A0(0x4Eu);
      if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
    sub_100252D38((void (**)(uint64_t))off_10091D178, a1);
  }
  else
  {
    sub_100252CD4((uint64_t)off_10091D178);
  }
}

void sub_100170080(uint64_t a1)
{
  sub_10024DD60(0, a1, 0, 0);
}

void sub_100170094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100253320((uint64_t)"pinCodeHandler, providing pin code %s for %:\n", a2, a3, a4, a5, a6, a7, a8, (uint64_t)off_100978DC8);
  strlen(off_100978DC8);
  sub_10024E48C(1, a1, (uint64_t)off_100978DC8);
}

void sub_1001700EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;

  sub_100253320((uint64_t)"NEW SECURITY MODEL : securityManagerUserConfirmRequest\n", a2, a3, a4, a5, a6, a7, a8, v9);
  sub_10024CDB0(1, a1);
}

void sub_10017011C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;

  sub_100253320((uint64_t)"NEW SECURITY MODEL : securityManagerPassKeyRequest\n", a2, a3, a4, a5, a6, a7, a8, v9);
  sub_10024D100(1, a1, 0);
}

void sub_100170150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100253320((uint64_t)"NEW SECURITY MODEL : securityManagerKeyPressNotification\n", a2, a3, a4, a5, a6, a7, a8, a9);
}

void sub_10017015C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100253320((uint64_t)"NEW SECURITY MODEL : securityManagerPassKeyNotification\n", a2, a3, a4, a5, a6, a7, a8, a9);
}

void sub_100170168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;

  sub_100253320((uint64_t)"NEW SECURITY MODEL : securityManagerOOBRequest\n", a2, a3, a4, a5, a6, a7, a8, v9);
  sub_10024D758(0, a1, 0, 0, 0, 0);
}

void sub_1001701A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100253320((uint64_t)"NEW SECURITY MODEL : securityManagerDisconnectEvent\n", a2, a3, a4, a5, a6, a7, a8, a9);
}

void sub_1001701B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100253320((uint64_t)"NEW SECURITY MODEL : securityManagerEncryptRefresh\n", a2, a3, a4, a5, a6, a7, a8, a9);
}

void sub_1001701C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100253320((uint64_t)"NEW SECURITY MODEL : securityManagerEncryptChange\n", a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_1001701CC()
{
  return 2;
}

uint64_t sub_1001701D4(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a1;
  v3[1] = a2;
  return 2 * (sub_10017C9A0((uint64_t)v3) - 4096 > 2);
}

unint64_t sub_100170208()
{
  char *v0;
  unint64_t result;
  const __CFDictionary *v2;
  io_service_t MatchingService;
  io_object_t v4;
  const __CFData *v5;
  const __CFData *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  UInt8 buffer[4];
  CFRange v15;

  *(_DWORD *)buffer = 0;
  v0 = getenv("BT_BAUDRATE");
  if (v0)
    return strtoul(v0, 0, 0);
  v2 = IOServiceNameMatching("bluetooth");
  if (!v2)
    return 0;
  MatchingService = IOServiceGetMatchingService(kIOMainPortDefault, v2);
  if (!MatchingService)
    return 0;
  v4 = MatchingService;
  v5 = (const __CFData *)IORegistryEntrySearchCFProperty(MatchingService, "IODeviceTree", CFSTR("transport-speed"), kCFAllocatorDefault, 1u);
  if (v5)
  {
    v6 = v5;
    v15.location = 0;
    v15.length = 4;
    CFDataGetBytes(v5, v15, buffer);
    CFRelease(v6);
    sub_100253320((uint64_t)"DeviceTree speed = %d\n", v7, v8, v9, v10, v11, v12, v13, *(unsigned int *)buffer);
  }
  IOObjectRelease(v4);
  result = *(unsigned int *)buffer;
  if (*(_DWORD *)buffer >> 9 <= 0xE0u)
    return 0;
  return result;
}

uint64_t sub_1001702EC()
{
  if (qword_100983FD8 != -1)
    dispatch_once(&qword_100983FD8, &stru_10091D250);
  return dword_100978DE8;
}

void sub_10017032C(id a1)
{
  char *v1;
  char *v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  size_t v13;
  char __str[1024];

  if (sub_100170488("marconi-bt"))
    sub_100170488("bluetooth");
  bzero(__str, 0x400uLL);
  v13 = 1024;
  if (!sysctlbyname("kern.bootargs", __str, &v13, 0, 0))
  {
    v1 = strtok(__str, " ");
    if (v1)
    {
      v2 = v1;
      do
      {
        if (strstr(v2, "bt-transport-override"))
        {
          v3 = strchr(v2, 61);
          v4 = strtol(v3 + 1, 0, 10);
          v12 = v4;
          if (v4 < 0xB)
          {
            sub_100253320((uint64_t)"transport override from boot-arg: %llu", v5, v6, v7, v8, v9, v10, v11, v4);
            dword_100978DE8 = v12;
          }
          else
          {
            sub_100253320((uint64_t)"transport override from boot-arg is invalid: %llu", v5, v6, v7, v8, v9, v10, v11, v4);
          }
        }
        v2 = strtok(0, " ");
      }
      while (v2);
    }
  }
}

uint64_t sub_100170488(const char *a1)
{
  const __CFDictionary *v1;
  io_service_t MatchingService;
  io_object_t v3;
  const __CFData *v4;
  const __CFData *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  CFRange v14;

  v1 = IOServiceNameMatching(a1);
  if (v1)
  {
    MatchingService = IOServiceGetMatchingService(kIOMainPortDefault, v1);
    if (MatchingService)
    {
      v3 = MatchingService;
      v4 = (const __CFData *)IORegistryEntrySearchCFProperty(MatchingService, "IODeviceTree", CFSTR("transport-encoding"), kCFAllocatorDefault, 1u);
      if (v4)
      {
        v5 = v4;
        v14.location = 0;
        v14.length = 4;
        CFDataGetBytes(v4, v14, (UInt8 *)&dword_100978DE8);
        CFRelease(v5);
        IOObjectRelease(v3);
        sub_100253320((uint64_t)"DeviceTree transport = 0x%08x\n", v6, v7, v8, v9, v10, v11, v12, dword_100978DE8);
        return 0;
      }
      IOObjectRelease(v3);
    }
  }
  return 1;
}

void sub_100170550(int a1, int a2)
{
  unint64_t v2;
  unint64_t v5;
  uint64_t *v6;
  NSObject *v7;
  unsigned int v8;
  NSObject *v9;
  void *v10;
  uint8_t buf[4];
  void *v12;

  v2 = dword_100994BF4;
  if (dword_100994BF4)
  {
    v5 = 0;
    v6 = qword_100994C30;
    do
    {
      if (*v6 && *(unsigned __int16 *)*v6 == a1)
      {
        if (a2)
        {
          if (sub_10005549C())
          {
            sub_100054530("Transport switch error %d with lm %x, contiguous %d, leRSSI %d, connTO %d:%d", a2, *(unsigned __int16 *)*v6, *((unsigned __int16 *)v6 + 224), *((_DWORD *)v6 + 47), *((_DWORD *)v6 + 40), *((__int16 *)v6 + 82));
            v7 = sub_1000544A0(0x56u);
            if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
              sub_1006D294C();
          }
          v8 = (unsigned __int16)++*((_WORD *)v6 + 224);
          if (v8 > 8)
          {
            if (off_100994C20)
              off_100994C20(*v6, 81, 297, 165);
            sub_1001131F8(5015, "TS Switch HW Error");
          }
        }
        else
        {
          if (*((_WORD *)v6 + 224))
          {
            if (sub_10005549C())
            {
              sub_100054530("Successful TS, clearing contiguous TS failures");
              v9 = sub_1000544A0(0x56u);
              if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
              {
                v10 = sub_100054494();
                *(_DWORD *)buf = 136446210;
                v12 = v10;
                _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
              }
            }
          }
          *((_WORD *)v6 + 224) = 0;
        }
        v2 = dword_100994BF4;
      }
      ++v5;
      v6 += 134;
    }
    while (v5 < v2);
  }
}

uint64_t sub_100170758(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  NSObject *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  unsigned int v16;
  _BYTE *v17;
  int v18;
  int v19;
  int v20;
  int v21;
  NSObject *v22;
  uint64_t v23;
  int v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int16 v33;
  uint64_t v34;
  __int128 v35[2];
  uint64_t v36;

  v35[0] = *(_OWORD *)off_10091D2A0;
  v35[1] = *(_OWORD *)off_10091D2B0;
  v36 = 0;
  sub_1001F501C((uint64_t)sub_100170550);
  v4 = sub_1000F2578("com.apple.BT.TS", 0xFuLL, 2, 10, 1, 0, 1, 1, v35);
  if ((_DWORD)v4)
  {
    v5 = v4;
    if (!sub_10005549C())
      goto LABEL_9;
    sub_100054530("Failed to register TS service.");
    v6 = sub_1000544A0(0x56u);
    if (!os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      goto LABEL_9;
    goto LABEL_8;
  }
  sub_10022D270((__n128 *)off_10091D2C8);
  if ((_DWORD)v7)
  {
    v5 = v7;
    if (!sub_10005549C())
      goto LABEL_9;
    sub_100054530("Failed to register TS security.");
    v8 = sub_1000544A0(0x56u);
    if (!os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      goto LABEL_9;
LABEL_8:
    sub_1006CE7A4();
LABEL_9:
    bzero(qword_100994C30, 0x4300uLL);
    dword_100994BF4 = 0;
    v10 = *(_OWORD *)(a2 + 16);
    v9 = *(_OWORD *)(a2 + 32);
    v11 = *(_OWORD *)a2;
    off_100994C28 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD))(a2 + 48);
    *(_OWORD *)&xmmword_100994C08 = v10;
    *(_OWORD *)&off_100994C18 = v9;
    xmmword_100994BF8 = v11;
    return v5;
  }
  bzero(qword_100994C30, 0x4300uLL);
  dword_100994BF4 = 0;
  v14 = *(_OWORD *)(a2 + 16);
  v13 = *(_OWORD *)(a2 + 32);
  v15 = *(_OWORD *)a2;
  off_100994C28 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD))(a2 + 48);
  *(_OWORD *)&xmmword_100994C08 = v14;
  *(_OWORD *)&off_100994C18 = v13;
  xmmword_100994BF8 = v15;
  v34 = 0;
  if ((a1 & 1) != 0)
    v16 = 2;
  else
    v16 = 1;
  v33 = 0;
  if ((a1 & 2) != 0 && !sub_100259784(&v34, &v33) && v34 && v33)
  {
    v17 = sub_100052DC0(((unint64_t)v33 << 6) + 128);
    qword_100994BE8 = (uint64_t)v17;
    byte_100994BF0 = v16 + v33;
    if (v33)
    {
      v25 = 0;
      v26 = (unint64_t)v16 << 6;
      v27 = 40;
      do
      {
        v28 = v34;
        if (!*(_QWORD *)(v34 + v27 + 8))
        {
          sub_100253460();
          v28 = v34;
        }
        if (!*(_QWORD *)(v28 + v27 + 24))
        {
          sub_100253460();
          v28 = v34;
        }
        if (!*(_QWORD *)(v28 + v27 + 32))
        {
          sub_100253460();
          v28 = v34;
        }
        v29 = qword_100994BE8 + v26;
        *(_BYTE *)v29 = v16 + v33;
        v30 = (_QWORD *)(v28 + v27);
        *(_WORD *)(v29 + 1) = *((_WORD *)v30 - 18);
        *(_DWORD *)(v29 + 4) = *((_DWORD *)v30 - 8);
        v31 = *(_QWORD *)((char *)v30 - 28);
        *(_WORD *)(v29 + 10) = WORD2(v31);
        *(_WORD *)(v29 + 8) = v31;
        *(_DWORD *)(v29 + 16) = *((_DWORD *)v30 - 5);
        *(_BYTE *)(v29 + 12) = *((_BYTE *)v30 - 16);
        *(_DWORD *)(v29 + 20) = *((_DWORD *)v30 - 3);
        *(_QWORD *)(v29 + 24) = *v30;
        *(_QWORD *)(qword_100994BE8 + v26 + 32) = *(_QWORD *)(v34 + v27 + 8);
        *(_QWORD *)(qword_100994BE8 + v26 + 40) = *(_QWORD *)(v34 + v27 + 24);
        *(_QWORD *)(qword_100994BE8 + v26 + 48) = *(_QWORD *)(v34 + v27 + 32);
        *(_QWORD *)(qword_100994BE8 + v26 + 56) = *(_QWORD *)(v34 + v27 + 16);
        v32 = v34;
        if (*(_BYTE *)(v34 + v27 - 16) && !*(_QWORD *)(v34 + v27 + 16))
        {
          sub_100253460();
          *(_BYTE *)(qword_100994BE8 + v26 + 12) = 0;
          v32 = v34;
        }
        sub_10019F1AC(*(_BYTE *)(qword_100994BE8 + v26), *(_WORD *)(v32 + v27 - 8), *(_WORD *)(v32 + v27 - 6), *(_QWORD *)(v32 + v27 + 40));
        (*(void (**)(_QWORD))(v34 + v27))(*(unsigned __int8 *)(v34 + v27 - 36));
        ++v25;
        v26 += 64;
        v27 += 88;
      }
      while (v25 < v33);
      v17 = (_BYTE *)qword_100994BE8;
    }
  }
  else
  {
    v17 = sub_100052DC0(v16 << 6);
    qword_100994BE8 = (uint64_t)v17;
    byte_100994BF0 = v16;
  }
  if (!v17)
    return 106;
  *(_WORD *)v17 = 257;
  v17[2] = 1;
  v17[12] = 0;
  v18 = sub_10021821C();
  v19 = sub_10021821C();
  v20 = sub_10021591C(v18, v19, 0x1D4Cu, 0x1Eu, 1, 1);
  *(_DWORD *)(qword_100994BE8 + 4) = v20;
  if (!v20)
  {
    if (sub_10005549C())
    {
      v21 = sub_10021821C();
      sub_100054530("Calculated tput is zero for data length %d and ce %d us", v21, 7500);
      v22 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
        sub_1006CEEC0();
    }
  }
  v23 = qword_100994BE8;
  *(_DWORD *)(qword_100994BE8 + 8) = 1179678;
  *(_QWORD *)(v23 + 16) = 0xFFFFFC1800000000;
  *(_OWORD *)(v23 + 24) = 0u;
  *(_OWORD *)(v23 + 40) = 0u;
  *(_QWORD *)(v23 + 56) = 0;
  if ((a1 & 1) != 0)
  {
    *(_WORD *)(v23 + 64) = 514;
    *(_BYTE *)(v23 + 66) = 1;
    *(_BYTE *)(v23 + 76) = 0;
    *(_QWORD *)(v23 + 68) = 0x64000400000708;
    v24 = dword_100978DF0;
    *(_DWORD *)(v23 + 80) = 300;
    *(_DWORD *)(v23 + 84) = v24;
    *(_OWORD *)(v23 + 88) = 0uLL;
    *(_OWORD *)(v23 + 104) = 0uLL;
    *(_QWORD *)(v23 + 120) = 0;
  }
  return 0;
}

uint64_t sub_100170C20()
{
  return 1;
}

void sub_100170C28(unsigned __int16 *a1, int a2, _QWORD *a3, int a4, uint64_t a5, int a6)
{
  NSObject *v10;
  unsigned int v11;
  __int16 *v12;
  uint64_t v13;
  uint64_t v14;
  __int16 *v15;
  NSObject *v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t *v19;
  NSObject *v20;
  void *v21;
  NSObject *v22;
  void *v23;
  uint8_t buf[4];
  void *v25;

  if (a4 == 15 && *a3 == 0x6C7070612E6D6F63 && *(_QWORD *)((char *)a3 + 7) == 0x53542E54422E656CLL)
  {
    if (sub_10005549C())
    {
      sub_100054530("Pipe 0x%4x is available for %p (lm 0x%4x) with priority %d", a2, a1, *a1, a6);
      v10 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136446210;
        v25 = sub_100054494();
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    v11 = dword_100994BF4;
    if (!dword_100994BF4)
      goto LABEL_28;
    v12 = &word_100994C38;
    v13 = dword_100994BF4;
    while (*((unsigned __int16 **)v12 - 1) != a1)
    {
      v12 += 536;
      if (!--v13)
        goto LABEL_17;
    }
    if (*v12 != -1)
    {
      sub_100253460();
      v11 = dword_100994BF4;
    }
    if (!v11)
      goto LABEL_28;
LABEL_17:
    v14 = v11;
    v15 = &word_100994C38;
    while (*((unsigned __int16 **)v15 - 1) != a1)
    {
      v15 += 536;
      if (!--v14)
        goto LABEL_28;
    }
    if (*v15 != -1)
    {
      if (off_100994C20)
        off_100994C20(a1, 81, 3207, 133);
      if (sub_10005549C())
      {
        sub_100054530("Already have a TS pipe fot his handle !!!");
        v16 = sub_1000544A0(0x56u);
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
          sub_1006CEEC0();
      }
    }
    else
    {
LABEL_28:
      v17 = &qword_100994C30[134 * v11];
      bzero(v17, 0x430uLL);
      *v17 = (uint64_t)a1;
      *((_WORD *)v17 + 4) = a2;
      *((_DWORD *)v17 + 12) = 1;
      sub_100175D48(v11, 1);
      v18 = &qword_100994C30[134 * dword_100994BF4];
      *((_BYTE *)v18 + 77) = 0;
      v18[10] = 0x100000001;
      *((_DWORD *)v18 + 29) = 0;
      *((_DWORD *)v18 + 47) = -30;
      sub_100113518((uint64_t)(v18 + 24));
      v19 = &qword_100994C30[134 * dword_100994BF4];
      *((_DWORD *)v19 + 40) = *((_DWORD *)v19 + 48);
      *((_WORD *)v19 + 82) = *((_WORD *)v19 + 98);
      sub_100113518((uint64_t)(v19 + 26));
      sub_1000ED9F4(dword_100994BF4);
      BYTE5(qword_100994C30[134 * dword_100994BF4 + 55]) = sub_1000F031C((uint64_t)a1);
      if (sub_10005549C())
      {
        sub_100054530("Storing pipe start %d:%d with tsTimeoutRequired %d", LODWORD(qword_100994C30[134 * dword_100994BF4 + 24]), SWORD2(qword_100994C30[134 * dword_100994BF4 + 24]), BYTE5(qword_100994C30[134 * dword_100994BF4 + 55]));
        v20 = sub_1000544A0(0x56u);
        if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
        {
          v21 = sub_100054494();
          *(_DWORD *)buf = 136446210;
          v25 = v21;
          _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      ++dword_100994BF4;
      if (sub_1000F0460((uint64_t)a1))
      {
        sub_100175704(a2, 2u);
        if (sub_1001F4E24()
          && sub_1001F4E24() <= 0x7CF
          && sub_1001F4E24() > 0xE
          || sub_1001F4E24() >= 0x7D0 && sub_1001F4E24() <= 0xF9F)
        {
          sub_1001FD594(a1, 1, 1);
        }
        if (sub_1000F0414((uint64_t)a1))
          sub_100176C24((__int128 *)a1);
      }
      if (sub_1000F2FF4() && sub_1000ECA90((uint64_t)a1, 1) && sub_10005549C())
      {
        sub_100054530("Force upgrade TS not ready E");
        v22 = sub_1000544A0(0x56u);
        if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
        {
          v23 = sub_100054494();
          *(_DWORD *)buf = 136446210;
          v25 = v23;
          _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
    }
  }
}

void sub_100171064(int a1)
{
  NSObject *v2;
  uint64_t v3;
  uint64_t *v4;
  int v5;
  int v6;
  unsigned int v7;
  unsigned int v8;
  NSObject *v9;
  void *v10;
  _BYTE *v11;
  uint64_t *v12;
  unsigned __int8 *v13;
  int v14;
  unint64_t v15;
  char v16;
  uint64_t *v17;
  unsigned __int16 *v18;
  uint64_t v19;
  void (**v20)(_QWORD);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t *v30;
  void *v31;
  _QWORD *v32;
  void *v33;
  uint64_t *v34;
  _BYTE *v35;
  uint64_t v36;
  uint8_t buf[512];
  _OWORD v38[2];

  if (sub_10005549C())
  {
    sub_100054530("pipe 0x%4x is gone, remaining peers %d", a1, dword_100994BF4);
    v2 = sub_1000544A0(0x56u);
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      *(_QWORD *)&buf[4] = sub_100054494();
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (dword_100994BF4)
  {
    v3 = 0;
    while (LOWORD(qword_100994C30[134 * v3 + 1]) != a1)
    {
      if (++v3 == dword_100994BF4)
        return;
    }
    v4 = &qword_100994C30[134 * v3];
    v36 = 0;
    sub_100113518((uint64_t)&v36);
    v5 = SWORD2(v36) + 1000 * v36;
    v6 = *((__int16 *)v4 + 98) + 1000 * *((_DWORD *)v4 + 48);
    v7 = v5 - v6;
    if (v5 == v6)
      v8 = -1;
    else
      v8 = 8 * HIDWORD(qword_100994C30[134 * v3 + 11]) / v7;
    if (sub_10005549C())
    {
      sub_100054530("Done with connection, %d total bytes sent in %d seconds (%d kbps)", HIDWORD(qword_100994C30[134 * v3 + 11]), v7 / 0x3E8, v8);
      v9 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        v10 = sub_100054494();
        *(_DWORD *)buf = 136446210;
        *(_QWORD *)&buf[4] = v10;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    if (*((_QWORD *)&xmmword_100994C08 + 1))
      (*((void (**)(_QWORD, _QWORD, uint64_t, uint64_t))&xmmword_100994C08 + 1))(LOBYTE(qword_100994C30[134 * v3 + 7]), 0, v4[24], v36);
    v11 = (_BYTE *)*v4;
    v12 = &qword_100994C30[134 * v3];
    v14 = *((unsigned __int8 *)v12 + 10);
    v13 = (unsigned __int8 *)v12 + 10;
    if (v14)
    {
      v35 = (_BYTE *)*v4;
      v15 = 0;
      v16 = 0;
      do
      {
        v17 = &qword_100994C30[134 * v3 + 2 * v15];
        v18 = (unsigned __int16 *)v17[2];
        if (v18)
        {
          if (sub_10019AB28(v17[2]))
          {
            sub_10018014C((uint64_t)v18, 0x13u);
          }
          else if (*((_BYTE *)v18 + 2) == 8)
          {
            v19 = byte_100994BF0;
            if (byte_100994BF0)
            {
              v20 = (void (**)(_QWORD))(qword_100994BE8 + 48);
              while (*((unsigned __int8 *)v20 - 47) != LOBYTE(qword_100994C30[134 * v3 + 3 + 2 * v15]))
              {
                v20 += 8;
                if (!--v19)
                  goto LABEL_29;
              }
              (*v20)(*v18);
            }
          }
LABEL_29:
          v16 = 1;
        }
        ++v15;
      }
      while (v15 < *v13);
      v11 = v35;
      if ((v16 & 1) != 0)
        goto LABEL_40;
    }
    if (LODWORD(qword_100994C30[134 * v3 + 6]) != 8 || !sub_1000F0414((uint64_t)v11))
      goto LABEL_40;
    if (v11[48])
    {
      if (!v11[55] || v11[56])
        goto LABEL_40;
      v27 = (uint64_t)(v11 + 57);
    }
    else
    {
      v27 = (uint64_t)(v11 + 49);
    }
    sub_100192944(0, v27, v21, v22, v23, v24, v25, v26);
LABEL_40:
    v28 = HIDWORD(qword_100994C30[134 * v3 + 6]);
    if ((_DWORD)v28)
      sub_100049F6C(v28);
    v29 = &qword_100994C30[134 * v3];
    if (sub_10004A088(*((_DWORD *)v29 + 110)))
      sub_100049F6C(*((unsigned int *)v29 + 110));
    v30 = &qword_100994C30[134 * v3];
    v33 = (void *)v30[8];
    v32 = v30 + 8;
    v31 = v33;
    if (v33)
    {
      sub_100053298(v31);
      *v32 = 0;
      LODWORD(qword_100994C30[134 * v3 + 9]) = 0;
    }
    v38[0] = xmmword_10073A110;
    v38[1] = unk_10073A120;
    memcpy(buf, "state", sizeof(buf));
    sub_1001141C0("Magnet Operation", (const char *)buf, v38, 2);
    v34 = &qword_100994C30[134 * --dword_100994BF4];
    memcpy(&qword_100994C30[134 * v3], v34, 0x430uLL);
    bzero(v34, 0x430uLL);
  }
}

void sub_100171498(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v7;
  __int16 *v8;
  unsigned __int16 *v9;
  unsigned int v10;
  NSObject *v11;
  const char *v12;
  unint64_t v13;
  const char *v14;
  NSObject *v15;
  NSObject *v16;

  v7 = dword_100994BF4;
  if (!dword_100994BF4)
  {
LABEL_5:
    v9 = 0;
    if (!a2)
      return;
LABEL_8:
    if (a3 < 2 || !v9)
      return;
    if ((_DWORD)a3 - 2 == a2[1])
    {
      if (a5 && off_100994C28)
        off_100994C28(v9, a1, a3);
      v10 = *a2;
      if (v10 <= 0x1F)
      {
        switch(*a2)
        {
          case 1u:
            sub_100178454(v9, a2 + 2, a3 - 2);
            break;
          case 2u:
            sub_100178DAC(v9, a2 + 2, a3 - 2);
            break;
          case 5u:
            sub_100179380((uint64_t)v9, a2 + 2);
            break;
          case 0x10u:
            sub_100179ABC(v9, a2 + 2, a3 - 2);
            break;
          case 0x11u:
            sub_1001795A4(v9, a2 + 2, a3 - 2);
            break;
          case 0x12u:
            sub_10017A1EC(v9, a2 + 2, a3 - 2);
            break;
          case 0x13u:
            sub_10017A4D8(v9, a2 + 2, a3 - 2);
            break;
          case 0x14u:
            sub_10017A734(v9, a2 + 2, a3 - 2);
            break;
          default:
            goto LABEL_40;
        }
        return;
      }
      if (*a2 <= 0x21u)
      {
        if (v10 == 32)
        {
          sub_10017AB80(v9);
          return;
        }
        if (v10 == 33)
        {
          sub_10017AF08(v9);
          return;
        }
      }
      else
      {
        switch(v10)
        {
          case 0x22u:
            sub_10017B38C(v9);
            return;
          case 0xFFu:
            if (!sub_10005549C())
              return;
            v12 = sub_10017B710(a2[2]);
            v13 = (char)a2[3];
            v14 = v13 > 8 ? "ERROR_Unknown" : off_10091D388[v13];
            sub_100054530("Got TS error with message %s %s", v12, v14);
            v16 = sub_1000544A0(0x56u);
            if (!os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
              return;
LABEL_19:
            sub_1006CE7A4();
            return;
          case 0xFEu:
            sub_10017B644(a2[2]);
        }
      }
LABEL_40:
      if (!sub_10005549C())
        return;
      sub_100054530("Unknown PDU opcode %d, dataSize %d", *a2, a3);
      v15 = sub_1000544A0(0x56u);
      if (!os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
        return;
      goto LABEL_19;
    }
    if (!sub_10005549C())
      return;
    sub_100054530("Wrong packet : %@", a2, a3);
    v11 = sub_1000544A0(0x56u);
    if (!os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      return;
    goto LABEL_19;
  }
  v8 = &word_100994C38;
  while ((unsigned __int16)*v8 != (_DWORD)a1)
  {
    v8 += 536;
    if (!--v7)
      goto LABEL_5;
  }
  v9 = (unsigned __int16 *)*((_QWORD *)v8 - 1);
  if (a2)
    goto LABEL_8;
}

void sub_1001717F0(int a1, int a2)
{
  uint64_t v2;
  _BYTE *i;
  int v4;
  unint64_t v6;
  int v7;
  __int128 **v8;

  v2 = byte_100994BF0;
  if (byte_100994BF0)
  {
    for (i = (_BYTE *)(qword_100994BE8 + 2); *(i - 1) != a1; i += 64)
    {
      if (!--v2)
        return;
    }
    v4 = *i;
    *i = a2;
    if (v4 != a2 && dword_100994BF4 != 0)
    {
      v6 = 0;
      v7 = *(i - 2);
      v8 = (__int128 **)qword_100994C30;
      do
      {
        sub_100177010(*v8, v7);
        ++v6;
        v8 += 134;
      }
      while (v6 < dword_100994BF4);
    }
  }
}

void sub_100171890(int a1, int a2, int a3)
{
  uint64_t v3;
  _WORD *i;
  int v5;
  unint64_t v6;
  int v7;
  __int128 **v8;

  v3 = byte_100994BF0;
  if (byte_100994BF0)
  {
    for (i = (_WORD *)(qword_100994BE8 + 8); *((unsigned __int8 *)i - 7) != a1; i += 32)
    {
      if (!--v3)
        return;
    }
    if (*((_DWORD *)i - 1) == a2)
    {
      v5 = (unsigned __int16)*i;
      *((_DWORD *)i - 1) = a2;
      *i = a3;
      if (v5 == a3)
        return;
    }
    else
    {
      *((_DWORD *)i - 1) = a2;
      *i = a3;
    }
    if (dword_100994BF4)
    {
      v6 = 0;
      v7 = *((unsigned __int8 *)i - 8);
      v8 = (__int128 **)qword_100994C30;
      do
      {
        sub_100177010(*v8, v7);
        ++v6;
        v8 += 134;
      }
      while (v6 < dword_100994BF4);
    }
  }
}

uint64_t sub_10017194C()
{
  unsigned int v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  void (*v4)(_QWORD);

  sub_10022D328(off_10091D2C8);
  sub_1000F3054("com.apple.BT.TS", 0xFu, 2, 10);
  bzero(qword_100994C30, 0x4300uLL);
  dword_100994BF4 = 0;
  v0 = byte_100994BF0;
  if (byte_100994BF0)
  {
    v1 = 0;
    v2 = 0;
    v3 = qword_100994BE8;
    do
    {
      v4 = *(void (**)(_QWORD))(v3 + v1 + 32);
      if (v4)
      {
        v4(*(unsigned __int8 *)(v3 + v1));
        v3 = qword_100994BE8;
        v0 = byte_100994BF0;
      }
      ++v2;
      v1 += 64;
    }
    while (v2 < v0);
    if (v0)
      sub_100053298((void *)qword_100994BE8);
  }
  qword_100994BE8 = 0;
  byte_100994BF0 = 0;
  return sub_100252F98();
}

uint64_t sub_100171A04(unsigned __int16 *a1, int a2, int a3)
{
  NSObject *v7;

  if ((sub_1000F0460((uint64_t)a1) & 1) != 0)
  {
    if (sub_1000F0414((uint64_t)a1))
      return sub_100171AC0(a1, a2, a3);
    else
      return sub_10017201C(a1, a2, a3);
  }
  else
  {
    if (sub_10005549C())
    {
      sub_100054530("Link is not encrypted, can't send upgrade");
      v7 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 4802;
  }
}

uint64_t sub_100171AC0(unsigned __int16 *a1, int a2, int a3)
{
  uint64_t v3;
  __int16 *i;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  NSObject *v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  unsigned int *v17;
  unsigned int v18;
  const char *v19;
  NSObject *v20;
  void *v21;
  _BYTE *v22;
  void *v23;
  unsigned __int16 v24;
  int v25;
  const char *v26;
  NSObject *v27;
  NSObject *v28;
  void *v29;
  unsigned int v30;
  unsigned __int16 __len;
  uint8_t __len_2[512];
  __int128 v33;
  __int128 v34;

  v3 = dword_100994BF4;
  if (!dword_100994BF4)
    return 414;
  for (i = &word_100994C38; *((unsigned __int16 **)i - 1) != a1; i += 536)
  {
    if (!--v3)
      return 414;
  }
  v8 = (unsigned __int16)*i;
  __len = 0;
  if ((_DWORD)v8 == 0xFFFF)
    return 414;
  if ((sub_1000F0460((uint64_t)a1) & 1) == 0)
  {
    if (sub_10005549C())
    {
      sub_100054530("Link is not encrypted, can't send caps changed");
      v13 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 4802;
  }
  v9 = dword_100994BF4;
  if (!dword_100994BF4)
    goto LABEL_30;
  v10 = &dword_100994C60;
  while (*((unsigned __int16 *)v10 - 20) != (_DWORD)v8)
  {
    v10 += 268;
    if (!--v9)
      goto LABEL_30;
  }
  if (*v10 != 6)
  {
LABEL_30:
    if (sub_10005549C())
    {
      v16 = dword_100994BF4;
      if (dword_100994BF4)
      {
        v17 = (unsigned int *)&dword_100994C60;
        while (*((unsigned __int16 *)v17 - 20) != (_DWORD)v8)
        {
          v17 += 268;
          if (!--v16)
            goto LABEL_35;
        }
        v18 = *v17;
      }
      else
      {
LABEL_35:
        v18 = 0;
      }
      v19 = sub_100173108(v18);
      sub_100054530("Message should only be send when in ##state state. Current state is %s", v19);
      v20 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 408;
  }
  if (!byte_100994BF0)
  {
LABEL_24:
    if (!sub_10005549C())
      return 120;
    if (a2 <= 2)
    {
      if (a2 == 1)
      {
        v15 = "LE";
        goto LABEL_74;
      }
      if (a2 == 2)
      {
        v15 = "BT";
        goto LABEL_74;
      }
    }
    else
    {
      switch(a2)
      {
        case 3:
          v15 = "WL";
          goto LABEL_74;
        case 16:
          v15 = "USB";
          goto LABEL_74;
        case 17:
          v15 = "AWDL";
          goto LABEL_74;
      }
    }
    v15 = "??";
LABEL_74:
    sub_100054530("Could not find transport tech %s.", v15);
    v27 = sub_1000544A0(0x56u);
    if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
    return 120;
  }
  v14 = 0;
  while (*(unsigned __int8 *)(qword_100994BE8 + v14 + 1) != a2)
  {
    v14 += 64;
    if ((unint64_t)byte_100994BF0 << 6 == v14)
      goto LABEL_24;
  }
  if (*(_BYTE *)(qword_100994BE8 + v14 + 12))
    v21 = (void *)(*(uint64_t (**)(unsigned __int16 *))(qword_100994BE8 + v14 + 56))(&__len);
  else
    v21 = 0;
  sub_10017532C(a1);
  v22 = sub_100052DC0(__len + 3);
  if (v22)
  {
    v23 = v22;
    *v22 = 17;
    v22[1] = __len + 1;
    v22[2] = *(_BYTE *)(qword_100994BE8 + v14);
    if (v21 && __len)
    {
      memmove(v22 + 3, v21, __len);
    }
    else if (!v21)
    {
      goto LABEL_55;
    }
    sub_100053298(v21);
LABEL_55:
    sub_100175704(v8, 7u);
    if (dword_100994BF4)
    {
      v24 = 0;
      while ((unsigned __int16 *)qword_100994C30[134 * v24] != a1)
      {
        if (dword_100994BF4 <= ++v24)
          goto LABEL_61;
      }
      BYTE5(qword_100994C30[134 * v24 + 9]) = a2;
    }
LABEL_61:
    if (a1)
      v25 = *a1;
    else
      v25 = 0;
    if (!sub_10005549C())
      goto LABEL_86;
    if (a2 <= 2)
    {
      if (a2 == 1)
      {
        v26 = "LE";
        goto LABEL_84;
      }
      if (a2 == 2)
      {
        v26 = "BT";
        goto LABEL_84;
      }
    }
    else
    {
      switch(a2)
      {
        case 3:
          v26 = "WL";
          goto LABEL_84;
        case 16:
          v26 = "USB";
          goto LABEL_84;
        case 17:
          v26 = "AWDL";
          goto LABEL_84;
      }
    }
    v26 = "??";
LABEL_84:
    sub_100054530("Sending UPGRADE for lmhandle 0x%4x pipe:0x%4X to %s", v25, v8, v26);
    v28 = sub_1000544A0(0x56u);
    if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
    {
      v29 = sub_100054494();
      *(_DWORD *)__len_2 = 136446210;
      *(_QWORD *)&__len_2[4] = v29;
      _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, " %{public}s", __len_2, 0xCu);
    }
LABEL_86:
    v30 = sub_1000F1F44(0, a1, v8, v23, (unsigned __int16)(__len + 3), 0);
    if (v30 == 412)
      v11 = 0;
    else
      v11 = v30;
    if (!(_DWORD)v11)
    {
      v33 = 0u;
      v34 = 0u;
      LOBYTE(v33) = 1;
      WORD1(v33) = 4;
      DWORD2(v33) = 8;
      LOBYTE(v34) = 1;
      WORD1(v34) = 4;
      DWORD2(v34) = a2 | (a3 << 8);
      memcpy(__len_2, "state", sizeof(__len_2));
      sub_1001141C0("Magnet Operation", (const char *)__len_2, &v33, 2);
      sub_100175928(v8, 0x3A98u);
    }
    sub_100053298(v23);
    return v11;
  }
  if (v21)
    sub_100053298(v21);
  return 106;
}

uint64_t sub_10017201C(unsigned __int16 *a1, int a2, int a3)
{
  uint64_t v3;
  unsigned __int16 v6;
  unsigned __int16 v7;
  uint64_t *v8;
  int v9;
  unsigned __int16 *v10;
  int v11;
  int *v12;
  const char *v13;
  NSObject *v14;
  void *v15;
  uint64_t v16;
  unsigned __int8 *v17;
  uint64_t v18;
  unsigned int *v19;
  unsigned int v20;
  uint64_t result;
  const char *v22;
  NSObject *v23;
  __int16 v25;
  char v26;
  uint8_t buf[512];
  __int128 v28;
  __int128 v29;

  v26 = 0;
  v25 = 272;
  LODWORD(v3) = dword_100994BF4;
  if (!dword_100994BF4)
    return 120;
  v6 = 0;
  while (1)
  {
    v7 = v6;
    if ((unsigned __int16 *)qword_100994C30[134 * v6] == a1)
      break;
LABEL_4:
    v6 = v7 + 1;
    if (v3 <= (unsigned __int16)(v7 + 1))
      return 120;
  }
  v8 = &qword_100994C30[134 * v6];
  v11 = *((unsigned __int16 *)v8 + 4);
  v10 = (unsigned __int16 *)(v8 + 1);
  v9 = v11;
  v12 = &dword_100994C60;
  v3 = v3;
  while (*((unsigned __int16 *)v12 - 20) != v9)
  {
    v12 += 268;
    if (!--v3)
      goto LABEL_30;
  }
  if (*v12 != 6)
  {
LABEL_30:
    if (sub_10005549C())
    {
      v18 = dword_100994BF4;
      if (dword_100994BF4)
      {
        v19 = (unsigned int *)&dword_100994C60;
        while (*((unsigned __int16 *)v19 - 20) != *v10)
        {
          v19 += 268;
          if (!--v18)
            goto LABEL_35;
        }
        v20 = *v19;
      }
      else
      {
LABEL_35:
        v20 = 0;
      }
      v22 = sub_100173108(v20);
      sub_100054530("Message should only be send when in ##state state. Current state is %s", v22);
      v23 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 408;
  }
  if (sub_10005549C())
  {
    if (a2 <= 2)
    {
      v13 = "LE";
      if (a2 == 1)
        goto LABEL_23;
      if (a2 == 2)
      {
        v13 = "BT";
        goto LABEL_23;
      }
    }
    else
    {
      switch(a2)
      {
        case 3:
          v13 = "WL";
          goto LABEL_23;
        case 16:
          v13 = "USB";
          goto LABEL_23;
        case 17:
          v13 = "AWDL";
          goto LABEL_23;
      }
    }
    v13 = "??";
LABEL_23:
    sub_100054530("Sending UPGRADE_REQ for lmhandle 0x%4x tech %s", *a1, v13);
    v14 = sub_1000544A0(0x56u);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      v15 = sub_100054494();
      *(_DWORD *)buf = 136446210;
      *(_QWORD *)&buf[4] = v15;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  v28 = 0u;
  v29 = 0u;
  LOBYTE(v28) = 1;
  WORD1(v28) = 4;
  DWORD2(v28) = 7;
  LOBYTE(v29) = 1;
  WORD1(v29) = 4;
  DWORD2(v29) = a3;
  memcpy(buf, "state", sizeof(buf));
  sub_1001141C0("Magnet Operation", (const char *)buf, &v28, 2);
  v16 = byte_100994BF0;
  if (!byte_100994BF0)
  {
LABEL_29:
    LODWORD(v3) = dword_100994BF4;
    goto LABEL_4;
  }
  v17 = (unsigned __int8 *)(qword_100994BE8 + 1);
  while (*v17 != a2)
  {
    v17 += 64;
    if (!--v16)
      goto LABEL_29;
  }
  v26 = *(v17 - 1);
  LODWORD(result) = sub_1000F1F44(0, a1, *v10, &v25, 3, 0);
  if ((_DWORD)result == 412)
    return 0;
  else
    return result;
}

uint64_t sub_100172358(unsigned __int16 *a1, int a2)
{
  uint64_t result;
  NSObject *v5;
  uint64_t v6;
  __int16 *v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  NSObject *v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  const char *v15;
  NSObject *v16;
  __int16 v17;
  uint8_t buf[512];
  __int128 v19;
  __int128 v20;

  if ((sub_1000F0460((uint64_t)a1) & 1) != 0)
  {
    if (sub_1000F0414((uint64_t)a1))
      return sub_10017264C(a1, a2);
    v6 = dword_100994BF4;
    if (dword_100994BF4)
    {
      v7 = &word_100994C38;
      v8 = dword_100994BF4;
      while (*((unsigned __int16 **)v7 - 1) != a1)
      {
        v7 += 536;
        if (!--v8)
        {
          v9 = 0xFFFFLL;
          goto LABEL_15;
        }
      }
      v9 = (unsigned __int16)*v7;
LABEL_15:
      v17 = 34;
      v10 = &dword_100994C60;
      while (*((unsigned __int16 *)v10 - 20) != (_DWORD)v9)
      {
        v10 += 268;
        if (!--v6)
          goto LABEL_26;
      }
      if (*v10 == 6)
      {
        if (sub_10005549C())
        {
          sub_100054530("Sending DOWNGRADE_REQ to lmhandle 0x%4x", *a1);
          v11 = sub_1000544A0(0x56u);
          if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 136446210;
            *(_QWORD *)&buf[4] = sub_100054494();
            _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
        result = sub_1000F1F44(0, a1, v9, &v17, 2, 0);
        if ((_DWORD)result == 412 || !(_DWORD)result)
        {
          v19 = 0u;
          v20 = 0u;
          LOBYTE(v19) = 1;
          WORD1(v19) = 4;
          DWORD2(v19) = 11;
          LOBYTE(v20) = 1;
          WORD1(v20) = 4;
          DWORD2(v20) = a2;
          memcpy(buf, "state", sizeof(buf));
          sub_1001141C0("Magnet Operation", (const char *)buf, &v19, 2);
          return 0;
        }
        return result;
      }
    }
    else
    {
      LODWORD(v9) = 0xFFFF;
    }
LABEL_26:
    if (sub_10005549C())
    {
      v12 = dword_100994BF4;
      if (dword_100994BF4)
      {
        v13 = (unsigned int *)&dword_100994C60;
        while (*((unsigned __int16 *)v13 - 20) != (_DWORD)v9)
        {
          v13 += 268;
          if (!--v12)
            goto LABEL_31;
        }
        v14 = *v13;
      }
      else
      {
LABEL_31:
        v14 = 0;
      }
      v15 = sub_100173108(v14);
      sub_100054530("Message should only be send when in ##state state. Current state is %s", v15);
      v16 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 408;
  }
  else
  {
    if (sub_10005549C())
    {
      sub_100054530("Link is not encrypted, can't send upgrade");
      v5 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 4802;
  }
}

uint64_t sub_10017264C(unsigned __int16 *a1, int a2)
{
  uint64_t v2;
  __int16 *v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v10;
  unsigned __int16 *v11;
  int *v12;
  uint64_t v13;
  NSObject *v14;
  int *v15;
  NSObject *v16;
  uint64_t v17;
  unsigned int *v18;
  unsigned int v19;
  NSObject *v20;
  unsigned int v21;
  const char *v22;
  NSObject *v23;
  __int16 v24;
  uint8_t buf[512];
  __int128 v26;
  __int128 v27;

  v24 = 32;
  v2 = dword_100994BF4;
  if (dword_100994BF4)
  {
    v5 = &word_100994C38;
    v6 = dword_100994BF4;
    while (*((unsigned __int16 **)v5 - 1) != a1)
    {
      v5 += 536;
      if (!--v6)
        goto LABEL_5;
    }
    if (!*((_BYTE *)v5 + 2))
    {
      if (!sub_10005549C())
        return 408;
      sub_100054530("No alternate handle to downgrade from.");
      v14 = sub_1000544A0(0x56u);
      if (!os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
        return 408;
      goto LABEL_50;
    }
    v10 = (unsigned __int16)*v5;
    if ((_DWORD)v10 != 0xFFFF)
    {
      v11 = (unsigned __int16 *)*((_QWORD *)v5 + 1);
      v12 = &dword_100994C60;
      v13 = dword_100994BF4;
      while (*((unsigned __int16 *)v12 - 20) != (_DWORD)v10)
      {
        v12 += 268;
        if (!--v13)
          goto LABEL_20;
      }
      if (*v12 == 6)
      {
LABEL_25:
        sub_10017532C(v11);
        if ((sub_10019AB28((uint64_t)v11)
           || sub_10019ABD0((uint64_t)v11)
           || sub_10019AC00((uint64_t)v11)
           || sub_10019AC30((uint64_t)v11))
          && sub_1001A12A8((uint64_t)v11))
        {
          if (sub_10005549C())
          {
            sub_100054530("Waiting for data on lmhandle 0x%4x to be flushed before sending downgrade.", *v11);
            v16 = sub_1000544A0(0x56u);
            if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 136446210;
              *(_QWORD *)&buf[4] = sub_100054494();
              _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
          }
          sub_100175704(v10, 0xBu);
          sub_1001A0FD0(1, (uint64_t)v11, sub_100175850);
          return 0;
        }
        else
        {
          if (sub_10005549C())
          {
            sub_100054530("Sending DOWNGRADE to lmhandle 0x%4x", *a1);
            v20 = sub_1000544A0(0x56u);
            if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 136446210;
              *(_QWORD *)&buf[4] = sub_100054494();
              _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
          }
          v21 = sub_1000F1F44(0, a1, v10, &v24, 2, 0);
          if (v21 == 412)
            v8 = 0;
          else
            v8 = v21;
          if ((_DWORD)v8)
          {
            sub_100175A18(v11);
          }
          else
          {
            sub_100175704(v10, 0xCu);
            sub_100175928(v10, 0x3A98u);
          }
          v26 = 0u;
          v27 = 0u;
          LOBYTE(v26) = 1;
          WORD1(v26) = 4;
          DWORD2(v26) = 10;
          LOBYTE(v27) = 1;
          WORD1(v27) = 4;
          DWORD2(v27) = a2;
          memcpy(buf, "state", sizeof(buf));
          sub_1001141C0("Magnet Operation", (const char *)buf, &v26, 2);
        }
        return v8;
      }
LABEL_20:
      v15 = &dword_100994C60;
      while (*((unsigned __int16 *)v15 - 20) != (_DWORD)v10)
      {
        v15 += 268;
        if (!--v2)
          goto LABEL_34;
      }
      if (*v15 == 11)
        goto LABEL_25;
LABEL_34:
      if (!sub_10005549C())
        return 408;
      v17 = dword_100994BF4;
      if (dword_100994BF4)
      {
        v18 = (unsigned int *)&dword_100994C60;
        while (*((unsigned __int16 *)v18 - 20) != (_DWORD)v10)
        {
          v18 += 268;
          if (!--v17)
            goto LABEL_39;
        }
        v19 = *v18;
      }
      else
      {
LABEL_39:
        v19 = 0;
      }
      v22 = sub_100173108(v19);
      sub_100054530("Message should only be send when in IDLE/DOWNGRADE_STALL state. Current state is %s", v22);
      v23 = sub_1000544A0(0x56u);
      if (!os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
        return 408;
LABEL_50:
      sub_1006CE7A4();
      return 408;
    }
  }
LABEL_5:
  if (sub_10005549C())
  {
    sub_100054530("Invalid handle for downgrade");
    v7 = sub_1000544A0(0x56u);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
  return 414;
}

uint64_t sub_100172A7C(unsigned __int16 *a1, char a2, int a3)
{
  uint64_t result;
  uint64_t v6;
  uint64_t *i;

  result = sub_100172358(a1, a3);
  if (!(_DWORD)result)
  {
    v6 = dword_100994BF4;
    if (dword_100994BF4)
    {
      for (i = qword_100994C30; (unsigned __int16 *)*i != a1; i += 134)
      {
        if (!--v6)
          return result;
      }
      *((_BYTE *)i + 77) = a2;
    }
  }
  return result;
}

void sub_100172AE0(uint64_t a1)
{
  NSObject *v2;

  if ((_DWORD)a1 && sub_10005549C())
  {
    sub_100054530("PhyStatsEnabled with error %!", a1);
    v2 = sub_1000544A0(0x56u);
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
      sub_1006CEEC0();
  }
}

uint64_t sub_100172B4C(uint64_t a1, _DWORD *a2)
{
  uint64_t v4;
  uint64_t *i;
  int v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  if (!dword_100994BF4)
    return 0;
  v4 = 0;
  for (i = qword_100994C30;
        !*i || !sub_10019AC00(*i) || *(unsigned __int16 *)(a1 + 204) != *(unsigned __int16 *)*i;
        i += 134)
  {
    if (++v4 >= (unint64_t)dword_100994BF4)
      return 0;
  }
  v7 = sub_1000F12B8(*i, a1);
  *((_DWORD *)i + 47) = *(__int16 *)(a1 + 18);
  v8 = *(_OWORD *)(a1 + 144);
  v9 = *(_OWORD *)(a1 + 160);
  v10 = *(_OWORD *)(a1 + 176);
  *(_OWORD *)((char *)i + 422) = *(_OWORD *)(a1 + 190);
  *(_OWORD *)(i + 49) = v9;
  *(_OWORD *)(i + 51) = v10;
  *(_OWORD *)(i + 47) = v8;
  v11 = *(_OWORD *)(a1 + 80);
  v12 = *(_OWORD *)(a1 + 96);
  v13 = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(i + 43) = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(i + 45) = v13;
  *(_OWORD *)(i + 39) = v11;
  *(_OWORD *)(i + 41) = v12;
  v14 = *(_OWORD *)(a1 + 16);
  v15 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(i + 35) = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(i + 37) = v16;
  *(_OWORD *)(i + 33) = v15;
  *(_OWORD *)(i + 31) = v14;
  *(_OWORD *)(i + 29) = *(_OWORD *)a1;
  if (a2)
    *a2 = v7;
  return 1;
}

uint64_t sub_100172C38(uint64_t result, int a2)
{
  uint64_t v2;
  uint64_t *i;

  v2 = dword_100994BF4;
  if (dword_100994BF4)
  {
    for (i = qword_100994C30; *i != result; i += 134)
    {
      if (!--v2)
        return result;
    }
    *((_DWORD *)i + 47) = a2;
  }
  return result;
}

uint64_t sub_100172C70(unsigned int a1)
{
  if (dword_100994BF4 <= a1)
    return 0;
  else
    return HIDWORD(qword_100994C30[134 * a1 + 23]);
}

uint64_t sub_100172CA0(uint64_t result, _DWORD *a2, _DWORD *a3)
{
  unint64_t v3;
  unint64_t v4;
  int *v5;

  v3 = dword_100994BF4;
  if (dword_100994BF4)
  {
    v4 = 0;
    v5 = &dword_100994CE8;
    do
    {
      if (*((_QWORD *)v5 - 23) == result)
      {
        *a2 = *(v5 - 2);
        *a3 = *(v5 - 1);
        *v5 = 0;
        *((_QWORD *)v5 - 2) = 0;
        v3 = dword_100994BF4;
      }
      ++v4;
      v5 += 268;
    }
    while (v4 < v3);
  }
  return result;
}

void sub_100172CF4(uint64_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, unsigned __int8 a9, char a10, unsigned __int8 a11, unsigned __int8 a12, char a13, char a14, char a15)
{
  uint64_t v20;
  uint64_t *i;
  int v22;
  const char *v23;
  NSObject *v24;
  uint64_t v25;
  _BYTE *v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  NSObject *v32;
  uint64_t v33;
  char *v34;
  uint8_t buf[4];
  void *v39;

  if (!dword_100994BF4)
    return;
  v20 = 0;
  for (i = qword_100994C30; ; i += 134)
  {
    if (*i != a1)
      goto LABEL_9;
    v22 = *((unsigned __int8 *)i + 76);
    if (v22 == 2)
      break;
    if (v22 == 1)
    {
      *((_DWORD *)i + 113) = a2;
      *((_DWORD *)i + 114) += a4;
      *((_DWORD *)i + 115) += a5;
      v27 = a6;
      *((_WORD *)i + 234) += a6;
      v28 = a10;
      v29 = (-a10 / 0xAu - 2);
      if (a10 < 0xFFFFFF92)
        v29 = 9;
      if (a10 > -30)
        v29 = 0;
      ++*((_BYTE *)i + 10 * ((205 * a8) >> 11) + v29 + 470);
      v26 = (char *)i + 10 * (a9 / 0xAu) + v29 + 570;
      goto LABEL_21;
    }
    if (sub_10005549C())
    {
      v23 = sub_100173108(*((unsigned __int8 *)i + 76));
      sub_100054530("Unexpected transport : %s. Don't collect stats", v23);
      v24 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
        sub_1006D294C();
    }
LABEL_9:
    if (++v20 >= (unint64_t)dword_100994BF4)
      return;
  }
  *((_DWORD *)i + 168) = a3;
  *((_DWORD *)i + 169) += a4;
  *((_DWORD *)i + 170) += a5;
  *((_WORD *)i + 344) += a7;
  v25 = (-a13 / 0xAu - 2);
  if (a13 < 0xFFFFFF92)
    v25 = 9;
  if (a13 > -30)
    v25 = 0;
  ++*((_BYTE *)i + 10 * (a11 / 0xAu) + v25 + 690);
  v26 = (char *)i + 10 * (a12 / 0xAu) + v25 + 790;
  v27 = a6;
  v28 = a10;
LABEL_21:
  ++*v26;
  if (a15 == 2)
  {
    v33 = *((unsigned __int8 *)i + 1062);
    v34 = (char *)i + 4 * v33;
    *((_WORD *)v34 + 446) = v27;
    v34[894] = v28;
    *((_BYTE *)i + 1062) = v33 + 1;
    if (sub_10005549C())
    {
      sub_100054530("Disconnect BT_TS_SetTransportMetrics. leCoexDenials = %u; leRSSI = %u", v27, v28);
      v32 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
      {
LABEL_28:
        *(_DWORD *)buf = 136446210;
        v39 = sub_100054494();
        _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
  }
  else if (a15 == 1)
  {
    v30 = *((unsigned __int8 *)i + 1063);
    v31 = (char *)i + 4 * v30;
    *((_WORD *)v31 + 486) = a7;
    v31[974] = a13;
    *((_BYTE *)i + 1063) = v30 + 1;
    if (sub_10005549C())
    {
      sub_100054530("Disconnect BT_TS_SetTransportMetrics. coexDenials = %u; classicRSSI = %u", a7, a13);
      v32 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
        goto LABEL_28;
    }
  }
  *((_BYTE *)i + 1062) %= 0x14u;
  *((_BYTE *)i + 1063) %= 0x14u;
}

const char *sub_100173108(unsigned int a1)
{
  if (a1 > 0xC)
    return "??";
  else
    return off_10091D2E0[a1];
}

void sub_10017312C(uint64_t a1, int a2, int a3)
{
  uint64_t v6;
  uint64_t *i;
  int v8;
  const char *v9;
  NSObject *v10;
  int v11;
  int v12;

  if (!dword_100994BF4)
    return;
  v6 = 0;
  for (i = qword_100994C30; ; i += 134)
  {
    if (*i != a1)
      goto LABEL_9;
    v8 = *((unsigned __int8 *)i + 76);
    if (v8 == 2)
      break;
    if (v8 == 1)
    {
      if (*(_DWORD *)(a1 + 144) == 2)
        v12 = 2;
      else
        v12 = 1;
      *((_DWORD *)i + 113) = v12;
      *((_DWORD *)i + 114) += a2;
      *((_DWORD *)i + 115) += a3;
      return;
    }
    if (sub_10005549C())
    {
      v9 = sub_100173108(*((unsigned __int8 *)i + 76));
      sub_100054530("Unexpected transport : %s. Don't collect stats", v9);
      v10 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006D294C();
    }
LABEL_9:
    if (++v6 >= (unint64_t)dword_100994BF4)
      return;
  }
  if (sub_1000F3F50(a1))
    v11 = 4;
  else
    v11 = 3;
  *((_DWORD *)i + 168) = v11;
  *((_DWORD *)i + 169) += a2;
  *((_DWORD *)i + 170) += a3;
}

_DWORD *sub_1001732B4(_DWORD *result, _DWORD *a2, _DWORD *a3, _DWORD *a4, _DWORD *a5, void *__dst, uint64_t a7, uint64_t a8, _DWORD *a9, _DWORD *a10, _DWORD *a11, _DWORD *a12, _DWORD *a13, void *a14, uint64_t a15, uint64_t a16, _DWORD *a17)
{
  unint64_t v21;
  __int128 *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  void *v43;
  _DWORD *v44;
  _DWORD *v45;
  _DWORD *v46;

  if (dword_100994BF4)
  {
    v21 = 0;
    v22 = &xmmword_100994E6A;
    v45 = a2;
    v46 = a3;
    v43 = __dst;
    v44 = result;
    do
    {
      *result = *(_DWORD *)((char *)v22 - 118);
      *a2 = *(_DWORD *)((char *)v22 - 114);
      *a3 = *(_DWORD *)((char *)v22 - 110);
      *a4 = *((unsigned __int16 *)v22 - 51);
      *a5 = *(_DWORD *)((char *)v22 - 106);
      v23 = *(__int128 *)((char *)v22 - 100);
      v24 = *(__int128 *)((char *)v22 - 68);
      *(_OWORD *)(a7 + 16) = *(__int128 *)((char *)v22 - 84);
      *(_OWORD *)(a7 + 32) = v24;
      *(_OWORD *)a7 = v23;
      v25 = *(__int128 *)((char *)v22 - 52);
      v26 = *(__int128 *)((char *)v22 - 36);
      v27 = *(__int128 *)((char *)v22 - 20);
      *(_DWORD *)(a7 + 96) = *((_DWORD *)v22 - 1);
      *(_OWORD *)(a7 + 64) = v26;
      *(_OWORD *)(a7 + 80) = v27;
      *(_OWORD *)(a7 + 48) = v25;
      v29 = v22[4];
      v28 = v22[5];
      v30 = v22[3];
      *(_DWORD *)(a8 + 96) = *((_DWORD *)v22 + 24);
      *(_OWORD *)(a8 + 64) = v29;
      *(_OWORD *)(a8 + 80) = v28;
      *(_OWORD *)(a8 + 48) = v30;
      v31 = *v22;
      v32 = v22[2];
      *(_OWORD *)(a8 + 16) = v22[1];
      *(_OWORD *)(a8 + 32) = v32;
      *(_OWORD *)a8 = v31;
      memcpy(__dst, (char *)v22 + 322, 4 * *((unsigned __int8 *)v22 + 492));
      *a9 = *(_DWORD *)((char *)v22 + 102);
      *a10 = *(_DWORD *)((char *)v22 + 106);
      *a11 = *(_DWORD *)((char *)v22 + 110);
      *a12 = *((unsigned __int16 *)v22 + 59);
      *a13 = *(_DWORD *)((char *)v22 + 114);
      v33 = *(__int128 *)((char *)v22 + 152);
      v34 = *(__int128 *)((char *)v22 + 136);
      *(_OWORD *)a15 = *(__int128 *)((char *)v22 + 120);
      *(_OWORD *)(a15 + 16) = v34;
      *(_OWORD *)(a15 + 32) = v33;
      v35 = *(__int128 *)((char *)v22 + 184);
      v36 = *(__int128 *)((char *)v22 + 200);
      v37 = *(__int128 *)((char *)v22 + 168);
      *(_DWORD *)(a15 + 96) = *((_DWORD *)v22 + 54);
      *(_OWORD *)(a15 + 64) = v35;
      *(_OWORD *)(a15 + 80) = v36;
      *(_OWORD *)(a15 + 48) = v37;
      v38 = *(__int128 *)((char *)v22 + 252);
      v39 = *(__int128 *)((char *)v22 + 220);
      *(_OWORD *)(a16 + 16) = *(__int128 *)((char *)v22 + 236);
      *(_OWORD *)(a16 + 32) = v38;
      *(_OWORD *)a16 = v39;
      v41 = *(__int128 *)((char *)v22 + 284);
      v40 = *(__int128 *)((char *)v22 + 300);
      v42 = *(__int128 *)((char *)v22 + 268);
      *(_DWORD *)(a16 + 96) = *((_DWORD *)v22 + 79);
      *(_OWORD *)(a16 + 64) = v41;
      *(_OWORD *)(a16 + 80) = v40;
      *(_OWORD *)(a16 + 48) = v42;
      memcpy(a14, (char *)v22 + 402, 4 * *((unsigned __int8 *)v22 + 493));
      *a17 = *((unsigned __int16 *)v22 + 241);
      bzero((char *)v22 - 118, 0x264uLL);
      result = v44;
      a2 = v45;
      a3 = v46;
      __dst = v43;
      ++v21;
      v22 += 67;
    }
    while (v21 < dword_100994BF4);
  }
  return result;
}

void sub_1001734E0(uint64_t a1)
{
  NSObject *v2;

  if ((_DWORD)a1 && sub_10005549C())
  {
    sub_100054530("SetBidirectionalMaxPowerMode completed with error %!", a1);
    v2 = sub_1000544A0(0x56u);
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
      sub_1006CEEC0();
  }
}

uint64_t sub_10017354C(int a1, unsigned __int16 *a2)
{
  uint64_t result;
  const char *v5;
  NSObject *v6;
  uint8_t buf[4];
  void *v8;

  result = sub_1001F4E24();
  if (result >= 0x7D0)
  {
    result = sub_1001F4E24();
    if (result <= 0xF9F)
    {
      if (sub_10005549C())
      {
        v5 = "Disabling";
        if (a1)
          v5 = "Enabling";
        sub_100054530("%s bidirectional max power mode for handle 0x%x", v5, *a2);
        v6 = sub_1000544A0(0x56u);
        if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 136446210;
          v8 = sub_100054494();
          _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      return sub_1001FDB14();
    }
  }
  return result;
}

const char *sub_100173660(int a1)
{
  if (a1 <= 2)
  {
    if (a1 == 1)
      return "LE";
    if (a1 == 2)
      return "BT";
  }
  else
  {
    switch(a1)
    {
      case 3:
        return "WL";
      case 16:
        return "USB";
      case 17:
        return "AWDL";
    }
  }
  return "??";
}

void sub_1001736D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v8;
  uint64_t *v9;
  _DWORD *v10;
  unsigned int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  NSObject *v49;
  uint8_t buf[4];
  const char *v51;

  sub_100253320((uint64_t)"Transport Switch: lNbTsPeers %d\n", a2, a3, a4, a5, a6, a7, a8, dword_100994BF4);
  if (!dword_100994BF4)
    goto LABEL_8;
  v8 = 0;
  do
  {
    v9 = &qword_100994C30[134 * v8];
    sub_100173108(*((_DWORD *)v9 + 12));
    v10 = v9 + 9;
    v11 = (unsigned int *)&qword_100994C30[134 * v8];
    sub_100253320((uint64_t)">> Peer %d: version %d, connectionHandle=%p, lm=0x%4x, pipeID=0x%4x, nbTransportHandles=%d, state=%s, nbCaps=%d, currenTech=%s, updateTech=%s, localReq=%s, remoteReq=%s, leRSSI=%d\n", v12, v13, v14, v15, v16, v17, v18, v8);
    sub_100253320((uint64_t)"messageTimer=0x%x, samplingConfirmCount=%d, totalBytesQueued=%d, bytesSentOnTransport=%d, chipFull=%d, weightedLength=%d\n", v19, v20, v21, v22, v23, v24, v25, v11[13]);
    sub_100253320((uint64_t)"weightedInterPacketGap=%d, numOfEwmaSamples=%d, transportSelectReason=0x%x, calculatedTransportIndex=%d, actionToBeConfirm=%d, prevTSAction=%d, upgradeCount=%d\n", v26, v27, v28, v29, v30, v31, v32, v11[26]);
    sub_100253320((uint64_t)"timeSpentUpgraded=%d, overrideIncomingRate=%d, overrideOutgoingRate=%d, overridePacketRate=%d, forceClassic=%d, bidirectionalMaxPowerModeAction=%d, bidirectionalMaxPowerModeActionPending=%d\n", v33, v34, v35, v36, v37, v38, v39, v11[56]);
    if (*v10)
    {
      v47 = 0;
      v48 = 0;
      do
      {
        sub_100253320((uint64_t)"Cap %d is {id=%d, tech=%s, usable=%d, tput=%d, latency=%d, power=%d, extra=%d, common=%d}", v40, v41, v42, v43, v44, v45, v46, v48++);
        v47 += 64;
      }
      while (v48 < *v10);
    }
    ++v8;
  }
  while (v8 < dword_100994BF4);
  if (!dword_100994BF4)
  {
LABEL_8:
    v49 = sub_1000544A0(0x5Cu);
    if (os_log_type_enabled(v49, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      v51 = "No Transport Switching.\n";
      _os_log_impl((void *)&_mh_execute_header, v49, OS_LOG_TYPE_DEFAULT, "%{public}s", buf, 0xCu);
    }
  }
}

uint64_t sub_100173BC8(_DWORD *a1, _DWORD *a2, _DWORD *a3, _DWORD *a4, _DWORD *a5, _DWORD *a6, _BYTE *a7, _QWORD *a8, _QWORD *a9)
{
  uint64_t result;
  uint64_t v18;

  v18 = 0;
  result = sub_100113518((uint64_t)&v18);
  if (a1)
    *a1 = dword_100994BF4 != 0;
  if (dword_100994BF4)
  {
    if (a2)
      *a2 = dword_100994CF0;
    if (a3)
      *a3 = v18;
    if (a4)
      *a4 = dword_100994CF8;
    if (a5)
      *a5 = dword_100994CFC;
    if (a9)
      *a9 = qword_100994C30[0];
    if (a6)
      *a6 = dword_100994C60;
    if (a7)
      *a7 = byte_100994C7C;
    if (a8)
      *a8 = 1000 * ((int)v18 - dword_100994D00) - word_100994D04 + SWORD2(v18);
  }
  return result;
}

uint64_t sub_100173CF4(int a1)
{
  uint64_t v1;
  uint64_t *i;
  uint64_t *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;

  if (!dword_100994BF4)
    return 0;
  v1 = 0;
  for (i = &qword_100994C40; ; i += 134)
  {
    if (LOWORD(qword_100994C30[134 * v1 + 1]) == a1)
    {
      v3 = &qword_100994C30[134 * v1];
      v4 = *((unsigned __int8 *)v3 + 10);
      v5 = i;
      if (*((_BYTE *)v3 + 10))
        break;
    }
LABEL_7:
    if (++v1 == dword_100994BF4)
      return 0;
  }
  while (1)
  {
    v6 = *v5;
    if (*v5)
      return v6;
    v5 += 2;
    if (!--v4)
      goto LABEL_7;
  }
}

uint64_t sub_100173D68(uint64_t a1)
{
  uint64_t v1;
  __int16 *i;

  v1 = dword_100994BF4;
  if (!dword_100994BF4)
    return 0xFFFFLL;
  for (i = &word_100994C38; *((_QWORD *)i - 1) != a1; i += 536)
  {
    if (!--v1)
      return 0xFFFFLL;
  }
  return (unsigned __int16)*i;
}

uint64_t sub_100173DA4(uint64_t a1)
{
  uint64_t v1;
  unsigned int v2;
  int v3;
  uint64_t v4;
  char i;
  char v6;
  char j;
  char v8;

  v1 = 0;
  v2 = *(_DWORD *)(a1 + 48);
  if (v2 <= 0xC)
  {
    v3 = 1 << v2;
    if ((v3 & 0x780) != 0)
    {
      v4 = 0;
      for (i = 1; ; i = 0)
      {
        v6 = i;
        if (*(unsigned __int8 *)(a1 + 77) == *(unsigned __int8 *)(a1 + 16 * v4 + 24))
          break;
        v4 = 1;
        if ((v6 & 1) == 0)
          return 0;
      }
      return *(_QWORD *)(a1 + 16 * v4 + 16);
    }
    if ((v3 & 0x1840) != 0)
    {
      if (*(_BYTE *)(a1 + 10))
      {
        v4 = 0;
        for (j = 1; ; j = 0)
        {
          v8 = j;
          if (*(unsigned __int8 *)(a1 + 16 * v4 + 24) == *(unsigned __int8 *)(a1 + 76))
            break;
          v4 = 1;
          if ((v8 & 1) == 0)
            return 0;
        }
        return *(_QWORD *)(a1 + 16 * v4 + 16);
      }
      return 0;
    }
  }
  return v1;
}

uint64_t sub_100173E4C(uint64_t result)
{
  dword_100978DF0 = result;
  return result;
}

uint64_t sub_100173E58(uint64_t a1, unsigned __int16 *a2)
{
  unsigned __int16 *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t *v11;
  int v13;
  BOOL v14;
  int v15;
  int v16;
  NSObject *v17;
  void *v18;
  unint64_t i;
  NSObject *v20;
  void *v21;
  unint64_t v22;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  unint64_t v27;
  uint8_t buf[4];
  void *v29;
  _OWORD v30[12];
  uint64_t v31;

  v3 = (unsigned __int16 *)a1;
  v4 = 99;
  v27 = 99;
  v31 = 0;
  memset(v30, 0, sizeof(v30));
  if (a1 && a2)
  {
    if (*((_BYTE *)a2 + 2))
      a1 = (uint64_t)a2;
    sub_1000EF7B4(a1, (uint64_t)v30, &v27);
    v4 = v27;
  }
  v5 = dword_100994BF4;
  if (dword_100994BF4)
  {
    v6 = 0;
    v7 = &qword_100994C40;
    while (1)
    {
      v8 = qword_100994C30[134 * v6];
      if ((unsigned __int16 *)v8 == v3 || v8 == (_QWORD)a2)
        break;
      v10 = BYTE2(qword_100994C30[134 * v6 + 1]);
      v11 = v7;
      if (BYTE2(qword_100994C30[134 * v6 + 1]))
      {
        while ((unsigned __int16 *)*v11 != v3 && *v11 != (_QWORD)a2)
        {
          v11 += 2;
          if (!--v10)
            goto LABEL_18;
        }
        v13 = LOWORD(qword_100994C30[134 * v6 + 1]);
        *((_WORD *)v30 + v4) = v13;
      }
      else
      {
LABEL_18:
        v13 = *((unsigned __int16 *)v30 + v4);
      }
      ++v6;
      v7 += 134;
      if (v13)
        v14 = 1;
      else
        v14 = v6 == v5;
      if (v14)
        goto LABEL_27;
    }
    *((_WORD *)v30 + v4) = qword_100994C30[134 * v6 + 1];
  }
LABEL_27:
  v27 = v4 + 1;
  if (!v3)
  {
    v15 = 0;
    if (a2)
      goto LABEL_29;
LABEL_31:
    v16 = 0;
    goto LABEL_32;
  }
  v15 = *v3;
  if (!a2)
    goto LABEL_31;
LABEL_29:
  v16 = *a2;
LABEL_32:
  if (sub_10005549C())
  {
    sub_100054530("Moving channels from %p (0x%2x) to %p (0x%2x) with an exception:", v3, v15, a2, v16);
    v17 = sub_1000544A0(0x56u);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      v18 = sub_100054494();
      *(_DWORD *)buf = 136446210;
      v29 = v18;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (v27)
  {
    for (i = 0; i < v27; ++i)
    {
      if (sub_10005549C())
      {
        sub_100054530("\tCID:0x%4x", *((unsigned __int16 *)v30 + i));
        v20 = sub_1000544A0(0x56u);
        if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
        {
          v21 = sub_100054494();
          *(_DWORD *)buf = 136446210;
          v29 = v21;
          _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      v22 = v27;
    }
  }
  else
  {
    v22 = 0;
  }
  sub_1001F19E4(v3, a2, (unsigned __int16 *)v30, v22);
  sub_1001F37D8((uint64_t)v3);
  sub_1001F37D8((uint64_t)a2);
  if (!*((_BYTE *)a2 + 2))
  {
    if (!*((_BYTE *)a2 + 144))
    {
      v24 = sub_1001DCD0C((uint64_t)a2);
      if ((_DWORD)v24)
      {
        v25 = v24;
        if (sub_10005549C())
        {
          sub_100054530("TS setting LSTO error %!", v25);
          v26 = sub_1000544A0(0x56u);
          if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
            sub_1006CEEC0();
        }
      }
    }
    if (!*((_BYTE *)a2 + 2))
    {
      *(unsigned __int16 *)((char *)a2 + 25) = *(unsigned __int16 *)((char *)v3 + 25);
      a2[14] = v3[14];
    }
  }
  return 0;
}

uint64_t sub_1001741B4(unsigned __int16 *a1)
{
  NSObject *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t *v7;
  NSObject *v8;
  NSObject *v10;
  NSObject *v11;

  if (sub_10005549C())
  {
    sub_100054530("Force disconnecting this channel %p", a1);
    v2 = sub_1000544A0(0x56u);
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
  if (dword_100994BF4)
  {
    v3 = 0;
    v4 = &qword_100994C40;
    while (1)
    {
      v5 = &qword_100994C30[134 * v3];
      if ((unsigned __int16 *)*v5 == a1)
        break;
      v6 = BYTE2(qword_100994C30[134 * v3 + 1]);
      v7 = v4;
      if (BYTE2(qword_100994C30[134 * v3 + 1]))
      {
        while ((unsigned __int16 *)*v7 != a1)
        {
          v7 += 2;
          if (!--v6)
            goto LABEL_10;
        }
        if (sub_10005549C())
        {
          sub_100054530("Disconnecting peer %d", LOWORD(qword_100994C30[134 * v3 + 1]));
          v10 = sub_1000544A0(0x56u);
          if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
            goto LABEL_17;
        }
        return sub_10021F3D0(*v5);
      }
LABEL_10:
      ++v3;
      v4 += 134;
      if (v3 == dword_100994BF4)
        goto LABEL_11;
    }
    if (sub_10005549C())
    {
      sub_100054530("Disconnecting peer %d", LOWORD(qword_100994C30[134 * v3 + 1]));
      v11 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
LABEL_17:
        sub_1006CE7A4();
    }
    return sub_10021F3D0(*v5);
  }
  else
  {
LABEL_11:
    if (sub_10005549C())
    {
      sub_100054530("Unknown lmhandle 0x%4x", *a1);
      v8 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 122;
  }
}

void sub_100174388(uint64_t a1, int *a2, unsigned __int16 *a3)
{
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  char v8;
  uint64_t v9;
  uint64_t *v10;
  _BOOL4 v11;
  NSObject *v12;
  char v13;
  uint64_t v14;
  unsigned __int16 *v15;
  int v16;
  NSObject *v17;
  void *v18;
  char v19;
  int v20;
  __int16 v21;
  uint8_t buf[4];
  void *v23;

  v19 = 0;
  v20 = *a2;
  v21 = *((_WORD *)a2 + 2);
  v5 = sub_10019AFA0(&v19);
  if (!(_DWORD)a1
    || !sub_10005549C()
    || (!a3 ? (v6 = 0) : (v6 = *a3),
        sub_100054530("TS connection completed with status %! with lmhandle 0x%4x (0x%x)", a1, v6, a3),
        v7 = sub_1000544A0(0x56u),
        !os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)))
  {
    if (v5)
      goto LABEL_8;
LABEL_29:
    if (sub_10005549C())
    {
      sub_100054530("ACL connection complete, not a TS handle");
      v17 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v18 = sub_100054494();
        *(_DWORD *)buf = 136446210;
        v23 = v18;
        _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    return;
  }
  sub_1006CEEC0();
  if (!v5)
    goto LABEL_29;
LABEL_8:
  if (!a3)
  {
    if (sub_10005549C())
    {
      sub_100054530("TS connection complete, classicHandle is invalid");
      v12 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
        sub_1006CEEC0();
    }
    v8 = 0;
    goto LABEL_20;
  }
  v8 = sub_10024B768((uint64_t)a3);
  if ((_DWORD)a1 || !*(_BYTE *)(v5 + 70))
  {
LABEL_20:
    sub_1001745C8((unsigned __int16 *)v5, (uint64_t)a3, a1, v8);
    return;
  }
  v9 = dword_100994BF4;
  if (dword_100994BF4)
  {
    v10 = &qword_100994C40;
    while (*(v10 - 2) != v5)
    {
      v10 += 134;
      if (!--v9)
        goto LABEL_15;
    }
    v13 = 0;
    v14 = 0;
    do
    {
      v15 = (unsigned __int16 *)v10[2 * v14];
      if ((v13 & 1) != 0)
        break;
      v13 = 1;
      v14 = 1;
    }
    while (v15 != a3);
    v11 = v15 != a3;
  }
  else
  {
LABEL_15:
    v11 = 1;
  }
  v16 = sub_1001745C8((unsigned __int16 *)v5, (uint64_t)a3, a1, v8);
  if (v11 && !v16)
    sub_10018007C((uint64_t)a3);
}

uint64_t sub_1001745C8(unsigned __int16 *a1, uint64_t a2, uint64_t a3, char a4)
{
  NSObject *v8;
  uint64_t result;
  int v10;
  NSObject *v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t *v14;
  NSObject *v15;
  uint64_t *v16;
  unsigned __int8 *v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  int v22;
  _BOOL4 v23;
  uint64_t *v24;
  int v25;
  _BOOL4 v26;
  int v27;
  unsigned __int16 *v28;
  uint64_t v29;
  int *v30;
  uint64_t *v31;
  unsigned int v32;
  NSObject *v33;
  int *v34;
  uint64_t v35;
  unsigned __int16 *v36;
  unsigned int v37;
  NSObject *v38;
  __int128 *v39;
  unsigned int v40;
  NSObject *v41;
  int *v42;
  unsigned int v43;
  uint64_t *v44;
  uint64_t v45;
  _BYTE *v46;
  unsigned int v47;
  uint64_t *v48;
  uint64_t v49;
  unsigned int v50;
  uint64_t *v51;
  _QWORD *v52;
  _BYTE *v53;
  uint64_t *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t *v57;
  char v58;
  NSObject *v59;
  NSObject *v60;
  uint8_t buf[4];
  void *v62;

  if (!a1 && !(_DWORD)a3)
  {
    if (sub_10005549C())
    {
      sub_100054530("No LE connection for this new connection.");
      v8 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 5009;
  }
  if (!a1 && (_DWORD)a3)
  {
    v10 = sub_10005549C();
    result = 0;
    if (!v10)
      return result;
    sub_100054530("BT connection failed and LE is gone anyways - dropping the message.");
    v11 = sub_1000544A0(0x56u);
    v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);
    result = 0;
    if (!v12)
      return result;
LABEL_35:
    *(_DWORD *)buf = 136446210;
    v62 = sub_100054494();
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    return 0;
  }
  if (dword_100994BF4)
  {
    v13 = 0;
    v14 = qword_100994C30;
    while ((unsigned __int16 *)*v14 != a1)
    {
      ++v13;
      v14 += 134;
      if (dword_100994BF4 == v13)
        goto LABEL_16;
    }
  }
  else
  {
LABEL_16:
    LODWORD(v13) = 16;
  }
  if (v13 >= dword_100994BF4)
  {
    v22 = sub_10005549C();
    result = 0;
    if (!v22)
      return result;
    sub_100054530("Ignoring connection complete - connected a device from an LE but we weren't tracking it.");
    v11 = sub_1000544A0(0x56u);
    v23 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);
    result = 0;
    if (!v23)
      return result;
    goto LABEL_35;
  }
  if (a1 && (_DWORD)a3)
  {
    if (off_100994C20)
      off_100994C20(a1, 81, 1644, a3);
    if (sub_1000F0414((uint64_t)a1))
    {
      sub_100175A18(a1);
      if ((_DWORD)a3 == 708)
      {
        if (BYTE5(qword_100994C30[134 * v13 + 55]))
        {
          sub_100113518((uint64_t)&qword_100994C30[134 * v13 + 20]);
          if (sub_10005549C())
          {
            sub_100054530("TS Connection timeout timestamped at %d:%d. Connection start %d:%d", LODWORD(qword_100994C30[134 * v13 + 20]), SWORD2(qword_100994C30[134 * v13 + 20]), LODWORD(qword_100994C30[134 * v13 + 24]), LODWORD(qword_100994C30[134 * v13 + 24]));
            v38 = sub_1000544A0(0x56u);
            if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR))
              sub_1006CEEC0();
          }
        }
      }
      else if ((_DWORD)a3 == 717)
      {
        if (sub_10005549C())
        {
          sub_100054530("Controller returning transport switch with error %!, retry. Current count %d, version 0x%x", 717, HIBYTE(qword_100994C30[134 * v13 + 9]), LODWORD(qword_100994C30[134 * v13 + 7]));
          v15 = sub_1000544A0(0x56u);
          if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
            sub_1006CEEC0();
        }
        v16 = &qword_100994C30[134 * v13];
        v18 = *((unsigned __int8 *)v16 + 79);
        v17 = (unsigned __int8 *)v16 + 79;
        if (v18 > 7)
        {
          if (!sub_10005549C())
            goto LABEL_95;
          sub_100054530("Error count exceeds threshold %d and RSSI was %d", 8, HIDWORD(qword_100994C30[134 * v13 + 23]));
          v60 = sub_1000544A0(0x56u);
          if (!os_log_type_enabled(v60, OS_LOG_TYPE_ERROR))
            goto LABEL_95;
        }
        else
        {
          v19 = sub_1001771C0((uint64_t)a1);
          if (!(_DWORD)v19)
            goto LABEL_95;
          v20 = v19;
          if (!sub_10005549C())
            goto LABEL_95;
          sub_100054530("Upgrade retry failed with status %!", v20);
          v21 = sub_1000544A0(0x56u);
          if (!os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
            goto LABEL_95;
        }
        sub_1006CEEC0();
LABEL_95:
        result = 0;
        ++*v17;
        return result;
      }
      v39 = (__int128 *)a1;
      v40 = 4;
LABEL_61:
      sub_100177418(v39, v40);
      return 0;
    }
    v31 = &qword_100994C30[134 * v13];
    v32 = *((unsigned __int8 *)v31 + 79);
    v17 = (unsigned __int8 *)v31 + 79;
    if (v32 <= 7)
    {
      if (sub_10005549C())
      {
        sub_100054530("Peripheral connection complete with status %!, retry %d is under limit. Version 0x%x", a3, *v17, LODWORD(qword_100994C30[134 * v13 + 7]));
        v33 = sub_1000544A0(0x56u);
        if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 136446210;
          v62 = sub_100054494();
          _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      goto LABEL_95;
    }
    v36 = a1;
    v37 = 4;
    goto LABEL_55;
  }
  if (!a1 || (_DWORD)a3)
    sub_100253460();
  v24 = &qword_100994C30[134 * v13];
  v25 = *((unsigned __int8 *)v24 + 79);
  *((_BYTE *)v24 + 79) = 0;
  v26 = sub_1000F0414((uint64_t)a1);
  v28 = (unsigned __int16 *)(v24 + 1);
  v27 = *((unsigned __int16 *)v24 + 4);
  v29 = dword_100994BF4;
  if (v26)
  {
    if (!dword_100994BF4)
      goto LABEL_65;
    v30 = &dword_100994C60;
    while (*((unsigned __int16 *)v30 - 20) != v27)
    {
      v30 += 268;
      if (!--v29)
        goto LABEL_65;
    }
    if (*v30 != 8)
    {
LABEL_65:
      if (sub_10005549C())
      {
        sub_100054530("Got an upgrade we were not tracking !");
        v41 = sub_1000544A0(0x56u);
        if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      return 5010;
    }
  }
  else
  {
    if (!dword_100994BF4)
      goto LABEL_88;
    v34 = &dword_100994C60;
    v35 = dword_100994BF4;
    while (*((unsigned __int16 *)v34 - 20) != v27)
    {
      v34 += 268;
      if (!--v35)
        goto LABEL_70;
    }
    if (*v34 == 8)
      goto LABEL_75;
LABEL_70:
    v42 = &dword_100994C60;
    while (*((unsigned __int16 *)v42 - 20) != v27)
    {
      v42 += 268;
      if (!--v29)
        goto LABEL_88;
    }
    if (*v42 != 10)
    {
LABEL_88:
      if (sub_10005549C())
      {
        sub_100054530("Got an upgrade we were not tracking !");
        v59 = sub_1000544A0(0x56u);
        if (os_log_type_enabled(v59, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      return 5011;
    }
  }
LABEL_75:
  v43 = v13;
  v44 = &qword_100994C30[134 * v13];
  v47 = *((unsigned __int8 *)v44 + 10);
  v46 = (char *)v44 + 10;
  v45 = v47;
  if (v47)
  {
    v48 = &qword_100994C30[134 * v43 + 2];
    v49 = v45;
    while (*v48 != a2)
    {
      v48 += 2;
      if (!--v49)
      {
        v50 = 0;
        v51 = &qword_100994C30[134 * v43];
        v52 = v51 + 4;
        v53 = v51 + 5;
        do
        {
          v54 = &qword_100994C30[134 * v43 + 2 * v50];
          v56 = v54[2];
          v55 = v54 + 2;
          if (v56 == a2)
          {
            *v55 = 0;
            if (!v50)
            {
              *v55 = *v52;
              LOBYTE(qword_100994C30[134 * v43 + 3]) = *v53;
              *v52 = 0;
            }
            v50 = 0;
            LOBYTE(v45) = v45 - 1;
            *v46 = v45;
          }
          ++v50;
        }
        while (v50 < v45);
        goto LABEL_85;
      }
    }
    goto LABEL_100;
  }
LABEL_85:
  qword_100994C30[134 * v43 + 2 + 2 * v45] = a2;
  if (*(_BYTE *)(a2 + 2) == 8)
  {
    v57 = &qword_100994C30[134 * v43 + 2 * v45];
    v58 = 17;
  }
  else
  {
    if (*(_BYTE *)(a2 + 2))
    {
      sub_100253460();
      LOBYTE(v45) = *v46;
      goto LABEL_99;
    }
    v57 = &qword_100994C30[134 * v43 + 2 * v45];
    v58 = 2;
  }
  *((_BYTE *)v57 + 24) = v58;
LABEL_99:
  *v46 = v45 + 1;
LABEL_100:
  sub_1001779BC((uint64_t)v24, 0, 1, v25);
  sub_10017532C((unsigned __int16 *)a2);
  if (!*(_BYTE *)(a2 + 2) && !sub_1000F0414((uint64_t)a1))
    *(_BYTE *)(a2 + 196) = 1;
  if (!sub_1000F0460((uint64_t)a1) || (a4 & 1) != 0)
  {
    if (sub_1000F0414((uint64_t)a1))
    {
      sub_100173E58((uint64_t)a1, (unsigned __int16 *)a2);
      v39 = (__int128 *)a1;
      v40 = 0;
      goto LABEL_61;
    }
    v36 = a1;
    v37 = 0;
LABEL_55:
    sub_100177594(v36, v37);
    return 0;
  }
  if (!sub_10019AB28(a2))
    sub_100253460();
  sub_100175704(*v28, 9u);
  result = sub_1000F0414((uint64_t)a1);
  if ((_DWORD)result)
  {
    result = sub_10024F5A8(sub_100177F20, a2 + 48, 1048579, (uint64_t)&unk_10073A100, *v28, 0);
    if ((_DWORD)result)
    {
      sub_100177418((__int128 *)a1, 4u);
      return 5012;
    }
  }
  return result;
}

uint64_t sub_100174DF8(uint64_t result, uint64_t a2)
{
  unsigned __int8 v2;
  uint64_t v3;

  if (result)
  {
    v2 = a2;
    v3 = result;
    result = sub_100174E38(result, a2);
    if ((_DWORD)result)
      return sub_10018014C(v3, v2);
  }
  return result;
}

BOOL sub_100174E38(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  BOOL v4;
  uint64_t *i;
  uint64_t *v6;
  char v7;
  _BYTE *v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t *v11;
  unsigned __int16 **v12;
  unsigned __int16 **v13;
  unsigned __int16 *v14;
  uint64_t *v15;
  unsigned int v16;
  const char *v17;
  unsigned int v18;
  const char *v19;
  uint64_t *v20;
  const char *v21;
  NSObject *v22;
  uint64_t *v23;
  unsigned __int16 *v24;
  int v25;
  char v27;
  int v28;
  uint64_t v29;
  int *v30;
  uint8_t buf[4];
  void *v33;

  if (!dword_100994BF4)
    return 0;
  v3 = 0;
  v4 = 1;
  for (i = &qword_100994C40; ; i += 134)
  {
    v6 = &qword_100994C30[134 * v3];
    v9 = *((unsigned __int8 *)v6 + 10);
    v8 = (char *)v6 + 10;
    v7 = v9;
    v10 = v9;
    v11 = i;
    if (v9)
      break;
LABEL_6:
    v4 = ++v3 < dword_100994BF4;
    if (v3 == dword_100994BF4)
      return 0;
  }
  while (*v11 != a1)
  {
    v11 += 2;
    if (!--v10)
      goto LABEL_6;
  }
  v12 = (unsigned __int16 **)&qword_100994C30[134 * v3];
  v14 = *v12;
  v13 = v12 + 2;
  *v8 = v7 - 1;
  *v11 = 0;
  sub_100173E58(a1, v14);
  if (*v8 && !*v13)
  {
    v15 = &qword_100994C30[134 * v3];
    *v13 = (unsigned __int16 *)v15[4];
    *((_BYTE *)v13 + 8) = *((_BYTE *)v15 + 40);
    v15[4] = 0;
  }
  if (sub_10005549C())
  {
    v16 = BYTE4(qword_100994C30[134 * v3 + 9]);
    if (v16 <= 2)
    {
      if (v16 == 1)
      {
        v17 = "LE";
        goto LABEL_24;
      }
      if (v16 == 2)
      {
        v17 = "BT";
        goto LABEL_24;
      }
    }
    else
    {
      switch(v16)
      {
        case 3u:
          v17 = "WL";
          goto LABEL_24;
        case 0x10u:
          v17 = "USB";
          goto LABEL_24;
        case 0x11u:
          v17 = "AWDL";
          goto LABEL_24;
      }
    }
    v17 = "??";
LABEL_24:
    v18 = BYTE5(qword_100994C30[134 * v3 + 9]);
    if (v18 <= 2)
    {
      if (v18 == 1)
      {
        v19 = "LE";
        goto LABEL_36;
      }
      if (v18 == 2)
      {
        v19 = "BT";
        goto LABEL_36;
      }
    }
    else
    {
      switch(v18)
      {
        case 3u:
          v19 = "WL";
          goto LABEL_36;
        case 0x10u:
          v19 = "USB";
          goto LABEL_36;
        case 0x11u:
          v19 = "AWDL";
          goto LABEL_36;
      }
    }
    v19 = "??";
LABEL_36:
    v20 = &qword_100994C30[134 * v3];
    v21 = sub_100173108(*((_DWORD *)v20 + 12));
    sub_100054530("Common transport disconnection: tech (current %s updating %s), state %s, pipeID %d, reason %!", v17, v19, v21, *((unsigned __int16 *)v20 + 4), a2);
    v22 = sub_1000544A0(0x56u);
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      v33 = sub_100054494();
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  v23 = &qword_100994C30[134 * v3];
  v25 = *((unsigned __int16 *)v23 + 4);
  v24 = (unsigned __int16 *)(v23 + 1);
  sub_100178400(v25);
  if (*((_BYTE *)v24 + 68) == 2)
  {
    sub_100178400(*v24);
    sub_100175D48(v3, 1);
    v27 = (_DWORD)a2 == 705 || (_DWORD)a2 == 723;
    sub_100175F58((unsigned __int16)v3, 2, v27);
    v28 = *v24;
    v29 = dword_100994BF4;
    if (!dword_100994BF4)
      goto LABEL_51;
    v30 = &dword_100994C60;
    while (*((unsigned __int16 *)v30 - 20) != v28)
    {
      v30 += 268;
      if (!--v29)
        goto LABEL_51;
    }
    if (*v30 != 6)
    {
LABEL_51:
      sub_100175704(v28, 6u);
      sub_100175A18((unsigned __int16 *)qword_100994C30[134 * v3]);
    }
    HIWORD(qword_100994C30[134 * v3 + 55]) = 0;
  }
  return v4;
}

uint64_t sub_100175198(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v8;
  NSObject *v9;
  uint8_t buf[4];
  void *v11;

  if (!byte_100978DEC || !dword_100994BF4)
    return 101;
  v2 = 0;
  while (1)
  {
    if (a1 && qword_100994C30[134 * v2] == a1)
    {
      v3 = v2;
      if (BYTE4(qword_100994C30[134 * v2 + 9]) != 2)
        return 5008;
      if (v2 < BYTE2(qword_100994C30[134 * v2 + 1]))
        break;
    }
LABEL_13:
    if (++v2 >= dword_100994BF4)
      return 101;
  }
  v4 = &qword_100994C30[134 * v2];
  while (*((_BYTE *)v4 + 24) != 2 || !v4[2])
  {
    v5 = *((unsigned __int8 *)v4 + 1082);
    v4 += 134;
    if (++v3 >= v5)
    {
      v2 = v3;
      goto LABEL_13;
    }
  }
  v8 = (858993460 * (unint64_t)(8 * a2)) >> 32;
  v6 = sub_10004C9BC(85, 0);
  if (sub_10005549C())
  {
    sub_100054530("TS setting flush timeout to %d ms with status %!", v8, v6);
    v9 = sub_1000544A0(0x56u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      v11 = sub_100054494();
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  return v6;
}

uint64_t sub_10017532C(unsigned __int16 *a1)
{
  NSObject *v2;
  void *v3;
  uint64_t v4;
  unsigned int v5;
  NSObject *v6;
  void *v7;
  BOOL v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  int v14;
  NSObject *v15;
  void *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  unsigned int v21;
  NSObject *v22;
  void *v23;
  uint64_t v24;
  unint64_t v26;
  uint8_t buf[4];
  void *v28;
  _OWORD v29[12];
  uint64_t v30;

  v26 = 99;
  v30 = 0;
  memset(v29, 0, sizeof(v29));
  if (a1)
    sub_1000EF7B4((uint64_t)a1, (uint64_t)v29, &v26);
  if (sub_10005549C())
  {
    sub_100054530("stallL2CAPForHandle Number of LeOnlyPipe CID %d", v26);
    v2 = sub_1000544A0(0x56u);
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      v3 = sub_100054494();
      *(_DWORD *)buf = 136446210;
      v28 = v3;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (v26)
  {
    v4 = 0;
    v5 = 1;
    do
    {
      if (sub_10005549C())
      {
        sub_100054530("stallL2CAPForHandle LeOnlyPipe CID 0x%4x", *((unsigned __int16 *)v29 + v4));
        v6 = sub_1000544A0(0x56u);
        if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
        {
          v7 = sub_100054494();
          *(_DWORD *)buf = 136446210;
          v28 = v7;
          _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      v4 = v5;
      v8 = v26 > v5++;
    }
    while (v8);
  }
  if (dword_100994BF4)
  {
    v9 = 0;
    v10 = &qword_100994C40;
    while ((unsigned __int16 *)qword_100994C30[134 * v9] != a1)
    {
      v11 = BYTE2(qword_100994C30[134 * v9 + 1]);
      v12 = v10;
      if (BYTE2(qword_100994C30[134 * v9 + 1]))
      {
        while ((unsigned __int16 *)*v12 != a1)
        {
          v12 += 2;
          if (!--v11)
            goto LABEL_20;
        }
        v13 = &qword_100994C30[134 * v9];
        v14 = *((unsigned __int16 *)v13 + 4);
        if (*((_WORD *)v13 + 4))
          goto LABEL_23;
      }
LABEL_20:
      ++v9;
      v10 += 134;
      if (v9 == dword_100994BF4)
        goto LABEL_21;
    }
    v14 = LOWORD(qword_100994C30[134 * v9 + 1]);
  }
  else
  {
LABEL_21:
    v14 = 0;
  }
LABEL_23:
  if (sub_10005549C())
  {
    sub_100054530("stallL2CAPForHandle lTsPeers cid 0x%4x", v14);
    v15 = sub_1000544A0(0x56u);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      v16 = sub_100054494();
      *(_DWORD *)buf = 136446210;
      v28 = v16;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  v17 = v26;
  if (v14)
  {
    if (v26)
    {
      v18 = 0;
      v19 = 1;
      while (*((unsigned __int16 *)v29 + v18) != v14)
      {
        v18 = v19;
        v8 = v26 > v19++;
        if (!v8)
          goto LABEL_31;
      }
      goto LABEL_33;
    }
LABEL_31:
    *((_WORD *)v29 + v26) = v14;
    v26 = ++v17;
  }
  if (!v17)
  {
    v24 = 0;
    return sub_1001F190C((uint64_t)a1, (unsigned __int16 *)v29, v24, 1);
  }
LABEL_33:
  v20 = 0;
  v21 = 1;
  do
  {
    if (sub_10005549C())
    {
      sub_100054530("Stalling lmhandle 0x%4x with an exception for cid 0x%4x", *a1, *((unsigned __int16 *)v29 + v20));
      v22 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
      {
        v23 = sub_100054494();
        *(_DWORD *)buf = 136446210;
        v28 = v23;
        _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    v20 = v21;
    v24 = v26;
    v8 = v26 > v21++;
  }
  while (v8);
  return sub_1001F190C((uint64_t)a1, (unsigned __int16 *)v29, v24, 1);
}

void sub_100175704(int a1, unsigned int a2)
{
  unint64_t v2;
  unint64_t v5;
  unsigned int *v6;
  const char *v7;
  const char *v8;
  NSObject *v9;
  void *v10;
  uint8_t buf[4];
  void *v12;

  v2 = dword_100994BF4;
  if (dword_100994BF4)
  {
    v5 = 0;
    v6 = (unsigned int *)&dword_100994C60;
    do
    {
      if (*((unsigned __int16 *)v6 - 20) == a1)
      {
        if (sub_10005549C())
        {
          v7 = sub_100173108(*v6);
          v8 = sub_100173108(a2);
          sub_100054530("Peer %d state updated %s -> %s", v5, v7, v8);
          v9 = sub_1000544A0(0x56u);
          if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
          {
            v10 = sub_100054494();
            *(_DWORD *)buf = 136446210;
            v12 = v10;
            _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
        *v6 = a2;
        v2 = dword_100994BF4;
      }
      v6 += 268;
      ++v5;
    }
    while (v5 < v2);
  }
}

uint64_t sub_100175850(unsigned __int16 *a1)
{
  NSObject *v2;
  uint8_t buf[4];
  void *v5;

  if (sub_10005549C())
  {
    sub_100054530("Lmhandle 0x%4x drained", *a1);
    v2 = sub_1000544A0(0x56u);
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      v5 = sub_100054494();
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  sub_1001A0FD0(0, 0, 0);
  return sub_1000EDB50();
}

uint64_t sub_100175928(uint64_t result, unsigned int a2)
{
  uint64_t v2;
  int *i;
  NSObject *v5;
  const void *v6[2];
  __int16 v7;

  v7 = result;
  v2 = dword_100994BF4;
  if (dword_100994BF4)
  {
    for (i = &dword_100994C64; *((unsigned __int16 *)i - 22) != (_DWORD)result; i += 268)
    {
      if (!--v2)
        return result;
    }
    v6[1] = &v7;
    v6[0] = (const void *)2;
    if (*i)
    {
      if (sub_10005549C())
      {
        sub_100054530("An older timer is still active, canceling a previously started timer (%x).", *i);
        v5 = sub_1000544A0(0x56u);
        if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
          sub_1006CEEC0();
      }
      sub_100049F6C(*i);
      *i = 0;
    }
    return sub_10004A9EC((uint64_t)sub_10017BFAC, v6, (unsigned __int16)(a2 / 0x64), i);
  }
  return result;
}

uint64_t sub_100175A18(unsigned __int16 *a1)
{
  NSObject *v2;
  uint8_t buf[4];
  void *v5;

  if (sub_10005549C())
  {
    sub_100054530("Unstalling lmhandle 0x%4x", *a1);
    v2 = sub_1000544A0(0x56u);
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      v5 = sub_100054494();
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  return sub_1001F190C((uint64_t)a1, 0, 0, 0);
}

uint64_t sub_100175AF0(unsigned __int16 *a1, int a2, uint64_t a3)
{
  uint64_t v6;
  __int16 *v7;
  uint64_t v8;
  NSObject *v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  char *i;
  int v14;
  NSObject *v15;
  void *v16;
  __int16 v18;
  char v19;
  uint8_t buf[4];
  void *v21;

  v6 = dword_100994BF4;
  if (dword_100994BF4)
  {
    v7 = &word_100994C38;
    while (*((unsigned __int16 **)v7 - 1) != a1)
    {
      v7 += 536;
      if (!--v6)
        goto LABEL_5;
    }
    v8 = (unsigned __int16)*v7;
  }
  else
  {
LABEL_5:
    v8 = 0xFFFFLL;
  }
  v18 = 289;
  v19 = a2;
  if (sub_10005549C())
  {
    sub_100054530("Sending DOWNGRADE_CFM to 0x%x", *a1);
    v9 = sub_1000544A0(0x56u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      v21 = sub_100054494();
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  v10 = sub_1000F1F44(0, a1, v8, &v18, 3, 0);
  if (v10 == 412)
    v11 = 0;
  else
    v11 = v10;
  if (!a2 && !(_DWORD)v11 && dword_100994BF4)
  {
    v12 = 0;
    for (i = &byte_100994C7C; *(unsigned __int16 **)(i - 76) != a1; i += 1072)
    {
      if (dword_100994BF4 == ++v12)
        return v11;
    }
    sub_100175704(*((unsigned __int16 *)i - 34), 6u);
    v14 = *i;
    sub_100175D48(v12, 1);
    sub_100173E58(a3, a1);
    sub_1000F3A68((uint64_t)a1, 0);
    sub_100175A18(a1);
    sub_100175F58((unsigned __int16)v12, v14, 0);
    if (i[1] != 1)
    {
      if (sub_10005549C())
      {
        sub_100054530("Requesting transport upgrade since this downgrade was triggered by a upgrade to different alternate transport");
        v15 = sub_1000544A0(0x56u);
        if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
        {
          v16 = sub_100054494();
          *(_DWORD *)buf = 136446210;
          v21 = v16;
          _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      sub_10017201C(a1, i[1], *((_DWORD *)i + 9));
    }
  }
  return v11;
}

void sub_100175D48(unsigned int a1, int a2)
{
  uint64_t *v3;
  unsigned int v4;
  _BYTE *v5;
  unsigned int v6;
  _DWORD *v7;
  unsigned int v8;
  const char *v9;
  const char *v10;
  NSObject *v11;
  uint8_t buf[4];
  void *v13;

  v3 = &qword_100994C30[134 * a1];
  v6 = *((unsigned __int8 *)v3 + 76);
  v5 = (char *)v3 + 76;
  v4 = v6;
  if (v6 >= a2)
  {
    v7 = (_DWORD *)&qword_100994C30[134 * a1 + 15] + 1;
    if (v4 <= a2)
      *v7 = 0;
    else
      *v7 = 2;
  }
  else
  {
    HIDWORD(qword_100994C30[134 * a1 + 15]) = 1;
  }
  if (!sub_10005549C())
    goto LABEL_33;
  v8 = *v5;
  if (v8 <= 2)
  {
    if (v8 == 1)
    {
      v9 = "LE";
      goto LABEL_19;
    }
    if (v8 == 2)
    {
      v9 = "BT";
      goto LABEL_19;
    }
  }
  else
  {
    switch(v8)
    {
      case 3u:
        v9 = "WL";
        goto LABEL_19;
      case 0x10u:
        v9 = "USB";
        goto LABEL_19;
      case 0x11u:
        v9 = "AWDL";
        goto LABEL_19;
    }
  }
  v9 = "??";
LABEL_19:
  if (a2 <= 2)
  {
    if (a2 == 1)
    {
      v10 = "LE";
      goto LABEL_31;
    }
    if (a2 == 2)
    {
      v10 = "BT";
      goto LABEL_31;
    }
  }
  else
  {
    switch(a2)
    {
      case 3:
        v10 = "WL";
        goto LABEL_31;
      case 16:
        v10 = "USB";
        goto LABEL_31;
      case 17:
        v10 = "AWDL";
        goto LABEL_31;
    }
  }
  v10 = "??";
LABEL_31:
  sub_100054530("Updating tech %s -> %s", v9, v10);
  v11 = sub_1000544A0(0x56u);
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136446210;
    v13 = sub_100054494();
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
  }
LABEL_33:
  *v5 = a2;
}

void sub_100175F58(unsigned int a1, int a2, char a3)
{
  uint64_t *v5;
  int v6;
  int v7;
  unsigned int v8;
  uint64_t v9;
  NSObject *v10;
  void *v11;
  uint64_t *v12;
  unsigned __int8 *v13;
  int v14;
  unint64_t v15;
  uint64_t *v16;
  unsigned int v17;
  const char *v18;
  NSObject *v19;
  void *v20;
  NSObject *v21;
  void *v22;
  NSObject *v23;
  void *v24;
  uint64_t v26;
  uint8_t buf[512];
  __int128 v28;
  __int128 v29;

  v26 = 0;
  v5 = &qword_100994C30[134 * a1];
  sub_100113518((uint64_t)&v26);
  v6 = SWORD2(v26) + 1000 * v26;
  v7 = *((__int16 *)v5 + 106) + 1000 * *((_DWORD *)v5 + 52);
  v8 = v6 - v7;
  if (v6 == v7)
    v9 = 0xFFFFFFFFLL;
  else
    v9 = 8 * HIDWORD(qword_100994C30[134 * a1 + 11]) / v8;
  if (sub_10005549C())
  {
    sub_100054530("Done with upgraded connection, %d total bytes sent in %d seconds (%d kbps)", HIDWORD(qword_100994C30[134 * a1 + 11]), v8 / 0x3E8, v9);
    v10 = sub_1000544A0(0x56u);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      v11 = sub_100054494();
      *(_DWORD *)buf = 136446210;
      *(_QWORD *)&buf[4] = v11;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  v12 = &qword_100994C30[134 * a1];
  sub_1001779BC((uint64_t)v5, (*((_DWORD *)v12 + 20) != 1) | (2 * (*((_DWORD *)v12 + 21) != 1)), a2, 0);
  v14 = *((unsigned __int8 *)v12 + 10);
  v13 = (unsigned __int8 *)v12 + 10;
  if (v14)
  {
    v15 = 0;
    v16 = &qword_100994C30[134 * a1 + 3];
    while (*(_BYTE *)v16 == 1 || !*(v16 - 1) || !sub_10005549C())
    {
LABEL_25:
      ++v15;
      v16 += 2;
      if (v15 >= *v13)
        goto LABEL_26;
    }
    v17 = *(unsigned __int8 *)v16;
    if (v17 <= 2)
    {
      v18 = "LE";
      if (v17 == 1)
        goto LABEL_23;
      if (v17 == 2)
      {
        v18 = "BT";
        goto LABEL_23;
      }
    }
    else
    {
      switch(v17)
      {
        case 3u:
          v18 = "WL";
          goto LABEL_23;
        case 0x10u:
          v18 = "USB";
          goto LABEL_23;
        case 0x11u:
          v18 = "AWDL";
          goto LABEL_23;
      }
    }
    v18 = "??";
LABEL_23:
    sub_100054530("Af ter downgrade, tech %s still available\n", v18);
    v19 = sub_1000544A0(0x56u);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      v20 = sub_100054494();
      *(_DWORD *)buf = 136446210;
      *(_QWORD *)&buf[4] = v20;
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
    goto LABEL_25;
  }
LABEL_26:
  if (a2 == 1)
  {
    if (sub_10005549C())
    {
      sub_100054530("Detected error in upgrade, past tech is LE");
      v21 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
      {
        v22 = sub_100054494();
        *(_DWORD *)buf = 136446210;
        *(_QWORD *)&buf[4] = v22;
        _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
  }
  else if (*((_QWORD *)&xmmword_100994BF8 + 1) && (a3 & 1) == 0)
  {
    (*((void (**)(uint64_t, uint64_t, uint64_t))&xmmword_100994BF8 + 1))(*v5, 1, v9);
    goto LABEL_36;
  }
  if (sub_10005549C())
  {
    sub_100054530("Skipping scalable pipe downCb due to upgrade error %x", DWORD2(xmmword_100994BF8));
    v23 = sub_1000544A0(0x56u);
    if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
    {
      v24 = sub_100054494();
      *(_DWORD *)buf = 136446210;
      *(_QWORD *)&buf[4] = v24;
      _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
LABEL_36:
  v28 = 0u;
  v29 = 0u;
  LOBYTE(v28) = 1;
  WORD1(v28) = 4;
  DWORD2(v28) = 1;
  LOBYTE(v29) = 1;
  WORD1(v29) = 4;
  DWORD2(v29) = v9;
  memcpy(buf, "state", sizeof(buf));
  sub_1001141C0("Magnet Operation", (const char *)buf, &v28, 2);
}

void sub_100176394(unsigned __int16 *a1)
{
  uint64_t v2;
  int *i;
  unint64_t v4;
  unsigned __int16 *v5;
  unsigned __int8 *v6;
  const char *v7;
  NSObject *v8;
  void *v9;
  unsigned int v10;
  unsigned int v11;
  unsigned __int16 *v12;
  int v13;
  NSObject *v14;
  void *v15;
  NSObject *v16;
  void *v17;
  uint8_t buf[4];
  void *v19;

  if (dword_100994BF4)
  {
    v2 = 0;
    for (i = &dword_100994C60; *((unsigned __int16 **)i - 6) != a1; i += 268)
    {
      if (dword_100994BF4 == ++v2)
        return;
    }
    if (*((_BYTE *)i - 38))
    {
      v4 = 0;
      v5 = 0;
      v6 = (unsigned __int8 *)(i - 6);
      while (1)
      {
        if (sub_10005549C())
        {
          v7 = *i == 6 ? " " : "not ";
          sub_100054530("New channel created while TS is %sIdle, state:%d index [%d, %d], transport [tech:%d, currentInUseTech:%d]", v7, *i, v2, v4, *v6, *((unsigned __int8 *)i + 28));
          v8 = sub_1000544A0(0x56u);
          if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
          {
            v9 = sub_100054494();
            *(_DWORD *)buf = 136446210;
            v19 = v9;
            _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
        v10 = *v6;
        v11 = *((unsigned __int8 *)i + 28);
        if (v10 != v11)
        {
          if (v10 <= v11 || (*i - 7) > 3)
            goto LABEL_23;
          if (sub_10005549C())
          {
            v12 = (unsigned __int16 *)*((_QWORD *)v6 - 1);
            if (v12)
              LODWORD(v12) = *v12;
            if (v5)
              v13 = *v5;
            else
              v13 = 0;
            sub_100054530("Updating lmhandle 0x%x -> 0x%x during encryption pending state", (_DWORD)v12, v13);
            v14 = sub_1000544A0(0x56u);
            if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
            {
              v15 = sub_100054494();
              *(_DWORD *)buf = 136446210;
              v19 = v15;
              _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
          }
        }
        v5 = (unsigned __int16 *)*((_QWORD *)v6 - 1);
LABEL_23:
        ++v4;
        v6 += 16;
        if (v4 >= *((unsigned __int8 *)i - 38))
          goto LABEL_29;
      }
    }
    v5 = 0;
LABEL_29:
    if (*i >= 7)
      sub_10017532C(a1);
    if (v5 && v5 != a1)
    {
      if (sub_10005549C())
      {
        sub_100054530("Faster tech available at the time of channel creation.  Moving channels\n");
        v16 = sub_1000544A0(0x56u);
        if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
        {
          v17 = sub_100054494();
          *(_DWORD *)buf = 136446210;
          v19 = v17;
          _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      sub_100173E58((uint64_t)a1, v5);
    }
  }
}

uint64_t sub_100176664(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t *v5;
  _BOOL4 v6;
  uint64_t result;
  unsigned int v8;
  unsigned int v9;
  int v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  unsigned int v14;

  v4 = dword_100994BF4;
  if (dword_100994BF4)
  {
    v5 = qword_100994C30;
    while (*v5 != a1)
    {
      v5 += 134;
      if (!--v4)
        goto LABEL_5;
    }
    result = sub_100173DA4((uint64_t)v5);
    if (result)
    {
      v11 = result;
      v12 = *(unsigned __int8 *)(result + 2);
      if (v12 == 8)
      {
        result = 0;
        v10 = 1460;
      }
      else
      {
        result = 0;
        if (v12)
        {
          v10 = 1015;
        }
        else if (*(_BYTE *)(v11 + 278))
        {
          v10 = 2570;
        }
        else
        {
          v10 = 2031;
        }
      }
    }
    else
    {
      v13 = *(unsigned __int16 *)(a1 + 104);
      v14 = *(_DWORD *)(a1 + 216) / v13;
      if (v14 <= 1)
        v14 = 1;
      if (v14 >= 0xF)
        v14 = 15;
      v10 = v14 * v13 - 6;
    }
    goto LABEL_25;
  }
LABEL_5:
  v6 = sub_10019AC00(a1);
  result = 601;
  if (a2 && v6)
  {
    v8 = *(unsigned __int16 *)(a1 + 104);
    v9 = *(_DWORD *)(a1 + 216) / v8;
    if (v9 <= 1)
      v9 = 1;
    if (v9 >= 0xF)
      v9 = 15;
    v10 = v9 * v8 - 6;
    result = 5007;
LABEL_25:
    *a2 = v10;
  }
  return result;
}

uint64_t sub_100176770(uint64_t a1, _QWORD *a2, int *a3)
{
  uint64_t result;
  void *v6;

  result = sub_100176664(a1, a3);
  if (!(_DWORD)result)
  {
    v6 = sub_100052DC0(*a3);
    *a2 = v6;
    if (v6)
      return 0;
    else
      return 106;
  }
  return result;
}

uint64_t sub_1001767B8(uint64_t result)
{
  byte_100978DEC = result ^ 1;
  return result;
}

void sub_1001767C8(uint64_t a1, uint64_t a2, int a3)
{
  NSObject *v5;
  uint64_t v6;
  __int16 *i;
  int v8;
  int v9;
  int v10;
  NSObject *v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  const char *v15;
  NSObject *v16;
  uint64_t v17;
  int *j;
  uint8_t buf[4];
  void *v20;

  if ((_DWORD)a2)
  {
    if (sub_10005549C())
    {
      sub_100054530("TS_LE_EncryptionCompleteCb completed with error %! with connectionHandle= %p ", a2, a1);
      v5 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        sub_1006CEEC0();
    }
  }
  else if (a1)
  {
    if (a3)
    {
      v6 = dword_100994BF4;
      if (dword_100994BF4)
      {
        for (i = &word_100994C38; *((_QWORD *)i - 1) != a1; i += 536)
        {
          if (!--v6)
            return;
        }
        v8 = (unsigned __int16)*i;
        if (v8 != 0xFFFF)
        {
          v9 = sub_1002307DC((_DWORD *)(a1 + 48));
          v10 = sub_10005549C();
          if (v9)
          {
            if (v10)
            {
              sub_100054530("Got encrypted but pairing is still in progress, waiting for pairing completion");
              v11 = sub_1000544A0(0x56u);
              if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)buf = 136446210;
                v20 = sub_100054494();
                _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
              }
            }
          }
          else
          {
            if (v10)
            {
              v12 = dword_100994BF4;
              if (dword_100994BF4)
              {
                v13 = (unsigned int *)&dword_100994C60;
                while (*((unsigned __int16 *)v13 - 20) != v8)
                {
                  v13 += 268;
                  if (!--v12)
                    goto LABEL_22;
                }
                v14 = *v13;
              }
              else
              {
LABEL_22:
                v14 = 0;
              }
              v15 = sub_100173108(v14);
              sub_100054530("Encryption complete, pipe state is %s", v15);
              v16 = sub_1000544A0(0x56u);
              if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)buf = 136446210;
                v20 = sub_100054494();
                _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
              }
            }
            v17 = dword_100994BF4;
            if (dword_100994BF4)
            {
              for (j = &dword_100994C60; *((unsigned __int16 *)j - 20) != v8; j += 268)
              {
                if (!--v17)
                  return;
              }
              if (*j == 1)
              {
                sub_100175704(v8, 2u);
                if (sub_1000F0414(a1))
                  sub_100176C24((__int128 *)a1);
              }
            }
          }
        }
      }
    }
  }
}

void sub_100176A28(_DWORD *a1, uint64_t a2, uint64_t a3)
{
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  __int16 *i;
  int v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  const char *v15;
  NSObject *v16;
  uint64_t v17;
  int *j;
  uint8_t buf[4];
  void *v20;

  if ((_DWORD)a3)
  {
    if (sub_10005549C())
    {
      sub_100054530("TS_LE_PairingCompleteCb completed with error %! with address=%: publicAddress=%: ", a3, a1, a2);
      v6 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
        sub_1006CEEC0();
    }
  }
  v7 = sub_10019AFA0(a1);
  if (v7)
  {
    v8 = dword_100994BF4;
    if (dword_100994BF4)
    {
      v9 = (__int128 *)v7;
      for (i = &word_100994C38; *((_QWORD *)i - 1) != v7; i += 536)
      {
        if (!--v8)
          return;
      }
      v11 = (unsigned __int16)*i;
      if (v11 != 0xFFFF)
      {
        if (sub_10005549C())
        {
          v12 = dword_100994BF4;
          if (dword_100994BF4)
          {
            v13 = (unsigned int *)&dword_100994C60;
            while (*((unsigned __int16 *)v13 - 20) != v11)
            {
              v13 += 268;
              if (!--v12)
                goto LABEL_17;
            }
            v14 = *v13;
          }
          else
          {
LABEL_17:
            v14 = 0;
          }
          v15 = sub_100173108(v14);
          sub_100054530("Got paired, pipe state is %s", v15);
          v16 = sub_1000544A0(0x56u);
          if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 136446210;
            v20 = sub_100054494();
            _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
        v17 = dword_100994BF4;
        if (dword_100994BF4)
        {
          for (j = &dword_100994C60; *((unsigned __int16 *)j - 20) != v11; j += 268)
          {
            if (!--v17)
              return;
          }
          if (*j == 1)
          {
            sub_100175704(v11, 2u);
            if (sub_1000F0414((uint64_t)v9))
              sub_100176C24(v9);
          }
        }
      }
    }
  }
}

void sub_100176C24(__int128 *a1)
{
  uint64_t v2;
  __int16 *v3;
  unsigned int v4;
  uint64_t v5;
  int *v6;
  NSObject *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  NSObject *v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  const char *v15;
  NSObject *v16;
  NSObject *v17;
  uint8_t buf[4];
  void *v19;

  v2 = dword_100994BF4;
  if (dword_100994BF4)
  {
    v3 = &word_100994C38;
    while (*((__int128 **)v3 - 1) != a1)
    {
      v3 += 536;
      if (!--v2)
        goto LABEL_5;
    }
    v4 = (unsigned __int16)*v3;
  }
  else
  {
LABEL_5:
    v4 = 0xFFFF;
  }
  if ((sub_1000F0460((uint64_t)a1) & 1) != 0)
  {
    v5 = dword_100994BF4;
    if (dword_100994BF4)
    {
      v6 = &dword_100994C60;
      while (*((unsigned __int16 *)v6 - 20) != v4)
      {
        v6 += 268;
        if (!--v5)
          goto LABEL_22;
      }
      if (*v6 == 2)
      {
        v8 = 13 * byte_100994BF0;
        v9 = (char *)sub_100052DC0(v8 + 7);
        if (v9)
        {
          v10 = v9;
          *v9 = 1;
          v9[1] = v8 + 5;
          *(_DWORD *)(v9 + 2) = 2;
          sub_100176EF8(v9 + 6);
          sub_100175704(v4, 3u);
          if (sub_10005549C())
          {
            sub_100054530("Sending VERSION_IND to lmhandle 0x%4x for pipe 0x%4x", *(unsigned __int16 *)a1, v4);
            v11 = sub_1000544A0(0x56u);
            if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 136446210;
              v19 = sub_100054494();
              _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
          }
          sub_1000F1F44(0, a1, v4, v10, v8 + 7, 0);
          sub_100053298(v10);
          return;
        }
        if (!sub_10005549C())
          return;
        sub_100054530("Failed to allocate %d bytes (%d transports)", v8 + 7, byte_100994BF0);
        v17 = sub_1000544A0(0x56u);
        if (!os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
          return;
LABEL_30:
        sub_1006CE7A4();
        return;
      }
    }
LABEL_22:
    if (sub_10005549C())
    {
      v12 = dword_100994BF4;
      if (dword_100994BF4)
      {
        v13 = (unsigned int *)&dword_100994C60;
        while (*((unsigned __int16 *)v13 - 20) != v4)
        {
          v13 += 268;
          if (!--v12)
            goto LABEL_27;
        }
        v14 = *v13;
      }
      else
      {
LABEL_27:
        v14 = 0;
      }
      v15 = sub_100173108(v14);
      sub_100054530("VERSION should only be send when in ENCRYPTED state. Current state is %s", v15);
      v16 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
        goto LABEL_30;
    }
  }
  else if (sub_10005549C())
  {
    sub_100054530("Link is not encrypted, can't send version");
    v7 = sub_1000544A0(0x56u);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
}

uint64_t sub_100176EF8(_BYTE *a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _BYTE *v4;

  *a1 = byte_100994BF0;
  if (!byte_100994BF0)
    return 1;
  v1 = 0;
  v2 = 0;
  v3 = 13;
  do
  {
    v4 = &a1[v3];
    *(v4 - 12) = 12;
    *(v4 - 11) = *(_BYTE *)(qword_100994BE8 + v1);
    *(v4 - 10) = *(_BYTE *)(qword_100994BE8 + v1 + 1);
    *(v4 - 9) = *(_BYTE *)(qword_100994BE8 + v1 + 2);
    *(v4 - 8) = *(_BYTE *)(qword_100994BE8 + v1 + 12);
    *(_WORD *)(v4 - 7) = *(_DWORD *)(qword_100994BE8 + v1 + 4);
    *(v4 - 5) = *(_WORD *)(qword_100994BE8 + v1 + 6);
    *(v4 - 4) = *(_BYTE *)(qword_100994BE8 + v1 + 7);
    *(v4 - 3) = *(_BYTE *)(qword_100994BE8 + v1 + 8);
    *(v4 - 2) = *(_BYTE *)(qword_100994BE8 + v1 + 9);
    *(v4 - 1) = *(_BYTE *)(qword_100994BE8 + v1 + 10);
    *v4 = *(_BYTE *)(qword_100994BE8 + v1 + 11);
    ++v2;
    v1 += 64;
    v3 += 13;
  }
  while (v2 < byte_100994BF0);
  return (v3 - 12);
}

void sub_100177010(__int128 *a1, int a2)
{
  uint64_t v2;
  __int16 *i;
  unsigned int v6;
  uint64_t v7;
  NSObject *v8;
  _WORD *v9;
  void *v10;
  uint64_t v11;

  v2 = dword_100994BF4;
  if (dword_100994BF4)
  {
    for (i = &word_100994C38; *((__int128 **)i - 1) != a1; i += 536)
    {
      if (!--v2)
        return;
    }
    v6 = (unsigned __int16)*i;
    if (v6 != 0xFFFF)
    {
      if (sub_1000F0460((uint64_t)a1))
      {
        if (byte_100994BF0)
        {
          v7 = 0;
          while (*(unsigned __int8 *)(qword_100994BE8 + v7) != a2)
          {
            v7 += 64;
            if ((unint64_t)byte_100994BF0 << 6 == v7)
              return;
          }
          v9 = sub_100052DC0(0xAuLL);
          if (v9)
          {
            v10 = v9;
            *v9 = 2053;
            *((_BYTE *)v9 + 2) = a2;
            *((_BYTE *)v9 + 3) = *(_BYTE *)(qword_100994BE8 + v7 + 2);
            v9[2] = *(_DWORD *)(qword_100994BE8 + v7 + 4);
            *((_BYTE *)v9 + 6) = *(_WORD *)(qword_100994BE8 + v7 + 6);
            *((_BYTE *)v9 + 7) = *(_BYTE *)(qword_100994BE8 + v7 + 7);
            v11 = qword_100994BE8 + v7;
            *((_BYTE *)v9 + 8) = *(_BYTE *)(qword_100994BE8 + v7 + 8);
            *((_BYTE *)v9 + 9) = *(_BYTE *)(v11 + 9);
            sub_1000F1F44(0, a1, v6, (char *)v9, 0xAuLL, 0);
            sub_100053298(v10);
          }
        }
      }
      else if (sub_10005549C())
      {
        sub_100054530("Link is not encrypted, can't send cpas changed");
        v8 = sub_1000544A0(0x56u);
        if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
    }
  }
}

uint64_t sub_1001771C0(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  NSObject *v4;
  uint64_t result;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  _BOOL4 v9;
  unsigned int v10;
  NSObject *v11;
  const void *v12[2];
  int v13;
  __int16 v14;

  if (sub_10019AB28(a1))
  {
    if (!sub_10005549C())
      return 1;
    sub_100054530("Already connected to classic");
    v2 = sub_1000544A0(0x56u);
    if (!os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
      return 1;
    goto LABEL_12;
  }
  if (!sub_10019AC00(a1))
  {
    if (!sub_10005549C())
      return 1;
    sub_100054530("Invalid LE handle");
    v4 = sub_1000544A0(0x56u);
    if (!os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      return 1;
LABEL_12:
    sub_1006CE7A4();
    return 1;
  }
  if (*(_BYTE *)(a1 + 48))
  {
    if (!*(_BYTE *)(a1 + 55) || *(_BYTE *)(a1 + 56))
      return 1;
    v3 = a1 + 57;
  }
  else
  {
    v3 = a1 + 49;
  }
  v13 = *(_DWORD *)v3;
  v14 = *(_WORD *)(v3 + 4);
  if (sub_1001F4E24() > 0xE)
  {
    v6 = 0;
  }
  else
  {
    v6 = sub_100192918((uint64_t)sub_100178300);
    if ((_DWORD)v6)
    {
      if (sub_10005549C())
      {
        sub_100054530("Read RSSI failed with status %!", v6);
        v7 = sub_1000544A0(0x56u);
        if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
          sub_1006CEEC0();
      }
    }
  }
  sub_10017532C((unsigned __int16 *)a1);
  v8 = sub_10019AEA4((uint64_t)&v13);
  v9 = sub_1000F0414(a1);
  if (!v8)
  {
    if (!v9)
    {
LABEL_29:
      if (!(_DWORD)v6)
        return 0;
      if (sub_10005549C())
      {
        sub_100054530("Failed to start upgrade %!.", v6);
        v11 = sub_1000544A0(0x56u);
        if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      sub_100175A18((unsigned __int16 *)a1);
      return 4;
    }
LABEL_28:
    v6 = sub_10017FDB8((uint64_t)sub_100174388, (uint64_t)&v13);
    goto LABEL_29;
  }
  if (v9)
    goto LABEL_28;
  result = 0;
  v10 = *(unsigned __int8 *)(v8 + 54);
  if (v10 <= 5 && ((1 << v10) & 0x39) != 0)
  {
    v12[1] = &v13;
    v12[0] = (const void *)6;
    sub_10018007C(v8);
    sub_10004AE90((uint64_t)sub_1001783A0, v12, 0);
    return 0;
  }
  return result;
}

uint64_t sub_100177418(__int128 *a1, unsigned int a2)
{
  uint64_t v4;
  __int16 *v5;
  uint64_t v6;
  int v7;
  char *v8;
  NSObject *v9;
  uint64_t result;
  const char *v11;
  uint8_t buf[4];
  void *v13;

  v4 = dword_100994BF4;
  if (dword_100994BF4)
  {
    v5 = &word_100994C38;
    while (*((__int128 **)v5 - 1) != a1)
    {
      v5 += 536;
      if (!--v4)
        goto LABEL_5;
    }
    v6 = (unsigned __int16)*v5;
  }
  else
  {
LABEL_5:
    v6 = 0xFFFFLL;
  }
  *(_WORD *)((char *)&v11 + 5) = 275;
  HIBYTE(v11) = a2;
  if (a1)
    v7 = *(unsigned __int16 *)a1;
  else
    v7 = 0;
  if (sub_10005549C())
  {
    v8 = a2 > 8 ? "ERROR_Unknown" : off_10091D388[(char)a2];
    sub_100054530("Sending UPGRADE_COMPLETE to lmhandle 0x%4x p:%0x%4X with %s", v7, v6, (_DWORD)v8, v11);
    v9 = sub_1000544A0(0x56u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      v13 = sub_100054494();
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  result = sub_1000F1F44(0, a1, v6, (char *)&v11 + 5, 3uLL, 0);
  if ((_DWORD)result == 412 || !(_DWORD)result)
    return sub_100175928(v6, 0x3A98u);
  return result;
}

void sub_100177594(unsigned __int16 *a1, unsigned int a2)
{
  unsigned int v2;
  __int16 *v5;
  uint64_t v6;
  unsigned int v7;
  int *v8;
  uint64_t v9;
  unint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  const char *v17;
  NSObject *v18;
  uint64_t *v19;
  uint64_t v20;
  int v21;
  char *v22;
  NSObject *v23;
  const char *v24;
  uint8_t buf[512];
  __int128 v26;
  __int128 v27;

  v2 = dword_100994BF4;
  if (!dword_100994BF4)
  {
    v7 = 0xFFFF;
LABEL_19:
    if (sub_10005549C())
    {
      v14 = dword_100994BF4;
      if (dword_100994BF4)
      {
        v15 = (unsigned int *)&dword_100994C60;
        while (*((unsigned __int16 *)v15 - 20) != v7)
        {
          v15 += 268;
          if (!--v14)
            goto LABEL_24;
        }
        v16 = *v15;
      }
      else
      {
LABEL_24:
        v16 = 0;
      }
      v17 = sub_100173108(v16);
      sub_100054530("Not sending UPGRADE_COMPLETE_CFM, since the state is %s", v17);
      v18 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136446210;
        *(_QWORD *)&buf[4] = sub_100054494();
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    return;
  }
  v5 = &word_100994C38;
  v6 = dword_100994BF4;
  while (*((unsigned __int16 **)v5 - 1) != a1)
  {
    v5 += 536;
    if (!--v6)
    {
      v7 = 0xFFFF;
      goto LABEL_8;
    }
  }
  v7 = (unsigned __int16)*v5;
LABEL_8:
  *(_WORD *)((char *)&v24 + 5) = 276;
  HIBYTE(v24) = a2;
  v8 = &dword_100994C60;
  v9 = dword_100994BF4;
  while (*((unsigned __int16 *)v8 - 20) != v7)
  {
    v8 += 268;
    if (!--v9)
      goto LABEL_19;
  }
  if (*v8 != 10)
    goto LABEL_19;
  v10 = 0;
  v11 = 0;
  if (dword_100994BF4 <= 1)
    v2 = 1;
  v12 = 1072 * v2;
  while ((unsigned __int16 *)qword_100994C30[v10 / 8] != a1)
  {
    ++v11;
    v10 += 1072;
    if (v12 == v10)
    {
      v13 = 0;
      goto LABEL_34;
    }
  }
  v19 = &qword_100994C30[v10 / 8];
  v7 = LOWORD(qword_100994C30[v10 / 8 + 1]);
  sub_100175704(v7, 6u);
  sub_100175D48(v11, *((unsigned __int8 *)v19 + 77));
  *((_BYTE *)v19 + 77) = 1;
  sub_1000F3A68((uint64_t)a1, 1);
  sub_100175A18(a1);
  ++*((_DWORD *)v19 + 50);
  ++*((_WORD *)v19 + 526);
  sub_10004AD30((uint64_t)(v19 + 16));
  v13 = sub_100173DA4((uint64_t)v19);
  if (!sub_10019AB28(v13) && !sub_10019ABD0(v13) && !sub_10019AC00(v13) && !sub_10019AC30(v13))
  {
LABEL_34:
    v20 = 1;
    if (a1)
    {
LABEL_35:
      v21 = *a1;
      goto LABEL_41;
    }
    goto LABEL_40;
  }
  if (a2)
  {
    sub_10018014C(v13, 0x13u);
    goto LABEL_34;
  }
  sub_100173E58((uint64_t)a1, (unsigned __int16 *)v13);
  sub_100175A18((unsigned __int16 *)v13);
  if (*(_BYTE *)(v13 + 2))
    v20 = 17;
  else
    v20 = 2;
  if (a1)
    goto LABEL_35;
LABEL_40:
  v21 = 0;
LABEL_41:
  if (sub_10005549C())
  {
    v22 = a2 > 8 ? "ERROR_Unknown" : off_10091D388[(char)a2];
    sub_100054530("Sending UPGRADE_COMPLETE_CFM to lmhandle 0x%4x p:%0x%4X with %s", v21, v7, (_DWORD)v22, v24);
    v23 = sub_1000544A0(0x56u);
    if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      *(_QWORD *)&buf[4] = sub_100054494();
      _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  sub_1000F1F44(0, (__int128 *)a1, v7, (char *)&v24 + 5, 3uLL, 0);
  if (!a2 && (_QWORD)xmmword_100994BF8)
  {
    if (sub_10019AB28(v13))
    {
      if (!v13)
        sub_100253460();
      ((void (*)(unsigned __int16 *, uint64_t, uint64_t, _QWORD))xmmword_100994BF8)(a1, v20, v13 + 48, *(unsigned __int8 *)(v13 + 278));
    }
    else
    {
      ((void (*)(unsigned __int16 *, uint64_t, _QWORD, _QWORD))xmmword_100994BF8)(a1, v20, 0, 0);
    }
  }
  v26 = 0u;
  v27 = 0u;
  LOBYTE(v26) = 1;
  WORD1(v26) = 4;
  DWORD2(v26) = 9;
  LOBYTE(v27) = 1;
  WORD1(v27) = 4;
  DWORD2(v27) = a2;
  memcpy(buf, "state", sizeof(buf));
  sub_1001141C0("Magnet Operation", (const char *)buf, &v26, 2);
}

void sub_1001779BC(uint64_t a1, uint64_t a2, int a3, int a4)
{
  int v8;
  int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  int v15;
  unsigned int v16;
  signed int v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  const char *v21;
  const char *v22;
  unsigned int v23;
  const char *v24;
  unsigned int v25;
  const char *v26;
  NSObject *v27;
  void *v28;
  unsigned __int16 *v29;
  NSObject *v30;
  NSObject *v31;
  void *v32;
  uint64_t v33;
  uint8_t buf[4];
  void *v35;

  v33 = 0;
  sub_100113518((uint64_t)&v33);
  v8 = *(__int16 *)(a1 + 156) + 1000 * *(_DWORD *)(a1 + 152);
  if (v8)
  {
    v9 = 1000 * v33;
    v10 = SWORD2(v33);
    v11 = 1000 * v33 - v8 + SWORD2(v33);
    *(_DWORD *)(a1 + 152) = 0;
    *(_WORD *)(a1 + 156) = 0;
    v12 = v11 / 0x3E8;
    v13 = v11 % 0x3E8;
  }
  else
  {
    v12 = 0;
    LOWORD(v13) = 0;
    v10 = SWORD2(v33);
    v9 = 1000 * v33;
  }
  v14 = v9 + v10;
  v15 = *(__int16 *)(a1 + 212) + 1000 * *(_DWORD *)(a1 + 208);
  v16 = v14 - v15;
  if (v14 == v15)
    v17 = -1;
  else
    v17 = 8 * *(_DWORD *)(a1 + 92) / v16;
  v18 = 1000 * v12 + (unsigned __int16)v13;
  v19 = *(unsigned __int8 *)(a1 + 77);
  v20 = sub_10005549C();
  if (v19 <= a3)
  {
    if (!v20)
      goto LABEL_71;
    if (a3 <= 2)
    {
      if (a3 == 1)
      {
        v22 = "LE";
        goto LABEL_42;
      }
      if (a3 == 2)
      {
        v22 = "BT";
        goto LABEL_42;
      }
    }
    else
    {
      switch(a3)
      {
        case 3:
          v22 = "WL";
          goto LABEL_42;
        case 16:
          v22 = "USB";
          goto LABEL_42;
        case 17:
          v22 = "AWDL";
          goto LABEL_42;
      }
    }
    v22 = "??";
LABEL_42:
    v25 = *(unsigned __int8 *)(a1 + 77);
    if (v25 <= 2)
    {
      if (v25 == 1)
      {
        v26 = "LE";
        goto LABEL_69;
      }
      if (v25 == 2)
      {
        v26 = "BT";
        goto LABEL_69;
      }
    }
    else
    {
      switch(v25)
      {
        case 3u:
          v26 = "WL";
          goto LABEL_69;
        case 0x10u:
          v26 = "USB";
          goto LABEL_69;
        case 0x11u:
          v26 = "AWDL";
          goto LABEL_69;
      }
    }
    v26 = "??";
LABEL_69:
    sub_100054530("Transport downgrade (%s -> %s): duration %d ms, Tx[ %d kbps, %d B]", v22, v26, v16, v17, *(_DWORD *)(a1 + 92));
    v30 = sub_1000544A0(0x56u);
    if (!os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
      goto LABEL_71;
    goto LABEL_70;
  }
  if (!v20)
    goto LABEL_56;
  if (a3 <= 2)
  {
    if (a3 == 1)
    {
      v21 = "LE";
      goto LABEL_32;
    }
    if (a3 == 2)
    {
      v21 = "BT";
      goto LABEL_32;
    }
  }
  else
  {
    switch(a3)
    {
      case 3:
        v21 = "WL";
        goto LABEL_32;
      case 16:
        v21 = "USB";
        goto LABEL_32;
      case 17:
        v21 = "AWDL";
        goto LABEL_32;
    }
  }
  v21 = "??";
LABEL_32:
  v23 = *(unsigned __int8 *)(a1 + 77);
  if (v23 <= 2)
  {
    if (v23 == 1)
    {
      v24 = "LE";
      goto LABEL_54;
    }
    if (v23 == 2)
    {
      v24 = "BT";
      goto LABEL_54;
    }
  }
  else
  {
    switch(v23)
    {
      case 3u:
        v24 = "WL";
        goto LABEL_54;
      case 0x10u:
        v24 = "USB";
        goto LABEL_54;
      case 0x11u:
        v24 = "AWDL";
        goto LABEL_54;
    }
  }
  v24 = "??";
LABEL_54:
  sub_100054530("Transport upgrade (%s -> %s): duration %d ms, Tx[ %d kbps, %d B] upgrade time %d ms, retries %d", v21, v24, v16, v17, *(_DWORD *)(a1 + 92), v18, a4);
  v27 = sub_1000544A0(0x56u);
  if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
  {
    v28 = sub_100054494();
    *(_DWORD *)buf = 136446210;
    v35 = v28;
    _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
  }
LABEL_56:
  if (!*(_BYTE *)(a1 + 446))
  {
    if (!sub_10005549C())
      goto LABEL_71;
    sub_100054530("No action pending on upgrade");
    v30 = sub_1000544A0(0x56u);
    if (!os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
      goto LABEL_71;
LABEL_70:
    v32 = sub_100054494();
    *(_DWORD *)buf = 136446210;
    v35 = v32;
    _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    goto LABEL_71;
  }
  v29 = (unsigned __int16 *)sub_100173DA4(a1);
  if (sub_10019AB28((uint64_t)v29))
  {
    sub_10017354C(*(_BYTE *)(a1 + 447) != 0, v29);
    *(_BYTE *)(a1 + 446) = 0;
  }
  else if (sub_10005549C())
  {
    sub_100054530("Invalid connection handle.");
    v31 = sub_1000544A0(0x56u);
    if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR))
      sub_1006CEEC0();
  }
LABEL_71:
  if (v18 >= 0x1F5)
    sub_100253460();
  if (off_100994C18)
    off_100994C18(a2, a3, *(_QWORD *)(a1 + 208), v33, v16 / 0x3E8uLL, (v17 / 8), *(unsigned int *)(a1 + 92) / 0x3E8uLL, v12 | ((unint64_t)(unsigned __int16)v13 << 32));
  if (a3 != 1)
    *(_DWORD *)(a1 + 204) += v16 / 0x3E8;
  *(_WORD *)(a1 + 212) = WORD2(v33);
  *(_DWORD *)(a1 + 208) = v33;
  *(_DWORD *)(a1 + 92) = 0;
}

void sub_100177F20(uint64_t a1, __int16 a2)
{
  uint64_t v3;
  __int16 *v4;
  __int128 *v5;
  uint64_t *v6;
  _DWORD *v7;
  int v8;
  uint64_t *v9;
  _BYTE *v10;
  int v11;
  unint64_t v12;
  char v13;
  unsigned __int16 *v14;
  uint64_t *v15;
  uint64_t v16;
  int v17;
  BOOL v18;
  NSObject *v19;
  NSObject *v20;
  NSObject *v21;
  NSObject *v22;
  NSObject *v23;
  uint8_t buf[4];
  void *v25;

  if (!dword_100994BF4)
    goto LABEL_30;
  v3 = 0;
  v4 = &word_100994C38;
  while (*v4 != a2)
  {
    ++v3;
    v4 += 536;
    if (dword_100994BF4 == v3)
      goto LABEL_30;
  }
  v5 = (__int128 *)*((_QWORD *)v4 - 1);
  if (!v5)
  {
LABEL_30:
    if (!sub_10005549C())
      return;
    sub_100054530("No more connection handle for this pipeID");
    v20 = sub_1000544A0(0x56u);
    if (!os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
      return;
    goto LABEL_32;
  }
  v6 = &qword_100994C30[134 * (unsigned __int16)v3];
  v8 = *((_DWORD *)v6 + 12);
  v7 = v6 + 6;
  if (v8 != 9)
  {
    sub_100253460();
    if (*v7 != 9)
    {
      if (!sub_10005549C())
        return;
      sub_100054530("Got an encryption complete although we were not pending an encryption");
      v21 = sub_1000544A0(0x56u);
      if (!os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
        return;
LABEL_32:
      sub_1006CE7A4();
      return;
    }
  }
  if ((sub_1000F0460((uint64_t)v5) & 1) == 0)
    sub_100253460();
  v9 = &qword_100994C30[134 * (unsigned __int16)v3];
  v11 = *((unsigned __int8 *)v9 + 10);
  v10 = (char *)v9 + 10;
  if (v11 || (sub_100253460(), *v10))
  {
    v12 = 0;
    v13 = 0;
    v14 = 0;
    v15 = &qword_100994C30[134 * (unsigned __int16)v3 + 2];
    do
    {
      v16 = *v15;
      v17 = *(unsigned __int8 *)(*v15 + 2);
      if ((*(_BYTE *)(*v15 + 2) != 0) == (*((_BYTE *)v15 + 8) == 2))
      {
        sub_100253460();
        v16 = *v15;
        v17 = *(unsigned __int8 *)(*v15 + 2);
      }
      v18 = v17 == 0;
      if (sub_10019AB28(v16))
        v14 = (unsigned __int16 *)*v15;
      v13 |= v18;
      ++v12;
      v15 += 2;
    }
    while (v12 < *v10);
    if (v14)
    {
      if ((v13 & 1) != 0)
      {
        if ((_DWORD)a1)
        {
          if (sub_10005549C())
          {
            sub_100054530("Error from security callback %!", a1);
            v19 = sub_1000544A0(0x56u);
            if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 136446210;
              v25 = sub_100054494();
              _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
          }
          if (off_100994C20)
            off_100994C20(v5, 81, 2020, a1);
        }
        if ((sub_10024B768((uint64_t)v14) & 1) != 0)
        {
          if (sub_1000F0414((uint64_t)v5))
          {
            sub_100173E58((uint64_t)v5, v14);
            sub_100177418(v5, 0);
          }
          else
          {
            sub_100177594((unsigned __int16 *)v5, 0);
          }
        }
        else
        {
          if (sub_10005549C())
          {
            sub_100054530("Failed to encrypt : %!", a1);
            v23 = sub_1000544A0(0x56u);
            if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
              sub_1006CE7A4();
          }
          sub_100175704((unsigned __int16)v3, 8u);
          if (sub_1000F0414((uint64_t)v5))
          {
            sub_10018014C((uint64_t)v14, 5u);
            sub_100177418(v5, 6u);
            sub_1000EE5DC((uint64_t)v5);
          }
        }
        return;
      }
    }
    else
    {
      sub_100253460();
      if ((v13 & 1) != 0)
        goto LABEL_41;
    }
  }
  else
  {
    sub_100253460();
  }
  sub_100253460();
LABEL_41:
  if (off_100994C20)
    off_100994C20(v5, 81, 2012, a1);
  if (sub_10005549C())
  {
    sub_100054530("No classic connection for this handle...");
    v22 = sub_1000544A0(0x56u);
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
}

void sub_100178300(uint64_t a1, uint64_t a2, int a3)
{
  NSObject *v4;
  uint64_t v5;
  uint64_t *i;

  if ((_DWORD)a1)
  {
    if (sub_10005549C())
    {
      sub_100054530("Read RSSI CB failed with status %!", a1);
      v4 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
        sub_1006CEEC0();
    }
  }
  else
  {
    v5 = dword_100994BF4;
    if (dword_100994BF4)
    {
      for (i = qword_100994C30; *i != a2; i += 134)
      {
        if (!--v5)
          return;
      }
      *((_DWORD *)i + 47) = a3;
    }
  }
}

uint64_t sub_1001783A0(uint64_t a1)
{
  int *v1;
  __int16 v2;
  uint64_t v3;
  int v5;
  __int16 v6;

  v1 = *(int **)(a1 + 8);
  v2 = *((_WORD *)v1 + 2);
  v5 = *v1;
  v6 = v2;
  v3 = sub_10019AEA4((uint64_t)&v5);
  if (v3)
    sub_100174388(0, &v5, v3);
  return sub_10018014C(v3, 0x13u);
}

void sub_100178400(int a1)
{
  uint64_t v1;
  int *i;

  v1 = dword_100994BF4;
  if (dword_100994BF4)
  {
    for (i = &dword_100994C64; *((unsigned __int16 *)i - 22) != a1; i += 268)
    {
      if (!--v1)
        return;
    }
    sub_100049F6C(*i);
    *i = 0;
  }
}

void sub_100178454(unsigned __int16 *a1, unsigned __int8 *a2, unsigned int a3)
{
  uint64_t v3;
  __int16 *v7;
  NSObject *v8;
  __int128 *v9;
  char v10;
  NSObject *v11;
  uint64_t v12;
  __int16 *v13;
  uint64_t v14;
  int v15;
  int *v16;
  uint64_t v17;
  __int16 *v18;
  uint64_t v19;
  int v20;
  unsigned int *v21;
  unsigned int v22;
  const char *v23;
  NSObject *v24;
  unsigned int v25;
  uint64_t v26;
  int v27;
  NSObject *v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  NSObject *v32;
  uint64_t v33;
  int *v34;
  void *v35;
  uint64_t v36;
  __int16 *v37;
  unsigned int v38;
  uint64_t v39;
  int *v40;
  NSObject *v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  uint64_t *v45;
  int v46;
  int v47;
  unsigned int v48;
  uint64_t v49;
  NSObject *v50;
  void *v51;
  uint64_t v52;
  uint64_t *v53;
  void *v54;
  _QWORD *v55;
  void *v56;
  int v57;
  NSObject *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  NSObject *v62;
  void *v63;
  int v64;
  uint64_t v65;
  unsigned int *v66;
  unsigned int v67;
  const char *v68;
  NSObject *v69;
  NSObject *v70;
  int v71;
  int v72;
  uint64_t v73;
  uint8_t buf[512];
  __int128 v75;
  __int128 v76;

  v72 = 0;
  v3 = dword_100994BF4;
  if (dword_100994BF4)
  {
    v7 = &word_100994C38;
    while (*((unsigned __int16 **)v7 - 1) != a1)
    {
      v7 += 536;
      if (!--v3)
        goto LABEL_12;
    }
    if (*v7 != -1)
    {
      if (sub_1000F0414((uint64_t)a1))
      {
        if (sub_10005549C())
        {
          sub_100054530("VERSION_IND not supposed to get a version from the peripheral.");
          v8 = sub_1000544A0(0x56u);
          if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 136446210;
            *(_QWORD *)&buf[4] = sub_100054494();
            _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
        v9 = (__int128 *)a1;
        v10 = 2;
LABEL_53:
        sub_10017B810(v9, 1, v10);
        return;
      }
      v12 = dword_100994BF4;
      if (!dword_100994BF4)
        goto LABEL_26;
      v13 = &word_100994C38;
      v14 = dword_100994BF4;
      while (*((unsigned __int16 **)v13 - 1) != a1)
      {
        v13 += 536;
        if (!--v14)
        {
          v15 = 0xFFFF;
          goto LABEL_21;
        }
      }
      v15 = (unsigned __int16)*v13;
LABEL_21:
      v16 = &dword_100994C60;
      while (*((unsigned __int16 *)v16 - 20) != v15)
      {
        v16 += 268;
        if (!--v12)
          goto LABEL_26;
      }
      if (*v16 != 2)
      {
LABEL_26:
        if (sub_10005549C())
        {
          v17 = dword_100994BF4;
          if (dword_100994BF4)
          {
            v18 = &word_100994C38;
            v19 = dword_100994BF4;
            while (*((unsigned __int16 **)v18 - 1) != a1)
            {
              v18 += 536;
              if (!--v19)
              {
                v20 = 0xFFFF;
                goto LABEL_33;
              }
            }
            v20 = (unsigned __int16)*v18;
LABEL_33:
            v21 = (unsigned int *)&dword_100994C60;
            while (*((unsigned __int16 *)v21 - 20) != v20)
            {
              v21 += 268;
              if (!--v17)
                goto LABEL_36;
            }
            v22 = *v21;
          }
          else
          {
LABEL_36:
            v22 = 0;
          }
          v23 = sub_100173108(v22);
          sub_100054530("VERSION_IND as peripheral but the current state is %s", v23);
          v24 = sub_1000544A0(0x56u);
          if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
            sub_1006CE7A4();
        }
      }
      v25 = a3 - 4;
      if (a3 < 4)
      {
        if (sub_10005549C())
        {
          sub_100054530("VERSION_IND bad length for version PDU : %d", a3);
          v32 = sub_1000544A0(0x56u);
          if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR))
            sub_1006CE7A4();
        }
        v9 = (__int128 *)a1;
        v10 = 1;
        goto LABEL_53;
      }
      v26 = *a2;
      v27 = v26 | (a2[1] << 8) | (a2[2] << 16) | (a2[3] << 24);
      if ((sub_10005549C() & 1) != 0)
      {
        sub_100054530("Received VERSION_IND for lmhandle 0x%4x version %d", *a1, v27);
        v28 = sub_1000544A0(0x56u);
        if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 136446210;
          *(_QWORD *)&buf[4] = sub_100054494();
          _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      v73 = 0;
      v29 = sub_10017B88C(a2 + 4, v25, &v73, &v72);
      if ((_DWORD)v29)
      {
        v30 = v29;
        if (sub_10005549C())
        {
          sub_100054530("Parsing error with status %!", v30);
          v31 = sub_1000544A0(0x56u);
          if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR))
            sub_1006CE7A4();
        }
        v9 = (__int128 *)a1;
        v10 = v30;
        goto LABEL_53;
      }
      v33 = dword_100994BF4;
      if (dword_100994BF4)
      {
        v34 = &dword_100994C78;
        while (*((unsigned __int16 **)v34 - 9) != a1)
        {
          v34 += 268;
          if (!--v33)
            goto LABEL_63;
        }
        v35 = (void *)*((_QWORD *)v34 - 1);
        if (v35)
          sub_100053298(v35);
        *((_QWORD *)v34 - 1) = v73;
        *v34 = v72;
        *(v34 - 4) = v27;
      }
LABEL_63:
      v71 = v27;
      sub_1000EE2A0(a1);
      if (xmmword_100994C08)
        xmmword_100994C08(a1, v26, *((unsigned __int8 *)a1 + 26), *((_DWORD *)a1 + 37) == 2);
      v36 = dword_100994BF4;
      if (!dword_100994BF4)
        goto LABEL_77;
      v37 = &word_100994C38;
      while (*((unsigned __int16 **)v37 - 1) != a1)
      {
        v37 += 536;
        if (!--v36)
          goto LABEL_77;
      }
      v38 = (unsigned __int16)*v37;
      if (v38 == 0xFFFF)
      {
LABEL_77:
        if (sub_10005549C())
        {
          sub_100054530("Not tracking this device.");
          v41 = sub_1000544A0(0x56u);
          if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR))
            goto LABEL_79;
        }
      }
      else if ((sub_1000F0460((uint64_t)a1) & 1) != 0)
      {
        v39 = dword_100994BF4;
        if (!dword_100994BF4)
          goto LABEL_114;
        v40 = &dword_100994C60;
        while (*((unsigned __int16 *)v40 - 20) != v38)
        {
          v40 += 268;
          if (!--v39)
            goto LABEL_114;
        }
        if (*v40 != 2)
        {
LABEL_114:
          if (!sub_10005549C())
            goto LABEL_80;
          v65 = dword_100994BF4;
          if (dword_100994BF4)
          {
            v66 = (unsigned int *)&dword_100994C60;
            while (*((unsigned __int16 *)v66 - 20) != v38)
            {
              v66 += 268;
              if (!--v65)
                goto LABEL_119;
            }
            v67 = *v66;
          }
          else
          {
LABEL_119:
            v67 = 0;
          }
          v68 = sub_100173108(v67);
          sub_100054530("Caps response should only be send when in ENCRYPTED state. Current state is %s", v68);
          v69 = sub_1000544A0(0x56u);
          if (!os_log_type_enabled(v69, OS_LOG_TYPE_ERROR))
            goto LABEL_80;
          goto LABEL_79;
        }
        sub_100175704(v38, 6u);
        v59 = 13 * byte_100994BF0;
        v60 = (char *)sub_100052DC0(v59 + 7);
        if (v60)
        {
          v61 = v60;
          *v60 = 2;
          v60[1] = v59 + 5;
          *(_DWORD *)(v60 + 2) = 2;
          if ((_DWORD)v59 + 1 != (unsigned __int16)sub_100176EF8(v60 + 6))
            sub_100253460();
          if (sub_10005549C())
          {
            sub_100054530("Sending CAPS_IND on lmhandle 0x%4x to version %d", *a1, 2);
            v62 = sub_1000544A0(0x56u);
            if (os_log_type_enabled(v62, OS_LOG_TYPE_DEFAULT))
            {
              v63 = sub_100054494();
              *(_DWORD *)buf = 136446210;
              *(_QWORD *)&buf[4] = v63;
              _os_log_impl((void *)&_mh_execute_header, v62, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
          }
          v64 = sub_1000F1F44(0, (__int128 *)a1, v38, v61, v59 + 7, 0);
          sub_100053298(v61);
          if (!v64 || v64 == 412)
            goto LABEL_100;
          goto LABEL_80;
        }
        if (sub_10005549C())
        {
          sub_100054530("Failed to allocate %d bytes (%d transports)", v59 + 7, byte_100994BF0);
          v70 = sub_1000544A0(0x56u);
          if (os_log_type_enabled(v70, OS_LOG_TYPE_ERROR))
LABEL_79:
            sub_1006CE7A4();
        }
      }
      else if (sub_10005549C())
      {
        sub_100054530("Link is not encrypted, can't send caps");
        v58 = sub_1000544A0(0x56u);
        if (os_log_type_enabled(v58, OS_LOG_TYPE_ERROR))
          goto LABEL_79;
      }
LABEL_80:
      sub_10017B810((__int128 *)a1, 1, 1);
      v42 = dword_100994BF4;
      if (dword_100994BF4)
      {
        v43 = 0;
        do
        {
          v44 = v43;
          v45 = &qword_100994C30[134 * v43];
          if ((unsigned __int16 *)*v45 == a1)
          {
            *(_QWORD *)&v75 = 0;
            sub_100113518((uint64_t)&v75);
            v46 = SWORD2(v75) + 1000 * v75;
            v47 = SWORD2(qword_100994C30[134 * v44 + 24]) + 1000 * LODWORD(qword_100994C30[134 * v44 + 24]);
            v48 = v46 - v47;
            if (v46 == v47)
              v49 = 0xFFFFFFFFLL;
            else
              v49 = 8 * HIDWORD(qword_100994C30[134 * v44 + 11]) / v48;
            if (sub_10005549C())
            {
              sub_100054530("Done with connection, %d total bytes sent in %d seconds (%d kbps)", HIDWORD(qword_100994C30[134 * v44 + 11]), v48 / 0x3E8, v49);
              v50 = sub_1000544A0(0x56u);
              if (os_log_type_enabled(v50, OS_LOG_TYPE_DEFAULT))
              {
                v51 = sub_100054494();
                *(_DWORD *)buf = 136446210;
                *(_QWORD *)&buf[4] = v51;
                _os_log_impl((void *)&_mh_execute_header, v50, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
              }
            }
            if (*((_QWORD *)&xmmword_100994BF8 + 1))
              (*((void (**)(unsigned __int16 *, uint64_t, uint64_t))&xmmword_100994BF8 + 1))(a1, 1, v49);
            v52 = HIDWORD(qword_100994C30[134 * v44 + 6]);
            if ((_DWORD)v52)
              sub_100049F6C(v52);
            v53 = &qword_100994C30[134 * v44];
            v56 = (void *)v53[8];
            v55 = v53 + 8;
            v54 = v56;
            if (v56)
            {
              sub_100053298(v54);
              *v55 = 0;
              LODWORD(qword_100994C30[134 * v44 + 9]) = 0;
            }
            v57 = dword_100994BF4;
            v42 = --dword_100994BF4;
            if (v57 != 1)
              memcpy(&qword_100994C30[134 * (v57 - 2)], v45, 0x430uLL);
            bzero(&qword_100994C30[134 * v42], 0x430uLL);
            v43 = 0;
          }
          else
          {
            ++v43;
          }
        }
        while (v43 < v42);
      }
LABEL_100:
      v75 = 0u;
      v76 = 0u;
      LOBYTE(v75) = 1;
      WORD1(v75) = 4;
      DWORD2(v75) = 2;
      LOBYTE(v76) = 1;
      WORD1(v76) = 4;
      DWORD2(v76) = v71;
      memcpy(buf, "state", sizeof(buf));
      sub_1001141C0("Magnet Operation", (const char *)buf, &v75, 2);
      return;
    }
  }
LABEL_12:
  if (sub_10005549C())
  {
    sub_100054530("VERSION_IND not tracking this device.");
    v11 = sub_1000544A0(0x56u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
}

void sub_100178DAC(unsigned __int16 *a1, unsigned __int8 *a2, unsigned int a3)
{
  uint64_t v3;
  __int16 *v7;
  uint64_t v8;
  __int16 *v9;
  uint64_t v10;
  int v11;
  NSObject *v12;
  NSObject *v13;
  __int128 *v14;
  char v15;
  int *v16;
  uint64_t v17;
  __int16 *v18;
  uint64_t v19;
  int v20;
  unsigned int *v21;
  unsigned int v22;
  const char *v23;
  NSObject *v24;
  unsigned int v25;
  NSObject *v26;
  uint64_t v27;
  __int16 *v28;
  int v29;
  uint64_t v30;
  int v31;
  NSObject *v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  unsigned __int16 v36;
  unsigned int v37;
  uint64_t *v38;
  void *v39;
  _QWORD *v40;
  void *v41;
  int v42;
  uint64_t *v43;
  _DWORD *v44;
  NSObject *v45;
  uint64_t v46;
  __int16 *v47;
  int v48;
  int v49;
  uint64_t v50;
  uint8_t buf[512];
  __int128 v52;
  __int128 v53;

  v49 = 0;
  v3 = dword_100994BF4;
  if (!dword_100994BF4)
    goto LABEL_13;
  v7 = &word_100994C38;
  while (*((unsigned __int16 **)v7 - 1) != a1)
  {
    v7 += 536;
    if (!--v3)
      goto LABEL_13;
  }
  if (*v7 == -1)
  {
LABEL_13:
    if (sub_10005549C())
    {
      sub_100054530("CAPS_IND not tracking this device.");
      v12 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
  else
  {
    if (!sub_1000F0414((uint64_t)a1))
    {
      if (sub_10005549C())
      {
        sub_100054530("CAPS_IND not supposed to get a caps from the central.");
        v13 = sub_1000544A0(0x56u);
        if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 136446210;
          *(_QWORD *)&buf[4] = sub_100054494();
          _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      v14 = (__int128 *)a1;
      v15 = 2;
      goto LABEL_59;
    }
    v8 = dword_100994BF4;
    if (!dword_100994BF4)
      goto LABEL_26;
    v9 = &word_100994C38;
    v10 = dword_100994BF4;
    while (*((unsigned __int16 **)v9 - 1) != a1)
    {
      v9 += 536;
      if (!--v10)
      {
        v11 = 0xFFFF;
        goto LABEL_21;
      }
    }
    v11 = (unsigned __int16)*v9;
LABEL_21:
    v16 = &dword_100994C60;
    while (*((unsigned __int16 *)v16 - 20) != v11)
    {
      v16 += 268;
      if (!--v8)
        goto LABEL_26;
    }
    if (*v16 != 3)
    {
LABEL_26:
      if (sub_10005549C())
      {
        v17 = dword_100994BF4;
        if (dword_100994BF4)
        {
          v18 = &word_100994C38;
          v19 = dword_100994BF4;
          while (*((unsigned __int16 **)v18 - 1) != a1)
          {
            v18 += 536;
            if (!--v19)
            {
              v20 = 0xFFFF;
              goto LABEL_33;
            }
          }
          v20 = (unsigned __int16)*v18;
LABEL_33:
          v21 = (unsigned int *)&dword_100994C60;
          while (*((unsigned __int16 *)v21 - 20) != v20)
          {
            v21 += 268;
            if (!--v17)
              goto LABEL_36;
          }
          v22 = *v21;
        }
        else
        {
LABEL_36:
          v22 = 0;
        }
        v23 = sub_100173108(v22);
        sub_100054530("CAPS_IND as central but the current state is %s", v23);
        v24 = sub_1000544A0(0x56u);
        if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
    }
    v25 = a3 - 4;
    if (a3 <= 4)
    {
      if (sub_10005549C())
      {
        sub_100054530("Wrong size for caps.");
        v26 = sub_1000544A0(0x56u);
        if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      v14 = (__int128 *)a1;
      v15 = 3;
LABEL_59:
      sub_10017B810(v14, 2, v15);
      return;
    }
    v27 = dword_100994BF4;
    if (dword_100994BF4)
    {
      v28 = &word_100994C38;
      while (*((unsigned __int16 **)v28 - 1) != a1)
      {
        v28 += 536;
        if (!--v27)
          goto LABEL_49;
      }
      v29 = (unsigned __int16)*v28;
    }
    else
    {
LABEL_49:
      v29 = 0xFFFF;
    }
    sub_100175704(v29, 4u);
    v30 = *a2;
    v31 = v30 | (a2[1] << 8) | (a2[2] << 16) | (a2[3] << 24);
    if (sub_10005549C())
    {
      sub_100054530("Received CAPS_IND for lmhandle 0x%4x with version %d", *a1, v31);
      v32 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136446210;
        *(_QWORD *)&buf[4] = sub_100054494();
        _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    v50 = 0;
    v33 = sub_10017B88C(a2 + 4, v25, &v50, &v49);
    if ((_DWORD)v33)
    {
      v34 = v33;
      if (sub_10005549C())
      {
        sub_100054530("CAPS_IND parser error %!", v34);
        v35 = sub_1000544A0(0x56u);
        if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR))
          sub_1006CEEC0();
      }
      v14 = (__int128 *)a1;
      v15 = v34;
      goto LABEL_59;
    }
    if (dword_100994BF4)
    {
      v36 = 0;
      while (1)
      {
        v37 = v36;
        if ((unsigned __int16 *)qword_100994C30[134 * v36] == a1)
          break;
        ++v36;
        if (dword_100994BF4 <= (unsigned __int16)(v37 + 1))
          goto LABEL_74;
      }
      v38 = &qword_100994C30[134 * v36];
      v41 = (void *)v38[8];
      v40 = v38 + 8;
      v39 = v41;
      if (v41)
        sub_100053298(v39);
      *v40 = v50;
      v42 = v49;
      v43 = &qword_100994C30[134 * v37];
      *((_DWORD *)v43 + 14) = v31;
      v44 = v43 + 7;
      v44[4] = v42;
      if (sub_1001F4E24() == 15 && *v44 <= 1u)
      {
        if (sub_10005549C())
        {
          sub_100054530("Invoking TS WAR");
          v45 = sub_1000544A0(0x56u);
          if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR))
            sub_1006CE7A4();
        }
        sub_1001F8228((uint64_t)a1, (uint64_t)sub_10017BAD4);
      }
    }
LABEL_74:
    sub_1000EE2A0(a1);
    sub_1000EE43C((uint64_t)a1);
    v46 = dword_100994BF4;
    if (dword_100994BF4)
    {
      v47 = &word_100994C38;
      while (*((unsigned __int16 **)v47 - 1) != a1)
      {
        v47 += 536;
        if (!--v46)
          goto LABEL_78;
      }
      v48 = (unsigned __int16)*v47;
    }
    else
    {
LABEL_78:
      v48 = 0xFFFF;
    }
    sub_100175704(v48, 6u);
    if (xmmword_100994C08)
      xmmword_100994C08(a1, v30, *((unsigned __int8 *)a1 + 26), *((_DWORD *)a1 + 37) == 2);
    v52 = 0u;
    v53 = 0u;
    LOBYTE(v52) = 1;
    WORD1(v52) = 4;
    DWORD2(v52) = 3;
    LOBYTE(v53) = 1;
    WORD1(v53) = 4;
    DWORD2(v53) = v31;
    memcpy(buf, "state", sizeof(buf));
    sub_1001141C0("Magnet Operation", (const char *)buf, &v52, 2);
  }
}

void sub_100179380(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2;
  __int16 *v5;
  unsigned __int8 v6;
  NSObject *v7;
  NSObject *v8;
  unsigned int v9;
  unsigned __int8 v10;
  uint64_t v11;
  unint64_t v12;
  int v13;
  int v14;
  int v15;
  int v16;
  void *v17;

  v2 = dword_100994BF4;
  if (!dword_100994BF4)
    goto LABEL_13;
  v5 = &word_100994C38;
  while (*((_QWORD *)v5 - 1) != a1)
  {
    v5 += 536;
    if (!--v2)
      goto LABEL_13;
  }
  if (*v5 == -1)
  {
LABEL_13:
    if (sub_10005549C())
    {
      sub_100054530("Not tracking this device.");
      v7 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
  else if (sub_1000F0414(a1))
  {
    if (dword_100994BF4)
    {
      v6 = 0;
      while (qword_100994C30[134 * v6] != a1)
      {
        if (dword_100994BF4 <= ++v6)
          return;
      }
      v9 = qword_100994C30[134 * v6 + 9];
      if (v9)
      {
        v10 = 0;
        v11 = qword_100994C30[134 * v6 + 8];
        while (*(unsigned __int8 *)(v11 + ((unint64_t)v10 << 6)) != *a2)
        {
          if (v9 <= ++v10)
            return;
        }
        v12 = v11 + ((unint64_t)v10 << 6);
        *(_BYTE *)(v12 + 2) = a2[1] != 0;
        v13 = a2[2];
        *(_DWORD *)(v12 + 4) = v13;
        v14 = v13 | (a2[3] << 8);
        *(_DWORD *)(v12 + 4) = v14;
        v15 = v14 | (a2[4] << 16);
        *(_DWORD *)(v12 + 4) = v15;
        *(_DWORD *)(v12 + 4) = v15 | (a2[5] << 24);
        *(_WORD *)(v12 + 8) = a2[6];
      }
    }
  }
  else if (sub_10005549C())
  {
    sub_100054530("CAPS_CHANGED_IND not supposed to get a caps info response from the central.");
    v8 = sub_1000544A0(0x56u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      v16 = 136446210;
      v17 = sub_100054494();
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, " %{public}s", (uint8_t *)&v16, 0xCu);
    }
  }
}

void sub_1001795A4(unsigned __int16 *a1, unsigned __int8 *a2, int a3)
{
  uint64_t v3;
  __int16 *v7;
  NSObject *v8;
  NSObject *v9;
  unsigned __int8 *v10;
  int v11;
  int v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  int v18;
  unsigned __int8 v19;
  NSObject *v20;
  __int128 *v21;
  unsigned int v22;
  int v23;
  int *v24;
  uint64_t v25;
  unsigned __int8 *v26;
  const char *v27;
  NSObject *v28;
  const char *v29;
  NSObject *v30;
  unsigned __int8 v31;
  NSObject *v32;
  uint8_t buf[512];
  __int128 v34;
  __int128 v35;

  v3 = dword_100994BF4;
  if (!dword_100994BF4)
    goto LABEL_12;
  v7 = &word_100994C38;
  while (*((unsigned __int16 **)v7 - 1) != a1)
  {
    v7 += 536;
    if (!--v3)
      goto LABEL_12;
  }
  if (*v7 == -1)
  {
LABEL_12:
    if (sub_10005549C())
    {
      sub_100054530("UPGRADE not tracking this device.");
      v9 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return;
  }
  if (!sub_1000F0414((uint64_t)a1))
  {
    if (!a3)
    {
      if (sub_10005549C())
      {
        sub_100054530("UPGRADE wrong size for upgrade req.");
        v20 = sub_1000544A0(0x56u);
        if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      v21 = (__int128 *)a1;
      v22 = 3;
      v23 = 0;
      goto LABEL_68;
    }
    v12 = *a2;
    v10 = a2 + 1;
    v11 = v12;
    v13 = a3 - 1;
    if ((_BYTE)a3 == 1)
      v14 = 0;
    else
      v14 = (uint64_t)v10;
    v15 = dword_100994BF4;
    if (dword_100994BF4)
    {
      v16 = 0;
      v17 = qword_100994C30;
      while ((unsigned __int16 *)*v17 != a1)
      {
        ++v16;
        v17 += 134;
        if (dword_100994BF4 == v16)
        {
          v18 = 0;
          v19 = 4;
          LODWORD(v16) = dword_100994BF4;
          goto LABEL_45;
        }
      }
      v24 = &dword_100994C60;
      while (*((unsigned __int16 *)v24 - 20) != *((unsigned __int16 *)v17 + 4))
      {
        v24 += 268;
        if (!--v15)
          goto LABEL_40;
      }
      if (*v24 == 6)
      {
        v25 = *((unsigned int *)v17 + 18);
        if ((_DWORD)v25)
        {
          v26 = (unsigned __int8 *)(v17[8] + 1);
          while (*(v26 - 1) != v11)
          {
            v26 += 64;
            if (!--v25)
              goto LABEL_39;
          }
          v18 = *v26;
        }
        else
        {
LABEL_39:
          v18 = 0;
        }
        if (sub_1000EE1A0(v16, 1u))
        {
          sub_100175704(*((unsigned __int16 *)v17 + 4), 8u);
          *((_BYTE *)v17 + 77) = v18;
          goto LABEL_29;
        }
        if ((sub_10005549C() & 1) != 0)
        {
          sub_100054530("RSSI is not sufficient for upgrade rssi=%d", *((_DWORD *)v17 + 47));
          v32 = sub_1000544A0(0x56u);
          if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR))
            sub_1006CE7A4();
        }
        v19 = 8;
      }
      else
      {
LABEL_40:
        if ((sub_10005549C() & 1) != 0)
        {
          v27 = sub_100173108(*((_DWORD *)v17 + 12));
          sub_100054530("UPGRADE upgrade should only be received when in IDLE state. Current state is %s", v27);
          v28 = sub_1000544A0(0x56u);
          if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
            sub_1006CE7A4();
        }
        v19 = 5;
      }
      v18 = 1;
      goto LABEL_45;
    }
    LODWORD(v16) = 0;
    v18 = 0;
LABEL_29:
    v19 = 4;
LABEL_45:
    if (!sub_10005549C())
      goto LABEL_60;
    if (v18 <= 2)
    {
      if (v18 == 1)
      {
        v29 = "LE";
        goto LABEL_58;
      }
      if (v18 == 2)
      {
        v29 = "BT";
        goto LABEL_58;
      }
    }
    else
    {
      switch(v18)
      {
        case 3:
          v29 = "WL";
          goto LABEL_58;
        case 16:
          v29 = "USB";
          goto LABEL_58;
        case 17:
          v29 = "AWDL";
          goto LABEL_58;
      }
    }
    v29 = "??";
LABEL_58:
    sub_100054530("Received UPGRADE for lmhandle 0x%4x to transport ID %d (tech %s)", *a1, v11, v29);
    v30 = sub_1000544A0(0x56u);
    if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      *(_QWORD *)&buf[4] = sub_100054494();
      _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
LABEL_60:
    v34 = 0u;
    v35 = 0u;
    LOBYTE(v34) = 1;
    WORD1(v34) = 4;
    DWORD2(v34) = 4;
    LOBYTE(v35) = 1;
    WORD1(v35) = 4;
    DWORD2(v35) = v18;
    memcpy(buf, "state", sizeof(buf));
    sub_1001141C0("Magnet Operation", (const char *)buf, &v34, 2);
    if (v18 == 1
      || (v18 != 2 ? (v31 = sub_10017BD8C(v18, a1, v14, v13, 0)) : (v31 = sub_1001771C0((uint64_t)a1)), (v19 = v31) != 0))
    {
      BYTE5(qword_100994C30[134 * v16 + 9]) = 0;
    }
    else
    {
      sub_100113518((uint64_t)&qword_100994C30[134 * v16 + 19]);
      v19 = 0;
    }
    v22 = v19;
    v21 = (__int128 *)a1;
    v23 = v18;
LABEL_68:
    sub_10017BB40(v21, v22, v23);
    return;
  }
  if (sub_10005549C())
  {
    sub_100054530("UPGRADE not supposed to get a upgrade from the peripheral.");
    v8 = sub_1000544A0(0x56u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      *(_QWORD *)&buf[4] = sub_100054494();
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  sub_10017B810((__int128 *)a1, 17, 2);
}

void sub_100179ABC(unsigned __int16 *a1, unsigned __int8 *a2, int a3)
{
  uint64_t v3;
  __int16 *v7;
  int v8;
  uint64_t v9;
  int *v10;
  int v11;
  NSObject *v12;
  NSObject *v13;
  __int128 *v14;
  char v15;
  NSObject *v16;
  uint64_t v17;
  unsigned __int8 *v18;
  const char *v19;
  NSObject *v20;
  uint64_t *v21;
  const char *v22;
  uint64_t v23;
  int *v24;
  uint64_t *v25;
  _DWORD *v26;
  int v27;
  uint64_t *v28;
  __int16 *v29;
  int v30;
  __int16 *v31;
  _BOOL4 v32;
  NSObject *v33;
  void *v34;
  NSObject *v35;
  void *v36;
  void *v37;
  unsigned int v38;
  void *v39;
  int log;
  NSObject *loga;
  uint64_t v42;
  uint8_t buf[4];
  void *v44;

  v3 = dword_100994BF4;
  if (!dword_100994BF4)
    goto LABEL_14;
  v7 = &word_100994C38;
  while (*((unsigned __int16 **)v7 - 1) != a1)
  {
    v7 += 536;
    if (!--v3)
      goto LABEL_14;
  }
  if (*v7 == -1)
  {
LABEL_14:
    if (sub_10005549C())
    {
      sub_100054530("UPGRADE_REQ not tracking this device.");
      v12 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return;
  }
  if (!sub_1000F0414((uint64_t)a1))
  {
    if (sub_10005549C())
    {
      sub_100054530("UPGRADE_REQ not supposed to get a upgrade req from the central.");
      v13 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136446210;
        v44 = sub_100054494();
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    v14 = (__int128 *)a1;
    v15 = 2;
    goto LABEL_56;
  }
  if (!a3)
  {
    if (sub_10005549C())
    {
      sub_100054530("UPGRADE_REQ wrong size for upgrade req.");
      v16 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    v14 = (__int128 *)a1;
    v15 = 3;
    goto LABEL_56;
  }
  v8 = *a2;
  if (!dword_100994BF4)
  {
    LODWORD(v9) = 0;
LABEL_30:
    v11 = 0;
    goto LABEL_31;
  }
  v9 = 0;
  v10 = &dword_100994C78;
  while (*((unsigned __int16 **)v10 - 9) != a1)
  {
    ++v9;
    v10 += 268;
    if (dword_100994BF4 == v9)
    {
      v11 = 0;
      LODWORD(v9) = dword_100994BF4;
      goto LABEL_31;
    }
  }
  v17 = *v10;
  if (!(_DWORD)v17)
    goto LABEL_30;
  v18 = (unsigned __int8 *)(*((_QWORD *)v10 - 1) + 1);
  while (*(v18 - 1) != v8)
  {
    v18 += 64;
    if (!--v17)
      goto LABEL_30;
  }
  v11 = *v18;
LABEL_31:
  if (!sub_10005549C())
    goto LABEL_47;
  if (v11 <= 2)
  {
    if (v11 == 1)
    {
      v19 = "LE";
      goto LABEL_45;
    }
    if (v11 == 2)
    {
      v19 = "BT";
      goto LABEL_45;
    }
  }
  else
  {
    switch(v11)
    {
      case 3:
        v19 = "WL";
        goto LABEL_45;
      case 16:
        v19 = "USB";
        goto LABEL_45;
      case 17:
        v19 = "AWDL";
        goto LABEL_45;
    }
  }
  v19 = "??";
LABEL_45:
  sub_100054530("Received UPGRADE_REQ to tech %s (2) from lmhandle 0x%4x", v19, v8);
  v20 = sub_1000544A0(0x56u);
  if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136446210;
    v44 = sub_100054494();
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
  }
LABEL_47:
  if (!v11)
  {
    v14 = (__int128 *)a1;
    v15 = 4;
LABEL_56:
    sub_10017B810(v14, 16, v15);
    return;
  }
  v21 = &qword_100994C30[134 * v9];
  *((_DWORD *)v21 + 21) = v11;
  if (v11 == *((unsigned __int8 *)v21 + 76))
  {
    if (sub_10005549C())
    {
      if (v11 <= 2)
      {
        v22 = v11 == 1 ? "LE" : "BT";
      }
      else if (v11 == 3)
      {
        v22 = "WL";
      }
      else if (v11 == 16)
      {
        v22 = "USB";
      }
      else
      {
        v22 = v11 == 17 ? "AWDL" : "??";
      }
      sub_100054530("UPGRADE_REQ lmhandle 0x%4x already using tech %s", *a1, v22);
      v33 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
        goto LABEL_86;
    }
  }
  else
  {
    v23 = dword_100994BF4;
    if (!dword_100994BF4)
      goto LABEL_72;
    v24 = &dword_100994C60;
    while (*((unsigned __int16 *)v24 - 20) != LOWORD(qword_100994C30[134 * v9 + 1]))
    {
      v24 += 268;
      if (!--v23)
        goto LABEL_72;
    }
    if (*v24 == 6)
    {
      v25 = &qword_100994C30[134 * v9];
      v27 = *((_DWORD *)v25 + 40);
      v26 = v25 + 20;
      if (v27 == v26[8]
        || (v28 = &qword_100994C30[134 * v9],
            v30 = *((unsigned __int16 *)v28 + 98),
            v29 = (__int16 *)v28 + 98,
            v31 = v29 - 16,
            (unsigned __int16)*(v29 - 16) == v30))
      {
        v32 = 0;
      }
      else
      {
        v42 = 0;
        sub_100113518((uint64_t)&v42);
        v38 = (1000 * (v42 - *v26) - *v31 + SWORD2(v42)) >> 2;
        v32 = v38 < 0x465;
        if (v38 >= 0x465)
        {
          log = 1000 * (v42 - *v26) - *v31 + SWORD2(v42);
          if (sub_10005549C())
          {
            sub_100054530("TS connection timeout detected %d mseconds ago, allow remote transport switch request", log);
            loga = sub_1000544A0(0x56u);
            if (os_log_type_enabled(loga, OS_LOG_TYPE_DEFAULT))
            {
              v39 = sub_100054494();
              *(_DWORD *)buf = 136446210;
              v44 = v39;
              _os_log_impl((void *)&_mh_execute_header, loga, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
          }
          *v26 = v26[8];
          *v31 = *v29;
        }
      }
      if (v11 == 2 && (v32 | !sub_1000EE1A0(v9, 1u)) == 1)
      {
        if (sub_10005549C())
        {
          sub_100054530("Received UPGRADE_REQ to tech BT but RSSI was not sufficient or uncertainty was %d, ignoring", v32);
          v33 = sub_1000544A0(0x56u);
          if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
          {
            v34 = sub_100054494();
            *(_DWORD *)buf = 136446210;
            v44 = v34;
LABEL_87:
            _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
      }
      else
      {
        if (sub_10005549C())
        {
          sub_100054530("Received UPGRADE_REQ to tech BT. RSSI:  %d: %d", HIDWORD(qword_100994C30[134 * v9 + 23]), v32);
          v35 = sub_1000544A0(0x56u);
          if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
          {
            v36 = sub_100054494();
            *(_DWORD *)buf = 136446210;
            v44 = v36;
            _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
        sub_100171AC0(a1, v11, 32);
      }
    }
    else
    {
LABEL_72:
      if (sub_10005549C())
      {
        sub_100054530("UPGRADE_REQ got a request when already switching (state %d) !", LODWORD(qword_100994C30[134 * v9 + 6]));
        v33 = sub_1000544A0(0x56u);
        if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
        {
LABEL_86:
          v37 = sub_100054494();
          *(_DWORD *)buf = 136446210;
          v44 = v37;
          goto LABEL_87;
        }
      }
    }
  }
}

void sub_10017A1EC(unsigned __int16 *a1, unsigned __int8 *a2, int a3)
{
  uint64_t v3;
  __int16 *v7;
  unsigned int v8;
  NSObject *v9;
  NSObject *v10;
  unsigned __int8 v11;
  uint64_t v12;
  const char *v13;
  NSObject *v14;
  uint64_t v15;
  uint64_t *v16;
  int v17;
  uint8_t buf[4];
  void *v19;

  v3 = dword_100994BF4;
  if (!dword_100994BF4)
    goto LABEL_10;
  v7 = &word_100994C38;
  while (*((unsigned __int16 **)v7 - 1) != a1)
  {
    v7 += 536;
    if (!--v3)
      goto LABEL_10;
  }
  if (*v7 == -1)
  {
LABEL_10:
    if (sub_10005549C())
    {
      sub_100054530("UPGRADE_CFM not tracking this device.");
      v9 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
  else
  {
    if (sub_1000F0414((uint64_t)a1))
    {
      if (a3)
        v8 = *a2;
      else
        v8 = 0;
      v11 = a3 - 1;
      if ((_BYTE)a3 == 1)
        v12 = 0;
      else
        v12 = (uint64_t)(a2 + 1);
      if (sub_10005549C())
      {
        v13 = v8 > 8 ? "ERROR_Unknown" : off_10091D388[(char)v8];
        sub_100054530("Received UPGRADE_CFM from lmhandle 0x%4x with %s", *a1, v13);
        v14 = sub_1000544A0(0x56u);
        if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 136446210;
          v19 = sub_100054494();
          _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      if (dword_100994BF4)
      {
        v15 = 0;
        v16 = qword_100994C30;
        while ((unsigned __int16 *)*v16 != a1)
        {
          ++v15;
          v16 += 134;
          if (dword_100994BF4 == v15)
          {
            v17 = 0;
            LODWORD(v15) = dword_100994BF4;
            goto LABEL_33;
          }
        }
        sub_100178400(*((unsigned __int16 *)v16 + 4));
        if (v8)
        {
          *((_BYTE *)v16 + 77) = 1;
          sub_100175704(*((unsigned __int16 *)v16 + 4), 6u);
          sub_100175A18(a1);
          return;
        }
        sub_100175704(*((unsigned __int16 *)v16 + 4), 8u);
        v17 = *((unsigned __int8 *)v16 + 77);
        if (v17 == 2)
        {
          if (!sub_1001771C0((uint64_t)a1))
            goto LABEL_39;
          goto LABEL_34;
        }
      }
      else
      {
        LODWORD(v15) = 0;
        v17 = 0;
      }
LABEL_33:
      if (!sub_10017BD8C(v17, a1, v12, v11, 1))
      {
LABEL_39:
        sub_100113518((uint64_t)&qword_100994C30[134 * v15 + 19]);
        return;
      }
LABEL_34:
      sub_100177418((__int128 *)a1, 1u);
      return;
    }
    if (sub_10005549C())
    {
      sub_100054530("UPGRADE_CFM not supposed to get a upgrade CFM from the central.");
      v10 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136446210;
        v19 = sub_100054494();
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
  }
}

void sub_10017A4D8(unsigned __int16 *a1, unsigned __int8 *a2, int a3)
{
  uint64_t v3;
  __int16 *v5;
  unsigned int v6;
  NSObject *v7;
  const char *v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t *i;
  NSObject *v12;
  void *v13;
  uint8_t buf[4];
  void *v15;

  v3 = dword_100994BF4;
  if (!dword_100994BF4)
    goto LABEL_9;
  v5 = &word_100994C38;
  while (*((unsigned __int16 **)v5 - 1) != a1)
  {
    v5 += 536;
    if (!--v3)
      goto LABEL_9;
  }
  if (*v5 == -1)
  {
LABEL_9:
    if (sub_10005549C())
    {
      sub_100054530("UPGRADE_COMPLETE not tracking this device.");
      v7 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
  else
  {
    if (a3)
      v6 = *a2;
    else
      v6 = 0;
    if (sub_10005549C())
    {
      v8 = v6 > 8 ? "ERROR_Unknown" : off_10091D388[(char)v6];
      sub_100054530("Received UPGRADE_COMPLETE from lmhandle 0x%4x with %s", *a1, v8);
      v9 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136446210;
        v15 = sub_100054494();
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    v10 = dword_100994BF4;
    if (dword_100994BF4)
    {
      for (i = qword_100994C30; (unsigned __int16 *)*i != a1; i += 134)
      {
        if (!--v10)
          return;
      }
      sub_100178400(*((unsigned __int16 *)i + 4));
      sub_100175704(*((unsigned __int16 *)i + 4), 0xAu);
      if (v6)
      {
        *((_BYTE *)i + 77) = 1;
        sub_100173DA4((uint64_t)i);
LABEL_28:
        sub_100177594(a1, v6);
        return;
      }
      if (sub_100173DA4((uint64_t)i))
        goto LABEL_28;
      if (sub_10005549C())
      {
        sub_100054530("Received UPGRADE_COMPLETE but the transport isn't up yet. Waiting until transport is up.");
        v12 = sub_1000544A0(0x56u);
        if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
        {
          v13 = sub_100054494();
          *(_DWORD *)buf = 136446210;
          v15 = v13;
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
    }
  }
}

void sub_10017A734(unsigned __int16 *a1, _BYTE *a2, int a3)
{
  uint64_t v3;
  __int16 *v5;
  unsigned int v6;
  const char *v7;
  NSObject *v8;
  NSObject *v9;
  int v10;
  NSObject *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  uint64_t v15;
  NSObject *v16;
  uint64_t v17;
  int v18;
  char v19;
  const char *v20;
  NSObject *v21;
  uint8_t buf[512];
  __int128 v23;
  __int128 v24;

  v3 = dword_100994BF4;
  if (!dword_100994BF4)
    goto LABEL_12;
  v5 = &word_100994C38;
  while (*((unsigned __int16 **)v5 - 1) != a1)
  {
    v5 += 536;
    if (!--v3)
      goto LABEL_12;
  }
  if (*v5 == -1)
  {
LABEL_12:
    if (sub_10005549C())
    {
      sub_100054530("UPGRADE_COMPLETE_CFM not tracking this device.");
      v8 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
  else
  {
    if (a3 && (v6 = *a2, *a2))
    {
      if (sub_10005549C())
      {
        v7 = v6 > 8 ? "ERROR_Unknown" : off_10091D348[(char)(v6 - 1)];
        sub_100054530("Received UPGRADE_COMPLETE_CFM from lmhandle 0x%4x with %s", *a1, v7);
        v11 = sub_1000544A0(0x56u);
        if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
          sub_1006CEEC0();
      }
      v10 = 0;
    }
    else
    {
      if (sub_10005549C())
      {
        sub_100054530("Received UPGRADE_COMPLETE_CFM from lmhandle 0x%4x with %s", *a1, "SUCCESS");
        v9 = sub_1000544A0(0x56u);
        if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 136446210;
          *(_QWORD *)&buf[4] = sub_100054494();
          _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      v6 = 0;
      v10 = 1;
    }
    if (dword_100994BF4)
    {
      v12 = 0;
      v13 = 0;
      while ((unsigned __int16 *)qword_100994C30[v12] != a1)
      {
        ++v13;
        v12 += 134;
        if (134 * dword_100994BF4 == v12)
          return;
      }
      v14 = &qword_100994C30[v12];
      sub_100178400(LOWORD(qword_100994C30[v12 + 1]));
      sub_100175704(LOWORD(qword_100994C30[v12 + 1]), 6u);
      sub_100175A18(a1);
      sub_100175D48(v13, BYTE5(qword_100994C30[v12 + 9]));
      *((_BYTE *)v14 + 77) = 1;
      ++*((_DWORD *)v14 + 50);
      ++*((_WORD *)v14 + 526);
      sub_10004AD30((uint64_t)&qword_100994C30[v12 + 16]);
      v15 = sub_100173DA4((uint64_t)&qword_100994C30[v12]);
      if (v6 == 4)
      {
        if (sub_10005549C())
        {
          sub_100054530("Disconnecting upgraded connection due to remote transport error");
          v16 = sub_1000544A0(0x56u);
          if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
            sub_1006CEEC0();
        }
        sub_10018014C(v15, 0x13u);
        goto LABEL_55;
      }
      sub_1000F3A68((uint64_t)a1, 1);
      if (v15)
      {
        sub_100175A18((unsigned __int16 *)v15);
        if (*(_BYTE *)(v15 + 2))
          v17 = 17;
        else
          v17 = 2;
        if ((_QWORD)xmmword_100994BF8)
          v18 = v10;
        else
          v18 = 0;
        if (v18 != 1)
          goto LABEL_55;
        if (sub_10019AB28(v15))
        {
          ((void (*)(unsigned __int16 *, uint64_t, uint64_t, _QWORD))xmmword_100994BF8)(a1, v17, v15 + 48, *(unsigned __int8 *)(v15 + 278));
LABEL_55:
          v23 = 0u;
          v24 = 0u;
          LOBYTE(v23) = 1;
          WORD1(v23) = 4;
          DWORD2(v23) = 5;
          LOBYTE(v24) = 1;
          WORD1(v24) = 4;
          DWORD2(v24) = v6;
          memcpy(buf, "state", sizeof(buf));
          sub_1001141C0("Magnet Operation", (const char *)buf, &v23, 2);
          return;
        }
      }
      else
      {
        if ((_QWORD)xmmword_100994BF8)
          v19 = v10;
        else
          v19 = 0;
        if ((v19 & 1) == 0)
          goto LABEL_55;
        v17 = 1;
      }
      if (sub_10005549C())
      {
        v20 = "Invalid";
        if (!v15)
          v20 = "Empty";
        sub_100054530("%s alternate handle for Peer %d, connectionHandle=%p, pipeID=0x%4x", v20, v13, (const void *)qword_100994C30[v12], *((unsigned __int16 *)v14 + 4));
        v21 = sub_1000544A0(0x56u);
        if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      ((void (*)(unsigned __int16 *, uint64_t, _QWORD, _QWORD))xmmword_100994BF8)(a1, v17, 0, 0);
      goto LABEL_55;
    }
  }
}

uint64_t sub_10017AB80(unsigned __int16 *a1)
{
  NSObject *v2;
  __int128 *v3;
  char v4;
  uint64_t v5;
  uint64_t *v6;
  int v7;
  unsigned __int16 *v8;
  NSObject *v9;
  uint64_t v10;
  int *v11;
  NSObject *v12;
  const char *v14;
  NSObject *v15;
  unsigned __int16 *v16;
  int v17;
  uint64_t v18;
  NSObject *v19;
  uint8_t buf[512];
  _OWORD v21[2];

  if (sub_1000F0414((uint64_t)a1))
  {
    if (sub_10005549C())
    {
      sub_100054530("DOWNGRADE not supposed to get a downgrade from the peripheral.");
      v2 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136446210;
        *(_QWORD *)&buf[4] = sub_100054494();
        _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    v3 = (__int128 *)a1;
    v4 = 2;
    return sub_10017B810(v3, 32, v4);
  }
  v5 = dword_100994BF4;
  if (!dword_100994BF4)
    goto LABEL_23;
  v6 = qword_100994C30;
  while ((unsigned __int16 *)*v6 != a1)
  {
    v6 += 134;
    if (!--v5)
      goto LABEL_23;
  }
  v7 = *((unsigned __int16 *)v6 + 4);
  if (*((_BYTE *)v6 + 10))
  {
    v8 = (unsigned __int16 *)v6[2];
  }
  else
  {
    if (sub_10005549C())
    {
      sub_100054530("DOWNGRADE no alternate handle to downgrade from.");
      v9 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    v8 = 0;
  }
  if (v7 == 0xFFFF)
  {
LABEL_23:
    if (sub_10005549C())
    {
      sub_100054530("DOWNGRADE invalid handle for downgrade");
      v12 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    v3 = (__int128 *)a1;
    v4 = 1;
    return sub_10017B810(v3, 32, v4);
  }
  v10 = dword_100994BF4;
  if (!dword_100994BF4)
    goto LABEL_35;
  v11 = &dword_100994C60;
  while (*((unsigned __int16 *)v11 - 20) != v7)
  {
    v11 += 268;
    if (!--v10)
      goto LABEL_35;
  }
  if (*v11 == 6)
  {
    if ((sub_10019AB28((uint64_t)v8)
       || sub_10019ABD0((uint64_t)v8)
       || sub_10019AC00((uint64_t)v8)
       || sub_10019AC30((uint64_t)v8))
      && sub_1001A12A8((uint64_t)v8))
    {
      sub_10017532C(v8);
      sub_100175704(v7, 0xBu);
      return sub_1001A0FD0(1, (uint64_t)v8, sub_100175850);
    }
    if (sub_10005549C())
    {
      sub_100054530("Received DOWNGRADE from lmhandle 0x%4x", *a1);
      v19 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136446210;
        *(_QWORD *)&buf[4] = sub_100054494();
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    v21[0] = xmmword_10073A130;
    v21[1] = unk_10073A140;
    memcpy(buf, "state", sizeof(buf));
    sub_1001141C0("Magnet Operation", (const char *)buf, v21, 2);
    v16 = a1;
    v17 = 0;
    v18 = (uint64_t)v8;
  }
  else
  {
LABEL_35:
    if (sub_10005549C())
    {
      v14 = sub_100173108(*((_DWORD *)v6 + 12));
      sub_100054530("DOWNGRADE can't downgrade state isn't IDLE it's %s", v14);
      v15 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    v16 = a1;
    v17 = 5;
    v18 = 0;
  }
  return sub_100175AF0(v16, v17, v18);
}

void sub_10017AF08(unsigned __int16 *a1)
{
  uint64_t v2;
  NSObject *v3;
  uint64_t *v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int *v9;
  const char *v10;
  NSObject *v11;
  uint64_t i;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  void (*v20)(_QWORD);
  NSObject *v21;
  uint64_t *v22;
  unsigned __int8 *v23;
  int v24;
  NSObject *v25;
  NSObject *v26;
  void *v27;
  NSObject *v28;
  int v29;
  uint8_t buf[4];
  void *v31;

  if (sub_1000F0414((uint64_t)a1))
  {
    if (!dword_100994BF4)
      goto LABEL_49;
    v2 = 0;
    while ((unsigned __int16 *)qword_100994C30[134 * v2] != a1)
    {
      if (++v2 == dword_100994BF4)
        goto LABEL_49;
    }
    v4 = &qword_100994C30[134 * v2];
    v5 = *((unsigned __int16 *)v4 + 4);
    v6 = *((unsigned __int8 *)v4 + 10);
    v7 = *((unsigned __int8 *)v4 + 76);
    sub_100175D48(v2, 1);
    sub_100178400(v5);
    v8 = dword_100994BF4;
    if (!dword_100994BF4)
      goto LABEL_17;
    v9 = &dword_100994C60;
    while (*((unsigned __int16 *)v9 - 20) != v5)
    {
      v9 += 268;
      if (!--v8)
        goto LABEL_17;
    }
    if (*v9 != 12)
    {
LABEL_17:
      if (sub_10005549C())
      {
        v10 = sub_100173108(qword_100994C30[134 * v2 + 6]);
        sub_100054530("ERROR ! Remote sent us a DOWNGRADE_CFM but we are in %s state, disconnecting.", v10);
        v11 = sub_1000544A0(0x56u);
        if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      sub_10021F3D0((uint64_t)a1);
    }
    sub_100175704(v5, 6u);
    if ((_DWORD)v6)
    {
      v29 = v7;
      for (i = 0; i != v6; ++i)
      {
        v13 = &qword_100994C30[134 * v2 + 2 * i];
        v15 = v13[2];
        v14 = v13 + 2;
        sub_100173E58(v15, a1);
        v16 = sub_10019AB28(*v14);
        v17 = *v14;
        if (v16)
        {
          if (*(_DWORD *)(v17 + 148))
            sub_100174DF8(v17, 19);
        }
        else
        {
          if (*(_BYTE *)(v17 + 2) != 8)
            sub_100253460();
          v18 = byte_100994BF0;
          if (byte_100994BF0)
          {
            v19 = (unsigned __int8 *)qword_100994BE8;
            while (*(_DWORD *)(*v14 + 56) != *v19)
            {
              v19 += 64;
              if (!--v18)
                goto LABEL_35;
            }
            v20 = (void (*)(_QWORD))*((_QWORD *)v19 + 6);
            if (v20)
              v20(*(unsigned __int16 *)*v14);
          }
        }
LABEL_35:
        ;
      }
      sub_1000F3A68((uint64_t)a1, 0);
      sub_100175A18(a1);
      v7 = v29;
    }
    else
    {
      sub_1000F3A68((uint64_t)a1, 0);
      sub_100175A18(a1);
      if (sub_10005549C())
      {
        sub_100054530("DOWNGRADE_CFM no alternate handle to downgrade from.");
        v21 = sub_1000544A0(0x56u);
        if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
    }
    sub_100175F58((unsigned __int16)v2, v7, 0);
    v22 = &qword_100994C30[134 * v2];
    v24 = *((unsigned __int8 *)v22 + 77);
    v23 = (unsigned __int8 *)v22 + 77;
    if (v24 != 1)
    {
      if (sub_10005549C())
      {
        sub_100054530("DOWNGRADE_CFM upgrading transport since this downgrade was triggered by a upgrade to different alternate transport");
        v25 = sub_1000544A0(0x56u);
        if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 136446210;
          v31 = sub_100054494();
          _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      sub_100171AC0(a1, *v23, qword_100994C30[134 * v2 + 14]);
    }
    if (v5 == 0xFFFF)
    {
LABEL_49:
      if (sub_10005549C())
      {
        sub_100054530("Invalid handle for downgrade");
        v28 = sub_1000544A0(0x56u);
        if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
    }
    else if (sub_10005549C())
    {
      sub_100054530("Got a downgrade confirmation from lmhandle 0x%4x", *a1);
      v26 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
      {
        v27 = sub_100054494();
        *(_DWORD *)buf = 136446210;
        v31 = v27;
        _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
  }
  else
  {
    if (sub_10005549C())
    {
      sub_100054530("DOWNGRADE_CFM not supposed to get a downgrade CFM from the central.");
      v3 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136446210;
        v31 = sub_100054494();
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    sub_10017B810((__int128 *)a1, 33, 2);
  }
}

void sub_10017B38C(unsigned __int16 *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  _BOOL4 v5;
  NSObject *v6;
  int *v7;
  const char *v8;
  NSObject *v9;
  const char *v10;
  NSObject *v11;
  void *v12;
  uint8_t buf[4];
  void *v14;

  if (sub_1000F0414((uint64_t)a1))
  {
    v2 = dword_100994BF4;
    if (dword_100994BF4)
    {
      v3 = 0;
      v4 = qword_100994C30;
      while ((unsigned __int16 *)*v4 != a1)
      {
        ++v3;
        v4 += 134;
        if (dword_100994BF4 == v3)
        {
          v5 = 0;
          LODWORD(v3) = dword_100994BF4;
          goto LABEL_22;
        }
      }
      *((_DWORD *)v4 + 21) = 1;
      v7 = &dword_100994C60;
      while (*((unsigned __int16 *)v7 - 20) != *((unsigned __int16 *)v4 + 4))
      {
        v7 += 268;
        if (!--v2)
          goto LABEL_18;
      }
      if (*v7 == 6)
      {
        v5 = *((_DWORD *)v4 + 29) == 0;
        goto LABEL_22;
      }
LABEL_18:
      if ((sub_10005549C() & 1) != 0)
      {
        v8 = sub_100173108(*((_DWORD *)v4 + 12));
        sub_100054530("DOWNGRADE_REQ not downgrading, state is %s", v8);
        v9 = sub_1000544A0(0x56u);
        if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 136446210;
          v14 = sub_100054494();
          _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      v5 = 0;
    }
    else
    {
      LODWORD(v3) = 0;
      v5 = 0;
    }
LABEL_22:
    if (sub_10005549C())
    {
      v10 = "postponing";
      if (v5)
        v10 = "accepting";
      sub_100054530("Received DOWNGRADE_REQ from peer %d, %s", v3, v10);
      v11 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        v12 = sub_100054494();
        *(_DWORD *)buf = 136446210;
        v14 = v12;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    if (v5)
    {
      sub_10017264C(a1, 32);
    }
    else if ((_DWORD)v3 == dword_100994BF4)
    {
      sub_100253460();
    }
    else
    {
      sub_1000EE134(3u, 0, (unsigned __int16)v3);
    }
  }
  else
  {
    if (sub_10005549C())
    {
      sub_100054530("DOWNGRADE_REQ not supposed to get a downgrade request from the central.");
      v6 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136446210;
        v14 = sub_100054494();
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    sub_10017B810((__int128 *)a1, 34, 2);
  }
}

void sub_10017B644(unsigned int a1)
{
  const char *v2;
  NSObject *v3;
  uint8_t buf[4];
  void *v5;
  __int16 v6;
  int v7;

  if (sub_10005549C())
  {
    if (a1 > 8)
      v2 = "ERROR_Unknown";
    else
      v2 = off_10091D388[(char)a1];
    sub_100054530("Remote side sent fatal %s", v2);
    v3 = sub_1000544A0(0x56u);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446466;
      v5 = sub_100054494();
      v6 = 1024;
      v7 = 0xFFFF;
      _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
    }
  }
  sub_1001131F8(a1 + 5050, "TS Remote Error");
}

const char *sub_10017B710(int a1)
{
  int v1;
  const char *result;

  if (a1 > 31)
  {
    if (a1 <= 33)
    {
      if (a1 == 32)
        return "DOWNGRADE";
      else
        return "DOWNGRADE_CFM";
    }
    else
    {
      switch(a1)
      {
        case 34:
          return "DOWNGRADE_REQ";
        case 254:
          return "FATAL_ERROR";
        case 255:
          return "ERROR";
        default:
          return "Unknown";
      }
    }
  }
  else
  {
    v1 = a1 - 1;
    result = "VERSION_IND";
    switch(v1)
    {
      case 0:
        return result;
      case 1:
        result = "CAPS_IND";
        break;
      case 4:
        result = "CAPS_CHANGED_IND";
        break;
      case 15:
        result = "UPGRADE_REQ";
        break;
      case 16:
        result = "UPGRADE";
        break;
      case 17:
        result = "UPGRADE_CFM";
        break;
      case 18:
        result = "UPGRADE_COMPLETE";
        break;
      case 19:
        result = "COMPLETE_CFM";
        break;
      default:
        return "Unknown";
    }
  }
  return result;
}

uint64_t sub_10017B810(__int128 *a1, char a2, char a3)
{
  uint64_t v3;
  __int16 *v4;
  unsigned int v5;
  __int16 v7;
  char v8;
  char v9;

  v7 = 767;
  v8 = a2;
  v9 = a3;
  v3 = dword_100994BF4;
  if (dword_100994BF4)
  {
    v4 = &word_100994C38;
    while (*((__int128 **)v4 - 1) != a1)
    {
      v4 += 536;
      if (!--v3)
        goto LABEL_5;
    }
    v5 = (unsigned __int16)*v4;
  }
  else
  {
LABEL_5:
    v5 = 0xFFFF;
  }
  return sub_1000F1F44(0, a1, v5, (char *)&v7, 4uLL, 0);
}

uint64_t sub_10017B88C(_BYTE *a1, unsigned int a2, _QWORD *a3, _DWORD *a4)
{
  uint64_t v4;
  NSObject *v6;
  uint64_t result;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  int v15;
  char *v16;
  int v17;
  int v18;
  int v19;
  int v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  NSObject *v24;

  *a4 = 0;
  *a3 = 0;
  v4 = *a1;
  if (!*a1)
    return 3;
  if (13 * (int)v4 > a2)
  {
    if (sub_10005549C())
    {
      sub_100054530("Invalid size, got %d, expected %d", a2, 13 * v4);
      v6 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 3;
  }
  v11 = (char *)sub_100052DC0((unint64_t)*a1 << 6);
  result = 1;
  if (v11)
  {
    v12 = 0;
    v13 = qword_100994BE8 + 16;
    v14 = 1;
    while (1)
    {
      v15 = a1[v14];
      if (v14 + v15 > a2)
        break;
      v16 = &v11[64 * v12];
      *v16 = a1[v14 + 1];
      v17 = a1[v14 + 2];
      v16[1] = v17;
      v16[2] = a1[v14 + 3] != 0;
      v16[12] = a1[v14 + 4] != 0;
      v18 = a1[v14 + 5];
      *((_DWORD *)v16 + 1) = v18;
      v19 = v18 | (a1[v14 + 6] << 8);
      *((_DWORD *)v16 + 1) = v19;
      v20 = v19 | (a1[v14 + 7] << 16);
      *((_DWORD *)v16 + 1) = v20;
      *((_DWORD *)v16 + 1) = v20 | (a1[v14 + 8] << 24);
      LOWORD(v20) = a1[v14 + 9];
      *((_WORD *)v16 + 4) = v20;
      *((_WORD *)v16 + 4) = v20 | (a1[v14 + 10] << 8);
      LOWORD(v20) = a1[v14 + 11];
      *((_WORD *)v16 + 5) = v20;
      *((_WORD *)v16 + 5) = v20 | (a1[v14 + 12] << 8);
      v21 = byte_100994BF0;
      v22 = (_QWORD *)v13;
      if (byte_100994BF0)
      {
        while (*((unsigned __int8 *)v22 - 15) != v17)
        {
          v22 += 8;
          if (!--v21)
            goto LABEL_15;
        }
        v23 = &v11[64 * v12];
        v23[13] = 1;
        *((_QWORD *)v23 + 2) = *v22;
      }
LABEL_15:
      v14 += 1 + v15;
      if (++v12 == v4)
        goto LABEL_20;
    }
    if (sub_10005549C())
    {
      sub_100054530("pos(%d) + transportSize(%d) > dataSize(%d)", v14, v15, a2);
      v24 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
LABEL_20:
    result = 0;
    *a3 = v11;
    *a4 = v4;
  }
  return result;
}

void sub_10017BAD4(int a1)
{
  NSObject *v2;

  if (a1 && sub_10005549C())
  {
    sub_100054530("_writeLeRemotePublicAddressCB:  %d", a1);
    v2 = sub_1000544A0(0x56u);
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
}

void sub_10017BB40(__int128 *a1, unsigned int a2, int a3)
{
  uint64_t v5;
  __int16 *v6;
  uint64_t v7;
  char *v8;
  size_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  const char *v15;
  NSObject *v16;
  void *v17;
  int v18;
  _WORD __len[13];

  v5 = dword_100994BF4;
  if (dword_100994BF4)
  {
    v6 = &word_100994C38;
    while (*((__int128 **)v6 - 1) != a1)
    {
      v6 += 536;
      if (!--v5)
        goto LABEL_5;
    }
    v7 = (unsigned __int16)*v6;
  }
  else
  {
LABEL_5:
    v7 = 0xFFFFLL;
  }
  __len[0] = 0;
  if (a2)
  {
    sub_100175704(v7, 6u);
LABEL_9:
    v8 = 0;
    v9 = 3;
    goto LABEL_10;
  }
  v12 = byte_100994BF0;
  if (!byte_100994BF0)
    goto LABEL_9;
  v13 = qword_100994BE8;
  v9 = 3;
  while (*(unsigned __int8 *)(v13 + 1) != a3)
  {
    v13 += 64;
    if (!--v12)
    {
      v8 = 0;
      goto LABEL_10;
    }
  }
  if (!*(_BYTE *)(v13 + 12))
    goto LABEL_9;
  v8 = (char *)(*(uint64_t (**)(_WORD *))(v13 + 56))(__len);
  v9 = __len[0] + 3;
LABEL_10:
  v10 = (char *)sub_100052DC0(v9);
  if (v10)
  {
    v11 = v10;
    *v10 = 18;
    v10[1] = LOBYTE(__len[0]) + 1;
    v10[2] = a2;
    if (v8 && __len[0])
    {
      memmove(v10 + 3, v8, __len[0]);
    }
    else if (!v8)
    {
      goto LABEL_23;
    }
    sub_100053298(v8);
LABEL_23:
    v14 = *(unsigned __int16 *)a1;
    if (sub_10005549C())
    {
      v15 = a2 > 8 ? "ERROR_Unknown" : off_10091D388[(char)a2];
      sub_100054530("Sending UPGRADE_CFM to lmhandle 0x%4x p:0x%4x with %s", v14, v7, v15);
      v16 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
      {
        v17 = sub_100054494();
        *(_DWORD *)&__len[1] = 136446210;
        *(_QWORD *)&__len[3] = v17;
        _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, " %{public}s", (uint8_t *)&__len[1], 0xCu);
      }
    }
    v18 = sub_1000F1F44(0, a1, v7, v11, (unsigned __int16)(__len[0] + 3), 0);
    if (v18 == 412 || !v18)
      sub_100175928(v7, 0x61A8u);
    v8 = v11;
    goto LABEL_33;
  }
  if (v8)
LABEL_33:
    sub_100053298(v8);
}

uint64_t sub_10017BD8C(int a1, unsigned __int16 *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  unsigned __int8 (**v11)(unsigned __int16 *, uint64_t, uint64_t, uint64_t, void (*)(uint64_t, int, uint64_t), void (*)(int));

  sub_10017532C(a2);
  v10 = byte_100994BF0;
  if (byte_100994BF0)
  {
    v11 = (unsigned __int8 (**)(unsigned __int16 *, uint64_t, uint64_t, uint64_t, void (*)(uint64_t, int, uint64_t), void (*)(int)))(qword_100994BE8 + 40);
    while (*((unsigned __int8 *)v11 - 39) != a1)
    {
      v11 += 8;
      if (!--v10)
        goto LABEL_8;
    }
    if (*v11 && !(*v11)(a2, a5, a3, a4, sub_10017BE4C, sub_10017BF70))
      return 0;
  }
LABEL_8:
  sub_100175A18(a2);
  return 4;
}

void sub_10017BE4C(uint64_t a1, int a2, uint64_t a3)
{
  unsigned __int16 *v5;
  NSObject *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;

  v5 = (unsigned __int16 *)a1;
  if (!sub_10019AC00(a1))
    v5 = 0;
  if (sub_10019ACEC(a2))
  {
    if (sub_10005549C())
    {
      sub_100054530("Error : collision between external transport LMHandle and exiting connection : %d already in use", a2);
      v6 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    if (sub_10019ACEC(a2))
      sub_100253460();
  }
  else
  {
    if ((_DWORD)a3)
    {
      v7 = 0;
    }
    else
    {
      v8 = sub_10019B7F4((uint64_t)v5);
      v7 = (uint64_t)v8;
      if (v8)
      {
        *(_WORD *)v8 = a2;
        v8[60] = 0;
        v9 = byte_100994BF0;
        if (byte_100994BF0)
        {
          v10 = (_BYTE *)(qword_100994BE8 + 1);
          while (*v10 != 17)
          {
            v10 += 64;
            if (!--v9)
              goto LABEL_12;
          }
          *((_DWORD *)v8 + 14) = *(v10 - 1);
        }
      }
    }
LABEL_12:
    sub_1001745C8(v5, v7, a3, 1);
  }
}

void sub_10017BF70(int a1)
{
  __int128 *v1;
  unsigned __int16 *v2;

  v1 = sub_10019ACEC(a1);
  if (v1)
  {
    v2 = (unsigned __int16 *)v1;
    sub_100174E38((uint64_t)v1, 0);
    sub_10019B934(v2);
  }
  else
  {
    sub_100253460();
  }
}

void sub_10017BFAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int v6;
  const char *v7;
  NSObject *v8;
  uint64_t v9;
  __int16 *v10;
  uint64_t v11;
  NSObject *v12;

  v1 = **(unsigned __int16 **)(a1 + 8);
  v2 = dword_100994BF4;
  if (dword_100994BF4)
  {
    v3 = (unsigned int *)&dword_100994C60;
    while (*((unsigned __int16 *)v3 - 20) != (_DWORD)v1)
    {
      v3 += 268;
      if (!--v2)
        goto LABEL_5;
    }
    v4 = *v3;
    v6 = *v3 + 4993;
    if (v4 - 7 >= 6)
      v5 = 5014;
    else
      v5 = v6;
  }
  else
  {
LABEL_5:
    v4 = 0;
    v5 = 5014;
  }
  if (sub_10005549C())
  {
    v7 = sub_100173108(v4);
    sub_100054530("Critical timeout elapsed during %s - disconnecting device, due to error %! on pipe ID 0x%2x", v7, v5, v1);
    v8 = sub_1000544A0(0x56u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
  v9 = dword_100994BF4;
  if (dword_100994BF4)
  {
    v10 = &word_100994C38;
    while ((unsigned __int16)*v10 != (_DWORD)v1)
    {
      v10 += 536;
      if (!--v9)
        goto LABEL_16;
    }
    v11 = *((_QWORD *)v10 - 1);
  }
  else
  {
LABEL_16:
    v11 = 0;
  }
  if (off_100994C20)
    off_100994C20(v11, 81, 1273, v5);
  if (v11 && sub_10019AC00(v11))
  {
    if (sub_10005549C())
    {
      sub_100054530("Disconnecting device %x", v11);
      v12 = sub_1000544A0(0x56u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    sub_10021F3D0(v11);
  }
}

uint64_t sub_10017C130(uint64_t (*a1)(_QWORD), uint64_t (*a2)(_QWORD), void (*a3)(void), void (*a4)(uint64_t, const char *))
{
  NSObject *v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t i;
  NSObject *v21;
  uint64_t v23;
  NSObject *v24;
  NSObject *v25;
  int v26;
  const char *v27;

  off_100998F30 = 0;
  sub_100253BB4();
  sub_100252DD0();
  if (a3)
  {
    v8 = sub_1000544A0(0x5Cu);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      v26 = 136446210;
      v27 = "Invoking customization callback\n";
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%{public}s", (uint8_t *)&v26, 0xCu);
    }
    a3();
  }
  if (sub_100253034())
  {
    v9 = sub_1000544A0(0x5Cu);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      v26 = 136446210;
      v27 = "Support code initialization failed\n";
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "%{public}s", (uint8_t *)&v26, 0xCu);
    }
  }
  v10 = sub_100252DE8(0x30u);
  v11 = sub_1001144E8(v10);
  if ((_DWORD)v11)
  {
    v23 = v11;
    v24 = sub_1000544A0(0x5Cu);
    if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
    {
      v26 = 136446210;
      v27 = "Memory Manager initialization failed\n";
      _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, "%{public}s", (uint8_t *)&v26, 0xCu);
    }
    v13 = sub_100112D60(v23);
    goto LABEL_36;
  }
  sub_10025369C(0, a2);
  if ((sub_10011C140(0) & 1) == 0)
  {
    v12 = sub_1000544A0(0x5Cu);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      v26 = 136446210;
      v27 = "Sniffer initialization failed\n";
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "%{public}s", (uint8_t *)&v26, 0xCu);
    }
  }
  v13 = sub_10017FBEC(0);
  if ((_DWORD)v13)
  {
LABEL_36:
    v15 = v13;
    v25 = sub_1000544A0(0x5Cu);
    if (!os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
      goto LABEL_45;
    v26 = 136446210;
    v27 = "Device Manager initialization failed\n";
    goto LABEL_44;
  }
  v14 = sub_10016F75C();
  v15 = v14;
  if (!a1 && (_DWORD)v14 == 109)
  {
    do
    {
      sub_1000478A0();
      sub_100113670(100);
      sub_1000477B8();
      v16 = sub_10016F7F8();
    }
    while ((_DWORD)v16 == 109);
    v15 = v16;
  }
  if ((_DWORD)v15)
  {
    v25 = sub_1000544A0(0x5Cu);
    if (!os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
      goto LABEL_45;
    v26 = 136446210;
    v27 = "Transport layer initialization failed\n";
    goto LABEL_44;
  }
  v17 = sub_100191FEC(0);
  if ((_DWORD)v17)
  {
    v15 = v17;
    v25 = sub_1000544A0(0x5Cu);
    if (!os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
      goto LABEL_45;
    v26 = 136446210;
    v27 = "OI_HCIAPI_Init_Vars failed\n";
    goto LABEL_44;
  }
  v18 = sub_1001F4E78();
  if ((_DWORD)v18)
  {
    v15 = v18;
    v25 = sub_1000544A0(0x5Cu);
    if (!os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
      goto LABEL_45;
    v26 = 136446210;
    v27 = "BT VSC init failed\n";
LABEL_44:
    _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "%{public}s", (uint8_t *)&v26, 0xCu);
LABEL_45:
    sub_100112D60(v15);
  }
  if (a1)
  {
    off_100998F30 = a1;
    v19 = sub_100192168((uint64_t)sub_10017C59C);
    if (!(_DWORD)v19)
      return v19;
  }
  else
  {
    for (i = sub_100192168(0); ; i = sub_100192204())
    {
      v19 = i;
      if ((_DWORD)i != 109)
        break;
      sub_1000478A0();
      sub_100113670(10);
      sub_1000477B8();
    }
    if (!(_DWORD)i)
    {
      sub_10017C59C(0);
      return v19;
    }
  }
  v21 = sub_1000544A0(0x5Cu);
  if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
  {
    v26 = 136446210;
    v27 = "HCI initialization failed\n";
    _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "%{public}s", (uint8_t *)&v26, 0xCu);
  }
  if (!a4)
    sub_1001131F8(v19, "HCI initialization failed");
  a4(v19, "HCI initialization failed");
  return v19;
}

void sub_10017C59C(NSObject *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  NSObject *v6;
  int v7;
  int v8;
  const char *v9;

  if ((_DWORD)a1)
  {
    v6 = a1;
    v5 = sub_1000544A0(0x5Cu);
    if (!os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      goto LABEL_23;
    v8 = 136446210;
    v9 = "HCI initialization failed\n";
LABEL_22:
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%{public}s", (uint8_t *)&v8, 0xCu);
    goto LABEL_23;
  }
  v1 = sub_1002547FC(0);
  if ((_DWORD)v1)
  {
    v6 = v1;
    v5 = sub_1000544A0(0x5Cu);
    if (!os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      goto LABEL_23;
    v8 = 136446210;
    v9 = "Policy Manager initialization failed\n";
    goto LABEL_22;
  }
  v2 = sub_1001E34A8(0);
  if ((_DWORD)v2)
  {
    v6 = v2;
    v5 = sub_1000544A0(0x5Cu);
    if (!os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      goto LABEL_23;
    v8 = 136446210;
    v9 = "L2CAP initialization failed\n";
    goto LABEL_22;
  }
  v3 = sub_10024B2BC();
  if ((_DWORD)v3)
  {
    v6 = v3;
    v5 = sub_1000544A0(0x5Cu);
    if (!os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      goto LABEL_23;
    v8 = 136446210;
    v9 = "Security Manager initialization failed\n";
    goto LABEL_22;
  }
  v4 = sub_1002246F8();
  if ((_DWORD)v4)
  {
    v6 = v4;
    v5 = sub_1000544A0(0x5Cu);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      v8 = 136446210;
      v9 = "LE GAP initialization failed\n";
      goto LABEL_22;
    }
LABEL_23:
    v7 = sub_100112D60((uint64_t)v6);
LABEL_24:
    if (v7)
    {
      v8 = 136446210;
      v9 = "SDP Server initialization failed\n";
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%{public}s", (uint8_t *)&v8, 0xCu);
    }
    sub_100112D60((uint64_t)v5);
  }
  v5 = sub_100248B0C(0);
  v6 = sub_1000544A0(0x5Cu);
  v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);
  if ((_DWORD)v5)
    goto LABEL_24;
  if (v7)
  {
    v8 = 136446210;
    v9 = "Stack initialization complete\n";
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%{public}s", (uint8_t *)&v8, 0xCu);
  }
  if (off_100998F30)
    off_100998F30(0);
}

uint64_t sub_10017C854()
{
  sub_10016F818();
  sub_100224C90();
  sub_1001F2A74();
  sub_1001A212C();
  sub_10016F808();
  sub_100114548();
  return 0;
}

BOOL sub_10017C880(int a1, _QWORD *a2)
{
  uint64_t v6;

  HIDWORD(v6) = 0x100000;
  if (!a2)
    sub_100253460();
  LODWORD(v6) = a1;
  return *a2 == v6 && a2[1] == 0xFB349B5F80000080;
}

BOOL sub_10017C904(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (*(_BYTE *)a1 != 3 || *(_BYTE *)a2 != 3)
    return 0;
  v2 = *(unsigned __int16 *)(a1 + 2);
  if (v2 == 2)
  {
LABEL_6:
    v3 = *(_DWORD *)(a1 + 8);
    if (*(_WORD *)(a2 + 2) == 16)
      return sub_10017C880(v3, *(_QWORD **)(a2 + 8));
    return v3 == *(_DWORD *)(a2 + 8);
  }
  if (v2 != 16)
  {
    if (v2 == 4)
      goto LABEL_6;
    return 0;
  }
  if (*(_WORD *)(a2 + 2) != 16)
    return sub_10017C880(*(_DWORD *)(a2 + 8), *(_QWORD **)(a1 + 8));
  v4 = *(uint64_t **)(a1 + 8);
  v5 = *(uint64_t **)(a2 + 8);
  v7 = *v4;
  v6 = v4[1];
  v9 = *v5;
  v8 = v5[1];
  return v7 == v9 && v6 == v8;
}

uint64_t sub_10017C9A0(uint64_t a1)
{
  int v1;
  unsigned int *v3;
  __int128 v4;

  v4 = xmmword_100739850;
  if (*(_BYTE *)a1 != 3)
    return 0;
  v1 = *(unsigned __int16 *)(a1 + 2);
  if (v1 == 2)
    return *(unsigned int *)(a1 + 8);
  if (v1 != 16)
  {
    if (v1 == 4)
      return *(unsigned int *)(a1 + 8);
    return 0;
  }
  v3 = *(unsigned int **)(a1 + 8);
  LODWORD(v4) = *v3;
  if (*(_OWORD *)v3 == v4)
    return *v3;
  else
    return 0;
}

const char *sub_10017CA54(uint64_t a1)
{
  if (*(_BYTE *)a1 != 3)
    sub_100253460();
  if (*(_WORD *)(a1 + 2) == 16)
    return sub_10025099C(*(unsigned int **)(a1 + 8));
  else
    return sub_100250C9C(*(unsigned int *)(a1 + 8));
}

uint64_t sub_10017CAA0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4;
  uint64_t v6;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  __int16 v11;
  unsigned int *v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  uint64_t j;
  int v17;
  uint64_t v18;
  uint64_t i;
  unsigned int v20;

  v4 = a2;
  if (*(_BYTE *)a2 == 32)
    v4 = *(_QWORD *)(a2 + 8);
  sub_100259414(a1, a3);
  sub_1000729B4(a1, "<");
  v6 = *(unsigned __int16 *)(a1 + 4);
  switch(*(_BYTE *)v4)
  {
    case 0:
      v7 = "null";
      goto LABEL_9;
    case 1:
      v10 = "uint";
      goto LABEL_16;
    case 2:
      v10 = "sint";
      goto LABEL_16;
    case 3:
      v10 = "uuid";
LABEL_16:
      sub_1000729B4(a1, v10);
      sub_1002594A4(a1, 8 * *(unsigned __int16 *)(v4 + 2));
      break;
    case 4:
      v8 = "text";
      goto LABEL_21;
    case 5:
      if (*(_BYTE *)(v4 + 8))
        v7 = "true";
      else
        v7 = "false";
LABEL_9:
      sub_1000729B4(a1, v7);
      v9 = "/>\n";
      return sub_1000729B4(a1, v9);
    case 6:
      v8 = "seq";
      goto LABEL_21;
    case 7:
      v8 = "alt";
      goto LABEL_21;
    case 8:
      v8 = "url";
      goto LABEL_21;
    case 0x11:
      v8 = "bdaddr";
      goto LABEL_21;
    case 0x12:
      v8 = "rawbytes";
      goto LABEL_21;
    case 0x13:
      v8 = "status";
      goto LABEL_21;
    case 0x14:
      v8 = "text16";
LABEL_21:
      sub_1000729B4(a1, v8);
      break;
    default:
      break;
  }
  v11 = *(_WORD *)(a1 + 4);
  sub_10017CF0C(a1, (unsigned __int8 *)v4);
  sub_1000729B4(a1, ">");
  switch(*(_BYTE *)v4)
  {
    case 1:
    case 2:
      if (*(unsigned __int16 *)(v4 + 2) >= 5u)
      {
        sub_1000729B4(a1, "0x");
        v12 = *(unsigned int **)(v4 + 8);
        if (*(_WORD *)(v4 + 2) == 8)
        {
          sub_100072A40(a1, *v12, 8);
          v13 = *(_DWORD *)(*(_QWORD *)(v4 + 8) + 4);
        }
        else
        {
          sub_100072A40(a1, *v12, 8);
          sub_100072A40(a1, *(_DWORD *)(*(_QWORD *)(v4 + 8) + 4), 8);
          sub_100072A40(a1, *(_DWORD *)(*(_QWORD *)(v4 + 8) + 8), 8);
          v13 = *(_DWORD *)(*(_QWORD *)(v4 + 8) + 12);
        }
        v18 = a1;
        v17 = 8;
        goto LABEL_48;
      }
      if (*(_BYTE *)v4 != 1)
        goto LABEL_45;
      sub_1000729B4(a1, "0x");
      v13 = *(_DWORD *)(v4 + 8);
      v15 = *(unsigned __int16 *)(v4 + 2);
      goto LABEL_44;
    case 3:
      sub_1000729B4(a1, "0x");
      v15 = *(unsigned __int16 *)(v4 + 2);
      if (v15 > 4)
      {
        sub_100072A40(a1, **(_DWORD **)(v4 + 8), 8);
        sub_1000729B4(a1, ",");
        for (i = 4; i != 16; ++i)
        {
          sub_100072A40(a1, *(unsigned __int8 *)(*(_QWORD *)(v4 + 8) + i), 2);
          v20 = (i - 4);
          if (v20 <= 5 && ((1 << v20) & 0x2A) != 0)
            sub_1000729B4(a1, ",");
        }
      }
      else
      {
        v13 = *(_DWORD *)(v4 + 8);
LABEL_44:
        v17 = 2 * v15;
        v18 = a1;
LABEL_48:
        sub_100072A40(v18, v13, v17);
      }
      break;
    case 4:
    case 8:
      sub_100259120(a1, *(char **)(v4 + 8), *(unsigned __int16 *)(v4 + 2));
      break;
    case 6:
    case 7:
      sub_1000729B4(a1, "\n");
      if (*(_WORD *)(v4 + 2))
      {
        v14 = 0;
        do
          sub_10017CAA0(a1, *(_QWORD *)(v4 + 8) + 16 * v14++, (a3 + 4));
        while (*(unsigned __int16 *)(v4 + 2) > v14);
      }
      goto LABEL_40;
    case 0x11:
      for (j = 0; j != 6; ++j)
      {
        if (j)
          sub_1000729B4(a1, ":");
        sub_100072A40(a1, *(unsigned __int8 *)(*(_QWORD *)(v4 + 8) + j), 2);
      }
      break;
    case 0x12:
      sub_10017D068(a1, *(_QWORD *)(v4 + 8), *(unsigned __int16 *)(v4 + 2), (a3 + 4));
      goto LABEL_40;
    case 0x13:
LABEL_45:
      sub_1002594A4(a1, *(_DWORD *)(v4 + 8));
      break;
    case 0x14:
      sub_10017CFAC(a1, *(_QWORD *)(v4 + 8), *(unsigned __int16 *)(v4 + 2), (a3 + 4));
LABEL_40:
      sub_100259414(a1, a3);
      break;
    default:
      sub_1000729B4(a1, "!!!Corrupt Data Element!!!");
      break;
  }
  sub_1000729B4(a1, "</");
  sub_100259120(a1, (char *)(*(_QWORD *)(a1 + 8) + v6), (unsigned __int16)(v11 - v6));
  sub_1000729B4(a1, ">");
  v9 = "\n";
  return sub_1000729B4(a1, v9);
}

uint64_t sub_10017CF0C(uint64_t a1, unsigned __int8 *a2)
{
  int v3;
  const char *v4;
  char *v5;

  v3 = *a2;
  if (v3 == 3)
  {
    if (*((unsigned __int16 *)a2 + 1) > 4u)
      return 0;
    v4 = sub_100250C9C(*((unsigned int *)a2 + 2));
  }
  else
  {
    if (v3 != 19)
      return 0;
    sub_100255B10(*((unsigned int *)a2 + 2));
  }
  v5 = (char *)v4;
  if (v4)
  {
    sub_1000729B4(a1, " id=\"");
    sub_1000729B4(a1, v5);
    sub_1000729B4(a1, "\"");
    sub_1000729B4(a1, "\t");
    return 1;
  }
  return 0;
}

uint64_t sub_10017CFAC(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v8;

  sub_1000729B4(a1, "\n");
  sub_100259414(a1, a4);
  if (a3)
  {
    v8 = 0;
    do
    {
      if (v8 && (v8 & 0xF) == 0)
      {
        sub_1000729B4(a1, "\n");
        sub_100259414(a1, a4);
      }
      sub_100072A40(a1, *(unsigned __int16 *)(a2 + 2 * v8), 4);
      sub_100259414(a1, 1);
      ++v8;
    }
    while (a3 != v8);
  }
  return sub_1000729B4(a1, "\n");
}

uint64_t sub_10017D068(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v8;

  sub_1000729B4(a1, "\n");
  sub_100259414(a1, a4);
  if (a3)
  {
    v8 = 0;
    do
    {
      if (v8 && (v8 & 0x1F) == 0)
      {
        sub_1000729B4(a1, "\n");
        sub_100259414(a1, a4);
      }
      sub_100072A40(a1, *(unsigned __int8 *)(a2 + v8), 2);
      sub_100259414(a1, 1);
      ++v8;
    }
    while (a3 != v8);
  }
  return sub_1000729B4(a1, "\n");
}

uint64_t sub_10017D124(uint64_t a1, uint64_t a2, int a3)
{
  char *v6;
  char *v7;
  char *v8;
  int v9;
  unsigned int *v10;
  unsigned int v11;
  int v12;
  unsigned int v13;
  uint64_t j;
  int v15;
  uint64_t v16;
  uint64_t i;
  unsigned int v18;

  sub_1000729B4(a1, "|");
  if (*(_BYTE *)a2 == 32)
    a2 = *(_QWORD *)(a2 + 8);
  sub_100259414(a1, a3);
  v6 = "null";
  switch(*(_BYTE *)a2)
  {
    case 0:
      return sub_1000729B4(a1, v6);
    case 1:
      v7 = "uint";
      goto LABEL_14;
    case 2:
      v7 = "sint";
      goto LABEL_14;
    case 3:
      v7 = "uuid";
LABEL_14:
      sub_1000729B4(a1, v7);
      sub_1002594A4(a1, 8 * *(unsigned __int16 *)(a2 + 2));
      break;
    case 4:
      v8 = "text";
      goto LABEL_19;
    case 5:
      if (*(_BYTE *)(a2 + 8))
        v6 = "true";
      else
        v6 = "false";
      return sub_1000729B4(a1, v6);
    case 6:
      v8 = "seq";
      goto LABEL_19;
    case 7:
      v8 = "alt";
      goto LABEL_19;
    case 8:
      v8 = "url";
      goto LABEL_19;
    case 0x11:
      v8 = "bdaddr";
      goto LABEL_19;
    case 0x12:
      v8 = "rawbytes";
      goto LABEL_19;
    case 0x13:
      v8 = "status";
      goto LABEL_19;
    case 0x14:
      v8 = "text16";
LABEL_19:
      sub_1000729B4(a1, v8);
      break;
    default:
      break;
  }
  sub_100259414(a1, 3);
  v9 = sub_10017CF0C(a1, (unsigned __int8 *)a2);
  if (v9)
    sub_1000729B4(a1, "(");
  switch(*(_BYTE *)a2)
  {
    case 1:
    case 2:
      if (*(unsigned __int16 *)(a2 + 2) >= 5u)
      {
        sub_1000729B4(a1, "0x");
        v10 = *(unsigned int **)(a2 + 8);
        if (*(_WORD *)(a2 + 2) == 8)
        {
          sub_100072A40(a1, *v10, 8);
          v11 = *(_DWORD *)(*(_QWORD *)(a2 + 8) + 4);
        }
        else
        {
          sub_100072A40(a1, *v10, 8);
          sub_100072A40(a1, *(_DWORD *)(*(_QWORD *)(a2 + 8) + 4), 8);
          sub_100072A40(a1, *(_DWORD *)(*(_QWORD *)(a2 + 8) + 8), 8);
          v11 = *(_DWORD *)(*(_QWORD *)(a2 + 8) + 12);
        }
        v16 = a1;
        v15 = 8;
        goto LABEL_48;
      }
      if (*(_BYTE *)a2 != 1)
        goto LABEL_45;
      sub_1000729B4(a1, "0x");
      v11 = *(_DWORD *)(a2 + 8);
      v13 = *(unsigned __int16 *)(a2 + 2);
      goto LABEL_44;
    case 3:
      sub_1000729B4(a1, "0x");
      v13 = *(unsigned __int16 *)(a2 + 2);
      if (v13 > 4)
      {
        sub_100072A40(a1, **(_DWORD **)(a2 + 8), 8);
        sub_1000729B4(a1, ",");
        for (i = 4; i != 16; ++i)
        {
          sub_100072A40(a1, *(unsigned __int8 *)(*(_QWORD *)(a2 + 8) + i), 2);
          v18 = (i - 4);
          if (v18 <= 5 && ((1 << v18) & 0x2A) != 0)
            sub_1000729B4(a1, ",");
        }
      }
      else
      {
        v11 = *(_DWORD *)(a2 + 8);
LABEL_44:
        v15 = 2 * v13;
        v16 = a1;
LABEL_48:
        sub_100072A40(v16, v11, v15);
      }
      break;
    case 4:
    case 8:
      sub_100259120(a1, *(char **)(a2 + 8), *(unsigned __int16 *)(a2 + 2));
      break;
    case 6:
    case 7:
      sub_1000729B4(a1, "\n");
      if (*(_WORD *)(a2 + 2))
      {
        v12 = 0;
        do
          sub_10017D124(a1, *(_QWORD *)(a2 + 8) + 16 * v12++, (a3 + 4), 0);
        while (*(unsigned __int16 *)(a2 + 2) > v12);
      }
      goto LABEL_40;
    case 0x11:
      for (j = 0; j != 6; ++j)
      {
        if (j)
          sub_1000729B4(a1, ":");
        sub_100072A40(a1, *(unsigned __int8 *)(*(_QWORD *)(a2 + 8) + j), 2);
      }
      break;
    case 0x12:
      sub_10017D068(a1, *(_QWORD *)(a2 + 8), *(unsigned __int16 *)(a2 + 2), (a3 + 4));
      goto LABEL_40;
    case 0x13:
LABEL_45:
      sub_1002594A4(a1, *(_DWORD *)(a2 + 8));
      break;
    case 0x14:
      sub_10017CFAC(a1, *(_QWORD *)(a2 + 8), *(unsigned __int16 *)(a2 + 2), (a3 + 4));
LABEL_40:
      sub_100259414(a1, a3);
      break;
    default:
      sub_1000729B4(a1, "!!!Corrupt Data Element!!!");
      break;
  }
  if (v9)
    sub_1000729B4(a1, ")");
  v6 = "\n";
  return sub_1000729B4(a1, v6);
}

void sub_10017D55C(uint64_t a1, char *__s)
{
  __int16 v4;
  unsigned __int16 v5;
  NSObject *v6;
  uint64_t v7;
  _QWORD v8[2];
  uint8_t buf[4];
  uint64_t v10;

  v8[0] = 0;
  v8[1] = 0;
  v4 = strlen(__s);
  sub_10025909C((uint64_t)v8, (unsigned __int16)(v4 + 1));
  sub_1000729B4((uint64_t)v8, "\n");
  v5 = strlen(__s);
  sub_100259120((uint64_t)v8, __s, v5);
  sub_10017D124((uint64_t)v8, a1, 5);
  v6 = sub_1000544A0(0x5Cu);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    v7 = sub_10025971C((uint64_t)v8);
    *(_DWORD *)buf = 136446210;
    v10 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%{public}s", buf, 0xCu);
  }
  sub_1002590E8((uint64_t)v8);
}

uint64_t sub_10017D664(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v4;
  int v5;
  unsigned __int16 v6;
  __int128 *p_ptr;
  __int128 *v8;
  int v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  size_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  unsigned __int16 v25;
  unsigned int v26;
  uint64_t v27;
  __int128 *v28;
  __int16 v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int16 v32;
  unsigned __int16 v33;
  unsigned __int16 v34;
  unsigned int v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int16 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  int *v49;
  int v50;
  int v51;
  uint64_t v52;
  size_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  __int128 *v58;
  unsigned int v59;
  unsigned int v60;
  NSObject *v62;
  uint64_t v63;
  __int128 ptr;
  uint64_t v65;

  ptr = xmmword_10073A548;
  v65 = 0;
  LOWORD(ptr) = 0;
  v4 = *(unsigned __int16 *)(a1 + 10);
  v5 = *(unsigned __int16 *)(a1 + 12);
  v6 = v4 - v5;
  if (v4 == v5)
  {
    p_ptr = &ptr;
LABEL_3:
    if ((_DWORD)a2)
      sub_100253460();
    goto LABEL_5;
  }
  p_ptr = &ptr;
  while (2)
  {
    v11 = *a3;
    if (v11 == 32)
    {
      a3 = (unsigned __int8 *)*((_QWORD *)a3 + 1);
      v11 = *a3;
    }
    v12 = *((unsigned __int16 *)a3 + 1);
    switch(v11)
    {
      case 0:
        if ((_DWORD)a2)
        {
          a2 = (a2 - 1);
        }
        else
        {
          if (*(_BYTE *)(a1 + 15))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c", 174, "int32_t MarshalElement(OI_BYTE_STREAM *, int32_t, const OI_DATAELEM *)");
LABEL_144:
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c");
          }
          if ((unsigned __int16)v4 <= (unsigned __int16)v5 || *(_BYTE *)(a1 + 14) != 2)
            goto LABEL_144;
          a2 = 0;
          v44 = *(_QWORD *)a1;
          *(_WORD *)(a1 + 12) = v5 + 1;
          *(_BYTE *)(v44 + (unsigned __int16)v5) = 0;
        }
        goto LABEL_105;
      case 1:
      case 2:
      case 5:
      case 19:
        goto LABEL_12;
      case 3:
        if ((_DWORD)v12 == 4)
        {
          if (*((_DWORD *)a3 + 2) >= 0x10000u)
            LODWORD(v12) = 4;
          else
            LODWORD(v12) = 2;
        }
LABEL_12:
        if ((int)a2 <= (int)v12)
        {
          switch((int)v12)
          {
            case 1:
              if (v6 < 2u)
                goto LABEL_5;
              if (*(_BYTE *)(a1 + 15))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c", 201, "int32_t MarshalElement(OI_BYTE_STREAM *, int32_t, const OI_DATAELEM *)");
LABEL_132:
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c");
              }
              if ((unsigned __int16)v4 <= (unsigned __int16)v5 || *(_BYTE *)(a1 + 14) != 2)
                goto LABEL_132;
              v20 = *(_QWORD *)a1;
              *(_WORD *)(a1 + 12) = v5 + 1;
              *(_BYTE *)(v20 + (unsigned __int16)v5) = 8 * v11;
              if (*(_BYTE *)(a1 + 15))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c", 202, "int32_t MarshalElement(OI_BYTE_STREAM *, int32_t, const OI_DATAELEM *)");
LABEL_134:
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c");
              }
              v21 = *(unsigned __int16 *)(a1 + 12);
              if (*(unsigned __int16 *)(a1 + 10) <= v21 || *(_BYTE *)(a1 + 14) != 2)
                goto LABEL_134;
              v22 = *((_DWORD *)a3 + 2);
              v23 = *(_QWORD *)a1;
              *(_WORD *)(a1 + 12) = v21 + 1;
              *(_BYTE *)(v23 + v21) = v22;
              goto LABEL_105;
            case 2:
              if (v6 < 3u)
                goto LABEL_5;
              if (*(_BYTE *)(a1 + 15))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c", 208, "int32_t MarshalElement(OI_BYTE_STREAM *, int32_t, const OI_DATAELEM *)");
LABEL_140:
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c");
              }
              if ((unsigned __int16)v4 <= (unsigned __int16)v5 || *(_BYTE *)(a1 + 14) != 2)
                goto LABEL_140;
              v42 = *(_QWORD *)a1;
              *(_WORD *)(a1 + 12) = v5 + 1;
              *(_BYTE *)(v42 + (unsigned __int16)v5) = (8 * v11) | 1;
              if (*(_BYTE *)(a1 + 15))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c", 209, "int32_t MarshalElement(OI_BYTE_STREAM *, int32_t, const OI_DATAELEM *)");
LABEL_142:
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c");
              }
              v43 = *(unsigned __int16 *)(a1 + 12);
              if (*(unsigned __int16 *)(a1 + 10) - (int)v43 <= 1 || *(_BYTE *)(a1 + 14) != 2)
                goto LABEL_142;
              *(_BYTE *)(*(_QWORD *)a1 + v43 + 1) = *((_DWORD *)a3 + 2);
              *(_BYTE *)(*(_QWORD *)a1 + *(unsigned __int16 *)(a1 + 12)) = BYTE1(*((_DWORD *)a3 + 2));
              v40 = *(_WORD *)(a1 + 12) + 2;
              goto LABEL_85;
            case 3:
            case 5:
            case 6:
            case 7:
              goto LABEL_66;
            case 4:
              if (v6 < 5u)
                goto LABEL_5;
              if (*(_BYTE *)(a1 + 15))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c", 215, "int32_t MarshalElement(OI_BYTE_STREAM *, int32_t, const OI_DATAELEM *)");
LABEL_136:
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c");
              }
              if ((unsigned __int16)v4 <= (unsigned __int16)v5 || *(_BYTE *)(a1 + 14) != 2)
                goto LABEL_136;
              v38 = *(_QWORD *)a1;
              *(_WORD *)(a1 + 12) = v5 + 1;
              *(_BYTE *)(v38 + (unsigned __int16)v5) = (8 * v11) | 2;
              if (*(_BYTE *)(a1 + 15))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c", 216, "int32_t MarshalElement(OI_BYTE_STREAM *, int32_t, const OI_DATAELEM *)");
LABEL_138:
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c");
              }
              v39 = *(unsigned __int16 *)(a1 + 12);
              if (*(unsigned __int16 *)(a1 + 10) - (int)v39 <= 3 || *(_BYTE *)(a1 + 14) != 2)
                goto LABEL_138;
              *(_BYTE *)(*(_QWORD *)a1 + v39 + 3) = *((_DWORD *)a3 + 2);
              *(_BYTE *)(*(_QWORD *)a1 + *(unsigned __int16 *)(a1 + 12) + 2) = BYTE1(*((_DWORD *)a3 + 2));
              *(_BYTE *)(*(_QWORD *)a1 + *(unsigned __int16 *)(a1 + 12) + 1) = *((_WORD *)a3 + 5);
              *(_BYTE *)(*(_QWORD *)a1 + *(unsigned __int16 *)(a1 + 12)) = a3[11];
              v40 = *(_WORD *)(a1 + 12) + 4;
LABEL_85:
              *(_WORD *)(a1 + 12) = v40;
              goto LABEL_105;
            case 8:
              if ((_DWORD)a2)
              {
                v41 = (a2 - 1);
              }
              else
              {
                if (*(_BYTE *)(a1 + 15))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c", 222, "int32_t MarshalElement(OI_BYTE_STREAM *, int32_t, const OI_DATAELEM *)");
LABEL_146:
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/data"
                                         "elem/marshaller.c");
                }
                if ((unsigned __int16)v4 <= (unsigned __int16)v5 || *(_BYTE *)(a1 + 14) != 2)
                  goto LABEL_146;
                v41 = 0;
                v45 = *(_QWORD *)a1;
                *(_WORD *)(a1 + 12) = v5 + 1;
                *(_BYTE *)(v45 + (unsigned __int16)v5) = (8 * v11) | 3;
              }
              v46 = sub_10017E184(a1, v41, **((_DWORD **)a3 + 1));
              v47 = *(_DWORD *)(*((_QWORD *)a3 + 1) + 4);
              goto LABEL_104;
            default:
              if ((_DWORD)v12 != 16)
                goto LABEL_66;
              if ((_DWORD)a2)
              {
                v37 = (a2 - 1);
              }
              else
              {
                if (*(_BYTE *)(a1 + 15))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c", 234, "int32_t MarshalElement(OI_BYTE_STREAM *, int32_t, const OI_DATAELEM *)");
LABEL_149:
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/data"
                                         "elem/marshaller.c");
                }
                if ((unsigned __int16)v4 <= (unsigned __int16)v5 || *(_BYTE *)(a1 + 14) != 2)
                  goto LABEL_149;
                v37 = 0;
                v48 = *(_QWORD *)a1;
                *(_WORD *)(a1 + 12) = v5 + 1;
                *(_BYTE *)(v48 + (unsigned __int16)v5) = (8 * v11) | 4;
                v11 = *a3;
              }
              v49 = (int *)*((_QWORD *)a3 + 1);
              if (v11 == 3)
              {
                v50 = sub_10017E184(a1, v37, *v49);
                if (v50 == -1)
                  goto LABEL_5;
                v51 = v50;
                v52 = *(unsigned __int16 *)(a1 + 12);
                LOWORD(v53) = *(_WORD *)(a1 + 10) - v52;
                v54 = *((_QWORD *)a3 + 1);
                v63 = *(_QWORD *)a1;
                if (*(_BYTE *)(a1 + 15))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c", 246, "int32_t MarshalElement(OI_BYTE_STREAM *, int32_t, const OI_DATAELEM *)");
                  v55 = 0;
                }
                else
                {
                  v55 = *(unsigned __int16 *)(a1 + 10) - (_DWORD)v52;
                }
                v59 = (unsigned __int16)(12 - v51);
                v60 = (unsigned __int16)v53;
                if (v59 >= (unsigned __int16)v53)
                  v53 = (unsigned __int16)v53;
                else
                  v53 = (unsigned __int16)(12 - v51);
                if (v55 < (int)v53 || *(_BYTE *)(a1 + 14) != 2)
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/data"
                                         "elem/marshaller.c");
                memmove((void *)(v63 + v52), (const void *)(v54 + v51 + 4), v53);
                *(_WORD *)(a1 + 12) += v53;
                if (v59 > v60)
                  goto LABEL_5;
                a2 = 0;
              }
              else
              {
                v56 = sub_10017E184(a1, v37, *v49);
                v57 = sub_10017E184(a1, v56, *(_DWORD *)(*((_QWORD *)a3 + 1) + 4));
                v46 = sub_10017E184(a1, v57, *(_DWORD *)(*((_QWORD *)a3 + 1) + 8));
                v47 = *(_DWORD *)(*((_QWORD *)a3 + 1) + 12);
LABEL_104:
                a2 = sub_10017E184(a1, v46, v47);
                if ((_DWORD)a2 == -1)
                  goto LABEL_5;
              }
              break;
          }
        }
        else
        {
          a2 = (a2 + ~(_DWORD)v12);
        }
        goto LABEL_105;
      case 4:
      case 8:
      case 17:
      case 18:
        v13 = sub_10017E27C((uint64_t *)a1, a2, *((unsigned __int16 *)a3 + 1), v11);
        if (v13 == -1)
          goto LABEL_5;
        v14 = v13;
        a2 = v13 - v12;
        if (v13 >= v12)
          goto LABEL_105;
        v15 = *(unsigned __int16 *)(a1 + 12);
        LOWORD(v16) = *(_WORD *)(a1 + 10) - v15;
        v17 = *(_QWORD *)a1;
        v18 = *((_QWORD *)a3 + 1);
        if (*(_BYTE *)(a1 + 15))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c", 278, "int32_t MarshalElement(OI_BYTE_STREAM *, int32_t, const OI_DATAELEM *)");
          v19 = 0;
        }
        else
        {
          v19 = *(unsigned __int16 *)(a1 + 10) - (_DWORD)v15;
        }
        v34 = v12 - v14;
        v35 = (unsigned __int16)(v12 - v14);
        v36 = (unsigned __int16)v16;
        if ((unsigned __int16)v16 >= v34)
          v16 = v35;
        else
          v16 = (unsigned __int16)v16;
        if (v19 < (int)v16 || *(_BYTE *)(a1 + 14) != 2)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c");
        memmove((void *)(v17 + v15), (const void *)(v18 + v14), v16);
        *(_WORD *)(a1 + 12) += v16;
        if (v36 < v35)
          goto LABEL_5;
        a2 = 0;
        goto LABEL_105;
      case 6:
      case 7:
        v24 = sub_10017E4F0(a3);
        if (!v24)
          goto LABEL_5;
        v25 = v24 - 2;
        if (((v24 - 2) & 0xFF00) != 0)
          v25 = v24 - 3;
        v26 = v25;
        v27 = sub_10017E27C((uint64_t *)a1, a2, v25, *a3);
        if ((_DWORD)v27 == -1)
          goto LABEL_5;
        a2 = v27;
        if (v27 < v26)
        {
          if (!*((_QWORD *)a3 + 1) || !*((_WORD *)a3 + 1))
            goto LABEL_105;
          v28 = (__int128 *)sub_100052DC0(0x18uLL);
          if (!v28)
          {
            if (sub_10005549C())
            {
              sub_100054530("MarshalElement: %!", 106);
              v62 = sub_1000544A0(0x2Bu);
              if (os_log_type_enabled(v62, OS_LOG_TYPE_ERROR))
                sub_1006D2998();
            }
LABEL_5:
            if (p_ptr != &ptr)
            {
              do
              {
                v8 = (__int128 *)*((_QWORD *)p_ptr + 2);
                sub_100053298(p_ptr);
                p_ptr = v8;
              }
              while (v8 != &ptr);
            }
            return 0xFFFFFFFFLL;
          }
          *((_QWORD *)p_ptr + 1) = a3;
          *((_QWORD *)v28 + 2) = p_ptr;
          v29 = *((_WORD *)a3 + 1);
          *(_WORD *)v28 = v29;
          a3 = (unsigned __int8 *)*((_QWORD *)a3 + 1);
          p_ptr = v28;
LABEL_111:
          *(_WORD *)p_ptr = v29 - 1;
          v4 = *(unsigned __int16 *)(a1 + 10);
          v5 = *(unsigned __int16 *)(a1 + 12);
          v6 = v4 - v5;
          if (v4 == v5)
            goto LABEL_3;
          continue;
        }
        a2 = v27 - v26;
LABEL_105:
        if (p_ptr != &ptr)
        {
          if (!*(_WORD *)p_ptr)
          {
            do
            {
              v58 = p_ptr;
              p_ptr = (__int128 *)*((_QWORD *)p_ptr + 2);
              sub_100053298(v58);
              if (p_ptr == &ptr)
                goto LABEL_121;
            }
            while (!*(_WORD *)p_ptr);
            a3 = (unsigned __int8 *)*((_QWORD *)p_ptr + 1);
          }
          a3 += 16;
          v29 = *(_WORD *)p_ptr;
          goto LABEL_111;
        }
LABEL_121:
        if ((a2 & 0x80000000) != 0)
          sub_100253460();
        return a2;
      case 20:
        v30 = sub_10017E27C((uint64_t *)a1, a2, 2 * (int)v12, 20);
        if ((_DWORD)v30 == -1)
          goto LABEL_5;
        a2 = v30;
        if (!(_DWORD)v12)
          goto LABEL_105;
        v31 = 0;
        v32 = *(_WORD *)(a1 + 12);
        v33 = *(_WORD *)(a1 + 10) - v32;
        while (1)
        {
          if ((_DWORD)a2)
          {
            a2 = (a2 - 2);
          }
          else
          {
            if (v33 < 2u)
              goto LABEL_5;
            if (*(_BYTE *)(a1 + 15))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c", 301, "int32_t MarshalElement(OI_BYTE_STREAM *, int32_t, const OI_DATAELEM *)");
LABEL_129:
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c");
            }
            if (*(unsigned __int16 *)(a1 + 10) - v32 <= 1 || *(_BYTE *)(a1 + 14) != 2)
              goto LABEL_129;
            a2 = 0;
            *(_BYTE *)(*(_QWORD *)a1 + v32 + 1) = *(_BYTE *)(*((_QWORD *)a3 + 1) + v31);
            *(_BYTE *)(*(_QWORD *)a1 + *(unsigned __int16 *)(a1 + 12)) = *(_BYTE *)(*((_QWORD *)a3 + 1) + v31 + 1);
            v32 = *(_WORD *)(a1 + 12) + 2;
            *(_WORD *)(a1 + 12) = v32;
            v33 -= 2;
          }
          v31 += 2;
          if (2 * v12 == v31)
            goto LABEL_105;
        }
      default:
LABEL_66:
        sub_100253460();
        goto LABEL_105;
    }
  }
}

uint64_t sub_10017E184(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  int v4;

  if ((_DWORD)a2 != -1)
  {
    if (a2 < 4)
    {
      v3 = *(unsigned __int16 *)(a1 + 12);
      v4 = *(unsigned __int16 *)(a1 + 10) - (_DWORD)v3;
      if ((v4 & 0xFFFC) == 0)
        return 0xFFFFFFFFLL;
      if (*(_BYTE *)(a1 + 15))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c", 119, "int32_t MarshalUINT32(OI_BYTE_STREAM *, int32_t, uint32_t)");
      }
      else if (v4 > 3 && *(_BYTE *)(a1 + 14) == 2)
      {
        *(_BYTE *)(*(_QWORD *)a1 + v3 + 3) = a3;
        *(_BYTE *)(*(_QWORD *)a1 + *(unsigned __int16 *)(a1 + 12) + 2) = BYTE1(a3);
        *(_BYTE *)(*(_QWORD *)a1 + *(unsigned __int16 *)(a1 + 12) + 1) = BYTE2(a3);
        *(_BYTE *)(*(_QWORD *)a1 + *(unsigned __int16 *)(a1 + 12)) = HIBYTE(a3);
        *(_WORD *)(a1 + 12) += 4;
        return a2;
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c");
    }
    return (a2 - 4);
  }
  return a2;
}

uint64_t sub_10017E27C(uint64_t *a1, int a2, unsigned int a3, char a4)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a3 > 0xFFFE)
    return 0xFFFFFFFFLL;
  v4 = *((unsigned __int16 *)a1 + 6);
  v5 = *((unsigned __int16 *)a1 + 5) - (_DWORD)v4;
  if (a3 < 0x100)
  {
    if ((v5 & 0xFFFE) == 0)
      return 0xFFFFFFFFLL;
    if (!a2)
    {
      if (*((_BYTE *)a1 + 15))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c", 91, "int32_t MarshalVarSizeDescriptor(OI_BYTE_STREAM *, int32_t, uint32_t, uint8_t)");
      }
      else if (v5 > 0 && *((_BYTE *)a1 + 14) == 2)
      {
        v8 = *a1;
        *((_WORD *)a1 + 6) = v4 + 1;
        *(_BYTE *)(v8 + v4) = (8 * a4) | 5;
        if (*((_BYTE *)a1 + 15))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c", 92, "int32_t MarshalVarSizeDescriptor(OI_BYTE_STREAM *, int32_t, uint32_t, uint8_t)");
        }
        else
        {
          v9 = *((unsigned __int16 *)a1 + 6);
          if (*((unsigned __int16 *)a1 + 5) > v9 && *((_BYTE *)a1 + 14) == 2)
          {
            v6 = 0;
            v10 = *a1;
            *((_WORD *)a1 + 6) = v9 + 1;
            *(_BYTE *)(v10 + v9) = a3;
            return v6;
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c");
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c");
    }
    v6 = (a2 - 2);
    if (a2 - 2 < 0)
      return 0xFFFFFFFFLL;
  }
  else
  {
    if ((unsigned __int16)(*((_WORD *)a1 + 5) - v4) < 3u)
      return 0xFFFFFFFFLL;
    if (!a2)
    {
      if (*((_BYTE *)a1 + 15))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c", 78, "int32_t MarshalVarSizeDescriptor(OI_BYTE_STREAM *, int32_t, uint32_t, uint8_t)");
      }
      else if (v5 > 0 && *((_BYTE *)a1 + 14) == 2)
      {
        v11 = *a1;
        *((_WORD *)a1 + 6) = v4 + 1;
        *(_BYTE *)(v11 + v4) = (8 * a4) | 6;
        if (*((_BYTE *)a1 + 15))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c", 79, "int32_t MarshalVarSizeDescriptor(OI_BYTE_STREAM *, int32_t, uint32_t, uint8_t)");
        }
        else
        {
          v12 = *((unsigned __int16 *)a1 + 6);
          if (*((unsigned __int16 *)a1 + 5) - (int)v12 > 1 && *((_BYTE *)a1 + 14) == 2)
          {
            v6 = 0;
            *(_BYTE *)(*a1 + v12 + 1) = a3;
            *(_BYTE *)(*a1 + *((unsigned __int16 *)a1 + 6)) = BYTE1(a3);
            *((_WORD *)a1 + 6) += 2;
            return v6;
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c");
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c");
    }
    v6 = (a2 - 3);
    if (a2 - 3 < 0)
      return 0xFFFFFFFFLL;
  }
  return v6;
}

uint64_t sub_10017E4F0(unsigned __int8 *a1)
{
  __int16 v2;
  __int128 *p_ptr;
  __int16 v4;
  int v5;
  unsigned int v6;
  __int16 v7;
  __int16 v8;
  BOOL v9;
  __int128 *v10;
  __int16 v11;
  __int128 *v12;
  unsigned int v13;
  __int16 v14;
  __int16 v15;
  uint64_t result;
  NSObject *v17;
  __int128 *v18;
  void *v19;
  __int128 ptr;
  uint64_t v21;
  uint8_t buf[4];
  void *v23;
  __int16 v24;
  int v25;

  ptr = xmmword_10073A548;
  v21 = 0;
  v2 = 1;
  p_ptr = &ptr;
LABEL_2:
  *(_WORD *)p_ptr = v2 - 1;
  v4 = *((_WORD *)p_ptr + 1) + 1;
  *((_WORD *)p_ptr + 1) = v4;
  v5 = *a1;
  if (v5 == 32)
  {
    a1 = (unsigned __int8 *)*((_QWORD *)a1 + 1);
    v5 = *a1;
  }
  v6 = *((unsigned __int16 *)a1 + 1);
  switch(v5)
  {
    case 0:
      goto LABEL_24;
    case 1:
    case 2:
    case 5:
    case 19:
      goto LABEL_5;
    case 3:
      if (v6 == 4)
      {
        if (*((_DWORD *)a1 + 2) >= 0x10000u)
          LOWORD(v6) = 4;
        else
          LOWORD(v6) = 2;
      }
LABEL_5:
      v7 = v6 + v4;
      goto LABEL_23;
    case 4:
    case 8:
    case 17:
    case 18:
      v8 = v6 + v4;
      goto LABEL_19;
    case 6:
    case 7:
      if (*((_QWORD *)a1 + 1))
        v9 = v6 == 0;
      else
        v9 = 1;
      if (v9)
        goto LABEL_24;
      v10 = (__int128 *)sub_100052DC0(0x18uLL);
      if (v10)
      {
        *((_QWORD *)p_ptr + 1) = a1;
        *((_QWORD *)v10 + 2) = p_ptr;
        *(_DWORD *)v10 = *((unsigned __int16 *)a1 + 1);
        a1 = (unsigned __int8 *)*((_QWORD *)a1 + 1);
        p_ptr = v10;
        goto LABEL_33;
      }
      if (sub_10005549C())
      {
        sub_100054530("OI_DataElement_MarshalledSize: %!", 106);
        v17 = sub_1000544A0(0x2Bu);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
        {
          v19 = sub_100054494();
          *(_DWORD *)buf = 136446466;
          v23 = v19;
          v24 = 1024;
          v25 = 106;
          _os_log_error_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
        }
      }
      if (p_ptr == &ptr)
        return 0;
      do
      {
        v18 = (__int128 *)*((_QWORD *)p_ptr + 2);
        sub_100053298(p_ptr);
        result = 0;
        p_ptr = v18;
      }
      while (v18 != &ptr);
      return result;
    case 20:
      v8 = v4 + 2 * v6;
LABEL_19:
      if (v6 <= 0xFF)
        v11 = 1;
      else
        v11 = 2;
      v7 = v8 + v11;
LABEL_23:
      *((_WORD *)p_ptr + 1) = v7;
      goto LABEL_24;
    default:
      sub_100253460();
LABEL_24:
      if (p_ptr == &ptr)
        return WORD1(ptr);
      if (*(_WORD *)p_ptr)
        goto LABEL_32;
      break;
  }
  while (1)
  {
    v12 = p_ptr;
    v13 = *((unsigned __int16 *)p_ptr + 1);
    v14 = v13 <= 0xFF ? 1 : 2;
    v15 = v14 + v13;
    *((_WORD *)p_ptr + 1) = v15;
    p_ptr = (__int128 *)*((_QWORD *)p_ptr + 2);
    *((_WORD *)p_ptr + 1) += v15;
    sub_100053298(v12);
    if (p_ptr == &ptr)
      return WORD1(ptr);
    if (*(_WORD *)p_ptr)
    {
      a1 = (unsigned __int8 *)*((_QWORD *)p_ptr + 1);
LABEL_32:
      a1 += 16;
LABEL_33:
      v2 = *(_WORD *)p_ptr;
      goto LABEL_2;
    }
  }
}

BOOL sub_10017E770(uint64_t a1, unsigned __int8 *a2)
{
  return sub_10017D664(a1, 0, a2) == 0;
}

BOOL sub_10017E794(uint64_t a1, _WORD *a2, unsigned __int8 *a3)
{
  int v4;
  __int16 v5;

  v4 = sub_10017D664(a1, (unsigned __int16)*a2, a3);
  if (v4 == -1)
    v5 = 0;
  else
    v5 = v4;
  *a2 = v5;
  return v4 != -1;
}

uint64_t sub_10017E7CC(uint64_t a1, _BYTE *a2, __int16 *a3)
{
  uint64_t v4;
  uint64_t v6;
  unsigned int v7;
  __int16 v8;
  uint64_t result;
  int v10;
  int v11;

  if (*(_BYTE *)(a1 + 14) != 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c");
  v4 = *(unsigned __int16 *)(a1 + 12);
  if (*(_BYTE *)(a1 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c", 782, "OI_STATUS OI_DataElement_Peek(OI_BYTE_STREAM *, uint8_t *, uint16_t *)");
LABEL_8:
    *(_BYTE *)(a1 + 15) = 1;
    result = 843;
    goto LABEL_9;
  }
  if (*(unsigned __int16 *)(a1 + 10) <= v4)
    goto LABEL_8;
  v6 = *(_QWORD *)a1;
  *(_WORD *)(a1 + 12) = v4 + 1;
  v7 = *(unsigned __int8 *)(v6 + v4);
  *a2 = v7 >> 3;
  if (a3)
  {
    if (v7 >= 8)
    {
      v10 = sub_10017E8F8((uint64_t *)a1, v7 & 7);
      *a3 = v10;
      v11 = *(unsigned __int16 *)(a1 + 12);
      if (v11 - (int)v4 + v10 >= 0x10000)
        return 808;
      v8 = v10 - v4 + v11;
    }
    else
    {
      v8 = 1;
    }
    *a3 = v8;
  }
  if (*(_BYTE *)(a1 + 15))
    result = 843;
  else
    result = 0;
LABEL_9:
  if (v4 > *(unsigned __int16 *)(a1 + 10))
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c");
  *(_WORD *)(a1 + 12) = v4;
  return result;
}

uint64_t sub_10017E8F8(uint64_t *a1, int a2)
{
  uint64_t result;
  int v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;

  result = 1;
  switch(a2)
  {
    case 0:
      return result;
    case 1:
      return 2;
    case 2:
      return 4;
    case 3:
      return 8;
    case 4:
      return 16;
    case 5:
      if (*((_BYTE *)a1 + 14) != 1)
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c");
      if (*((_BYTE *)a1 + 15))
      {
        v4 = 589;
        goto LABEL_18;
      }
      v6 = *((unsigned __int16 *)a1 + 6);
      if (*((unsigned __int16 *)a1 + 5) <= v6)
        goto LABEL_19;
      v7 = *a1;
      *((_WORD *)a1 + 6) = v6 + 1;
      return *(unsigned __int8 *)(v7 + v6);
    case 6:
      if (*((_BYTE *)a1 + 14) != 1)
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c");
      if (*((_BYTE *)a1 + 15))
      {
        v4 = 596;
        goto LABEL_18;
      }
      v10 = *((unsigned __int16 *)a1 + 6);
      if (*((unsigned __int16 *)a1 + 5) - (int)v10 < 2)
        goto LABEL_19;
      result = bswap32(*(unsigned __int16 *)(*a1 + v10)) >> 16;
      v9 = v10 + 2;
      goto LABEL_27;
    case 7:
      if (*((_BYTE *)a1 + 14) != 1)
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c");
      if (*((_BYTE *)a1 + 15))
      {
        v4 = 603;
LABEL_18:
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c", v4, "uint16_t UnmarshalElementSize(OI_BYTE_STREAM *, uint8_t)");
        goto LABEL_19;
      }
      v8 = *((unsigned __int16 *)a1 + 6);
      if (*((unsigned __int16 *)a1 + 5) - (int)v8 < 4)
      {
LABEL_19:
        result = 0;
        *((_BYTE *)a1 + 15) = 1;
        return result;
      }
      result = bswap32(*(unsigned __int16 *)(*a1 + v8 + 2)) >> 16;
      v9 = v8 + 4;
LABEL_27:
      *((_WORD *)a1 + 6) = v9;
      return result;
    default:
      *((_BYTE *)a1 + 15) = 1;
      result = sub_10005549C();
      if ((_DWORD)result)
      {
        sub_100054530("Bad dataelement size index");
        v5 = sub_1000544A0(0x2Bu);
        result = os_log_type_enabled(v5, OS_LOG_TYPE_ERROR);
        if ((_DWORD)result)
        {
          sub_1006D2A14();
          return 0;
        }
      }
      return result;
  }
}

uint64_t sub_10017EB00(uint64_t a1, _WORD *a2, _WORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  int v7;

  if (*(_BYTE *)(a1 + 14) != 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c");
  if (*(_BYTE *)(a1 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c", 818, "OI_STATUS OI_DataElement_UnmarshallListHeader(OI_BYTE_STREAM *, uint16_t *, uint16_t *)");
LABEL_10:
    *(_BYTE *)(a1 + 15) = 1;
    return 843;
  }
  v4 = *(unsigned __int16 *)(a1 + 12);
  if (*(unsigned __int16 *)(a1 + 10) <= v4)
    goto LABEL_10;
  v5 = *(_QWORD *)a1;
  *(_WORD *)(a1 + 12) = v4 + 1;
  v6 = *(_BYTE *)(v5 + v4);
  if ((v6 & 0xF0) != 0x30)
    return 808;
  v7 = v6 & 7;
  if ((v7 - 5) > 2)
    return 808;
  *a2 = 0x500030002uLL >> (16 * (v7 - 5));
  *a3 = sub_10017E8F8((uint64_t *)a1, v7);
  if (*(_BYTE *)(a1 + 15))
    return 843;
  else
    return 0;
}

uint64_t sub_10017EBF4(uint64_t *a1, uint64_t a2, char a3)
{
  uint64_t i;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  BOOL v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  _DWORD *v18;
  int v19;
  _DWORD *v20;
  int v21;
  __int16 v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int16 v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char *v31;
  _BYTE *v32;
  char v33;
  __int16 v34;
  uint64_t v35;
  __int16 v36;
  int v37;
  int v38;
  int v39;
  NSObject *v42;
  NSObject *v43;
  NSObject *v44;

  for (i = a2; *(_BYTE *)i == 33; i += 16)
  {
    i = *(_QWORD *)(i + 8);
LABEL_79:
    v14 = i == a2;
    if (v14)
      return 0;
  }
  if (*((_BYTE *)a1 + 14) != 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c");
  if (!*((_BYTE *)a1 + 15))
  {
    v7 = *((unsigned __int16 *)a1 + 5);
    v8 = *((unsigned __int16 *)a1 + 6);
    if (v7 <= v8)
      goto LABEL_85;
    v9 = *a1;
    v10 = v8 + 1;
    *((_WORD *)a1 + 6) = v8 + 1;
    v11 = *(unsigned __int8 *)(v9 + v8);
    v12 = v11 >> 3;
    *(_BYTE *)i = *(_BYTE *)(v9 + v8) >> 3;
    if (!v11)
    {
      *(_WORD *)(i + 2) = 0;
      goto LABEL_79;
    }
    if ((a3 & 1) == 0 && v12 - 17 <= 3)
    {
      if (!sub_10005549C())
        return 808;
      sub_100054530("Reserved BHAPI Desc Rxed, discarded: %2x\n", v11);
      v43 = sub_1000544A0(0x2Bu);
      if (!os_log_type_enabled(v43, OS_LOG_TYPE_ERROR))
        return 808;
      goto LABEL_97;
    }
    v13 = v11 & 7;
    switch(v12)
    {
      case 0u:
      case 5u:
        if ((v11 & 7) != 0)
          return 808;
LABEL_21:
        if (v7 <= (unsigned __int16)v10)
        {
          v15 = 0;
          *((_BYTE *)a1 + 15) = 1;
        }
        else
        {
          *((_WORD *)a1 + 6) = v8 + 2;
          v15 = *(unsigned __int8 *)(v9 + v10);
        }
        *(_DWORD *)(i + 8) = v15;
        *(_WORD *)(i + 2) = 1;
        goto LABEL_78;
      case 1u:
      case 2u:
      case 0x13u:
        break;
      case 3u:
        v14 = (v11 & 7) == 0 || v13 == 3;
        if (!v14)
          break;
        return 808;
      case 4u:
      case 6u:
      case 7u:
      case 8u:
      case 0x11u:
      case 0x12u:
      case 0x14u:
        if (v13 < 5)
          return 808;
        break;
      default:
        if (sub_10005549C())
        {
          sub_100054530("Reserved Elem Desc Rxed, discarded: %2x\n", v11);
          v44 = sub_1000544A0(0x2Bu);
          if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR))
            goto LABEL_97;
        }
        return 808;
    }
    switch(v11 & 7)
    {
      case 0u:
        goto LABEL_21;
      case 1u:
        if ((int)(v7 - (unsigned __int16)v10) < 2)
        {
          v16 = 0;
          *((_BYTE *)a1 + 15) = 1;
        }
        else
        {
          v16 = __rev16(*(unsigned __int16 *)(v9 + v10));
          *((_WORD *)a1 + 6) = v8 + 3;
        }
        *(_DWORD *)(i + 8) = v16;
        v22 = 2;
        goto LABEL_44;
      case 2u:
        if ((int)(v7 - (unsigned __int16)v10) < 4)
        {
          v17 = 0;
          *((_BYTE *)a1 + 15) = 1;
        }
        else
        {
          v17 = bswap32(*(_DWORD *)(v9 + v10));
          *((_WORD *)a1 + 6) = v8 + 5;
        }
        *(_DWORD *)(i + 8) = v17;
        v22 = 4;
LABEL_44:
        *(_WORD *)(i + 2) = v22;
        goto LABEL_78;
      case 3u:
        v18 = sub_100052DC0(8uLL);
        *(_QWORD *)(i + 8) = v18;
        if (!v18)
          return 106;
        if (*((_BYTE *)a1 + 14) != 1)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c");
        if (*((_BYTE *)a1 + 15))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c", 988, "OI_STATUS UnmarshalElement(OI_BYTE_STREAM *, OI_DATAELEM *, _Bool)");
          v19 = *((unsigned __int8 *)a1 + 14);
          *((_BYTE *)a1 + 15) = 1;
          if (v19 != 1)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c");
          goto LABEL_65;
        }
        v24 = *((unsigned __int16 *)a1 + 6);
        if (*((unsigned __int16 *)a1 + 5) - (int)v24 <= 3)
        {
          *((_BYTE *)a1 + 15) = 1;
LABEL_65:
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c", 989, "OI_STATUS UnmarshalElement(OI_BYTE_STREAM *, OI_DATAELEM *, _Bool)");
          goto LABEL_66;
        }
        *v18 = bswap32(*(_DWORD *)(*a1 + v24));
        *((_WORD *)a1 + 6) = v24 + 4;
        if (*((unsigned __int16 *)a1 + 5) - (unsigned __int16)(v24 + 4) >= 4)
        {
          *(_DWORD *)(*(_QWORD *)(i + 8) + 4) = bswap32(*(_DWORD *)(*a1 + (unsigned __int16)(v24 + 4)));
          *((_WORD *)a1 + 6) = v24 + 8;
          goto LABEL_67;
        }
LABEL_66:
        *((_BYTE *)a1 + 15) = 1;
LABEL_67:
        v36 = 8;
        goto LABEL_77;
      case 4u:
        v20 = sub_100052DC0(0x10uLL);
        *(_QWORD *)(i + 8) = v20;
        if (v12 == 3)
        {
          if (!v20)
            return 106;
          if (*((_BYTE *)a1 + 14) != 1)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c");
          if (*((_BYTE *)a1 + 15))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c", 998, "OI_STATUS UnmarshalElement(OI_BYTE_STREAM *, OI_DATAELEM *, _Bool)");
            v21 = *((unsigned __int8 *)a1 + 14);
            *((_BYTE *)a1 + 15) = 1;
            if (v21 != 1)
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c");
            goto LABEL_69;
          }
          v25 = *((unsigned __int16 *)a1 + 6);
          if (*((unsigned __int16 *)a1 + 5) - (int)v25 <= 3)
          {
            *((_BYTE *)a1 + 15) = 1;
LABEL_69:
            v37 = 999;
LABEL_74:
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c", v37, "OI_STATUS UnmarshalElement(OI_BYTE_STREAM *, OI_DATAELEM *, _Bool)");
            goto LABEL_75;
          }
          v26 = *a1;
          *v20 = bswap32(*(_DWORD *)(*a1 + v25));
          v27 = v25 + 4;
          *((_WORD *)a1 + 6) = v27;
          if (*((unsigned __int16 *)a1 + 5) - (unint64_t)v27 >= 0xC)
          {
            v28 = *(_QWORD *)(i + 8);
            v29 = v27;
            v30 = v28 + 16;
            v31 = (char *)(v26 + v29);
            v32 = (_BYTE *)(v28 + 4);
            do
            {
              v33 = *v31++;
              *v32++ = v33;
            }
            while ((unint64_t)v32 < v30);
            v34 = *((_WORD *)a1 + 6) + 12;
            goto LABEL_58;
          }
          goto LABEL_75;
        }
        if (!v20)
          return 106;
        if (*((_BYTE *)a1 + 14) != 1)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c");
        if (*((_BYTE *)a1 + 15))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c", 1006, "OI_STATUS UnmarshalElement(OI_BYTE_STREAM *, OI_DATAELEM *, _Bool)");
          v23 = *((unsigned __int8 *)a1 + 14);
          *((_BYTE *)a1 + 15) = 1;
          if (v23 != 1)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c");
        }
        else
        {
          v35 = *((unsigned __int16 *)a1 + 6);
          if (*((unsigned __int16 *)a1 + 5) - (int)v35 > 3)
          {
            *v20 = bswap32(*(_DWORD *)(*a1 + v35));
            *((_WORD *)a1 + 6) = v35 + 4;
            if (*((unsigned __int16 *)a1 + 5) - (unsigned __int16)(v35 + 4) > 3)
            {
              *(_DWORD *)(*(_QWORD *)(i + 8) + 4) = bswap32(*(_DWORD *)(*a1 + (unsigned __int16)(v35 + 4)));
              *((_WORD *)a1 + 6) = v35 + 8;
              if (*((unsigned __int16 *)a1 + 5) - (unsigned __int16)(v35 + 8) > 3)
              {
                *(_DWORD *)(*(_QWORD *)(i + 8) + 8) = bswap32(*(_DWORD *)(*a1 + (unsigned __int16)(v35 + 8)));
                *((_WORD *)a1 + 6) = v35 + 12;
                if (*((unsigned __int16 *)a1 + 5) - (unsigned __int16)(v35 + 12) >= 4)
                {
                  *(_DWORD *)(*(_QWORD *)(i + 8) + 12) = bswap32(*(_DWORD *)(*a1 + (unsigned __int16)(v35 + 12)));
                  v34 = v35 + 16;
LABEL_58:
                  *((_WORD *)a1 + 6) = v34;
                  goto LABEL_76;
                }
LABEL_75:
                *((_BYTE *)a1 + 15) = 1;
LABEL_76:
                v36 = 16;
LABEL_77:
                *(_WORD *)(i + 2) = v36;
LABEL_78:
                if (!*((_BYTE *)a1 + 15))
                  goto LABEL_79;
                if (!sub_10005549C())
                  return 808;
                sub_100054530("Unmarshal error");
                v42 = sub_1000544A0(0x2Bu);
                if (!os_log_type_enabled(v42, OS_LOG_TYPE_ERROR))
                  return 808;
LABEL_97:
                sub_1006D2A14();
                return 808;
              }
              *((_BYTE *)a1 + 15) = 1;
LABEL_73:
              v37 = 1009;
              goto LABEL_74;
            }
            *((_BYTE *)a1 + 15) = 1;
LABEL_72:
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c", 1008, "OI_STATUS UnmarshalElement(OI_BYTE_STREAM *, OI_DATAELEM *, _Bool)");
            v39 = *((unsigned __int8 *)a1 + 14);
            *((_BYTE *)a1 + 15) = 1;
            if (v39 != 1)
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c");
            goto LABEL_73;
          }
          *((_BYTE *)a1 + 15) = 1;
        }
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c", 1007, "OI_STATUS UnmarshalElement(OI_BYTE_STREAM *, OI_DATAELEM *, _Bool)");
        v38 = *((unsigned __int8 *)a1 + 14);
        *((_BYTE *)a1 + 15) = 1;
        if (v38 != 1)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c");
        goto LABEL_72;
      default:
        return 808;
    }
  }
  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c", 873, "OI_STATUS UnmarshalElement(OI_BYTE_STREAM *, OI_DATAELEM *, _Bool)");
LABEL_85:
  *((_BYTE *)a1 + 15) = 1;
  return 808;
}

void sub_10017F8F0(unsigned __int8 *a1)
{
  int v2;
  char v3;
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  int v6;
  unsigned __int8 *v7;
  uint64_t v8;
  void *v9;

  v2 = 0;
  v3 = 0;
  v4 = a1;
  v5 = a1;
LABEL_2:
  while (2)
  {
    v6 = v2 + 1;
    v7 = v5;
    do
    {
      v8 = *v7;
      if (*v7 > 7u)
      {
        if (v8 > 0x20)
          goto LABEL_18;
        if (((1 << v8) & 0x160100) != 0)
          goto LABEL_16;
        if (v8 == 19)
        {
LABEL_13:
          if (*((unsigned __int16 *)v7 + 1) < 5u)
            goto LABEL_18;
          goto LABEL_16;
        }
        if (v8 == 32)
          sub_100253460();
      }
      else
      {
        if ((v8 - 1) < 3)
          goto LABEL_13;
        if ((v8 - 6) >= 2)
        {
          if ((_DWORD)v8 != 4)
            goto LABEL_18;
LABEL_16:
          v9 = (void *)*((_QWORD *)v7 + 1);
          if (v9)
          {
            sub_100053298(v9);
            *((_QWORD *)v7 + 1) = 0;
          }
          goto LABEL_18;
        }
        v5 = (unsigned __int8 *)*((_QWORD *)v7 + 1);
        if (v5)
        {
          v2 = *((unsigned __int16 *)v7 + 1) - 1;
          v3 = 1;
          v4 = v7;
          if (!*((_WORD *)v7 + 1))
            goto LABEL_21;
          goto LABEL_2;
        }
      }
LABEL_18:
      v7 += 16;
      --v6;
    }
    while (v6);
    if ((v3 & 1) != 0)
    {
      v7 = v4;
LABEL_21:
      sub_100053298(*((void **)v7 + 1));
      v2 = 0;
      v3 = 0;
      *v7 = 0;
      v4 = a1;
      v5 = a1;
      continue;
    }
    break;
  }
  *v4 = 0;
}

uint64_t sub_10017FA1C(uint64_t *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  NSObject *v5;

  if (!a2)
    sub_100253460();
  *a2 = 0;
  v4 = sub_10017EBF4(a1, (uint64_t)a2, 0);
  if ((_DWORD)v4)
  {
    if (sub_10005549C())
    {
      sub_100054530("OI_DataElement_Unmarshal error status %!", v4);
      v5 = sub_1000544A0(0x2Bu);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        sub_1006D2728();
    }
    sub_10017F8F0(a2);
  }
  return v4;
}

void sub_10017FAC4(unsigned __int8 *a1)
{
  if (!a1)
    sub_100253460();
  sub_10017F8F0(a1);
}

uint64_t sub_10017FB08(uint64_t result)
{
  byte_100983FE0 = result;
  return result;
}

void sub_10017FB14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (sub_100049F50())
  {
    sub_10019C95C();
    sub_10017FB44(v9, v10, v11, v12, v13, v14, v15, v16, a9);
  }
}

void sub_10017FB44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *i;
  uint64_t v19;

  if ((uint64_t *)qword_100983FE8 == &qword_100983FE8)
    v9 = "empty";
  else
    v9 = "";
  sub_100253320((uint64_t)"RequestQueue: %s\n", a2, a3, a4, a5, a6, a7, a8, (uint64_t)v9);
  for (i = (uint64_t *)qword_100983FE8; i && i != &qword_100983FE8; i = (uint64_t *)*i)
    sub_1001832CC((_DWORD *)i - 10);
  if (qword_100984000)
  {
    sub_100253320((uint64_t)"Current Request: ", v10, v11, v12, v13, v14, v15, v16, v19);
    sub_1001832CC((_DWORD *)qword_100984000);
  }
  else
  {
    sub_100253320((uint64_t)"Current Request: none\n", v10, v11, v12, v13, v14, v15, v16, a9);
  }
}

uint64_t sub_10017FBEC(uint64_t a1)
{
  NSObject *v2;
  uint64_t result;

  if (a1)
  {
    if (sub_10005549C())
    {
      sub_100054530("OI_DEVMGR_Init: configuration parameter is deprecated");
      v2 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    sub_100252E2C(a1, 0x2Cu);
  }
  if ((_DWORD)xmmword_1009991F8)
    return 140;
  qword_100998F48 = sub_100252DE8(0x2Cu);
  if (!qword_100998F48)
  {
    sub_100253460();
    if (!qword_100998F48)
      return 127;
  }
  byte_100983FF9 = 0;
  byte_100983FFA = 0;
  byte_100983FFB = 0;
  byte_100984048 = 0;
  byte_100998F50 = 0;
  dword_1009841E0 = 0;
  off_100984010 = 0;
  qword_100984008 = 0;
  off_100984020 = 0;
  qword_100984018 = 0;
  off_100984050 = 0;
  off_100984058 = 0;
  off_100984028 = 0;
  qword_100984038 = 0;
  unk_100984040 = 0;
  qword_100984030[0] = 0;
  sub_100253C6C(&qword_100983FE8);
  qword_100984000 = 0;
  byte_100998FBC = 0;
  byte_100998FBD = 0;
  byte_100998FBE = 0;
  xmmword_100998F58 = 0u;
  unk_100998F68 = 0u;
  xmmword_100998F78 = 0u;
  unk_100998F88 = 0u;
  xmmword_100998F98 = 0u;
  *(_OWORD *)&byte_100998FA8 = 0u;
  dword_100998FB8 = 0;
  sub_100253C6C(&qword_100983FE8);
  byte_100983FF8 = 0;
  sub_100186E8C();
  sub_100186328();
  sub_100187D28();
  sub_10018D698();
  sub_10018B438();
  result = 0;
  LODWORD(xmmword_1009991F8) = 1;
  return result;
}

void sub_10017FD8C()
{
  byte_100983FF9 = 1;
}

uint64_t sub_10017FD9C()
{
  return byte_100983FF9;
}

void sub_10017FDA8()
{
  byte_100983FFA = 1;
}

uint64_t sub_10017FDB8(uint64_t a1, uint64_t a2)
{
  _DWORD *v4;
  __int16 v5;
  uint64_t v6;

  if (!(_DWORD)xmmword_1009991F8)
    return 103;
  v4 = sub_100052DC0(0x38uLL);
  *v4 = 0;
  v5 = *(_WORD *)(a2 + 4);
  v4[2] = *(_DWORD *)a2;
  *((_WORD *)v4 + 6) = v5;
  *((_QWORD *)v4 + 2) = a1;
  sub_10004AD30((uint64_t)(v4 + 8));
  v4[8] += *(unsigned __int8 *)(qword_100998F48 + 6);
  v6 = sub_10017FFF0((uint64_t)v4);
  if ((_DWORD)v6)
    sub_100053298(v4);
  return v6;
}

uint64_t sub_10017FE58(unsigned __int16 *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;

  if (!sub_10019AB28((uint64_t)a1))
    return 414;
  if ((sub_100186004(*((unsigned __int8 *)a1 + 54)) & 1) != 0)
  {
    v9 = sub_100196768(5u, v2, v3, v4, v5, v6, v7, v8, (uint64_t)a1);
    v10 = sub_1001A1F70((uint64_t)a1, v9);
    if ((_DWORD)v10)
    {
      if (sub_10005549C())
      {
        sub_100054530("OI_HCICMD_Disconnect failed (%d)", *a1);
        v11 = sub_1000544A0(0x2Cu);
        if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
          sub_1006D17C4();
      }
    }
    else
    {
      *((_BYTE *)a1 + 54) = 6;
      *((_DWORD *)a1 + 37) = 0;
    }
  }
  else
  {
    if (*((_DWORD *)a1 + 37))
      sub_10018014C((uint64_t)a1, 0x13u);
    return 1301;
  }
  return v10;
}

uint64_t sub_10017FF38(uint64_t a1)
{
  int v2;
  uint64_t v3;
  NSObject *v5;

  if (*(_DWORD *)(a1 + 148) || !sub_10004A088(*(_DWORD *)(a1 + 72)))
    return 0;
  if ((byte_100983FF9 & 1) != 0)
  {
    v2 = 0;
  }
  else if (*(unsigned __int16 *)(qword_100998F48 + 4) <= *(unsigned __int16 *)(a1 + 274))
  {
    v2 = *(unsigned __int16 *)(a1 + 274);
  }
  else
  {
    v2 = *(unsigned __int16 *)(qword_100998F48 + 4);
  }
  v3 = sub_1002537E8(*(_DWORD *)(a1 + 72), v2);
  if ((_DWORD)v3)
  {
    if (sub_10005549C())
    {
      sub_100054530("OI_Dispatch_SetFuncTimeout failed");
      v5 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
  }
  return v3;
}

uint64_t sub_10017FFF0(uint64_t a1)
{
  uint64_t v1;
  NSObject *v2;

  sub_100253C88((_QWORD *)(a1 + 40), (uint64_t)&qword_100983FE8);
  v1 = sub_10004AE90((uint64_t)sub_1001807BC, 0, 0);
  if ((_DWORD)v1)
  {
    if (sub_10005549C())
    {
      sub_100054530("OI_Dispatch_RegisterFunc failed");
      v2 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
  }
  return v1;
}

uint64_t sub_10018007C(uint64_t a1)
{
  unsigned int v2;
  int v3;
  NSObject *v4;

  if (!(_DWORD)xmmword_1009991F8)
    return 103;
  if (byte_100983FFB)
    return 1319;
  v2 = *(unsigned __int8 *)(a1 + 54);
  if (v2 > 6)
  {
    sub_100253460();
    return 105;
  }
  else
  {
    v3 = 1 << v2;
    if ((v3 & 0x39) != 0)
    {
      sub_10018608C(a1);
      return 0;
    }
    else
    {
      if ((v3 & 6) != 0)
      {
        sub_100253460();
      }
      else if (sub_10005549C())
      {
        sub_100054530("Race condition - OI_LP_ConnectionAdded request while disconnect in progress");
        v4 = sub_1000544A0(0x2Cu);
        if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      return 601;
    }
  }
}

uint64_t sub_10018014C(uint64_t a1, unsigned __int8 a2)
{
  int v4;
  uint64_t result;
  NSObject *v6;
  NSObject *v7;
  NSObject *v8;
  NSObject *v9;
  __n128 v10;
  NSObject *v11;

  if (!(_DWORD)xmmword_1009991F8)
    return 103;
  if (sub_10019AB28(a1))
  {
    switch(*(_BYTE *)(a1 + 54))
    {
      case 0:
      case 3:
      case 4:
      case 5:
        if (*(int *)(a1 + 148) < 1)
        {
          result = sub_10005549C();
          if ((_DWORD)result)
          {
            sub_100054530("OI_LP_DisconnectReq %: reference count == 0 ignoring disconnect request", a1 + 48);
            v8 = sub_1000544A0(0x2Cu);
            result = os_log_type_enabled(v8, OS_LOG_TYPE_ERROR);
            if ((_DWORD)result)
              goto LABEL_31;
          }
        }
        else
        {
          sub_100186150(a1);
          if (*(_DWORD *)(a1 + 148))
            return 0;
          v4 = *(unsigned __int16 *)(a1 + 324);
          if (!*(_WORD *)(a1 + 324))
            v4 = *(unsigned __int16 *)(qword_100998F48 + 2);
          result = sub_1001803B0(a1, v4, a2);
        }
        break;
      case 1:
      case 2:
        if (sub_10005549C())
        {
          sub_100054530("OI_LP_DisconnectReq, connection state ST_CONNECT_IN_PROGRESS");
          v7 = sub_1000544A0(0x2Cu);
          if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
            sub_1006CE7A4();
        }
        result = 1310;
        break;
      case 6:
        result = sub_10005549C();
        if ((_DWORD)result)
        {
          sub_100054530("OI_LP_DisconnectReq, disconnect already in progress");
          v9 = sub_1000544A0(0x2Cu);
          result = os_log_type_enabled(v9, OS_LOG_TYPE_ERROR);
          if ((_DWORD)result)
            goto LABEL_31;
        }
        break;
      case 7:
        if (*(int *)(a1 + 148) >= 1)
        {
          sub_100186150(a1);
          if (!*(_DWORD *)(a1 + 148))
          {
            sub_10024C150(a1, 0, v10);
            sub_100246E20((char *)a1, 0);
            sub_10019B934((unsigned __int16 *)a1);
          }
          return 0;
        }
        result = sub_10005549C();
        if ((_DWORD)result)
        {
          sub_100054530("OI_LP_DisconnectReq %: reference count == 0 ignoring disconnect request", a1 + 48);
          v11 = sub_1000544A0(0x2Cu);
          result = os_log_type_enabled(v11, OS_LOG_TYPE_ERROR);
          if ((_DWORD)result)
            goto LABEL_31;
        }
        break;
      default:
        sub_100253460();
        result = 105;
        break;
    }
  }
  else
  {
    result = sub_10005549C();
    if ((_DWORD)result)
    {
      sub_100054530("OI_LP_DisconnectReq %d already released, ignoring disconnect request", a1);
      v6 = sub_1000544A0(0x2Cu);
      result = os_log_type_enabled(v6, OS_LOG_TYPE_ERROR);
      if ((_DWORD)result)
      {
LABEL_31:
        sub_1006CE7A4();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1001803B0(uint64_t a1, int a2, unsigned __int8 a3)
{
  int *v6;
  int v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;

  v6 = (int *)(a1 + 72);
  if (sub_10004A088(*(_DWORD *)(a1 + 72)))
    sub_100253460();
  v11 = a1;
  v12 = a3;
  v14 = &v11;
  v13 = 16;
  if (a2)
  {
    if (byte_100983FF9)
      v7 = 0;
    else
      v7 = a2;
    v8 = sub_10004A9EC((uint64_t)sub_1001833D4, (const void **)&v13, v7, v6);
    if ((_DWORD)v8)
    {
      if (sub_10005549C())
      {
        sub_100054530("OI_Dispatch_RegisterTimedFunc failed", v11, v12, v13, v14);
        v9 = sub_1000544A0(0x2Cu);
        if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
          sub_1006D17C4();
      }
    }
  }
  else
  {
    sub_1001833D4((uint64_t)&v13);
    return 0;
  }
  return v8;
}

uint64_t sub_100180494(uint64_t a1, unsigned int a2)
{
  NSObject *v4;
  uint64_t v5;
  unsigned __int16 *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int16 **v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  unsigned __int16 **v26;
  uint8_t buf[4];
  void *v28;
  __int16 v29;
  int v30;

  if (sub_10005549C())
  {
    sub_100054530("ForceDisconnect (%:, reason %!)", a1, a2);
    v4 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      v28 = sub_100054494();
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (!(_DWORD)xmmword_1009991F8)
    return 103;
  v5 = sub_10019AEA4(a1);
  if (!v5)
    return 1310;
  v6 = (unsigned __int16 *)v5;
  v26 = 0;
  v14 = 0;
  while (sub_10019C4B4((uint64_t *)&v26))
  {
    v15 = v26;
    if (v26[6] == v6)
    {
      v16 = sub_100196768(5u, v7, v8, v9, v10, v11, v12, v13, (uint64_t)v26);
      v17 = sub_1001A1F70((uint64_t)v15, v16);
      if ((_DWORD)v17)
      {
        v18 = v17;
        if (sub_10005549C())
        {
          sub_100054530("OI_HCICMD_Disconnect SCO handle %d failed", *(unsigned __int16 *)v26);
          v19 = sub_1000544A0(0x2Cu);
          if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
          {
            v20 = sub_100054494();
            *(_DWORD *)buf = 136446466;
            v28 = v20;
            v29 = 1024;
            v30 = v18;
            _os_log_error_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
          }
        }
        v14 = v18;
      }
    }
  }
  v21 = sub_100196768(5u, v7, v8, v9, v10, v11, v12, v13, (uint64_t)v6);
  v22 = sub_1001A1F70((uint64_t)v6, v21);
  if ((_DWORD)v22)
  {
    v23 = v22;
    if (sub_10005549C())
    {
      sub_100054530("OI_HCICMD_Disconnect ACL handle %d failed", *v6);
      v24 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
    return v23;
  }
  return v14;
}

uint64_t sub_10018070C(uint64_t a1)
{
  return sub_100180494(a1, 0x13u);
}

uint64_t sub_100180714()
{
  uint64_t v0;
  NSObject *v1;

  if (!(_DWORD)xmmword_1009991F8)
    return 103;
  if (!byte_100983FFB)
    return 117;
  byte_100983FFB = 0;
  v0 = sub_10004AE90((uint64_t)sub_1001807BC, 0, 0);
  if ((_DWORD)v0)
  {
    if (sub_10005549C())
    {
      sub_100054530("OI_Dispatch_RegisterFunc failed");
      v1 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v1, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
  }
  return v0;
}

void sub_1001807BC()
{
  BOOL v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (qword_100984000)
    v0 = 0;
  else
    v0 = byte_100983FFB == 0;
  if (v0 && (byte_100984048 & 1) == 0 && (uint64_t *)qword_100983FE8 != &qword_100983FE8)
  {
    v1 = sub_100253D1C((_QWORD **)&qword_100983FE8);
    v2 = *(_DWORD *)(v1 - 40);
    qword_100984000 = v1 - 40;
    if (v2 == 2)
    {
      sub_100183A00();
    }
    else if (v2 == 1)
    {
      v16 = 0;
      if (sub_100186F0C(v1 - 32, &v16))
      {
        v14 = *(unsigned __int8 *)(v16 + 13);
        v15 = *(unsigned __int16 *)(v16 + 14) | 0x8000u;
        v13 = *(unsigned __int8 *)(v16 + 12);
      }
      else
      {
        v14 = 0;
        v15 = 0;
        v13 = 0;
      }
      v11 = sub_100196768(0x13u, v3, v4, v5, v6, v7, v8, v9, qword_100984000 + 8);
      if ((_DWORD)v11)
      {
        if (sub_10005549C())
        {
          sub_100054530("OI_HCICMD_RemoteNameRequest on %: failed", qword_100984000 + 8, v13, v14, v15);
          v12 = sub_1000544A0(0x2Cu);
          if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
            sub_1006D17C4();
        }
        sub_10018216C(v11, 0);
      }
    }
    else if (v2)
    {
      if (sub_10005549C())
      {
        sub_100054530("Invalid request type %d", *(_DWORD *)qword_100984000);
        v10 = sub_1000544A0(0x2Cu);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
          sub_1006CEEC0();
      }
      sub_100183BB4(1343);
      sub_100253460();
    }
    else
    {
      sub_10018356C();
    }
  }
  sub_100183DA0();
}

uint64_t sub_10018096C(void *a1, unsigned __int16 *a2)
{
  NSObject *v3;
  uint64_t result;

  if (!(_DWORD)xmmword_1009991F8)
    return 103;
  if (!a1)
    return 123;
  if (!byte_100983FFB)
    return 117;
  if (off_100984020)
  {
    if (sub_10005549C())
    {
      sub_100054530("OI_DevMgr_BondingDisconnect - busy with previous disconnect");
      v3 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 1319;
  }
  else
  {
    result = sub_10017FE58(a2);
    if (!(_DWORD)result)
    {
      off_100984020 = a1;
      qword_100984018 = (uint64_t)a2;
    }
  }
  return result;
}

uint64_t sub_100180A3C(uint64_t result, char a2)
{
  if ((_DWORD)xmmword_1009991F8)
    *(_BYTE *)(result + 152) = a2;
  return result;
}

void sub_100180A54(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  BOOL v8;
  uint64_t v9;
  _BOOL4 v15;
  uint64_t i;
  uint64_t v17;
  void (*v18)(uint64_t, char *, uint64_t, uint64_t, uint64_t);
  NSObject *v19;
  NSObject *v20;
  uint64_t v21;
  _BOOL4 v23;
  NSObject *v24;
  NSObject *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  uint64_t v34;
  NSObject *v35;
  __n128 v36;
  int v37;
  NSObject *v38;
  NSObject *v39;
  int v40;
  int v41;
  NSObject *v42;
  NSObject *v43;
  NSObject *v44;
  uint8_t buf[4];
  void *v46;

  if ((_DWORD)xmmword_1009991F8)
    v8 = byte_100983FE0 == 0;
  else
    v8 = 0;
  if (!v8)
    return;
  v9 = a4;
  if (a2)
  {
    v15 = (_DWORD)a4 == 1 || (a4 & 0xFE) == 240;
    if (!(_DWORD)a1 && v15)
    {
      byte_100998F50 = 0;
      sub_10024BE18((uint64_t)a2, a5);
    }
    if (off_100984028)
      off_100984028(a1, a2, a3, v9, a5);
    if (!a2[2])
    {
      for (i = 0; i != 3; ++i)
      {
        v17 = qword_100984030[i];
        if (v17)
        {
          v18 = *(void (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t))(v17 + 8);
          if (v18)
            v18(a1, a2, a3, v9, a5);
        }
      }
    }
    if ((_DWORD)a1)
    {
      if (sub_10005549C())
      {
        sub_100054530("OI_HCIEventHandler_ConnectionComplete with status %!, bdaddr %:, lm 0x%x, type %d, mode %d", a1, a3, *(unsigned __int16 *)a2, v9, a5);
        v19 = sub_1000544A0(0x2Cu);
        if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
          sub_1006CEEC0();
      }
      if (!sub_10018DC98(a3))
        LODWORD(v9) = 1;
      if ((_DWORD)a1 == 711)
      {
        if (sub_10005549C())
        {
          sub_100054530("Controller returned CONNECTION_ALREADY_EXISTS");
          v20 = sub_1000544A0(0x2Cu);
          if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 136446210;
            v46 = sub_100054494();
            _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
      }
    }
    if (a2[2])
    {
      v21 = sub_10019AEA4(a3);
      *((_QWORD *)a2 + 6) = v21;
      if (v21)
      {
        sub_10018D91C((uint64_t)a2, a3, v9, a1);
      }
      else if (sub_10005549C())
      {
        sub_100054530("OI_HCI_AclConnectionFromAddr failed: (%:)", a3);
        v25 = sub_1000544A0(0x2Cu);
        if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
          sub_1006D2AE8();
      }
      return;
    }
    if (a2[54] - 1 < 2)
    {
      if ((_DWORD)a1)
      {
        sub_100181644((uint64_t)a2, a1);
        return;
      }
      a2[278] = 0;
      if ((v9 & 0xFE) == 0xF0)
      {
        a2[278] = 1;
        if (byte_100998F38)
          v37 = dword_100998F3C;
        else
          v37 = *(unsigned __int16 *)(qword_100998F48 + 8);
        *((_DWORD *)a2 + 70) = v37;
        if (sub_1001810DC((uint64_t)(a2 + 48)))
        {
          if (sub_10005549C())
          {
            sub_100054530("OI_DEVMGR_HDRChangeConnPktType");
            v39 = sub_1000544A0(0x2Cu);
            if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR))
              goto LABEL_76;
          }
        }
      }
      else if (sub_100196768(0xEu, (uint64_t)a2, a3, a4, a5, a6, a7, a8, (uint64_t)a2))
      {
        if (sub_10005549C())
        {
          sub_100054530("OI_HCICMD_ChangeConnectionPacketType");
          v38 = sub_1000544A0(0x2Cu);
          if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR))
LABEL_76:
            sub_1006D17C4();
        }
      }
      a2[54] = 3;
      v40 = sub_100188200((void (*)(int))sub_100181128, (uint64_t)a2);
      if (v40)
      {
        v41 = v40;
        if (sub_10005549C())
        {
          sub_100054530("OI_DEVMGR_ReadRemoteExtendedFeatures");
          v42 = sub_1000544A0(0x2Cu);
          if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR))
            sub_1006D17C4();
        }
        sub_100181128(v41, a3, 0);
      }
      else if (sub_100188508((void (*)(int))sub_100181434, (uint64_t)a2))
      {
        if (sub_10005549C())
        {
          sub_100054530("OI_DEVMGR_ReadRemoteVersionInformation failed with %!", 0);
          v43 = sub_1000544A0(0x2Cu);
          if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR))
            sub_1006CE7A4();
        }
      }
      else if ((v9 & 0xFE) == 0xF0)
      {
        if (sub_100181590((uint64_t)(a2 + 48)))
        {
          if (sub_10005549C())
          {
            sub_100054530("OI_DEVMGR_ReadProprietaryRemoteFeatures");
            v44 = sub_1000544A0(0x2Cu);
            if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR))
              sub_1006D17C4();
          }
        }
      }
      return;
    }
    if (sub_10005549C())
    {
      sub_100054530("OI_HCIEventHandler_ConnectionComplete %:, inconsistent state %d, dropping connection", a3, a2[54]);
      v33 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
    v34 = sub_100196768(5u, v26, v27, v28, v29, v30, v31, v32, (uint64_t)a2);
    if (sub_1001A1F70((uint64_t)a2, v34))
    {
      if (sub_10005549C())
      {
        sub_100054530("OI_HCICMD_Disconnect failed (%d)", *(unsigned __int16 *)a2);
        v35 = sub_1000544A0(0x2Cu);
        if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR))
          sub_1006D17C4();
      }
    }
    sub_10018D6CC((uint64_t)a2, 1348);
    a2[54] = 7;
    sub_10024C150((uint64_t)a2, 1348, v36);
    sub_100246E20(a2, 1348);
    sub_1001DC7B0((uint64_t)a2, 0x544u);
    sub_1001A1B78((uint64_t)a2);
    sub_10019B934((unsigned __int16 *)a2);
  }
  else
  {
    v23 = (_DWORD)a4 == 1 || (a4 & 0xFE) == 240;
    if ((_DWORD)a1 || !v23)
    {
      if (!(_DWORD)a1)
        sub_100253460();
      sub_10018D91C(0, a3, v9, a1);
    }
    else if (sub_10005549C())
    {
      sub_100054530("Ignoring ConnectionComplete for %: Unknown connection handle", a3);
      v24 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
        sub_1006D2A7C();
    }
  }
}

uint64_t sub_1001810DC(uint64_t a1)
{
  if (!a1)
    return 101;
  if (sub_10019AEA4(a1))
    return sub_1001FA87C();
  return 1301;
}

void sub_100181128(int a1, uint64_t a2, uint64_t *a3)
{
  unsigned __int16 *v6;
  int v7;
  int v9;
  uint64_t v10;
  NSObject *v11;
  int v12;
  int v13;
  NSObject *v14;
  NSObject *v15;
  int v16;
  const char *v17;
  NSObject *v18;
  int v19;
  NSObject *v20;
  uint8_t buf[4];
  void *v22;

  v6 = (unsigned __int16 *)sub_10019AEA4(a2);
  if (sub_10019AB28((uint64_t)v6))
  {
    v7 = *((unsigned __int8 *)v6 + 54);
    if (v7 != 3 && v7 != 6)
    {
      sub_100253460();
      v7 = *((unsigned __int8 *)v6 + 54);
    }
    if (v7 != 6)
    {
      if (v7 == 3)
      {
        if (a1 || !a3)
        {
          *((_BYTE *)v6 + 224) = 1;
          *((_BYTE *)v6 + 227) = 1;
          return;
        }
        v9 = *((char *)a3 + 7);
        v10 = *a3;
        *(_QWORD *)(v6 + 129) = *a3;
        *((_BYTE *)v6 + 224) = *((_BYTE *)a3 + 3) >> 7;
        *((_BYTE *)v6 + 225) = (*((_BYTE *)a3 + 1) & 0x30) != 0;
        *((_BYTE *)v6 + 227) = *((_BYTE *)a3 + 3) & 6;
        *((_BYTE *)v6 + 226) = (v10 & 0x600380000000) == 0x80000000;
        if (sub_10005549C())
        {
          sub_100054530("Remote classic supported features: %@", v6 + 129, 8);
          v11 = sub_1000544A0(0x2Cu);
          if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 136446210;
            v22 = sub_100054494();
            _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
        if (v9 < 0)
        {
          v19 = sub_100188370((void (*)(int))sub_1001841B0, (uint64_t)v6);
          if (!v19)
            goto LABEL_17;
          v12 = v19;
          if (sub_10005549C())
          {
            sub_100054530("OI_DEVMGR_ReadRemoteExtendedFeatures");
            v20 = sub_1000544A0(0x2Cu);
            if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
              sub_1006D17C4();
          }
        }
        else
        {
          v12 = 102;
        }
        sub_1001841B0(v12, a2, 0, 0, 0);
LABEL_17:
        if (!*((_DWORD *)v6 + 37) && *(_WORD *)(qword_100998F48 + 4))
        {
          if (*(unsigned __int16 *)(qword_100998F48 + 4) <= v6[137])
            v13 = v6[137];
          else
            v13 = *(unsigned __int16 *)(qword_100998F48 + 4);
          if (sub_1001803B0((uint64_t)v6, v13, 0x14u) && sub_10005549C())
          {
            sub_100054530("postDisconnectTimeout failed");
            v14 = sub_1000544A0(0x2Cu);
            if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
              sub_1006D17C4();
          }
        }
        return;
      }
      if (sub_10005549C())
      {
        v16 = *v6;
        v17 = sub_10019C5F4(*((unsigned __int8 *)v6 + 54));
        sub_100054530("orphaned newConnectionReadFeaturesCb, handle %d, state %s", v16, v17);
        v18 = sub_1000544A0(0x2Cu);
        if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
    }
  }
  else if (sub_10005549C())
  {
    sub_100054530("newConnectionReadFeaturesCb: connection has gone away");
    v15 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      sub_1006D17C4();
  }
}

void sub_100181434(uint64_t a1, uint64_t a2, unsigned int a3, unsigned int a4, unsigned int a5)
{
  uint64_t v10;
  NSObject *v11;
  NSObject *v12;
  uint8_t buf[4];
  void *v14;

  v10 = sub_10019AEA4(a2);
  if (sub_10019AB28(v10))
  {
    if (sub_10005549C())
    {
      sub_100054530("Remote classic version information: status=%!, addr=%: LMPVersion=%x, mfgrName=%x, LMPSubVersion=%x", a1, a2, a3, a4, a5);
      v11 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136446210;
        v14 = sub_100054494();
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    *(_WORD *)(v10 + 20) = a4;
    *(_BYTE *)(v10 + 24) = a3;
    *(_WORD *)(v10 + 22) = a5;
  }
  else if (sub_10005549C())
  {
    sub_100054530("newConnectionReadRemoteVersionInformationCb: connection has gone away");
    v12 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      sub_1006D17C4();
  }
}

uint64_t sub_100181590(uint64_t a1)
{
  if (!a1)
    return 101;
  if (sub_10019AEA4(a1))
    return sub_1001FA7F4();
  return 1301;
}

void sub_1001815CC(uint64_t a1, int a2, int a3)
{
  __int128 *v4;
  NSObject *v5;

  v4 = sub_10019ACEC(a2);
  if (sub_10019AB28((uint64_t)v4))
  {
    *((_DWORD *)v4 + 73) = a3;
  }
  else if (sub_10005549C())
  {
    sub_100054530("Device disconnected during the read of remote features. Ignoring event.");
    v5 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
}

void sub_100181644(uint64_t a1, uint64_t a2)
{
  __n128 v6;

  if (!(_DWORD)a2)
    *(_BYTE *)(a1 + 54) = 0;
  if (*(_BYTE *)(a1 + 198))
  {
    *(_BYTE *)(a1 + 198) = 0;
    sub_10018B530(a1);
  }
  if (qword_100984000)
  {
    if ((*(_DWORD *)qword_100984000 == 3 || *(_DWORD *)qword_100984000 == 0)
      && *(_DWORD *)(a1 + 48) == *(_DWORD *)(qword_100984000 + 8)
      && *(unsigned __int16 *)(a1 + 52) == *(unsigned __int16 *)(qword_100984000 + 12))
    {
      sub_100183FE0(a1, a2);
      if (!(_DWORD)a2)
        return;
      goto LABEL_18;
    }
  }
  if (sub_10019AB28(a1))
    sub_100174388(a2, (int *)(a1 + 48), (unsigned __int16 *)a1);
  if ((_DWORD)a2)
  {
LABEL_18:
    if (*(_BYTE *)(a1 + 54) != 3)
    {
      sub_10024C150(a1, a2, v6);
      sub_100246E20((char *)a1, a2);
      sub_10019B934((unsigned __int16 *)a1);
    }
  }
}

void sub_100181730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned __int16 v10;
  NSObject *v11;
  uint64_t i;
  char *v14;
  BOOL v15;
  int v16;
  int v17;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  NSObject *v26;
  NSObject *v27;
  const char *v28;
  NSObject *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  void (**v34)(uint64_t, uint64_t);
  void (*v35)(uint64_t, uint64_t);
  NSObject *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  char v46;
  uint64_t v48;

  if ((_DWORD)xmmword_1009991F8)
  {
    if (!byte_100983FFB)
    {
      if ((a3 & 0xFFFFFFFD) == 0)
      {
        sub_10018E224(a1, a2, a3);
LABEL_16:
        byte_100984048 = 0;
        return;
      }
      if ((a3 - 240) < 2 || (_DWORD)a3 == 1)
      {
        if ((byte_100983FF8 & 1) != 0)
        {
LABEL_14:
          sub_100196768(9u, a2, a3, a4, a5, a6, a7, a8, a1);
          return;
        }
        for (i = 0; i != 384; i += 6)
        {
          v14 = (char *)&xmmword_100984060 + i;
          v15 = !*(_DWORD *)((char *)&xmmword_100984060 + i) && *(_WORD *)((char *)&xmmword_100984060 + i + 4) == 0;
          if (v15)
            break;
          v16 = *(_DWORD *)v14;
          v17 = *((unsigned __int16 *)v14 + 2);
          if (v16 == *(_DWORD *)a1 && v17 == *(unsigned __int16 *)(a1 + 4))
            goto LABEL_14;
        }
        v19 = sub_10019AEA4(a1);
        if (v19)
        {
          v20 = v19;
          v21 = *(unsigned __int8 *)(v19 + 54);
          if (v21 == 2)
          {
            if (sub_10005549C())
            {
              sub_100054530("Duplicate incoming connection requests detected, ignore duplicate");
              v27 = sub_1000544A0(0x2Cu);
              if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
                sub_1006CEEC0();
            }
            goto LABEL_16;
          }
          if (v21 == 1)
          {
            if (sub_10005549C())
            {
              sub_100054530("Overlapping Local/Remote Connection requests");
              v25 = sub_1000544A0(0x2Cu);
              if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
                sub_1006CEEC0();
            }
            byte_100984048 = 1;
            sub_100180A54(1339, (char *)v20, a1, a3, 0, v22, v23, v24);
          }
          else
          {
            if (sub_10005549C())
            {
              v28 = sub_10019C5F4(*(unsigned __int8 *)(v20 + 54));
              sub_100054530("Incoming connection requested on same handle during state %s", v28);
              v29 = sub_1000544A0(0x2Cu);
              if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
                sub_1006CEEC0();
            }
            sub_100181BAC(0, (unsigned __int16 *)v20, 1339);
          }
        }
        v30 = sub_10019B1F4(a1, 2);
        if (v30)
        {
          v31 = v30;
          v32 = 0;
          v33 = 0;
          do
          {
            while (1)
            {
              v34 = (void (**)(uint64_t, uint64_t))qword_100984030[v32];
              if (!v34)
                break;
              v35 = *v34;
              if (!v35)
                break;
              v35(a1, a2);
              v33 = 1;
              v15 = v32++ == 2;
              if (v15)
                goto LABEL_55;
            }
            ++v32;
          }
          while (v32 != 3);
          if ((v33 & 1) != 0)
          {
LABEL_55:
            dword_100998F54 = a2;
            *(_DWORD *)(v31 + 48) = 0;
            *(_WORD *)(v31 + 52) = 0;
          }
          else
          {
            *(_DWORD *)(v31 + 56) = a2;
            *(_BYTE *)(v31 + 327) = 1;
            if (sub_1001862F4() && !*(_BYTE *)(qword_100998F48 + 14))
            {
              v46 = sub_10018C8DC();
              LODWORD(v44) = (a2 & 0x1F00) != 0x100 || (a2 & 0xFC) == 16;
              if ((v46 & 1) != 0)
                v44 = 0;
              else
                v44 = v44;
            }
            else
            {
              v44 = 0;
            }
            v48 = v44;
            if (!sub_100196768(8u, v37, v38, v39, v40, v41, v42, v43, a1))
            {
              if ((a2 & 0x1F00) == 0x100)
              {
                *(_WORD *)(v31 + 138) = *(_WORD *)(sub_100252DE8(0x2Cu) + 10);
                sub_10004C9BC(49, nullsub_99);
              }
              goto LABEL_16;
            }
            if (sub_10005549C())
            {
              sub_100054530("OI_HCICMD_AcceptConnectionRequest failed (%:)", a1, v48);
              v45 = sub_1000544A0(0x2Cu);
              if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR))
                sub_1006D17C4();
            }
          }
          sub_10019B934((unsigned __int16 *)v31);
          goto LABEL_16;
        }
        if (sub_10005549C())
        {
          sub_100054530("Cannot accept ACL connection - connection list is full!");
          v36 = sub_1000544A0(0x2Cu);
          if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR))
            sub_1006CE7A4();
        }
      }
      else if (sub_10005549C())
      {
        sub_100054530("OI_HCIEventHandler_ConnectionRequested: (%d)", a3);
        v26 = sub_1000544A0(0x2Cu);
        if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
          sub_1006D2B58();
      }
    }
    if ((_DWORD)a3 == 2)
      v10 = 29;
    else
      v10 = 9;
    if (sub_100196768(v10, a2, a3, a4, a5, a6, a7, a8, a1) && sub_10005549C())
    {
      sub_100054530("OI_HCICMD_RejectConnectionRequest failed");
      v11 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
    goto LABEL_16;
  }
}

void sub_100181BAC(uint64_t a1, unsigned __int16 *a2, uint64_t a3)
{
  uint64_t i;
  uint64_t v7;
  void (*v8)(uint64_t, unsigned __int16 *, uint64_t);
  void (*v9)(uint64_t, unsigned __int16 *);
  void (*v10)(uint64_t, unsigned __int16 *);
  NSObject *v11;
  NSObject *v12;
  __n128 v13;
  int v15;
  unsigned __int16 v16;

  if (a2)
  {
    if ((_DWORD)xmmword_1009991F8)
    {
      if (!*((_BYTE *)a2 + 2))
      {
        for (i = 0; i != 3; ++i)
        {
          v7 = qword_100984030[i];
          if (v7)
          {
            v8 = *(void (**)(uint64_t, unsigned __int16 *, uint64_t))(v7 + 16);
            if (v8)
              v8(a1, a2, a3);
          }
        }
      }
      if ((_DWORD)a1 == 702)
        a3 = 702;
      else
        a3 = a3;
      if ((_DWORD)a1 == 702)
        a1 = 0;
      else
        a1 = a1;
      sub_10018EB4C(a1, (uint64_t)a2, a3);
      sub_10018BA14(1);
      if (!*((_BYTE *)a2 + 2))
      {
        if ((_DWORD)a1)
        {
          if (sub_10005549C())
          {
            sub_100054530("OI_HCIEventHandler_DisconnectionComplete error (%d)", *a2);
            v12 = sub_1000544A0(0x2Cu);
            if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
              sub_1006D17C4();
          }
          if (*((_BYTE *)a2 + 54) == 6)
            *((_BYTE *)a2 + 54) = 0;
        }
        else
        {
          sub_10018C6F8((uint64_t)a2);
          sub_10024C150((uint64_t)a2, a3, v13);
          sub_100246E20((char *)a2, a3);
          if (qword_100984000
            && !sub_10004A088(dword_1009841E0)
            && (*(_DWORD *)qword_100984000 == 3 || !*(_DWORD *)qword_100984000)
            && *((_DWORD *)a2 + 12) == *(_DWORD *)(qword_100984000 + 8)
            && a2[26] == *(unsigned __int16 *)(qword_100984000 + 12))
          {
            (*(void (**)(uint64_t))(qword_100984000 + 16))(a3);
            sub_100183BB4(1344);
          }
          v15 = *((_DWORD *)a2 + 12);
          v16 = a2[26];
          sub_100174DF8((uint64_t)a2, a3);
          sub_1001DC7B0((uint64_t)a2, a3);
          sub_100255438((uint64_t)&v15);
        }
      }
      v9 = (void (*)(uint64_t, unsigned __int16 *))off_100984010;
      if (off_100984010 && (unsigned __int16 *)qword_100984008 == a2)
      {
        off_100984010 = 0;
        v9(a1, a2);
      }
      if (byte_100983FFB)
      {
        v10 = (void (*)(uint64_t, unsigned __int16 *))off_100984020;
        if (off_100984020)
        {
          if ((unsigned __int16 *)qword_100984018 == a2)
          {
            off_100984020 = 0;
            v10(a1, a2);
          }
        }
      }
    }
  }
  else if (sub_10005549C())
  {
    sub_100054530("OI_HCIEventHandler_DisconnectionComplete no connection handle: reason %! ignoring", a3);
    v11 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      sub_1006D17C4();
  }
}

uint64_t sub_100181E3C(uint64_t a1, uint64_t a2)
{
  _DWORD *v4;
  __int16 v5;
  uint64_t v6;

  if (!(_DWORD)xmmword_1009991F8)
    return 103;
  if (!a1)
    return 123;
  v4 = sub_100052DC0(0x38uLL);
  *v4 = 1;
  v5 = *(_WORD *)(a2 + 4);
  v4[2] = *(_DWORD *)a2;
  *((_WORD *)v4 + 6) = v5;
  *((_QWORD *)v4 + 2) = a1;
  *((_QWORD *)v4 + 3) = 0;
  sub_10004AD30((uint64_t)(v4 + 8));
  v4[8] += *(unsigned __int8 *)(qword_100998F48 + 6);
  v6 = sub_10017FFF0((uint64_t)v4);
  if ((_DWORD)v6)
    sub_100053298(v4);
  return v6;
}

uint64_t sub_100181EEC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  _DWORD *v8;
  __int16 v9;
  uint64_t v10;

  if (!(_DWORD)xmmword_1009991F8)
    return 103;
  if (!a1)
    return 123;
  v8 = sub_100052DC0(0x38uLL);
  *v8 = 1;
  v9 = *(_WORD *)(a2 + 4);
  v8[2] = *(_DWORD *)a2;
  *((_WORD *)v8 + 6) = v9;
  *((_QWORD *)v8 + 2) = a1;
  *((_QWORD *)v8 + 3) = a4;
  sub_10004AD30((uint64_t)(v8 + 8));
  v8[8] += a3;
  v10 = sub_10017FFF0((uint64_t)v8);
  if ((_DWORD)v10)
    sub_100053298(v8);
  return v10;
}

uint64_t sub_100181FA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t *v9;
  BOOL i;
  void (*v14)(uint64_t, uint64_t *, _QWORD, _QWORD);

  if (!(_DWORD)xmmword_1009991F8)
    return 103;
  if (!qword_100984000)
    return 1359;
  if (*(_DWORD *)qword_100984000 == 1
    && *(_DWORD *)a1 == *(_DWORD *)(qword_100984000 + 8)
    && *(unsigned __int16 *)(a1 + 4) == *(unsigned __int16 *)(qword_100984000 + 12))
  {
    return sub_10004C9BC(20, 0, a3, a4, a5, a6, a7, a8, a1);
  }
  v9 = (uint64_t *)qword_100983FE8;
  for (i = qword_100983FE8 == 0; !i && v9 != &qword_100983FE8; i = v9 == 0)
  {
    if (*((_DWORD *)v9 - 10) == 1
      && *(_DWORD *)a1 == *((_DWORD *)v9 - 8)
      && *(unsigned __int16 *)(a1 + 4) == *((unsigned __int16 *)v9 - 14))
    {
      v14 = (void (*)(uint64_t, uint64_t *, _QWORD, _QWORD))*(v9 - 3);
      if (!v14)
      {
        sub_100253460();
        v14 = (void (*)(uint64_t, uint64_t *, _QWORD, _QWORD))*(v9 - 3);
      }
      v14(1362, v9 - 4, 0, *(v9 - 2));
      sub_100253C9C(v9);
      return 1358;
    }
    v9 = (uint64_t *)*v9;
  }
  return 1358;
}

void sub_1001820AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSObject *v6;

  if ((_DWORD)a1)
  {
    if (sub_10005549C())
    {
      sub_100054530("OI_HCIEventHandler_RemoteNameRequestComplete: (%:)", a2);
      v6 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
  }
  if (qword_100984000
    && *(_DWORD *)qword_100984000 == 1
    && *(_DWORD *)a2 == *(_DWORD *)(qword_100984000 + 8)
    && *(unsigned __int16 *)(a2 + 4) == *(unsigned __int16 *)(qword_100984000 + 12))
  {
    sub_10018216C(a1, a3);
  }
}

uint64_t sub_10018216C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t, _QWORD);

  v4 = qword_100984000;
  if (!qword_100984000)
  {
    sub_100253460();
    v4 = qword_100984000;
  }
  if (*(_DWORD *)v4 != 1)
  {
    sub_100253460();
    v4 = qword_100984000;
  }
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v4 + 16);
  if (!v5)
  {
    sub_100253460();
    v4 = qword_100984000;
    v5 = *(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(qword_100984000 + 16);
  }
  v5(a1, v4 + 8, a2, *(_QWORD *)(v4 + 24));
  return sub_100183BB4(1346);
}

void sub_1001821E8(int a1)
{
  const char *v2;
  NSObject *v3;

  if (sub_10005549C()
    && (v2 = sub_100253398(a1),
        sub_100054530("OI_HCIEventHandler_DataBufferOverflow, linkType %s", v2),
        v3 = sub_1000544A0(0x2Cu),
        os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)))
  {
    sub_1006CE7A4();
    if (a1)
      return;
  }
  else if (a1)
  {
    return;
  }
  if ((_DWORD)xmmword_1009991F8)
    sub_10018ED04();
}

uint64_t sub_100182274()
{
  uint64_t result;

  if (off_100984058)
    return off_100984058();
  return result;
}

uint64_t sub_100182288(uint64_t a1)
{
  uint64_t i;
  NSObject *v3;
  uint64_t result;
  NSObject *v5;

  if (!(_DWORD)xmmword_1009991F8)
    return 103;
  if (a1)
  {
    for (i = 0; i != 3; ++i)
    {
      if (!qword_100984030[i])
      {
        result = 0;
        qword_100984030[i] = a1;
        return result;
      }
    }
    if (sub_10005549C())
    {
      sub_100054530("All callbacks used up");
      v3 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 1317;
  }
  else
  {
    if (sub_10005549C())
    {
      sub_100054530("Extra callbacks cannot be null");
      v5 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 101;
  }
}

uint64_t sub_100182378(uint64_t a1)
{
  uint64_t i;
  NSObject *v2;
  uint64_t result;

  if (!(_DWORD)xmmword_1009991F8)
    return 103;
  for (i = 0; i != 3; ++i)
  {
    if (qword_100984030[i] == a1)
    {
      result = 0;
      qword_100984030[i] = 0;
      return result;
    }
  }
  if (sub_10005549C())
  {
    sub_100054530("Cannot unregister extra callbacks that are not registered");
    v2 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
  return 120;
}

uint64_t sub_10018241C(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  NSObject *v2;
  uint64_t result;
  NSObject *v4;

  if (!(_DWORD)xmmword_1009991F8)
    return 103;
  if (a1)
  {
    if (off_100984028)
    {
      if (sub_10005549C())
      {
        sub_100054530("Extra callbacks already registered");
        v2 = sub_1000544A0(0x2Cu);
        if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      return 119;
    }
    else
    {
      result = 0;
      off_100984028 = a1;
    }
  }
  else
  {
    if (sub_10005549C())
    {
      sub_100054530("Extra callbacks cannot be null");
      v4 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 101;
  }
  return result;
}

uint64_t sub_1001824F8(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  NSObject *v1;
  uint64_t result;

  if (!(_DWORD)xmmword_1009991F8)
    return 103;
  if (off_100984028 == a1)
  {
    result = 0;
    off_100984028 = 0;
  }
  else
  {
    if (sub_10005549C())
    {
      sub_100054530("Cannot unregister extra callbacks that are not registered");
      v1 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v1, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 120;
  }
  return result;
}

uint64_t sub_100182588(uint64_t a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = 101;
  if (a1 && a2)
  {
    v5 = sub_10019AEA4(a1);
    if (v5)
    {
      v6 = v5;
      result = 0;
      *a2 = v6;
    }
    else
    {
      return 1301;
    }
  }
  return result;
}

uint64_t sub_1001825D4(uint64_t a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = 101;
  if (a1 && a2)
  {
    v5 = sub_10019AEFC(a1);
    if (v5)
    {
      v6 = v5;
      result = 0;
      *a2 = v6;
    }
    else
    {
      return 1301;
    }
  }
  return result;
}

uint64_t sub_100182620(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  int v5;

  if (!a2)
    return 101;
  v3 = a1;
  if (sub_10019AB28(a1))
  {
LABEL_5:
    result = 0;
    v5 = *(_DWORD *)(v3 + 48);
    *(_WORD *)(a2 + 4) = *(_WORD *)(v3 + 52);
    *(_DWORD *)a2 = v5;
    return result;
  }
  if (sub_10019ABD0(v3))
  {
    v3 = *(_QWORD *)(v3 + 48);
    goto LABEL_5;
  }
  return 1301;
}

uint64_t sub_100182680(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = 101;
  if (a1 && a2)
  {
    v5 = sub_10019AEA4(a1);
    if (v5)
    {
      v6 = v5;
      result = 0;
      *(_BYTE *)a2 = *(_BYTE *)(v6 + 227);
      *(_BYTE *)(a2 + 1) = *(_BYTE *)(v6 + 144);
      *(_BYTE *)(a2 + 2) = *(_BYTE *)(v6 + 152);
      *(_WORD *)(a2 + 4) = *(_WORD *)(v6 + 140);
      *(_WORD *)(a2 + 6) = *(_WORD *)(v6 + 136);
    }
    else
    {
      return 1301;
    }
  }
  return result;
}

uint64_t sub_1001826F0(uint64_t a1, _BYTE *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = 101;
  if (a1 && a2)
  {
    v5 = sub_10019AEFC(a1);
    if (v5)
    {
      v6 = v5;
      result = 0;
      *a2 = *(_BYTE *)(v6 + 58);
    }
    else
    {
      return 1301;
    }
  }
  return result;
}

uint64_t sub_100182740(_QWORD *a1)
{
  uint64_t result;

  if (!a1)
    return 101;
  result = sub_1001F9C94();
  if (!(_DWORD)result)
    *(_QWORD *)((char *)&xmmword_100998F78 + 4) = *a1;
  return result;
}

uint64_t sub_100182784(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v7;
  _QWORD *v8;

  result = 101;
  if (a1 && a2)
  {
    v7 = sub_10019AEA4(a1);
    if (v7)
    {
      v8 = (_QWORD *)v7;
      result = 0;
      v8 = (_QWORD *)((char *)v8 + 258);
      *a2 = *v8;
      *a3 = v8[1];
    }
    else
    {
      return 1301;
    }
  }
  return result;
}

uint64_t sub_1001827E4(uint64_t a1, _WORD *a2, _BYTE *a3, _WORD *a4)
{
  uint64_t result;
  __int16 *v9;
  __int16 *v10;

  result = 101;
  if (a1 && a2 && a3 && a4)
  {
    v9 = (__int16 *)sub_10019AEA4(a1);
    if (v9)
    {
      v10 = v9;
      if (*v9 == -1)
      {
        return 103;
      }
      else
      {
        result = 0;
        *a2 = v10[10];
        *a3 = *((_BYTE *)v10 + 24);
        *a4 = v10[11];
      }
    }
    else
    {
      return 1301;
    }
  }
  return result;
}

uint64_t sub_100182870(_DWORD *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = 101;
  if (a1 && a2)
  {
    v5 = sub_10019AFA0(a1);
    if (v5)
    {
      v6 = v5;
      result = 0;
      *a2 = *(_QWORD *)(v6 + 170);
    }
    else
    {
      return 1301;
    }
  }
  return result;
}

uint64_t sub_1001828C0(_DWORD *a1, _WORD *a2, _BYTE *a3, _WORD *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = 101;
  if (a1 && a2 && a3 && a4)
  {
    v9 = sub_10019AFA0(a1);
    if (v9)
    {
      v10 = v9;
      result = 0;
      *a2 = *(_WORD *)(v10 + 20);
      *a3 = *(_BYTE *)(v10 + 24);
      *a4 = *(_WORD *)(v10 + 22);
    }
    else
    {
      return 1301;
    }
  }
  return result;
}

uint64_t sub_100182938()
{
  return (BYTE4(xmmword_100998F78) >> 5) & 1;
}

uint64_t sub_100182948()
{
  return BYTE5(xmmword_100998F78) & 1;
}

uint64_t sub_100182958()
{
  return (BYTE5(xmmword_100998F78) >> 6) & 1;
}

BOOL sub_100182968()
{
  return (BYTE8(xmmword_100998F78) & 6) != 0;
}

uint64_t sub_10018297C()
{
  return byte_100998F75 & 1;
}

BOOL sub_10018298C()
{
  return (dword_100998F94 & 6) != 0;
}

uint64_t sub_1001829A0()
{
  return (dword_100998F94 >> 6) & 1;
}

void sub_1001829B0(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 257))
    sub_100253460();
  *(_BYTE *)(a1 + 257) = 0;
}

uint64_t sub_1001829DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint8_t buf[4];
  void *v16;

  if (a1)
  {
    v1 = sub_10019AEA4(a1);
    if (v1)
    {
      v2 = v1;
      if (sub_10005549C())
      {
        v9 = sub_1001F4E24();
        sub_100054530("Setting flush timeout, chipId:%lu", v9);
        v10 = sub_1000544A0(0x2Cu);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 136446210;
          v16 = sub_100054494();
          _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      return sub_10004C9BC(85, 0, v3, v4, v5, v6, v7, v8, v2);
    }
    v11 = 1301;
  }
  else
  {
    v11 = 101;
  }
  if (sub_10005549C())
  {
    v12 = sub_1001F4E24();
    sub_100054530("Setting flush timeout skipped, status:%!, chipId:%lu", v11, v12);
    v13 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
  return v11;
}

uint64_t sub_100182B3C(uint64_t a1, unsigned int a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  uint64_t v23;
  uint8_t buf[4];
  void *v25;

  if (!a1)
    return 101;
  v4 = sub_10019AEA4(a1);
  if (!v4)
    return 1301;
  v5 = v4;
  if (sub_10005549C())
  {
    v6 = *(_WORD *)(v5 + 138) & 1;
    v7 = sub_10019C1AC();
    v8 = sub_10019C27C();
    sub_100054530("Accept RS on single-conn for device %: enabled %d with switch-enable %d, numAcl %d, numLE %d", a1, a2, v6, v7, v8);
    v9 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      v25 = sub_100054494();
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  *(_BYTE *)(v5 + 199) = a2;
  if (!a2)
    return 0;
  if ((*(_WORD *)(v5 + 138) & 1) != 0)
    return 0;
  v10 = sub_10019C1AC();
  if (sub_10019C27C() + v10 > 1)
    return 0;
  if (sub_10005549C())
  {
    sub_100054530("Enabling Switch policy");
    v17 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      v18 = sub_100054494();
      *(_DWORD *)buf = 136446210;
      v25 = v18;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  v19 = *(unsigned __int16 *)(v5 + 138) | 1u;
  *(_WORD *)(v5 + 138) |= 1u;
  v23 = v19;
  v20 = sub_10004C9BC(49, 0, v11, v12, v13, v14, v15, v16, v5);
  if ((_DWORD)v20)
  {
    if (sub_10005549C())
    {
      sub_100054530("Could not write link settings to Central only %!", v20, v23);
      v21 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
  return v20;
}

uint64_t sub_100182D54(uint64_t a1, unsigned int a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t result;
  uint8_t buf[4];
  void *v11;

  if (!a1)
    return 101;
  v4 = sub_10019AEA4(a1);
  if (!v4)
    return 1301;
  v5 = v4;
  if (sub_10005549C())
  {
    v6 = sub_10019C1AC();
    v7 = sub_10019C27C();
    sub_100054530("Disable RS on single-conn for device %: enabled %d numAcl %d, numLE %d", a1, a2, v6, v7);
    v8 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      v11 = sub_100054494();
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  result = 0;
  *(_BYTE *)(v5 + 200) = a2;
  return result;
}

uint64_t sub_100182E5C(uint64_t a1, __int16 a2)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t result;
  uint8_t buf[4];
  void *v9;

  if (!a1)
    return 101;
  v4 = sub_10019AEA4(a1);
  if (!v4)
    return 1301;
  v5 = v4;
  if (sub_10005549C())
  {
    sub_100054530("Increasing disconnection timeout override for device %:", a1);
    v6 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      v9 = sub_100054494();
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  result = 0;
  *(_WORD *)(v5 + 324) = 10 * a2;
  return result;
}

uint64_t sub_100182F58(uint64_t a1, _WORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if (!a1)
    return 101;
  v3 = sub_10019AEA4(a1);
  if (!v3)
    return 1301;
  v4 = v3;
  result = 0;
  *a2 = *(_WORD *)(v4 + 20);
  return result;
}

uint64_t sub_100182FA0(int *a1)
{
  NSObject *v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  int v7;
  uint8_t buf[4];
  void *v9;

  if (sub_10005549C())
  {
    sub_100054530("OI_DEVMGR_AddDeviceToDenylist %:", a1);
    v2 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      v9 = sub_100054494();
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  v3 = 0;
  while (1)
  {
    v4 = (char *)&xmmword_100984060 + v3;
    if (!*(_DWORD *)((char *)&xmmword_100984060 + v3) && *(_WORD *)((char *)&xmmword_100984060 + v3 + 4) == 0)
      break;
    v3 += 6;
    if (v3 == 384)
      return 104;
  }
  result = 0;
  v7 = *a1;
  *((_WORD *)v4 + 2) = *((_WORD *)a1 + 2);
  *(_DWORD *)v4 = v7;
  return result;
}

uint64_t sub_1001830BC(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  char *v4;
  int v6;
  int v7;
  uint64_t result;
  char *v10;
  uint8_t buf[4];
  void *v12;

  if (sub_10005549C())
  {
    sub_100054530("OI_DEVMGR_RemoveDeviceFromDenylist %:", a1);
    v2 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      v12 = sub_100054494();
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  v3 = 0;
  while (1)
  {
    v4 = (char *)&xmmword_100984060 + v3;
    if (*(_DWORD *)((char *)&xmmword_100984060 + v3) || *(_WORD *)((char *)&xmmword_100984060 + v3 + 4) != 0)
    {
      v6 = *(_DWORD *)v4;
      v7 = *((unsigned __int16 *)v4 + 2);
      if (*(_DWORD *)a1 == v6 && *(unsigned __int16 *)(a1 + 4) == v7)
        break;
    }
    v3 += 6;
    if (v3 == 384)
      return 120;
  }
  result = 0;
  v10 = (char *)&xmmword_100984060 + v3;
  *((_WORD *)v10 + 2) = 0;
  *(_DWORD *)v10 = 0;
  return result;
}

void sub_1001831F0()
{
  byte_100983FF8 = 1;
}

double sub_100183200()
{
  double result;

  result = 0.0;
  xmmword_1009841C0 = 0u;
  unk_1009841D0 = 0u;
  xmmword_1009841A0 = 0u;
  unk_1009841B0 = 0u;
  xmmword_100984180 = 0u;
  unk_100984190 = 0u;
  xmmword_100984160 = 0u;
  unk_100984170 = 0u;
  xmmword_100984140 = 0u;
  unk_100984150 = 0u;
  xmmword_100984120 = 0u;
  unk_100984130 = 0u;
  xmmword_100984100 = 0u;
  unk_100984110 = 0u;
  xmmword_1009840E0 = 0u;
  unk_1009840F0 = 0u;
  xmmword_1009840C0 = 0u;
  unk_1009840D0 = 0u;
  xmmword_1009840A0 = 0u;
  unk_1009840B0 = 0u;
  xmmword_100984080 = 0u;
  unk_100984090 = 0u;
  xmmword_100984060 = 0u;
  *(_OWORD *)algn_100984070 = 0u;
  return result;
}

void sub_100183240()
{
  byte_100983FF8 = 0;
}

uint64_t sub_10018324C(uint64_t result)
{
  byte_100998F38 = result;
  return result;
}

uint64_t sub_100183258(uint64_t result)
{
  dword_100998F3C = result;
  return result;
}

uint64_t sub_100183264(uint64_t result)
{
  byte_100998F40 = result;
  return result;
}

uint64_t sub_100183270(uint64_t result)
{
  byte_100978E10 = result;
  return result;
}

uint64_t sub_10018327C()
{
  return BYTE11(xmmword_100998F98);
}

uint64_t sub_100183288(uint64_t a1, char a2)
{
  uint64_t result;

  if (!a1)
    return 101;
  if (!sub_10019AEA4(a1))
    return 1301;
  result = 0;
  BYTE11(xmmword_100998F98) = a2;
  return result;
}

void sub_1001832CC(_DWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;

  v11 = 0;
  sub_10004AD30((uint64_t)&v11);
  switch(*a1)
  {
    case 0:
      sub_100253320((uint64_t)"DEVMGR_OP_ACL_CONNECT,  bdaddr: %:, now %d:%d, expires %d:%d, cb 0x%x\n", v2, v3, v4, v5, v6, v7, v8, (uint64_t)(a1 + 2));
      break;
    case 1:
      sub_100253320((uint64_t)"DEVMGR_OP_READ_NAME,    bdaddr: %:, now %d:%d, expires %d:%d, cb 0x%x\n", v2, v3, v4, v5, v6, v7, v8, (uint64_t)(a1 + 2));
      break;
    case 2:
      v9 = "DEVMGR_OP_BOND_ENTER";
      goto LABEL_6;
    case 3:
      v10 = (uint64_t)(a1 + 2);
      v9 = "DEVMGR_OP_BOND_CONNECT, bdaddr: %:, now %d:%d, expires %d:%d, cb 0x%x\n";
LABEL_6:
      sub_100253320((uint64_t)v9, v2, v3, v4, v5, v6, v7, v8, v10);
      break;
    default:
      return;
  }
}

void sub_1001833D4(uint64_t a1)
{
  unsigned __int16 **v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  NSObject *v12;
  NSObject *v13;

  v1 = *(unsigned __int16 ***)(a1 + 8);
  if (!sub_10019AB28((uint64_t)*v1))
    sub_100253460();
  if (*((_DWORD *)*v1 + 37))
    return;
  if (!sub_100186004(*((unsigned __int8 *)*v1 + 54)))
  {
    if (sub_10005549C())
    {
      sub_100054530("disconnectTimeoutCb - connection state no longer connected");
      v12 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return;
  }
  if (sub_10024B8B8((uint64_t)*v1) && (byte_100983FF9 & 1) == 0)
  {
    if (!sub_1001803B0(*v1, *(unsigned __int16 *)(qword_100998F48 + 2), *((unsigned __int8 *)v1 + 8)))
      return;
    if (!sub_10005549C())
      return;
    sub_100054530("postDisconnectTimeout failed");
    v13 = sub_1000544A0(0x2Cu);
    if (!os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      return;
LABEL_11:
    sub_1006D17C4();
    return;
  }
  sub_10018C6F8((uint64_t)*v1);
  v2 = (uint64_t)*v1;
  v10 = sub_100196768(5u, v3, v4, v5, v6, v7, v8, v9, (uint64_t)*v1);
  if (!sub_1001A1F70(v2, v10))
  {
    *((_BYTE *)*v1 + 54) = 6;
    return;
  }
  if (sub_10005549C())
  {
    sub_100054530("OI_HCICMD_Disconnect failed (%d)", **v1);
    v11 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      goto LABEL_11;
  }
}

void sub_10018356C()
{
  _DWORD *v0;
  BOOL v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  NSObject *v17;
  uint64_t v18;
  unsigned __int16 *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  NSObject *v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  uint64_t v32;
  NSObject *v33;
  uint64_t v34;
  uint64_t v35;

  v0 = (_DWORD *)qword_100984000;
  if (!qword_100984000)
  {
    sub_100253460();
    v0 = (_DWORD *)qword_100984000;
  }
  if (*v0)
    v1 = *v0 == 3;
  else
    v1 = 1;
  if (!v1)
  {
    sub_100253460();
    v0 = (_DWORD *)qword_100984000;
  }
  v2 = sub_10019AEA4((uint64_t)(v0 + 2));
  if (!v2)
  {
    v4 = sub_100185DB8();
    if (v4)
    {
      v12 = v4;
      if (*(_WORD *)(v4 + 274))
      {
        sub_100185E0C();
      }
      else
      {
        if (*(_BYTE *)(v4 + 54))
          sub_100253460();
        v15 = sub_100196768(5u, v5, v6, v7, v8, v9, v10, v11, v12);
        v14 = sub_1001A1F70(v12, v15);
        if ((_DWORD)v14)
          goto LABEL_41;
        *(_BYTE *)(v12 + 54) = 6;
      }
      goto LABEL_36;
    }
    if (!sub_100185E0C())
    {
      if (!sub_10019C1AC() || byte_100998F50 || *(_BYTE *)(qword_100998F48 + 13))
      {
        v13 = qword_100984000 + 8;
        sub_1001862F4();
        if (sub_10019AEA4(v13))
        {
          v14 = 1314;
          goto LABEL_41;
        }
        v18 = sub_10019B1F4(v13, 1);
        if (!v18)
        {
          v14 = 1309;
          goto LABEL_41;
        }
        v19 = (unsigned __int16 *)v18;
        v35 = 0;
        if (sub_100186F0C(v13, &v35))
        {
          v26 = *(unsigned __int16 *)(qword_100998F48 + 8);
          if (byte_100998F40)
          {
LABEL_53:
            v30 = sub_1001FAC34();
LABEL_55:
            v14 = v30;
            if (!(_DWORD)v30)
              return;
            if (sub_10005549C())
            {
              sub_100054530("OI_HCICMD_CreateACLConnection failed");
              v31 = sub_1000544A0(0x2Cu);
              if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR))
                sub_1006D17C4();
            }
            sub_10019B934(v19);
            goto LABEL_41;
          }
        }
        else
        {
          if (off_100984050)
            v20 = off_100984050(v13);
          else
            v20 = 2;
          v26 = *(unsigned __int16 *)(qword_100998F48 + 8);
          if (byte_100998F40)
            goto LABEL_53;
        }
        v30 = sub_100196768(4u, v26, v20, v21, v22, v23, v24, v25, v13);
        goto LABEL_55;
      }
      sub_10018BA14(0);
    }
LABEL_36:
    if (!sub_100258AE0(qword_100984000 + 32))
    {
      v29 = sub_10004A9EC((uint64_t)sub_10018356C, 0, 1, &dword_1009841E0);
      if ((_DWORD)v29)
      {
        v32 = v29;
        if (sub_10005549C())
        {
          sub_100054530("OI_Dispatch_RegisterFunc failed");
          v33 = sub_1000544A0(0x2Cu);
          if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
            sub_1006D17C4();
        }
        v34 = sub_100112D60(v32);
        sub_100183A00(v34);
      }
      return;
    }
    sub_10011D44C("Busy-failure: outgoing connection deferred too long");
    if (sub_10005549C())
    {
      sub_100054530("Connection attempt on %: deferred too long, giving up", qword_100984000 + 8);
      v27 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    v14 = 118;
LABEL_41:
    if (sub_10005549C())
    {
      sub_100054530("deferredConnectionRequestCallback: (%:)", qword_100984000 + 8);
      v28 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
    sub_100183FE0(0, v14);
    return;
  }
  v3 = v2;
  switch(*(_BYTE *)(v2 + 54))
  {
    case 0:
    case 4:
    case 5:
      sub_100183FE0(v2, 0);
      break;
    case 1:
      if (sub_10005549C())
      {
        sub_100054530("request inconsistency - connection creation already in progress");
        v17 = sub_1000544A0(0x2Cu);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      break;
    case 2:
    case 3:
      return;
    case 6:
      goto LABEL_36;
    default:
      if (sub_10005549C())
      {
        sub_100054530("deferredConnectionRequestCallback (%d)", *(unsigned __int8 *)(v3 + 54));
        v16 = sub_1000544A0(0x2Cu);
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
          sub_1006D2BC8();
      }
      sub_10024C150(v3, 1361);
      sub_100246E20((char *)v3, 1361);
      sub_10019B934((unsigned __int16 *)v3);
      sub_100253460();
      v14 = 105;
      goto LABEL_41;
  }
}

uint64_t sub_100183A00()
{
  _DWORD *v0;
  NSObject *v1;
  uint64_t result;
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;

  v0 = (_DWORD *)qword_100984000;
  if (!qword_100984000)
  {
    sub_100253460();
    v0 = (_DWORD *)qword_100984000;
  }
  if (*v0 != 2)
    sub_100253460();
  byte_100983FFB = 1;
  if (!sub_100185E0C())
    goto LABEL_15;
  while (1)
  {
    if (sub_100258AE0(qword_100984000 + 32))
    {
      if (sub_10005549C())
      {
        sub_100054530("Enter bonding attempt deferred too long, giving up");
        v1 = sub_1000544A0(0x2Cu);
        if (os_log_type_enabled(v1, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
    }
    result = sub_10004A9EC((uint64_t)sub_100183A00, 0, 1, 0);
    if (!(_DWORD)result)
      break;
    v3 = result;
    if (sub_10005549C())
    {
      sub_100054530("OI_Dispatch_RegisterFunc failed: %!", v3);
      v4 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    sub_100112D60(v3);
LABEL_15:
    v5 = sub_100185DB8();
    if (!v5)
      return sub_1001840A8(0);
    v13 = v5;
    v14 = sub_100196768(5u, v6, v7, v8, v9, v10, v11, v12, v5);
    v15 = sub_1001A1F70(v13, v14);
    if ((_DWORD)v15)
    {
      v16 = v15;
      if (sub_10005549C())
      {
        sub_100054530("OI_HCICMD_Disconnect failed");
        v17 = sub_1000544A0(0x2Cu);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
          sub_1006D17C4();
      }
      return sub_1001840A8(v16);
    }
    *(_BYTE *)(v13 + 54) = 6;
  }
  return result;
}

uint64_t sub_100183BB4(int a1)
{
  void *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  BOOL v9;
  uint64_t result;
  uint64_t v11;
  NSObject *v12;
  const void *v13[2];
  _QWORD v14[2];
  int v15;
  __int16 v16;

  v2 = (void *)qword_100984000;
  v15 = *(_DWORD *)(qword_100984000 + 8);
  v16 = *(_WORD *)(qword_100984000 + 12);
  if (a1 == 704)
  {
    v3 = (uint64_t *)qword_100983FE8;
    if (qword_100983FE8 && qword_100983FE8 != (_QWORD)&qword_100983FE8)
    {
      do
      {
        if (v15 == *((_DWORD *)v3 - 8) && v16 == *((_WORD *)v3 - 14))
        {
          v14[1] = v3 - 5;
          v14[0] = 704;
          v13[1] = v14;
          v13[0] = (const void *)16;
          v6 = sub_10004AE90((uint64_t)sub_10018410C, v13, 0);
          if ((_DWORD)v6)
          {
            v7 = v6;
            if (sub_10005549C())
            {
              sub_100054530("Dispatch Register failed with %!", v7);
              v8 = sub_1000544A0(0x2Cu);
              if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
                sub_1006D2C38();
            }
          }
          sub_100253C9C(v3);
        }
        v3 = (uint64_t *)*v3;
        if (v3)
          v9 = v3 == &qword_100983FE8;
        else
          v9 = 1;
      }
      while (!v9);
      v2 = (void *)qword_100984000;
    }
  }
  sub_100053298(v2);
  qword_100984000 = 0;
  result = sub_10004AE90((uint64_t)sub_1001807BC, 0, 0);
  if ((_DWORD)result)
  {
    v11 = result;
    if (sub_10005549C())
    {
      sub_100054530("OI_Dispatch_RegisterFunc failed!");
      v12 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
    sub_100112D60(v11);
  }
  return result;
}

void sub_100183DA0()
{
  uint64_t v0;
  _BOOL8 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _DWORD *v9;
  NSObject *v10;
  int *v11;
  int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v0 = qword_100983FE8;
  if ((uint64_t *)qword_100983FE8 != &qword_100983FE8)
  {
    while (1)
    {
      v1 = sub_100258AE0(v0 - 8);
      if (!v1)
        break;
      v9 = (_DWORD *)(v0 - 40);
      sub_10017FB44(v1, v2, v3, v4, v5, v6, v7, v8, v19);
      sub_100253D1C((_QWORD **)&qword_100983FE8);
      switch(*(_DWORD *)(v0 - 40))
      {
        case 0:
        case 3:
          (*(void (**)(uint64_t, uint64_t, _QWORD))(v0 - 24))(1334, v0 - 32, 0);
          break;
        case 1:
          (*(void (**)(uint64_t, uint64_t, _QWORD, _QWORD))(v0 - 24))(1334, v0 - 32, 0, *(_QWORD *)(v0 - 16));
          break;
        case 2:
          (*(void (**)(uint64_t))(v0 - 32))(1334);
          break;
        default:
          if (sub_10005549C())
          {
            sub_100054530("Invalid request type %d", *v9);
            v10 = sub_1000544A0(0x2Cu);
            if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
              sub_1006D2C38();
          }
          sub_100253460();
          break;
      }
      sub_100053298(v9);
      v0 = qword_100983FE8;
      if ((uint64_t *)qword_100983FE8 == &qword_100983FE8)
        return;
    }
    if ((uint64_t *)qword_100983FE8 != &qword_100983FE8)
    {
      v20 = 0;
      sub_10004AD30((uint64_t)&v20);
      v11 = (int *)(qword_100983FE8 - 8);
      if (sub_100258AE0(qword_100983FE8 - 8))
      {
        v12 = 0;
      }
      else
      {
        v13 = sub_10025899C((int *)&v20, v11);
        v12 = v13 <= 1 ? 1 : v13;
      }
      v14 = sub_10004A088(dword_1009841E4)
          ? sub_1002537E8(dword_1009841E4, v12)
          : sub_10004A9EC((uint64_t)sub_100183DA0, 0, v12, &dword_1009841E4);
      v15 = v14;
      if ((_DWORD)v14)
      {
        if (sub_10005549C())
        {
          sub_100054530("OI_Dispatch_RegisterFunc/OI_Dispatch_SetFuncTimeout failed");
          v16 = sub_1000544A0(0x2Cu);
          if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
            sub_1006D17C4();
        }
        v17 = sub_100112D60(v15);
        sub_100183FE0(v17, v18);
      }
    }
  }
}

uint64_t sub_100183FE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = qword_100984000;
  if (!qword_100984000)
  {
    sub_100253460();
    v4 = qword_100984000;
  }
  if (*(_QWORD *)(v4 + 16))
  {
    if (a1)
      goto LABEL_5;
  }
  else
  {
    sub_100253460();
    if (a1)
    {
LABEL_5:
      if (*(_DWORD *)(a1 + 48) != *(_DWORD *)(qword_100984000 + 8)
        || *(unsigned __int16 *)(a1 + 52) != *(unsigned __int16 *)(qword_100984000 + 12))
      {
        sub_100253460();
      }
      if (!(_DWORD)a2)
        goto LABEL_16;
LABEL_14:
      a1 = 0;
      goto LABEL_17;
    }
  }
  if ((_DWORD)a2)
    goto LABEL_14;
  sub_100253460();
LABEL_16:
  sub_10018608C(a1);
LABEL_17:
  if (sub_10004A088(dword_1009841E0))
    sub_100049F6C(dword_1009841E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(qword_100984000 + 16))(a2, qword_100984000 + 8, a1);
  return sub_100183BB4(a2);
}

uint64_t sub_1001840A8(uint64_t a1)
{
  uint64_t v2;

  v2 = qword_100984000;
  if (!qword_100984000)
  {
    sub_100253460();
    v2 = qword_100984000;
  }
  if (*(_DWORD *)v2 != 2)
  {
    sub_100253460();
    v2 = qword_100984000;
  }
  byte_100983FFB = (_DWORD)a1 == 0;
  (*(void (**)(uint64_t))(v2 + 8))(a1);
  return sub_100183BB4(1345);
}

void sub_10018410C(uint64_t a1)
{
  unsigned int *v1;
  uint64_t v2;
  _QWORD *v3;
  void (*v4)(uint64_t, _QWORD *, _QWORD);
  NSObject *v5;

  v1 = *(unsigned int **)(a1 + 8);
  v2 = *v1;
  v3 = (_QWORD *)*((_QWORD *)v1 + 1);
  if (v3)
  {
    v4 = (void (*)(uint64_t, _QWORD *, _QWORD))v3[2];
    if (v4)
      v4(v2, v3 + 1, 0);
    sub_100053298(v3);
  }
  else
  {
    sub_100253460();
    if ((sub_10005549C() & 1) != 0)
    {
      sub_100054530("Request is NULL, status is %!", v2);
      v5 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        sub_1006CEEC0();
    }
  }
}

void sub_1001841B0(int a1, uint64_t a2, int a3, uint64_t a4, _QWORD *a5)
{
  unsigned __int16 *v8;
  int v9;
  NSObject *v11;
  NSObject *v12;
  int v13;
  const char *v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  uint8_t buf[4];
  void *v26;

  v8 = (unsigned __int16 *)sub_10019AEA4(a2);
  if (sub_10019AB28((uint64_t)v8))
  {
    v9 = *((unsigned __int8 *)v8 + 54);
    if (v9 != 3 && v9 != 6)
    {
      sub_100253460();
      v9 = *((unsigned __int8 *)v8 + 54);
    }
    if (v9 != 6)
    {
      if (v9 == 3)
      {
        if (!a1 && a3 == 1 && a5)
        {
          *(_QWORD *)(v8 + 133) = *a5;
          *((_BYTE *)v8 + 277) = *(_BYTE *)a5 & 1;
          if (sub_10005549C())
          {
            sub_100054530("Remote classic extended features page 1: %@", v8 + 133, 8);
            v11 = sub_1000544A0(0x2Cu);
            if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 136446210;
              v26 = sub_100054494();
              _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
          }
        }
        else
        {
          *((_BYTE *)v8 + 277) = 0;
        }
        v16 = sub_10004C9BC(46, sub_1001843F8);
        if ((_DWORD)v16)
        {
          v17 = v16;
          if (sub_10005549C())
          {
            sub_100054530("OI_HCICMD_RoleDiscovery", v8);
            v24 = sub_1000544A0(0x2Cu);
            if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
              sub_1006D17C4();
          }
          sub_1001845C0((uint64_t)v8, v17, v18, v19, v20, v21, v22, v23);
        }
        *((_BYTE *)v8 + 212) = 1;
      }
      else if (sub_10005549C())
      {
        v13 = *v8;
        v14 = sub_10019C5F4(*((unsigned __int8 *)v8 + 54));
        sub_100054530("orphaned newConnectionReadExtendedFeaturesCb, handle %d, state %s", v13, v14);
        v15 = sub_1000544A0(0x2Cu);
        if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
    }
  }
  else if (sub_10005549C())
  {
    sub_100054530("newConnectionReadExtendedFeaturesCb: connection has gone away");
    v12 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      sub_1006D17C4();
  }
}

void sub_1001843F8(uint64_t a1, unsigned __int16 *a2, char a3)
{
  int v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  NSObject *v15;
  int v16;
  const char *v17;
  NSObject *v18;
  uint64_t v19;
  NSObject *v20;
  uint64_t v21;

  if (!a2)
  {
    if (sub_10005549C()
      && (sub_100054530("newConnectionReadRoleCb: connection has gone away"),
          v15 = sub_1000544A0(0x2Cu),
          os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)))
    {
      sub_1006D17C4();
      if ((_DWORD)a1)
        return;
    }
    else if ((_DWORD)a1)
    {
      return;
    }
    sub_100253460();
    return;
  }
  v6 = *((unsigned __int8 *)a2 + 54);
  if (v6 != 3 && v6 != 6)
  {
    sub_100253460();
    v6 = *((unsigned __int8 *)a2 + 54);
  }
  if (v6 != 6)
  {
    if (v6 == 3)
    {
      if ((_DWORD)a1)
      {
        if (!sub_10005549C())
          goto LABEL_24;
        sub_100054530("newConnectionReadRoleCb failed");
        v14 = sub_1000544A0(0x2Cu);
        if (!os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
          goto LABEL_24;
      }
      else
      {
        *((_BYTE *)a2 + 144) = a3;
        v21 = a2[69];
        v19 = sub_10004C9BC(49, sub_100184664);
        if (!(_DWORD)v19)
          return;
        a1 = v19;
        a2[69] = -1;
        if (!sub_10005549C())
          goto LABEL_24;
        sub_100054530("OI_HCICMD_WriteLinkPolicySettings failed", a2, v21);
        v20 = sub_1000544A0(0x2Cu);
        if (!os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
          goto LABEL_24;
      }
      sub_1006D17C4();
LABEL_24:
      sub_1001845C0((uint64_t)a2, a1, v8, v9, v10, v11, v12, v13);
      return;
    }
    if (sub_10005549C())
    {
      v16 = *a2;
      v17 = sub_10019C5F4(*((unsigned __int8 *)a2 + 54));
      sub_100054530("orphaned newConnectionReadRoleCb, handle %d, state %s", v16, v17);
      v18 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
}

void sub_1001845C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  NSObject *v11;

  v10 = sub_100196768(5u, a2, a3, a4, a5, a6, a7, a8, a1);
  if (sub_1001A1F70(a1, v10))
  {
    if (sub_10005549C())
    {
      sub_100054530("OI_HCICMD_Disconnect failed");
      v11 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
  }
  sub_100181644(a1, a2);
}

void sub_100184664(uint64_t a1, unsigned __int16 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  NSObject *v10;
  int v11;
  NSObject *v13;

  v8 = a1;
  if (!a2)
  {
    if (sub_10005549C()
      && (sub_100054530("newConnectionWritePolicyCb: connection has gone away"),
          v10 = sub_1000544A0(0x2Cu),
          os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)))
    {
      sub_1006D17C4();
      if (v8)
        return;
    }
    else if (v8)
    {
      return;
    }
    sub_100253460();
    return;
  }
  if ((_DWORD)a1)
  {
    a2[69] = -1;
    sub_1001845C0((uint64_t)a2, a1, a3, a4, a5, a6, a7, a8);
  }
  else
  {
    v11 = *((unsigned __int8 *)a2 + 54);
    if (v11 != 3 && v11 != 6)
    {
      sub_100253460();
      v11 = *((unsigned __int8 *)a2 + 54);
    }
    if (v11 != 6)
    {
      if (v11 == 3)
      {
        sub_100181644((uint64_t)a2, 0);
      }
      else if (sub_10005549C())
      {
        sub_100054530("Unexpected writeLinkPolicy callback, handle: %d", *a2);
        v13 = sub_1000544A0(0x2Cu);
        if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
    }
  }
}

void sub_100184790(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;

  _os_log_error_impl(a1, v4, OS_LOG_TYPE_ERROR, a4, v5, 0xCu);
}

uint64_t sub_1001847A4(__int128 *a1, uint64_t *a2, _WORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  _QWORD v15[2];

  v4 = 0;
  v12 = 0;
  v13 = 0;
  v5 = *a2;
  v15[0] = 0;
  v15[1] = v5;
  v14 = *a1;
  v6 = 0xF00000000;
  do
  {
    v7 = *((_BYTE *)v15 + v4);
    *((_BYTE *)v15 + v4) = *((_BYTE *)v15 + HIDWORD(v6));
    *((_BYTE *)v15 + HIDWORD(v6)) = v7;
    ++v4;
    v6 -= 0x100000000;
  }
  while (v4 != 8);
  v8 = 0;
  v9 = 0xF00000000;
  do
  {
    v10 = *((_BYTE *)&v15[-1] + v8);
    *((_BYTE *)&v15[-1] + v8) = *((_BYTE *)&v15[-1] + HIDWORD(v9));
    *((_BYTE *)&v15[-1] + HIDWORD(v9)) = v10;
    ++v8;
    v9 -= 0x100000000;
  }
  while (v8 != 8);
  result = sub_100004F50(a1, 0x10uLL, v15, 0x10u, &v12, 0x10u);
  if (!(_DWORD)result)
    *a3 = bswap32(HIWORD(v13)) >> 16;
  return result;
}

uint64_t sub_10018489C(__int128 *a1, __int16 *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  NSObject *v10;
  NSObject *v11;
  uint64_t v13;
  uint64_t v14;
  __int128 key;
  _BYTE v16[13];
  __int16 v17;
  char v18;

  memset(v16, 0, sizeof(v16));
  v13 = 0;
  v14 = 0;
  if (a1 && a2)
  {
    v6 = 0;
    v17 = *a2;
    v18 = *((_BYTE *)a2 + 2);
    key = *a1;
    v7 = 0xF00000000;
    do
    {
      v8 = v16[v6 - 8];
      v16[v6 - 8] = v16[HIDWORD(v7) - 8];
      v16[HIDWORD(v7) - 8] = v8;
      ++v6;
      v7 -= 0x100000000;
    }
    while (v6 != 8);
    v9 = sub_100004F50(&key, 0x10uLL, v16, 0x10u, &v13, 0x10u);
    if ((_DWORD)v9)
    {
      if (sub_10005549C())
      {
        sub_100054530("AES128Encrypt returned %d irk:%@ r:%@", v9, a1, 16, a2, 16);
        v10 = sub_1000544A0(0x43u);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
          sub_1006CEE54();
      }
    }
    else
    {
      *(_WORD *)a3 = *(_WORD *)((char *)&v14 + 5);
      *(_BYTE *)(a3 + 2) = HIBYTE(v14);
    }
  }
  else
  {
    if (sub_10005549C())
    {
      sub_100054530("No IRK key available - can't run AH.");
      v11 = sub_1000544A0(0x43u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 4828;
  }
  return v9;
}

uint64_t sub_100184A2C(__int128 *a1, int8x16_t *a2, int8x16_t *a3, int8x16_t *a4, int8x16_t *a5, int a6, void *a7)
{
  uint64_t v9;
  unint64_t v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  __int8 v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  uint64_t v19;
  unint64_t v20;
  __int8 v21;
  uint64_t v22;
  unint64_t v23;
  __int8 v24;
  uint64_t v25;
  NSObject *v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  int8x16_t v34;
  int8x16_t v35;
  int8x16_t v36;
  __int128 key;

  v9 = 0;
  v36 = 0uLL;
  v35 = 0uLL;
  v34 = 0uLL;
  if (!a6)
    a4 = a5;
  v35 = veorq_s8(*a4, *a2);
  key = *a1;
  v11 = 0xF00000000;
  do
  {
    v12 = *((_BYTE *)&key + v9);
    *((_BYTE *)&key + v9) = *((_BYTE *)&key + HIDWORD(v11));
    *((_BYTE *)&key + HIDWORD(v11)) = v12;
    ++v9;
    v11 -= 0x100000000;
  }
  while (v9 != 8);
  v13 = 0;
  v14 = 0xF00000000;
  do
  {
    v15 = v35.i8[v13];
    v35.i8[v13] = v35.i8[HIDWORD(v14)];
    v35.i8[HIDWORD(v14)] = v15;
    ++v13;
    v14 -= 0x100000000;
  }
  while (v13 != 8);
  v16 = sub_100004F50(&key, 0x10uLL, &v35, 0x10u, &v36, 0x10u);
  if ((_DWORD)v16)
  {
    v17 = v16;
    if (sub_10005549C())
    {
      sub_100054530("Failed to run AES 128 encryption %!.", v17);
      v18 = sub_1000544A0(0x43u);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
  else
  {
    v19 = 0;
    v20 = 0xF00000000;
    do
    {
      v21 = v36.i8[v19];
      v36.i8[v19] = v36.i8[HIDWORD(v20)];
      v36.i8[HIDWORD(v20)] = v21;
      ++v19;
      v20 -= 0x100000000;
    }
    while (v19 != 8);
    v22 = 0;
    v34 = veorq_s8(*a3, v36);
    v23 = 0xF00000000;
    do
    {
      v24 = v34.i8[v22];
      v34.i8[v22] = v34.i8[HIDWORD(v23)];
      v34.i8[HIDWORD(v23)] = v24;
      ++v22;
      v23 -= 0x100000000;
    }
    while (v22 != 8);
    v25 = sub_100004F50(&key, 0x10uLL, &v34, 0x10u, a7, 0x10u);
    if ((_DWORD)v25)
    {
      v17 = v25;
      if (sub_10005549C())
      {
        sub_100054530("Failed to run AES 128 encryption %!.", v17);
        v26 = sub_1000544A0(0x43u);
        if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
    }
    else
    {
      v27 = 0;
      v28 = 0xF00000000;
      do
      {
        v29 = *((_BYTE *)a7 + v27);
        *((_BYTE *)a7 + v27) = *((_BYTE *)a7 + HIDWORD(v28));
        *((_BYTE *)a7 + HIDWORD(v28)) = v29;
        ++v27;
        v28 -= 0x100000000;
      }
      while (v27 != 8);
      v30 = 0;
      v31 = 0xF00000000;
      do
      {
        v32 = *((_BYTE *)&key + v30);
        *((_BYTE *)&key + v30) = *((_BYTE *)&key + HIDWORD(v31));
        *((_BYTE *)&key + HIDWORD(v31)) = v32;
        ++v30;
        v31 -= 0x100000000;
      }
      while (v30 != 8);
      return 0;
    }
  }
  return v17;
}

uint64_t sub_100184CD4(__int128 *a1, uint64_t *a2, _QWORD *a3, void *a4)
{
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t result;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint8_t buf[4];
  void *v20;
  __int128 key;
  _QWORD v22[2];

  v7 = *a2;
  v22[0] = *a3;
  v22[1] = v7;
  key = *a1;
  if (sub_10005549C())
  {
    sub_100054530("Running S1 on key=%@, r1=%@, r2=%@, r'=%@", &key, 16, a2, 16, a3, 16, v22, 16);
    v8 = sub_1000544A0(0x43u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 136446210;
      v20 = sub_100054494();
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, " %{public}s", buf, 0xCu);
    }
  }
  v9 = 0;
  v10 = 0xF00000000;
  do
  {
    v11 = *((_BYTE *)&v22[-1] + v9);
    *((_BYTE *)&v22[-1] + v9) = *((_BYTE *)&v22[-1] + HIDWORD(v10));
    *((_BYTE *)&v22[-1] + HIDWORD(v10)) = v11;
    ++v9;
    v10 -= 0x100000000;
  }
  while (v9 != 8);
  v12 = 0;
  v13 = 0xF00000000;
  do
  {
    v14 = *((_BYTE *)v22 + v12);
    *((_BYTE *)v22 + v12) = *((_BYTE *)v22 + HIDWORD(v13));
    *((_BYTE *)v22 + HIDWORD(v13)) = v14;
    ++v12;
    v13 -= 0x100000000;
  }
  while (v12 != 8);
  result = sub_100004F50(&key, 0x10uLL, v22, 0x10u, a4, 0x10u);
  if (!(_DWORD)result)
  {
    v16 = 0;
    v17 = 0xF00000000;
    do
    {
      v18 = *((_BYTE *)a4 + v16);
      *((_BYTE *)a4 + v16) = *((_BYTE *)a4 + HIDWORD(v17));
      *((_BYTE *)a4 + HIDWORD(v17)) = v18;
      ++v16;
      v17 -= 0x100000000;
    }
    while (v16 != 8);
  }
  return result;
}

uint64_t sub_100184E88(__int128 *a1, __int16 a2, __int16 a3, void *a4)
{
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t result;
  uint64_t v12;
  unint64_t v13;
  char v14;
  __int128 v15;
  uint64_t v16;
  int v17;
  char v18;
  char v19;
  char v20;
  char v21;

  v5 = 0;
  v17 = 0;
  v16 = 0;
  v18 = HIBYTE(a3);
  v19 = a3;
  v20 = HIBYTE(a2);
  v21 = a2;
  v15 = *a1;
  v6 = 0xF00000000;
  do
  {
    v7 = *((_BYTE *)&v15 + v5);
    *((_BYTE *)&v15 + v5) = *((_BYTE *)&v15 + HIDWORD(v6));
    *((_BYTE *)&v15 + HIDWORD(v6)) = v7;
    ++v5;
    v6 -= 0x100000000;
  }
  while (v5 != 8);
  v8 = 0;
  v9 = 0xF00000000;
  do
  {
    v10 = *((_BYTE *)&v16 + v8);
    *((_BYTE *)&v16 + v8) = *((_BYTE *)&v16 + HIDWORD(v9));
    *((_BYTE *)&v16 + HIDWORD(v9)) = v10;
    ++v8;
    v9 -= 0x100000000;
  }
  while (v8 != 8);
  result = sub_100004F50(a1, 0x10uLL, &v16, 0x10u, a4, 0x10u);
  if (!(_DWORD)result)
  {
    v12 = 0;
    v13 = 0xF00000000;
    do
    {
      v14 = *((_BYTE *)a4 + v12);
      *((_BYTE *)a4 + v12) = *((_BYTE *)a4 + HIDWORD(v13));
      *((_BYTE *)a4 + HIDWORD(v13)) = v14;
      ++v12;
      v13 -= 0x100000000;
    }
    while (v12 != 8);
  }
  return result;
}

uint64_t sub_100184FB4(_OWORD *a1, _OWORD *a2, __int128 *a3, char a4, void *a5)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t i;
  char v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t result;
  uint64_t v18;
  unint64_t v19;
  char v20;
  __int128 v21;
  _OWORD v22[2];
  _OWORD v23[2];
  char v24;

  v6 = 0;
  v7 = a1[1];
  v22[0] = *a1;
  v22[1] = v7;
  v8 = a2[1];
  v23[0] = *a2;
  v23[1] = v8;
  v24 = a4;
  v9 = 0x1F00000000;
  do
  {
    v10 = *((_BYTE *)v22 + v6);
    *((_BYTE *)v22 + v6) = *((_BYTE *)v22 + HIDWORD(v9));
    *((_BYTE *)v22 + HIDWORD(v9)) = v10;
    ++v6;
    v9 -= 0x100000000;
  }
  while (v6 != 16);
  v11 = 0x1F00000000;
  for (i = 32; i != 48; ++i)
  {
    v13 = *((_BYTE *)v22 + i);
    *((_BYTE *)v22 + i) = *((_BYTE *)v23 + HIDWORD(v11));
    *((_BYTE *)v23 + HIDWORD(v11)) = v13;
    v11 -= 0x100000000;
  }
  v14 = 0;
  v21 = *a3;
  v15 = 0xF00000000;
  do
  {
    v16 = *((_BYTE *)&v22[-1] + v14);
    *((_BYTE *)&v22[-1] + v14) = *((_BYTE *)&v22[-1] + HIDWORD(v15));
    *((_BYTE *)&v22[-1] + HIDWORD(v15)) = v16;
    ++v14;
    v15 -= 0x100000000;
  }
  while (v14 != 8);
  result = sub_100113774(&v21, 0x10uLL, v22, 0x41u, a5, 0x10u);
  if (!(_DWORD)result)
  {
    v18 = 0;
    v19 = 0xF00000000;
    do
    {
      v20 = *((_BYTE *)a5 + v18);
      *((_BYTE *)a5 + v18) = *((_BYTE *)a5 + HIDWORD(v19));
      *((_BYTE *)a5 + HIDWORD(v19)) = v20;
      ++v18;
      v19 -= 0x100000000;
    }
    while (v18 != 8);
  }
  return result;
}

uint64_t sub_100185110(_OWORD *a1, _OWORD *a2, _OWORD *a3, int a4, uint64_t a5, uint64_t a6, char *a7, int a8)
{
  uint64_t v14;
  __int128 v15;
  unint64_t v16;
  char v17;
  uint64_t result;
  uint64_t v19;
  unint64_t v20;
  char v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  _OWORD v26[2];
  uint64_t v27;
  _QWORD v28[2];
  _QWORD v29[2];

  if (a8 != 32)
    return 101;
  v14 = 0;
  v27 = 0;
  v28[0] = 0;
  *(_QWORD *)((char *)v28 + 5) = 0;
  v15 = a1[1];
  v26[0] = *a1;
  v26[1] = v15;
  v16 = 0x1F00000000;
  do
  {
    v17 = *((_BYTE *)v26 + v14);
    *((_BYTE *)v26 + v14) = *((_BYTE *)v26 + HIDWORD(v16));
    *((_BYTE *)v26 + HIDWORD(v16)) = v17;
    ++v14;
    v16 -= 0x100000000;
  }
  while (v14 != 16);
  v29[0] = 0;
  v29[1] = 0;
  if (sub_100113774(&unk_10073A577, 0x10uLL, v26, 0x20u, v29, 0x10u))
    return 4829;
  sub_1001852F0((uint64_t)v26, 0, a4, a2, a3, a5, a6);
  if (!sub_100113774(v29, 0x10uLL, v26, 0x35u, a7, 0x10u))
  {
    v19 = 0;
    v20 = 0xF00000000;
    do
    {
      v21 = a7[v19];
      a7[v19] = a7[HIDWORD(v20)];
      a7[HIDWORD(v20)] = v21;
      ++v19;
      v20 -= 0x100000000;
    }
    while (v19 != 8);
  }
  sub_1001852F0((uint64_t)v26, 1, a4, a2, a3, a5, a6);
  v22 = a7 + 16;
  result = sub_100113774(v29, 0x10uLL, v26, 0x35u, v22, 0x10u);
  if (!(_DWORD)result)
  {
    v23 = 0;
    v24 = 0xF00000000;
    do
    {
      v25 = *((_BYTE *)v22 + v23);
      *((_BYTE *)v22 + v23) = *((_BYTE *)v22 + HIDWORD(v24));
      *((_BYTE *)v22 + HIDWORD(v24)) = v25;
      ++v23;
      v24 -= 0x100000000;
    }
    while (v23 != 8);
    return 0;
  }
  return result;
}

uint64_t sub_1001852F0(uint64_t result, char a2, int a3, _OWORD *a4, _OWORD *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  char v16;

  v7 = 0;
  *(_BYTE *)result = a2;
  *(_BYTE *)(result + 1) = HIBYTE(a3);
  *(_BYTE *)(result + 2) = BYTE2(a3);
  *(_BYTE *)(result + 3) = BYTE1(a3);
  *(_BYTE *)(result + 4) = a3;
  v8 = result + 5;
  *(_OWORD *)(result + 5) = *a4;
  v9 = result + 21;
  *(_OWORD *)(result + 21) = *a5;
  *(_BYTE *)(result + 37) = *(_BYTE *)a6;
  v10 = *(_DWORD *)(a6 + 1);
  *(_WORD *)(result + 42) = *(_WORD *)(a6 + 5);
  *(_DWORD *)(result + 38) = v10;
  *(_BYTE *)(result + 44) = *(_BYTE *)a7;
  v11 = *(_DWORD *)(a7 + 1);
  *(_WORD *)(result + 49) = *(_WORD *)(a7 + 5);
  *(_DWORD *)(result + 45) = v11;
  *(_WORD *)(result + 51) = 1;
  v12 = 0xF00000000;
  do
  {
    v13 = *(_BYTE *)(v8 + v7);
    *(_BYTE *)(v8 + v7) = *(_BYTE *)(v8 + HIDWORD(v12));
    *(_BYTE *)(v8 + HIDWORD(v12)) = v13;
    ++v7;
    v12 -= 0x100000000;
  }
  while (v7 != 8);
  v14 = 0;
  v15 = 0xF00000000;
  do
  {
    v16 = *(_BYTE *)(v9 + v14);
    *(_BYTE *)(v9 + v14) = *(_BYTE *)(v9 + HIDWORD(v15));
    *(_BYTE *)(v9 + HIDWORD(v15)) = v16;
    ++v14;
    v15 -= 0x100000000;
  }
  while (v14 != 8);
  return result;
}

uint64_t sub_1001853C4(__int128 *a1, __int128 *a2, __int128 *a3, __int128 *a4, __int16 *a5, char *a6, char *a7, void *a8)
{
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t i;
  char v16;
  unint64_t v17;
  uint64_t j;
  char v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  uint64_t v24;
  unint64_t v25;
  char v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int16 v31;
  char v32;
  char v33;
  int v34;
  __int16 v35;
  char v36;
  int v37;
  __int16 v38;

  v9 = 0;
  v10 = *a3;
  v28 = *a2;
  v29 = v10;
  v11 = *a4;
  v31 = *a5;
  v30 = v11;
  v32 = *((_BYTE *)a5 + 2);
  v33 = *a6;
  v35 = *(_WORD *)(a6 + 5);
  v34 = *(_DWORD *)(a6 + 1);
  v36 = *a7;
  v37 = *(_DWORD *)(a7 + 1);
  v12 = 0xF00000000;
  v38 = *(_WORD *)(a7 + 5);
  do
  {
    v13 = *((_BYTE *)&v28 + v9);
    *((_BYTE *)&v28 + v9) = *((_BYTE *)&v28 + HIDWORD(v12));
    *((_BYTE *)&v28 + HIDWORD(v12)) = v13;
    ++v9;
    v12 -= 0x100000000;
  }
  while (v9 != 8);
  v14 = 0xF00000000;
  for (i = 16; i != 24; ++i)
  {
    v16 = *((_BYTE *)&v28 + i);
    *((_BYTE *)&v28 + i) = *((_BYTE *)&v29 + HIDWORD(v14));
    *((_BYTE *)&v29 + HIDWORD(v14)) = v16;
    v14 -= 0x100000000;
  }
  v17 = 0xF00000000;
  for (j = 32; j != 40; ++j)
  {
    v19 = *((_BYTE *)&v28 + j);
    *((_BYTE *)&v28 + j) = *((_BYTE *)&v30 + HIDWORD(v17));
    *((_BYTE *)&v30 + HIDWORD(v17)) = v19;
    v17 -= 0x100000000;
  }
  v20 = 0;
  v27 = 0uLL;
  v27 = *a1;
  v21 = 0xF00000000;
  do
  {
    v22 = *((_BYTE *)&v27 + v20);
    *((_BYTE *)&v27 + v20) = *((_BYTE *)&v27 + HIDWORD(v21));
    *((_BYTE *)&v27 + HIDWORD(v21)) = v22;
    ++v20;
    v21 -= 0x100000000;
  }
  while (v20 != 8);
  result = sub_100113774(&v27, 0x10uLL, &v28, 0x41u, a8, 0x10u);
  if (!(_DWORD)result)
  {
    v24 = 0;
    v25 = 0xF00000000;
    do
    {
      v26 = *((_BYTE *)a8 + v24);
      *((_BYTE *)a8 + v24) = *((_BYTE *)a8 + HIDWORD(v25));
      *((_BYTE *)a8 + HIDWORD(v25)) = v26;
      ++v24;
      v25 -= 0x100000000;
    }
    while (v24 != 8);
  }
  return result;
}

uint8x8_t sub_10018559C(_OWORD *a1, _OWORD *a2, __int128 *a3, __int128 *a4, _DWORD *a5)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t i;
  char v13;
  unint64_t v14;
  uint64_t j;
  char v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint8x8_t result;
  int16x8_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD v25[2];
  _OWORD v26[2];
  __int128 v27;

  v6 = 0;
  v7 = a1[1];
  v25[0] = *a1;
  v25[1] = v7;
  v8 = a2[1];
  v26[0] = *a2;
  v26[1] = v8;
  v27 = *a4;
  v9 = 0x1F00000000;
  do
  {
    v10 = *((_BYTE *)v25 + v6);
    *((_BYTE *)v25 + v6) = *((_BYTE *)v25 + HIDWORD(v9));
    *((_BYTE *)v25 + HIDWORD(v9)) = v10;
    ++v6;
    v9 -= 0x100000000;
  }
  while (v6 != 16);
  v11 = 0x1F00000000;
  for (i = 32; i != 48; ++i)
  {
    v13 = *((_BYTE *)v25 + i);
    *((_BYTE *)v25 + i) = *((_BYTE *)v26 + HIDWORD(v11));
    *((_BYTE *)v26 + HIDWORD(v11)) = v13;
    v11 -= 0x100000000;
  }
  v14 = 0xF00000000;
  for (j = 64; j != 72; ++j)
  {
    v16 = *((_BYTE *)v25 + j);
    *((_BYTE *)v25 + j) = *((_BYTE *)&v27 + HIDWORD(v14));
    *((_BYTE *)&v27 + HIDWORD(v14)) = v16;
    v14 -= 0x100000000;
  }
  v17 = 0;
  v22 = *a3;
  v18 = 0xF00000000;
  do
  {
    v19 = *((_BYTE *)&v22 + v17);
    *((_BYTE *)&v22 + v17) = *((_BYTE *)&v22 + HIDWORD(v18));
    *((_BYTE *)&v22 + HIDWORD(v18)) = v19;
    ++v17;
    v18 -= 0x100000000;
  }
  while (v17 != 8);
  v23 = 0;
  v24 = 0;
  if (!sub_100113774(&v22, 0x10uLL, v25, 0x50u, &v23, 0x10u))
  {
    result.i32[0] = HIDWORD(v24);
    v21 = (int16x8_t)vmovl_u8(result);
    *(int16x4_t *)v21.i8 = vrev64_s16(*(int16x4_t *)v21.i8);
    result = (uint8x8_t)vmovn_s16(v21);
    *a5 = result.i32[0];
  }
  return result;
}

uint64_t sub_10018571C(__int128 *a1, unsigned int a2, void *a3)
{
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  unsigned int v13;
  __int128 v14;

  v4 = 0;
  v14 = *a1;
  v5 = 0xF00000000;
  do
  {
    v6 = *((_BYTE *)&v14 + v4);
    *((_BYTE *)&v14 + v4) = *((_BYTE *)&v14 + HIDWORD(v5));
    *((_BYTE *)&v14 + HIDWORD(v5)) = v6;
    ++v4;
    v5 -= 0x100000000;
  }
  while (v4 != 8);
  v13 = bswap32(a2);
  v7 = sub_100113774(&v14, 0x10uLL, &v13, 4u, a3, 0x10u);
  if ((_DWORD)v7)
  {
    if (sub_10005549C())
    {
      sub_100054530("Failed h6() with error %!", v7);
      v8 = sub_1000544A0(0x43u);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
  v9 = 0;
  v10 = 0xF00000000;
  do
  {
    v11 = *((_BYTE *)a3 + v9);
    *((_BYTE *)a3 + v9) = *((_BYTE *)a3 + HIDWORD(v10));
    *((_BYTE *)a3 + HIDWORD(v10)) = v11;
    ++v9;
    v10 -= 0x100000000;
  }
  while (v9 != 8);
  return v7;
}

uint64_t sub_100185854(__int128 *a1, __int128 *a2, void *a3)
{
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  __int128 v16;
  __int128 v17;

  v4 = 0;
  v17 = *a1;
  v5 = 0xF00000000;
  do
  {
    v6 = *((_BYTE *)&v17 + v4);
    *((_BYTE *)&v17 + v4) = *((_BYTE *)&v17 + HIDWORD(v5));
    *((_BYTE *)&v17 + HIDWORD(v5)) = v6;
    ++v4;
    v5 -= 0x100000000;
  }
  while (v4 != 8);
  v7 = 0;
  v16 = *a2;
  v8 = 0xF00000000;
  do
  {
    v9 = *((_BYTE *)&v16 + v7);
    *((_BYTE *)&v16 + v7) = *((_BYTE *)&v16 + HIDWORD(v8));
    *((_BYTE *)&v16 + HIDWORD(v8)) = v9;
    ++v7;
    v8 -= 0x100000000;
  }
  while (v7 != 8);
  v10 = sub_100113774(&v16, 0x10uLL, &v17, 0x10u, a3, 0x10u);
  if ((_DWORD)v10)
  {
    if (sub_10005549C())
    {
      sub_100054530("Failed h7() with error %!", v10);
      v11 = sub_1000544A0(0x43u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
  v12 = 0;
  v13 = 0xF00000000;
  do
  {
    v14 = *((_BYTE *)a3 + v12);
    *((_BYTE *)a3 + v12) = *((_BYTE *)a3 + HIDWORD(v13));
    *((_BYTE *)a3 + HIDWORD(v13)) = v14;
    ++v12;
    v13 -= 0x100000000;
  }
  while (v12 != 8);
  return v10;
}

uint64_t sub_1001859C0(_OWORD *a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  _OWORD *v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  _OWORD *v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  _OWORD *v28;
  unint64_t v29;
  char v30;

  v10 = sub_100113C48(a1, a2, a3, a4, a5, a6, a7, a8);
  if ((_DWORD)v10)
  {
    v11 = v10;
    if (sub_10005549C())
    {
      sub_100054530("Failed to generate public/private key %!", v11);
      v12 = sub_1000544A0(0x43u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
        sub_1006CEE54();
    }
  }
  else
  {
    v13 = 0;
    v14 = 0x1F00000000;
    do
    {
      v15 = *((_BYTE *)a2 + v13);
      *((_BYTE *)a2 + v13) = *((_BYTE *)a2 + HIDWORD(v14));
      *((_BYTE *)a2 + HIDWORD(v14)) = v15;
      ++v13;
      v14 -= 0x100000000;
    }
    while (v13 != 16);
    v16 = 0;
    v17 = a2 + 2;
    v18 = 0x1F00000000;
    do
    {
      v19 = *((_BYTE *)v17 + v16);
      *((_BYTE *)v17 + v16) = *((_BYTE *)v17 + HIDWORD(v18));
      *((_BYTE *)v17 + HIDWORD(v18)) = v19;
      ++v16;
      v18 -= 0x100000000;
    }
    while (v16 != 16);
    v20 = 0;
    v21 = a2 + 4;
    v22 = 0x1F00000000;
    do
    {
      v23 = *((_BYTE *)v21 + v20);
      *((_BYTE *)v21 + v20) = *((_BYTE *)v21 + HIDWORD(v22));
      *((_BYTE *)v21 + HIDWORD(v22)) = v23;
      ++v20;
      v22 -= 0x100000000;
    }
    while (v20 != 16);
    v24 = 0;
    v25 = 0x1F00000000;
    do
    {
      v26 = *((_BYTE *)a1 + v24);
      *((_BYTE *)a1 + v24) = *((_BYTE *)a1 + HIDWORD(v25));
      *((_BYTE *)a1 + HIDWORD(v25)) = v26;
      ++v24;
      v25 -= 0x100000000;
    }
    while (v24 != 16);
    v27 = 0;
    v28 = a1 + 2;
    v29 = 0x1F00000000;
    do
    {
      v30 = *((_BYTE *)v28 + v27);
      *((_BYTE *)v28 + v27) = *((_BYTE *)v28 + HIDWORD(v29));
      *((_BYTE *)v28 + HIDWORD(v29)) = v30;
      ++v27;
      v29 -= 0x100000000;
    }
    while (v27 != 16);
    return 0;
  }
  return v11;
}

uint64_t sub_100185B44(const void *a1, unsigned int a2, const void *a3, unsigned int a4, void *a5)
{
  size_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  char *v18;
  unint64_t v19;
  uint64_t i;
  char v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char *v25;
  unint64_t v26;
  uint64_t j;
  char v28;
  char *v29;
  unint64_t v30;
  uint64_t k;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t v46;

  v10 = a2;
  __chkstk_darwin();
  v12 = (char *)&v46 - v11;
  bzero((char *)&v46 - v11, v10);
  __chkstk_darwin();
  v14 = (char *)&v46 - v13;
  bzero((char *)&v46 - v13, a4);
  memmove(v12, a1, v10);
  v15 = 0;
  v16 = 0x1F00000000;
  do
  {
    v17 = v12[v15];
    v12[v15] = v12[HIDWORD(v16)];
    v12[HIDWORD(v16)] = v17;
    ++v15;
    v16 -= 0x100000000;
  }
  while (v15 != 16);
  v18 = v12 + 32;
  v19 = 0x1F00000000;
  for (i = 32; i != 48; ++i)
  {
    v21 = v12[i];
    v12[i] = v18[HIDWORD(v19)];
    v18[HIDWORD(v19)] = v21;
    v19 -= 0x100000000;
  }
  memmove(v14, a3, a4);
  v22 = 0;
  v23 = 0x1F00000000;
  do
  {
    v24 = v14[v22];
    v14[v22] = v14[HIDWORD(v23)];
    v14[HIDWORD(v23)] = v24;
    ++v22;
    v23 -= 0x100000000;
  }
  while (v22 != 16);
  v25 = v14 + 32;
  v26 = 0x1F00000000;
  for (j = 32; j != 48; ++j)
  {
    v28 = v14[j];
    v14[j] = v25[HIDWORD(v26)];
    v25[HIDWORD(v26)] = v28;
    v26 -= 0x100000000;
  }
  v29 = v14 + 64;
  v30 = 0x1F00000000;
  for (k = 64; k != 80; ++k)
  {
    v32 = v14[k];
    v14[k] = v29[HIDWORD(v30)];
    v29[HIDWORD(v30)] = v32;
    v30 -= 0x100000000;
  }
  v33 = sub_100113A5C((uint64_t)v12, a2, (uint64_t)v14, a4, a5);
  if ((_DWORD)v33)
  {
    v41 = v33;
    sub_100253320((uint64_t)"Error: DHKey generation failed %!", v34, v35, v36, v37, v38, v39, v40, v33);
  }
  else
  {
    v42 = 0;
    v43 = 0x1F00000000;
    do
    {
      v44 = *((_BYTE *)a5 + v42);
      *((_BYTE *)a5 + v42) = *((_BYTE *)a5 + HIDWORD(v43));
      *((_BYTE *)a5 + HIDWORD(v43)) = v44;
      ++v42;
      v43 -= 0x100000000;
    }
    while (v42 != 16);
    return 0;
  }
  return v41;
}

uint64_t sub_100185DB8()
{
  _BOOL4 v0;
  uint64_t result;
  uint64_t v2;

  v2 = 0;
  v0 = sub_10019C200(&v2);
  result = 0;
  if (v0)
  {
    while (1)
    {
      result = v2;
      if (!*(_DWORD *)(v2 + 148) && !*(_BYTE *)(v2 + 54))
        break;
      if (!sub_10019C200(&v2))
        return 0;
    }
  }
  return result;
}

BOOL sub_100185E0C()
{
  _BOOL8 result;
  int v1;
  uint64_t v3;

  v3 = 0;
  result = sub_10019C200(&v3);
  if (result)
  {
    do
    {
      v1 = *(unsigned __int8 *)(v3 + 54);
      if (v1 != 7 && v1 != 0)
        return 1;
    }
    while (sub_10019C200(&v3));
    return 0;
  }
  return result;
}

uint64_t sub_100185E60(uint64_t a1)
{
  uint64_t result;

  if (!(_DWORD)xmmword_1009991F8)
    return 0;
  result = sub_10019AEA4(a1);
  if (result)
    return *(_BYTE *)(result + 144) == 0;
  return result;
}

uint64_t sub_100185E9C(uint64_t a1, _BYTE *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if (!(_DWORD)xmmword_1009991F8)
    return 103;
  v3 = sub_10019AEA4(a1);
  if (!v3)
    return 1301;
  v4 = v3;
  result = 0;
  *a2 = *(_BYTE *)(v4 + 152) & 0x7F;
  return result;
}

uint64_t sub_100185EF4(uint64_t a1)
{
  unsigned int v2;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;

  if (!(_DWORD)xmmword_1009991F8)
    return 0;
  v6 = 0;
  if (sub_100186F0C(a1, &v6))
    v2 = *(_DWORD *)(v6 + 8);
  else
    v2 = 0;
  v4 = sub_10019AEA4(a1);
  if (v4)
    v5 = *(_DWORD *)(v4 + 56);
  else
    v5 = 0;
  if (v2)
    return v2;
  else
    return v5;
}

uint64_t sub_100185F70(uint64_t a1, int a2)
{
  uint64_t result;
  NSObject *v4;
  uint64_t v5;

  if (!a1)
    return 101;
  v5 = 0;
  result = sub_100182588(a1, &v5);
  if (!(_DWORD)result)
  {
    if ((a2 & 0x1FFC) == 0 && sub_10005549C())
    {
      sub_100054530("SetRemoteDeviceClass is zero !!!!!!");
      v4 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    result = 0;
    *(_DWORD *)(v5 + 56) = a2;
  }
  return result;
}

uint64_t sub_100186004(unsigned int a1)
{
  uint64_t result;
  NSObject *v3;

  if (a1 < 8)
    return (0x39u >> a1) & 1;
  sub_100253460();
  result = sub_10005549C();
  if ((_DWORD)result)
  {
    sub_100054530("unknown connection state %d", a1);
    v3 = sub_1000544A0(0x2Cu);
    result = os_log_type_enabled(v3, OS_LOG_TYPE_ERROR);
    if ((_DWORD)result)
    {
      sub_1006CE7A4();
      return 0;
    }
  }
  return result;
}

void sub_10018608C(uint64_t a1)
{
  unsigned int *v2;
  uint64_t v3;
  NSObject *v4;
  unsigned int v5;

  if ((sub_100186004(*(unsigned __int8 *)(a1 + 54)) & 1) == 0)
    sub_100253460();
  v2 = (unsigned int *)(a1 + 148);
  v3 = *(unsigned int *)(a1 + 72);
  if (*(_DWORD *)(a1 + 148))
  {
    if (sub_10004A088(v3))
      sub_100253460();
  }
  else
  {
    sub_100049F6C(v3);
    *(_DWORD *)(a1 + 72) = 0;
  }
  if ((int)*v2 <= 254)
  {
    do
      v5 = __ldxr(v2);
    while (__stxr(v5 + 1, v2));
  }
  else
  {
    if (sub_10005549C())
    {
      sub_100054530("Reached max connection retain count. Not incrementing ref count");
      v4 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    if ((int)*v2 <= 254)
      sub_100253460();
  }
}

void sub_100186150(uint64_t a1)
{
  int v1;
  unsigned int *v2;
  NSObject *v3;
  unsigned int v4;
  NSObject *v5;

  v2 = (unsigned int *)(a1 + 148);
  v1 = *(_DWORD *)(a1 + 148);
  if (v1 < 255)
  {
    if (v1)
    {
      do
        v4 = __ldxr(v2);
      while (__stxr(v4 - 1, v2));
    }
    else if (sub_10005549C())
    {
      sub_100054530("Device attempted to decrement when reference count is already zero");
      v5 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
  else
  {
    if (sub_10005549C())
    {
      sub_100054530("Reached max connection retain count. Not decrementing ref count");
      v3 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    if ((int)*v2 <= 254)
      sub_100253460();
  }
}

uint64_t sub_100186224()
{
  unsigned int v0;
  int v1;
  uint64_t v3;
  uint64_t v4;

  v3 = 0;
  v4 = 0;
  if (sub_10019C200(&v4))
  {
    v0 = 0;
    v1 = 0;
    do
    {
      if (!*(_BYTE *)(v4 + 54))
      {
        if (*(_BYTE *)(v4 + 144))
          ++v0;
        else
          ++v1;
      }
    }
    while (sub_10019C200(&v4));
  }
  else
  {
    v1 = 0;
    v0 = 0;
  }
  while (sub_10019C2D0(&v3))
  {
    if (*(_BYTE *)(v3 + 124) != 7)
    {
      if (*(_BYTE *)(v3 + 70))
        ++v0;
      else
        ++v1;
    }
  }
  if (v1)
    return v0 + 1;
  else
    return v0;
}

BOOL sub_1001862D0(uint64_t a1)
{
  return *(_BYTE *)(a1 + 144) == 1 && *(_BYTE *)(a1 + 226);
}

BOOL sub_1001862F4()
{
  unsigned int v0;

  v0 = *(unsigned __int8 *)(qword_100998F48 + 12);
  return sub_100186224() < v0;
}

double sub_100186328()
{
  double result;

  off_100984248 = 0;
  result = 0.0;
  xmmword_100984228 = 0u;
  *(_OWORD *)&qword_100984238 = 0u;
  xmmword_100984208 = 0u;
  *(_OWORD *)&qword_100984218 = 0u;
  xmmword_1009841E8 = 0u;
  *(_OWORD *)&qword_1009841F8 = 0u;
  return result;
}

uint64_t sub_100186348(uint64_t a1, _QWORD **a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;

  v6 = *(unsigned __int8 *)(qword_100998F48 + 7);
  if (a1)
  {
    if (*(_BYTE *)(qword_100998F48 + 7))
      goto LABEL_3;
LABEL_14:
    sub_100253460();
    if (a2)
      goto LABEL_4;
    goto LABEL_15;
  }
  sub_100253460();
  if (!(_DWORD)v6)
    goto LABEL_14;
LABEL_3:
  if (a2)
    goto LABEL_4;
LABEL_15:
  sub_100253460();
LABEL_4:
  v7 = *a2;
  if (*a2)
  {
    if (!(_DWORD)v6)
      return 1317;
    v8 = 0;
    LODWORD(v9) = 0;
    do
    {
      if (v7[v8] == a1)
        v9 = 1316;
      else
        v9 = v9;
      v8 += 2;
    }
    while (2 * v6 != v8);
    if ((_DWORD)v9)
      return v9;
  }
  else
  {
    v7 = sub_100114588(16 * v6);
    *a2 = v7;
    if (!v7)
      return 106;
  }
  if (!(_DWORD)v6)
    return 1317;
  v10 = 0;
  while (*v7)
  {
    ++v10;
    v7 += 2;
    if (v10 >= v6)
      return 1317;
  }
  v9 = 0;
  *v7 = a1;
  v7[1] = a3;
  return v9;
}

uint64_t sub_100186430(uint64_t a1, void **a2)
{
  uint64_t v4;
  _QWORD *v5;
  int v6;
  int v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(qword_100998F48 + 7);
  v5 = *a2;
  if (!a1)
  {
    sub_100253460();
    if ((_DWORD)v4)
      goto LABEL_3;
LABEL_15:
    sub_100253460();
    if (!v5)
      return 1318;
    v7 = 0;
    goto LABEL_17;
  }
  if (!*(_BYTE *)(qword_100998F48 + 7))
    goto LABEL_15;
LABEL_3:
  if (!v5)
    return 1318;
  v6 = 0;
  v7 = 0;
  v8 = v5;
  do
  {
    if (*v8 == a1)
    {
      ++v7;
      *v8 = 0;
      v8[1] = 0;
    }
    else if (*v8)
    {
      ++v6;
    }
    v8 += 2;
    --v4;
  }
  while (v4);
  if (v6)
  {
    if (!v7)
      return 1318;
    return 0;
  }
LABEL_17:
  sub_100053298(v5);
  *a2 = 0;
  if (v7)
    return 0;
  return 1318;
}

uint64_t sub_1001864F4(uint64_t a1, uint64_t a2)
{
  return sub_100186348(a1, (_QWORD **)&qword_1009841F8, a2);
}

uint64_t sub_100186504(uint64_t a1, uint64_t a2)
{
  return sub_100186348(a1, (_QWORD **)&qword_100984200, a2);
}

uint64_t sub_100186514(uint64_t a1, uint64_t a2)
{
  return sub_100186348(a1, (_QWORD **)&xmmword_100984208, a2);
}

uint64_t sub_100186524(uint64_t a1, uint64_t a2)
{
  return sub_100186348(a1, (_QWORD **)&xmmword_100984228 + 1, a2);
}

uint64_t sub_100186534(uint64_t a1)
{
  return sub_100186430(a1, (void **)&xmmword_100984228 + 1);
}

void *sub_100186540(void *result)
{
  off_100984248 = result;
  return result;
}

uint64_t sub_10018654C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, _QWORD);

  v2 = xmmword_1009841E8;
  if ((_QWORD)xmmword_1009841E8)
  {
    v3 = qword_100998F48;
    if (*(_BYTE *)(qword_100998F48 + 7))
    {
      v5 = result;
      v6 = 0;
      v7 = 0;
      do
      {
        v8 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v2 + v6);
        if (v8)
        {
          result = v8(v5, a2, *(_QWORD *)(v2 + v6 + 8));
          v2 = xmmword_1009841E8;
          v3 = qword_100998F48;
        }
        ++v7;
        v6 += 16;
      }
      while (v7 < *(unsigned __int8 *)(v3 + 7));
    }
  }
  return result;
}

uint64_t sub_1001865DC(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, _QWORD);

  v2 = *((_QWORD *)&xmmword_1009841E8 + 1);
  if (*((_QWORD *)&xmmword_1009841E8 + 1))
  {
    v3 = qword_100998F48;
    if (*(_BYTE *)(qword_100998F48 + 7))
    {
      v5 = result;
      v6 = 0;
      v7 = 0;
      do
      {
        v8 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v2 + v6);
        if (v8)
        {
          result = v8(v5, a2, *(_QWORD *)(v2 + v6 + 8));
          v2 = *((_QWORD *)&xmmword_1009841E8 + 1);
          v3 = qword_100998F48;
        }
        ++v7;
        v6 += 16;
      }
      while (v7 < *(unsigned __int8 *)(v3 + 7));
    }
  }
  return result;
}

uint64_t sub_10018666C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, _QWORD, uint64_t);

  v3 = qword_1009841F8;
  if (qword_1009841F8)
  {
    v4 = qword_100998F48;
    if (*(_BYTE *)(qword_100998F48 + 7))
    {
      v7 = result;
      v8 = 0;
      v9 = 0;
      do
      {
        v10 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t))(v3 + v8);
        if (v10)
        {
          result = v10(v7, a2, *(_QWORD *)(v3 + v8 + 8), a3);
          v3 = qword_1009841F8;
          v4 = qword_100998F48;
        }
        ++v9;
        v8 += 16;
      }
      while (v9 < *(unsigned __int8 *)(v4 + 7));
    }
  }
  return result;
}

void sub_10018670C(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  void (*v7)(uint64_t, _QWORD);

  if (sub_10005549C())
  {
    sub_100054530("%! (%d)", 1305, a1);
    v2 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
      sub_1006D1FB0(v2);
  }
  v3 = qword_100984200;
  if (qword_100984200)
  {
    v4 = qword_100998F48;
    if (*(_BYTE *)(qword_100998F48 + 7))
    {
      v5 = 0;
      v6 = 0;
      do
      {
        v7 = *(void (**)(uint64_t, _QWORD))(v3 + v5);
        if (v7)
        {
          v7(a1, *(_QWORD *)(v3 + v5 + 8));
          v3 = qword_100984200;
          v4 = qword_100998F48;
        }
        ++v6;
        v5 += 16;
      }
      while (v6 < *(unsigned __int8 *)(v4 + 7));
    }
  }
}

uint64_t sub_1001867E8(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, _QWORD);

  v2 = xmmword_100984208;
  if ((_QWORD)xmmword_100984208)
  {
    v3 = qword_100998F48;
    if (*(_BYTE *)(qword_100998F48 + 7))
    {
      v5 = result;
      v6 = 0;
      v7 = 0;
      do
      {
        v8 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v2 + v6);
        if (v8)
        {
          result = v8(v5, a2, *(_QWORD *)(v2 + v6 + 8));
          v2 = xmmword_100984208;
          v3 = qword_100998F48;
        }
        ++v7;
        v6 += 16;
      }
      while (v7 < *(unsigned __int8 *)(v3 + 7));
    }
  }
  return result;
}

void sub_100186878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD);

  if (sub_10019AB28(a2))
  {
    if ((_DWORD)a1)
    {
      sub_100180A3C(a2, *(_BYTE *)(a2 + 152) & 0x7F);
    }
    else
    {
      *(_WORD *)(a2 + 136) = a4;
      if (*(unsigned __int8 *)(a2 + 152) != (_DWORD)a3)
        sub_100180A3C(a2, a3);
      if (!(_DWORD)a3)
        sub_10018D344();
    }
    if (off_100984248)
      off_100984248(a1, a2, a3, a4);
    v9 = *((_QWORD *)&xmmword_100984228 + 1);
    if (*((_QWORD *)&xmmword_100984228 + 1))
    {
      v10 = qword_100998F48;
      if (*(_BYTE *)(qword_100998F48 + 7))
      {
        v11 = 0;
        v12 = 0;
        v13 = a2 + 48;
        do
        {
          v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(v9 + v11);
          if (v14)
          {
            v14(a1, v13, a3, a4, *(_QWORD *)(v9 + v11 + 8));
            v9 = *((_QWORD *)&xmmword_100984228 + 1);
            v10 = qword_100998F48;
          }
          ++v12;
          v11 += 16;
        }
        while (v12 < *(unsigned __int8 *)(v10 + 7));
      }
    }
  }
  else if (sub_10005549C())
  {
    sub_100054530("OI_HCIEventHandler_ModeChange Bad Handle: %x", a2);
    v8 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
}

void sub_1001869D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, _QWORD);
  NSObject *v10;

  if (sub_10019AB28(a1))
  {
    v4 = *((_QWORD *)&xmmword_100984208 + 1);
    if (*((_QWORD *)&xmmword_100984208 + 1))
    {
      v5 = qword_100998F48;
      if (*(_BYTE *)(qword_100998F48 + 7))
      {
        v6 = 0;
        v7 = 0;
        v8 = a1 + 48;
        do
        {
          v9 = *(void (**)(uint64_t, uint64_t, _QWORD))(v4 + v6);
          if (v9)
          {
            v9(v8, a2, *(_QWORD *)(v4 + v6 + 8));
            v4 = *((_QWORD *)&xmmword_100984208 + 1);
            v5 = qword_100998F48;
          }
          ++v7;
          v6 += 16;
        }
        while (v7 < *(unsigned __int8 *)(v5 + 7));
      }
    }
  }
  else if (sub_10005549C())
  {
    sub_100054530("OI_HCIEventHandler_MaxSlotsChange Bad Handle: %x", a1);
    v10 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
}

void sub_100186AC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, _QWORD);
  NSObject *v12;

  if ((_DWORD)a1)
  {
    if (sub_10005549C())
    {
      sub_100054530("ConnectionPacketTypeChanged ERROR: %!", a1);
      v6 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
  if (sub_10019AB28(a2) || sub_10019ABD0(a2))
  {
    v7 = qword_100984218;
    if (qword_100984218)
    {
      v8 = qword_100998F48;
      if (*(_BYTE *)(qword_100998F48 + 7))
      {
        v9 = 0;
        v10 = 0;
        do
        {
          v11 = *(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v7 + v9);
          if (v11)
          {
            v11(a1, a2, a3, *(_QWORD *)(v7 + v9 + 8));
            v7 = qword_100984218;
            v8 = qword_100998F48;
          }
          ++v10;
          v9 += 16;
        }
        while (v10 < *(unsigned __int8 *)(v8 + 7));
      }
    }
  }
  else if (sub_10005549C())
  {
    sub_100054530("ConnectionPacketTypeChanged, Unknown Handle: %d", a2);
    v12 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
}

uint64_t sub_100186C14(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, _QWORD);

  v2 = qword_100984220;
  if (qword_100984220)
  {
    v3 = qword_100998F48;
    if (*(_BYTE *)(qword_100998F48 + 7))
    {
      v5 = result;
      v6 = 0;
      v7 = 0;
      do
      {
        v8 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v2 + v6);
        if (v8)
        {
          result = v8(v5, a2, *(_QWORD *)(v2 + v6 + 8));
          v2 = qword_100984220;
          v3 = qword_100998F48;
        }
        ++v7;
        v6 += 16;
      }
      while (v7 < *(unsigned __int8 *)(v3 + 7));
    }
  }
  return result;
}

uint64_t sub_100186CA4(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, _QWORD);

  v2 = xmmword_100984228;
  if ((_QWORD)xmmword_100984228)
  {
    v3 = qword_100998F48;
    if (*(_BYTE *)(qword_100998F48 + 7))
    {
      v5 = result;
      v6 = 0;
      v7 = 0;
      do
      {
        v8 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v2 + v6);
        if (v8)
        {
          result = v8(v5, a2, *(_QWORD *)(v2 + v6 + 8));
          v2 = xmmword_100984228;
          v3 = qword_100998F48;
        }
        ++v7;
        v6 += 16;
      }
      while (v7 < *(unsigned __int8 *)(v3 + 7));
    }
  }
  return result;
}

uint64_t sub_100186D34(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD);

  if (a2)
    v6 = a2 + 48;
  else
    v6 = 0;
  v7 = qword_100984238;
  if (qword_100984238)
  {
    v8 = qword_100998F48;
    if (*(_BYTE *)(qword_100998F48 + 7))
    {
      v13 = result;
      v14 = 0;
      v15 = 0;
      do
      {
        v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(v7 + v14);
        if (v16)
        {
          result = v16(v13, v6, a3, a4, a5, a6, *(_QWORD *)(v7 + v14 + 8));
          v7 = qword_100984238;
          v8 = qword_100998F48;
        }
        ++v15;
        v14 += 16;
      }
      while (v15 < *(unsigned __int8 *)(v8 + 7));
    }
  }
  return result;
}

uint64_t sub_100186DFC(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, _QWORD);

  v2 = qword_100984240;
  if (qword_100984240)
  {
    v3 = qword_100998F48;
    if (*(_BYTE *)(qword_100998F48 + 7))
    {
      v5 = result;
      v6 = 0;
      v7 = 0;
      do
      {
        v8 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v2 + v6);
        if (v8)
        {
          result = v8(v5, a2, *(_QWORD *)(v2 + v6 + 8));
          v2 = qword_100984240;
          v3 = qword_100998F48;
        }
        ++v7;
        v6 += 16;
      }
      while (v7 < *(unsigned __int8 *)(v3 + 7));
    }
  }
  return result;
}

void sub_100186E8C()
{
  unsigned int v0;
  void *v1;

  v0 = *(unsigned __int16 *)qword_100998F48;
  if (!*(_WORD *)qword_100998F48)
  {
    sub_100253460();
    v0 = *(unsigned __int16 *)qword_100998F48;
  }
  v1 = sub_100114588(16 * v0);
  qword_100984250 = (uint64_t)v1;
  if (!v1)
  {
    sub_100253460();
    v1 = (void *)qword_100984250;
  }
  dword_100984258 = 0;
  off_100984260 = 0;
  off_100984268 = 0;
  dword_100984288 = 0;
  bzero(v1, 16 * *(unsigned __int16 *)qword_100998F48);
}

BOOL sub_100186F0C(uint64_t a1, uint64_t *a2)
{
  unsigned int v2;
  BOOL v3;
  unsigned int v4;
  uint64_t i;

  v2 = *(unsigned __int16 *)qword_100998F48;
  v3 = *(_WORD *)qword_100998F48 != 0;
  if (*(_WORD *)qword_100998F48)
  {
    v4 = 0;
    for (i = qword_100984250;
          *(_DWORD *)a1 != *(_DWORD *)i || *(unsigned __int16 *)(a1 + 4) != *(unsigned __int16 *)(i + 4);
          i += 16)
    {
      v3 = ++v4 < v2;
      if (v4 >= v2)
        return v3;
    }
    *a2 = i;
  }
  return v3;
}

uint64_t sub_100186F74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD), void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result;

  if (!(_DWORD)xmmword_1009991F8)
    return 103;
  if (dword_100984258)
  {
    if (dword_100984258 == 1)
      return 1311;
    if (dword_100984258 == 2)
      return 1312;
    sub_100253460();
    return 103;
  }
  off_100984260 = a4;
  off_100984268 = a5;
  qword_100984270 = a6;
  dword_100984258 = 1;
  result = sub_100196768(0, a2, a3, (uint64_t)a4, (uint64_t)a5, a6, a7, a8, a1);
  if ((_DWORD)result)
    dword_100984258 = 0;
  return result;
}

uint64_t sub_10018701C(uint64_t (*a1)(_QWORD, _QWORD), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result;
  uint64_t v9;

  if ((_DWORD)xmmword_1009991F8)
  {
    switch(dword_100984258)
    {
      case 0:
        return 1313;
      case 1:
        off_100984278 = a1;
        qword_100984280 = a2;
        result = sub_10004C9BC(1, (uint64_t (*)())sub_1001870A0, a3, a4, a5, a6, a7, a8, v9);
        dword_100984258 = 0;
        return result;
      case 2:
        return 1312;
    }
    sub_100253460();
  }
  return 103;
}

uint64_t sub_1001870A0(uint64_t result)
{
  if (off_100984278)
    return off_100984278(result, qword_100984280);
  return result;
}

uint64_t sub_1001870BC(uint64_t result)
{
  NSObject *v1;

  if ((_DWORD)xmmword_1009991F8)
  {
    if ((_DWORD)result != 621)
      goto LABEL_7;
    if (sub_10005549C())
    {
      sub_100054530("Inquiry not finished in time... Cancelling.");
      v1 = sub_1000544A0(0x3Fu);
      if (os_log_type_enabled(v1, OS_LOG_TYPE_ERROR))
        sub_1006CEF28(v1);
    }
    result = sub_10004C9BC(1, sub_1001870BC);
    if ((_DWORD)result)
    {
LABEL_7:
      if (off_100984268)
      {
        if (dword_100984258 != 2)
        {
          if (dword_100984258 != 1)
            return result;
          dword_100984258 = 0;
        }
        return ((uint64_t (*)(void))off_100984268)();
      }
    }
  }
  return result;
}

uint64_t sub_100187174(uint64_t result)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;

  if ((_DWORD)xmmword_1009991F8)
  {
    if ((dword_100984258 - 1) <= 1 && off_100984260 != 0)
    {
      v2 = result;
      result = off_100984260(result, qword_100984270);
      v3 = dword_100984288;
      v4 = qword_100984250 + 16 * dword_100984288;
      v5 = *(_DWORD *)v2;
      *(_WORD *)(v4 + 4) = *(_WORD *)(v2 + 4);
      *(_DWORD *)v4 = v5;
      *(_DWORD *)(v4 + 8) = *(_DWORD *)(v2 + 8);
      *(_BYTE *)(v4 + 12) = *(_BYTE *)(v2 + 6);
      *(_BYTE *)(v4 + 13) = *(_BYTE *)(v2 + 12);
      *(_WORD *)(v4 + 14) = *(_WORD *)(v2 + 14);
      if (v3 + 1 < *(unsigned __int16 *)qword_100998F48)
        v6 = v3 + 1;
      else
        v6 = 0;
      dword_100984288 = v6;
    }
  }
  return result;
}

uint64_t sub_100187230(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  if (!(_DWORD)xmmword_1009991F8)
    return 103;
  v4 = sub_10019AEA4(a1);
  if (!v4)
    return 1301;
  v12 = v4;
  if (!*(_BYTE *)(v4 + 144) && *(_WORD *)(v4 + 140) && *(unsigned __int16 *)(v4 + 140) < a3)
    return 1337;
  if ((*(_WORD *)(v4 + 138) & 4) == 0)
    return 1333;
  result = sub_100196768(0x29u, v5, v6, v7, v8, v9, v10, v11, v4);
  if (!(_DWORD)result)
    *(_BYTE *)(v12 + 152) |= 0x80u;
  return result;
}

uint64_t sub_10018730C(uint64_t a1, __int16 a2, unsigned int a3, unsigned int a4, __int16 a5, __int16 a6)
{
  uint64_t v11;
  unsigned int v13;
  uint64_t v14;
  __int16 v15;
  __int16 v16;
  __int16 v17;
  __int16 v18;
  uint64_t v19;
  const void *v20[2];

  if (!(_DWORD)xmmword_1009991F8)
    return 103;
  v11 = sub_10019AEA4(a1);
  if (!v11)
    return 1301;
  if (*(_DWORD *)(v11 + 176))
    return 119;
  if (!*(_BYTE *)(v11 + 144))
  {
    v13 = *(unsigned __int16 *)(v11 + 140);
    if (v13 < a4)
      return 1337;
    if (v13 < a3)
      LOWORD(a3) = *(_WORD *)(v11 + 140);
  }
  if ((*(_WORD *)(v11 + 138) & 4) == 0)
    return 1333;
  v19 = 0;
  v20[0] = 0;
  *(_BYTE *)(v11 + 192) = 0;
  v14 = v11;
  v15 = a2;
  v16 = a3;
  v17 = a4;
  v18 = a5;
  LOWORD(v19) = a6;
  v20[1] = &v14;
  LOWORD(v20[0]) = 24;
  return sub_10004A9EC((uint64_t)sub_100187408, v20, 2 * ((5 * a2) & 0x7FFFu), (int *)(v11 + 176));
}

void sub_100187408(uint64_t a1)
{
  __int128 *v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  NSObject *v13;
  NSObject *v14;
  const void *v15[2];
  __int128 v16;
  uint64_t v17;

  v1 = *(__int128 **)(a1 + 8);
  *(_DWORD *)(*(_QWORD *)v1 + 176) = 0;
  v2 = *(_QWORD *)v1;
  if (*(_BYTE *)(*(_QWORD *)v1 + 192)
    || (v3 = sub_10018DC98(v2 + 48), v2 = *(_QWORD *)v1, v3)
    || (v4 = sub_10019AEFC(v2 + 48), v2 = *(_QWORD *)v1, v4))
  {
    v15[0] = 0;
    *(_BYTE *)(v2 + 192) = 0;
    v12 = *v1;
    v17 = *((_QWORD *)v1 + 2);
    v16 = v12;
    v15[1] = &v16;
    LOWORD(v15[0]) = 24;
    if (sub_10004A9EC((uint64_t)sub_100187408, v15, 2 * ((5 * *((_WORD *)v1 + 4)) & 0x7FFFu), (int *)(*(_QWORD *)v1 + 176))&& sub_10005549C())
    {
      sub_100054530("Error registering automatic sniff");
      v13 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
        sub_1006D2728();
    }
  }
  else if (!*(_BYTE *)(v2 + 152))
  {
    if (sub_100196768(0x29u, v5, v6, v7, v8, v9, v10, v11, v2))
    {
      if (sub_10005549C())
      {
        sub_100054530("Automatic sniff failed");
        v14 = sub_1000544A0(0x2Cu);
        if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
          sub_1006D2728();
      }
    }
    else
    {
      *(_BYTE *)(*(_QWORD *)v1 + 152) |= 0x80u;
    }
  }
}

uint64_t sub_100187584(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  if (!(_DWORD)xmmword_1009991F8)
    return 103;
  v1 = sub_10019AEA4(a1);
  if (!v1)
    return 1301;
  v9 = v1;
  if (*(char *)(v1 + 152) < 0)
    return 0;
  *(_BYTE *)(v1 + 192) = 1;
  result = sub_100196768(0x2Au, v2, v3, v4, v5, v6, v7, v8, v1);
  if (!(_DWORD)result)
    *(_BYTE *)(v9 + 152) |= 0x80u;
  return result;
}

void sub_100187604(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  if ((_DWORD)xmmword_1009991F8)
  {
    v1 = sub_10019AEA4(a1);
    if (v1)
    {
      v2 = v1;
      v3 = *(unsigned int *)(v1 + 176);
      if ((_DWORD)v3)
      {
        sub_100049F6C(v3);
        if (!v4)
          *(_DWORD *)(v2 + 176) = 0;
      }
    }
  }
}

uint64_t sub_10018765C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  unsigned __int16 *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;

  if (!(_DWORD)xmmword_1009991F8)
    return 103;
  v3 = sub_10019AEA4(a1);
  if (!v3)
  {
    v6 = 1301;
    if ((sub_10005549C() & 1) == 0)
      return v6;
    v9 = 0;
    goto LABEL_16;
  }
  v4 = (unsigned __int16 *)v3;
  v5 = sub_100186524((uint64_t)sub_10018777C, 0);
  if ((_DWORD)v5 != 1316)
  {
    v6 = v5;
    if ((_DWORD)v5)
    {
      if ((sub_10005549C() & 1) == 0)
        return v6;
      goto LABEL_15;
    }
  }
  v7 = v4 + 90;
  if (a2)
  {
    v8 = *a2;
    *((_DWORD *)v4 + 47) = *((_DWORD *)a2 + 2);
    *v7 = v8;
  }
  else
  {
    *(_DWORD *)v7 = 0;
  }
  sub_1001877DC((uint64_t)v4, 1);
  v6 = v10;
  if ((_DWORD)v10 && sub_10005549C())
  {
LABEL_15:
    v9 = *v4;
LABEL_16:
    sub_100054530("Could not apply power-saving policy for handle 0x%x: %!", v9, v6);
    v11 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      sub_1006D2C78();
  }
  return v6;
}

void sub_10018777C(int a1, uint64_t a2)
{
  uint64_t v3;

  v3 = sub_10019AEA4(a2);
  if (v3 && (a1 - 725) >= 2 && a1 != 712 && (a1 != 736 || *(_DWORD *)(v3 + 180) == 2))
    sub_1001877DC(v3, 0);
}

void sub_1001877DC(uint64_t a1, int a2)
{
  uint64_t v4;
  int v5;
  int v6;
  const char *v7;
  NSObject *v8;
  uint8_t buf[4];
  void *v10;

  if ((*(char *)(a1 + 152) & 0x80000000) == 0)
  {
    v4 = a1 + 48;
    if (!*(_DWORD *)(a1 + 176) || (sub_100187604(a1 + 48), !v5))
    {
      v6 = *(_DWORD *)(a1 + 180);
      if ((v6 - 2) < 2)
      {
        if (*(_BYTE *)(a1 + 152) == 2)
        {
          if (a2 && *(unsigned __int16 *)(a1 + 136) != *(unsigned __int16 *)(a1 + 184))
            goto LABEL_13;
        }
        else if (*(unsigned __int8 *)(a1 + 54) > 5u)
        {
          if (sub_10005549C())
          {
            v7 = sub_10019C5F4(*(unsigned __int8 *)(a1 + 54));
            sub_100054530("Tried to sniff while in state %s. Ignoring.", v7);
            v8 = sub_1000544A0(0x2Cu);
            if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 136446210;
              v10 = sub_100054494();
              _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
          }
        }
        else if (v6 == 2 || *(_BYTE *)(a1 + 193))
        {
          *(_BYTE *)(a1 + 193) = 0;
          sub_100187230(v4, *(unsigned __int16 *)(a1 + 184), *(unsigned __int16 *)(a1 + 184));
        }
        else
        {
          sub_10018730C(v4, *(_WORD *)(a1 + 190), *(unsigned __int16 *)(a1 + 184), *(unsigned __int16 *)(a1 + 184), *(_WORD *)(a1 + 186), *(_WORD *)(a1 + 188));
        }
      }
      else
      {
        if (v6 == 1)
          goto LABEL_8;
        if (v6)
        {
          sub_100253460();
        }
        else if (a2)
        {
LABEL_8:
          if (*(_BYTE *)(a1 + 152) != 2)
            return;
LABEL_13:
          sub_100187584(v4);
        }
      }
    }
  }
}

uint64_t sub_100187A10()
{
  char v0;
  uint64_t v2;

  v2 = 0;
  v0 = 1;
  while (sub_10019C200(&v2))
  {
    if (*(_DWORD *)(v2 + 176) && *(_BYTE *)(v2 + 152) != 2)
    {
      sub_100187230(v2 + 48, *(unsigned __int16 *)(v2 + 184), *(unsigned __int16 *)(v2 + 184));
      v0 = 0;
    }
  }
  return v0 & 1;
}

uint64_t sub_100187A88(uint64_t result)
{
  word_100978E30 = result;
  return result;
}

uint64_t sub_100187A94(uint64_t result)
{
  byte_100978E34 = result;
  return result;
}

uint64_t sub_100187AA0(uint64_t result)
{
  word_100978E24 = result;
  return result;
}

uint64_t sub_100187AAC(_DWORD *a1)
{
  uint64_t result;

  if ((byte_1009842A0 & 1) != 0)
    return 118;
  if (!a1)
    return 0;
  result = 0;
  *a1 = dword_100984298;
  return result;
}

uint64_t sub_100187AE4(uint64_t (*a1)(_QWORD, _QWORD), int a2)
{
  NSObject *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  uint8_t buf[4];
  void *v14;

  if (DWORD1(xmmword_1009991F8))
  {
    if (byte_1009842A0 == 1)
    {
      if (sub_10005549C())
      {
        sub_100054530("Invalid Connectability State=%d\n", byte_1009842A0);
        v4 = sub_1000544A0(0x2Du);
        if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
          sub_1006D2CE8(v4);
      }
      return 118;
    }
  }
  else
  {
    byte_1009842A0 = 0;
    byte_1009842A8 = 0;
    dword_100984298 = 3;
    DWORD1(xmmword_1009991F8) = 1;
  }
  if (sub_10005549C())
  {
    sub_100054530("Set ConnectabilitySpeedScenario %d -> %d", dword_100984298, a2);
    v12 = sub_1000544A0(0x2Du);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      v14 = sub_100054494();
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  off_100984290 = a1;
  dword_100984298 = a2;
  result = sub_10004C9BC(111, (uint64_t (*)())sub_100187C8C, v6, v7, v8, v9, v10, v11, LOBYTE(word_100978E12[3 * a2 + 2]));
  if (!(_DWORD)result)
    byte_1009842A0 = 1;
  return result;
}

uint64_t sub_100187C8C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((_DWORD)result
    || (result = sub_10004C9BC(73, (uint64_t (*)())sub_100187D0C, a3, a4, a5, a6, a7, a8, word_100978E12[3 * dword_100984298]), (_DWORD)result))
  {
    byte_1009842A0 = 0;
    return off_100984290(result, dword_100984298);
  }
  return result;
}

uint64_t sub_100187D0C(uint64_t a1)
{
  byte_1009842A0 = 0;
  return off_100984290(a1, dword_100984298);
}

void sub_100187D28()
{
  byte_1009842B2 = 0;
  byte_100984334 = 0;
  byte_1009842E9 = 0;
  byte_100984335 = 0;
  byte_100984328 = 0;
  byte_100984332 = -1;
  byte_10098431D = 0;
  byte_10098431C = 0;
  byte_1009842E8 = 0;
  byte_1009842F8 = 0;
  byte_1009842B1 = 0;
  byte_1009842B0 = 0;
  dword_100984318 = 0;
  off_1009842C8 = 0;
  off_1009842D0 = 0;
  off_1009842D8 = 0;
  off_1009842E0 = 0;
  word_100984330 = 96;
  dword_10098432C = 0;
  qword_100984338 = 0;
}

uint64_t sub_100187DD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  NSObject *v9;

  if (byte_1009842B1 || (sub_10017FD9C() & 1) != 0)
  {
    v6 = 0;
    v7 = 2;
  }
  else
  {
    byte_1009842B1 = 1;
    v6 = sub_10004C9BC(81, (uint64_t (*)())sub_100189644, v0, v1, v2, v3, v4, v5, dword_10098432C);
    if (!(_DWORD)v6)
      return v6;
    if (sub_10005549C())
    {
      sub_100054530("OI_HCICMD_WriteClassofDevice failed");
      v9 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
    v7 = 0;
  }
  byte_1009842B1 = v7;
  return v6;
}

uint64_t sub_100187E98(uint64_t a1)
{
  int v1;

  v1 = xmmword_100998F58;
  *(_WORD *)(a1 + 4) = WORD2(xmmword_100998F58);
  *(_DWORD *)a1 = v1;
  return 0;
}

uint64_t sub_100187EB8()
{
  return BYTE8(xmmword_100998F58);
}

uint64_t sub_100187EC8(void (*a1)(int a1), uint64_t a2)
{
  uint64_t result;
  BOOL v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(int);

  result = 1325;
  if ((byte_1009842B2 & 1) == 0)
  {
    v4 = !byte_1009842E8 && byte_1009842F8 == 0;
    if (v4 && (byte_10098431C & 1) == 0 && !byte_10098431D)
    {
      v6 = sub_100252DE8(0x2Cu);
      result = sub_10004C9BC(51, (uint64_t (*)())sub_100187FB4, v7, v8, v9, v10, v11, v12, *(_WORD *)(v6 + 10) & 6 | 1u);
      if ((_DWORD)result == 628)
        result = sub_10004AE90((uint64_t)sub_100188194, 0, 0);
      if (!(_DWORD)result)
      {
        byte_1009842B2 = 1;
        dword_1009842B4 = 0;
        qword_1009842B8 = a2;
        v13 = sub_10018819C;
        if (a1)
          v13 = a1;
        off_1009842C0 = (uint64_t (*)(_QWORD, _QWORD))v13;
      }
    }
  }
  return result;
}

void sub_100187FB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  NSObject *v9;
  NSObject *v10;
  NSObject *v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;

  if (byte_1009842B2 != 1)
  {
    if (sub_10005549C())
    {
      sub_100054530("writeDefaultLinkPolicyCb - orphan callback");
      v10 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return;
  }
  v8 = a1;
  if ((_DWORD)a1 == 628)
    goto LABEL_17;
  if ((a1 - 701) <= 0x44)
  {
    if (sub_10005549C())
    {
      sub_100054530("Write_Default_Link_Policy, ignoring error");
      v9 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
    dword_1009842B4 = v8;
LABEL_17:
    v14 = sub_10004C9BC(67, (uint64_t (*)())sub_1001896E0, a3, a4, a5, a6, a7, a8, *(unsigned __int16 *)qword_1009842B8);
    if (!(_DWORD)v14)
      return;
    v8 = v14;
    if ((_DWORD)v14 == 628)
    {
      sub_1001896E0(628, v15, v16, v17, v18, v19, v20, v21);
      return;
    }
    if (sub_10005549C())
    {
      sub_100054530("OI_HCICMD_WritePageTimeout");
      v22 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
    byte_1009842B2 = 0;
    v12 = (void (*)(uint64_t, uint64_t))off_1009842C0;
    if (off_1009842C0)
    {
      v13 = qword_1009842B8;
      goto LABEL_25;
    }
    return;
  }
  if (!(_DWORD)a1)
    goto LABEL_17;
  if (sub_10005549C())
  {
    sub_100054530("writeDefaultLinkPolicyCb");
    v11 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      sub_1006D17C4();
  }
  byte_1009842B2 = 0;
  v12 = (void (*)(uint64_t, uint64_t))off_1009842C0;
  if (off_1009842C0)
  {
    v13 = qword_1009842B8;
LABEL_25:
    v12(v8, v13);
  }
}

void sub_100188194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100187FB4(628, a2, a3, a4, a5, a6, a7, a8);
}

void sub_10018819C(int a1)
{
  NSObject *v1;

  if (a1 && sub_10005549C())
  {
    sub_100054530("devmgrCommandCompleteCallback");
    v1 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v1, OS_LOG_TYPE_ERROR))
      sub_1006D17C4();
  }
}

uint64_t sub_100188200(void (*a1)(int a1), uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  void (*v12)(int);

  if (!sub_10019AB28(a2))
    sub_100253460();
  if (off_1009842C8)
    return 1319;
  result = sub_100196768(0x15u, v4, v5, v6, v7, v8, v9, v10, a2);
  if (!(_DWORD)result)
  {
    v12 = sub_10018819C;
    if (a1)
      v12 = a1;
    off_1009842C8 = v12;
  }
  return result;
}

void sub_100188278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSObject *v6;
  NSObject *v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);

  if (off_1009842C8)
  {
    v8 = (void (*)(uint64_t, uint64_t, uint64_t))off_1009842C8;
    off_1009842C8 = 0;
    if (sub_10019AB28(a2))
    {
      v8(a1, a2 + 48, a3);
      return;
    }
    if (sub_10005549C())
    {
      sub_100054530("Device disconnected during the name request. Ignoring event.");
      v7 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
        goto LABEL_9;
    }
  }
  else if (sub_10005549C())
  {
    sub_100054530("orphan event - ReadRemoteSupportedFeaturesComplete");
    v6 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
LABEL_9:
      sub_1006CE7A4();
  }
}

uint64_t sub_100188370(void (*a1)(int a1), uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  void (*v12)(int);

  if (!sub_10019AB28(a2))
    sub_100253460();
  if (off_1009842D0)
    return 1319;
  result = sub_100196768(0x16u, v4, v5, v6, v7, v8, v9, v10, a2);
  if (!(_DWORD)result)
  {
    v12 = sub_10018819C;
    if (a1)
      v12 = a1;
    off_1009842D0 = v12;
  }
  return result;
}

void sub_1001883F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  NSObject *v10;
  NSObject *v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v12 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))off_1009842D0;
  if (sub_10019AB28(a2))
  {
    if (v12)
    {
      off_1009842D0 = 0;
      v12(a1, a2 + 48, a3, a4, a5);
    }
    else if (sub_10005549C())
    {
      sub_100054530("orphan event - OI_HCIEventHandler_ReadRemoteExtendedFeaturesComplete");
      v11 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
  else
  {
    if (sub_10005549C())
    {
      sub_100054530("NULL handle - OI_HCIEventHandler_ReadRemoteExtendedFeaturesComplete");
      v10 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    off_1009842D0 = 0;
  }
}

uint64_t sub_100188508(void (*a1)(int a1), uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  void (*v12)(int);

  if (!sub_10019AB28(a2))
    sub_100253460();
  if (off_1009842D8)
    return 1319;
  result = sub_100196768(0x17u, v4, v5, v6, v7, v8, v9, v10, a2);
  if (!(_DWORD)result)
  {
    v12 = sub_10018819C;
    if (a1)
      v12 = a1;
    off_1009842D8 = v12;
  }
  return result;
}

void sub_100188580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  NSObject *v10;
  NSObject *v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  if (off_1009842D8)
  {
    v12 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))off_1009842D8;
    off_1009842D8 = 0;
    if (sub_10019AB28(a2))
    {
      v12(a1, a2 + 48, a3, a4, a5);
      return;
    }
    if (sub_10005549C())
    {
      sub_100054530("Device disconnected during the version request. Ignoring event.");
      v11 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
        goto LABEL_9;
    }
  }
  else if (sub_10005549C())
  {
    sub_100054530("orphan event - ReadRemoteVersionInformationComplete");
    v10 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
LABEL_9:
      sub_1006CE7A4();
  }
}

void sub_100188694(uint64_t a1, uint64_t a2)
{
  void (*v2)(uint64_t, uint64_t);
  NSObject *v3;

  v2 = (void (*)(uint64_t, uint64_t))off_1009842E0;
  if (off_1009842E0)
  {
    off_1009842E0 = 0;
    v2(a1, a2 + 48);
  }
  else if (sub_10005549C())
  {
    sub_100054530("orphan event - ReadClockOffsetComplete");
    v3 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
}

void sub_10018870C(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v10;
  _BOOL4 v11;
  BOOL v12;
  NSObject *v13;
  int v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v10 = byte_1009842E8;
  v11 = 1;
  if ((byte_1009842B2 & 1) == 0)
  {
    v12 = !byte_1009842E8 && byte_1009842F8 == 0;
    if (v12 && (byte_10098431C & 1) == 0)
      v11 = byte_10098431D != 0;
  }
  if (v11 && byte_1009842E9)
  {
    if (--byte_1009842E9)
      return;
    if ((_DWORD)a1)
    {
      if (byte_100984332 == 1)
        byte_100984332 = -1;
      if (byte_1009842E8 == 1)
      {
        v10 = 2;
        byte_1009842E8 = 2;
      }
      if (byte_10098431D == 1)
        byte_10098431D = 2;
      if (byte_1009842F8 == 1)
        byte_1009842F8 = 2;
    }
    else
    {
      v14 = (byte_100984333 & byte_100984334) | a2 & ~byte_100984334;
      byte_100984333 = byte_100984333 & byte_100984334 | a2 & ~byte_100984334;
      byte_100984332 = 0;
      if (v14 == a2)
      {
        if (byte_10098431D == 1)
          byte_10098431D = 2;
        if (byte_1009842F8 == 1)
          byte_1009842F8 = 2;
      }
      else
      {
        if (!(byte_10098431D | byte_1009842F8))
        {
          if (sub_10005549C())
          {
            sub_100054530("readScanEnableCb - LC settings don't match last write (%2x != %2x)\n", byte_100984333, a2);
            v15 = sub_1000544A0(0x2Cu);
            if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
              sub_1006CE7A4();
          }
        }
        v16 = sub_10004C9BC(71, (uint64_t (*)())sub_10018AE60, a3, a4, a5, a6, a7, a8, byte_100984333);
        if ((_DWORD)v16)
        {
          v17 = v16;
          if (byte_10098431D == 1)
          {
            byte_100984340 &= ~2u;
            byte_10098431D = 0;
            off_100984320(v16, byte_100984341 != 0);
          }
          if (byte_1009842F8 == 1)
          {
            byte_100984340 &= ~1u;
            sub_10018B06C(v17);
          }
        }
        else
        {
          ++byte_100984335;
        }
      }
      v10 = byte_1009842E8;
      if (byte_1009842E8 == 1)
        goto LABEL_41;
    }
    if (v10 != 2)
    {
LABEL_48:
      if (byte_10098431C == 1)
      {
        byte_10098431C = 0;
        off_100984320(a1, (a2 >> 1) & 1);
      }
      if (byte_10098431D == 2)
      {
        byte_100984340 &= ~2u;
        byte_10098431D = 0;
        off_100984320(a1, byte_100984341 != 0);
      }
      if (byte_1009842F8 == 2)
      {
        byte_100984340 &= ~1u;
        sub_10018B06C(a1);
      }
      return;
    }
LABEL_41:
    byte_1009842E8 = 0;
    if ((_DWORD)a1 || (a2 & 1) == 0)
    {
      ((void (*)(uint64_t, _QWORD))off_1009842F0)(a1, 0);
    }
    else
    {
      if (dword_100984318)
        v18 = 1;
      else
        v18 = 2;
      ((void (*)(_QWORD, uint64_t))off_1009842F0)(0, v18);
    }
    goto LABEL_48;
  }
  if (sub_10005549C())
  {
    sub_100054530("readScanEnableCb - orphan callback");
    v13 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
}

uint64_t sub_100188A78(void (*a1)(int a1), int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result;
  uint64_t v11;
  void (*v12)(int);
  int v13;
  NSObject *v14;

  result = 1325;
  if ((byte_1009842B2 & 1) == 0 && !byte_1009842F8)
  {
    v11 = 1;
    if (a2 && a2 != 2)
    {
      if (a2 != 1)
        return 101;
      word_1009842FA = 600;
      qword_100984300 = (uint64_t)sub_100188BB0;
      v11 = 2;
    }
    result = sub_10004C9BC(100, (uint64_t (*)())sub_100188C20, a3, a4, a5, a6, a7, a8, v11);
    if (!(_DWORD)result)
    {
      byte_1009842F8 = 1;
      dword_100984308 = a2;
      v12 = sub_10018819C;
      if (a1)
        v12 = a1;
      off_100984310 = v12;
      result = dword_100984318;
      if (dword_100984318)
      {
        sub_100049F6C(dword_100984318);
        if (v13 && sub_10005549C())
        {
          sub_100054530("OI_Dispatch_CancelFunc");
          v14 = sub_1000544A0(0x2Cu);
          if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
            sub_1006D17C4();
        }
        result = 0;
        dword_100984318 = 0;
      }
    }
  }
  return result;
}

void sub_100188BB0()
{
  NSObject *v0;

  if (sub_100188A78(0, 2) && sub_10005549C())
  {
    sub_100054530("OI_DEVMGR_WriteDiscoverability");
    v0 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v0, OS_LOG_TYPE_ERROR))
      sub_1006D17C4();
  }
}

void sub_100188C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;

  v8 = a1;
  if (byte_1009842F8 == 1)
  {
    if ((_DWORD)a1)
    {
LABEL_3:
      sub_10018B06C(v8);
      return;
    }
    v10 = word_100984333 & 0xFE | (dword_100984308 != 0);
    word_100984333 = __PAIR16__(HIBYTE(word_100984333), word_100984333 & 0xFE | (dword_100984308 != 0)) | 0x100;
    if (byte_100984332 != 1)
    {
      if (byte_100984332 == 255)
      {
        v8 = sub_10004C9BC(70, (uint64_t (*)())sub_10018870C, a3, a4, a5, a6, a7, a8, v15);
        if ((_DWORD)v8)
          goto LABEL_3;
        ++byte_1009842E9;
        byte_100984332 = 1;
      }
      else
      {
        v11 = sub_10004C9BC(71, (uint64_t (*)())sub_10018AE60, a3, a4, a5, a6, a7, a8, v10);
        if ((_DWORD)v11)
        {
          v8 = v11;
          if (!sub_10005549C())
            goto LABEL_3;
          sub_100054530("OI_HCICMD_WriteScanEnable");
          v12 = sub_1000544A0(0x2Cu);
          if (!os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
            goto LABEL_3;
LABEL_15:
          sub_1006D17C4();
          goto LABEL_3;
        }
        ++byte_100984335;
      }
    }
    byte_100984340 |= 1u;
    if (dword_100984308 == 1)
    {
      v13 = sub_10004A9EC((uint64_t)sub_10018B0BC, 0, (unsigned __int16)word_1009842FA, &dword_100984318);
      if ((_DWORD)v13)
      {
        v8 = v13;
        if (!sub_10005549C())
          goto LABEL_3;
        sub_100054530("OI_Dispatch_RegisterTimedFunc");
        v14 = sub_1000544A0(0x2Cu);
        if (!os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
          goto LABEL_3;
        goto LABEL_15;
      }
    }
  }
  else if (sub_10005549C())
  {
    sub_100054530("wrdiscWriteIacLapCb - orphan callback");
    v9 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      sub_1006D17C4();
  }
}

uint64_t sub_100188E28(void (*a1)(int a1), int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _BYTE *v9;
  char v10;
  uint64_t v11;
  NSObject *v12;
  _BYTE *v13;
  NSObject *v14;
  NSObject *v15;
  char v16;
  void *ptr;
  const void *v19[2];

  v19[0] = 0;
  if (a2)
  {
    if (byte_100984328)
    {
      v9 = sub_100052DC0(0x10uLL);
      ptr = v9;
      if (v9)
      {
        *(_QWORD *)v9 = a1;
        v9[8] = 1;
        v10 = byte_100984328 + 1;
LABEL_13:
        byte_100984328 = v10;
        goto LABEL_14;
      }
      return 0;
    }
    v11 = sub_100189014(a1, 1, a3, a4, a5, a6, a7, a8);
    if ((_DWORD)v11)
    {
      if (!sub_10005549C())
        return v11;
      sub_100054530("_OI_DEVMGR_SetLocalDeviceConnectability");
      v15 = sub_1000544A0(0x2Cu);
      if (!os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
        return v11;
      goto LABEL_9;
    }
    v16 = byte_100984328 + 1;
    goto LABEL_26;
  }
  if (byte_100984328 == 1)
  {
    v11 = sub_100189014(a1, 0, a3, a4, a5, a6, a7, a8);
    if ((_DWORD)v11)
    {
      if (!sub_10005549C())
        return v11;
      sub_100054530("_OI_DEVMGR_SetLocalDeviceConnectability");
      v12 = sub_1000544A0(0x2Cu);
      if (!os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
        return v11;
LABEL_9:
      sub_1006D17C4();
      return v11;
    }
    v16 = byte_100984328 - 1;
LABEL_26:
    byte_100984328 = v16;
    return v11;
  }
  v13 = sub_100052DC0(0x10uLL);
  ptr = v13;
  if (!v13)
    return 0;
  *(_QWORD *)v13 = a1;
  v13[8] = 0;
  if (byte_100984328)
  {
    v10 = byte_100984328 - 1;
    goto LABEL_13;
  }
  sub_100253460();
LABEL_14:
  v19[1] = &ptr;
  LOWORD(v19[0]) = 8;
  v11 = sub_10004A9EC((uint64_t)sub_1001891A0, v19, 0, 0);
  if ((_DWORD)v11)
  {
    if (sub_10005549C())
    {
      sub_100054530("Failed to dispatch fake connectable CB");
      v14 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
    sub_100053298(ptr);
  }
  return v11;
}

uint64_t sub_100189014(void (*a1)(int a1), int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v9;
  int v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  void (*v15)(int);
  uint64_t v17;

  v8 = 1325;
  if ((byte_1009842B2 & 1) != 0 || (byte_10098431C & 1) != 0 || byte_10098431D)
    return v8;
  v9 = a2;
  HIBYTE(word_100984333) |= 2u;
  if (a2)
    v11 = 2;
  else
    v11 = 0;
  v12 = word_100984333 & 0xFD | v11;
  LOBYTE(word_100984333) = word_100984333 & 0xFD | v11;
  if (byte_100984332 == 1)
    goto LABEL_16;
  if (byte_100984332 == 255)
  {
    v8 = sub_10004C9BC(70, (uint64_t (*)())sub_10018870C, a3, a4, a5, a6, a7, a8, v17);
    if ((_DWORD)v8)
      return v8;
    ++byte_1009842E9;
    byte_100984332 = 1;
    goto LABEL_16;
  }
  v13 = sub_10004C9BC(71, (uint64_t (*)())sub_10018AE60, a3, a4, a5, a6, a7, a8, v12);
  if (!(_DWORD)v13)
  {
    ++byte_100984335;
LABEL_16:
    v8 = 0;
    byte_10098431D = 1;
    byte_100984341 = v9;
    v15 = sub_10018819C;
    if (a1)
      v15 = a1;
    off_100984320 = (uint64_t (*)(_QWORD, _QWORD))v15;
    byte_100984340 |= 2u;
    return v8;
  }
  v8 = v13;
  if (sub_10005549C())
  {
    sub_100054530("OI_HCICMD_WriteScanEnable");
    v14 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      sub_1006D17C4();
  }
  return v8;
}

void sub_1001891A0(uint64_t a1)
{
  unsigned __int8 *v1;

  v1 = **(unsigned __int8 ***)(a1 + 8);
  if (v1)
  {
    if (*(_QWORD *)v1)
      (*(void (**)(_QWORD, _QWORD))v1)(0, v1[8]);
    sub_100053298(v1);
  }
}

uint64_t sub_1001891E8(int a1)
{
  return sub_1001891F0(a1, 1);
}

uint64_t sub_1001891F0(int a1, int a2)
{
  uint64_t v3;
  char v4;
  int v5;
  int v6;
  int v7;
  char v8;

  if ((a1 & 0xFF001FFF) != 0)
    return 101;
  v3 = 0;
  v4 = 0;
  v5 = dword_10098432C;
  do
  {
    v6 = 1 << (v3 + 16);
    if ((v6 & a1) == 0)
      goto LABEL_13;
    v7 = *((unsigned __int8 *)&qword_100984338 + v3);
    if (a2)
    {
      if (v7 == 255)
        return 104;
      *((_BYTE *)&qword_100984338 + v3) = v7 + 1;
      if (!v7)
      {
        v5 |= v6;
LABEL_12:
        dword_10098432C = v5;
        v4 = 1;
      }
    }
    else
    {
      if (!*((_BYTE *)&qword_100984338 + v3))
        return 121;
      v8 = v7 - 1;
      *((_BYTE *)&qword_100984338 + v3) = v8;
      if (!v8)
      {
        v5 &= ~v6;
        goto LABEL_12;
      }
    }
LABEL_13:
    ++v3;
  }
  while (v3 != 8);
  if ((v4 & 1) != 0)
    return sub_100187DD4();
  else
    return 0;
}

uint64_t sub_10018929C(int a1)
{
  return sub_1001891F0(a1, 0);
}

uint64_t sub_1001892A4(__int16 a1, char a2)
{
  dword_10098432C = a2 & 0xFC | a1 & 0x1F00 | dword_10098432C & 0xFFE000;
  return sub_100187DD4();
}

uint64_t sub_1001892C8()
{
  return (unsigned __int16)word_100984330;
}

uint64_t sub_1001892D4(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;

  if ((a1 & 1) != 0)
    v8 = 0;
  else
    v8 = *(unsigned __int8 *)(qword_1009842B8 + 18);
  v9 = sub_10004C9BC(107, (uint64_t (*)())sub_100189384, a3, a4, a5, a6, a7, a8, v8);
  v10 = v9;
  if ((_DWORD)v9)
  {
    if ((_DWORD)v9 == 628)
    {
      sub_100189384(628);
    }
    else if (sub_10005549C())
    {
      sub_100054530("OI_HCICMD_WriteInquiryScanType");
      v11 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
  }
  return v10;
}

void sub_100189384(int a1)
{
  NSObject *v1;
  NSObject *v2;
  NSObject *v3;

  if (a1 == 717 || a1 == 628)
  {
    if (sub_10005549C())
    {
      sub_100054530("writeInqScanInterlaceTypeCb");
      v1 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v1, OS_LOG_TYPE_ERROR))
LABEL_13:
        sub_1006D17C4();
    }
  }
  else if ((a1 - 701) > 0x44)
  {
    if (a1)
    {
      if (sub_10005549C())
      {
        sub_100054530("writeInqScanInterlaceTypeCb");
        v3 = sub_1000544A0(0x2Cu);
        if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
          goto LABEL_13;
      }
    }
  }
  else if (sub_10005549C())
  {
    sub_100054530("writeInqScanInterlaceTypeCb");
    v2 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
      goto LABEL_13;
  }
}

uint64_t sub_10018948C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;

  if ((a1 & 1) != 0)
    v8 = 0;
  else
    v8 = *(unsigned __int8 *)(qword_1009842B8 + 20);
  v9 = sub_10004C9BC(111, (uint64_t (*)())sub_10018953C, a3, a4, a5, a6, a7, a8, v8);
  v10 = v9;
  if ((_DWORD)v9)
  {
    if ((_DWORD)v9 == 628)
    {
      sub_10018953C(628);
    }
    else if (sub_10005549C())
    {
      sub_100054530("OI_HCICMD_WritePageScanType");
      v11 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
  }
  return v10;
}

void sub_10018953C(int a1)
{
  NSObject *v1;
  NSObject *v2;
  NSObject *v3;

  if (a1 == 717 || a1 == 628)
  {
    if (sub_10005549C())
    {
      sub_100054530("writePageScanInterlaceTypeCb");
      v1 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v1, OS_LOG_TYPE_ERROR))
LABEL_13:
        sub_1006D17C4();
    }
  }
  else if ((a1 - 701) > 0x44)
  {
    if (a1)
    {
      if (sub_10005549C())
      {
        sub_100054530("writePageScanInterlaceTypeCb");
        v3 = sub_1000544A0(0x2Cu);
        if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
          goto LABEL_13;
      }
    }
  }
  else if (sub_10005549C())
  {
    sub_100054530("writePageScanInterlaceTypeCb");
    v2 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
      goto LABEL_13;
  }
}

void sub_100189644(int a1)
{
  NSObject *v2;
  int v3;

  if (!byte_1009842B1)
  {
    sub_100253460();
    if (a1)
      goto LABEL_3;
LABEL_7:
    byte_1009842B0 = 0;
    goto LABEL_8;
  }
  if (!a1)
    goto LABEL_7;
LABEL_3:
  if (sub_10005549C())
  {
    sub_100054530("devmgrWriteClassOfDeviceCB failed");
    v2 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
      sub_1006D17C4();
  }
LABEL_8:
  v3 = byte_1009842B1;
  byte_1009842B1 = 0;
  if (v3 == 2)
    sub_100187DD4();
}

void sub_1001896E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  NSObject *v9;
  NSObject *v10;
  NSObject *v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;

  if (byte_1009842B2 != 1)
  {
    if (sub_10005549C())
    {
      sub_100054530("writeConnectionAcceptTimeoutCb - orphan callback");
      v10 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return;
  }
  v8 = a1;
  if ((_DWORD)a1 == 628)
    goto LABEL_17;
  if ((a1 - 701) <= 0x44)
  {
    if (sub_10005549C())
    {
      sub_100054530("Write_Cnct_Accept_Timeout, ignoring error");
      v9 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
    dword_1009842B4 = v8;
LABEL_17:
    v14 = sub_10004C9BC(69, (uint64_t (*)())sub_1001898C0, a3, a4, a5, a6, a7, a8, *(unsigned __int16 *)(qword_1009842B8 + 2));
    if (!(_DWORD)v14)
      return;
    v8 = v14;
    if ((_DWORD)v14 == 628)
    {
      sub_1001898C0(628, v15, v16, v17, v18, v19, v20, v21);
      return;
    }
    if (sub_10005549C())
    {
      sub_100054530("OI_HCICMD_WritePageTimeout");
      v22 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
    byte_1009842B2 = 0;
    v12 = (void (*)(uint64_t, uint64_t))off_1009842C0;
    if (off_1009842C0)
    {
      v13 = qword_1009842B8;
      goto LABEL_25;
    }
    return;
  }
  if (!(_DWORD)a1)
    goto LABEL_17;
  if (sub_10005549C())
  {
    sub_100054530("writeConnectionAcceptTimeoutCb");
    v11 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      sub_1006D17C4();
  }
  byte_1009842B2 = 0;
  v12 = (void (*)(uint64_t, uint64_t))off_1009842C0;
  if (off_1009842C0)
  {
    v13 = qword_1009842B8;
LABEL_25:
    v12(v8, v13);
  }
}

void sub_1001898C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  NSObject *v9;
  NSObject *v10;
  NSObject *v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;

  if (byte_1009842B2 != 1)
  {
    if (sub_10005549C())
    {
      sub_100054530("writePageTimeoutCb - orphan callback");
      v10 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return;
  }
  v8 = a1;
  if ((_DWORD)a1 == 628)
    goto LABEL_17;
  if ((a1 - 701) <= 0x44)
  {
    if (sub_10005549C())
    {
      sub_100054530("Write_Page_Timeout, ignoring error");
      v9 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
    dword_1009842B4 = v8;
LABEL_17:
    v14 = sub_10004C9BC(73, (uint64_t (*)())sub_100189AA4, a3, a4, a5, a6, a7, a8, *(unsigned __int16 *)(qword_1009842B8 + 4));
    if (!(_DWORD)v14)
      return;
    v8 = v14;
    if ((_DWORD)v14 == 628)
    {
      sub_100189AA4(628, v15, v16, v17, v18, v19, v20, v21);
      return;
    }
    if (sub_10005549C())
    {
      sub_100054530("OI_HCICMD_WritePageScanActivity");
      v22 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
    byte_1009842B2 = 0;
    v12 = (void (*)(uint64_t, uint64_t))off_1009842C0;
    if (off_1009842C0)
    {
      v13 = qword_1009842B8;
      goto LABEL_25;
    }
    return;
  }
  if (!(_DWORD)a1)
    goto LABEL_17;
  if (sub_10005549C())
  {
    sub_100054530("writePageTimeoutCb");
    v11 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      sub_1006D17C4();
  }
  byte_1009842B2 = 0;
  v12 = (void (*)(uint64_t, uint64_t))off_1009842C0;
  if (off_1009842C0)
  {
    v13 = qword_1009842B8;
LABEL_25:
    v12(v8, v13);
  }
}

void sub_100189AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  NSObject *v9;
  NSObject *v10;
  NSObject *v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;

  if (byte_1009842B2 != 1)
  {
    if (sub_10005549C())
    {
      sub_100054530("writePageScanActivityCb - orphan callback");
      v10 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return;
  }
  v8 = a1;
  if ((_DWORD)a1 == 628)
    goto LABEL_17;
  if ((a1 - 701) <= 0x44)
  {
    if (sub_10005549C())
    {
      sub_100054530("Write_PageScan_Activity, ignoring error");
      v9 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
    dword_1009842B4 = v8;
LABEL_17:
    v14 = sub_10004C9BC(75, (uint64_t (*)())sub_100189C88, a3, a4, a5, a6, a7, a8, *(unsigned __int16 *)(qword_1009842B8 + 8));
    if (!(_DWORD)v14)
      return;
    v8 = v14;
    if ((_DWORD)v14 == 628)
    {
      sub_100189C88(628, v15, v16, v17, v18, v19, v20, v21);
      return;
    }
    if (sub_10005549C())
    {
      sub_100054530("OI_HCICMD_WriteInquiryScanActivity");
      v22 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
    byte_1009842B2 = 0;
    v12 = (void (*)(uint64_t, uint64_t))off_1009842C0;
    if (off_1009842C0)
    {
      v13 = qword_1009842B8;
      goto LABEL_25;
    }
    return;
  }
  if (!(_DWORD)a1)
    goto LABEL_17;
  if (sub_10005549C())
  {
    sub_100054530("writePageScanActivityCb");
    v11 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      sub_1006D17C4();
  }
  byte_1009842B2 = 0;
  v12 = (void (*)(uint64_t, uint64_t))off_1009842C0;
  if (off_1009842C0)
  {
    v13 = qword_1009842B8;
LABEL_25:
    v12(v8, v13);
  }
}

void sub_100189C88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  NSObject *v9;
  NSObject *v10;
  NSObject *v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;

  if (byte_1009842B2 != 1)
  {
    if (sub_10005549C())
    {
      sub_100054530("writeInquiryScanActivityCb - orphan callback");
      v10 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return;
  }
  v8 = a1;
  if ((_DWORD)a1 == 628)
    goto LABEL_17;
  if ((a1 - 701) <= 0x44)
  {
    if (sub_10005549C())
    {
      sub_100054530("Write_InquiryScan_Activity, ignoring error");
      v9 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
    dword_1009842B4 = v8;
LABEL_17:
    v14 = sub_10004C9BC(83, (uint64_t (*)())sub_100189E68, a3, a4, a5, a6, a7, a8, *(unsigned __int16 *)(qword_1009842B8 + 12));
    if (!(_DWORD)v14)
      return;
    v8 = v14;
    if ((_DWORD)v14 == 628)
    {
      sub_100189E68(628, v15, v16, v17, v18, v19, v20, v21);
      return;
    }
    if (sub_10005549C())
    {
      sub_100054530("OI_HCICMD_WriteVoiceSetting");
      v22 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
    byte_1009842B2 = 0;
    v12 = (void (*)(uint64_t, uint64_t))off_1009842C0;
    if (off_1009842C0)
    {
      v13 = qword_1009842B8;
      goto LABEL_25;
    }
    return;
  }
  if (!(_DWORD)a1)
    goto LABEL_17;
  if (sub_10005549C())
  {
    sub_100054530("writeInquiryScanActivityCb");
    v11 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      sub_1006D17C4();
  }
  byte_1009842B2 = 0;
  v12 = (void (*)(uint64_t, uint64_t))off_1009842C0;
  if (off_1009842C0)
  {
    v13 = qword_1009842B8;
LABEL_25:
    v12(v8, v13);
  }
}

void sub_100189E68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  NSObject *v9;
  NSObject *v10;
  NSObject *v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;

  if (byte_1009842B2 != 1)
  {
    if (sub_10005549C())
    {
      sub_100054530("writeVoiceSettingCb - orphan callback");
      v10 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return;
  }
  v8 = a1;
  if ((_DWORD)a1 == 628)
    goto LABEL_17;
  if ((a1 - 701) <= 0x44)
  {
    if (sub_10005549C())
    {
      sub_100054530("Write_Voice_Setting, ignoring error");
      v9 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
    dword_1009842B4 = v8;
LABEL_17:
    word_100984330 = *(_WORD *)(qword_1009842B8 + 12);
    v14 = sub_10004C9BC(87, (uint64_t (*)())sub_10018A054, a3, a4, a5, a6, a7, a8, *(unsigned __int8 *)(qword_1009842B8 + 14));
    if (!(_DWORD)v14)
      return;
    v8 = v14;
    if ((_DWORD)v14 == 628)
    {
      sub_10018A054(628, v15, v16, v17, v18, v19, v20, v21);
      return;
    }
    if (sub_10005549C())
    {
      sub_100054530("OI_HCICMD_WriteNumBroadcastRetransmissions");
      v22 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
    byte_1009842B2 = 0;
    v12 = (void (*)(uint64_t, uint64_t))off_1009842C0;
    if (off_1009842C0)
    {
      v13 = qword_1009842B8;
      goto LABEL_25;
    }
    return;
  }
  if (!(_DWORD)a1)
    goto LABEL_17;
  if (sub_10005549C())
  {
    sub_100054530("writeVoiceSettingCb");
    v11 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      sub_1006D17C4();
  }
  byte_1009842B2 = 0;
  v12 = (void (*)(uint64_t, uint64_t))off_1009842C0;
  if (off_1009842C0)
  {
    v13 = qword_1009842B8;
LABEL_25:
    v12(v8, v13);
  }
}

void sub_10018A054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  NSObject *v9;
  NSObject *v10;
  NSObject *v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;

  if (byte_1009842B2 != 1)
  {
    if (sub_10005549C())
    {
      sub_100054530("writeNumBroadcastRetransmissionsCb - orphan callback");
      v10 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return;
  }
  v8 = a1;
  if ((_DWORD)a1 == 628)
    goto LABEL_17;
  if ((a1 - 701) <= 0x44)
  {
    if (sub_10005549C())
    {
      sub_100054530("Write_Num_Broadcast_Retransmissions, ignoring error");
      v9 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
    dword_1009842B4 = v8;
LABEL_17:
    v14 = sub_10004C9BC(89, (uint64_t (*)())sub_10018A234, a3, a4, a5, a6, a7, a8, *(unsigned __int8 *)(qword_1009842B8 + 15));
    if (!(_DWORD)v14)
      return;
    v8 = v14;
    if ((_DWORD)v14 == 628)
    {
      sub_10018A234(628, v15, v16, v17, v18, v19, v20, v21);
      return;
    }
    if (sub_10005549C())
    {
      sub_100054530("OI_HCICMD_WriteHoldModeActivity");
      v22 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
    byte_1009842B2 = 0;
    v12 = (void (*)(uint64_t, uint64_t))off_1009842C0;
    if (off_1009842C0)
    {
      v13 = qword_1009842B8;
      goto LABEL_25;
    }
    return;
  }
  if (!(_DWORD)a1)
    goto LABEL_17;
  if (sub_10005549C())
  {
    sub_100054530("writeNumBroadcastRetransmissionsCb");
    v11 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      sub_1006D17C4();
  }
  byte_1009842B2 = 0;
  v12 = (void (*)(uint64_t, uint64_t))off_1009842C0;
  if (off_1009842C0)
  {
    v13 = qword_1009842B8;
LABEL_25:
    v12(v8, v13);
  }
}

void sub_10018A234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  NSObject *v9;
  NSObject *v10;
  NSObject *v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;

  if (byte_1009842B2 != 1)
  {
    if (sub_10005549C())
    {
      sub_100054530("writeHoldModeActivityCb - orphan callback");
      v10 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return;
  }
  v8 = a1;
  if ((_DWORD)a1 == 628)
    goto LABEL_17;
  if ((a1 - 701) <= 0x44)
  {
    if (sub_10005549C())
    {
      sub_100054530("Write_Hold_Mode_Activity, ignoring error");
      v9 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
    dword_1009842B4 = v8;
LABEL_17:
    v14 = sub_10004C9BC(92, (uint64_t (*)())sub_10018A414, a3, a4, a5, a6, a7, a8, *(unsigned __int8 *)(qword_1009842B8 + 16));
    if (!(_DWORD)v14)
      return;
    v8 = v14;
    if ((_DWORD)v14 == 628)
    {
      sub_10018A414(628, v15, v16, v17, v18, v19, v20, v21);
      return;
    }
    if (sub_10005549C())
    {
      sub_100054530("OI_HCICMD_WriteSCOFlowControlEnable");
      v22 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
    byte_1009842B2 = 0;
    v12 = (void (*)(uint64_t, uint64_t))off_1009842C0;
    if (off_1009842C0)
    {
      v13 = qword_1009842B8;
      goto LABEL_25;
    }
    return;
  }
  if (!(_DWORD)a1)
    goto LABEL_17;
  if (sub_10005549C())
  {
    sub_100054530("writeHoldModeActivityCb");
    v11 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      sub_1006D17C4();
  }
  byte_1009842B2 = 0;
  v12 = (void (*)(uint64_t, uint64_t))off_1009842C0;
  if (off_1009842C0)
  {
    v13 = qword_1009842B8;
LABEL_25:
    v12(v8, v13);
  }
}

void sub_10018A414(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  NSObject *v19;

  if (byte_1009842B2 == 1)
  {
    if (a1)
    {
      if (a1 != 628)
      {
        if (sub_10005549C())
        {
          sub_100054530("Write_Sco_Flow_Control_Enable failed, ignoring error");
          v8 = sub_1000544A0(0x2Cu);
          if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
            sub_1006D17C4();
        }
      }
    }
    v9 = sub_10004C9BC(102, (uint64_t (*)())sub_10018A57C, a3, a4, a5, a6, a7, a8, *(unsigned __int8 *)(qword_1009842B8 + 17));
    if ((_DWORD)v9)
    {
      v17 = v9;
      if ((_DWORD)v9 == 628)
      {
        sub_10018A57C(628, v10, v11, v12, v13, v14, v15, v16);
      }
      else
      {
        if (sub_10005549C())
        {
          sub_100054530("OI_HCICMD_WritePageScanPeriodMode");
          v19 = sub_1000544A0(0x2Cu);
          if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
            sub_1006D17C4();
        }
        byte_1009842B2 = 0;
        if (off_1009842C0)
          off_1009842C0(v17, qword_1009842B8);
      }
    }
  }
  else if (sub_10005549C())
  {
    sub_100054530("writeSCOFlowControlEnableCb - orphan callback");
    v18 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
}

void sub_10018A57C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  NSObject *v9;
  NSObject *v10;
  NSObject *v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;

  if (byte_1009842B2 != 1)
  {
    if (sub_10005549C())
    {
      sub_100054530("writePageScanPeriodModeCb - orphan callback");
      v10 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return;
  }
  v8 = a1;
  if ((_DWORD)a1 == 628)
    goto LABEL_17;
  if ((a1 - 701) <= 0x44)
  {
    if (sub_10005549C())
    {
      sub_100054530("Write_Page_Scan_Period_Mode, ignoring error");
      v9 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
    dword_1009842B4 = v8;
LABEL_17:
    v14 = sub_10004C9BC(107, (uint64_t (*)())sub_10018A75C, a3, a4, a5, a6, a7, a8, *(unsigned __int8 *)(qword_1009842B8 + 18));
    if (!(_DWORD)v14)
      return;
    v8 = v14;
    if ((_DWORD)v14 == 628)
    {
      sub_10018A75C(628, v15, v16, v17, v18, v19, v20, v21);
      return;
    }
    if (sub_10005549C())
    {
      sub_100054530("OI_HCICMD_WriteInquiryScanType");
      v22 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
    byte_1009842B2 = 0;
    v12 = (void (*)(uint64_t, uint64_t))off_1009842C0;
    if (off_1009842C0)
    {
      v13 = qword_1009842B8;
      goto LABEL_25;
    }
    return;
  }
  if (!(_DWORD)a1)
    goto LABEL_17;
  if (sub_10005549C())
  {
    sub_100054530("writePageScanPeriodModeCb");
    v11 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      sub_1006D17C4();
  }
  byte_1009842B2 = 0;
  v12 = (void (*)(uint64_t, uint64_t))off_1009842C0;
  if (off_1009842C0)
  {
    v13 = qword_1009842B8;
LABEL_25:
    v12(v8, v13);
  }
}

void sub_10018A75C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  NSObject *v9;
  NSObject *v10;
  NSObject *v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;

  if (byte_1009842B2 != 1)
  {
    if (sub_10005549C())
    {
      sub_100054530("writeInquiryScanTypeCb - orphan callback");
      v10 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return;
  }
  v8 = a1;
  if ((_DWORD)a1 == 628)
    goto LABEL_17;
  if ((a1 - 701) <= 0x44)
  {
    if (sub_10005549C())
    {
      sub_100054530("Write_Inquiry_Scan_Type, ignoring error");
      v9 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
    dword_1009842B4 = v8;
LABEL_17:
    v14 = sub_10004C9BC(109, (uint64_t (*)())sub_10018A93C, a3, a4, a5, a6, a7, a8, *(unsigned __int8 *)(qword_1009842B8 + 19));
    if (!(_DWORD)v14)
      return;
    v8 = v14;
    if ((_DWORD)v14 == 628)
    {
      sub_10018A93C(628, v15, v16, v17, v18, v19, v20, v21);
      return;
    }
    if (sub_10005549C())
    {
      sub_100054530("OI_HCICMD_WriteInquiryMode");
      v22 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
    byte_1009842B2 = 0;
    v12 = (void (*)(uint64_t, uint64_t))off_1009842C0;
    if (off_1009842C0)
    {
      v13 = qword_1009842B8;
      goto LABEL_25;
    }
    return;
  }
  if (!(_DWORD)a1)
    goto LABEL_17;
  if (sub_10005549C())
  {
    sub_100054530("writeInquiryScanTypeCb");
    v11 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      sub_1006D17C4();
  }
  byte_1009842B2 = 0;
  v12 = (void (*)(uint64_t, uint64_t))off_1009842C0;
  if (off_1009842C0)
  {
    v13 = qword_1009842B8;
LABEL_25:
    v12(v8, v13);
  }
}

void sub_10018A93C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  NSObject *v9;
  NSObject *v10;
  NSObject *v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;

  if (byte_1009842B2 != 1)
  {
    if (sub_10005549C())
    {
      sub_100054530("writeInquiryModeCb - orphan callback");
      v10 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return;
  }
  v8 = a1;
  if ((_DWORD)a1 == 628)
    goto LABEL_17;
  if ((a1 - 701) <= 0x44)
  {
    if (sub_10005549C())
    {
      sub_100054530("Write_Inquiry_Mode, ignoring error");
      v9 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
    dword_1009842B4 = v8;
LABEL_17:
    v14 = sub_10004C9BC(111, (uint64_t (*)())sub_10018AB1C, a3, a4, a5, a6, a7, a8, *(unsigned __int8 *)(qword_1009842B8 + 20));
    if (!(_DWORD)v14)
      return;
    v8 = v14;
    if ((_DWORD)v14 == 628)
    {
      sub_10018AB1C(628, v15, v16, v17, v18, v19, v20, v21);
      return;
    }
    if (sub_10005549C())
    {
      sub_100054530("OI_HCICMD_WritePageScanType");
      v22 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
    byte_1009842B2 = 0;
    v12 = (void (*)(uint64_t, uint64_t))off_1009842C0;
    if (off_1009842C0)
    {
      v13 = qword_1009842B8;
      goto LABEL_25;
    }
    return;
  }
  if (!(_DWORD)a1)
    goto LABEL_17;
  if (sub_10005549C())
  {
    sub_100054530("writeInquiryModeCb");
    v11 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      sub_1006D17C4();
  }
  byte_1009842B2 = 0;
  v12 = (void (*)(uint64_t, uint64_t))off_1009842C0;
  if (off_1009842C0)
  {
    v13 = qword_1009842B8;
LABEL_25:
    v12(v8, v13);
  }
}

void sub_10018AB1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  NSObject *v9;
  NSObject *v10;
  NSObject *v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;

  if (byte_1009842B2 != 1)
  {
    if (sub_10005549C())
    {
      sub_100054530("writePageScanTypeCb - orphan callback");
      v10 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return;
  }
  v8 = a1;
  if ((_DWORD)a1 == 628)
    goto LABEL_17;
  if ((a1 - 701) <= 0x44)
  {
    if (sub_10005549C())
    {
      sub_100054530("Write_Page_Scan_Type, ignoring error");
      v9 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
    dword_1009842B4 = v8;
LABEL_17:
    v14 = sub_10004C9BC(113, (uint64_t (*)())sub_10018ACFC, a3, a4, a5, a6, a7, a8, *(unsigned __int8 *)(qword_1009842B8 + 21));
    if (!(_DWORD)v14)
      return;
    v8 = v14;
    if ((_DWORD)v14 == 628)
    {
      sub_10018ACFC(0x274u);
      return;
    }
    if (sub_10005549C())
    {
      sub_100054530("OI_HCICMD_WriteAfhChannelAssessmentMode");
      v15 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
    byte_1009842B2 = 0;
    v12 = (void (*)(uint64_t, uint64_t))off_1009842C0;
    if (off_1009842C0)
    {
      v13 = qword_1009842B8;
      goto LABEL_25;
    }
    return;
  }
  if (!(_DWORD)a1)
    goto LABEL_17;
  if (sub_10005549C())
  {
    sub_100054530("writePageScanTypeCb");
    v11 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      sub_1006D17C4();
  }
  byte_1009842B2 = 0;
  v12 = (void (*)(uint64_t, uint64_t))off_1009842C0;
  if (off_1009842C0)
  {
    v13 = qword_1009842B8;
LABEL_25:
    v12(v8, v13);
  }
}

void sub_10018ACFC(unsigned int a1)
{
  unsigned int v1;
  int v2;
  NSObject *v3;
  NSObject *v4;
  NSObject *v5;
  uint64_t v6;

  if (byte_1009842B2 == 1)
  {
    v1 = a1;
    if (a1 == 628)
    {
      v1 = 0;
    }
    else
    {
      if (a1 - 701 <= 0x44)
      {
        if (sub_10005549C())
        {
          sub_100054530("Write_AFH_Channel_Assessment_Mode, ignoring error");
          v4 = sub_1000544A0(0x2Cu);
          if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
            sub_1006D17C4();
        }
        dword_1009842B4 = v1;
        v2 = 1;
        v1 = 0;
        goto LABEL_18;
      }
      if (a1)
      {
        if (sub_10005549C())
        {
          sub_100054530("writeAfhChannelAssessmentModeCb");
          v5 = sub_1000544A0(0x2Cu);
          if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
            sub_1006D17C4();
        }
        v2 = 0;
        goto LABEL_18;
      }
    }
    v2 = 1;
LABEL_18:
    byte_1009842B2 = 0;
    if (off_1009842C0)
    {
      if (v2)
        v6 = dword_1009842B4;
      else
        v6 = v1;
      off_1009842C0(v6, qword_1009842B8);
    }
    return;
  }
  if (sub_10005549C())
  {
    sub_100054530("writeAfhChannelAssessmentModeCb - orphan callback");
    v3 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
}

void sub_10018AE60(uint64_t a1)
{
  int v1;
  uint64_t v2;
  int v3;
  unsigned int v4;
  int v5;
  NSObject *v6;
  NSObject *v7;

  v1 = byte_10098431D;
  if (byte_1009842B2 & 1 | (byte_1009842E8 != 0) | (byte_1009842F8 != 0) | byte_10098431C & 1 | (byte_10098431D != 0)
    && byte_100984335)
  {
    if (--byte_100984335)
      return;
    v2 = a1;
    if (byte_1009842F8 == 1)
    {
      v3 = byte_10098431D;
      if ((byte_100984340 & 1) != 0)
      {
        byte_100984340 &= ~1u;
        if ((_DWORD)a1)
        {
LABEL_22:
          sub_10018B06C(a1);
          v3 = byte_10098431D;
          goto LABEL_23;
        }
        v4 = dword_10098432C;
        if (dword_100984308 != 2)
        {
          if (dword_100984308 == 1)
          {
            a1 = 0;
            v5 = dword_10098432C;
            v4 = dword_10098432C | 0x2000;
LABEL_20:
            if (v4 != v5)
            {
              dword_10098432C = v4;
              a1 = sub_100187DD4();
            }
            goto LABEL_22;
          }
          if (dword_100984308)
          {
            if (sub_10005549C())
            {
              sub_100054530("invalid discoSettingContext %d", dword_100984308);
              v7 = sub_1000544A0(0x2Cu);
              if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
                sub_1006CE7A4();
            }
            sub_100253460();
            v5 = dword_10098432C;
            a1 = 105;
            goto LABEL_20;
          }
        }
        a1 = 0;
        v5 = dword_10098432C;
        v4 = dword_10098432C & 0xFFFFDFFF;
        goto LABEL_20;
      }
    }
    else
    {
      v3 = byte_10098431D;
    }
LABEL_23:
    if (v3 == 1 && (byte_100984340 & 2) != 0 && v1 == 1)
    {
      byte_100984340 &= ~2u;
      byte_10098431D = 0;
      off_100984320(v2, byte_100984341 != 0);
    }
    return;
  }
  if (sub_10005549C())
  {
    sub_100054530("writeScanEnableCb - orphan callback");
    v6 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
}

uint64_t sub_10018B06C(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);

  if (!byte_1009842F8)
    sub_100253460();
  v2 = (uint64_t (*)(uint64_t))off_100984310;
  if (!off_100984310)
  {
    sub_100253460();
    v2 = (uint64_t (*)(uint64_t))off_100984310;
  }
  byte_1009842F8 = 0;
  return v2(a1);
}

void sub_10018B0BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  NSObject *v8;
  uint64_t v9;
  NSObject *v10;

  dword_100984318 = 0;
  if (byte_1009842F8)
  {
    sub_100253460();
    if (byte_1009842F8)
    {
      if (sub_10005549C())
      {
        sub_100054530("discoLimitedTimeoutCb, !discoWriteSettingsState");
        v8 = sub_1000544A0(0x2Cu);
        if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      return;
    }
  }
  v9 = byte_100984333 & 0xFE;
  byte_100984333 &= ~1u;
  if (byte_100984332 == 1)
  {
LABEL_12:
    dword_100984308 = 0;
    byte_1009842F8 = 1;
    off_100984310 = (_UNKNOWN *)qword_100984300;
    byte_100984340 |= 1u;
    return;
  }
  if (!sub_10004C9BC(71, (uint64_t (*)())sub_10018AE60, a3, a4, a5, a6, a7, a8, v9))
  {
    ++byte_100984335;
    goto LABEL_12;
  }
  if (sub_10005549C())
  {
    sub_100054530("OI_HCICMD_WriteScanEnable");
    v10 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      sub_1006D17C4();
  }
}

void sub_10018B1FC(uint64_t a1, unsigned __int16 *a2, unsigned int a3, unsigned int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v16;
  char *v17;
  NSObject *v18;
  unsigned int v19;
  NSObject *v20;
  NSObject *v21;
  uint8_t buf[4];
  void *v23;

  v16 = sub_10005549C();
  if (a2)
  {
    if (v16)
    {
      v17 = *((_BYTE *)a2 + 144) ? "peripheral" : "central";
      sub_100054530("_qosSetupCompleteCB: status %!, role %s, lmhandle 0x%x, retries %d, flags 0x%x, serviceType 0x%x, tokenRate 0x%x, peakBandwidth 0x%x, latency 0x%x, delayVariation 0x%x", a1, v17, *a2, *((unsigned __int8 *)a2 + 154), a3, a4, a5, a6, a7, a8);
      v18 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136446210;
        v23 = sub_100054494();
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    if (!(_DWORD)a1 && a7 >= 0x4E21 && *((_BYTE *)a2 + 144) == 1)
    {
      v19 = ++*((_BYTE *)a2 + 154);
      if (v19 > 2)
      {
        if (sub_10005549C())
        {
          sub_100054530("QOS setup retry limited exceeded");
          v21 = sub_1000544A0(0x2Cu);
          if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
            sub_1006CEE54();
        }
      }
      else
      {
        sub_10018FC68((uint64_t)a2);
      }
    }
  }
  else if (v16)
  {
    sub_100054530("qosSetupCompleteCB connection was released, exiting");
    v20 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      v23 = sub_100054494();
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
}

void sub_10018B438()
{
  byte_100984342 = 0;
}

uint64_t sub_10018B444(uint64_t a1, int a2)
{
  uint64_t result;
  uint64_t v4;

  if (!a1)
    return 101;
  v4 = 0;
  result = sub_100182588(a1, &v4);
  if (!(_DWORD)result)
    *(_WORD *)(v4 + 142) = (858993460 * (unint64_t)(8 * a2)) >> 32;
  return result;
}

uint64_t sub_10018B4A0(uint64_t a1, char a2)
{
  uint64_t result;
  uint64_t v4;

  if (!a1)
    return 101;
  v4 = 0;
  result = sub_100182588(a1, &v4);
  if (!(_DWORD)result)
    *(_BYTE *)(v4 + 196) = a2;
  return result;
}

uint64_t sub_10018B4E8(uint64_t a1, char a2)
{
  uint64_t result;
  uint64_t v4;

  if (!a1)
    return 101;
  v4 = 0;
  result = sub_100182588(a1, &v4);
  if (!(_DWORD)result)
    *(_BYTE *)(v4 + 328) = a2;
  return result;
}

uint64_t sub_10018B530(uint64_t a1)
{
  uint64_t v2;
  int v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;

  if (!a1)
    sub_100253460();
  if (*(_BYTE *)(a1 + 54) == 3)
  {
    if (*(unsigned __int8 *)(a1 + 144) == 255 && !*(_BYTE *)(a1 + 196))
      *(_BYTE *)(a1 + 198) = 1;
    return 1342;
  }
  if (*(_BYTE *)(a1 + 54) || *(_BYTE *)(a1 + 196) || *(_BYTE *)(a1 + 144) != 1)
    return 1342;
  if (sub_10024B8B8(a1))
  {
    *(_BYTE *)(a1 + 194) = 1;
    return 1342;
  }
  if (sub_10019AEFC(a1 + 48))
    return 1342;
  if (*(_DWORD *)(a1 + 248))
  {
    *(_BYTE *)(a1 + 197) = 1;
    return 1342;
  }
  if (*(_BYTE *)(a1 + 200) && sub_10019C1AC() == 1 && !sub_10019C27C() || sub_1001EE504(a1))
    return 1342;
  if (*(_BYTE *)(a1 + 195))
  {
    v4 = *(_DWORD *)(a1 + 320);
    v2 = 1342;
    if (v4 == 733 || v4 == 736)
      return v2;
    if (sub_10019C270()
      || sub_10019C460()
      || sub_10019C1AC() == 1 && !sub_10019C27C())
    {
      return 1342;
    }
  }
  if (!*(_DWORD *)(a1 + 148))
  {
    v6 = sub_10017FF38(a1);
    if ((_DWORD)v6)
    {
      v7 = v6;
      if (sub_10005549C())
      {
        sub_100054530("OI_DevMgr_aclActivity failed with %!", v7);
        v8 = sub_1000544A0(0x2Cu);
        if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
    }
  }
  v2 = sub_10018B708((uint64_t)sub_10018B7D4, a1, 0);
  if ((_DWORD)v2)
  {
    if (sub_10005549C())
    {
      sub_100054530("startRoleSwitch failed %!", v2);
      v5 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
  return v2;
}

uint64_t sub_10018B708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  unsigned int v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (*(char *)(a2 + 152) < 0)
    return 0;
  v3 = a3;
  v6 = *(unsigned __int8 *)(a2 + 152);
  if (v6 < 2)
    return sub_10018C98C(a1, a2, a3);
  if (v6 != 2)
    return 101;
  result = sub_100186524((uint64_t)sub_10018CB90, 0);
  if ((_DWORD)result == 1316 || !(_DWORD)result)
  {
    *(_BYTE *)(a2 + 213) = 1;
    *(_QWORD *)(a2 + 216) = a1;
    *(_BYTE *)(a2 + 276) = v3;
    result = sub_100196768(0x2Au, v8, v9, v10, v11, v12, v13, v14, a2);
    if ((_DWORD)result)
      *(_BYTE *)(a2 + 213) = 0;
    else
      *(_BYTE *)(a2 + 152) |= 0x80u;
  }
  return result;
}

void sub_10018B7D4(int a1, uint64_t a2, int a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  NSObject *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  uint64_t v19;

  v5 = sub_10019AEA4(a2);
  if (!v5)
  {
    if (sub_10005549C())
    {
      sub_100054530("gentlyCentralrRsCb Orphaned!  %!", 105);
      v10 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    goto LABEL_19;
  }
  v6 = v5;
  if (a3)
  {
    *(_BYTE *)(v5 + 195) = 1;
    *(_DWORD *)(v5 + 320) = a1;
    v7 = sub_10018FC2C(sub_10018B1FC, 0);
    if ((_DWORD)v7)
    {
      v8 = v7;
      if (sub_10005549C())
      {
        sub_100054530("OI_HCIAPI_RegisterQosCallback failed with %!", v8);
        v9 = sub_1000544A0(0x2Cu);
        if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
          sub_1006CEE54();
      }
    }
    else
    {
      *(_BYTE *)(v6 + 154) = 0;
      sub_10018FC68(v6);
    }
  }
  else
  {
    *(_BYTE *)(v5 + 195) = 0;
    *(_DWORD *)(v5 + 320) = 0xFFFF;
    if (!*(_BYTE *)(v5 + 199) || (v11 = sub_10019C1AC(), sub_10019C27C() + v11 >= 2))
    {
      v12 = *(_WORD *)(v6 + 138) & 0xFFFE;
      *(_WORD *)(v6 + 138) = v12;
      v19 = v12;
      v13 = sub_10004C9BC(49, nullsub_100);
      if ((_DWORD)v13)
      {
        v14 = v13;
        if (sub_10005549C())
        {
          sub_100054530("Could not write link settings to Central only %!", v14, v19);
          v15 = sub_1000544A0(0x2Cu);
          if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
            sub_1006CE7A4();
        }
      }
    }
  }
  if (!*(_DWORD *)(v6 + 148))
  {
    v16 = sub_10017FF38(v6);
    if ((_DWORD)v16)
    {
      v17 = v16;
      if (sub_10005549C())
      {
        sub_100054530("OI_DevMgr_aclActivity failed with %!", v17);
        v18 = sub_1000544A0(0x2Cu);
        if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
    }
  }
  if (!sub_10018BBF4(v6))
LABEL_19:
    byte_100998F50 = 1;
}

BOOL sub_10018BA08(uint64_t a1)
{
  return sub_10018BA14(**(_DWORD **)(a1 + 8));
}

BOOL sub_10018BA14(int a1)
{
  unsigned int v1;
  _BOOL8 result;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  void *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint8_t buf[4];
  void *v17;
  __int16 v18;
  int v19;

  v15 = 0;
  v1 = a1 != 0;
  result = sub_10019C200(&v15);
  if (result)
  {
    while (1)
    {
      v3 = v15;
      if (!*(_BYTE *)(v15 + 54) && !*(_BYTE *)(v15 + 144))
        break;
LABEL_14:
      result = sub_10019C200(&v15);
      if (!result)
        goto LABEL_15;
    }
    v4 = *(unsigned __int16 *)(v15 + 138);
    if (*(_BYTE *)(v15 + 199))
    {
      v5 = sub_10019C1AC();
      v6 = sub_10019C27C();
      v3 = v15;
      v7 = *(unsigned __int16 *)(v15 + 138);
      if (v6 + v5 <= v1)
      {
        v8 = v7 | 1u;
LABEL_9:
        *(_WORD *)(v3 + 138) = v8;
        if (v4 != (_DWORD)v8)
        {
          v14 = v8;
          v9 = sub_10004C9BC(49, nullsub_100);
          if ((_DWORD)v9)
          {
            v10 = v9;
            if (sub_10005549C())
            {
              sub_100054530("Could not write link settings to Central only %!", v10, v14);
              v11 = sub_1000544A0(0x2Cu);
              if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
              {
                v12 = sub_100054494();
                *(_DWORD *)buf = 136446466;
                v17 = v12;
                v18 = 1024;
                v19 = 0xFFFF;
                _os_log_error_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
              }
            }
          }
        }
        goto LABEL_14;
      }
    }
    else
    {
      LOWORD(v7) = *(_WORD *)(v15 + 138);
    }
    v8 = (unsigned __int16)v7 & 0xFFFE;
    goto LABEL_9;
  }
LABEL_15:
  if (*(_BYTE *)(qword_100998F48 + 15))
  {
    v13 = 1;
  }
  else
  {
    result = sub_10018BBF4(0);
    v13 = !result;
  }
  byte_100998F50 = v13;
  return result;
}

BOOL sub_10018BBF4(uint64_t a1)
{
  _BOOL8 v1;
  uint64_t v3;

  v3 = a1;
  do
    v1 = sub_10019C200(&v3);
  while (v1 && sub_10018B530(v3));
  return v1;
}

uint64_t sub_10018BC38(uint64_t a1, uint64_t a2, char a3, __int16 a4, int a5)
{
  uint64_t v10;
  int v11;
  const void *v13[2];
  _QWORD v14[2];
  __int128 v15;

  if (!(_DWORD)xmmword_1009991F8)
    return 103;
  if (a1 && a2)
  {
    v10 = sub_10019AEA4(a2);
    if (v10)
    {
      v14[0] = 0;
      v15 = 0u;
      v13[0] = 0;
      v14[1] = a1;
      DWORD1(v15) = a5;
      BYTE2(v15) = a3;
      LOWORD(v15) = a4;
      LODWORD(v14[0]) = *(_DWORD *)a2;
      WORD2(v14[0]) = *(_WORD *)(a2 + 4);
      if (((2684355 * (unint64_t)(*(unsigned __int16 *)(v10 + 140) + 1599)) >> 32) <= 2)
        v11 = 2;
      else
        v11 = (2684355 * (unint64_t)(*(unsigned __int16 *)(v10 + 140) + 1599)) >> 32;
      sub_10004AD30((uint64_t)&v15 + 8);
      DWORD2(v15) += v11;
      v13[1] = v14;
      LOWORD(v13[0]) = 32;
      return sub_10004AE90((uint64_t)sub_10018BD44, v13, 0);
    }
    else
    {
      return 1301;
    }
  }
  else
  {
    sub_100253460();
    return 101;
  }
}

uint64_t sub_10018BD44(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  NSObject *v7;
  _OWORD *v8;
  uint64_t result;
  NSObject *v10;
  NSObject *v11;
  void *v12;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = sub_10019AEA4(v2);
  if (!v3)
  {
    if (sub_10005549C())
    {
      v6 = 1301;
      sub_100054530("deferredEnforceLinkPolicy orphaned %!", 1301);
      v7 = sub_1000544A0(0x2Cu);
      if (!os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
        return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v2 + 8))(v6, v2, *(unsigned int *)(v2 + 20));
      sub_1006CE7A4();
    }
    v6 = 1301;
    return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v2 + 8))(v6, v2, *(unsigned int *)(v2 + 20));
  }
  v4 = v3;
  if (!*(_BYTE *)(v3 + 54))
  {
    v8 = sub_100052DC0(0x10uLL);
    *(_QWORD *)(v4 + 128) = v8;
    if (v8)
    {
      *v8 = *(_OWORD *)(v2 + 8);
      if (!*(_BYTE *)(*(_QWORD *)(v4 + 128) + 10) || !*(_BYTE *)(v4 + 144))
        return sub_10018CDE8(v4);
      result = sub_10018B708((uint64_t)sub_10018CD48, v4, 0);
      if (!(_DWORD)result)
        return result;
      v6 = result;
      if (sub_10005549C())
      {
        sub_100054530("startRoleSwitch failed %!", v6);
        v10 = sub_1000544A0(0x2Cu);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      goto LABEL_26;
    }
    if (sub_10005549C())
    {
      v6 = 106;
      sub_100054530("OI_Malloc failed %!", 106);
      v11 = sub_1000544A0(0x2Cu);
      if (!os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
        goto LABEL_26;
      sub_1006CE7A4();
    }
    v6 = 106;
LABEL_26:
    v12 = *(void **)(v4 + 128);
    if (v12)
    {
      sub_100053298(v12);
      *(_QWORD *)(v4 + 128) = 0;
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v2 + 8))(v6, v2, *(unsigned int *)(v2 + 20));
  }
  if (sub_100258AE0(v2 + 24))
  {
    if (sub_10005549C())
    {
      sub_100054530("Enforce policy on %: deferral timed out, giving up", v4 + 48);
      v5 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    v6 = 118;
    goto LABEL_26;
  }
  result = sub_10004A9EC((uint64_t)sub_10018BD44, (const void **)a1, 1, 0);
  v6 = result;
  if ((_DWORD)result)
    goto LABEL_26;
  return result;
}

void sub_10018BF6C(uint64_t a1, uint64_t a2, int a3)
{
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  NSObject *v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;

  if (!(_DWORD)xmmword_1009991F8)
    return;
  if ((_DWORD)a1)
  {
    if (sub_10005549C())
    {
      sub_100054530("OI_HCIEventHandler_RoleChange: %! (%:)", a1, a2);
      v5 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    v13 = sub_10019AEA4(a2);
    if (!v13)
      goto LABEL_17;
  }
  else
  {
    v15 = sub_10019AEA4(a2);
    if (!v15)
    {
LABEL_17:
      if (sub_10005549C())
      {
        sub_100054530("OI_HCIEventHandler_RoleChange, no connection to %:", a2);
        v19 = sub_1000544A0(0x2Cu);
        if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      return;
    }
    v13 = v15;
    *(_BYTE *)(v15 + 144) = a3;
    sub_100182274();
    if (!a3 && sub_100186004(*(unsigned __int8 *)(v13 + 54)))
      sub_10018C1B8(v13, *(unsigned __int16 *)(v13 + 140));
  }
  if (*(_BYTE *)(v13 + 54) == 5)
  {
    v16 = *(_BYTE **)(v13 + 120);
    if (!v16)
    {
      sub_100253460();
      v16 = *(_BYTE **)(v13 + 120);
    }
    switch(*v16)
    {
      case 0:
        v17 = v13;
        v18 = a1;
        goto LABEL_24;
      case 1:
      case 3:
        return;
      case 2:
        v21 = sub_100196768(0x10u, v6, v7, v8, v9, v10, v11, v12, v13);
        if ((_DWORD)v21)
        {
          v22 = v21;
          if (sub_10005549C())
          {
            sub_100054530("OI_HCICMD_SetConnectionEncryption failed %!, forcing disconnect", v22, 1);
            v23 = sub_1000544A0(0x2Cu);
            if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
              sub_1006CE7A4();
          }
          sub_10018C280(v13, v22);
          sub_100180494(a2, 0xEu);
        }
        else
        {
          **(_BYTE **)(v13 + 120) = 3;
        }
        break;
      default:
        sub_100253460();
        if (sub_10005549C())
        {
          sub_100054530("OI_HCIEventHandler_RoleChange %!", 105);
          v20 = sub_1000544A0(0x2Cu);
          if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
            sub_1006CE7A4();
        }
        v17 = v13;
        v18 = 105;
LABEL_24:
        sub_10018C280(v17, v18);
        break;
    }
  }
}

uint64_t sub_10018C1B8(uint64_t a1, unsigned int a2)
{
  unsigned int v4;
  uint64_t v5;
  NSObject *v7;

  if (!sub_10019AB28(a1))
    return 1301;
  if (sub_10017FD9C())
    v4 = 800;
  else
    v4 = a2;
  if (v4 <= *(unsigned __int16 *)(a1 + 142))
    LOWORD(v4) = *(_WORD *)(a1 + 142);
  *(_WORD *)(a1 + 140) = v4;
  if (*(_BYTE *)(a1 + 144))
    return 0;
  v5 = sub_10004C9BC(97, sub_10018C31C);
  if ((_DWORD)v5)
  {
    if (sub_10005549C())
    {
      sub_100054530("OI_HCICMD_WriteLinkSupervisionTimeout failed %!", v5);
      v7 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
  return v5;
}

void sub_10018C280(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  int v5;
  void (*v6)(uint64_t, uint64_t, _QWORD);

  if (!sub_10019AB28(a1))
    sub_100253460();
  v4 = *(_QWORD **)(a1 + 120);
  if (!v4)
  {
    sub_100253460();
    v4 = *(_QWORD **)(a1 + 120);
  }
  v6 = (void (*)(uint64_t, uint64_t, _QWORD))v4[1];
  sub_100053298(v4);
  *(_QWORD *)(a1 + 120) = 0;
  v5 = *(unsigned __int8 *)(a1 + 54);
  if ((v5 - 6) >= 2)
  {
    if (v5 == 5)
      *(_BYTE *)(a1 + 54) = 0;
    else
      sub_100253460();
  }
  if (v6)
    v6(a2, a1 + 48, *(unsigned __int8 *)(a1 + 144));
}

void sub_10018C31C(uint64_t a1)
{
  NSObject *v2;

  if ((_DWORD)a1 && sub_10005549C())
  {
    sub_100054530("Failed to write LinkTO %!", a1);
    v2 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
      sub_1006CE80C();
  }
}

void sub_10018C38C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  NSObject *v21;
  uint64_t v22;
  NSObject *v23;
  char *v24;
  char v25;
  uint64_t v26;
  const void *v27[2];
  uint64_t v28;

  v28 = a2;
  if ((_DWORD)xmmword_1009991F8)
  {
    if (*(_BYTE *)(a2 + 54) == 5)
    {
      v11 = *(_BYTE **)(a2 + 120);
      if (!v11)
      {
        sub_100253460();
        v11 = *(_BYTE **)(a2 + 120);
      }
      switch(*v11)
      {
        case 0:
        case 2:
          return;
        case 1:
          if ((_DWORD)a1 || (_DWORD)a3)
          {
            if (sub_10005549C())
            {
              sub_100054530("Failed to disable encryption %! %:, encrypt = %d", a1, a2 + 48, a3);
              v21 = sub_1000544A0(0x2Cu);
              if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
LABEL_28:
                sub_1006CE7A4();
            }
LABEL_29:
            v17 = a2;
            v18 = 1335;
LABEL_36:
            sub_10018C280(v17, v18);
          }
          else
          {
            v12 = v11[1];
            if (*(unsigned __int8 *)(a2 + 144) == (_DWORD)v12)
            {
              v13 = sub_100196768(0x10u, a2, a3, a4, a5, a6, a7, a8, a2);
              if ((_DWORD)v13)
              {
                v14 = v13;
                if (!sub_10005549C())
                  goto LABEL_35;
                sub_100054530("OI_HCICMD_SetConnectionEncryption failed %!", v14, 1);
                v15 = sub_1000544A0(0x2Cu);
                if (!os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
                  goto LABEL_35;
                goto LABEL_34;
              }
              v24 = *(char **)(a2 + 120);
              v25 = 3;
            }
            else
            {
              v26 = v12;
              v22 = sub_100196768(0x2Fu, a2, a3, a4, a5, a6, a7, a8, a2 + 48);
              if ((_DWORD)v22)
              {
                v14 = v22;
                if (!sub_10005549C())
                  goto LABEL_35;
                sub_100054530("OI_HCICMD_SwitchRole failed %!", v14, v26);
                v23 = sub_1000544A0(0x2Cu);
                if (!os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
                  goto LABEL_35;
LABEL_34:
                sub_1006CE7A4();
LABEL_35:
                v17 = a2;
                v18 = v14;
                goto LABEL_36;
              }
              v24 = *(char **)(a2 + 120);
              v25 = 2;
            }
            *v24 = v25;
          }
          break;
        case 3:
          v19 = *(unsigned int *)(a2 + 244);
          if ((_DWORD)v19)
          {
            sub_100049F6C(v19);
            *(_DWORD *)(a2 + 244) = 0;
          }
          if ((_DWORD)a1 || (_DWORD)a3)
          {
            sub_10018C280(a2, a1);
            return;
          }
          if (sub_10005549C())
          {
            sub_100054530("Failed to re-enable encryption after role switch");
            v20 = sub_1000544A0(0x2Cu);
            if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
              goto LABEL_28;
          }
          goto LABEL_29;
        default:
          sub_100253460();
          if (sub_10005549C())
          {
            sub_100054530("OI_HCIEventHandler_RoleChange %!", 105);
            v16 = sub_1000544A0(0x2Cu);
            if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
              sub_1006CE7A4();
          }
          v17 = a2;
          v18 = 105;
          goto LABEL_36;
      }
    }
    else if (!(_DWORD)a3)
    {
      v27[1] = &v28;
      v27[0] = (const void *)8;
      sub_10004A9EC((uint64_t)sub_10018C65C, v27, 10, (int *)(a2 + 244));
    }
  }
}

void sub_10018C65C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;

  v1 = **(_QWORD **)(a1 + 8);
  if (sub_10019AB28(v1))
  {
    if (sub_10024B768(v1))
    {
      *(_DWORD *)(v1 + 244) = 0;
    }
    else if (sub_100196768(0x10u, v2, v3, v4, v5, v6, v7, v8, v1) && sub_10005549C())
    {
      sub_100054530("Could not re-enable encryption on the link.");
      v9 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
}

void sub_10018C6F8(uint64_t a1)
{
  unsigned int v2;
  const char *v3;
  NSObject *v4;
  const char *v5;
  NSObject *v6;

  v2 = *(unsigned __int8 *)(a1 + 54);
  if (*(_QWORD *)(a1 + 120))
  {
    sub_10018C280(a1, 1301);
    if (v2 != 5)
    {
      if (sub_10005549C())
      {
        v3 = sub_10019C5F4(v2);
        sub_100054530("Connection Handle state inconsistent: %s", v3);
        v4 = sub_1000544A0(0x2Cu);
        if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
    }
  }
  if (*(_QWORD *)(a1 + 128))
  {
    sub_10018C7F8(a1, 1301);
    if (v2 != 4)
    {
      if (sub_10005549C())
      {
        v5 = sub_10019C5F4(v2);
        sub_100054530("Connection Handle state inconsistent: %s", v5);
        v6 = sub_1000544A0(0x2Cu);
        if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
    }
  }
}

uint64_t sub_10018C7F8(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  int v5;
  unsigned int *v7;
  uint64_t v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  if (!sub_10019AB28(a1))
    sub_100253460();
  v4 = *(_QWORD **)(a1 + 128);
  if (!v4)
  {
    sub_100253460();
    v4 = *(_QWORD **)(a1 + 128);
  }
  if (!*v4)
    sub_100253460();
  v5 = *(unsigned __int8 *)(a1 + 54);
  if ((v5 - 6) >= 2 && v5 != 0)
  {
    if (v5 == 4)
      *(_BYTE *)(a1 + 54) = 0;
    else
      sub_100253460();
  }
  v7 = *(unsigned int **)(a1 + 128);
  v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))v7;
  v8 = v7[3];
  sub_100053298(v7);
  *(_QWORD *)(a1 + 128) = 0;
  return v10(a2, a1 + 48, v8);
}

BOOL sub_10018C8A4(_BOOL8 result)
{
  char v1;

  v1 = result;
  if (result && !byte_100984342)
    result = sub_10018BBF4(0);
  byte_100984342 = v1;
  return result;
}

uint64_t sub_10018C8DC()
{
  return byte_100984342;
}

void sub_10018C8E8(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  int *v6;
  int v7;

  v7 = a2;
  v6 = &v7;
  v5 = 4;
  if (a1)
  {
    if (*(_BYTE *)(a1 + 54) != 5)
    {
      v2 = sub_10004AE90((uint64_t)sub_10018BA08, (const void **)&v5, 0);
      if ((_DWORD)v2)
      {
        v3 = v2;
        if (sub_10005549C())
        {
          sub_100054530("Gentle Central dispatch failed %!", v3, v5, v6);
          v4 = sub_1000544A0(0x2Cu);
          if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
            sub_1006CEE54();
        }
      }
    }
  }
}

uint64_t sub_10018C98C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  NSObject *v16;
  NSObject *v17;
  void *v18;
  uint64_t v20;

  if (!sub_10019AB28(a2))
    sub_100253460();
  if (*(_BYTE *)(a2 + 54))
    sub_100253460();
  if (*(unsigned __int8 *)(a2 + 144) == (_DWORD)a3)
    sub_100253460();
  if (*(_QWORD *)(a2 + 120))
    sub_100253460();
  v6 = sub_100052DC0(0x10uLL);
  *(_QWORD *)(a2 + 120) = v6;
  if (v6)
  {
    v6[1] = a3;
    *(_QWORD *)(*(_QWORD *)(a2 + 120) + 8) = a1;
    if (sub_10024B768(a2)
      && (*(_BYTE *)(qword_100998F48 + 13) || (*(_BYTE *)(a2 + 263) & 4) == 0 || (byte_100998F69 & 4) == 0))
    {
      v14 = sub_100196768(0x10u, v7, v8, v9, v10, v11, v12, v13, a2);
      if (!(_DWORD)v14)
      {
        *(_BYTE *)(a2 + 54) = 5;
        **(_BYTE **)(a2 + 120) = 1;
        return v14;
      }
      if (!sub_10005549C())
        goto LABEL_26;
      sub_100054530("OI_HCICMD_SetConnectionEncryption failed %!", v14, 0);
      v15 = sub_1000544A0(0x2Cu);
      if (!os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
        goto LABEL_26;
      goto LABEL_25;
    }
    v20 = a3;
    v14 = sub_100196768(0x2Fu, v7, v8, v9, v10, v11, v12, v13, a2 + 48);
    if (!(_DWORD)v14)
    {
      *(_BYTE *)(a2 + 54) = 5;
      **(_BYTE **)(a2 + 120) = 0;
      return v14;
    }
    if (sub_10005549C())
    {
      sub_100054530("OI_HCICMD_SwitchRole failed %!", v14, v20);
      v17 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
LABEL_25:
        sub_1006CE7A4();
    }
  }
  else
  {
    if (sub_10005549C())
    {
      v14 = 106;
      sub_100054530("OI_Malloc failed %!", 106);
      v16 = sub_1000544A0(0x2Cu);
      if (!os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
        goto LABEL_26;
      sub_1006CE7A4();
    }
    v14 = 106;
  }
LABEL_26:
  v18 = *(void **)(a2 + 120);
  if (v18)
    sub_100053298(v18);
  return v14;
}

void sub_10018CB90(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  NSObject *v13;
  NSObject *v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);

  if (!a2)
  {
    if (!sub_10005549C())
      return;
    sub_100054530("roleChangeCb : NULL address");
    v12 = sub_1000544A0(0x2Cu);
    if (!os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      return;
LABEL_11:
    sub_1006CE7A4();
    return;
  }
  v6 = sub_10019AEA4(a2);
  if (!v6)
  {
    if (!sub_10005549C())
      return;
    sub_100054530("roleChangeCb : The connection is gone.");
    v13 = sub_1000544A0(0x2Cu);
    if (!os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      return;
    goto LABEL_11;
  }
  v7 = v6;
  if (!*(_BYTE *)(v6 + 213))
    return;
  *(_BYTE *)(v6 + 213) = 0;
  v8 = *(_QWORD *)(v6 + 216);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 216);
  if ((_DWORD)a1)
  {
    if (sub_10005549C())
    {
      sub_100054530("roleChangeCb : Cound not change mode : %!", a1);
      v9 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    v10 = *(unsigned __int8 *)(v7 + 144);
    v11 = a1;
LABEL_20:
    v16(v11, a2, v10);
    return;
  }
  if (a3)
  {
    if (sub_10005549C())
    {
      sub_100054530("roleChangeCb : why didn't we unsniff ? We want to change role !");
      v14 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    v10 = *(unsigned __int8 *)(v7 + 144);
    v11 = 0;
    goto LABEL_20;
  }
  v15 = sub_10018C98C(v8, v7, *(unsigned __int8 *)(v7 + 276));
  if ((_DWORD)v15)
    v16(v15, a2, *(unsigned __int8 *)(v7 + 144));
}

void sub_10018CD48(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  NSObject *v4;

  v3 = sub_10019AEA4(a2);
  if (v3)
  {
    if ((_DWORD)a1)
      sub_10018C7F8(v3, a1);
    else
      sub_10018CDE8(v3);
  }
  else if (sub_10005549C())
  {
    sub_100054530("enforcePolicyRsCb Orphaned!  %!", 105);
    v4 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
}

uint64_t sub_10018CDE8(uint64_t a1)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;

  if (!sub_10019AB28(a1))
    sub_100253460();
  if (*(_BYTE *)(a1 + 54))
    sub_100253460();
  v2 = *(_QWORD *)(a1 + 128);
  if (!v2)
  {
    sub_100253460();
    v2 = *(_QWORD *)(a1 + 128);
  }
  v3 = *(_WORD *)(v2 + 8) & 6;
  v4 = *(unsigned __int16 *)(a1 + 138);
  if (*(_BYTE *)(v2 + 10))
    v5 = 0;
  else
    v5 = v4 & 1;
  v6 = v3 | v5;
  *(_BYTE *)(a1 + 54) = 4;
  if ((_DWORD)v6 == v4)
    return sub_10018C7F8(a1, 0);
  *(_WORD *)(a1 + 138) = v6;
  v10 = v6;
  result = sub_10004C9BC(49, sub_10018CF00);
  if ((_DWORD)result)
  {
    v8 = result;
    *(_WORD *)(a1 + 138) = -1;
    if (sub_10005549C())
    {
      sub_100054530("OI_HCICMD_WriteLinkPolicySettings failed %!", v8, v10);
      v9 = sub_1000544A0(0x2Cu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return sub_10018C7F8(a1, v8);
  }
  return result;
}

void sub_10018CF00(uint64_t a1, uint64_t a2)
{
  NSObject *v4;
  NSObject *v5;

  if ((_DWORD)a1)
  {
    if (sub_10005549C()
      && (sub_100054530("enforcementWriteLinkPolicyCb failed %!", a1),
          v4 = sub_1000544A0(0x2Cu),
          os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)))
    {
      sub_1006CE7A4();
      if (a2)
        goto LABEL_5;
    }
    else if (a2)
    {
LABEL_5:
      *(_WORD *)(a2 + 138) = -1;
LABEL_7:
      sub_10018C7F8(a2, a1);
      return;
    }
  }
  else if (a2)
  {
    goto LABEL_7;
  }
  if (sub_10005549C())
  {
    sub_100054530("enforcementWriteLinkPolicyCb orphaned!  %!", 1301);
    v5 = sub_1000544A0(0x2Cu);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
}

uint64_t sub_10018CFE4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t result;

  if (!(_DWORD)xmmword_1009991F8)
    return 103;
  if (!a1)
    return 101;
  if (!a2)
  {
    v4 = &qword_100984348;
    if (qword_100984348)
      return 1327;
LABEL_10:
    result = 0;
    *v4 = a1;
    return result;
  }
  v3 = sub_10019AEA4(a2);
  if (v3)
  {
    v4 = (uint64_t *)(v3 + 80);
    if (*(_QWORD *)(v3 + 80))
      return 1327;
    goto LABEL_10;
  }
  return 1301;
}

uint64_t sub_10018D068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  if (!(_DWORD)xmmword_1009991F8)
    return 103;
  if (!a1)
    return 101;
  if (a2)
  {
    v5 = sub_10019AEA4(a2);
    if (v5)
    {
      v6 = v5;
      if (!*(_QWORD *)(v5 + 88))
      {
        result = 0;
        *(_QWORD *)(v6 + 88) = a1;
        *(_QWORD *)(v6 + 96) = a3;
        return result;
      }
      return 1327;
    }
    return 1301;
  }
  else
  {
    if (qword_100984350)
      return 1327;
    result = 0;
    qword_100984350 = a1;
  }
  return result;
}

uint64_t sub_10018D0F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t *v6;
  uint64_t result;

  if (!(_DWORD)xmmword_1009991F8)
    return 103;
  if (!a3)
  {
    qword_100984358 = a1;
    v6 = &qword_100984360;
    goto LABEL_7;
  }
  v5 = sub_10019AEA4(a3);
  if (v5)
  {
    *(_QWORD *)(v5 + 104) = a1;
    v6 = (uint64_t *)(v5 + 112);
LABEL_7:
    result = 0;
    *v6 = a2;
    return result;
  }
  return 1301;
}

uint64_t sub_10018D16C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  if (!(_DWORD)xmmword_1009991F8)
    return 103;
  if (result)
  {
    v1 = sub_10019AEA4(result);
    if (v1)
    {
      v2 = v1;
      result = 0;
      *(_QWORD *)(v2 + 104) = 0;
      *(_QWORD *)(v2 + 112) = 0;
    }
    else
    {
      return 1301;
    }
  }
  else
  {
    qword_100984358 = 0;
    qword_100984360 = 0;
  }
  return result;
}

uint64_t sub_10018D1C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v4 = 0;
  if (!(_DWORD)xmmword_1009991F8)
    return 103;
  v1 = sub_10019AEA4(a1);
  if (!v1)
    return 1301;
  v2 = v1;
  if (sub_10019C4B4(&v4))
  {
    while (*(_QWORD *)(v4 + 48) != v2 || *(_BYTE *)(v4 + 56))
    {
      if (!sub_10019C4B4(&v4))
        goto LABEL_7;
    }
    return 141;
  }
  else
  {
LABEL_7:
    result = 0;
    *(_QWORD *)(v2 + 80) = 0;
  }
  return result;
}

uint64_t sub_10018D258(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  if (!(_DWORD)xmmword_1009991F8)
    return 103;
  if (a1)
  {
    if (sub_10019AEFC(a1))
    {
      return 141;
    }
    else
    {
      result = sub_10019AEA4(a1);
      if (result)
      {
        v3 = result;
        result = 0;
        *(_QWORD *)(v3 + 88) = 0;
        *(_QWORD *)(v3 + 96) = 0;
      }
    }
  }
  else
  {
    result = 0;
    qword_100984350 = 0;
  }
  return result;
}

uint64_t sub_10018D2CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  if (!(_DWORD)xmmword_1009991F8)
    return 103;
  if (!sub_10019ABD0(a1))
    return 1301;
  v9 = sub_100196768(5u, v2, v3, v4, v5, v6, v7, v8, a1);
  result = sub_1001A1F70(a1, v9);
  if (!(_DWORD)result)
    byte_100984373 = 1;
  return result;
}

uint64_t sub_10018D344()
{
  uint64_t result;

  result = dword_100984374;
  if (dword_100984374)
    return sub_1002539B8(dword_100984374);
  return result;
}

uint64_t sub_10018D358(uint64_t a1)
{
  uint64_t v1;
  unsigned int v5;
  int v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;

  if (!(_DWORD)xmmword_1009991F8)
    return 103;
  if (HIBYTE(word_100984369))
    return 1319;
  if ((_BYTE)word_100984369)
  {
    if (*(_DWORD *)a1 != dword_10098436D || *(unsigned __int16 *)(a1 + 4) != (unsigned __int16)word_100984371)
      return 1319;
  }
  v5 = sub_10019C270();
  if (v5 >= *(unsigned __int8 *)(sub_100252DE8(0x28u) + 1))
  {
    if (sub_10005549C())
    {
      v7 = sub_100252DE8(0x28u);
      v1 = 1309;
      sub_100054530("OI_DEVMGR_ScoCreateConnection: %! (%d) %:", 1309, *(unsigned __int8 *)(v7 + 1), a1);
      v8 = sub_1000544A0(0x3Eu);
      if (!os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
        return v1;
      sub_1006CE7A4();
    }
    return 1309;
  }
  if (!qword_100984348)
  {
    v9 = sub_10019AEA4(a1);
    if (!v9 || !*(_QWORD *)(v9 + 80))
      return 1328;
  }
  v1 = sub_10017FDB8((uint64_t)sub_10018D4C0, a1);
  if (!(_DWORD)v1)
  {
    *(__int16 *)((char *)&word_100984369 + 1) = 1;
    v6 = *(_DWORD *)a1;
    word_100984371 = *(_WORD *)(a1 + 4);
    dword_10098436D = v6;
    dword_100984374 = 0;
    byte_10098436C = 0;
  }
  return v1;
}

void sub_10018D4C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSObject *v3;

  if (HIBYTE(word_100984369))
  {
    sub_10018DD0C(a1, a3, 3, 0);
  }
  else
  {
    if (!(_DWORD)a1)
      sub_100253460();
    if (sub_10005549C())
    {
      sub_100054530("Orphan connectAclForScoCb");
      v3 = sub_1000544A0(0x3Eu);
      if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
}

uint64_t sub_10018D544(__int16 *a1, char *a2, size_t a3, char a4)
{
  NSObject *v4;

  if (!(_DWORD)xmmword_1009991F8)
    return 103;
  if (!byte_100984373)
    return sub_1001A0C64(a1, a2, a3, a4);
  if (sub_10005549C())
  {
    sub_100054530("Sco Disconnect is in progress");
    v4 = sub_1000544A0(0x3Eu);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
  return 1347;
}

uint64_t sub_10018D5D0()
{
  return byte_100984373;
}

uint64_t sub_10018D5DC(_WORD *a1, _WORD *a2)
{
  __int16 v3;
  uint64_t result;

  if (!(_DWORD)xmmword_1009991F8)
    return 103;
  if (a1 && a2)
  {
    sub_1001A0FF4(a1);
    v3 = sub_1001A1220();
    result = 0;
    *a2 = v3;
  }
  else
  {
    sub_100253460();
    return 101;
  }
  return result;
}

uint64_t sub_10018D638(int a1, int a2)
{
  if (!(_DWORD)xmmword_1009991F8)
    return 103;
  if (a1 && a2)
    return sub_1001A1038(a1, a2);
  sub_100253460();
  return 101;
}

uint64_t sub_10018D67C()
{
  if ((_DWORD)xmmword_1009991F8)
    return sub_1001A1080();
  else
    return 103;
}

void sub_10018D698()
{
  word_100984369 = 0;
  byte_100984373 = 0;
  qword_100984348 = 0;
  qword_100984350 = 0;
  qword_100984358 = 0;
  qword_100984360 = 0;
}

uint64_t sub_10018D6CC(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  int v6;
  BOOL v8;
  __int16 *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  NSObject *v14;
  void *v15;
  NSObject *v16;
  void *v17;
  unsigned __int16 *v18;
  uint8_t buf[4];
  void *v20;

  v5 = a1 + 48;
  v4 = *(_DWORD *)(a1 + 48);
  v18 = 0;
  v6 = 0;
  if (dword_10098436D == v4 && word_100984371 == *(_WORD *)(a1 + 52))
  {
    byte_100984373 = 0;
    if (HIBYTE(word_100984369))
      v8 = 1;
    else
      v8 = word_100984369 == 1;
    if (v8)
    {
      v9 = sub_10019B188((uint64_t)&dword_10098436D);
      sub_10018D91C((uint64_t)v9, v5, 0, a2);
      v6 = HIBYTE(word_100984369);
    }
    word_100984369 = 0;
  }
  v10 = *(_QWORD *)(a1 + 80);
  v11 = qword_100984348;
  result = sub_10019C4B4((uint64_t *)&v18);
  if ((_DWORD)result)
  {
    if (v10)
      v13 = v10;
    else
      v13 = v11;
    do
    {
      if (*((_QWORD *)v18 + 6) == a1)
      {
        if (v13)
          (*(void (**)(_QWORD))(v13 + 8))(0);
        if (sub_10005549C())
        {
          sub_100054530("Disconnecting SCO riding on top of ACL");
          v14 = sub_1000544A0(0x3Eu);
          if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
          {
            v15 = sub_100054494();
            *(_DWORD *)buf = 136446210;
            v20 = v15;
            _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
        sub_1001A0FCC();
        sub_10018014C(a1, 2u);
        sub_10019B934(v18);
        v18 = 0;
      }
      result = sub_10019C4B4((uint64_t *)&v18);
    }
    while ((result & 1) != 0);
  }
  if (v6 == 1)
  {
    if (sub_10005549C())
    {
      sub_100054530("Received disconnect while OB SCO connection was in progress");
      v16 = sub_1000544A0(0x3Eu);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
      {
        v17 = sub_100054494();
        *(_DWORD *)buf = 136446210;
        v20 = v17;
        _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    return sub_10018014C(a1, 2u);
  }
  return result;
}

void sub_10018D91C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  unsigned __int16 *v7;
  int v8;
  _BOOL4 v10;
  int v11;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  void (**v20)(uint64_t, uint64_t, unsigned __int16 *);
  void (*v21)(uint64_t, uint64_t, unsigned __int16 *);
  unsigned __int16 *v22;
  uint64_t v23;
  void (**v24)(uint64_t, _QWORD, uint64_t);

  if (a1)
  {
    *(_BYTE *)(a1 + 58) = a3;
    v7 = *(unsigned __int16 **)(a1 + 48);
    if (word_100984369 != 2)
    {
      v8 = HIBYTE(word_100984369);
      v10 = v7
         && HIBYTE(word_100984369) | word_100984369
         && *((_DWORD *)v7 + 12) == dword_10098436D
         && v7[26] == (unsigned __int16)word_100984371;
      goto LABEL_25;
    }
  }
  else
  {
    v11 = word_100984369;
    if (word_100984369 != 2)
    {
LABEL_68:
      if (byte_100984368)
        --byte_100984368;
      if ((v11 - 3) <= 1)
      {
        LOBYTE(word_100984369) = 0;
        v23 = sub_10019AEA4(a2);
        if (v23)
        {
          v24 = *(void (***)(uint64_t, _QWORD, uint64_t))(v23 + 80);
          if (v24)
          {
            if (*v24)
              (*v24)(a4, 0, a2);
          }
        }
      }
      return;
    }
    v7 = 0;
  }
  if ((_DWORD)a4)
  {
    LOBYTE(word_100984369) = 0;
    return;
  }
  v10 = 0;
  v8 = HIBYTE(word_100984369);
  if (v7 && HIBYTE(word_100984369))
    v10 = *((_DWORD *)v7 + 12) == dword_10098436D && v7[26] == (unsigned __int16)word_100984371;
  if (!a1)
  {
    v11 = 2;
    goto LABEL_68;
  }
LABEL_25:
  if (a3 == 2 && (_DWORD)a4 && v10 && v8 && ((a4 - 702) > 8 || ((1 << (a4 + 66)) & 0x1C1) == 0))
  {
    sub_10018DD0C(0, (uint64_t)v7, 0, a4);
    return;
  }
  if ((_DWORD)a4 && v10)
  {
    if (dword_100984374)
    {
      sub_100049F6C(dword_100984374);
      dword_100984374 = 0;
    }
    v13 = sub_10018014C((uint64_t)v7, 0x13u);
    if ((_DWORD)v13)
    {
      v14 = v13;
      if (sub_10005549C())
      {
        sub_100054530("OI_LP_DisconnectReq failed: %! (%d)", v14, *v7);
        v15 = sub_1000544A0(0x3Eu);
        if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
        {
          sub_1006CE7A4();
          if (!v10)
            goto LABEL_52;
          goto LABEL_49;
        }
      }
    }
LABEL_48:
    if (!v10)
      goto LABEL_52;
    goto LABEL_49;
  }
  if (v10 || (_DWORD)a4 != 0)
    goto LABEL_48;
  if (sub_10005549C())
  {
    sub_100054530("OI_HCIEventHandler_ConnectionComplete - unknown SCO connection (%:)", v7 + 24);
    v16 = sub_1000544A0(0x3Eu);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
    {
      sub_1006CE7A4();
      if (v7)
        goto LABEL_45;
      goto LABEL_44;
    }
  }
  if (!v7)
LABEL_44:
    sub_100253460();
LABEL_45:
  v17 = sub_10018007C((uint64_t)v7);
  if (!(_DWORD)v17)
    goto LABEL_48;
  v18 = v17;
  if (!sub_10005549C())
    goto LABEL_48;
  sub_100054530("OI_LP_ConnectionAdded failed: %! (%d)", v18, *v7);
  v19 = sub_1000544A0(0x3Eu);
  if (!os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
    goto LABEL_48;
  sub_1006CE7A4();
  if (!v10)
    goto LABEL_52;
LABEL_49:
  if (HIBYTE(word_100984369))
    HIBYTE(word_100984369) = 0;
  else
    LOBYTE(word_100984369) = 0;
LABEL_52:
  if (v7)
    v20 = (void (**)(uint64_t, uint64_t, unsigned __int16 *))*((_QWORD *)v7 + 10);
  else
    v20 = 0;
  if (!v20)
    v20 = (void (**)(uint64_t, uint64_t, unsigned __int16 *))qword_100984348;
  if (v20)
  {
    v21 = *v20;
    if (v21)
    {
      if ((_DWORD)a4 && HIBYTE(word_100984369) == 1)
        goto LABEL_66;
      if (v7)
        v22 = v7 + 24;
      else
        v22 = 0;
      v21(a4, a1, v22);
    }
  }
  if ((_DWORD)a4)
LABEL_66:
    sub_10019B934((unsigned __int16 *)a1);
}

BOOL sub_10018DC98(uint64_t a1)
{
  if (word_100984369 == 2)
    return 1;
  if (a1)
  {
    if (dword_10098436D != *(_DWORD *)a1 || word_100984371 != *(_WORD *)(a1 + 4))
      return 0;
  }
  if (byte_100984373)
    return 1;
  return (word_100984369 & 0xFB) != 0 && word_100984369 != 3 || HIBYTE(word_100984369) != 0;
}

void sub_10018DD0C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (**v17)(uint64_t, uint64_t, int *);
  _QWORD *v18;
  int v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  NSObject *v30;
  unsigned __int16 *v31;
  void (**v32)(uint64_t, uint64_t, int *);
  void (*v33)(uint64_t, uint64_t, int *);
  char *v34;
  NSObject *v35;
  const void *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint8_t buf[4];
  void *v41;

  sub_1001892C8();
  if (!HIBYTE(word_100984369))
    sub_100253460();
  v38 = 0;
  v39 = 0;
  v36 = 0;
  v37 = 0;
  if (!sub_10019AB28(a2))
    a2 = 0;
  if ((_DWORD)a1 || !a2)
  {
    if (!(_DWORD)a1)
      return;
LABEL_71:
    HIBYTE(word_100984369) = 0;
    if (!a2)
    {
      v32 = 0;
      goto LABEL_74;
    }
LABEL_72:
    v32 = *(void (***)(uint64_t, uint64_t, int *))(a2 + 80);
LABEL_74:
    if (!v32)
      v32 = (void (**)(uint64_t, uint64_t, int *))qword_100984348;
    if (v32)
    {
      v33 = *v32;
      if (v33)
        v33(a1, a2, &dword_10098436D);
    }
    return;
  }
  if (!sub_10019AB28(a2))
    sub_100253460();
  if (*(_DWORD *)(a2 + 48) != dword_10098436D || *(unsigned __int16 *)(a2 + 52) != (unsigned __int16)word_100984371)
    sub_100253460();
  v9 = *(char *)(a2 + 152);
  if ((v9 & 0x80000000) == 0)
  {
    if (*(_BYTE *)(sub_100252DE8(0x28u) + 10) && (*(_BYTE *)(a2 + 152) & 0x7F) == 2)
    {
      if (dword_100984374)
      {
        if (!a3)
          goto LABEL_30;
LABEL_23:
        LODWORD(v39) = a3 - 1;
        v37 = &v38;
        v38 = a2;
        LOWORD(v36) = 16;
        sub_10004A9EC((uint64_t)sub_10018F324, &v36, (42949673 * (unint64_t)(*(unsigned __int16 *)(a2 + 136) + 99)) >> 32, &dword_100984374);
        return;
      }
      if (!sub_100196768(0x2Au, v10, v11, v12, v13, v14, v15, v16, a2))
      {
        *(_BYTE *)(a2 + 152) |= 0x80u;
        if (a3)
          goto LABEL_23;
      }
    }
LABEL_30:
    dword_100984374 = 0;
    v18 = (_QWORD *)qword_100984358;
    if (!qword_100984358)
      v18 = &unk_10073A598;
    if (*(_QWORD *)(a2 + 104))
      v18 = *(_QWORD **)(a2 + 104);
    if (byte_10098436B)
    {
      v19 = 0;
      while (1)
      {
        v20 = (_QWORD *)*v18;
        if (!*v18)
          break;
        ++v19;
        v18 = (_QWORD *)*v18;
        if (byte_10098436B <= v19)
          goto LABEL_41;
      }
      v20 = v18;
      a1 = a4;
      if ((_DWORD)a4)
        goto LABEL_52;
    }
    else
    {
      v20 = v18;
    }
LABEL_41:
    ++byte_10098436B;
    if (!*((_WORD *)v20 + 9))
      sub_1001892C8();
    if (*(_BYTE *)(a2 + 224))
    {
      if (sub_1001862D0(a2))
        v27 = 1;
      else
        v27 = *((unsigned __int8 *)v20 + 20);
      if (*(_BYTE *)(a2 + 278))
        v28 = sub_1001FA904();
      else
        v28 = sub_100196768(0x1Au, v21, v22, v23, v24, v27, v25, v26, a2);
      a1 = v28;
      if (!(_DWORD)v28)
        goto LABEL_79;
    }
    else
    {
      a1 = 1360;
    }
LABEL_52:
    if (byte_10098436C > 2u)
      goto LABEL_65;
    ++byte_10098436C;
    byte_10098436B = -1;
    do
      v20 = (_QWORD *)*v20;
    while (v20);
    if (!*(_BYTE *)(a2 + 225) && sub_10019C1AC() > 1)
    {
      a1 = 13;
LABEL_65:
      if (sub_10005549C())
      {
        sub_100054530("SCO/eSCO connection failed, decrementing ACL reference counter and releasing SCO connection for addr=%:", &dword_10098436D);
        v30 = sub_1000544A0(0x3Eu);
        if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 136446210;
          v41 = sub_100054494();
          _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      v31 = (unsigned __int16 *)sub_10019AEFC((uint64_t)&dword_10098436D);
      if (v31)
        sub_10019B934(v31);
      sub_10018014C(a2, 0x13u);
      goto LABEL_71;
    }
    if (*(_BYTE *)(a2 + 278))
      v29 = sub_1001FA904();
    else
      v29 = sub_100196768(0x1Au, v10, v11, v12, v13, v14, v15, v16, a2);
    if (v29 == 628)
      a1 = a1;
    else
      a1 = v29;
    if ((_DWORD)a1)
      goto LABEL_65;
LABEL_79:
    if ((_DWORD)a4)
      return;
    v34 = sub_10019B558((uint64_t)&dword_10098436D);
    if (v34)
    {
      *((_QWORD *)v34 + 6) = a2;
      return;
    }
    if (sub_10005549C())
    {
      sub_100054530("Could not allocate sco connection handle");
      v35 = sub_1000544A0(0x3Eu);
      if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    HIBYTE(word_100984369) = 0;
    a1 = 106;
    goto LABEL_72;
  }
  if ((v9 & 0x7F) != 0)
    goto LABEL_23;
  sub_10018014C(a2, 0x13u);
  HIBYTE(word_100984369) = 0;
  v17 = *(void (***)(uint64_t, uint64_t, int *))(a2 + 80);
  if (!v17)
    v17 = (void (**)(uint64_t, uint64_t, int *))qword_100984348;
  if (v17 && *v17)
    (*v17)(1336, a2, &dword_10098436D);
}

uint64_t sub_10018E224(uint64_t a1, uint64_t a2, int a3)
{
  char v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  NSObject *v15;
  uint64_t v16;
  unsigned int v17;
  unsigned __int16 *v18;
  uint64_t v19;
  int v20;
  uint64_t result;
  uint64_t v22;
  NSObject *v23;
  NSObject *v24;
  char v25;

  if (a3)
  {
    if (a3 != 2)
      sub_100253460();
    v5 = 4;
  }
  else
  {
    v5 = 3;
  }
  v6 = sub_10019AEA4(a1);
  if (!v6)
  {
    if (!sub_10005549C())
      goto LABEL_35;
    sub_100054530("Cannot accept SCO connection, no ACL connection record for %:", a1);
    v15 = sub_1000544A0(0x3Eu);
    if (!os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      goto LABEL_35;
    goto LABEL_34;
  }
  if ((_BYTE)word_100984369)
  {
    if (sub_10005549C())
    {
      sub_100054530("Cannot accept SCO connection, Incoming sco connection already in progress (%:)", &dword_10098436D);
      v7 = sub_1000544A0(0x3Eu);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    if (!sub_10005549C())
      goto LABEL_35;
    sub_100054530("ob: %d\nib: %d", HIBYTE(word_100984369), word_100984369);
    v14 = sub_1000544A0(0x3Eu);
    if (!os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      goto LABEL_35;
LABEL_34:
    sub_1006CE7A4();
    goto LABEL_35;
  }
  v16 = v6;
  if (HIBYTE(word_100984369) && !*(_BYTE *)(v6 + 144))
  {
    if (!sub_10005549C())
      goto LABEL_35;
    sub_100054530("Cannot accept SCO connection, Outgoing sco connection already in progress (%:)", &dword_10098436D);
    v24 = sub_1000544A0(0x3Eu);
    if (!os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
      goto LABEL_35;
    goto LABEL_34;
  }
  v17 = sub_10019C270();
  if (v17 >= *(unsigned __int8 *)(sub_100252DE8(0x28u) + 1))
  {
    if (!sub_10005549C())
      goto LABEL_35;
    v22 = sub_100252DE8(0x28u);
    sub_100054530("Cannot accept SCO connection from %:, already reached max SCO connections (%d)", a1, *(unsigned __int8 *)(v22 + 1));
    v23 = sub_1000544A0(0x3Eu);
    if (!os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
      goto LABEL_35;
    goto LABEL_34;
  }
  if (HIBYTE(word_100984369))
  {
    if (*(_BYTE *)(v16 + 144) == 1)
    {
      HIBYTE(word_100984369) = 0;
      v18 = (unsigned __int16 *)sub_10019AEFC(a1);
      if (v18)
      {
        sub_10019B934(v18);
        sub_100186150(v16);
      }
    }
  }
  v19 = *(_QWORD *)(v16 + 80);
  if (!v19)
    v19 = qword_100984348;
  if (v19)
  {
    v8 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 16);
    if (v8)
    {
      LOBYTE(word_100984369) = v5;
      v20 = *(_DWORD *)a1;
      word_100984371 = *(_WORD *)(a1 + 4);
      dword_10098436D = v20;
      return v8(a1, a2);
    }
  }
LABEL_35:
  v25 = word_100984369;
  LOBYTE(word_100984369) = v5;
  result = sub_10018E4FC(a1, 0, (uint64_t)v8, v9, v10, v11, v12, v13);
  LOBYTE(word_100984369) = v25;
  ++byte_100984368;
  return result;
}

uint64_t sub_10018E4FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v10;
  NSObject *v11;
  uint64_t v12;
  NSObject *v14;
  NSObject *v15;
  unsigned __int16 v16;
  uint64_t v17;
  NSObject *v18;
  uint64_t v20;
  NSObject *v21;
  char *v22;
  char *v23;
  NSObject *v24;
  NSObject *v25;
  uint64_t v26;

  v8 = a2;
  v26 = 0;
  v10 = word_100984369;
  if (word_100984369 - 5 <= 0xFFFFFFFD)
  {
    if ((_DWORD)a2)
    {
      if (sub_10005549C())
      {
        sub_100054530("Cannot accept a Sco connection at this time (%:)", a1);
        v11 = sub_1000544A0(0x3Eu);
        if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
    }
    return 1310;
  }
  if (!(_DWORD)a2)
    goto LABEL_20;
  if (*(_DWORD *)a1 != dword_10098436D || *(unsigned __int16 *)(a1 + 4) != (unsigned __int16)word_100984371)
  {
    if (sub_10005549C())
    {
      sub_100054530("Cannot accept SCO for %:", a1);
      v14 = sub_1000544A0(0x3Eu);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
LABEL_19:
    v10 = word_100984369;
LABEL_20:
    if (v10 == 4)
      v16 = 29;
    else
      v16 = 9;
    v17 = sub_100196768(v16, a2, a3, a4, a5, a6, a7, a8, a1);
    if ((_DWORD)v17)
    {
      v12 = v17;
      if (sub_10005549C())
      {
        sub_100054530("OI_HCICMD to reject sco connect request failed %! (%:)", v12, a1);
        v18 = sub_1000544A0(0x3Eu);
        if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      LOBYTE(word_100984369) = 0;
    }
    else
    {
      LOBYTE(word_100984369) = 2;
      if (v8)
        return 1310;
      else
        return 0;
    }
    return v12;
  }
  if (sub_100182588(a1, &v26))
  {
    if (sub_10005549C())
    {
      sub_100054530("Cannot accept SCO connection, no ACL connection record for %:", a1);
      v15 = sub_1000544A0(0x3Eu);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    goto LABEL_19;
  }
  v20 = sub_10018E7F8(v26, 3);
  if ((_DWORD)v20)
  {
    v12 = v20;
    if (!sub_10005549C())
      return v12;
    sub_100054530("OI_DEVMGR_ScoConnectAccept failed: %! (%:)", v12, a1);
    v21 = sub_1000544A0(0x3Eu);
    if (!os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
      return v12;
LABEL_35:
    sub_1006CE7A4();
    return v12;
  }
  v22 = sub_10019B558(a1);
  if (v22)
  {
    v23 = v22;
    v12 = sub_10018007C(v26);
    if (!(_DWORD)v12)
    {
      *((_QWORD *)v23 + 6) = v26;
      return v12;
    }
    if (sub_10005549C())
    {
      sub_100054530("OI_LP_ConnectionAdded failed: %! (%:)", v12, a1);
      v24 = sub_1000544A0(0x3Eu);
      if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
        goto LABEL_35;
    }
  }
  else
  {
    if (sub_10005549C())
    {
      sub_100054530("Could not allocate sco connection handle");
      v25 = sub_1000544A0(0x3Eu);
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 106;
  }
  return v12;
}

uint64_t sub_10018E7F8(uint64_t a1, int a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  NSObject *v13;
  uint64_t v14;
  unsigned int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  NSObject *v28;
  const void *v30[2];
  _QWORD v31[2];

  if (word_100984369 - 3 >= 2)
    sub_100253460();
  if (!a1)
  {
    if (sub_10005549C())
    {
      sub_100054530("Can't find ACL connection for SCO!\n");
      v12 = sub_1000544A0(0x3Eu);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    LOBYTE(word_100984369) = 0;
    if (sub_10005549C())
    {
      v11 = 1301;
      sub_100054530("Accept sco connect request failed %! (unk)", 1301);
      v13 = sub_1000544A0(0x3Eu);
      if (!os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
        return v11;
      sub_1006CE7A4();
    }
    return 1301;
  }
  if (*(_BYTE *)(sub_100252DE8(0x28u) + 10) && *(_BYTE *)(a1 + 152) == 2)
  {
    if (dword_100984374)
    {
      if (a2)
      {
LABEL_8:
        v31[0] = a1;
        v31[1] = (a2 - 1);
        v30[1] = v31;
        v30[0] = (const void *)16;
        return sub_10004A9EC((uint64_t)sub_10018F3A8, v30, (42949673 * (unint64_t)(*(unsigned __int16 *)(a1 + 136) + 99)) >> 32, &dword_100984374);
      }
    }
    else if (!sub_100196768(0x2Au, v4, v5, v6, v7, v8, v9, v10, a1))
    {
      *(_BYTE *)(a1 + 152) |= 0x80u;
      if (a2)
        goto LABEL_8;
    }
  }
  dword_100984374 = 0;
  v14 = a1 + 48;
  if (*(_QWORD *)(a1 + 112))
    v15 = *(unsigned int **)(a1 + 112);
  else
    v15 = (unsigned int *)qword_100984360;
  if (v15)
  {
    v16 = *((unsigned __int16 *)v15 + 5);
    if (!*((_WORD *)v15 + 5))
      v16 = sub_1001892C8();
    if (word_100984369 == 3)
      v17 = 967;
    else
      v17 = *((unsigned __int16 *)v15 + 7);
    if (!*(_BYTE *)(a1 + 278))
    {
      v25 = sub_100196768(0x1Cu, *v15, v15[1], *((unsigned __int16 *)v15 + 4), v16, v8, v17, v10, a1 + 48);
      goto LABEL_32;
    }
  }
  else
  {
    sub_1001892C8();
    sub_1001862D0(a1);
    if (!*(_BYTE *)(a1 + 278))
    {
      v25 = sub_100196768(0x1Cu, v18, v19, v20, v21, v22, v23, v24, a1 + 48);
      goto LABEL_32;
    }
  }
  v25 = sub_1001FA98C();
LABEL_32:
  v11 = v25;
  if (!(_DWORD)v25)
  {
    LOBYTE(word_100984369) = 1;
    return v11;
  }
  LOBYTE(word_100984369) = 0;
  v26 = sub_10018014C(a1, 0x13u);
  if (sub_10005549C()
    && (sub_100054530("Accept sco connect request failed %! (%:)", v11, v14),
        v27 = sub_1000544A0(0x3Eu),
        os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)))
  {
    sub_1006CE7A4();
    if (!(_DWORD)v26)
      return v11;
  }
  else if (!(_DWORD)v26)
  {
    return v11;
  }
  if (sub_10005549C())
  {
    sub_100054530("OI_LP_DisconnectReq failed: %!", v26);
    v28 = sub_1000544A0(0x3Eu);
    if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
  return v11;
}

uint64_t sub_10018EB4C(uint64_t result, uint64_t a2, uint64_t a3)
{
  unsigned __int16 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  void (*v11)(_QWORD, uint64_t, uint64_t);
  NSObject *v12;
  uint8_t buf[4];
  void *v14;

  if (!(_DWORD)result)
  {
    if (*(_BYTE *)(a2 + 2))
    {
      byte_100984373 = 0;
      v5 = *(unsigned __int16 **)(a2 + 48);
      v6 = *((_QWORD *)v5 + 10);
      v7 = sub_10018014C((uint64_t)v5, 0x13u);
      if ((_DWORD)v7)
      {
        v8 = v7;
        if (sub_10005549C())
        {
          sub_100054530("OI_LP_DisconnectReq failed: %! (%d)", v8, *v5);
          v9 = sub_1000544A0(0x3Eu);
          if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
            sub_1006CE7A4();
        }
      }
      v10 = qword_100984348;
      if (v6)
        v10 = v6;
      if (v10)
      {
        v11 = *(void (**)(_QWORD, uint64_t, uint64_t))(v10 + 8);
        if (v11)
          v11(0, a2, a3);
      }
      if (sub_10005549C())
      {
        sub_100054530("Disconnecting SCO");
        v12 = sub_1000544A0(0x3Eu);
        if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 136446210;
          v14 = sub_100054494();
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      sub_1001A0FCC();
      return sub_100214878(0);
    }
    else
    {
      return sub_10018D6CC(a2, a3);
    }
  }
  return result;
}

uint64_t sub_10018ED04()
{
  uint64_t result;
  void (**v1)(void);
  void (*v2)(void);
  uint64_t v3;

  v3 = 0;
  result = sub_10019C4B4(&v3);
  if ((_DWORD)result)
  {
    do
    {
      if (!sub_10019AB28(*(_QWORD *)(v3 + 48)))
        sub_100253460();
      v1 = *(void (***)(void))(*(_QWORD *)(v3 + 48) + 88);
      if (v1)
      {
        v2 = *v1;
        if (v2)
          v2();
      }
      result = sub_10019C4B4(&v3);
    }
    while ((result & 1) != 0);
  }
  if (qword_100984350)
  {
    if (*(_QWORD *)qword_100984350)
      return (*(uint64_t (**)(void))qword_100984350)();
  }
  return result;
}

void sub_10018ED80()
{
  uint64_t v0;
  void (*v1)(void);

  if ((_DWORD)xmmword_1009991F8)
  {
    if (!sub_10019ABD0(qword_100984378))
      qword_100984378 = 0;
    do
    {
      if (!sub_10019C4B4(&qword_100984378))
        break;
      if (!sub_10019AB28(*(_QWORD *)(qword_100984378 + 48)))
        sub_100253460();
      v0 = *(_QWORD *)(*(_QWORD *)(qword_100984378 + 48) + 88);
      if (!v0)
        v0 = qword_100984350;
      if (v0)
      {
        v1 = *(void (**)(void))(v0 + 16);
        if (v1)
          v1();
      }
    }
    while ((sub_1001A12B0() & 1) != 0);
  }
}

void sub_10018EE20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  NSObject *v6;

  if (sub_10019ABD0(a1))
  {
    if ((_DWORD)xmmword_1009991F8)
    {
      if (!sub_10019AB28(*(_QWORD *)(a1 + 48)))
        sub_100253460();
      v4 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 88);
      if (!v4)
        v4 = qword_100984350;
      if (v4)
      {
        v5 = *(void (**)(uint64_t, uint64_t))(v4 + 24);
        if (v5)
          v5(a1, a2);
      }
    }
  }
  else if (sub_10005549C())
  {
    sub_100054530("OI_HCIEventHandler_ScoPacketComplete - %! 0x%x", 1338, a1);
    v6 = sub_1000544A0(0x3Eu);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
}

void sub_10018EEF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t);
  NSObject *v18;

  if (sub_10019ABD0(a2))
  {
    if ((_DWORD)xmmword_1009991F8)
    {
      if (!sub_10019AB28(*(_QWORD *)(a2 + 48)))
        sub_100253460();
      v12 = *(_QWORD *)(a2 + 48);
      v13 = *(_QWORD *)(v12 + 88);
      v14 = *(_QWORD *)(v12 + 96);
      v15 = qword_100984350;
      if (v13)
      {
        v15 = v13;
        v16 = v14;
      }
      else
      {
        v16 = 0;
      }
      if (v15)
      {
        v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t))(v15 + 32);
        if (v17)
          v17(a1, a2, a3, a4, a5, a6, *(unsigned __int8 *)(a2 + 57), v16);
      }
      *(_BYTE *)(a2 + 60) = a3;
      *(_BYTE *)(a2 + 61) = a4;
      sub_100214878(1u);
    }
  }
  else if (sub_10005549C())
  {
    sub_100054530("OI_HCIEventHandler_ScoConfigChanged - %! 0x%x", 1338, a2);
    v18 = sub_1000544A0(0x3Eu);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
}

void sub_10018F01C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  NSObject *v17;
  uint8_t buf[4];
  void *v19;

  if (!sub_10019ABD0(a1))
    sub_100253460();
  if ((_DWORD)xmmword_1009991F8)
  {
    if (!sub_10019ABD0(a1))
      sub_100253460();
    if (*(_BYTE *)(a5 + 8))
    {
      if (sub_10005549C())
      {
        sub_100054530("OI_HCIEventHandler_ScoDataPacketReceived: wakeupCause SCO Packet from BT Controller (handle=0x%hX erroneous=%hhu len=%hu)\n", a1, a4, a3);
        v10 = sub_1000544A0(0x3Eu);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 136446210;
          v19 = sub_100054494();
          _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
    }
    if (!(_DWORD)a4 || !*(_BYTE *)(a1 + 59))
    {
      v11 = *(_QWORD *)(a1 + 48);
      v12 = *(_QWORD *)(v11 + 88);
      v13 = *(_QWORD *)(v11 + 96);
      v14 = qword_100984350;
      if (v12)
      {
        v14 = v12;
        v15 = v13;
      }
      else
      {
        v15 = 0;
      }
      if (v14)
      {
        v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 8);
        if (v16)
          v16(a1, a4, a2, a3, v15, a5);
      }
    }
  }
  else if (sub_10005549C())
  {
    sub_100054530(" OI_STATUS_NOT_INITIALIZED");
    v17 = sub_1000544A0(0x3Eu);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
      sub_1006CEE54();
  }
}

void sub_10018F1CC(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v17 = sub_10019ABD0((uint64_t)a2);
  if ((_DWORD)a1 || v17)
  {
    sub_100180A54(a1, a2, a3, a4, 0, v18, v19, v20);
    if ((_DWORD)a1)
      return;
  }
  else
  {
    sub_100253460();
    sub_100180A54(0, a2, a3, a4, 0, v21, v22, v23);
  }
  sub_1001A0FC8(a9);
  a2[58] = a4;
  if (a5 | a4)
    v24 = a6;
  else
    v24 = 0;
  if (a5 | a4)
    v25 = a5;
  else
    v25 = 6;
  a2[57] = a9;
  sub_10018EEF4(0, (uint64_t)a2, v25, v24, a7, a8);
}

uint64_t sub_10018F2C4(uint64_t a1)
{
  uint64_t v3;

  if (HIBYTE(word_100984369) != 1 || dword_100984374 == 0)
    return 1301;
  sub_100049F6C(dword_100984374);
  dword_100984374 = 0;
  HIBYTE(word_100984369) = 0;
  v3 = sub_10019AEA4(a1);
  sub_10018014C(v3, 2u);
  return 0;
}

void sub_10018F324(uint64_t a1)
{
  NSObject *v1;

  if (HIBYTE(word_100984369))
  {
    sub_10018DD0C(0, **(_QWORD **)(a1 + 8), *(unsigned int *)(*(_QWORD *)(a1 + 8) + 8), 0);
  }
  else if (sub_10005549C())
  {
    sub_100054530("Orphan deferredConnectScoCb");
    v1 = sub_1000544A0(0x3Eu);
    if (os_log_type_enabled(v1, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
}

uint64_t sub_10018F3A8(uint64_t result)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t (**v4)(uint64_t, uint64_t, uint64_t);

  if (dword_100984374)
  {
    v1 = *(uint64_t **)(result + 8);
    v2 = *v1;
    result = sub_10018E7F8(*v1, *((unsigned int *)v1 + 2));
    if (v2 && (_DWORD)result != 0)
    {
      v4 = *(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v2 + 80);
      if (!v4)
        v4 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))qword_100984348;
      if (v4)
      {
        if (*v4)
          return (*v4)(result, v2, v2 + 48);
      }
    }
  }
  return result;
}

void sub_10018F420(int a1, void *a2, uint64_t a3)
{
  unsigned __int16 *v5;

  v5 = sub_100165D44(a1);
  sub_100166E14((uint64_t)v5, a2, a3);
}

uint64_t sub_10018F44C(uint64_t a1, char a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _WORD *a8, uint64_t a9)
{
  _WORD *v17;
  uint64_t v18;
  size_t v19;
  void *v20;
  int v21;
  _BYTE *v22;
  unsigned int v23;
  char v24;
  uint64_t v25;
  uint64_t v27;

  if (a1 && a5 && a6 && a8 && a9)
  {
    v17 = sub_100114588(0x120uLL);
    if (v17)
    {
      v18 = (uint64_t)v17;
      v17[64] = 200;
      v17[38] = 200;
      v19 = *(unsigned __int16 *)(sub_100252DE8(0x17u) + 8);
      *(_WORD *)(v18 + 74) = v19;
      v20 = sub_100052DC0(v19);
      *(_QWORD *)(v18 + 8) = v20;
      if (v20)
      {
        *(_QWORD *)(v18 + 40) = 0;
        *(_DWORD *)(v18 + 4) = 0;
        v21 = *(_DWORD *)a1;
        *(_WORD *)(v18 + 108) = *(_WORD *)(a1 + 4);
        *(_DWORD *)(v18 + 104) = v21;
        *(_DWORD *)(v18 + 276) = 1;
        *(_QWORD *)(v18 + 136) = a6;
        *(_BYTE *)(v18 + 56) = 0;
        *(_DWORD *)(v18 + 260) = -1;
        *(_QWORD *)(v18 + 152) = a5;
        *(_DWORD *)(v18 + 272) = a3;
        if (a3 || a7)
        {
          v22 = sub_100114588(0x9BuLL);
          *(_QWORD *)(v18 + 64) = v22;
          if (!v22)
          {
            v25 = 106;
            goto LABEL_28;
          }
          if (a3 == 2)
            v22[59] = 1;
          if (!a7)
          {
            v25 = 1721;
            goto LABEL_28;
          }
          *(_QWORD *)(v18 + 144) = a7;
        }
        if (a4)
        {
          v23 = *(unsigned __int8 *)(a4 + 8);
          if (v23 >= 5)
          {
            sub_100253460();
            v23 = *(unsigned __int8 *)(a4 + 8);
          }
          memmove((void *)(v18 + 160), *(const void **)a4, 24 * v23);
          v24 = *(_BYTE *)(a4 + 8);
        }
        else
        {
          v24 = 0;
        }
        *(_BYTE *)(v18 + 256) = v24;
        sub_100165CB4(v18);
        v27 = sub_100252DE8(0x17u);
        v25 = sub_10023E88C((uint64_t)sub_10018F6A4, off_10091D3D0, a1, a2, *(unsigned __int16 *)(v27 + 8), 0, (_WORD *)v18, a9);
        if (!(_DWORD)v25)
        {
          *a8 = *(_WORD *)(v18 + 280);
          ++dword_1009991A4;
          return v25;
        }
LABEL_28:
        sub_100165DD0(*(unsigned __int16 *)(v18 + 280));
        return v25;
      }
      sub_100053298((void *)v18);
    }
    return 104;
  }
  else
  {
    sub_100253460();
    return 101;
  }
}

void sub_10018F630(int a1, uint64_t a2)
{
  unsigned __int16 *v3;

  v3 = sub_100165D44(a1);
  if (v3)
  {
    if (!(_DWORD)a2)
    {
      if (*((_DWORD *)v3 + 69) <= 3u)
        a2 = 0;
      else
        a2 = 1709;
    }
    sub_100165E5C((uint64_t)v3, a2);
  }
}

void sub_10018F678(int a1, void *a2, size_t a3)
{
  unsigned __int16 *v5;

  v5 = sub_100165D44(a1);
  sub_1001666FC((uint64_t)v5, a2, a3);
}

void sub_10018F6A4(int a1, __int16 a2, uint64_t a3)
{
  unsigned __int16 *v5;
  uint64_t v6;
  NSObject *v7;

  v5 = sub_100165D44(a1);
  if (v5)
  {
    v6 = (uint64_t)v5;
    if (*((_DWORD *)v5 + 69) != 1)
      sub_100253460();
    if ((_DWORD)a3)
      goto LABEL_5;
    *(_WORD *)(v6 + 72) = a2;
    *(_DWORD *)(v6 + 276) = 2;
    if (*(_DWORD *)(v6 + 272))
    {
      (*(void (**)(_QWORD, _QWORD))(v6 + 144))(*(unsigned __int16 *)(v6 + 280), *(unsigned __int8 *)(*(_QWORD *)(v6 + 64) + 59));
    }
    else
    {
      a3 = sub_10016645C(v6, 200);
      if ((_DWORD)a3)
LABEL_5:
        sub_100165F98((unsigned __int16 *)v6, a3);
    }
  }
  else if (sub_10005549C())
  {
    sub_100054530("Error: null connection handle!");
    v7 = sub_1000544A0(0x17u);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      sub_1006CEF28(v7);
  }
}

uint64_t sub_10018F790(unsigned __int8 *a1, _QWORD *a2, _BYTE *a3, char *a4)
{
  uint64_t v4;
  int v5;
  unsigned __int8 *v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  char v10;
  int v11;

  v4 = 101;
  if (a3 && a2 && a4)
  {
    if (a1)
    {
      v5 = 240;
      v6 = a1;
      do
      {
        v7 = *v6;
        if (!*v6)
          break;
        if (v6[1] == 9)
        {
          if (v5 > v7)
          {
            v10 = 1;
LABEL_21:
            v4 = 0;
            *a3 = v7 - 1;
            *a4 = v10;
            *a2 = v6 + 2;
            return v4;
          }
          break;
        }
        v8 = v7 + 1;
        v6 += v8;
        v9 = __OFSUB__(v5, (_DWORD)v8);
        v5 -= v8;
      }
      while (!((v5 < 0) ^ v9 | (v5 == 0)));
      v11 = 240;
      do
      {
        v7 = *a1;
        if (!*a1)
          break;
        if (a1[1] == 8)
        {
          if (v11 <= v7)
            return 120;
          v10 = 0;
          v6 = a1;
          goto LABEL_21;
        }
        a1 += v7 + 1;
        v9 = __OFSUB__(v11, v7 + 1);
        v11 -= v7 + 1;
      }
      while (!((v11 < 0) ^ v9 | (v11 == 0)));
    }
    return 120;
  }
  return v4;
}

uint64_t sub_10018F848(unsigned __int8 *a1, int a2, int *a3)
{
  int v3;
  int v4;
  unsigned __int8 v5;
  char v6;
  int v7;
  unsigned __int8 *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  unsigned __int16 *v13;
  unsigned __int16 *v14;
  uint64_t v15;
  int v17;
  int v18;
  unsigned int v19;
  uint64_t result;
  int v21;

  if (!a3)
    return 101;
  v3 = 0;
  v4 = 0;
  *a3 = 0;
  v5 = 2;
  v6 = 15;
  do
  {
    if (!a1)
      goto LABEL_42;
    v7 = 240;
    v8 = a1;
    while (1)
    {
      v9 = *v8;
      if (!*v8)
        goto LABEL_42;
      if (v8[1] == v5)
        break;
      v10 = v9 + 1;
      v8 += v10;
      v11 = __OFSUB__(v7, (_DWORD)v10);
      v7 -= v10;
      if ((v7 < 0) ^ v11 | (v7 == 0))
        goto LABEL_42;
    }
    if (v7 <= v9)
      goto LABEL_42;
    v12 = (v9 - 1);
    if (v5 < 6u)
    {
      if (v5 < 4u)
      {
        if ((((_BYTE)v9 - 1) & 1) != 0)
        {
LABEL_49:
          v21 = 0;
          result = 131;
          goto LABEL_48;
        }
      }
      else if ((((_BYTE)v9 - 1) & 3) != 0)
      {
        goto LABEL_49;
      }
    }
    else if ((((_BYTE)v9 - 1) & 0xF) != 0)
    {
      goto LABEL_49;
    }
    if ((v5 & 1) != 0)
    {
      v6 -= v5;
      if (v3)
        goto LABEL_23;
      v3 = 3;
    }
    else
    {
      v3 = 2;
    }
    *a3 = v3;
LABEL_23:
    v13 = (unsigned __int16 *)(v8 + 2);
    while ((_BYTE)v12)
    {
      v14 = v13 + 8;
      LODWORD(v15) = v12;
      while (v5 - 6 < 2)
      {
        v15 = (v15 - 16);
        if (*((_QWORD *)v14 - 2) == 0x800000805F9B34FBLL && *((_DWORD *)v14 - 2) == 4096)
        {
          v4 = *((_DWORD *)v14 - 1);
          goto LABEL_40;
        }
        v14 += 8;
        if (!(_BYTE)v15)
          goto LABEL_42;
      }
      if (v5 - 4 < 2)
      {
        v18 = *(_DWORD *)v13;
        v13 += 2;
        v4 = v18;
        v15 = (v12 - 4);
      }
      else if (v5 - 2 > 1)
      {
        v15 = v12;
      }
      else
      {
        v17 = *v13++;
        v4 = v17;
        v15 = (v12 - 2);
      }
      v14 = v13;
LABEL_40:
      v12 = v15;
      v13 = v14;
      if (v4 == a2)
      {
        result = 0;
        goto LABEL_47;
      }
    }
LABEL_42:
    v19 = v5++;
  }
  while (v19 < 7);
  result = 120;
  if (v3 == 3 && !v6)
  {
LABEL_47:
    v21 = 1;
LABEL_48:
    *a3 = v21;
  }
  return result;
}

uint64_t sub_10018F9EC(unsigned __int8 *a1, uint64_t a2, int *a3, uint8x8_t a4)
{
  uint64_t v4;
  unsigned __int8 i;
  int v7;
  unsigned __int8 *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  int v12;
  int v13;
  unsigned __int8 *v14;
  int16x8_t v15;
  BOOL v16;
  uint64_t v18;
  uint64_t v19;

  v4 = 101;
  if (a2 && a3)
  {
    if (*(_QWORD *)(a2 + 4) == 0x8000008000100000 && *(_DWORD *)(a2 + 12) == -80438433)
      return sub_10018F848(a1, *(_DWORD *)a2, a3);
    *a3 = 0;
    for (i = 7; i > 5u; --i)
    {
      if (a1)
      {
        v7 = 240;
        v8 = a1;
        do
        {
          v9 = *v8;
          if (!*v8)
            break;
          if (v8[1] == i)
          {
            if (v7 <= v9)
              break;
            v12 = v9 - 1;
            if (i == 6)
              v13 = 2;
            else
              v13 = 1;
            *a3 = v13;
            if ((v12 & 0xF) != 0)
            {
              *a3 = 0;
              return 131;
            }
            else
            {
              if (!(_BYTE)v12)
                break;
              v14 = v8 + 7;
              while (1)
              {
                LODWORD(v18) = *(_DWORD *)(v14 + 7);
                a4.i32[0] = *(_DWORD *)(v14 + 3);
                v15 = (int16x8_t)vmovl_u8(a4);
                *(int16x4_t *)v15.i8 = vrev64_s16(*(int16x4_t *)v15.i8);
                a4 = (uint8x8_t)vmovn_s16(v15);
                HIDWORD(v18) = a4.i32[0];
                if (v18 == *(_QWORD *)a2)
                {
                  HIBYTE(v19) = *(v14 - 5);
                  BYTE6(v19) = *(v14 - 4);
                  BYTE5(v19) = *(v14 - 3);
                  BYTE4(v19) = *(v14 - 2);
                  BYTE3(v19) = *(v14 - 1);
                  BYTE2(v19) = *v14;
                  BYTE1(v19) = v14[1];
                  LOBYTE(v19) = v14[2];
                  v16 = v19 == *(_QWORD *)(a2 + 8);
                }
                else
                {
                  v16 = 0;
                }
                if (v16)
                  break;
                v14 += 16;
                v12 -= 16;
                if (!(_BYTE)v12)
                  goto LABEL_27;
              }
              v4 = 0;
              *a3 = 1;
            }
            return v4;
          }
          v10 = v9 + 1;
          v8 += v10;
          v11 = __OFSUB__(v7, (_DWORD)v10);
          v7 -= v10;
        }
        while (!((v7 < 0) ^ v11 | (v7 == 0)));
      }
LABEL_27:
      ;
    }
    return 120;
  }
  return v4;
}

uint64_t sub_10018FBB4(unsigned __int8 *a1, int a2, _BYTE *a3, unsigned __int8 **a4)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  unsigned __int8 *v9;

  v4 = 101;
  if (a3 && a4)
  {
    if (a1)
    {
      v5 = 240;
      do
      {
        v6 = *a1;
        if (!*a1)
          break;
        if (a1[1] == a2)
        {
          if (v5 <= v6)
            break;
          *a3 = v6 - 1;
          v9 = a1 + 2;
          goto LABEL_13;
        }
        v7 = v6 + 1;
        a1 += v7;
        v8 = __OFSUB__(v5, (_DWORD)v7);
        v5 -= v7;
      }
      while (!((v5 < 0) ^ v8 | (v5 == 0)));
    }
    v9 = 0;
LABEL_13:
    *a4 = v9;
    if (v9)
      return 0;
    else
      return 120;
  }
  return v4;
}

uint64_t sub_10018FC24()
{
  return 102;
}

uint64_t sub_10018FC2C(void *a1, _QWORD *a2)
{
  uint64_t v2;

  if (!DWORD2(xmmword_1009991F8))
    return 103;
  if (a2)
    *a2 = off_100998FD8;
  v2 = 0;
  off_100998FD8 = a1;
  return v2;
}

uint64_t sub_10018FC68(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (sub_10019AB28(a1))
    return sub_100196768(0x2Du, v2, v3, v4, v5, v6, v7, v8, a1);
  else
    return 101;
}

uint64_t sub_10018FCEC(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v2;
  NSObject *v3;
  NSObject *v4;

  if (qword_100984380)
    sub_100253460();
  if (!sub_10018297C())
  {
    byte_100984388 = 0;
    return 4831;
  }
  byte_100984388 = sub_1001EE55C();
  if ((byte_100984388 & 1) == 0)
    return 4831;
  off_100999100 = a1;
  v2 = sub_1001DC46C(7, 1, 8, 8u, &qword_100984380, (uint64_t)sub_1001EDF20);
  if ((_DWORD)v2 || !qword_100984380)
  {
    if (sub_10005549C())
    {
      sub_100054530("Could not register the Classic SecurityManager : %!", v2);
      v4 = sub_1000544A0(0x43u);
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
        sub_1006CEE54();
    }
    goto LABEL_16;
  }
  *(_WORD *)sub_1001E40C4(qword_100984380) = 65;
  *(_WORD *)(sub_1001E40C4(qword_100984380) + 2) = -1;
  v2 = sub_1001E2984((uint64_t)sub_10018FE5C, 7);
  if ((_DWORD)v2)
  {
    if (sub_10005549C())
    {
      sub_100054530("OI_ConnectMan_Register_FixedChannelInfo_callback returned %!", v2);
      v3 = sub_1000544A0(0x43u);
      if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
LABEL_16:
    sub_100253460();
  }
  return v2;
}

uint64_t sub_10018FE5C(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  v2 = 0;
  result = sub_100182588(a1, &v2);
  if (!(_DWORD)result)
  {
    if (byte_100984388)
      *(_BYTE *)(v2 + 304) = 1;
  }
  return result;
}

uint64_t sub_10018FE9C()
{
  uint64_t result;

  if (!byte_100984388)
    return 4831;
  result = qword_100984380;
  if (qword_100984380)
  {
    sub_1001DC658(qword_100984380);
    result = 0;
    qword_100984380 = 0;
  }
  return result;
}

uint64_t sub_10018FEE0(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  uint8_t v4;
  NSObject *v5;
  NSObject *v6;
  NSObject *v7;
  NSObject *v8;
  void *v9;
  NSObject *v11;
  NSObject *v12;
  uint64_t v13;
  _BYTE *v14;
  const char *v15;
  NSObject *v16;
  NSObject *v17;
  uint8_t buf[4];
  void *v19;

  if (sub_10005549C())
  {
    sub_100054530("StartPairing was called");
    v2 = sub_1000544A0(0x43u);
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      v19 = sub_100054494();
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (!byte_100984388)
  {
    if (!sub_10005549C())
      return 117;
    sub_100054530("Controller does not support Secured Connections");
    v6 = sub_1000544A0(0x43u);
    if (!os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      return 117;
LABEL_20:
    sub_1006CE7A4();
    return 117;
  }
  if (!sub_10019AB28(a1))
  {
    if (sub_10005549C())
    {
      sub_100054530("Connection is invalid");
      v7 = sub_1000544A0(0x43u);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 414;
  }
  if (!*(_BYTE *)(a1 + 304))
  {
    if (sub_10005549C())
    {
      sub_100054530("Remote does not support BR/EDR SMP");
      v8 = sub_1000544A0(0x43u);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        v9 = sub_100054494();
        *(_DWORD *)buf = 136446210;
        v19 = v9;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    return 414;
  }
  if (!off_100999100)
  {
    if (!sub_10005549C())
      return 117;
    sub_100054530("Local device does not support BR/EDR SMP");
    v11 = sub_1000544A0(0x43u);
    if (!os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      return 117;
    goto LABEL_20;
  }
  v3 = sub_100238034();
  if ((_DWORD)v3)
    return v3;
  *(_WORD *)buf = 1;
  if (byte_100984389)
    v4 = 0;
  else
    v4 = 32;
  buf[2] = 0;
  buf[3] = v4;
  LOWORD(v19) = 784;
  BYTE2(v19) = 3;
  if (sub_10019AB28(a1))
  {
    if (*(_BYTE *)(a1 + 144))
    {
      if (sub_10005549C())
      {
        sub_100054530("You cannot send this command when peripheral.");
        v5 = sub_1000544A0(0x43u);
        if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      return 4821;
    }
    v13 = sub_1001EE0AC(a1);
    if (v13)
    {
      v14 = (_BYTE *)v13;
      if (*(unsigned __int8 *)(v13 + 8) >= 0x11u)
      {
        if (sub_10005549C())
        {
          v15 = sub_1001EE594();
          sub_100054530("Cannot ask for pairing, device is already in state %s.", v15);
          v16 = sub_1000544A0(0x43u);
          if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
            sub_1006CEE54();
        }
        return 4804;
      }
LABEL_44:
      v14[72] = v4;
      v3 = sub_1001EE0F4(*(__int128 **)v14, (char *)buf, 7uLL, 1);
      if ((_DWORD)v3)
      {
        sub_1001EDD30(v14, v3, 1);
      }
      else
      {
        sub_1001EE5A0((uint64_t)v14, 17);
        *(_DWORD *)(v14 + 579) = *(_DWORD *)buf;
        *(_WORD *)(v14 + 583) = (_WORD)v19;
        v14[585] = BYTE2(v19);
      }
      return v3;
    }
    v14 = sub_1001EE3C4(a1);
    if (v14)
      goto LABEL_44;
    if (sub_10005549C())
    {
      sub_100054530("Could not allocate a pairing record for handle 0x%x", a1);
      v17 = sub_1000544A0(0x43u);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
        sub_1006CEE54();
    }
    return 104;
  }
  else
  {
    if (sub_10005549C())
    {
      sub_100054530("Invalid connection handle.");
      v12 = sub_1000544A0(0x43u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 4820;
  }
}

void sub_100190320()
{
  byte_100984389 = 1;
}

void sub_100190330()
{
  byte_10098438A = 1;
}

void sub_100190340(uint64_t a1, uint64_t a2, int a3)
{
  char *v6;
  NSObject *v7;
  char v8;
  NSObject *v9;
  NSObject *v10;
  NSObject *v11;
  NSObject *v12;
  NSObject *v13;
  char *v14;
  unsigned int v15;
  unsigned int v16;
  NSObject *v17;
  NSObject *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  NSObject *v23;
  NSObject *v24;
  uint8_t buf[4];
  void *v26;

  v6 = (char *)sub_1001EE0AC(a1);
  if (a3 != 6)
  {
    if (!sub_10005549C())
      goto LABEL_14;
    sub_100054530("Invalid Pairing Request size %d.", a3);
    v9 = sub_1000544A0(0x43u);
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      goto LABEL_14;
LABEL_13:
    sub_1006CE7A4();
LABEL_14:
    v8 = 8;
LABEL_22:
    sub_100191AF0((__int128 *)a1, v8, v6);
    return;
  }
  if (!off_100999100)
  {
    if (!sub_10005549C())
      goto LABEL_21;
    sub_100054530("Local device does not support BR/EDR SMP");
    v10 = sub_1000544A0(0x43u);
    if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      goto LABEL_21;
LABEL_20:
    sub_1006CE7A4();
LABEL_21:
    v8 = 14;
    goto LABEL_22;
  }
  if (!byte_100984388)
  {
    if (!sub_10005549C())
      goto LABEL_21;
    sub_100054530("Controller does not support Secured Connections");
    v11 = sub_1000544A0(0x43u);
    if (!os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      goto LABEL_21;
    goto LABEL_20;
  }
  if (!sub_10019AB28(a1))
  {
    if (sub_10005549C())
    {
      sub_100054530("Connection is invalid");
      v12 = sub_1000544A0(0x43u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return;
  }
  *(_BYTE *)(a1 + 304) = 1;
  if (!*(_BYTE *)(a1 + 144))
  {
    if (!sub_10005549C())
      goto LABEL_14;
    sub_100054530("You cannot send this command when peripheral.");
    v13 = sub_1000544A0(0x43u);
    if (!os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      goto LABEL_14;
    goto LABEL_13;
  }
  if (v6)
  {
    if (sub_10005549C())
    {
      sub_100054530("Classic SMP pairing is already in progress");
      v7 = sub_1000544A0(0x43u);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    v8 = 13;
    goto LABEL_22;
  }
  v14 = sub_1001EE3C4(a1);
  if (!v14)
  {
    if (sub_10005549C())
    {
      sub_100054530("Could not allocate new device...");
      v24 = sub_1000544A0(0x43u);
      if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    v6 = 0;
    goto LABEL_14;
  }
  v6 = v14;
  sub_1001EE460((uint64_t)v14, *(_BYTE *)a2, *(_BYTE *)(a2 + 1), *(_BYTE *)(a2 + 2), *(unsigned __int8 *)(a2 + 3), *(_BYTE *)(a2 + 4), *(_BYTE *)(a2 + 5));
  v15 = v6[82];
  if (v15 >= 8 || (v16 = v6[83], v16 >= 8))
  {
    if (!sub_10005549C())
      goto LABEL_21;
    sub_100054530("Invalid key distribution parameters initiator:0x%x, responder:0xx", v6[82]);
    v23 = sub_1000544A0(0x43u);
    if (!os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
      goto LABEL_21;
    goto LABEL_20;
  }
  v6[74] = v15 & 3;
  v6[75] = 0;
  v6[76] = v16 & 3;
  v6[77] = 0;
  sub_1001EE5A0((uint64_t)v6, 17);
  v6[72] = 0;
  if ((byte_100984389 & 1) == 0 && (v6[80] & 0x20) != 0)
  {
    v6[72] = 32;
    v6[593] = 1;
  }
  if (byte_10098438A == 1 && !v6[593])
  {
    if (sub_10005549C())
    {
      sub_100054530("Force replying with CT2=1");
      v17 = sub_1000544A0(0x43u);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136446210;
        v26 = sub_100054494();
        _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    v6[72] |= 0x20u;
    v6[593] = 1;
  }
  if (sub_10005549C())
  {
    sub_100054530("authReq=%x isSecuredConnectionControllerSupported=%d expectedKeys=%x requestedKeys=%x", v6[72], byte_100984388, v6[74], v6[76]);
    v18 = sub_1000544A0(0x43u);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      v19 = sub_100054494();
      *(_DWORD *)buf = 136446210;
      v26 = v19;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  v20 = sub_100191688(a1, v6[72], v6[74], v6[76]);
  if ((_DWORD)v20)
  {
    v21 = v20;
    if (sub_10005549C())
    {
      sub_100054530("smpSendPairingResponse failed with error %!", v21);
      v22 = sub_1000544A0(0x43u);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    goto LABEL_14;
  }
  if ((v6[76] & 2) != 0)
  {
    sub_100191884((uint64_t)v6);
    sub_1001919FC((uint64_t)v6);
    v6[77] |= 2u;
    sub_1001EE5A0((uint64_t)v6, 67);
  }
  if ((v6[74] & 2) == 0)
  {
    sub_1001EE5A0((uint64_t)v6, 65);
    sub_1001EDD30(v6, 0, 1);
  }
}

void sub_100190888(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6;
  NSObject *v7;
  NSObject *v8;
  NSObject *v9;
  char v10;
  NSObject *v11;
  NSObject *v12;
  NSObject *v13;
  unsigned int v14;
  unsigned int v15;
  NSObject *v16;
  NSObject *v17;
  NSObject *v18;
  NSObject *v19;
  uint8_t buf[4];
  void *v21;

  v6 = sub_1001EE0AC(a1);
  if (!off_100999100)
  {
    if (!sub_10005549C())
      goto LABEL_19;
    sub_100054530("Local device does not support BR/EDR SMP");
    v8 = sub_1000544A0(0x43u);
    if (!os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      goto LABEL_19;
    goto LABEL_18;
  }
  if (a3 != 6)
  {
    if (!sub_10005549C())
      goto LABEL_15;
    sub_100054530("Invalid Pairing Request size %d.", a3);
    v9 = sub_1000544A0(0x43u);
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      goto LABEL_15;
    goto LABEL_14;
  }
  if (!byte_100984388)
  {
    if (!sub_10005549C())
      goto LABEL_19;
    sub_100054530("Controller does not support Secured Connections");
    v11 = sub_1000544A0(0x43u);
    if (!os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      goto LABEL_19;
    goto LABEL_18;
  }
  if (sub_10019AB28(a1))
  {
    *(_BYTE *)(a1 + 304) = 1;
    if (*(_BYTE *)(a1 + 144))
    {
      if (!sub_10005549C())
        goto LABEL_15;
      sub_100054530("This command should only be received if we are central.");
      v7 = sub_1000544A0(0x43u);
      if (!os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
        goto LABEL_15;
      goto LABEL_14;
    }
    if (v6)
    {
      if (sub_1001EE68C(v6, 17))
      {
        sub_1001EE460(v6, *(_BYTE *)a2, *(_BYTE *)(a2 + 1), *(_BYTE *)(a2 + 2), *(unsigned __int8 *)(a2 + 3), *(_BYTE *)(a2 + 4), *(_BYTE *)(a2 + 5));
        sub_1001EE4C0((uint64_t *)v6);
        if ((*(_BYTE *)(v6 + 80) & 0xDF) != 0)
        {
          if (sub_10005549C())
          {
            sub_100054530("Invalid authentication requirements 0x%x.", *(unsigned __int8 *)(v6 + 80));
            v13 = sub_1000544A0(0x43u);
            if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
              sub_1006CE7A4();
          }
        }
        v14 = *(unsigned __int8 *)(v6 + 82);
        if (v14 <= 7)
        {
          v15 = *(unsigned __int8 *)(v6 + 83);
          if (v15 < 8)
          {
            *(_BYTE *)(v6 + 76) = v14 & 3;
            *(_BYTE *)(v6 + 75) = 0;
            *(_BYTE *)(v6 + 74) = v15 & 3;
            *(_BYTE *)(v6 + 77) = 0;
            if (sub_10005549C())
            {
              sub_100054530("We got those keys : requested(aka initiator)=0x%x expected(aka responder)=0x%x", *(unsigned __int8 *)(v6 + 76), *(unsigned __int8 *)(v6 + 74));
              v16 = sub_1000544A0(0x43u);
              if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)buf = 136446210;
                v21 = sub_100054494();
                _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
              }
            }
            if ((*(_BYTE *)(v6 + 80) & 0x20) != 0 && (*(_BYTE *)(v6 + 72) & 0x20) != 0)
              *(_BYTE *)(v6 + 593) = 1;
            sub_1001EE5A0(v6, 18);
            if ((*(_BYTE *)(v6 + 74) & 2) == 0)
            {
              sub_1001EE5A0(v6, 67);
              if ((*(_BYTE *)(v6 + 76) & 2) != 0)
              {
                sub_1001EE5A0(v6, 67);
                sub_100191884(v6);
                sub_1001919FC(v6);
                *(_BYTE *)(v6 + 77) |= 2u;
              }
              else
              {
                sub_1001EE5A0(v6, 65);
              }
              sub_1001EDD30((char *)v6, 0, 1);
            }
            return;
          }
        }
        if (!sub_10005549C()
          || (sub_100054530("Invalid key distribution parameters initiator:0x%x, responder:0xx", *(unsigned __int8 *)(v6 + 82)), v19 = sub_1000544A0(0x43u), !os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)))
        {
LABEL_19:
          v10 = 14;
          goto LABEL_20;
        }
LABEL_18:
        sub_1006CE7A4();
        goto LABEL_19;
      }
      if (!sub_10005549C())
        goto LABEL_15;
      sub_100054530("Pairing response was received without a pairing request for handle %d.", a1);
      v18 = sub_1000544A0(0x43u);
      if (!os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
        goto LABEL_15;
    }
    else
    {
      if (!sub_10005549C())
        goto LABEL_15;
      sub_100054530("We're not in pairing yet.");
      v17 = sub_1000544A0(0x43u);
      if (!os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
        goto LABEL_15;
    }
LABEL_14:
    sub_1006CE7A4();
LABEL_15:
    v10 = 8;
LABEL_20:
    sub_100191AF0((__int128 *)a1, v10, (char *)v6);
    return;
  }
  if (sub_10005549C())
  {
    sub_100054530("Connection is invalid");
    v12 = sub_1000544A0(0x43u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
}

void sub_100190D20(uint64_t a1, unsigned __int8 *a2, int a3)
{
  uint64_t *v5;
  char *v6;
  int v7;
  NSObject *v8;
  NSObject *v9;
  NSObject *v10;
  uint64_t v11;

  v5 = (uint64_t *)sub_1001EE0AC(a1);
  if (v5)
  {
    v6 = (char *)v5;
    sub_1001EE4C0(v5);
    if (a3 == 1)
    {
      v7 = *a2;
    }
    else
    {
      if (sub_10005549C())
      {
        sub_100054530("Invalid Pairing Failed size %d", a3);
        v9 = sub_1000544A0(0x43u);
        if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      v7 = 8;
    }
    if (sub_10005549C())
    {
      sub_100054530("Peer sent Pairing Failed with reason=%d", v7);
      v10 = sub_1000544A0(0x43u);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    v11 = sub_1001EE568(v7);
    sub_1001EDD30(v6, v11, 1);
  }
  else if (sub_10005549C())
  {
    sub_100054530("Could not find associated pairing data.");
    v8 = sub_1000544A0(0x43u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
}

__n128 sub_100190E58(uint64_t a1, __n128 *a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  NSObject *v9;
  NSObject *v10;
  NSObject *v11;
  __n128 result;
  NSObject *v13;
  NSObject *v14;
  NSObject *v15;
  NSObject *v16;
  NSObject *v17;
  uint8_t buf[4];
  void *v19;

  if (!off_100999100)
  {
    if (!sub_10005549C())
      goto LABEL_20;
    sub_100054530("Local device does not support BR/EDR SMP");
    v9 = sub_1000544A0(0x43u);
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      goto LABEL_20;
LABEL_19:
    sub_1006CE7A4();
LABEL_20:
    v7 = 0;
LABEL_21:
    sub_100191AF0((__int128 *)a1, 8, (char *)v7);
    return result;
  }
  if (a3 != 16)
  {
    if (!sub_10005549C())
      goto LABEL_20;
    sub_100054530("Invalid Identity Information size %d", a3);
    v10 = sub_1000544A0(0x43u);
    if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      goto LABEL_20;
    goto LABEL_19;
  }
  v6 = sub_1001EE0AC(a1);
  if (!v6)
  {
    if (!sub_10005549C())
      goto LABEL_20;
    sub_100054530("Could not find associated pairing data.");
    v11 = sub_1000544A0(0x43u);
    if (!os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      goto LABEL_20;
    goto LABEL_19;
  }
  v7 = v6;
  if (!byte_100984388)
  {
    if (!sub_10005549C())
      goto LABEL_21;
    sub_100054530("Controller does not support Secured Connections");
    v13 = sub_1000544A0(0x43u);
    if (!os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      goto LABEL_21;
LABEL_25:
    sub_1006CE7A4();
    goto LABEL_21;
  }
  if (!sub_10019AB28(a1))
  {
    if (sub_10005549C())
    {
      sub_100054530("Connection is invalid");
      v14 = sub_1000544A0(0x43u);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
        goto LABEL_28;
    }
    return result;
  }
  if (!*(_BYTE *)(a1 + 304))
  {
    if (sub_10005549C())
    {
      sub_100054530("Remote does not support BR/EDR SMP");
      v15 = sub_1000544A0(0x43u);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136446210;
        v19 = sub_100054494();
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    goto LABEL_21;
  }
  sub_1001EE4C0((uint64_t *)v7);
  if (*(_BYTE *)(v7 + 75))
    goto LABEL_34;
  if (!*(_BYTE *)(a1 + 144))
  {
    v8 = 66;
    goto LABEL_33;
  }
  if (!sub_1001EE68C(v7, 67))
  {
    if (!sub_10005549C())
      goto LABEL_21;
    sub_100054530("Central is sending keys before we are ...");
    v17 = sub_1000544A0(0x43u);
    if (!os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
      goto LABEL_21;
    goto LABEL_25;
  }
  v8 = 64;
LABEL_33:
  sub_1001EE5A0(v7, v8);
LABEL_34:
  if ((*(_BYTE *)(v7 + 74) & 2) != 0)
  {
    result = *a2;
    *(__n128 *)(v7 + 562) = *a2;
  }
  else if (sub_10005549C())
  {
    sub_100054530("We were not expecting IRK...");
    v16 = sub_1000544A0(0x43u);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
LABEL_28:
      sub_1006CE7A4();
  }
  return result;
}

void sub_10019119C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  _BOOL4 v8;
  NSObject *v10;
  NSObject *v11;
  NSObject *v12;
  NSObject *v13;
  NSObject *v14;
  NSObject *v15;
  NSObject *v16;
  NSObject *v17;
  BOOL v18;
  NSObject *v20;
  NSObject *v21;
  _BYTE buf[24];

  if (a3 != 7)
  {
    if (!sub_10005549C())
      goto LABEL_24;
    sub_100054530("Invalid Identity Address Information size %d", a3);
    v10 = sub_1000544A0(0x43u);
    if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      goto LABEL_24;
LABEL_23:
    sub_1006CE7A4();
LABEL_24:
    v6 = 0;
    goto LABEL_25;
  }
  v5 = sub_1001EE0AC(a1);
  if (!v5)
  {
    if (!sub_10005549C())
      goto LABEL_24;
    sub_100054530("Could not find associated pairing data.");
    v11 = sub_1000544A0(0x43u);
    if (!os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      goto LABEL_24;
    goto LABEL_23;
  }
  v6 = v5;
  if (!off_100999100)
  {
    if (!sub_10005549C())
      goto LABEL_25;
    sub_100054530("Local device does not support BR/EDR SMP");
    v12 = sub_1000544A0(0x43u);
    if (!os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      goto LABEL_25;
LABEL_49:
    sub_1006CE7A4();
    goto LABEL_25;
  }
  if (!byte_100984388)
  {
    if (!sub_10005549C())
      goto LABEL_25;
    sub_100054530("Controller does not support Secured Connections");
    v13 = sub_1000544A0(0x43u);
    if (!os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      goto LABEL_25;
    goto LABEL_49;
  }
  if (!sub_10019AB28(a1))
  {
    if (sub_10005549C())
    {
      sub_100054530("Connection is invalid");
      v14 = sub_1000544A0(0x43u);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return;
  }
  if (!*(_BYTE *)(a1 + 304))
  {
    if (sub_10005549C())
    {
      sub_100054530("Remote does not support BR/EDR SMP");
      v15 = sub_1000544A0(0x43u);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136446210;
        *(_QWORD *)&buf[4] = sub_100054494();
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    goto LABEL_25;
  }
  sub_1001EE4C0((uint64_t *)v6);
  if (!*(_BYTE *)(v6 + 75))
  {
    if (*(_BYTE *)(a1 + 144))
    {
      if (!sub_1001EE68C(v6, 64))
      {
LABEL_47:
        if (!sub_10005549C())
          goto LABEL_25;
        sub_100054530("We got an address without IRK.");
        v17 = sub_1000544A0(0x43u);
        if (!os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
          goto LABEL_25;
        goto LABEL_49;
      }
      if (*(_BYTE *)(a1 + 144))
        goto LABEL_8;
    }
    if (sub_1001EE68C(v6, 66))
      goto LABEL_8;
    goto LABEL_47;
  }
LABEL_8:
  if ((*(_BYTE *)(v6 + 74) & 2) != 0)
  {
    *(_BYTE *)(v6 + 75) |= 2u;
    buf[0] = *(_BYTE *)a2;
    *(_DWORD *)&buf[1] = *(_DWORD *)(a2 + 1);
    *(_WORD *)&buf[5] = *(_WORD *)(a2 + 5);
    sub_1001ED8B0(&buf[1], 6);
    if (buf[0])
    {
      if (!sub_10005549C())
        goto LABEL_25;
      sub_100054530("We got a remote address (%:) that is not public", &buf[1]);
      v16 = sub_1000544A0(0x43u);
      if (!os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
        goto LABEL_25;
      goto LABEL_66;
    }
    if (*(_DWORD *)&buf[1])
      v18 = 0;
    else
      v18 = *(unsigned __int16 *)&buf[5] == 0;
    if (v18)
    {
      if (!sub_10005549C())
        goto LABEL_25;
      sub_100054530("Identity address cannot be all 0.");
      v21 = sub_1000544A0(0x43u);
      if (!os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
        goto LABEL_25;
      goto LABEL_66;
    }
    if (*(_DWORD *)&buf[1] == *(_DWORD *)(*(_QWORD *)v6 + 48)
      && *(unsigned __int16 *)&buf[5] == *(unsigned __int16 *)(*(_QWORD *)v6 + 52))
    {
      goto LABEL_12;
    }
    if (sub_10005549C())
    {
      sub_100054530("Identity address cannot be different than the classic address.");
      v20 = sub_1000544A0(0x43u);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
LABEL_66:
        sub_1006CE7A4();
    }
LABEL_25:
    sub_100191AF0((__int128 *)a1, 8, (char *)v6);
    return;
  }
  if (sub_10005549C())
  {
    sub_100054530("We were not expecting address info...");
    v7 = sub_1000544A0(0x43u);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
LABEL_12:
  v8 = (*(_BYTE *)(v6 + 74) & 0xFE) == (*(_BYTE *)(v6 + 75) & 0xFE) || (*(_BYTE *)(v6 + 74) & 0xFE) == 0;
  if (*(_BYTE *)(a1 + 144))
  {
    if (v8)
    {
      sub_1001EE5A0(v6, 65);
LABEL_52:
      sub_1001EDD30((char *)v6, 0, 1);
    }
  }
  else if (v8)
  {
    sub_1001EE5A0(v6, 67);
    sub_100191884(v6);
    sub_1001919FC(v6);
    goto LABEL_52;
  }
}

uint64_t sub_100191688(uint64_t a1, char a2, char a3, char a4)
{
  uint64_t v5;
  __int128 **v6;
  uint64_t v7;
  NSObject *v8;
  NSObject *v9;
  NSObject *v10;
  const char *v11;
  NSObject *v12;
  __int16 v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;

  v14 = 2;
  v15 = 0;
  v16 = a2;
  v17 = 16;
  v18 = a3;
  v19 = a4;
  if (sub_10019AB28(a1))
  {
    if (*(_BYTE *)(a1 + 144))
    {
      v5 = sub_1001EE0AC(a1);
      if (v5)
      {
        v6 = (__int128 **)v5;
        if (sub_1001EE68C(v5, 17))
        {
          v7 = sub_1001EE0F4(*v6, (char *)&v14, 7uLL, 1);
          if ((_DWORD)v7)
          {
            if (sub_10005549C())
            {
              sub_100054530("SMP_SendPacket failed with error %!", v7);
              v8 = sub_1000544A0(0x43u);
              if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
                sub_1006CE7A4();
            }
            sub_1001EDD30((char *)v6, v7, 1);
          }
          else
          {
            sub_1001EE5A0((uint64_t)v6, 18);
          }
          return v7;
        }
        if (sub_10005549C())
        {
          v11 = sub_1001EE594();
LABEL_22:
          sub_100054530("Invalid pairing state for handle 0x%x : %s", a1, v11);
          v12 = sub_1000544A0(0x43u);
          if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
            sub_1006CE7A4();
        }
      }
      else if ((sub_10005549C() & 1) != 0)
      {
        v11 = "NULL";
        goto LABEL_22;
      }
      return 4823;
    }
    if (sub_10005549C())
    {
      sub_100054530("You cannot send smpSendPairingResponse command when peripheral.");
      v10 = sub_1000544A0(0x43u);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 4822;
  }
  else
  {
    if (sub_10005549C())
    {
      sub_100054530("This command is only available to Classic devices.");
      v9 = sub_1000544A0(0x43u);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 4820;
  }
}

void sub_100191884(uint64_t a1)
{
  NSObject *v2;
  char v3[17];

  v3[0] = 8;
  v3[1] = *(_BYTE *)sub_1001EDCF0();
  v3[2] = *((_BYTE *)sub_1001EDCF0() + 1);
  v3[3] = *((_BYTE *)sub_1001EDCF0() + 2);
  v3[4] = *((_BYTE *)sub_1001EDCF0() + 3);
  v3[5] = *((_BYTE *)sub_1001EDCF0() + 4);
  v3[6] = *((_BYTE *)sub_1001EDCF0() + 5);
  v3[7] = *((_BYTE *)sub_1001EDCF0() + 6);
  v3[8] = *((_BYTE *)sub_1001EDCF0() + 7);
  v3[9] = *((_BYTE *)sub_1001EDCF0() + 8);
  v3[10] = *((_BYTE *)sub_1001EDCF0() + 9);
  v3[11] = *((_BYTE *)sub_1001EDCF0() + 10);
  v3[12] = *((_BYTE *)sub_1001EDCF0() + 11);
  v3[13] = *((_BYTE *)sub_1001EDCF0() + 12);
  v3[14] = *((_BYTE *)sub_1001EDCF0() + 13);
  v3[15] = *((_BYTE *)sub_1001EDCF0() + 14);
  v3[16] = *((_BYTE *)sub_1001EDCF0() + 15);
  if (*(_BYTE *)(a1 + 9))
  {
    sub_1001EE0F4(*(__int128 **)a1, v3, 0x11uLL, 1);
  }
  else if (sub_10005549C())
  {
    sub_100054530("This link is not encrypted, cannot send IRK.");
    v2 = sub_1000544A0(0x43u);
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
}

void sub_1001919FC(uint64_t a1)
{
  uint8x8_t v2;
  int16x8_t v3;
  NSObject *v4;
  _DWORD v5[2];
  char v6[2];
  unsigned __int32 v7;
  char v8;
  char v9;

  *(_DWORD *)((char *)v5 + 3) = 0;
  v5[0] = 0;
  sub_1002246D4((uint64_t)v5);
  v6[0] = 9;
  v6[1] = v5[0];
  v2.i32[0] = *(_DWORD *)((char *)v5 + 3);
  v3 = (int16x8_t)vmovl_u8(v2);
  *(int16x4_t *)v3.i8 = vrev64_s16(*(int16x4_t *)v3.i8);
  v7 = vmovn_s16(v3).u32[0];
  v8 = BYTE2(v5[0]);
  v9 = BYTE1(v5[0]);
  if (*(_BYTE *)(a1 + 9))
  {
    sub_1001EE0F4(*(__int128 **)a1, v6, 8uLL, 1);
  }
  else if (sub_10005549C())
  {
    sub_100054530("This link is not encrypted, cannot send address.");
    v4 = sub_1000544A0(0x43u);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
}

void sub_100191AF0(__int128 *a1, char a2, char *a3)
{
  uint64_t v5;
  char v6[2];

  v6[0] = 5;
  v6[1] = a2;
  sub_1001EE0F4(a1, v6, 2uLL, 0);
  if (a3)
  {
    v5 = sub_1001EE568(a2);
    sub_1001EDD30(a3, v5, 1);
  }
}

void sub_100191B54(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  NSObject *v9;
  int v10;
  unsigned int v11;
  int v12;

  if ((_DWORD)a1)
  {
    if (sub_10005549C())
    {
      sub_100054530("Read max data length failed %!", a1);
      v9 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        sub_1006CEEC0();
    }
  }
  else
  {
    v10 = a5;
    v11 = a4;
    v12 = a3;
    sub_10004C9BC(199, (uint64_t (*)())sub_100191C6C, a3, a4, a5, a6, a7, a8, 0);
    sub_100218270(a2, v12, v11, v10);
  }
  sub_100191D74(0, "initCmdLeReadMaxDataLengthCB");
}

void sub_100191C6C(uint64_t a1)
{
  NSObject *v2;
  NSObject *v3;
  uint8_t buf[4];
  void *v5;

  if (sub_10005549C())
  {
    sub_100054530("_SetDefaultPhyCB status %!", a1);
    v2 = sub_1000544A0(0x2Eu);
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      v5 = sub_100054494();
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if ((_DWORD)a1 && sub_10005549C())
  {
    sub_100054530("Set default Phy failed with %!", a1);
    v3 = sub_1000544A0(0x2Eu);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
      sub_1006CEEC0();
  }
}

void sub_100191D74(uint64_t a1, const char *a2)
{
  NSObject *v5;
  NSObject *v6;
  NSObject *v7;

  if (dword_100998FC8 > 5 || ((1 << dword_100998FC8) & 0x32) == 0)
  {
    if (!sub_10005549C())
      return;
    sub_100054530("%s orphaned", a2);
    v7 = sub_1000544A0(0x2Eu);
    if (!os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      return;
LABEL_16:
    sub_1006CE7A4();
    return;
  }
  if (!qword_1009843A0)
  {
    if (!sub_10005549C())
      return;
    sub_100054530("%s orphaned", a2);
    v6 = sub_1000544A0(0x2Eu);
    if (!os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      return;
    goto LABEL_16;
  }
  if ((_DWORD)a1)
  {
    if (sub_10005549C())
    {
      sub_100054530("%s failed: %!", a2, a1);
      v5 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    sub_100252D38((void (**)(uint64_t))qword_1009843A0, a1);
  }
  else
  {
    sub_100252CD4(qword_1009843A0);
  }
}

uint64_t sub_100191EC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  NSObject *v9;
  uint64_t v11;

  if (!BYTE9(xmmword_100998F98))
    return 0;
  v8 = sub_10004C9BC(167, (uint64_t (*)())sub_100191F54, a3, a4, a5, a6, a7, a8, v11);
  if ((_DWORD)v8)
  {
    if (sub_10005549C())
    {
      sub_100054530("OI_HCICMD_LE_ReadAdvertisingChannelTxPower");
      v9 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
  }
  return v8;
}

void sub_100191F54(uint64_t a1, uint64_t a2)
{
  NSObject *v3;
  int v5;

  if ((_DWORD)a1)
  {
    if (sub_10005549C())
    {
      sub_100054530("Read LE Advertising TX power failed %!", a1);
      v3 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
        sub_1006CEEC0();
    }
  }
  else if (sub_100204FE0())
  {
    v5 = 0;
    do
      sub_100225214(a2, v5++);
    while (sub_100204FE0() > v5);
  }
}

uint64_t sub_100191FEC(uint64_t a1)
{
  uint64_t result;
  NSObject *v3;

  if (DWORD2(xmmword_1009991F8))
    return 140;
  if (a1)
  {
    if (sub_10005549C())
    {
      sub_100054530("OI_HCIAPI_Init: configuration parameter is deprecated");
      v3 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    sub_100252E2C(a1, 0x2Eu);
  }
  qword_100998FC0 = sub_100252DE8(0x2Eu);
  if (!qword_100998FC0)
  {
    sub_100253460();
    if (!qword_100998FC0)
      return 127;
  }
  dword_100998FC8 = 0;
  byte_100998FCC = 0;
  qword_100998FD0 = (uint64_t)off_10091D470;
  off_100998FD8 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))nullsub_101;
  off_100998FE0 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))nullsub_101;
  unk_100998FF9 = 0u;
  *(__int128 *)((char *)&xmmword_100999008 + 1) = 0u;
  xmmword_100999018 = 0u;
  byte_100998FF8 = 7;
  xmmword_100998FE8 = xmmword_10073A5C0;
  off_100984398 = 0;
  qword_1009843A0 = 0;
  off_1009843A8 = sub_100112D60;
  off_100999028 = 0;
  off_100999030 = 0;
  result = sub_10019AA28();
  if (!(_DWORD)result)
  {
    result = sub_100049F50();
    if (!(_DWORD)result)
    {
      result = sub_10019ED34();
      if (!(_DWORD)result)
      {
        result = sub_10019A7E8();
        if (!(_DWORD)result)
        {
          result = sub_1001A3CE4();
          if (!(_DWORD)result)
            DWORD2(xmmword_1009991F8) = 1;
        }
      }
    }
  }
  return result;
}

uint64_t sub_100192168(uint64_t a1)
{
  const void *v3[2];
  uint64_t v4;

  v4 = a1;
  if (!DWORD2(xmmword_1009991F8))
    return 103;
  dword_100998FC8 = 1;
  qword_1009843A0 = (uint64_t)off_10091D490;
  sub_100252B54(off_10091D490);
  if (!a1)
    return sub_100192204();
  v3[1] = &v4;
  v3[0] = (const void *)8;
  return sub_10004A9EC((uint64_t)sub_100192274, v3, 1, 0);
}

uint64_t sub_100192204()
{
  uint64_t result;

  if (!DWORD2(xmmword_1009991F8))
    return 103;
  result = 109;
  switch(dword_100998FC8)
  {
    case 0:
      sub_100253460();
      return 103;
    case 1:
      return result;
    case 2:
      result = 0;
      break;
    case 3:
      result = 108;
      break;
    default:
      sub_100253460();
      result = 637;
      break;
  }
  return result;
}

uint64_t sub_100192274(uint64_t a1)
{
  if (sub_100192204() == 109)
    return sub_10004A9EC((uint64_t)sub_100192274, (const void **)a1, 1, 0);
  else
    return (**(uint64_t (***)(void))(a1 + 8))();
}

uint64_t sub_1001922C4(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (dword_100998FC8 != 4)
    sub_100253460();
  if (qword_1009843A0)
    sub_100253460();
  if (off_100984398)
    sub_100253460();
  sub_1001A2130();
  sub_10019A84C();
  sub_10019F0B8();
  dword_100998FC8 = 5;
  qword_1009843A0 = *(_QWORD *)(v1 + 8);
  off_100984398 = *(_UNKNOWN **)v1;
  return sub_100252B54((_QWORD *)qword_1009843A0);
}

void sub_100192340()
{
  NSObject *v0;
  NSObject *v1;
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  NSObject *v6;
  void (**v7)(uint64_t);
  NSObject *v8;
  const void *v9[2];
  _QWORD v10[2];

  v9[0] = 0;
  if (sub_10005549C())
  {
    sub_100054530("OI_HCIIfc_DeviceHasBeenReset");
    v0 = sub_1000544A0(0x2Eu);
    if (os_log_type_enabled(v0, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
  if (DWORD2(xmmword_1009991F8))
  {
    switch(dword_100998FC8)
    {
      case 0:
      case 3:
        if (sub_10005549C())
        {
          sub_100054530("Device is not initialized, cannot restore device context");
          v1 = sub_1000544A0(0x2Eu);
          if (os_log_type_enabled(v1, OS_LOG_TYPE_ERROR))
            goto LABEL_23;
        }
        break;
      case 1:
        if (sub_10005549C())
        {
          sub_100054530("Device reset during initialization - terminating failed initialization");
          v6 = sub_1000544A0(0x2Eu);
          if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
            sub_1006CE7A4();
        }
        v7 = (void (**)(uint64_t))qword_1009843A0;
        goto LABEL_25;
      case 2:
      case 6:
        v10[0] = sub_1001925A0;
        v10[1] = off_10091D5B8;
        v9[1] = v10;
        LOWORD(v9[0]) = 16;
        v3 = sub_10004A9EC((uint64_t)sub_1001922C4, v9, 10, 0);
        if ((_DWORD)v3)
        {
          v4 = v3;
          if (sub_10005549C())
          {
            sub_100054530("OI_Dispatch_RegisterFunc failed %!", v4);
            v5 = sub_1000544A0(0x2Eu);
            if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
              sub_1006CE7A4();
          }
        }
        else
        {
          dword_100998FC8 = 4;
        }
        break;
      case 4:
        if (sub_10005549C())
        {
          sub_100054530("Device reset process is already pending");
          v8 = sub_1000544A0(0x2Eu);
          if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
            goto LABEL_23;
        }
        break;
      case 5:
        sub_1001A4584(632);
        v7 = (void (**)(uint64_t))qword_1009843A0;
        if (qword_1009843A0)
LABEL_25:
          sub_100252D38(v7, 632);
        break;
      default:
        sub_100253460();
        break;
    }
  }
  else if (sub_10005549C())
  {
    sub_100054530("HCI is not initialized, cannot restore device context");
    v2 = sub_1000544A0(0x2Eu);
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
LABEL_23:
      sub_1006CE7A4();
  }
}

void sub_1001925A0(int a1)
{
  int v1;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  const void *v7[2];
  _QWORD v8[2];

  if (a1)
  {
    v7[0] = 0;
    v1 = dword_1009843E8++;
    if (v1 >= 3)
    {
      if (sub_10005549C())
      {
        sub_100054530("Reset retries exhausted");
        v3 = sub_1000544A0(0x2Eu);
        if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
    }
    else
    {
      v8[0] = sub_1001925A0;
      v8[1] = off_10091D568;
      v7[1] = v8;
      LOWORD(v7[0]) = 16;
      v2 = sub_10004A9EC((uint64_t)sub_1001922C4, v7, 10, 0);
      if (!(_DWORD)v2)
      {
        dword_100998FC8 = 4;
        return;
      }
      v4 = v2;
      if (sub_10005549C())
      {
        sub_100054530("OI_Dispatch_RegisterFunc failed %!", v4);
        v5 = sub_1000544A0(0x2Eu);
        if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
    }
    v6 = sub_100112D60(631);
    sub_1001926C4(v6);
  }
  else
  {
    dword_1009843E8 = 0;
  }
}

void sub_1001926C4(uint64_t a1)
{
  NSObject *v2;

  if (sub_10005549C())
  {
    sub_100054530("OI_HCIIfc_DataErrorDetected %!", a1);
    v2 = sub_1000544A0(0x2Eu);
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
}

uint64_t sub_10019272C(uint64_t a1)
{
  NSObject *v2;
  _QWORD *v4;
  _QWORD *v5;

  if (sub_10005549C())
  {
    sub_100054530("OI_HCIIfc_FatalErrorDetected %!", a1);
    v2 = sub_1000544A0(0x2Eu);
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
  if (off_1009843A8)
    return off_1009843A8(a1);
  v4 = (_QWORD *)sub_100112D60(a1);
  return sub_1001927B0(v4, v5);
}

uint64_t sub_1001927B0(_QWORD *a1, _QWORD *a2)
{
  uint64_t result;

  if (!DWORD2(xmmword_1009991F8))
    return 103;
  if (!a1)
  {
    sub_100253460();
    return 101;
  }
  if (!a1[1])
  {
    sub_100253460();
    if (!a1[1])
      return 101;
  }
  if (!a1[2])
  {
    sub_100253460();
    if (!a1[2])
      return 101;
  }
  if (!a1[3])
  {
    sub_100253460();
    if (!a1[3])
      return 101;
  }
  if (a2)
    *a2 = qword_100998FD0;
  result = 0;
  qword_100998FD0 = (uint64_t)a1;
  return result;
}

uint64_t sub_10019284C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_100196768(0xEu, a2, a3, a4, a5, a6, a7, a8, a1);
}

uint64_t sub_100192874(uint64_t (*a1)(), unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_10004C9BC(56, a1, a3, a4, a5, a6, a7, a8, a2);
}

uint64_t sub_1001928B0(uint64_t (*a1)(), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_10004C9BC(64, a1, a3, a4, a5, a6, a7, a8, a2);
}

uint64_t sub_1001928DC(uint64_t (*a1)(), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_10004C9BC(65, a1, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_1001928E8(uint64_t (*a1)(), unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_10004C9BC(69, a1, a3, a4, a5, a6, a7, a8, a2);
}

uint64_t sub_100192918(uint64_t a1)
{
  return sub_10004C9BC(154, a1);
}

uint64_t sub_100192944(uint64_t (*a1)(), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_10004C9BC(7, a1, a3, a4, a5, a6, a7, a8, a2);
}

uint64_t sub_100192970(uint64_t (*a1)(), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_10004C9BC(105, a1, a3, a4, a5, a6, a7, a8, a2);
}

uint64_t sub_10019299C(uint64_t (*a1)(), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_10004C9BC(155, a1, a3, a4, a5, a6, a7, a8, a2);
}

uint64_t sub_1001929C8(uint64_t (*a1)(), uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (!a2)
    return 101;
  v10 = 0;
  result = sub_100182588(a2, &v10);
  if (!(_DWORD)result)
    return sub_10004C9BC(156, a1, v4, v5, v6, v7, v8, v9, v10);
  return result;
}

uint64_t sub_100192A2C(uint64_t (*a1)(), uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (!a2)
    return 101;
  v10 = 0;
  result = sub_100182588(a2, &v10);
  if (!(_DWORD)result)
    return sub_10004C9BC(157, a1, v4, v5, v6, v7, v8, v9, v10);
  return result;
}

uint64_t sub_100192A88(uint64_t (*a1)(), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  NSObject *v9;
  uint64_t v11;

  if (dword_100998FC8)
  {
    if (sub_10005549C())
    {
      sub_100054530("OI_HCI_Reset(), HCI already initialized");
      v9 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        sub_1006D2D70();
    }
  }
  return sub_10004C9BC(55, a1, a3, a4, a5, a6, a7, a8, v11);
}

uint64_t sub_100192AFC(uint64_t (*a1)(), unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_10004C9BC(115, a1, a3, a4, a5, a6, a7, a8, a2);
}

uint64_t sub_100192B2C(uint64_t (*a1)(), unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_10004C9BC(134, a1, a3, a4, a5, a6, a7, a8, a2);
}

uint64_t sub_100192B5C(uint64_t (*a1)(), unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_10004C9BC(135, a1, a3, a4, a5, a6, a7, a8, a2);
}

uint64_t sub_100192B8C(uint64_t (*a1)(), unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_10004C9BC(136, a1, a3, a4, a5, a6, a7, a8, a2);
}

uint64_t sub_100192BBC(uint64_t (*a1)(), unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_10004C9BC(138, a1, a3, a4, a5, a6, a7, a8, a2);
}

uint64_t sub_100192BF4(uint64_t (*a1)(), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_10004C9BC(90, a1, a3, a4, a5, a6, a7, a8, a2);
}

uint64_t sub_100192C24(uint64_t (*a1)(), unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_10004C9BC(189, a1, a3, a4, a5, a6, a7, a8, a2);
}

uint64_t sub_100192C54(uint64_t (*a1)(), unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_10004C9BC(190, a1, a3, a4, a5, a6, a7, a8, a2);
}

uint64_t sub_100192C90(uint64_t (*a1)(), unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_10004C9BC(201, a1, a3, a4, a5, a6, a7, a8, a2);
}

uint64_t sub_100192CCC(uint64_t (*a1)(), unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_10004C9BC(202, a1, a3, a4, a5, a6, a7, a8, a2);
}

uint64_t sub_100192D0C()
{
  if ((sub_100048064() & 1) != 0)
    return 0;
  else
    return sub_100053ACC();
}

uint64_t sub_100192D58()
{
  _BYTE *v0;
  _BYTE *v1;
  int v2;
  char v3;
  unsigned int v4;
  char v5;
  uint64_t v6;
  NSObject *v7;
  NSObject *v8;

  if (!qword_1009843B0)
  {
    if (!sub_10005549C())
      return 0;
    sub_100054530("OI_HciIfc_GetPacket: OI_HCIIfc_Send_Req not in progress");
    v7 = sub_1000544A0(0x2Eu);
    if (!os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      return 0;
LABEL_10:
    sub_1006CE7A4();
    return 0;
  }
  v0 = sub_100052DC0((unsigned __int16)word_1009843CC + 5);
  if (!v0)
  {
    if (!sub_10005549C())
      return 0;
    sub_100054530("OI_HciIfc_GetPacket: could not allocate packet buffer");
    v8 = sub_1000544A0(0x2Eu);
    if (!os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      return 0;
    goto LABEL_10;
  }
  v1 = v0;
  qword_1009843B8 = (uint64_t)v0;
  v2 = byte_1009843C0;
  *v0 = byte_1009843C0;
  v3 = HIBYTE(word_1009843C8);
  v1[1] = word_1009843C8;
  v1[2] = v3;
  v4 = (unsigned __int16)word_1009843CC;
  v5 = word_1009843CC;
  if (v2 == 2)
  {
    v1[4] = HIBYTE(word_1009843CC);
    v6 = 5;
  }
  else
  {
    v6 = 4;
  }
  v1[3] = v5;
  if (v4)
    sub_100053900(&v1[v6], qword_1009843B0, v4);
  sub_10004A104();
  return qword_1009843B8;
}

uint64_t sub_100192EA8(uint64_t (*a1)(), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_10004C9BC(160, a1, a3, a4, a5, a6, a7, a8, a9);
}

void sub_100192EB4()
{
  byte_100984390 = 1;
}

uint64_t sub_100192EC4()
{
  return byte_100984390;
}

uint64_t sub_100192ED0(uint64_t result)
{
  byte_1009843CE = result;
  return result;
}

uint64_t sub_100192EE4()
{
  return 0xBF3FF3F86FA7FLL;
}

uint64_t sub_100192EF8(uint64_t result)
{
  int v1;

  v1 = *(_DWORD *)result;
  word_1009843D3 = *(_WORD *)(result + 4);
  dword_1009843CF = v1;
  return result;
}

uint64_t sub_100192F14(uint64_t result)
{
  int v1;

  if ((_DWORD)result)
    v1 = 3;
  else
    v1 = 2;
  dword_100998FC8 = v1;
  qword_1009843A0 = 0;
  return result;
}

void sub_100192F34()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  uint64_t v3;

  WORD2(v3) = 0;
  LODWORD(v3) = 0;
  if (dword_1009843CF | (unsigned __int16)word_1009843D3)
  {
    if (dword_100998FC8 == 1 || (sub_100253460(), dword_100998FC8 == 1))
    {
      byte_100998FCC = 1;
      v0 = sub_1001FE7AC((uint64_t)&dword_1009843CF);
      byte_100998FCC = 0;
      if ((_DWORD)v0)
      {
        v1 = v0;
        if (sub_10005549C())
        {
          sub_100054530("BT_VSC_Write_Bd_Addr failed: %!", v1, v3);
          v2 = sub_1000544A0(0x2Eu);
          if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
            sub_1006CE7A4();
        }
        sub_100252D38((void (**)(uint64_t))qword_1009843A0, v1);
      }
    }
  }
  else
  {
    sub_100191D74(0, "initCmdWriteBdAddrCB");
  }
}

void sub_100193030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v8;
  BOOL v10;
  int v11;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  NSObject *v16;
  uint64_t v17;

  v8 = dword_100998FC8;
  if (dword_100998FC8 > 5 || ((1 << dword_100998FC8) & 0x32) == 0)
  {
    sub_100253460();
    v8 = dword_100998FC8;
  }
  v10 = v8 > 5;
  v11 = (1 << v8) & 0x32;
  if (v10 || v11 == 0)
  {
    if (sub_10005549C())
    {
      sub_100054530("initCmdReset, orphaned");
      v16 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
  else if (*(_BYTE *)(qword_100998FC0 + 10))
  {
    sub_100252CD4(qword_1009843A0);
  }
  else
  {
    byte_100998FCC = 1;
    v13 = sub_10004C9BC(55, (uint64_t (*)())sub_1001944DC, a3, a4, a5, a6, a7, a8, v17);
    byte_100998FCC = 0;
    if ((_DWORD)v13)
    {
      v14 = v13;
      if (sub_10005549C())
      {
        sub_100054530("OI_HCICMD_Reset failed: %!", v14);
        v15 = sub_1000544A0(0x2Eu);
        if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      sub_100252D38((void (**)(uint64_t))qword_1009843A0, v14);
    }
  }
}

void sub_100193184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;

  if (dword_100998FC8 == 1 || (sub_100253460(), dword_100998FC8 == 1))
  {
    byte_100998FCC = 1;
    v8 = sub_10004C9BC(143, (uint64_t (*)())sub_100194570, a3, a4, a5, a6, a7, a8, v11);
    byte_100998FCC = 0;
    if ((_DWORD)v8)
    {
      v9 = v8;
      if (sub_10005549C())
      {
        sub_100054530("OI_HCICMD_ReadLocalVersionInformation failed: %!", v9);
        v10 = sub_1000544A0(0x2Eu);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      sub_100252D38((void (**)(uint64_t))qword_1009843A0, v9);
    }
  }
}

void sub_100193240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;

  if (dword_100998FC8 == 1 || (sub_100253460(), dword_100998FC8 == 1))
  {
    byte_100998FCC = 1;
    v8 = sub_10004C9BC(144, (uint64_t (*)())sub_100194638, a3, a4, a5, a6, a7, a8, v9);
    byte_100998FCC = 0;
    if (v8)
      sub_100252CD4(qword_1009843A0);
  }
}

void sub_1001932B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  NSObject *v11;
  uint64_t v12;

  if (dword_100998FC8 == 1 || (sub_100253460(), dword_100998FC8 == 1))
  {
    byte_100998FCC = 1;
    v8 = sub_10004C9BC(149, (uint64_t (*)())sub_100194648, a3, a4, a5, a6, a7, a8, v12);
    byte_100998FCC = 0;
    if ((_DWORD)v8)
    {
      v9 = v8;
      if ((_DWORD)v8 == 628)
      {
        if (sub_10005549C())
        {
          sub_100054530("OI_HCICMD_ReadBDADDR failed: %!, ignoring error", 628);
          v10 = sub_1000544A0(0x2Eu);
          if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
            sub_1006CE7A4();
        }
        sub_100252CD4(qword_1009843A0);
      }
      else
      {
        if (sub_10005549C())
        {
          sub_100054530("OI_HCICMD_ReadBDADDR failed: %!", v9);
          v11 = sub_1000544A0(0x2Eu);
          if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
            sub_1006CE7A4();
        }
        sub_100252D38((void (**)(uint64_t))qword_1009843A0, v9);
      }
    }
  }
}

void sub_1001933C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;

  if (dword_100998FC8 == 1 || (sub_100253460(), dword_100998FC8 == 1))
  {
    byte_100998FCC = 1;
    v8 = sub_10004C9BC(145, (uint64_t (*)())sub_1001946EC, a3, a4, a5, a6, a7, a8, v11);
    byte_100998FCC = 0;
    if ((_DWORD)v8)
    {
      v9 = v8;
      if (sub_10005549C())
      {
        sub_100054530("OI_HCICMD_ReadLocalSupportedFeatures failed: %!", v9);
        v10 = sub_1000544A0(0x2Eu);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      sub_100252D38((void (**)(uint64_t))qword_1009843A0, v9);
    }
  }
}

void sub_100193480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;

  if (dword_100998FC8 == 1 || (sub_100253460(), dword_100998FC8 == 1))
  {
    byte_100998FCC = 1;
    v8 = sub_10004C9BC(146, (uint64_t (*)())sub_1001947C0, a3, a4, a5, a6, a7, a8, 2);
    byte_100998FCC = 0;
    if ((_DWORD)v8)
    {
      v9 = v8;
      if (sub_10005549C())
      {
        sub_100054530("OI_HCICMD_ReadLocalExtendedFeatures failed: %!", v9);
        v10 = sub_1000544A0(0x2Eu);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      sub_100252D38((void (**)(uint64_t))qword_1009843A0, v9);
    }
  }
}

void sub_100193544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;

  if (BYTE9(xmmword_100998F98))
  {
    v8 = sub_10004C9BC(164, (uint64_t (*)())sub_100194920, a3, a4, a5, a6, a7, a8, v11);
    if ((_DWORD)v8)
    {
      v9 = v8;
      if (sub_10005549C())
      {
        sub_100054530("OI_HCICMD_LE_ReadLocalSupportedFeatures");
        v10 = sub_1000544A0(0x2Eu);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
          sub_1006D17C4();
      }
      sub_100252D38((void (**)(uint64_t))qword_1009843A0, v9);
    }
  }
  else
  {
    sub_100252CD4(qword_1009843A0);
  }
}

void sub_1001935EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  NSObject *v12;

  if ((BYTE8(xmmword_100998F58) & 0xFE) == 4)
  {
    v8 = sub_10004C9BC(54, (uint64_t (*)())sub_100194A54, a3, a4, a5, a6, a7, a8, (uint64_t)&unk_10073A5D9);
    if (!(_DWORD)v8)
      return;
    v9 = v8;
    if (!sub_10005549C())
      goto LABEL_11;
    sub_100054530("OI_HCICMD_SetEventMask returned %!");
    v10 = sub_1000544A0(0x2Eu);
    if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      goto LABEL_11;
LABEL_10:
    sub_1006D17C4();
LABEL_11:
    sub_100252D38((void (**)(uint64_t))qword_1009843A0, v9);
    return;
  }
  if (BYTE8(xmmword_100998F58) < 6u)
  {
    sub_100252CD4(qword_1009843A0);
    return;
  }
  v11 = sub_10004C9BC(54, (uint64_t (*)())sub_100194A54, a3, a4, a5, a6, a7, a8, (uint64_t)&unk_10073A5E1);
  if ((_DWORD)v11)
  {
    v9 = v11;
    if (!sub_10005549C())
      goto LABEL_11;
    sub_100054530("OI_HCICMD_SetEventMask returned %!");
    v12 = sub_1000544A0(0x2Eu);
    if (!os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      goto LABEL_11;
    goto LABEL_10;
  }
}

void sub_100193724()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;

  if (BYTE8(xmmword_100998F58) < 0xCu)
  {
    sub_100252CD4(qword_1009843A0);
  }
  else
  {
    v6 = *((unsigned __int16 *)sub_100052DE8(0x85u) + 2);
    if ((v6 & 0xC000) == 0 && (*((_BYTE *)&xmmword_100998FE8 + (v6 >> 8)) & v6) != 0)
    {
      byte_1009843D8 |= 2u;
      byte_100978FDC = 89;
      byte_100978E48["ooth"] = 89;
    }
    v7 = sub_10004C9BC(126, (uint64_t (*)())sub_100194AC8, v0, v1, v2, v3, v4, v5, (uint64_t)&unk_1009843D5);
    if ((_DWORD)v7)
    {
      v8 = v7;
      if (sub_10005549C())
      {
        sub_100054530("OI_HCICMD_SetEventMaskPage2 returned %!");
        v9 = sub_1000544A0(0x2Eu);
        if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
          sub_1006D17C4();
      }
      sub_100252D38((void (**)(uint64_t))qword_1009843A0, v8);
    }
  }
}

void sub_10019383C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;

  if (BYTE8(xmmword_100998F58) < 6u)
  {
    sub_100252CD4(qword_1009843A0);
  }
  else
  {
    v8 = sub_10004C9BC(162, (uint64_t (*)())sub_100194B3C, a3, a4, a5, a6, a7, a8, (uint64_t)&unk_10073A5D1);
    if ((_DWORD)v8)
    {
      v9 = v8;
      if (sub_10005549C())
      {
        sub_100054530("OI_HCICMD_LE_SetEventMask returned %!");
        v10 = sub_1000544A0(0x2Eu);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
          sub_1006D17C4();
      }
      sub_100252D38((void (**)(uint64_t))qword_1009843A0, v9);
    }
  }
}

void sub_100193900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;

  if (BYTE8(xmmword_100998F98))
    v8 = BYTE8(xmmword_100998F58) >= 4u;
  else
    v8 = 0;
  if (v8)
  {
    v9 = sub_10004C9BC(118, (uint64_t (*)())sub_100194BB0, a3, a4, a5, a6, a7, a8, byte_100978E3C);
    if ((_DWORD)v9)
    {
      v10 = v9;
      if (sub_10005549C())
      {
        sub_100054530("OI_HCICMD_WriteSimplePairingMode");
        v11 = sub_1000544A0(0x2Eu);
        if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
          sub_1006D17C4();
      }
      sub_100252D38((void (**)(uint64_t))qword_1009843A0, v10);
    }
  }
  else
  {
    sub_100252CD4(qword_1009843A0);
  }
}

void sub_1001939CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;

  if (BYTE9(xmmword_100998F98))
  {
    v8 = sub_10004C9BC(131, (uint64_t (*)())sub_100194C24, a3, a4, a5, a6, a7, a8, 1);
    if ((_DWORD)v8)
    {
      v9 = v8;
      if (sub_10005549C())
      {
        sub_100054530("OI_HCICMD_WriteLeHostSupported");
        v10 = sub_1000544A0(0x2Eu);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
          sub_1006D17C4();
      }
      sub_100252D38((void (**)(uint64_t))qword_1009843A0, v9);
    }
  }
  else
  {
    sub_100252CD4(qword_1009843A0);
  }
}

void sub_100193A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t (*v8)();
  int v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;

  if (BYTE9(xmmword_100998F98))
  {
    if (BYTE7(xmmword_100998F78) >= 0x10u)
    {
      v8 = (uint64_t (*)())sub_100194C34;
      v9 = 244;
    }
    else
    {
      v8 = (uint64_t (*)())sub_100194CEC;
      v9 = 163;
    }
    v10 = sub_10004C9BC(v9, v8, a3, a4, a5, a6, a7, a8, v12);
    if ((_DWORD)v10)
    {
      if (sub_10005549C())
      {
        sub_100054530("OI_HCICMD_WriteLeHostSupported");
        v11 = sub_1000544A0(0x2Eu);
        if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
          sub_1006D17C4();
      }
      sub_100252D38((void (**)(uint64_t))qword_1009843A0, v10);
    }
  }
  else
  {
    sub_100252CD4(qword_1009843A0);
  }
}

void sub_100193B4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;

  if (!BYTE9(xmmword_100998F98))
    goto LABEL_4;
  v8 = sub_10004C9BC(197, (uint64_t (*)())sub_100191B54, a3, a4, a5, a6, a7, a8, v11);
  if (!(_DWORD)v8)
    return;
  v9 = v8;
  if ((_DWORD)v8 != 628)
  {
    if (sub_10005549C())
    {
      sub_100054530("OI_HCICMD_LE_ReadMaximumLength %!", v9);
      v10 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CEEC0();
    }
    sub_100252D38((void (**)(uint64_t))qword_1009843A0, v9);
  }
  else
  {
LABEL_4:
    sub_100252CD4(qword_1009843A0);
  }
}

void sub_100193C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;

  if (BYTE9(xmmword_100998F98))
  {
    v8 = sub_10004C9BC(188, (uint64_t (*)())sub_100194D5C, a3, a4, a5, a6, a7, a8, v11);
    if ((_DWORD)v8)
    {
      v9 = v8;
      if (sub_10005549C())
      {
        sub_100054530("OI_HCICMD_LE_ReadSupportedStates");
        v10 = sub_1000544A0(0x2Eu);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
          sub_1006D17C4();
      }
      sub_100252D38((void (**)(uint64_t))qword_1009843A0, v9);
    }
  }
  else
  {
    sub_100252CD4(qword_1009843A0);
  }
}

void sub_100193CB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;

  if (BYTE9(xmmword_100998F98))
  {
    v8 = sub_10004C9BC(175, (uint64_t (*)())sub_100194D84, a3, a4, a5, a6, a7, a8, v11);
    if ((_DWORD)v8)
    {
      v9 = v8;
      if (sub_10005549C())
      {
        sub_100054530("OI_HCICMD_LE_ReadFilterAcceptListSize");
        v10 = sub_1000544A0(0x2Eu);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
          sub_1006D17C4();
      }
      sub_100252D38((void (**)(uint64_t))qword_1009843A0, v9);
    }
  }
  else
  {
    sub_100252CD4(qword_1009843A0);
  }
}

void sub_100193D58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;

  if (dword_100998FC8 == 1 || (sub_100253460(), dword_100998FC8 == 1))
  {
    byte_100998FCC = 1;
    v8 = sub_10004C9BC(147, (uint64_t (*)())sub_100194DAC, a3, a4, a5, a6, a7, a8, v11);
    byte_100998FCC = 0;
    if ((_DWORD)v8)
    {
      v9 = v8;
      if (sub_10005549C())
      {
        sub_100054530("OI_HCICMD_ReadBufferSize failed: %!", v9);
        v10 = sub_1000544A0(0x2Eu);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      sub_100252D38((void (**)(uint64_t))qword_1009843A0, v9);
    }
  }
}

void sub_100193E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;

  if (!BYTE9(xmmword_100998F98) || (BYTE5(xmmword_100998F78) & 0x20) == 0)
    goto LABEL_5;
  v8 = sub_10004C9BC(224, (uint64_t (*)())sub_100194EDC, a3, a4, a5, a6, a7, a8, v11);
  if (!(_DWORD)v8)
    return;
  v9 = v8;
  if ((_DWORD)v8 != 628)
  {
    if (sub_10005549C())
    {
      sub_100054530("OI_HCICMD_ReadPeriodicAdvListSize %!", v9);
      v10 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CEEC0();
    }
    sub_100252D38((void (**)(uint64_t))qword_1009843A0, v9);
  }
  else
  {
LABEL_5:
    sub_100252CD4(qword_1009843A0);
  }
}

void sub_100193ED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;

  if (BYTE9(xmmword_100998F98) && (BYTE7(xmmword_100998F78) & 0x30) != 0)
  {
    v8 = sub_10004C9BC(243, (uint64_t (*)())sub_100194F04, a3, a4, a5, a6, a7, a8, 32);
    if ((_DWORD)v8)
    {
      v9 = v8;
      if ((_DWORD)v8 == 628)
      {
        sub_100252CD4(qword_1009843A0);
      }
      else
      {
        if (sub_10005549C())
        {
          sub_100054530("OI_HCI_CMD_LE_SetHostFeatureCommand %!", v9, 1);
          v10 = sub_1000544A0(0x2Eu);
          if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
            sub_1006CEEC0();
        }
        sub_100252D38((void (**)(uint64_t))qword_1009843A0, v9);
      }
    }
    BYTE8(xmmword_100998F78) |= 1u;
  }
  else
  {
    sub_100252CD4(qword_1009843A0);
  }
}

void sub_100193FD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;

  if (BYTE9(xmmword_100998F98) && (BYTE8(xmmword_100998F78) & 0x60) != 0)
  {
    v8 = sub_10004C9BC(243, (uint64_t (*)())sub_100194F14, a3, a4, a5, a6, a7, a8, 38);
    if ((_DWORD)v8)
    {
      v9 = v8;
      if ((_DWORD)v8 == 628)
      {
        sub_100252CD4(qword_1009843A0);
      }
      else
      {
        if (sub_10005549C())
        {
          sub_100054530("OI_HCI_CMD_LE_SetHostFeatureCommand %!", v9, 1);
          v10 = sub_1000544A0(0x2Eu);
          if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
            sub_1006CEEC0();
        }
        sub_100252D38((void (**)(uint64_t))qword_1009843A0, v9);
      }
    }
    BYTE8(xmmword_100998F78) |= 0x40u;
  }
  else
  {
    sub_100252CD4(qword_1009843A0);
  }
}

void sub_1001940D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;

  if (!BYTE9(xmmword_100998F98) || (BYTE8(xmmword_100998F78) & 0x60) == 0)
    goto LABEL_5;
  v8 = sub_10004C9BC(250, (uint64_t (*)())sub_100194F24, a3, a4, a5, a6, a7, a8, 1);
  if (!(_DWORD)v8)
    return;
  v9 = v8;
  if ((_DWORD)v8 != 628)
  {
    if (sub_10005549C())
    {
      sub_100054530("OI_HCICMD_LE_SetDefaultSubrate %!", v9, 35, 6, 0, 3200);
      v10 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CEEC0();
    }
    sub_100252D38((void (**)(uint64_t))qword_1009843A0, v9);
  }
  else
  {
LABEL_5:
    sub_100252CD4(qword_1009843A0);
  }
}

void sub_1001941B4()
{
  unsigned int v0;
  BOOL v2;
  int v3;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;

  v0 = dword_100998FC8;
  if (dword_100998FC8 > 5 || ((1 << dword_100998FC8) & 0x32) == 0)
  {
    sub_100253460();
    v0 = dword_100998FC8;
  }
  v2 = v0 > 5;
  v3 = (1 << v0) & 0x32;
  if (!v2 && v3 != 0)
  {
    v5 = *(unsigned __int16 *)qword_100998FC0 <= 0xFFu ? *(_WORD *)qword_100998FC0 : 255;
    v6 = sub_1001A1104();
    byte_100998FCC = 1;
    v16 = v5;
    v13 = sub_10004C9BC(94, (uint64_t (*)())sub_100194F34, v7, v8, v9, v10, v11, v12, (v6 + 4));
    byte_100998FCC = 0;
    if ((_DWORD)v13)
    {
      v14 = v13;
      if (sub_10005549C())
      {
        sub_100054530("OI_HCICMD_HostBufferSize failed: %!", v14, v16, 1, 1);
        v15 = sub_1000544A0(0x2Eu);
        if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      sub_100252D38((void (**)(uint64_t))qword_1009843A0, v14);
    }
  }
}

void sub_1001942C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v8;
  BOOL v10;
  int v11;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;

  v8 = dword_100998FC8;
  if (dword_100998FC8 > 5 || ((1 << dword_100998FC8) & 0x32) == 0)
  {
    sub_100253460();
    v8 = dword_100998FC8;
  }
  v10 = v8 > 5;
  v11 = (1 << v8) & 0x32;
  if (!v10 && v11 != 0)
  {
    v13 = *(_BYTE *)(qword_100998FC0 + 8) ? *(_BYTE *)(qword_100998FC0 + 7) | 2 : *(_BYTE *)(qword_100998FC0 + 7);
    byte_100998FCC = 1;
    v14 = sub_10004C9BC(93, (uint64_t (*)())sub_100194FB0, a3, a4, a5, a6, a7, a8, v13);
    byte_100998FCC = 0;
    if ((_DWORD)v14)
    {
      v15 = v14;
      if (sub_10005549C())
      {
        sub_100054530("OI_HCICMD_SetHostControllerToHostFlowControl failed: %!", v15);
        v16 = sub_1000544A0(0x2Eu);
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      sub_100252D38((void (**)(uint64_t))qword_1009843A0, v15);
    }
  }
}

void sub_1001943CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;

  v8 = sub_10004C9BC(124, (uint64_t (*)())sub_100195020, a3, a4, a5, a6, a7, a8, 1);
  if ((_DWORD)v8)
  {
    v9 = v8;
    if (sub_10005549C())
    {
      sub_100054530("OI_HCICMD_WriteDefaultErroneousDataReporting");
      v10 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
    sub_100252D38((void (**)(uint64_t))qword_1009843A0, v9);
  }
}

void sub_100194460(uint64_t a1)
{
  NSObject *v2;

  if ((_DWORD)a1)
  {
    if (sub_10005549C())
    {
      sub_100054530("Write BD Addr cmd failed %!", a1);
      v2 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
  sub_100191D74(a1, "initCmdWriteBdAddrCB");
}

void sub_1001944DC(uint64_t a1)
{
  NSObject *v2;

  if ((_DWORD)a1)
  {
    if (sub_10005549C())
    {
      sub_100054530("reset command failed (%!), ignoring error and continuing initialization", a1);
      v2 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    if ((_DWORD)a1 == 621)
      byte_100999059 = 1;
  }
  sub_100191D74(0, "initCmdResetCB");
}

void sub_100194570(uint64_t a1, unsigned __int8 *a2)
{
  NSObject *v3;

  if ((_DWORD)a1)
  {
    if (sub_10005549C())
    {
      sub_100054530("Read Local Version failed %!", a1);
      v3 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
  else
  {
    if (!a2)
      sub_100253460();
    BYTE14(xmmword_100998FE8) = BYTE14(xmmword_100998FE8) & 0xEF | (16 * (*a2 > 1u));
    WORD3(xmmword_100998F58) = *((_WORD *)a2 + 1);
    BYTE8(xmmword_100998F58) = a2[4];
    WORD5(xmmword_100998F58) = *((_WORD *)a2 + 4);
  }
  sub_100191D74(a1, "initCmdReadLocalVersionCB");
}

void sub_100194638()
{
  sub_100191D74(0, "initCmdReadSupportedCommandsCB");
}

void sub_100194648(uint64_t a1, int *a2)
{
  NSObject *v3;
  int v4;

  if ((_DWORD)a1)
  {
    if (sub_10005549C())
    {
      sub_100054530("Read BD Addr cmd failed %!", a1);
      v3 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
  else if (dword_100998FC8 == 1)
  {
    v4 = *a2;
    WORD2(xmmword_100998F58) = *((_WORD *)a2 + 2);
    LODWORD(xmmword_100998F58) = v4;
  }
  sub_100191D74(a1, "initCmdReadBdAddrCB");
}

void sub_1001946EC(uint64_t a1, uint64_t a2)
{
  NSObject *v3;

  if ((_DWORD)a1)
  {
    if (sub_10005549C())
    {
      sub_100054530("Read local features cmd failed %!", a1);
      v3 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
  else if (a2 && dword_100998FC8 == 1)
  {
    *(_QWORD *)((char *)&xmmword_100998F58 + 12) = *(_QWORD *)a2;
    if (BYTE8(xmmword_100998F58) < 6u)
    {
      WORD4(xmmword_100998F98) = 1;
    }
    else
    {
      BYTE8(xmmword_100998F98) = (*(_BYTE *)(a2 + 4) & 0x20) == 0;
      BYTE9(xmmword_100998F98) = (*(_BYTE *)(a2 + 4) & 0x40) != 0;
    }
  }
  sub_100191D74(a1, "initCmdReadLocalFeaturesCB");
}

void sub_1001947C0(uint64_t a1, unsigned int a2, unsigned int a3, _QWORD *a4)
{
  NSObject *v5;
  char *v8;
  char *v9;
  NSObject *v10;
  uint8_t buf[4];
  void *v12;

  if ((_DWORD)a1)
  {
    if (sub_10005549C())
    {
      sub_100054530("Read local features cmd failed %!", a1);
      v5 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
  else if (a4)
  {
    if (dword_100998FC8 == 1)
    {
      v8 = (char *)&xmmword_100998F58 + 8 * a2;
      *(_QWORD *)(v8 + 12) = *a4;
      v9 = v8 + 12;
      if (sub_10005549C())
      {
        sub_100054530("Extended features, max %d, pageNumber %d: %@", a3, a2, v9, 8);
        v10 = sub_1000544A0(0x2Eu);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 136446210;
          v12 = sub_100054494();
          _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
    }
  }
  sub_100191D74(a1, "initCmdReadLocalExtendedFeaturesCB");
}

void sub_100194920(uint64_t a1, _QWORD *a2)
{
  NSObject *v3;
  NSObject *v4;
  uint8_t buf[4];
  void *v6;

  if ((_DWORD)a1)
  {
    if (sub_10005549C())
    {
      sub_100054530("Read local supported features failed %!", a1);
      v3 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
        sub_1006CEEC0();
    }
  }
  else if (a2)
  {
    *(_QWORD *)((char *)&xmmword_100998F78 + 4) = *a2;
    if (sub_10005549C())
    {
      sub_100054530("LE local supported features %@", (char *)&xmmword_100998F78 + 4, 8);
      v4 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136446210;
        v6 = sub_100054494();
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
  }
  sub_100191D74(0, "initCmdReadLeLocalSupportedFeaturesCB");
}

void sub_100194A54(uint64_t a1)
{
  NSObject *v2;

  if ((_DWORD)a1)
  {
    if (sub_10005549C())
    {
      sub_100054530("Write event mask");
      v2 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
  }
  sub_100191D74(a1, "initCmdWriteEventMaskCb");
}

void sub_100194AC8(uint64_t a1)
{
  NSObject *v2;

  if ((_DWORD)a1)
  {
    if (sub_10005549C())
    {
      sub_100054530("Write event mask page 2");
      v2 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
  }
  sub_100191D74(a1, "initCmdWriteEventMaskPage2Cb");
}

void sub_100194B3C(uint64_t a1)
{
  NSObject *v2;

  if ((_DWORD)a1)
  {
    if (sub_10005549C())
    {
      sub_100054530("Write le event mask");
      v2 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
  }
  sub_100191D74(a1, "initCmdWriteLeEventMaskCb");
}

void sub_100194BB0(uint64_t a1)
{
  NSObject *v2;

  if ((_DWORD)a1)
  {
    if (sub_10005549C())
    {
      sub_100054530("Write SSP mode");
      v2 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
        sub_1006D17C4();
    }
  }
  sub_100191D74(a1, "initCmdWriteSspCb");
}

void sub_100194C24()
{
  sub_100191D74(0, "initCmdWriteLeSupportCB");
}

void sub_100194C34(uint64_t a1, int a2, int a3, int a4, int a5)
{
  BOOL v10;
  char v11;

  if (!(_DWORD)a1)
  {
    if ((a2 != 0) != (a3 != 0))
      sub_100253460();
    if ((a4 != 0) != (a5 != 0))
      sub_100253460();
    word_1009843DE = a2;
    byte_1009843E0 = a3;
    word_1009843E2 = a4;
    byte_1009843E4 = a5;
    if (a2)
      v10 = a3 == 0;
    else
      v10 = 1;
    v11 = v10;
    byte_1009843E5 = v11;
  }
  sub_100191D74(a1, "initCmdReadLeBufferSizeV2CB");
}

void sub_100194CEC(int a1, int a2, int a3)
{
  BOOL v5;
  char v6;

  if (!a1)
  {
    if ((a2 != 0) != (a3 != 0))
      sub_100253460();
    word_1009843DE = a2;
    byte_1009843E0 = a3;
    if (a2)
      v5 = a3 == 0;
    else
      v5 = 1;
    v6 = v5;
    byte_1009843E5 = v6;
  }
  sub_100191D74(0, "initCmdReadLeBufferSizeCB");
}

void sub_100194D5C(int a1, uint64_t *a2)
{
  if (!a1)
    sub_100221B64(a2);
  sub_100191D74(0, "initCmdReadLeSupportedStatesCB");
}

void sub_100194D84(int a1, unsigned int a2)
{
  if (!a1)
    sub_10023A60C(a2);
  sub_100191D74(0, "initCmdReadLeFilterAcceptListSizeCB");
}

void sub_100194DAC(uint64_t a1, unsigned int a2, __int16 a3, int a4, int a5)
{
  NSObject *v6;
  __int128 *v7;
  uint64_t v8;
  NSObject *v9;

  if ((_DWORD)a1)
  {
    if (sub_10005549C())
    {
      sub_100054530("Read device buffer sizes failed %!", a1);
      v6 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    goto LABEL_11;
  }
  if (dword_100998FC8 != 1
    || (v7 = sub_1001A1F78(a2, a3, word_1009843DE, word_1009843E2, a4, a5, byte_1009843E0, byte_1009843E4, byte_1009843E5), !(_DWORD)v7))
  {
LABEL_11:
    sub_100191D74(a1, "initCmdReadDeviceBufferSizesCB");
    return;
  }
  v8 = (uint64_t)v7;
  if (sub_10005549C())
  {
    sub_100054530("OI_HCIFlow_Init failed: %!", 0);
    v9 = sub_1000544A0(0x2Eu);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
  sub_100252D38((void (**)(uint64_t))qword_1009843A0, v8);
}

void sub_100194EDC(int a1, unsigned int a2)
{
  if (!a1)
    sub_100111E98(a2);
  sub_100191D74(0, "initCmdReadLePAListSizeCB");
}

void sub_100194F04()
{
  sub_100191D74(0, "initCmdLeSetHostFeatureLeCisCB");
}

void sub_100194F14()
{
  sub_100191D74(0, "initCmdLeSetHostFeatureLeSubratingCB");
}

void sub_100194F24()
{
  sub_100191D74(0, "initCmdLeSetDefaultSubratingCB");
}

void sub_100194F34(uint64_t a1)
{
  NSObject *v2;

  if ((_DWORD)a1)
  {
    if (sub_10005549C())
    {
      sub_100054530("Host buffer size cmd failed %!", a1);
      v2 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
  sub_100191D74(a1, "initCmdHostBufferSizeCB");
}

void sub_100194FB0(uint64_t a1)
{
  NSObject *v1;

  if ((_DWORD)a1 == 717)
  {
    a1 = sub_10005549C();
    if ((_DWORD)a1)
    {
      sub_100054530("HCI HostFlowControl unsupported (ignoring)");
      v1 = sub_1000544A0(0x2Eu);
      a1 = os_log_type_enabled(v1, OS_LOG_TYPE_ERROR);
      if ((_DWORD)a1)
      {
        sub_1006CE7A4();
        a1 = 0;
      }
    }
  }
  sub_100191D74(a1, "initCmdHostFlowControlCB");
}

void sub_100195020(uint64_t a1)
{
  NSObject *v2;

  if ((_DWORD)a1)
  {
    if (sub_10005549C())
    {
      sub_100054530("Write Erroneous Data Reporting failed %!", a1);
      v2 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
  sub_100191D74(a1, "initCmdWriteErroneousDataReportingCB");
}

void sub_10019509C(uint64_t a1)
{
  int v2;
  NSObject *v3;

  v2 = dword_100998FC8;
  if ((dword_100998FC8 & 0xFFFFFFFE) != 4)
  {
    sub_100253460();
    v2 = dword_100998FC8;
  }
  if ((v2 - 6) > 0xFFFFFFFD)
  {
    qword_1009843A0 = 0;
    if ((_DWORD)a1 || (a1 = sub_1001A453C(sub_100195288), (_DWORD)a1))
      sub_100195288(a1);
  }
  else if (sub_10005549C())
  {
    sub_100054530("resetCmdChainTermination, deviceReset is not active");
    v3 = sub_1000544A0(0x2Eu);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
}

void sub_100195150()
{
  unsigned int v0;
  BOOL v2;
  int v3;
  uint64_t (*v5)(void);
  uint64_t v6;
  NSObject *v7;
  NSObject *v8;

  v0 = dword_100998FC8;
  if (dword_100998FC8 > 5 || ((1 << dword_100998FC8) & 0x32) == 0)
  {
    sub_100253460();
    v0 = dword_100998FC8;
  }
  v2 = v0 > 5;
  v3 = (1 << v0) & 0x32;
  if (v2 || v3 == 0)
  {
    if (sub_10005549C())
    {
      sub_100054530("initCmdStackResetHCITransport, orphaned");
      v8 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
  else if (*(_BYTE *)(qword_100998FC0 + 10) || (v5 = sub_10016F8AC(), !(_DWORD)v5))
  {
    sub_100252CD4(qword_1009843A0);
  }
  else
  {
    v6 = (uint64_t)v5;
    if (sub_10005549C())
    {
      sub_100054530("OI_HCIIfc_StackResetHCITransport failed: %!", v6);
      v7 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    sub_100252D38((void (**)(uint64_t))qword_1009843A0, v6);
  }
}

void sub_100195288(uint64_t a1)
{
  int v2;
  void (*v3)(uint64_t);

  if ((dword_100998FC8 & 0xFFFFFFFE) != 4)
    sub_100253460();
  if ((_DWORD)a1)
  {
    if (dword_100998FC8 == 4)
      goto LABEL_8;
    v2 = 6;
  }
  else
  {
    v2 = 2;
  }
  dword_100998FC8 = v2;
LABEL_8:
  v3 = (void (*)(uint64_t))off_100984398;
  if (off_100984398)
  {
    off_100984398 = 0;
    v3(a1);
  }
}

uint64_t sub_1001952FC(uint64_t *a1, uint64_t a2, uint64_t *a3, _QWORD *a4, uint64_t a5, _BYTE *a6, _BYTE *a7)
{
  int v13;
  _BYTE *v14;
  uint64_t v15;
  __int16 v16;
  char v17;
  uint64_t v18;
  unsigned __int8 *v19;
  int v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t *v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  const void **v31;
  uint64_t v32;
  __int16 v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  _BYTE *v46;
  const void **v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  unsigned int v53;
  int v54;
  char v55;
  uint64_t *v56;
  uint64_t v57;
  int *v58;
  uint64_t v59;
  int v60;
  __int16 v61;
  _BYTE *v62;
  _BYTE *v63;
  const char **v64;
  const char *v65;
  int v66;
  int v67;
  unsigned __int16 v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  const void **v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  int v83;
  uint64_t *v84;
  uint64_t v85;
  int v86;
  uint64_t *v87;
  uint64_t v88;
  int v89;
  BOOL v90;
  uint64_t v91;
  uint64_t v92;
  unsigned int v93;
  int v94;
  NSObject *v96;
  _BYTE *v97;
  _QWORD *v98;
  uint64_t v99;
  int v100;
  void *ptr;
  uint8_t buf[4];
  void *v104;
  __int16 v105;
  int v106;

  v13 = *(unsigned __int16 *)(a2 + 6) + 4;
  v14 = sub_100052DC0(*(unsigned __int16 *)(a2 + 6) + 4);
  if (!v14)
    return 104;
  *((_BYTE *)a3 + 15) = 0;
  *a3 = (uint64_t)v14;
  *((_WORD *)a3 + 4) = v13;
  *((_WORD *)a3 + 5) = v13;
  if (!(_WORD)v13)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  *((_BYTE *)a3 + 14) = 2;
  *((_WORD *)a3 + 5) = v13;
  *((_WORD *)a3 + 6) = 1;
  *v14 = 1;
  if (*((_BYTE *)a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 2563, "OI_STATUS genericCommandFormatter(va_list, const HCI_COMMAND_DESCRIPTOR *, OI_BYTE_STREAM *, OI_HCI_CONNECTION_HANDLE *, OI_BD_ADDR *, LE_Address *, uint8_t *)");
    goto LABEL_136;
  }
  v15 = *((unsigned __int16 *)a3 + 6);
  if (*((unsigned __int16 *)a3 + 5) - (int)v15 <= 1 || *((_BYTE *)a3 + 14) != 2)
LABEL_136:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  *(_BYTE *)(*a3 + v15) = *(_BYTE *)(a2 + 2);
  *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = *(_BYTE *)(a2 + 3);
  v16 = *((_WORD *)a3 + 6);
  *((_WORD *)a3 + 6) = v16 + 2;
  if (*((_BYTE *)a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 2564, "OI_STATUS genericCommandFormatter(va_list, const HCI_COMMAND_DESCRIPTOR *, OI_BYTE_STREAM *, OI_HCI_CONNECTION_HANDLE *, OI_BD_ADDR *, LE_Address *, uint8_t *)");
    goto LABEL_138;
  }
  if (*((unsigned __int16 *)a3 + 5) <= (unsigned __int16)(v16 + 2)
    || (ptr = v14, *((_BYTE *)a3 + 14) != 2))
  {
LABEL_138:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  }
  v17 = *(_BYTE *)(a2 + 6);
  v18 = *a3;
  *((_WORD *)a3 + 6) = v16 + 3;
  *(_BYTE *)(v18 + (unsigned __int16)(v16 + 2)) = v17;
  v19 = *(unsigned __int8 **)(a2 + 8);
  if (v19)
  {
    v20 = *v19;
    if (v20)
    {
      v21 = 0;
      v97 = a6 + 1;
      v98 = a4;
      v99 = a5;
      v100 = v13;
      while (1)
      {
        switch(v20)
        {
          case 'a':
            v22 = a1++;
            if (*((_BYTE *)a3 + 15))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 2612, "OI_STATUS genericCommandFormatter(va_list, const HCI_COMMAND_DESCRIPTOR *, OI_BYTE_STREAM *, OI_HCI_CONNECTION_HANDLE *, OI_BD_ADDR *, LE_Address *, uint8_t *)");
LABEL_140:
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
            }
            v23 = *((unsigned __int16 *)a3 + 6);
            if (*((unsigned __int16 *)a3 + 5) - (int)v23 <= 5 || *((_BYTE *)a3 + 14) != 2)
              goto LABEL_140;
            v24 = *v22;
            sub_10004C878(*a3 + v23, *v22, 6uLL);
            *((_WORD *)a3 + 6) += 6;
            if (a5)
            {
              v25 = *(_DWORD *)v24;
              *(_WORD *)(a5 + 4) = *(_WORD *)(v24 + 4);
              *(_DWORD *)a5 = v25;
            }
            if (a6)
            {
              v26 = *(_DWORD *)v24;
              *((_WORD *)v97 + 2) = *(_WORD *)(v24 + 4);
              *(_DWORD *)v97 = v26;
            }
            goto LABEL_110;
          case 'b':
            v31 = (const void **)a1++;
            if (*((_BYTE *)a3 + 15))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 2725, "OI_STATUS genericCommandFormatter(va_list, const HCI_COMMAND_DESCRIPTOR *, OI_BYTE_STREAM *, OI_HCI_CONNECTION_HANDLE *, OI_BD_ADDR *, LE_Address *, uint8_t *)");
LABEL_144:
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
            }
            v32 = *((unsigned __int16 *)a3 + 6);
            if (*((unsigned __int16 *)a3 + 5) - (int)v32 <= 30 || *((_BYTE *)a3 + 14) != 2)
              goto LABEL_144;
            memmove((void *)(*a3 + v32), *v31, 0x1FuLL);
            v33 = *((_WORD *)a3 + 6) + 31;
            goto LABEL_87;
          case 'c':
            v34 = a1++;
            if (*((_BYTE *)a3 + 15))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 2694, "OI_STATUS genericCommandFormatter(va_list, const HCI_COMMAND_DESCRIPTOR *, OI_BYTE_STREAM *, OI_HCI_CONNECTION_HANDLE *, OI_BD_ADDR *, LE_Address *, uint8_t *)");
LABEL_146:
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
            }
            v35 = *((unsigned __int16 *)a3 + 6);
            if (*((unsigned __int16 *)a3 + 5) - (int)v35 <= 9 || *((_BYTE *)a3 + 14) != 2)
              goto LABEL_146;
            goto LABEL_78;
          case 'd':
            v36 = a1++;
            if (*((_BYTE *)a3 + 15))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 2732, "OI_STATUS genericCommandFormatter(va_list, const HCI_COMMAND_DESCRIPTOR *, OI_BYTE_STREAM *, OI_HCI_CONNECTION_HANDLE *, OI_BD_ADDR *, LE_Address *, uint8_t *)");
LABEL_148:
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
            }
            v37 = *((unsigned __int16 *)a3 + 6);
            if (*((unsigned __int16 *)a3 + 5) - (int)v37 <= 15 || *((_BYTE *)a3 + 14) != 2)
              goto LABEL_148;
            goto LABEL_82;
          case 'e':
            v38 = a1++;
            if (*((_BYTE *)a3 + 15))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 2672, "OI_STATUS genericCommandFormatter(va_list, const HCI_COMMAND_DESCRIPTOR *, OI_BYTE_STREAM *, OI_HCI_CONNECTION_HANDLE *, OI_BD_ADDR *, LE_Address *, uint8_t *)");
LABEL_150:
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
            }
            v39 = *((unsigned __int16 *)a3 + 6);
            if ((unint64_t)*((unsigned __int16 *)a3 + 5) - v39 <= 7 || *((_BYTE *)a3 + 14) != 2)
              goto LABEL_150;
            goto LABEL_108;
          case 'f':
          case 'j':
          case 'q':
          case 'r':
          case 's':
          case 't':
          case 'u':
          case 'v':
          case 'x':
          case 'y':
LABEL_128:
            if (sub_10005549C())
            {
              sub_100054530("unknown cmd parm type %d", *(unsigned __int8 *)(*(_QWORD *)(a2 + 8) + v21));
              v96 = sub_1000544A0(0x2Eu);
              if (os_log_type_enabled(v96, OS_LOG_TYPE_ERROR))
              {
                *(_DWORD *)buf = 136446466;
                v104 = sub_100054494();
                v105 = 1024;
                v106 = 615;
                _os_log_error_impl((void *)&_mh_execute_header, v96, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
              }
            }
            sub_100053298(ptr);
            return 615;
          case 'g':
            v40 = a1++;
            if (*((_BYTE *)a3 + 15))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 2648, "OI_STATUS genericCommandFormatter(va_list, const HCI_COMMAND_DESCRIPTOR *, OI_BYTE_STREAM *, OI_HCI_CONNECTION_HANDLE *, OI_BD_ADDR *, LE_Address *, uint8_t *)");
LABEL_152:
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
            }
            v41 = *((unsigned __int16 *)a3 + 6);
            if (*((unsigned __int16 *)a3 + 5) <= v41 || *((_BYTE *)a3 + 14) != 2)
              goto LABEL_152;
            v42 = *(_DWORD *)v40;
            v43 = *a3;
            *((_WORD *)a3 + 6) = v41 + 1;
            *(_BYTE *)(v43 + v41) = v42;
            if (a7)
              *a7 = v42;
            goto LABEL_110;
          case 'h':
            v44 = a1++;
            if (*((_BYTE *)a3 + 15))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 2637, "OI_STATUS genericCommandFormatter(va_list, const HCI_COMMAND_DESCRIPTOR *, OI_BYTE_STREAM *, OI_HCI_CONNECTION_HANDLE *, OI_BD_ADDR *, LE_Address *, uint8_t *)");
LABEL_154:
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
            }
            v45 = *((unsigned __int16 *)a3 + 6);
            if (*((unsigned __int16 *)a3 + 5) - (int)v45 <= 1 || *((_BYTE *)a3 + 14) != 2)
              goto LABEL_154;
            v46 = (_BYTE *)*v44;
            *(_BYTE *)(*a3 + v45) = *v46;
            *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = v46[1];
            *((_WORD *)a3 + 6) += 2;
            if (a4)
              *a4 = v46;
            goto LABEL_110;
          case 'i':
            v47 = (const void **)a1++;
            if (*((_BYTE *)a3 + 15))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 2718, "OI_STATUS genericCommandFormatter(va_list, const HCI_COMMAND_DESCRIPTOR *, OI_BYTE_STREAM *, OI_HCI_CONNECTION_HANDLE *, OI_BD_ADDR *, LE_Address *, uint8_t *)");
LABEL_156:
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
            }
            v48 = *((unsigned __int16 *)a3 + 6);
            if (*((unsigned __int16 *)a3 + 5) - (int)v48 <= 239 || *((_BYTE *)a3 + 14) != 2)
              goto LABEL_156;
            memmove((void *)(*a3 + v48), *v47, 0xF0uLL);
            v33 = *((_WORD *)a3 + 6) + 240;
            goto LABEL_87;
          case 'k':
            v36 = a1++;
            if (*((_BYTE *)a3 + 15))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 2658, "OI_STATUS genericCommandFormatter(va_list, const HCI_COMMAND_DESCRIPTOR *, OI_BYTE_STREAM *, OI_HCI_CONNECTION_HANDLE *, OI_BD_ADDR *, LE_Address *, uint8_t *)");
LABEL_158:
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
            }
            v37 = *((unsigned __int16 *)a3 + 6);
            if ((unint64_t)*((unsigned __int16 *)a3 + 5) - v37 <= 0xF || *((_BYTE *)a3 + 14) != 2)
              goto LABEL_158;
            goto LABEL_82;
          case 'l':
            v49 = a1++;
            if (*((_BYTE *)a3 + 15))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 2701, "OI_STATUS genericCommandFormatter(va_list, const HCI_COMMAND_DESCRIPTOR *, OI_BYTE_STREAM *, OI_HCI_CONNECTION_HANDLE *, OI_BD_ADDR *, LE_Address *, uint8_t *)");
LABEL_160:
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
            }
            v50 = *((unsigned __int16 *)a3 + 6);
            if (*((unsigned __int16 *)a3 + 5) <= v50 || *((_BYTE *)a3 + 14) != 2)
              goto LABEL_160;
            v51 = *(_DWORD *)v49;
            v52 = *a3;
            *((_WORD *)a3 + 6) = v50 + 1;
            *(_BYTE *)(v52 + v50) = v51;
            v53 = v51;
            v54 = v51 + ((v51 + 3) >> 2);
            if (v53 <= (v54 + 1))
              v55 = v54 + 1;
            else
              v55 = -1;
            byte_100999058 = v55;
            goto LABEL_110;
          case 'm':
            v56 = a1++;
            if (*((_BYTE *)a3 + 15))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 2739, "OI_STATUS genericCommandFormatter(va_list, const HCI_COMMAND_DESCRIPTOR *, OI_BYTE_STREAM *, OI_HCI_CONNECTION_HANDLE *, OI_BD_ADDR *, LE_Address *, uint8_t *)");
LABEL_162:
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
            }
            v57 = *((unsigned __int16 *)a3 + 6);
            if (*((unsigned __int16 *)a3 + 5) - (int)v57 <= 4 || *((_BYTE *)a3 + 14) != 2)
              goto LABEL_162;
            v58 = (int *)*v56;
            v59 = *a3 + v57;
            v60 = *v58;
            *(_BYTE *)(v59 + 4) = *((_BYTE *)v58 + 4);
            *(_DWORD *)v59 = v60;
            v61 = *((_WORD *)a3 + 6) + 5;
            goto LABEL_109;
          case 'n':
            v62 = a6;
            v63 = a7;
            v64 = (const char **)a1++;
            v65 = *v64;
            v66 = strlen(*v64);
            v67 = v66;
            if ((unsigned __int16)v66 <= 0xF8uLL)
              v68 = v66;
            else
              v68 = 248;
            v69 = *a3;
            v70 = *((unsigned __int16 *)a3 + 6);
            if (*((_BYTE *)a3 + 15))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 2683, "OI_STATUS genericCommandFormatter(va_list, const HCI_COMMAND_DESCRIPTOR *, OI_BYTE_STREAM *, OI_HCI_CONNECTION_HANDLE *, OI_BD_ADDR *, LE_Address *, uint8_t *)");
              v71 = 0;
            }
            else
            {
              v71 = *((unsigned __int16 *)a3 + 5) - (_DWORD)v70;
            }
            if (v71 < v68 || *((_BYTE *)a3 + 14) != 2)
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
            memmove((void *)(v69 + v70), v65, v68);
            *((_WORD *)a3 + 6) += v68;
            v90 = v68 > 0xF7u;
            a7 = v63;
            a6 = v62;
            a5 = v99;
            v13 = v100;
            a4 = v98;
            if (v90)
              goto LABEL_110;
            while (!*((_BYTE *)a3 + 15))
            {
              v91 = *((unsigned __int16 *)a3 + 6);
              if (*((unsigned __int16 *)a3 + 5) <= v91 || *((_BYTE *)a3 + 14) != 2)
                goto LABEL_133;
              v92 = *a3;
              *((_WORD *)a3 + 6) = v91 + 1;
              *(_BYTE *)(v92 + v91) = 0;
              v93 = (unsigned __int16)v67++;
              if (v93 >= 0xF7)
                goto LABEL_110;
            }
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 2685, "OI_STATUS genericCommandFormatter(va_list, const HCI_COMMAND_DESCRIPTOR *, OI_BYTE_STREAM *, OI_HCI_CONNECTION_HANDLE *, OI_BD_ADDR *, LE_Address *, uint8_t *)");
LABEL_133:
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
          case 'o':
            v34 = a1++;
            if (*((_BYTE *)a3 + 15))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 2745, "OI_STATUS genericCommandFormatter(va_list, const HCI_COMMAND_DESCRIPTOR *, OI_BYTE_STREAM *, OI_HCI_CONNECTION_HANDLE *, OI_BD_ADDR *, LE_Address *, uint8_t *)");
LABEL_164:
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
            }
            v35 = *((unsigned __int16 *)a3 + 6);
            if (*((unsigned __int16 *)a3 + 5) - (int)v35 <= 9 || *((_BYTE *)a3 + 14) != 2)
              goto LABEL_164;
LABEL_78:
            v72 = (uint64_t *)*v34;
            v73 = *a3 + v35;
            v74 = *v72;
            *(_WORD *)(v73 + 8) = *((_WORD *)v72 + 4);
            *(_QWORD *)v73 = v74;
            v61 = *((_WORD *)a3 + 6) + 10;
            goto LABEL_109;
          case 'p':
            v36 = a1++;
            if (*((_BYTE *)a3 + 15))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 2665, "OI_STATUS genericCommandFormatter(va_list, const HCI_COMMAND_DESCRIPTOR *, OI_BYTE_STREAM *, OI_HCI_CONNECTION_HANDLE *, OI_BD_ADDR *, LE_Address *, uint8_t *)");
LABEL_166:
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
            }
            v37 = *((unsigned __int16 *)a3 + 6);
            if ((unint64_t)*((unsigned __int16 *)a3 + 5) - v37 <= 0xF || *((_BYTE *)a3 + 14) != 2)
              goto LABEL_166;
LABEL_82:
            *(_OWORD *)(*a3 + v37) = *(_OWORD *)*v36;
            v61 = *((_WORD *)a3 + 6) + 16;
            goto LABEL_109;
          case 'w':
            v75 = (const void **)a1++;
            if (*((_BYTE *)a3 + 15))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 2751, "OI_STATUS genericCommandFormatter(va_list, const HCI_COMMAND_DESCRIPTOR *, OI_BYTE_STREAM *, OI_HCI_CONNECTION_HANDLE *, OI_BD_ADDR *, LE_Address *, uint8_t *)");
LABEL_168:
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
            }
            v76 = *((unsigned __int16 *)a3 + 6);
            if (*((unsigned __int16 *)a3 + 5) - (int)v76 <= 71 || *((_BYTE *)a3 + 14) != 2)
              goto LABEL_168;
            memmove((void *)(*a3 + v76), *v75, 0x48uLL);
            v33 = *((_WORD *)a3 + 6) + 72;
LABEL_87:
            *((_WORD *)a3 + 6) = v33;
            goto LABEL_110;
          case 'z':
            v77 = a1++;
            if (*((_BYTE *)a3 + 15))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 2626, "OI_STATUS genericCommandFormatter(va_list, const HCI_COMMAND_DESCRIPTOR *, OI_BYTE_STREAM *, OI_HCI_CONNECTION_HANDLE *, OI_BD_ADDR *, LE_Address *, uint8_t *)");
LABEL_170:
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
            }
            v78 = *((unsigned __int16 *)a3 + 6);
            if (*((unsigned __int16 *)a3 + 5) <= v78 || *((_BYTE *)a3 + 14) != 2)
              goto LABEL_170;
            v79 = *(_DWORD *)v77;
            v80 = *a3;
            *((_WORD *)a3 + 6) = v78 + 1;
            *(_BYTE *)(v80 + v78) = v79;
            if (a6)
              *a6 = v79;
            goto LABEL_110;
          default:
            switch(v20)
            {
              case '1':
                v27 = a1++;
                if (*((_BYTE *)a3 + 15))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 2577, "OI_STATUS genericCommandFormatter(va_list, const HCI_COMMAND_DESCRIPTOR *, OI_BYTE_STREAM *, OI_HCI_CONNECTION_HANDLE *, OI_BD_ADDR *, LE_Address *, uint8_t *)");
LABEL_142:
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
                }
                v28 = *((unsigned __int16 *)a3 + 6);
                if (*((unsigned __int16 *)a3 + 5) <= v28 || *((_BYTE *)a3 + 14) != 2)
                  goto LABEL_142;
                v29 = *(_DWORD *)v27;
                v30 = *a3;
                *((_WORD *)a3 + 6) = v28 + 1;
                *(_BYTE *)(v30 + v28) = v29;
                goto LABEL_110;
              case '2':
                v81 = a1++;
                if (*((_BYTE *)a3 + 15))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 2584, "OI_STATUS genericCommandFormatter(va_list, const HCI_COMMAND_DESCRIPTOR *, OI_BYTE_STREAM *, OI_HCI_CONNECTION_HANDLE *, OI_BD_ADDR *, LE_Address *, uint8_t *)");
LABEL_172:
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
                }
                v82 = *((unsigned __int16 *)a3 + 6);
                if (*((unsigned __int16 *)a3 + 5) - (int)v82 <= 1 || *((_BYTE *)a3 + 14) != 2)
                  goto LABEL_172;
                v83 = *(_DWORD *)v81;
                *(_BYTE *)(*a3 + v82) = v83;
                *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = BYTE1(v83);
                v61 = *((_WORD *)a3 + 6) + 2;
                goto LABEL_109;
              case '3':
                v84 = a1++;
                if (*((_BYTE *)a3 + 15))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 2591, "OI_STATUS genericCommandFormatter(va_list, const HCI_COMMAND_DESCRIPTOR *, OI_BYTE_STREAM *, OI_HCI_CONNECTION_HANDLE *, OI_BD_ADDR *, LE_Address *, uint8_t *)");
LABEL_174:
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
                }
                v85 = *((unsigned __int16 *)a3 + 6);
                if (*((unsigned __int16 *)a3 + 5) - (int)v85 <= 2 || *((_BYTE *)a3 + 14) != 2)
                  goto LABEL_174;
                v86 = *(_DWORD *)v84;
                *(_BYTE *)(*a3 + v85) = v86;
                *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = BYTE1(v86);
                *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 2) = BYTE2(v86);
                v61 = *((_WORD *)a3 + 6) + 3;
                goto LABEL_109;
              case '4':
                v87 = a1++;
                if (*((_BYTE *)a3 + 15))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 2598, "OI_STATUS genericCommandFormatter(va_list, const HCI_COMMAND_DESCRIPTOR *, OI_BYTE_STREAM *, OI_HCI_CONNECTION_HANDLE *, OI_BD_ADDR *, LE_Address *, uint8_t *)");
LABEL_176:
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
                }
                v88 = *((unsigned __int16 *)a3 + 6);
                if (*((unsigned __int16 *)a3 + 5) - (int)v88 <= 3 || *((_BYTE *)a3 + 14) != 2)
                  goto LABEL_176;
                v89 = *(_DWORD *)v87;
                *(_BYTE *)(*a3 + v88) = v89;
                *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = BYTE1(v89);
                *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 2) = BYTE2(v89);
                *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 3) = HIBYTE(v89);
                v61 = *((_WORD *)a3 + 6) + 4;
                goto LABEL_109;
              case '8':
                v38 = a1++;
                if (*((_BYTE *)a3 + 15))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 2605, "OI_STATUS genericCommandFormatter(va_list, const HCI_COMMAND_DESCRIPTOR *, OI_BYTE_STREAM *, OI_HCI_CONNECTION_HANDLE *, OI_BD_ADDR *, LE_Address *, uint8_t *)");
LABEL_178:
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
                }
                v39 = *((unsigned __int16 *)a3 + 6);
                if (*((unsigned __int16 *)a3 + 5) - (int)v39 <= 7 || *((_BYTE *)a3 + 14) != 2)
                  goto LABEL_178;
LABEL_108:
                *(_QWORD *)(*a3 + v39) = *(_QWORD *)*v38;
                v61 = *((_WORD *)a3 + 6) + 8;
LABEL_109:
                *((_WORD *)a3 + 6) = v61;
LABEL_110:
                ++v21;
                v20 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 8) + v21);
                if (!*(_BYTE *)(*(_QWORD *)(a2 + 8) + v21))
                  goto LABEL_121;
                break;
              default:
                goto LABEL_128;
            }
            break;
        }
      }
    }
  }
LABEL_121:
  if (*((_BYTE *)a3 + 14) == 2)
  {
    v94 = *((unsigned __int16 *)a3 + 6);
    *((_WORD *)a3 + 5) = v94;
  }
  else
  {
    v94 = *((unsigned __int16 *)a3 + 5);
  }
  *((_BYTE *)a3 + 14) = 15;
  if (v13 != v94)
    sub_100253460();
  return 0;
}

uint64_t (*sub_100196414(uint64_t a1))(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  int v1;
  int v2;
  uint64_t (*result)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *);
  int v4;

  v1 = *(unsigned __int8 *)(a1 + 18);
  v2 = a1;
  result = (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_100196CF4;
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_100196CF8;
    case 2:
      return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_100196DC0;
    case 3:
      return sub_100196E98;
    case 4:
      return sub_100196FAC;
    case 5:
      return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_1001970C8;
    case 6:
      return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_100197258;
    case 7:
      return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_10019738C;
    case 8:
      return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_100197584;
    case 9:
      return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_1001976F0;
    case 10:
      v4 = sub_100052E20(v2);
      if (v4 > 180)
      {
        if (v4 <= 243)
        {
          switch(v4)
          {
            case 181:
              return sub_100198EA8;
            case 182:
            case 185:
            case 186:
            case 187:
              return 0;
            case 183:
              return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_100198FC0;
            case 184:
            case 188:
              return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_100199074;
            default:
              if (v4 == 198)
              {
                result = (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_100199128;
              }
              else
              {
                if (v4 != 230)
                  return 0;
                result = (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_10019926C;
              }
              break;
          }
          return result;
        }
        if (v4 <= 258)
        {
          switch(v4)
          {
            case 244:
              result = (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_1001994A4;
              break;
            case 245:
              result = (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_1001998A0;
              break;
            case 253:
              result = (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_100199628;
              break;
            case 254:
              result = (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_1001997C8;
              break;
            case 255:
              result = (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_1001996F0;
              break;
            default:
              return 0;
          }
          return result;
        }
        if (v4 == 259)
          return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_100199A34;
        if (v4 == 263)
          return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_100199EBC;
        if (v4 != 272)
          return 0;
        return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))nullsub_101;
      }
      if (v4 > 119)
      {
        switch(v4)
        {
          case 143:
            return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_100197CA8;
          case 144:
            return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_100197E64;
          case 145:
            return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_100197FC4;
          case 146:
            return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_1001980D0;
          case 147:
            return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_100198240;
          case 148:
          case 149:
          case 150:
          case 151:
          case 152:
          case 153:
          case 154:
          case 158:
          case 159:
          case 160:
          case 161:
          case 162:
            return 0;
          case 155:
            return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_1001983CC;
          case 156:
            return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_10019866C;
          case 157:
            return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_1001987D4;
          case 163:
            return sub_100198C88;
          case 164:
            return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_100198D9C;
          default:
            if (v4 == 120)
            {
              result = (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_1001988FC;
            }
            else
            {
              if (v4 != 132)
                return 0;
              result = (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_100198B60;
            }
            break;
        }
        return result;
      }
      if (v4 <= 94)
      {
        switch(v4)
        {
          case 25:
            return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_100198508;
          case 65:
            return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_1001977EC;
          case 80:
            return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_1001979D4;
          default:
            return 0;
        }
      }
      else
      {
        if (v4 <= 113)
        {
          if (v4 != 95)
          {
            if (v4 != 99)
              return 0;
            return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_100197AB4;
          }
          return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))nullsub_101;
        }
        if (v4 == 114)
        {
          return sub_1001989C8;
        }
        else
        {
          if (v4 != 119)
            return 0;
          return sub_100198AA4;
        }
      }
    case 11:
      return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_10019733C;
    case 12:
      return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_1001973DC;
    default:
      sub_100253460();
      return 0;
  }
}

uint64_t sub_100196768(unsigned __int16 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t result;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  char v17;
  _DWORD v18[2];
  int v19;
  __int16 v20;
  uint64_t v21;
  void *v22[2];
  uint64_t *v23;
  uint64_t v24;

  v21 = 0;
  v24 = -1;
  if (!DWORD2(xmmword_1009991F8))
    return 103;
  if ((sub_100048064() & 1) != 0)
    return 0;
  if (dword_100998FC8 != 2)
    return 627;
  if ((sub_100052F88() & 1) != 0)
    return 3704;
  v22[0] = 0;
  v22[1] = 0;
  v19 = 0;
  v20 = 0;
  v18[0] = 0;
  *(_DWORD *)((char *)v18 + 3) = 0;
  v17 = 0;
  v23 = &a9;
  v11 = sub_100052DE8(a1);
  if (!v11)
    return 616;
  v12 = (uint64_t)v11;
  v13 = *((unsigned __int16 *)v11 + 2);
  if ((v13 & 0xC000) != 0 || (*((_BYTE *)&xmmword_100998FE8 + (v13 >> 8)) & v13) == 0)
    return 628;
  if (!v11[17])
    sub_100253460();
  if (*(_BYTE *)(v12 + 16))
    result = sub_10004CC74((int *)v23, v12, (uint64_t *)v22, (uint64_t)v18, &v24, 0, &v17);
  else
    result = sub_1001952FC(v23, v12, (uint64_t *)v22, &v21, (uint64_t)&v19, v18, &v17);
  if (!(_DWORD)result)
  {
    v14 = *(unsigned __int16 *)(v12 + 2);
    if (v14 == 1064 || v14 == 1031)
    {
      v15 = v21;
      if (!v21)
      {
        sub_100253460();
        v15 = v21;
      }
      v19 = *(_DWORD *)(v15 + 48);
      v20 = *(_WORD *)(v15 + 52);
    }
    switch(*(_BYTE *)(v12 + 19))
    {
      case 6:
        if (!v21)
          sub_100253460();
        break;
      case 8:
        v16 = *(unsigned __int16 *)(v12 + 2);
        if (v16 != 8205 && v16 != 8259 && v16 != 8325)
          sub_100253460();
        break;
      case 9:
        if (*(_WORD *)(v12 + 2) != 8292)
          sub_100253460();
        break;
      default:
        return sub_100052E64(v22[0]);
    }
    return sub_100052E64(v22[0]);
  }
  return result;
}

uint64_t sub_1001969F4(unsigned __int8 *a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  NSObject *v11;
  int v13;

  v4 = *a1;
  if (v4 == 14)
  {
    v5 = 2;
    v6 = 5;
    v7 = 3;
    v8 = 4;
  }
  else
  {
    if (v4 != 15)
      return 1;
    v5 = 3;
    v6 = 2;
    v7 = 4;
    v8 = 5;
  }
  v9 = a1[v7] | (a1[v8] << 8);
  v10 = a1[v6];
  byte_100999059 = a1[v5];
  if ((unsigned __int16)word_100999038 != v9)
    return 1;
  sub_10011D44C("raw HCI Event");
  if (sub_10005549C())
  {
    sub_100054530("raw HCI Event :opcode=0x%4x payloadlen=%d", v9, a2);
    v11 = sub_1000544A0(0x2Eu);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
  if (off_100999048)
    off_100999048(v10, a1, a2, qword_100999040);
  off_100999050 = 0;
  v13 = 0;
  if (sub_10004AF24(254, &v13))
    sub_10019F090(v13);
  return 0;
}

uint64_t sub_100196B34(int a1, const void *a2, unsigned int a3, uint64_t (*a4)(_QWORD, _QWORD, _QWORD, _QWORD), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  size_t v14;
  NSObject *v15;
  char *v16;
  void *v17;
  __int16 v18;
  __int128 v20;
  uint64_t v21;
  uint64_t (*v22)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t *v23;

  v23 = 0;
  v14 = a3 + 7;
  sub_10011D44C("raw HCI command");
  if (sub_10005549C())
  {
    sub_100054530("raw HCI command: opcode=0x%4x payloadlen=%d", a1, a3);
    v15 = sub_1000544A0(0x2Eu);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
  v16 = (char *)sub_100052DC0(v14);
  if (!v16)
    return 104;
  if (!(_WORD)v14)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v17 = v16;
  *v16 = 1;
  if ((unsigned __int16)v14 <= 2u)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  *(_WORD *)(v16 + 1) = a1;
  if ((unsigned __int16)v14 == 3)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v16[3] = a3;
  if (a3)
  {
    if ((unsigned __int16)v14 - 4 < a3)
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    memmove(v16 + 4, a2, a3);
    v18 = a3 + 4;
  }
  else
  {
    v18 = 4;
  }
  word_100999038 = a1;
  v23 = &a10;
  qword_100999040 = a9;
  off_100999048 = a4;
  LODWORD(v20) = 0;
  *((_QWORD *)&v20 + 1) = 0;
  WORD2(v20) = a1;
  *(_DWORD *)((char *)&v20 + 6) = -16908016;
  v21 = 0;
  v22 = a4;
  off_100999050 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_1001969F4;
  return sub_100052E64(v17, v18, &v20);
}

uint64_t sub_100196CF8(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t), uint64_t *a3)
{
  uint64_t (*v3)(uint64_t, uint64_t);
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = a2;
  if (*((_BYTE *)a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 126, "void cmdComplete_ret_8_cb(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)");
    v3 = a2;
    goto LABEL_4;
  }
  v5 = *((unsigned __int16 *)a3 + 5);
  v6 = *((unsigned __int16 *)a3 + 6);
  if (v5 == (_DWORD)v6)
  {
LABEL_4:
    v7 = 0;
    if ((_DWORD)a1)
      a1 = a1;
    else
      a1 = 605;
    return v3(a1, v7);
  }
  if (v5 <= v6 || *((_BYTE *)a3 + 14) != 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v9 = *a3;
  *((_WORD *)a3 + 6) = v6 + 1;
  v7 = *(unsigned __int8 *)(v9 + v6);
  return v3(a1, v7);
}

uint64_t sub_100196DC0(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD), uint64_t a3)
{
  uint64_t (*v3)(uint64_t, _QWORD);
  int v5;
  unsigned __int16 v6;

  v3 = a2;
  if (*(_BYTE *)(a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 151, "void cmdComplete_ret_16_cb(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)");
    v3 = a2;
    goto LABEL_4;
  }
  v5 = *(unsigned __int16 *)(a3 + 12);
  if ((unsigned __int16)(*(_WORD *)(a3 + 10) - v5) <= 1u)
  {
LABEL_4:
    v6 = 0;
    if ((_DWORD)a1)
      a1 = a1;
    else
      a1 = 605;
    return v3(a1, v6);
  }
  if (*(_BYTE *)(a3 + 14) != 1 || *(unsigned __int16 *)(a3 + 10) - v5 <= 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v6 = *(_WORD *)(*(_QWORD *)a3 + *(unsigned __int16 *)(a3 + 12));
  *(_WORD *)(a3 + 12) = v5 + 2;
  return v3(a1, v6);
}

uint64_t sub_100196E98(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  unsigned __int8 *v11;
  int v12;
  int v13;

  v3 = a2;
  if (*((_BYTE *)a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 198, "void cmdComplete_ret_16_8_cb(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)");
    v3 = a2;
    goto LABEL_4;
  }
  v5 = *((unsigned __int16 *)a3 + 5);
  v6 = *((unsigned __int16 *)a3 + 6);
  if ((unsigned __int16)(v5 - v6) <= 2u)
  {
LABEL_4:
    v7 = 0;
    v8 = 0;
    if ((_DWORD)a1)
      a1 = a1;
    else
      a1 = 605;
    return v3(a1, v7, v8);
  }
  if (*((_BYTE *)a3 + 14) != 1 || (int)(v5 - v6) <= 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v10 = *a3;
  v11 = (unsigned __int8 *)(*a3 + v6);
  v12 = *v11;
  v13 = v11[1];
  *((_WORD *)a3 + 6) = v6 + 2;
  if (v5 <= (unsigned __int16)(v6 + 2))
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v7 = v12 | (v13 << 8);
  *((_WORD *)a3 + 6) = v6 + 3;
  v8 = *(unsigned __int8 *)(v10 + (unsigned __int16)(v6 + 2));
  return v3(a1, v7, v8);
}

uint64_t sub_100196FAC(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, _QWORD), uint64_t *a3)
{
  uint64_t (*v3)(uint64_t, uint64_t, _QWORD);
  int v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int16 v8;
  uint64_t v10;
  unsigned __int8 *v11;
  int v12;
  int v13;

  v3 = a2;
  if (*((_BYTE *)a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 314, "void cmdComplete_ret_16_16_cb(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)");
    v3 = a2;
    goto LABEL_4;
  }
  v5 = *((unsigned __int16 *)a3 + 5);
  v6 = *((unsigned __int16 *)a3 + 6);
  if ((unsigned __int16)(v5 - v6) <= 3u)
  {
LABEL_4:
    v7 = 0;
    v8 = 0;
    if ((_DWORD)a1)
      a1 = a1;
    else
      a1 = 605;
    return v3(a1, v7, v8);
  }
  if (*((_BYTE *)a3 + 14) != 1 || v5 - (int)v6 <= 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v10 = *a3;
  v11 = (unsigned __int8 *)(*a3 + v6);
  v12 = *v11;
  v13 = v11[1];
  *((_WORD *)a3 + 6) = v6 + 2;
  if (v5 - (unsigned __int16)(v6 + 2) <= 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v7 = v12 | (v13 << 8);
  v8 = *(_WORD *)(v10 + (unsigned __int16)(v6 + 2));
  *((_WORD *)a3 + 6) = v6 + 4;
  return v3(a1, v7, v8);
}

uint64_t sub_1001970C8(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, uint64_t, _QWORD), uint64_t *a3)
{
  uint64_t (*v3)(uint64_t, _QWORD, _QWORD, uint64_t, _QWORD);
  int v5;
  uint64_t v6;
  unsigned __int16 v7;
  unsigned __int16 v8;
  uint64_t v9;
  unsigned __int16 v10;
  uint64_t v12;
  unsigned __int8 *v13;
  int v14;
  int v15;

  v3 = a2;
  if (*((_BYTE *)a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 363, "void cmdComplete_ret_16_16_16_16_cb(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)");
    v3 = a2;
    goto LABEL_4;
  }
  v5 = *((unsigned __int16 *)a3 + 5);
  v6 = *((unsigned __int16 *)a3 + 6);
  if ((unsigned __int16)(v5 - v6) <= 7u)
  {
LABEL_4:
    v7 = 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    if ((_DWORD)a1)
      a1 = a1;
    else
      a1 = 605;
    return v3(a1, v7, v8, v9, v10);
  }
  if (*((_BYTE *)a3 + 14) != 1 || v5 - (int)v6 <= 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v12 = *a3;
  v7 = *(_WORD *)(*a3 + v6);
  *((_WORD *)a3 + 6) = v6 + 2;
  if (v5 - (unsigned __int16)(v6 + 2) <= 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v8 = *(_WORD *)(v12 + (unsigned __int16)(v6 + 2));
  *((_WORD *)a3 + 6) = v6 + 4;
  if (v5 - (unsigned __int16)(v6 + 4) <= 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v13 = (unsigned __int8 *)(v12 + (unsigned __int16)(v6 + 4));
  v14 = *v13;
  v15 = v13[1];
  *((_WORD *)a3 + 6) = v6 + 6;
  if (v5 - (unsigned __int16)(v6 + 6) <= 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v9 = v14 | (v15 << 8);
  v10 = *(_WORD *)(v12 + (unsigned __int16)(v6 + 6));
  *((_WORD *)a3 + 6) = v6 + 8;
  return v3(a1, v7, v8, v9, v10);
}

uint64_t sub_100197258(uint64_t a1, uint64_t (*a2)(uint64_t, __int128 *), uint64_t a3)
{
  uint64_t (*v3)(uint64_t, __int128 *);
  int v5;
  __int128 *v6;
  int v8;

  v3 = a2;
  if (*(_BYTE *)(a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 171, "void cmdComplete_ret_handle_cb(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)");
    v3 = a2;
    goto LABEL_4;
  }
  v5 = *(unsigned __int16 *)(a3 + 12);
  if ((unsigned __int16)(*(_WORD *)(a3 + 10) - v5) <= 1u)
  {
LABEL_4:
    v6 = 0;
    if ((_DWORD)a1)
      a1 = a1;
    else
      a1 = 605;
    return v3(a1, v6);
  }
  if (*(_BYTE *)(a3 + 14) != 1 || *(unsigned __int16 *)(a3 + 10) - v5 <= 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v8 = *(unsigned __int16 *)(*(_QWORD *)a3 + *(unsigned __int16 *)(a3 + 12));
  *(_WORD *)(a3 + 12) = v5 + 2;
  v6 = sub_10019ACEC(v8);
  v3 = a2;
  return v3(a1, v6);
}

uint64_t sub_10019733C(unsigned int a1, uint64_t (*a2)(uint64_t, __int128 *, _QWORD), uint64_t *a3)
{
  uint64_t v4;
  char v7;
  __int128 *v8;

  v8 = 0;
  v7 = 0;
  LODWORD(v4) = sub_10019A030(&v8, &v7, a3);
  if (a1)
    v4 = a1;
  else
    v4 = v4;
  return a2(v4, v8, v7);
}

uint64_t sub_10019738C(unsigned int a1, uint64_t (*a2)(uint64_t, __int128 *, _QWORD), uint64_t *a3)
{
  uint64_t v4;
  unsigned __int8 v7;
  __int128 *v8;

  v8 = 0;
  v7 = 0;
  LODWORD(v4) = sub_10019A030(&v8, &v7, a3);
  if (a1)
    v4 = a1;
  else
    v4 = v4;
  return a2(v4, v8, v7);
}

uint64_t sub_1001973DC(unsigned int a1, uint64_t (*a2)(uint64_t, __int128 *, uint64_t, uint64_t), uint64_t *a3)
{
  uint64_t (*v3)(uint64_t, __int128 *, uint64_t, uint64_t);
  uint64_t v6;
  __int128 *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;

  v3 = a2;
  if (*((_BYTE *)a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 239, "OI_STATUS parse_h_8_8(OI_HCI_CONNECTION_HANDLE *, uint8_t *, uint8_t *, OI_BYTE_STREAM *)");
    v3 = a2;
LABEL_4:
    v7 = 0;
    v8 = 0;
    v9 = 0;
    v10 = 605;
    goto LABEL_5;
  }
  v6 = *((unsigned __int16 *)a3 + 6);
  if ((unsigned __int16)(*((_WORD *)a3 + 5) - v6) < 3u)
    goto LABEL_4;
  if (*((_BYTE *)a3 + 14) != 1 || *((unsigned __int16 *)a3 + 5) - (int)v6 <= 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v13 = *(unsigned __int16 *)(*a3 + v6);
  *((_WORD *)a3 + 6) = v6 + 2;
  v7 = sub_10019ACEC(v13);
  if (v7)
  {
    if (*((_BYTE *)a3 + 15))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 250, "OI_STATUS parse_h_8_8(OI_HCI_CONNECTION_HANDLE *, uint8_t *, uint8_t *, OI_BYTE_STREAM *)");
    }
    else
    {
      v14 = *((unsigned __int16 *)a3 + 5);
      v15 = *((unsigned __int16 *)a3 + 6);
      if (v14 > v15 && *((_BYTE *)a3 + 14) == 1)
      {
        v16 = *a3;
        *((_WORD *)a3 + 6) = v15 + 1;
        if (v14 <= (int)v15 + 1)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
        v10 = 0;
        v8 = *(unsigned __int8 *)(v16 + v15);
        *((_WORD *)a3 + 6) = v15 + 2;
        v9 = *(unsigned __int8 *)(v16 + v15 + 1);
        goto LABEL_18;
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  }
  v8 = 0;
  v9 = 0;
  v10 = 601;
LABEL_18:
  v3 = a2;
LABEL_5:
  if (a1)
    v11 = a1;
  else
    v11 = v10;
  return v3(v11, v7, v8, v9);
}

uint64_t sub_100197584(uint64_t a1, uint64_t (*a2)(uint64_t, __int128 *, _QWORD), uint64_t a3)
{
  uint64_t (*v3)(uint64_t, __int128 *, _QWORD);
  int v6;
  unsigned __int16 v7;
  __int128 *v8;
  int v10;
  __int128 *v11;
  uint64_t v12;

  v3 = a2;
  if (*(_BYTE *)(a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 336, "void cmdComplete_ret_handle_16_cb(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)");
    v3 = a2;
  }
  else
  {
    v6 = *(unsigned __int16 *)(a3 + 12);
    if ((unsigned __int16)(*(_WORD *)(a3 + 10) - v6) > 3u)
    {
      if (*(_BYTE *)(a3 + 14) != 1 || *(unsigned __int16 *)(a3 + 10) - v6 <= 1)
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
      v10 = *(unsigned __int16 *)(*(_QWORD *)a3 + *(unsigned __int16 *)(a3 + 12));
      *(_WORD *)(a3 + 12) = v6 + 2;
      v11 = sub_10019ACEC(v10);
      if (*(_BYTE *)(a3 + 14) == 1)
      {
        v3 = a2;
        if (*(_BYTE *)(a3 + 15))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 348, "void cmdComplete_ret_handle_16_cb(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)");
        }
        else
        {
          v12 = *(unsigned __int16 *)(a3 + 12);
          if (*(unsigned __int16 *)(a3 + 10) - (int)v12 > 1)
          {
            v8 = v11;
            v7 = *(_WORD *)(*(_QWORD *)a3 + v12);
            *(_WORD *)(a3 + 12) = v12 + 2;
            return v3(a1, v8, v7);
          }
        }
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    }
  }
  v7 = 0;
  v8 = 0;
  if ((_DWORD)a1)
    a1 = a1;
  else
    a1 = 605;
  return v3(a1, v8, v7);
}

uint64_t sub_1001976F0(uint64_t a1, uint64_t (*a2)(uint64_t, int *), uint64_t a3)
{
  unsigned int v6;
  int v7;
  unsigned int v8;
  int v10;
  __int16 v11;

  if (*(_BYTE *)(a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 393, "void cmdComplete_ret_bdaddr_cb(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)");
    v11 = 0;
    v10 = 0;
    goto LABEL_4;
  }
  v6 = *(unsigned __int16 *)(a3 + 12);
  v7 = *(unsigned __int16 *)(a3 + 10) - v6;
  v8 = (unsigned __int16)(*(_WORD *)(a3 + 10) - v6);
  v11 = 0;
  v10 = 0;
  if (v8 <= 5)
  {
LABEL_4:
    if ((_DWORD)a1)
      a1 = a1;
    else
      a1 = 605;
    return a2(a1, &v10);
  }
  if (v7 <= 5 || *(_BYTE *)(a3 + 14) != 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  sub_10004C878((uint64_t)&v10, *(_QWORD *)a3 + v6, 6uLL);
  *(_WORD *)(a3 + 12) += 6;
  return a2(a1, &v10);
}

void sub_1001977EC(uint64_t a1, void (*a2)(uint64_t, _QWORD), uint64_t a3)
{
  void (*v3)(uint64_t, _QWORD);
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  NSObject *v13;
  uint64_t v14;
  BOOL v15;

  v3 = a2;
  if (*(_BYTE *)(a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 520, "void readLocalNameCompleteCB(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)");
    v3 = a2;
LABEL_4:
    if ((_DWORD)a1)
      v6 = a1;
    else
      v6 = 605;
    v3(v6, 0);
    return;
  }
  if ((unsigned __int16)(*(_WORD *)(a3 + 10) - *(_WORD *)(a3 + 12)) <= 0xF7u)
    goto LABEL_4;
  v7 = *(unsigned __int8 *)(sub_100252DE8(0x28u) + 6);
  if (v7 >= 0xF9)
    sub_100253460();
  if (v7 >= 0xF8)
    v8 = 248;
  else
    v8 = v7;
  v9 = (_BYTE *)(*(_QWORD *)a3 + *(unsigned __int16 *)(a3 + 12));
  if ((_DWORD)v8)
  {
    v10 = 0;
    while (v9[v10])
    {
      if (v8 == ++v10)
        goto LABEL_20;
    }
    LODWORD(v8) = v10;
LABEL_20:
    if (v8 < 0xF8)
    {
      v12 = 0;
    }
    else
    {
      v11 = sub_100114588(0xF9uLL);
      if (v11)
      {
        v12 = v11;
        memmove(v11, v9, 0xF8uLL);
        v9 = v12;
        LODWORD(v8) = 248;
      }
      else
      {
        if (sub_10005549C())
        {
          sub_100054530("Malloc for local name failed, name truncated to 247 characters.");
          v13 = sub_1000544A0(0x2Eu);
          if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
            sub_1006CE7A4();
        }
        v12 = 0;
        LODWORD(v8) = 247;
      }
    }
    v14 = v8;
    if ((_DWORD)v8 && (char)v9[v8] < 0)
    {
      while (v9[v8] <= 0xBFu)
      {
        v15 = __OFSUB__((_DWORD)v8, 1);
        LODWORD(v8) = v8 - 1;
        if (((int)v8 < 0) ^ v15 | ((_DWORD)v8 == 0))
        {
          LODWORD(v8) = 0;
          break;
        }
      }
      v14 = v8;
    }
    v9[v14] = 0;
    a2(a1, v9);
    if (v12)
      sub_100053298(v12);
  }
  else
  {
    *v9 = 0;
    a2(a1, v9);
  }
}

uint64_t sub_1001979D4(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t), uint64_t a3)
{
  uint64_t (*v3)(uint64_t, uint64_t);
  int v5;
  uint64_t v6;

  v3 = a2;
  if (*(_BYTE *)(a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 453, "void readClassofDeviceCompleteCB(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)");
    v3 = a2;
    goto LABEL_4;
  }
  v5 = *(unsigned __int16 *)(a3 + 12);
  if ((unsigned __int16)(*(_WORD *)(a3 + 10) - v5) <= 2u)
  {
LABEL_4:
    v6 = 0;
    if ((_DWORD)a1)
      a1 = a1;
    else
      a1 = 605;
    return v3(a1, v6);
  }
  if (*(unsigned __int16 *)(a3 + 10) - v5 <= 2 || *(_BYTE *)(a3 + 14) != 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v6 = *(unsigned __int16 *)(*(_QWORD *)a3 + *(unsigned __int16 *)(a3 + 12)) | (*(unsigned __int8 *)(*(_QWORD *)a3 + *(unsigned __int16 *)(a3 + 12) + 2) << 16);
  *(_WORD *)(a3 + 12) = v5 + 3;
  return v3(a1, v6);
}

void sub_100197AB4(uint64_t a1, void (*a2)(uint64_t, uint64_t, void *), uint64_t *a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  int v12;
  unsigned __int16 v13;
  uint64_t v14;
  int *v15;

  v4 = a1;
  if (*((_BYTE *)a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 474, "void readCurrentIACLAPCompleteCB(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)");
    v5 = 0;
    if ((_DWORD)v4)
    {
LABEL_3:
      v6 = 0;
LABEL_4:
      a2(v4, v6, 0);
      return;
    }
  }
  else
  {
    v5 = (unsigned __int16)(*((_WORD *)a3 + 5) - *((_WORD *)a3 + 6));
    if ((_DWORD)a1)
      goto LABEL_3;
  }
  if (*((_BYTE *)a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 482, "void readCurrentIACLAPCompleteCB(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)");
    goto LABEL_23;
  }
  v7 = *((unsigned __int16 *)a3 + 6);
  if (*((unsigned __int16 *)a3 + 5) <= v7 || *((_BYTE *)a3 + 14) != 1)
LABEL_23:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v8 = *a3;
  *((_WORD *)a3 + 6) = v7 + 1;
  v6 = *(unsigned __int8 *)(v8 + v7);
  v9 = sub_100052DC0(4 * v6);
  if (!v9)
  {
    v4 = 106;
    goto LABEL_4;
  }
  v10 = v9;
  if (v5 >= 3 * (int)v6)
  {
    if ((_DWORD)v6)
    {
      if (*((_BYTE *)a3 + 15))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 498, "void readCurrentIACLAPCompleteCB(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)");
      }
      else
      {
        v12 = *((unsigned __int16 *)a3 + 5) - 2;
        v13 = *((_WORD *)a3 + 6);
        v14 = v6;
        v15 = (int *)v9;
        while (v12 > v13 && *((_BYTE *)a3 + 14) == 1)
        {
          *v15++ = *(unsigned __int16 *)(*a3 + v13) | (*(unsigned __int8 *)(*a3 + v13 + 2) << 16);
          v13 += 3;
          *((_WORD *)a3 + 6) = v13;
          if (!--v14)
            goto LABEL_19;
        }
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    }
LABEL_19:
    v11 = 0;
  }
  else
  {
    v11 = 605;
  }
  a2(v11, v6, v10);
  sub_100053298(v10);
}

uint64_t sub_100197CA8(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t *), uint64_t *a3)
{
  unsigned int v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  __int16 v10;

  if (*((_BYTE *)a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 822, "void readLocalVersionInformationCompleteCB(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)");
    v10 = 0;
    v9 = 0;
    goto LABEL_4;
  }
  v5 = *((unsigned __int16 *)a3 + 5);
  v6 = *((unsigned __int16 *)a3 + 6);
  v10 = 0;
  v9 = 0;
  if ((unsigned __int16)(v5 - v6) <= 7u)
  {
LABEL_4:
    if ((_DWORD)a1)
      a1 = a1;
    else
      a1 = 605;
    return a2(a1, &v9);
  }
  if (v5 <= v6 || *((_BYTE *)a3 + 14) != 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v8 = *a3;
  *((_WORD *)a3 + 6) = v6 + 1;
  LOBYTE(v9) = *(_BYTE *)(v8 + v6);
  if ((int)(v5 - (unsigned __int16)(v6 + 1)) <= 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  WORD1(v9) = *(_WORD *)(v8 + v6 + 1);
  *((_WORD *)a3 + 6) = v6 + 3;
  if (v5 <= (unsigned __int16)(v6 + 3))
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  *((_WORD *)a3 + 6) = v6 + 4;
  BYTE4(v9) = *(_BYTE *)(v8 + (unsigned __int16)(v6 + 3));
  if ((int)(v5 - (unsigned __int16)(v6 + 4)) <= 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  HIWORD(v9) = *(_WORD *)(v8 + (unsigned __int16)(v6 + 4));
  *((_WORD *)a3 + 6) = v6 + 6;
  if ((int)(v5 - (unsigned __int16)(v6 + 6)) <= 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v10 = *(_WORD *)(v8 + (unsigned __int16)(v6 + 6));
  *((_WORD *)a3 + 6) = v6 + 8;
  return a2(a1, &v9);
}

uint64_t sub_100197E64(uint64_t a1, uint64_t (*a2)(uint64_t, __int128 *), uint64_t a3)
{
  uint64_t v5;
  __int128 *v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  NSObject *v11;
  uint8_t buf[4];
  void *v13;

  if (*(_BYTE *)(a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 587, "void readLocalSupportedCommandsCompleteCB(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)");
    goto LABEL_4;
  }
  v5 = *(unsigned __int16 *)(a3 + 12);
  if ((unsigned __int16)(*(_WORD *)(a3 + 10) - v5) <= 0x3Fu)
  {
LABEL_4:
    v6 = 0;
    if ((_DWORD)a1)
      a1 = a1;
    else
      a1 = 605;
    return a2(a1, v6);
  }
  v6 = (__int128 *)(*(_QWORD *)a3 + v5);
  v8 = *v6;
  v9 = v6[1];
  v10 = v6[3];
  xmmword_100999008 = v6[2];
  xmmword_100999018 = v10;
  xmmword_100998FE8 = v8;
  *(_OWORD *)&byte_100998FF8 = v9;
  if (sub_10005549C())
  {
    sub_100054530("command supported mask is: %@", &xmmword_100998FE8, 64);
    v11 = sub_1000544A0(0x2Eu);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      v13 = sub_100054494();
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  BYTE14(xmmword_100998FE8) |= 0x10u;
  return a2(a1, v6);
}

uint64_t sub_100197FC4(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t *), uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  if (*(_BYTE *)(a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 617, "void readLocalSupportedFeaturesCompleteCB(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)");
    v8 = 0;
    goto LABEL_4;
  }
  v5 = *(unsigned __int16 *)(a3 + 10);
  v6 = *(unsigned __int16 *)(a3 + 12);
  v8 = 0;
  if ((unsigned __int16)(v5 - v6) <= 7u)
  {
LABEL_4:
    if ((_DWORD)a1)
      a1 = a1;
    else
      a1 = 605;
    return a2(a1, &v8);
  }
  if (*(_BYTE *)(a3 + 14) != 1 || (unint64_t)(v5 - v6) <= 7)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v8 = *(_QWORD *)(*(_QWORD *)a3 + v6);
  *(_WORD *)(a3 + 12) = v6 + 8;
  return a2(a1, &v8);
}

uint64_t sub_1001980D0(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t *), uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  if (*((_BYTE *)a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 642, "void readLocalExtendedFeaturesCompleteCB(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)");
    v11 = 0;
    goto LABEL_4;
  }
  v5 = *((unsigned __int16 *)a3 + 5);
  v6 = *((unsigned __int16 *)a3 + 6);
  v11 = 0;
  if ((unsigned __int16)(v5 - v6) <= 9u)
  {
LABEL_4:
    v7 = 0;
    v8 = 0;
    if ((_DWORD)a1)
      a1 = a1;
    else
      a1 = 605;
    return a2(a1, v7, v8, &v11);
  }
  if (v5 <= v6 || *((_BYTE *)a3 + 14) != 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v10 = *a3;
  *((_WORD *)a3 + 6) = v6 + 1;
  if (v5 <= (unsigned __int16)(v6 + 1))
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v7 = *(unsigned __int8 *)(v10 + v6);
  *((_WORD *)a3 + 6) = v6 + 2;
  if ((unint64_t)(v5 - (v6 + 2)) <= 7)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v8 = *(unsigned __int8 *)(v10 + v6 + 1);
  v11 = *(_QWORD *)(v10 + v6 + 2);
  *((_WORD *)a3 + 6) = v6 + 10;
  return a2(a1, v7, v8, &v11);
}

uint64_t sub_100198240(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, uint64_t, uint64_t, _QWORD), uint64_t *a3)
{
  uint64_t (*v3)(uint64_t, _QWORD, uint64_t, uint64_t, _QWORD);
  unsigned int v5;
  uint64_t v6;
  unsigned __int16 v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int16 v10;
  uint64_t v12;
  unsigned __int8 *v13;
  int v14;
  int v15;

  v3 = a2;
  if (*((_BYTE *)a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 418, "void readBufferSizeCompleteCB(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)");
    v3 = a2;
    goto LABEL_4;
  }
  v5 = *((unsigned __int16 *)a3 + 5);
  v6 = *((unsigned __int16 *)a3 + 6);
  if ((unsigned __int16)(v5 - v6) <= 6u)
  {
LABEL_4:
    v7 = 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    if ((_DWORD)a1)
      a1 = a1;
    else
      a1 = 605;
    return v3(a1, v7, v8, v9, v10);
  }
  if (*((_BYTE *)a3 + 14) != 1 || (int)(v5 - v6) <= 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v12 = *a3;
  v7 = *(_WORD *)(*a3 + v6);
  *((_WORD *)a3 + 6) = v6 + 2;
  if (v5 <= (unsigned __int16)(v6 + 2))
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  *((_WORD *)a3 + 6) = v6 + 3;
  if ((int)(v5 - (unsigned __int16)(v6 + 3)) <= 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v8 = *(unsigned __int8 *)(v12 + (unsigned __int16)(v6 + 2));
  v13 = (unsigned __int8 *)(v12 + (unsigned __int16)(v6 + 3));
  v14 = *v13;
  v15 = v13[1];
  *((_WORD *)a3 + 6) = v6 + 5;
  if ((int)(v5 - (unsigned __int16)(v6 + 5)) <= 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v9 = v14 | (v15 << 8);
  v10 = *(_WORD *)(v12 + (unsigned __int16)(v6 + 5));
  *((_WORD *)a3 + 6) = v6 + 7;
  return v3(a1, v7, v8, v9, v10);
}

uint64_t sub_1001983CC(uint64_t a1, uint64_t (*a2)(uint64_t, __int128 *, uint64_t, uint64_t), uint64_t *a3)
{
  uint64_t (*v3)(uint64_t, __int128 *, uint64_t, uint64_t);
  unsigned int v5;
  uint64_t v6;
  __int128 *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  unsigned __int8 *v12;
  int v13;
  int v14;
  unsigned __int16 v15;
  unsigned __int16 v16;

  v3 = a2;
  if (*((_BYTE *)a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 698, "void readAfhChannelMapCB(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)");
    v3 = a2;
    goto LABEL_4;
  }
  v5 = *((unsigned __int16 *)a3 + 5);
  v6 = *((unsigned __int16 *)a3 + 6);
  if ((unsigned __int16)(v5 - v6) <= 0xCu)
  {
LABEL_4:
    v7 = 0;
    v8 = 0;
    v9 = 0;
    if ((_DWORD)a1)
      a1 = a1;
    else
      a1 = 605;
    return v3(a1, v7, v8, v9);
  }
  if (*((_BYTE *)a3 + 14) != 1 || (int)(v5 - v6) <= 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v11 = *a3;
  v12 = (unsigned __int8 *)(*a3 + v6);
  v13 = *v12;
  v14 = v12[1];
  v15 = v6 + 2;
  *((_WORD *)a3 + 6) = v6 + 2;
  if (v5 <= (unsigned __int16)(v6 + 2))
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v16 = v6 + 3;
  *((_WORD *)a3 + 6) = v16;
  v8 = *(unsigned __int8 *)(v11 + v15);
  v9 = v11 + v16;
  v7 = sub_10019ACEC(v13 | (v14 << 8));
  v3 = a2;
  return v3(a1, v7, v8, v9);
}

uint64_t sub_100198508(uint64_t a1, uint64_t (*a2)(uint64_t, __int128 *, uint64_t, uint64_t), uint64_t *a3)
{
  uint64_t (*v3)(uint64_t, __int128 *, uint64_t, uint64_t);
  unsigned int v5;
  uint64_t v6;
  __int128 *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  unsigned __int16 v12;

  v3 = a2;
  if (*((_BYTE *)a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 791, "void readLmpHandleCB(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)");
    v3 = a2;
    goto LABEL_4;
  }
  v5 = *((unsigned __int16 *)a3 + 5);
  v6 = *((unsigned __int16 *)a3 + 6);
  if ((unsigned __int16)(v5 - v6) <= 6u)
  {
LABEL_4:
    v7 = 0;
    v8 = 0;
    v9 = 0;
    if ((_DWORD)a1)
      a1 = a1;
    else
      a1 = 605;
    return v3(a1, v7, v8, v9);
  }
  if (*((_BYTE *)a3 + 14) != 1 || (int)(v5 - v6) <= 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v11 = *a3;
  v12 = *(_WORD *)(*a3 + v6);
  *((_WORD *)a3 + 6) = v6 + 2;
  if (v5 <= (unsigned __int16)(v6 + 2))
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  *((_WORD *)a3 + 6) = v6 + 3;
  if ((int)(v5 - (unsigned __int16)(v6 + 3)) <= 3)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v8 = *(unsigned __int8 *)(v11 + (unsigned __int16)(v6 + 2));
  v9 = *(unsigned int *)(v11 + (unsigned __int16)(v6 + 3));
  *((_WORD *)a3 + 6) = v6 + 7;
  v7 = sub_10019ACEC(v12);
  v3 = a2;
  return v3(a1, v7, v8, v9);
}

uint64_t sub_10019866C(uint64_t a1, uint64_t (*a2)(uint64_t, __int128 *, uint64_t, _QWORD), uint64_t *a3)
{
  uint64_t (*v3)(uint64_t, __int128 *, uint64_t, _QWORD);
  int v5;
  uint64_t v6;
  __int128 *v7;
  uint64_t v8;
  unsigned __int16 v9;
  uint64_t v11;
  unsigned __int16 v12;

  v3 = a2;
  if (*((_BYTE *)a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 729, "void readClockCB(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)");
    v3 = a2;
    goto LABEL_4;
  }
  v5 = *((unsigned __int16 *)a3 + 5);
  v6 = *((unsigned __int16 *)a3 + 6);
  if ((unsigned __int16)(v5 - v6) <= 7u)
  {
LABEL_4:
    v7 = 0;
    v8 = 0;
    v9 = 0;
    if ((_DWORD)a1)
      a1 = a1;
    else
      a1 = 605;
    return v3(a1, v7, v8, v9);
  }
  if (*((_BYTE *)a3 + 14) != 1 || v5 - (int)v6 <= 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v11 = *a3;
  v12 = *(_WORD *)(*a3 + v6);
  *((_WORD *)a3 + 6) = v6 + 2;
  if (v5 - (unsigned __int16)(v6 + 2) <= 3)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v8 = *(unsigned int *)(v11 + (unsigned __int16)(v6 + 2));
  *((_WORD *)a3 + 6) = v6 + 6;
  if (v5 - (unsigned __int16)(v6 + 6) <= 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v9 = *(_WORD *)(v11 + (unsigned __int16)(v6 + 6));
  *((_WORD *)a3 + 6) = v6 + 8;
  v7 = sub_10019ACEC(v12);
  v3 = a2;
  return v3(a1, v7, v8, v9);
}

uint64_t sub_1001987D4(uint64_t a1, uint64_t (*a2)(uint64_t, __int128 *, uint64_t), uint64_t *a3)
{
  uint64_t (*v3)(uint64_t, __int128 *, uint64_t);
  unsigned int v5;
  uint64_t v6;
  __int128 *v7;
  uint64_t v8;
  uint64_t v10;
  unsigned __int8 *v11;
  int v12;
  int v13;

  v3 = a2;
  if (*((_BYTE *)a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 761, "void readEncryptionKeySizeCB(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)");
    v3 = a2;
    goto LABEL_4;
  }
  v5 = *((unsigned __int16 *)a3 + 5);
  v6 = *((unsigned __int16 *)a3 + 6);
  if ((unsigned __int16)(v5 - v6) <= 2u)
  {
LABEL_4:
    v7 = 0;
    v8 = 0;
    if ((_DWORD)a1)
      a1 = a1;
    else
      a1 = 605;
    return v3(a1, v7, v8);
  }
  if (*((_BYTE *)a3 + 14) != 1 || (int)(v5 - v6) <= 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v10 = *a3;
  v11 = (unsigned __int8 *)(*a3 + v6);
  v12 = *v11;
  v13 = v11[1];
  *((_WORD *)a3 + 6) = v6 + 2;
  if (v5 <= (unsigned __int16)(v6 + 2))
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  *((_WORD *)a3 + 6) = v6 + 3;
  v8 = *(unsigned __int8 *)(v10 + (unsigned __int16)(v6 + 2));
  v7 = sub_10019ACEC(v12 | (v13 << 8));
  v3 = a2;
  return v3(a1, v7, v8);
}

uint64_t sub_1001988FC(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD), uint64_t *a3)
{
  uint64_t (*v3)(uint64_t, _QWORD);
  unsigned int v5;
  uint64_t v6;
  char v7;
  uint64_t v9;

  v3 = a2;
  if (*((_BYTE *)a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 851, "void readInquiryResponseTxPowerCB(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)");
    v3 = a2;
    goto LABEL_4;
  }
  v5 = *((unsigned __int16 *)a3 + 5);
  v6 = *((unsigned __int16 *)a3 + 6);
  if (v5 == (_DWORD)v6)
  {
LABEL_4:
    v7 = 0;
    if ((_DWORD)a1)
      a1 = a1;
    else
      a1 = 605;
    return v3(a1, v7);
  }
  if (v5 <= v6 || *((_BYTE *)a3 + 14) != 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v9 = *a3;
  *((_WORD *)a3 + 6) = v6 + 1;
  v7 = *(_BYTE *)(v9 + v6);
  return v3(a1, v7);
}

uint64_t sub_1001989C8(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = a2;
  if (*((_BYTE *)a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 876, "void readExtInqRespCB(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)");
    v3 = a2;
    goto LABEL_4;
  }
  v5 = *((unsigned __int16 *)a3 + 5);
  v6 = *((unsigned __int16 *)a3 + 6);
  if ((unsigned __int16)(v5 - v6) <= 0x1Fu)
  {
LABEL_4:
    v7 = 0;
    v8 = 0;
    if ((_DWORD)a1)
      a1 = a1;
    else
      a1 = 605;
    return v3(a1, v7, v8);
  }
  if (v5 <= v6 || *((_BYTE *)a3 + 14) != 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v10 = *a3;
  *((_WORD *)a3 + 6) = v6 + 1;
  v7 = *(unsigned __int8 *)(v10 + v6);
  v8 = v10 + (unsigned __int16)(v6 + 1);
  return v3(a1, v7, v8);
}

uint64_t sub_100198AA4(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  unsigned __int16 v10;

  v3 = a2;
  if (*((_BYTE *)a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 903, "void readLocalOobDataCB(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)");
    v3 = a2;
    goto LABEL_4;
  }
  v5 = *((unsigned __int16 *)a3 + 6);
  if ((unsigned __int16)(*((_WORD *)a3 + 5) - v5) <= 0x1Fu)
  {
LABEL_4:
    v6 = 0;
    v7 = 0;
    if ((_DWORD)a1)
      a1 = a1;
    else
      a1 = 605;
    return v3(a1, v6, v7);
  }
  if (*((unsigned __int16 *)a3 + 5) - (int)v5 <= 15)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v9 = *a3;
  v6 = *a3 + v5;
  v10 = v5 + 16;
  *((_WORD *)a3 + 6) = v10;
  v7 = v9 + v10;
  return v3(a1, v6, v7);
}

uint64_t sub_100198B60(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  unsigned __int16 v13;

  v3 = a2;
  if (*((_BYTE *)a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 932, "void readLocalOobDataExtendedCB(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)");
    v3 = a2;
    goto LABEL_4;
  }
  v5 = *((unsigned __int16 *)a3 + 5);
  v6 = *((unsigned __int16 *)a3 + 6);
  if ((unsigned __int16)(v5 - v6) <= 0x3Fu)
  {
LABEL_4:
    v7 = 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    if ((_DWORD)a1)
      a1 = a1;
    else
      a1 = 605;
    return v3(a1, v7, v8, v9, v10);
  }
  if (v5 - (int)v6 <= 15)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v12 = *a3;
  *((_WORD *)a3 + 6) = v6 + 16;
  if (v5 - (unsigned __int16)(v6 + 16) <= 15)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  *((_WORD *)a3 + 6) = v6 + 32;
  if (v5 - (unsigned __int16)(v6 + 32) <= 15)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v7 = v12 + v6;
  v8 = v12 + (unsigned __int16)(v6 + 16);
  v9 = v12 + (unsigned __int16)(v6 + 32);
  v13 = v6 + 48;
  *((_WORD *)a3 + 6) = v13;
  v10 = v12 + v13;
  return v3(a1, v7, v8, v9, v10);
}

uint64_t sub_100198C88(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  unsigned __int8 *v11;
  int v12;
  int v13;

  v3 = a2;
  if (*((_BYTE *)a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 1005, "void readLEBufferSizeCB(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)");
    v3 = a2;
    goto LABEL_4;
  }
  v5 = *((unsigned __int16 *)a3 + 5);
  v6 = *((unsigned __int16 *)a3 + 6);
  if ((unsigned __int16)(v5 - v6) <= 2u)
  {
LABEL_4:
    v7 = 0;
    v8 = 0;
    if ((_DWORD)a1)
      a1 = a1;
    else
      a1 = 605;
    return v3(a1, v7, v8);
  }
  if (*((_BYTE *)a3 + 14) != 1 || (int)(v5 - v6) <= 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v10 = *a3;
  v11 = (unsigned __int8 *)(*a3 + v6);
  v12 = *v11;
  v13 = v11[1];
  *((_WORD *)a3 + 6) = v6 + 2;
  if (v5 <= (unsigned __int16)(v6 + 2))
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v7 = v12 | (v13 << 8);
  *((_WORD *)a3 + 6) = v6 + 3;
  v8 = *(unsigned __int8 *)(v10 + (unsigned __int16)(v6 + 2));
  return v3(a1, v7, v8);
}

uint64_t sub_100198D9C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t *), uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  if (*(_BYTE *)(a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 672, "void readLeLocalSupportedFeaturesCompleteCB(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)");
    v8 = 0;
    goto LABEL_4;
  }
  v5 = *(unsigned __int16 *)(a3 + 10);
  v6 = *(unsigned __int16 *)(a3 + 12);
  v8 = 0;
  if ((unsigned __int16)(v5 - v6) <= 7u)
  {
LABEL_4:
    if ((_DWORD)a1)
      a1 = a1;
    else
      a1 = 605;
    return a2(a1, &v8);
  }
  if (*(_BYTE *)(a3 + 14) != 1 || (unint64_t)(v5 - v6) <= 7)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v8 = *(_QWORD *)(*(_QWORD *)a3 + v6);
  *(_WORD *)(a3 + 12) = v6 + 8;
  return a2(a1, &v8);
}

uint64_t sub_100198EA8(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  unsigned __int8 *v11;
  int v12;
  int v13;

  v3 = a2;
  if (*((_BYTE *)a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 1027, "void readLEChannelMapCB(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)");
    v3 = a2;
    goto LABEL_4;
  }
  v5 = *((unsigned __int16 *)a3 + 5);
  v6 = *((unsigned __int16 *)a3 + 6);
  if ((unsigned __int16)(v5 - v6) <= 6u)
  {
LABEL_4:
    v7 = 0;
    v8 = 0;
    if ((_DWORD)a1)
      a1 = a1;
    else
      a1 = 605;
    return v3(a1, v7, v8);
  }
  if (*((_BYTE *)a3 + 14) != 1 || v5 - (int)v6 <= 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v10 = *a3;
  v11 = (unsigned __int8 *)(*a3 + v6);
  v12 = *v11;
  v13 = v11[1];
  *((_WORD *)a3 + 6) = v6 + 2;
  if (v5 - (unsigned __int16)(v6 + 2) <= 4)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v8 = v10 + (unsigned __int16)(v6 + 2);
  v7 = v12 | (v13 << 8);
  *((_WORD *)a3 + 6) = v6 + 7;
  return v3(a1, v7, v8);
}

uint64_t sub_100198FC0(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t), uint64_t a3)
{
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;

  v3 = a2;
  if (*(_BYTE *)(a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 983, "void cmdComplete_ret_128_cb(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)");
    v3 = a2;
    goto LABEL_4;
  }
  v5 = *(unsigned __int16 *)(a3 + 12);
  if ((unsigned __int16)(*(_WORD *)(a3 + 10) - v5) <= 0xFu)
  {
LABEL_4:
    v6 = 0;
    if ((_DWORD)a1)
      a1 = a1;
    else
      a1 = 605;
    return v3(a1, v6);
  }
  if (*(unsigned __int16 *)(a3 + 10) - (int)v5 <= 15)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v6 = *(_QWORD *)a3 + v5;
  *(_WORD *)(a3 + 12) = v5 + 16;
  return v3(a1, v6);
}

uint64_t sub_100199074(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t), uint64_t a3)
{
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;

  v3 = a2;
  if (*(_BYTE *)(a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 961, "void cmdComplete_ret_64_cb(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)");
    v3 = a2;
    goto LABEL_4;
  }
  v5 = *(unsigned __int16 *)(a3 + 12);
  if ((unsigned __int16)(*(_WORD *)(a3 + 10) - v5) <= 7u)
  {
LABEL_4:
    v6 = 0;
    if ((_DWORD)a1)
      a1 = a1;
    else
      a1 = 605;
    return v3(a1, v6);
  }
  if (*(unsigned __int16 *)(a3 + 10) - (int)v5 <= 7)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v6 = *(_QWORD *)a3 + v5;
  *(_WORD *)(a3 + 12) = v5 + 8;
  return v3(a1, v6);
}

uint64_t sub_100199128(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, uint64_t, uint64_t), uint64_t *a3)
{
  uint64_t (*v3)(uint64_t, _QWORD, uint64_t, uint64_t);
  unsigned int v5;
  uint64_t v6;
  unsigned __int16 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = a2;
  if (*((_BYTE *)a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 1050, "void readLEPhyCB(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)");
    v3 = a2;
    goto LABEL_4;
  }
  v5 = *((unsigned __int16 *)a3 + 5);
  v6 = *((unsigned __int16 *)a3 + 6);
  if ((unsigned __int16)(v5 - v6) <= 3u)
  {
LABEL_4:
    v7 = 0;
    v8 = 0;
    v9 = 0;
    if ((_DWORD)a1)
      a1 = a1;
    else
      a1 = 605;
    return v3(a1, v7, v8, v9);
  }
  if (*((_BYTE *)a3 + 14) != 1 || (int)(v5 - v6) <= 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v11 = *a3;
  v7 = *(_WORD *)(*a3 + v6);
  *((_WORD *)a3 + 6) = v6 + 2;
  if (v5 <= (unsigned __int16)(v6 + 2))
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  *((_WORD *)a3 + 6) = v6 + 3;
  if (v5 <= (unsigned __int16)(v6 + 3))
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v8 = *(unsigned __int8 *)(v11 + (unsigned __int16)(v6 + 2));
  *((_WORD *)a3 + 6) = v6 + 4;
  v9 = *(unsigned __int8 *)(v11 + (unsigned __int16)(v6 + 3));
  return v3(a1, v7, v8, v9);
}

void sub_10019926C(unsigned int a1, void (*a2)(uint64_t, uint64_t, uint64_t, void *), uint64_t *a3)
{
  uint64_t v5;
  unint64_t v6;
  BOOL v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;

  LODWORD(v5) = a1;
  if (*((_BYTE *)a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 1075, "void setCigParamsCB(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)");
    if ((_DWORD)v5)
      v5 = v5;
    else
      v5 = 605;
    if (*((_BYTE *)a3 + 15))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 1084, "void setCigParamsCB(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)");
      goto LABEL_33;
    }
    v6 = 0;
  }
  else
  {
    if (a1)
      v7 = 1;
    else
      v7 = (unsigned __int16)(*((_WORD *)a3 + 5) - *((_WORD *)a3 + 6)) >= 2u;
    if (v7)
      v5 = a1;
    else
      v5 = 605;
    v6 = (unsigned __int16)(*((_WORD *)a3 + 5) - *((_WORD *)a3 + 6));
  }
  v8 = *((unsigned __int16 *)a3 + 5);
  v9 = *((unsigned __int16 *)a3 + 6);
  if (v8 <= v9 || *((_BYTE *)a3 + 14) != 1)
LABEL_33:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v10 = *a3;
  *((_WORD *)a3 + 6) = v9 + 1;
  if (v8 <= (int)v9 + 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v11 = *(unsigned __int8 *)(v10 + v9);
  *((_WORD *)a3 + 6) = v9 + 2;
  v12 = *(unsigned __int8 *)(v10 + v9 + 1);
  v13 = 2 * v12;
  v14 = sub_100114588(2 * v12);
  if (2 * v12 + 2 <= v6)
  {
    if (*((_BYTE *)a3 + 14) != 1
      || ((v15 = *a3, v16 = *((unsigned __int16 *)a3 + 6), !*((_BYTE *)a3 + 15))
        ? (v17 = *((unsigned __int16 *)a3 + 5) - v16)
        : (sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 1094, "void setCigParamsCB(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)"), v17 = 0), v17 < v13))
    {
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    }
    memmove(v14, (const void *)(v15 + v16), 2 * v12);
    *((_WORD *)a3 + 6) += v13;
  }
  else if ((_DWORD)v5)
  {
    v5 = v5;
  }
  else
  {
    v5 = 605;
  }
  a2(v5, v11, v12, v14);
  if (v14)
    sub_100053298(v14);
}

uint64_t sub_1001994A4(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  uint64_t (*v3)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t);
  unsigned int v5;
  uint64_t v6;
  unsigned __int16 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  unsigned __int8 *v13;
  int v14;
  int v15;

  v3 = a2;
  if (*((_BYTE *)a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 1109, "void readLEBufferSizeV2CB(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)");
    v3 = a2;
    goto LABEL_4;
  }
  v5 = *((unsigned __int16 *)a3 + 5);
  v6 = *((unsigned __int16 *)a3 + 6);
  if ((unsigned __int16)(v5 - v6) <= 5u)
  {
LABEL_4:
    v7 = 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    if ((_DWORD)a1)
      a1 = a1;
    else
      a1 = 605;
    return v3(a1, v7, v8, v9, v10);
  }
  if (*((_BYTE *)a3 + 14) != 1 || (int)(v5 - v6) <= 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v12 = *a3;
  v7 = *(_WORD *)(*a3 + v6);
  *((_WORD *)a3 + 6) = v6 + 2;
  if (v5 <= (unsigned __int16)(v6 + 2))
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  *((_WORD *)a3 + 6) = v6 + 3;
  if ((int)(v5 - (unsigned __int16)(v6 + 3)) <= 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v8 = *(unsigned __int8 *)(v12 + (unsigned __int16)(v6 + 2));
  v13 = (unsigned __int8 *)(v12 + (unsigned __int16)(v6 + 3));
  v14 = *v13;
  v15 = v13[1];
  *((_WORD *)a3 + 6) = v6 + 5;
  if (v5 <= (unsigned __int16)(v6 + 5))
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v9 = v14 | (v15 << 8);
  *((_WORD *)a3 + 6) = v6 + 6;
  v10 = *(unsigned __int8 *)(v12 + (unsigned __int16)(v6 + 5));
  return v3(a1, v7, v8, v9, v10);
}

uint64_t sub_100199628(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t), uint64_t *a3)
{
  uint64_t (*v3)(uint64_t, uint64_t);
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = a2;
  if (*((_BYTE *)a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 1136, "void setPerioicAdvSubeventDataCB(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)");
    v3 = a2;
    goto LABEL_4;
  }
  v5 = *((unsigned __int16 *)a3 + 5);
  v6 = *((unsigned __int16 *)a3 + 6);
  if (v5 == (_DWORD)v6)
  {
LABEL_4:
    v7 = 0;
    if ((_DWORD)a1)
      a1 = a1;
    else
      a1 = 605;
    return v3(a1, v7);
  }
  if (v5 <= v6 || *((_BYTE *)a3 + 14) != 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v9 = *a3;
  *((_WORD *)a3 + 6) = v6 + 1;
  v7 = *(unsigned __int8 *)(v9 + v6);
  return v3(a1, v7);
}

uint64_t sub_1001996F0(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD), uint64_t a3)
{
  uint64_t (*v3)(uint64_t, _QWORD);
  int v5;
  unsigned __int16 v6;

  v3 = a2;
  if (*(_BYTE *)(a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 1156, "void setPerioicSyncSubeventCB(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)");
    v3 = a2;
    goto LABEL_4;
  }
  v5 = *(unsigned __int16 *)(a3 + 12);
  if ((unsigned __int16)(*(_WORD *)(a3 + 10) - v5) <= 1u)
  {
LABEL_4:
    v6 = 0;
    if ((_DWORD)a1)
      a1 = a1;
    else
      a1 = 605;
    return v3(a1, v6);
  }
  if (*(_BYTE *)(a3 + 14) != 1 || *(unsigned __int16 *)(a3 + 10) - v5 <= 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v6 = *(_WORD *)(*(_QWORD *)a3 + *(unsigned __int16 *)(a3 + 12));
  *(_WORD *)(a3 + 12) = v5 + 2;
  return v3(a1, v6);
}

uint64_t sub_1001997C8(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD), uint64_t a3)
{
  uint64_t (*v3)(uint64_t, _QWORD);
  int v5;
  unsigned __int16 v6;

  v3 = a2;
  if (*(_BYTE *)(a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 1176, "void setPerioicAdvResponseDataCB(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)");
    v3 = a2;
    goto LABEL_4;
  }
  v5 = *(unsigned __int16 *)(a3 + 12);
  if ((unsigned __int16)(*(_WORD *)(a3 + 10) - v5) <= 1u)
  {
LABEL_4:
    v6 = 0;
    if ((_DWORD)a1)
      a1 = a1;
    else
      a1 = 605;
    return v3(a1, v6);
  }
  if (*(_BYTE *)(a3 + 14) != 1 || *(unsigned __int16 *)(a3 + 10) - v5 <= 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v6 = *(_WORD *)(*(_QWORD *)a3 + *(unsigned __int16 *)(a3 + 12));
  *(_WORD *)(a3 + 12) = v5 + 2;
  return v3(a1, v6);
}

uint64_t sub_1001998A0(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, uint64_t, uint64_t, _QWORD), uint64_t *a3)
{
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;

  if (*((_BYTE *)a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 1195, "void readEnhanceTxPowerCB(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)");
  }
  else if ((unsigned __int16)(*((_WORD *)a3 + 5) - *((_WORD *)a3 + 6)) > 4u)
  {
    goto LABEL_7;
  }
  if ((_DWORD)a1)
    a1 = a1;
  else
    a1 = 605;
LABEL_7:
  if (*((_BYTE *)a3 + 14) != 1)
LABEL_16:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  if (*((_BYTE *)a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 1206, "void readEnhanceTxPowerCB(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)");
    goto LABEL_16;
  }
  v5 = *((unsigned __int16 *)a3 + 5);
  v6 = *((unsigned __int16 *)a3 + 6);
  if ((int)(v5 - v6) <= 1)
    goto LABEL_16;
  v7 = *a3;
  v8 = (unsigned __int8 *)(*a3 + v6);
  v9 = *v8;
  v10 = v8[1];
  *((_WORD *)a3 + 6) = v6 + 2;
  if (v5 <= (unsigned __int16)(v6 + 2))
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  *((_WORD *)a3 + 6) = v6 + 3;
  if (v5 <= (unsigned __int16)(v6 + 3))
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v11 = *(unsigned __int8 *)(v7 + (unsigned __int16)(v6 + 2));
  *((_WORD *)a3 + 6) = v6 + 4;
  if (v5 <= (unsigned __int16)(v6 + 4))
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v12 = *(unsigned __int8 *)(v7 + (unsigned __int16)(v6 + 3));
  *((_WORD *)a3 + 6) = v6 + 5;
  return a2(a1, v9 | (v10 << 8), v11, v12, *(unsigned __int8 *)(v7 + (unsigned __int16)(v6 + 4)));
}

uint64_t sub_100199A34(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int, uint64_t), uint64_t *a3)
{
  unsigned int v5;
  BOOL v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  unsigned __int8 *v23;
  __int16 v24;
  __int16 v25;
  unsigned __int8 *v26;
  __int16 v27;
  __int16 v28;
  unsigned __int8 *v29;
  __int16 v30;
  __int16 v31;
  char v32;
  int v34;
  uint64_t v35;

  v5 = a1;
  if (*((_BYTE *)a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 1222, "void csReadLocalSupportedCapabilitiesCompleteCB(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)");
    if (v5)
      a1 = v5;
    else
      a1 = 605;
    if (*((_BYTE *)a3 + 15))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 1245, "void csReadLocalSupportedCapabilitiesCompleteCB(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)");
      goto LABEL_32;
    }
  }
  else
  {
    if ((_DWORD)a1)
      v6 = 1;
    else
      v6 = (unsigned __int16)(*((_WORD *)a3 + 5) - *((_WORD *)a3 + 6)) >= 0x16u;
    if (v6)
      a1 = a1;
    else
      a1 = 605;
  }
  v7 = *((unsigned __int16 *)a3 + 5);
  v8 = *((unsigned __int16 *)a3 + 6);
  if (v7 <= v8 || *((_BYTE *)a3 + 14) != 1)
LABEL_32:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v9 = *a3;
  v10 = v8 + 1;
  *((_WORD *)a3 + 6) = v8 + 1;
  if ((int)(v7 - (v8 + 1)) <= 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v11 = *(unsigned __int8 *)(v9 + v8);
  v12 = v9 + v10;
  v13 = *(unsigned __int8 *)(v9 + v10);
  v14 = *(unsigned __int8 *)(v12 + 1);
  *((_WORD *)a3 + 6) = v8 + 3;
  if (v7 <= (unsigned __int16)(v8 + 3))
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  *((_WORD *)a3 + 6) = v8 + 4;
  if (v7 <= (unsigned __int16)(v8 + 4))
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v15 = *(unsigned __int8 *)(v9 + (unsigned __int16)(v8 + 3));
  *((_WORD *)a3 + 6) = v8 + 5;
  if (v7 <= (unsigned __int16)(v8 + 5))
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v16 = *(unsigned __int8 *)(v9 + (unsigned __int16)(v8 + 4));
  *((_WORD *)a3 + 6) = v8 + 6;
  if (v7 <= (unsigned __int16)(v8 + 6))
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v17 = *(unsigned __int8 *)(v9 + (unsigned __int16)(v8 + 5));
  *((_WORD *)a3 + 6) = v8 + 7;
  if (v7 <= (unsigned __int16)(v8 + 7))
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v18 = *(unsigned __int8 *)(v9 + (unsigned __int16)(v8 + 6));
  *((_WORD *)a3 + 6) = v8 + 8;
  if (v7 <= (unsigned __int16)(v8 + 8))
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v19 = *(unsigned __int8 *)(v9 + (unsigned __int16)(v8 + 7));
  *((_WORD *)a3 + 6) = v8 + 9;
  if (v7 <= (unsigned __int16)(v8 + 9))
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v20 = *(_BYTE *)(v9 + (unsigned __int16)(v8 + 8));
  *((_WORD *)a3 + 6) = v8 + 10;
  if (v7 <= (unsigned __int16)(v8 + 10))
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v21 = *(_BYTE *)(v9 + (unsigned __int16)(v8 + 9));
  *((_WORD *)a3 + 6) = v8 + 11;
  if ((int)(v7 - (unsigned __int16)(v8 + 11)) <= 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v22 = *(_BYTE *)(v9 + (unsigned __int16)(v8 + 10));
  *((_WORD *)a3 + 6) = v8 + 13;
  if ((int)(v7 - (unsigned __int16)(v8 + 13)) <= 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  *((_WORD *)a3 + 6) = v8 + 15;
  if ((int)(v7 - (unsigned __int16)(v8 + 15)) <= 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v23 = (unsigned __int8 *)(v9 + (unsigned __int16)(v8 + 15));
  v24 = *v23;
  v25 = v23[1];
  *((_WORD *)a3 + 6) = v8 + 17;
  if ((int)(v7 - (unsigned __int16)(v8 + 17)) <= 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v26 = (unsigned __int8 *)(v9 + (unsigned __int16)(v8 + 17));
  v27 = *v26;
  v28 = v26[1];
  *((_WORD *)a3 + 6) = v8 + 19;
  if ((int)(v7 - (unsigned __int16)(v8 + 19)) <= 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v29 = (unsigned __int8 *)(v9 + (unsigned __int16)(v8 + 19));
  v30 = *v29;
  v31 = v29[1];
  *((_WORD *)a3 + 6) = v8 + 21;
  if (v7 <= (unsigned __int16)(v8 + 21))
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  *((_WORD *)a3 + 6) = v8 + 22;
  if (v7 <= (unsigned __int16)(v8 + 22))
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v32 = *(_BYTE *)(v9 + (unsigned __int16)(v8 + 21));
  *((_WORD *)a3 + 6) = v8 + 23;
  HIBYTE(v35) = *(_BYTE *)(v9 + (unsigned __int16)(v8 + 22));
  BYTE6(v35) = v32;
  WORD2(v35) = v30 | (v31 << 8);
  WORD1(v35) = v27 | (v28 << 8);
  LOWORD(v35) = v24 | (v25 << 8);
  BYTE2(v34) = v22;
  BYTE1(v34) = v21;
  LOBYTE(v34) = v20;
  return a2(a1, v11, v13 | (v14 << 8), v15, v16, v17, v18, v19, v34, v35);
}

uint64_t sub_100199EBC(uint64_t a1, uint64_t (*a2)(uint64_t, __int128 *), uint64_t *a3)
{
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;

  v5 = a1;
  if (*((_BYTE *)a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 1271, "void csReadLocalFaeTableCompleteCB(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)");
    v19 = 0;
    v17 = 0u;
    v18 = 0u;
    v15 = 0u;
    v16 = 0u;
    if (v5)
      a1 = v5;
    else
      a1 = 605;
    if (*((_BYTE *)a3 + 15))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 1282, "void csReadLocalFaeTableCompleteCB(OI_STATUS, void (*)(void), OI_BYTE_STREAM *)");
LABEL_21:
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    }
  }
  else
  {
    v6 = (unsigned __int16)(*((_WORD *)a3 + 5) - *((_WORD *)a3 + 6));
    v19 = 0;
    v17 = 0u;
    v18 = 0u;
    v15 = 0u;
    v16 = 0u;
    if ((_DWORD)a1)
      v7 = a1;
    else
      v7 = 605;
    if (v6 <= 0x48)
      a1 = v7;
    else
      a1 = a1;
  }
  v8 = 0;
  v9 = *((unsigned __int16 *)a3 + 5);
  v10 = *((unsigned __int16 *)a3 + 6);
  v11 = v9 >= v10;
  LODWORD(v12) = v9 - v10;
  if (v11)
    v12 = v12;
  else
    v12 = 0;
  do
  {
    if (v12 == v8 || *((_BYTE *)a3 + 14) != 1)
      goto LABEL_21;
    v13 = *a3;
    *((_WORD *)a3 + 6) = v10 + v8 + 1;
    *((_BYTE *)&v15 + v8) = *(_BYTE *)(v10 + v8 + v13);
    ++v8;
  }
  while (v8 != 72);
  return a2(a1, &v15);
}

uint64_t sub_10019A030(__int128 **a1, _BYTE *a2, uint64_t *a3)
{
  int v4;
  uint64_t result;
  int v8;
  __int128 *v9;
  uint64_t v10;
  uint64_t v11;

  if (*((_BYTE *)a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 218, "OI_STATUS parse_h_8(OI_HCI_CONNECTION_HANDLE *, uint8_t *, OI_BYTE_STREAM *)");
    return 605;
  }
  v4 = *((unsigned __int16 *)a3 + 6);
  if ((unsigned __int16)(*((_WORD *)a3 + 5) - v4) < 3u)
    return 605;
  if (*((_BYTE *)a3 + 14) != 1 || *((unsigned __int16 *)a3 + 5) - v4 <= 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  v8 = *(unsigned __int16 *)(*a3 + *((unsigned __int16 *)a3 + 6));
  *((_WORD *)a3 + 6) = v4 + 2;
  v9 = sub_10019ACEC(v8);
  *a1 = v9;
  if (v9)
  {
    if (*((_BYTE *)a3 + 15))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 229, "OI_STATUS parse_h_8(OI_HCI_CONNECTION_HANDLE *, uint8_t *, OI_BYTE_STREAM *)");
    }
    else
    {
      v10 = *((unsigned __int16 *)a3 + 6);
      if (*((unsigned __int16 *)a3 + 5) > v10 && *((_BYTE *)a3 + 14) == 1)
      {
        result = 0;
        v11 = *a3;
        *((_WORD *)a3 + 6) = v10 + 1;
        *a2 = *(_BYTE *)(v11 + v10);
        return result;
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  }
  return 601;
}

uint64_t sub_10019A184(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  const char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  const char *v68;
  uint64_t v70;
  uint64_t v71;

  if (!a1)
    sub_1001494E0("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/pcie_mempool.c", 47, "pool");
  pthread_mutex_lock((pthread_mutex_t *)a1);
  sub_100253320((uint64_t)"_block_size: %u", v2, v3, v4, v5, v6, v7, v8, *(_QWORD *)(a1 + 120));
  sub_100253320((uint64_t)"_num_blocks_total: %u", v9, v10, v11, v12, v13, v14, v15, *(unsigned int *)(a1 + 128));
  sub_100253320((uint64_t)"_num_blocks_free: %u", v16, v17, v18, v19, v20, v21, v22, *(unsigned int *)(a1 + 132));
  sub_100253320((uint64_t)"_num_blocks_allocated: %u", v23, v24, v25, v26, v27, v28, v29, *(unsigned int *)(a1 + 136));
  sub_100253320((uint64_t)"_node_pool: %p", v30, v31, v32, v33, v34, v35, v36, *(_QWORD *)(a1 + 176));
  sub_100253320((uint64_t)"_start_addr: %p", v37, v38, v39, v40, v41, v42, v43, *(_QWORD *)(a1 + 184));
  sub_100253320((uint64_t)"_end_addr: %p", v44, v45, v46, v47, v48, v49, v50, *(_QWORD *)(a1 + 192));
  if (*(_QWORD *)(a1 + 160))
  {
    sub_100253320((uint64_t)"[START] FREE LIST", v51, v52, v53, v54, v55, v56, v57, v70);
    v58 = *(uint64_t **)(a1 + 160);
    if (v58)
    {
      v59 = "[END] FREE LIST";
      do
      {
        sub_100253320((uint64_t)"%p", v51, v52, v53, v54, v55, v56, v57, *v58);
        v58 = (uint64_t *)v58[1];
      }
      while (v58);
    }
    else
    {
      v59 = "[END] FREE LIST";
    }
  }
  else
  {
    v59 = "Free List Empty";
  }
  sub_100253320((uint64_t)v59, v51, v52, v53, v54, v55, v56, v57, v70);
  if (*(_QWORD *)(a1 + 144))
  {
    sub_100253320((uint64_t)"[START] ALLOCATED LIST", v60, v61, v62, v63, v64, v65, v66, v71);
    v67 = *(uint64_t **)(a1 + 144);
    if (v67)
    {
      v68 = "[END] ALLOCATED LIST";
      do
      {
        sub_100253320((uint64_t)"%p", v60, v61, v62, v63, v64, v65, v66, *v67);
        v67 = (uint64_t *)v67[1];
      }
      while (v67);
    }
    else
    {
      v68 = "[END] ALLOCATED LIST";
    }
  }
  else
  {
    v68 = "Allocated List Empty";
  }
  sub_100253320((uint64_t)v68, v60, v61, v62, v63, v64, v65, v66, v71);
  return pthread_mutex_unlock((pthread_mutex_t *)a1);
}

void sub_10019A328(pthread_mutex_t *a1)
{
  void *v2;
  void *v3;

  if (!a1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/pcie_mempool.c");
  if (*(_QWORD *)&a1[2].__opaque[8])
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/pcie_mempool.c");
  pthread_mutex_destroy(a1);
  pthread_cond_destroy((pthread_cond_t *)&a1[1]);
  v2 = *(void **)&a1[2].__opaque[40];
  if (v2)
  {
    free(v2);
    *(_QWORD *)&a1[2].__opaque[40] = 0;
  }
  v3 = *(void **)&a1[2].__opaque[48];
  if (v3)
    free(v3);
  free(a1);
}

pthread_mutex_t *sub_10019A3B0(uint64_t a1, size_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v9;
  pthread_mutex_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  pthread_mutex_t *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  size_t sig_low;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  const char *v36;
  uint64_t v38;

  v9 = a1;
  if (!(_DWORD)a1 || !a2)
  {
    sub_100253320((uint64_t)"invalid input parameters, num_blocks_total: %u, block_size: %u", a2, a3, a4, a5, a6, a7, a8, a1);
    return 0;
  }
  v10 = (pthread_mutex_t *)malloc_type_calloc(1uLL, 0xC8uLL, 0x10A004052A8F8F9uLL);
  v18 = v10;
  if (!v10)
  {
    sub_100253320((uint64_t)"failed to allocate memory for pool struct", v11, v12, v13, v14, v15, v16, v17, v38);
    return v18;
  }
  pthread_mutex_init(v10, 0);
  pthread_cond_init((pthread_cond_t *)&v18[1], 0);
  *(_QWORD *)&v18[2].__opaque[8] = 0;
  *(_DWORD *)&v18[1].__opaque[40] = 0;
  *(_QWORD *)&v18[1].__opaque[48] = a2;
  LODWORD(v18[2].__sig) = v9;
  HIDWORD(v18[2].__sig) = v9;
  *(_DWORD *)v18[2].__opaque = 0;
  *(_QWORD *)&v18[2].__opaque[16] = (char *)v18 + 144;
  *(_QWORD *)&v18[2].__opaque[24] = 0;
  *(_QWORD *)&v18[2].__opaque[32] = (char *)v18 + 160;
  v19 = (char *)malloc_type_calloc(v9, a2, 0x4B9514E2uLL);
  *(_QWORD *)&v18[2].__opaque[48] = v19;
  if (!v19)
  {
    v36 = "failed to allocate memory for pool";
LABEL_13:
    sub_100253320((uint64_t)v36, v20, v21, v22, v23, v24, v25, v26, v38);
    sub_10019A328(v18);
    return 0;
  }
  sig_low = LODWORD(v18[2].__sig);
  v18[3].__sig = (uint64_t)&v19[*(_QWORD *)&v18[1].__opaque[48] * sig_low];
  v28 = malloc_type_calloc(sig_low, 0x10uLL, 0xA0040BD48D6D6uLL);
  *(_QWORD *)&v18[2].__opaque[40] = v28;
  if (!v28)
  {
    v36 = "failed to allocate memory for mem_addr_node_pool";
    goto LABEL_13;
  }
  v29 = 0;
  v30 = 0;
  v31 = 0;
  v32 = *(_QWORD *)&v18[1].__opaque[48];
  v33 = *(_QWORD **)&v18[2].__opaque[32];
  do
  {
    v34 = *(_QWORD *)&v18[2].__opaque[40];
    v35 = (_QWORD *)(v34 + v30);
    *v35 = *(_QWORD *)&v18[2].__opaque[48] + v29;
    v35[1] = 0;
    *v33 = v34 + v30;
    v33 = (_QWORD *)(v34 + 16 * v31 + 8);
    *(_QWORD *)&v18[2].__opaque[32] = v34 + v30 + 8;
    ++v31;
    v30 += 16;
    v29 += v32;
  }
  while (16 * v9 != v30);
  return v18;
}

uint64_t sub_10019A544(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (!a1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/pcie_mempool.c");
  pthread_mutex_lock((pthread_mutex_t *)a1);
  *(_DWORD *)(a1 + 112) = 1;
  if (*(_QWORD *)(a1 + 144))
  {
    v2 = pthread_cond_wait((pthread_cond_t *)(a1 + 64), (pthread_mutex_t *)a1);
    if ((_DWORD)v2 || *(_QWORD *)(a1 + 144))
    {
      v4 = v2;
      pthread_mutex_unlock((pthread_mutex_t *)a1);
      sub_100253320((uint64_t)"retval: %d", v5, v6, v7, v8, v9, v10, v11, v4);
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/pcie_mempool.c");
    }
  }
  return pthread_mutex_unlock((pthread_mutex_t *)a1);
}

uint64_t sub_10019A5E8(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (!a1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/pcie_mempool.c");
  pthread_mutex_lock((pthread_mutex_t *)a1);
  v2 = (_QWORD *)(a1 + 160);
  v3 = *(_QWORD **)(a1 + 160);
  if (v3)
  {
    v4 = v3[1];
    *v2 = v4;
    if (!v4)
      *(_QWORD *)(a1 + 168) = v2;
    v3[1] = 0;
    **(_QWORD **)(a1 + 152) = v3;
    *(_QWORD *)(a1 + 152) = v3 + 1;
    *(int32x2_t *)(a1 + 132) = vadd_s32(*(int32x2_t *)(a1 + 132), (int32x2_t)0x1FFFFFFFFLL);
    pthread_mutex_unlock((pthread_mutex_t *)a1);
    return *v3;
  }
  else
  {
    pthread_mutex_unlock((pthread_mutex_t *)a1);
    sub_100253320((uint64_t)"free list empty. Cannot allocate memory from pool", v6, v7, v8, v9, v10, v11, v12, v13);
    return 0;
  }
}

uint64_t sub_10019A690(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v22;

  if (!a1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/pcie_mempool.c");
  pthread_mutex_lock((pthread_mutex_t *)a1);
  v11 = *(_QWORD *)(a1 + 184);
  if (v11 > a2 || *(_QWORD *)(a1 + 192) <= a2)
  {
    sub_100253320((uint64_t)"%p not from pool", v4, v5, v6, v7, v8, v9, v10, a2);
    goto LABEL_18;
  }
  v12 = (a2 - v11) / *(_QWORD *)(a1 + 120);
  v13 = *(_QWORD *)(a1 + 176);
  v14 = (uint64_t *)(v13 + 16 * (int)v12);
  if (*v14 != a2)
  {
    sub_100253320((uint64_t)"node->addr: %p, addr: %p", v4, v5, v6, v7, v8, v9, v10, *v14);
LABEL_18:
    pthread_mutex_unlock((pthread_mutex_t *)a1);
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/pcie_mempool.c");
  }
  v15 = (_QWORD *)(a1 + 144);
  v16 = *(uint64_t **)(a1 + 144);
  if (v16 == v14)
  {
    v22 = *(_QWORD *)(v13 + 16 * (int)v12 + 8);
    *v15 = v22;
    v19 = (uint64_t *)(a1 + 144);
    if (v22)
      goto LABEL_9;
  }
  else
  {
    do
    {
      v17 = v16;
      v16 = (uint64_t *)v16[1];
    }
    while (v16 != v14);
    v18 = *(_QWORD *)(v13 + 16 * (int)v12 + 8);
    v17[1] = v18;
    v19 = v17 + 1;
    if (v18)
      goto LABEL_9;
  }
  *(_QWORD *)(a1 + 152) = v19;
LABEL_9:
  v20 = v13 + 16 * (int)v12;
  *(_QWORD *)(v20 + 8) = 0;
  **(_QWORD **)(a1 + 168) = v14;
  *(_QWORD *)(a1 + 168) = v20 + 8;
  *(int32x2_t *)(a1 + 132) = vadd_s32(*(int32x2_t *)(a1 + 132), (int32x2_t)0xFFFFFFFF00000001);
  if (*(_DWORD *)(a1 + 112) && !*v15)
    pthread_cond_signal((pthread_cond_t *)(a1 + 64));
  return pthread_mutex_unlock((pthread_mutex_t *)a1);
}

uint64_t sub_10019A7E8()
{
  byte_100999059 = 1;
  byte_1009843F0 = 1;
  dword_1009843F4 = 0;
  dword_1009843F8 = 0;
  qword_100984400 = (uint64_t)sub_100114588(48 * *(unsigned __int8 *)(qword_100998FC0 + 2));
  if (qword_100984400)
    return 0;
  else
    return 106;
}

void sub_10019A84C()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  void **v3;

  v0 = dword_1009843F4;
  if (dword_1009843F4)
  {
    v1 = 0;
    v2 = 0;
    do
    {
      v3 = (void **)(qword_100984400 + v1);
      if (*(_WORD *)(qword_100984400 + v1 + 20) != 3125)
        sub_10019CCBC(129, (uint64_t)(v3 + 2));
      sub_100053298(*v3);
      ++v2;
      v0 = dword_1009843F4;
      v1 += 48;
    }
    while (v2 < dword_1009843F4);
  }
  if (!byte_100999059)
    byte_100999059 = 1;
  if (byte_1009843F0)
  {
    if (!v0)
      return;
  }
  else
  {
    byte_1009843F0 = 1;
    if (!v0)
      return;
  }
  dword_1009843F4 = 0;
}

void sub_10019A900()
{
  BOOL v0;

  byte_1009843F0 = 1;
  if (dword_1009843F4)
    v0 = byte_100999059 == 0;
  else
    v0 = 1;
  if (!v0)
    sub_100052F94();
}

void sub_10019A930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  sub_100253320((uint64_t)"HciCmdQueue:\n", a2, a3, a4, a5, a6, a7, a8, v39);
  sub_100253320((uint64_t)"   %d cmds queued: \n", v8, v9, v10, v11, v12, v13, v14, dword_1009843F4);
  if (dword_1009843F4)
  {
    v22 = 0;
    v23 = 20;
    do
    {
      sub_100253320((uint64_t)"   cmd opcode: 0x%4x\n", v15, v16, v17, v18, v19, v20, v21, *(unsigned __int16 *)(qword_100984400 + v23));
      ++v22;
      v23 += 48;
    }
    while (v22 < dword_1009843F4);
  }
  sub_100253320((uint64_t)"   queueHighWaterMark = %d\n", v15, v16, v17, v18, v19, v20, v21, dword_1009843F8);
  if (byte_1009843F0)
    v31 = "TRUE";
  else
    v31 = "FALSE";
  sub_100253320((uint64_t)"   Command Transport Ready = %s\n", v24, v25, v26, v27, v28, v29, v30, (uint64_t)v31);
  sub_100253320((uint64_t)"   OI_HCIFlow_NumCmdPktsAllowed = %d\n", v32, v33, v34, v35, v36, v37, v38, byte_100999059);
}

uint64_t sub_10019AA28()
{
  int v0;

  dword_1009846A8 = 0;
  qword_1009846B0 = 0;
  dword_1009846B8 = 0;
  qword_1009846C0 = 0;
  dword_1009846C8 = 0;
  qword_1009846D0 = 0;
  dword_1009846D8 = 0;
  qword_1009846E0 = 0;
  dword_1009846E8 = 0;
  qword_1009846F0 = 0;
  dword_1009846F8 = 0;
  qword_100984700 = 0;
  xmmword_100984408 = 0u;
  *(_OWORD *)&word_100984418 = 0u;
  xmmword_100984428 = 0u;
  unk_100984438 = 0u;
  xmmword_100984448 = 0u;
  unk_100984458 = 0u;
  xmmword_100984468 = 0u;
  unk_100984478 = 0u;
  xmmword_100984488 = 0u;
  unk_100984498 = 0u;
  xmmword_1009844A8 = 0u;
  unk_1009844B8 = 0u;
  xmmword_1009844C8 = 0u;
  unk_1009844D8 = 0u;
  xmmword_1009844E8 = 0u;
  unk_1009844F8 = 0u;
  xmmword_100984508 = 0u;
  unk_100984518 = 0u;
  xmmword_100984528 = 0u;
  unk_100984538 = 0u;
  xmmword_100984548 = 0u;
  BYTE2(xmmword_100984408) = 2;
  v0 = dword_100978E40 + 1;
  DWORD1(xmmword_100984408) = dword_100978E40;
  xmmword_100984558 = 0u;
  *(_OWORD *)&word_100984568 = 0u;
  xmmword_100984578 = 0u;
  unk_100984588 = 0u;
  xmmword_100984598 = 0u;
  unk_1009845A8 = 0u;
  xmmword_1009845B8 = 0u;
  unk_1009845C8 = 0u;
  xmmword_1009845D8 = 0u;
  unk_1009845E8 = 0u;
  xmmword_1009845F8 = 0u;
  unk_100984608 = 0u;
  xmmword_100984618 = 0u;
  unk_100984628 = 0u;
  xmmword_100984638 = 0u;
  unk_100984648 = 0u;
  xmmword_100984658 = 0u;
  unk_100984668 = 0u;
  xmmword_100984678 = 0u;
  unk_100984688 = 0u;
  xmmword_100984698 = 0u;
  BYTE2(xmmword_100984558) = 3;
  dword_100978E40 += 2;
  DWORD1(xmmword_100984558) = v0;
  return 0;
}

BOOL sub_10019AB28(uint64_t a1)
{
  _BOOL8 v1;
  uint64_t i;

  v1 = 0;
  if (a1)
  {
    for (i = qword_1009846B0; i; i = *(_QWORD *)(i + 40))
    {
      v1 = i == a1;
      if (i == a1)
        break;
    }
  }
  return v1;
}

BOOL sub_10019AB58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = 0;
  if (a1)
  {
    v2 = qword_1009846B0;
    if (qword_1009846B0)
    {
      while (v2 != a1)
      {
        v2 = *(_QWORD *)(v2 + 40);
        if (!v2)
          return 0;
      }
      return *(_BYTE *)(a1 + 304) != 0;
    }
  }
  return v1;
}

uint64_t sub_10019AB98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = 0;
  if (a1)
  {
    v2 = qword_1009846B0;
    if (qword_1009846B0)
    {
      while (v2 != a1)
      {
        v2 = *(_QWORD *)(v2 + 40);
        if (!v2)
          return 0;
      }
      return *(unsigned __int8 *)(a1 + 153);
    }
  }
  return v1;
}

BOOL sub_10019ABD0(uint64_t a1)
{
  _BOOL8 v1;
  uint64_t i;

  v1 = 0;
  if (a1)
  {
    for (i = qword_1009846C0; i; i = *(_QWORD *)(i + 40))
    {
      v1 = i == a1;
      if (i == a1)
        break;
    }
  }
  return v1;
}

BOOL sub_10019AC00(uint64_t a1)
{
  _BOOL8 v1;
  uint64_t i;

  v1 = 0;
  if (a1)
  {
    for (i = qword_1009846D0; i; i = *(_QWORD *)(i + 40))
    {
      v1 = i == a1;
      if (i == a1)
        break;
    }
  }
  return v1;
}

uint64_t sub_10019AC30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = 0;
  if (a1)
  {
    v2 = qword_100984700;
    if (qword_100984700)
    {
      while (v2 != a1)
      {
        v2 = *(_QWORD *)(v2 + 40);
        if (!v2)
          return 0;
      }
      return 1;
    }
  }
  return v1;
}

uint64_t sub_10019AC68(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 2))
    sub_100253460();
  return (*(unsigned __int8 *)(a1 + 152) >> 7) ^ 1u;
}

BOOL sub_10019AC9C(uint64_t a1)
{
  _BOOL8 result;

  result = *(_BYTE *)(a1 + 2) != 4 && (sub_100253460(), *(_BYTE *)(a1 + 2) != 4) || *(_BYTE *)(a1 + 166) != 2;
  return result;
}

__int128 *sub_10019ACEC(int a1)
{
  __int128 *result;

  result = (__int128 *)qword_1009846B0;
  if (qword_1009846B0)
  {
    while (*((_BYTE *)result + 54) == 7 || *(unsigned __int16 *)result != a1)
    {
      result = (__int128 *)*((_QWORD *)result + 5);
      if (!result)
        goto LABEL_5;
    }
  }
  else
  {
LABEL_5:
    result = (__int128 *)qword_1009846C0;
    if (qword_1009846C0)
    {
      while (*(unsigned __int16 *)result != a1)
      {
        result = (__int128 *)*((_QWORD *)result + 5);
        if (!result)
          goto LABEL_8;
      }
    }
    else
    {
LABEL_8:
      result = (__int128 *)qword_1009846D0;
      if (qword_1009846D0)
      {
        while (*(unsigned __int16 *)result != a1)
        {
          result = (__int128 *)*((_QWORD *)result + 5);
          if (!result)
            goto LABEL_11;
        }
      }
      else
      {
LABEL_11:
        result = (__int128 *)qword_1009846E0;
        if (qword_1009846E0)
        {
          while (*(unsigned __int16 *)result != a1)
          {
            result = (__int128 *)*((_QWORD *)result + 5);
            if (!result)
              goto LABEL_14;
          }
        }
        else
        {
LABEL_14:
          result = (__int128 *)qword_1009846F0;
          if (qword_1009846F0)
          {
            while (*(unsigned __int16 *)result != a1)
            {
              result = (__int128 *)*((_QWORD *)result + 5);
              if (!result)
                goto LABEL_17;
            }
          }
          else
          {
LABEL_17:
            result = (__int128 *)qword_100984700;
            if (qword_100984700)
            {
              while (*(unsigned __int16 *)result != a1)
              {
                result = (__int128 *)*((_QWORD *)result + 5);
                if (!result)
                  goto LABEL_20;
              }
            }
            else
            {
LABEL_20:
              result = &xmmword_100984408;
              if ((unsigned __int16)xmmword_100984408 != a1)
              {
                if ((unsigned __int16)xmmword_100984558 == a1)
                  return &xmmword_100984558;
                else
                  return 0;
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10019ADE8(unsigned __int16 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = qword_1009846B0;
  if (qword_1009846B0)
  {
    while ((unsigned __int16 *)v1 != a1 || *(_BYTE *)(v1 + 54) == 7)
    {
      v1 = *(_QWORD *)(v1 + 40);
      if (!v1)
        goto LABEL_5;
    }
  }
  else
  {
LABEL_5:
    v2 = qword_1009846C0;
    if (qword_1009846C0)
    {
      while ((unsigned __int16 *)v2 != a1)
      {
        v2 = *(_QWORD *)(v2 + 40);
        if (!v2)
          goto LABEL_8;
      }
    }
    else
    {
LABEL_8:
      v3 = qword_1009846D0;
      if (qword_1009846D0)
      {
        while ((unsigned __int16 *)v3 != a1)
        {
          v3 = *(_QWORD *)(v3 + 40);
          if (!v3)
            goto LABEL_11;
        }
      }
      else
      {
LABEL_11:
        v4 = qword_100984700;
        if (qword_100984700)
        {
          while ((unsigned __int16 *)v4 != a1)
          {
            v4 = *(_QWORD *)(v4 + 40);
            if (!v4)
              goto LABEL_14;
          }
        }
        else
        {
LABEL_14:
          v5 = qword_1009846E0;
          if (!qword_1009846E0)
            return 0;
          while ((unsigned __int16 *)v5 != a1)
          {
            v5 = *(_QWORD *)(v5 + 40);
            if (!v5)
              return 0;
          }
        }
      }
    }
  }
  return *a1;
}

uint64_t sub_10019AE90(uint64_t a1)
{
  unsigned __int16 *v1;

  v1 = (unsigned __int16 *)sub_10019AEA4(a1);
  return sub_10019ADE8(v1);
}

uint64_t sub_10019AEA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = 0;
  if (a1)
  {
    v2 = qword_1009846B0;
    if (qword_1009846B0)
    {
      while (*(_BYTE *)(v2 + 54) == 7
           || *(_DWORD *)(v2 + 48) != *(_DWORD *)a1
           || *(unsigned __int16 *)(v2 + 52) != *(unsigned __int16 *)(a1 + 4))
      {
        v2 = *(_QWORD *)(v2 + 40);
        if (!v2)
          return 0;
      }
      return v2;
    }
  }
  return v1;
}

uint64_t sub_10019AEFC(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;
  int v4;
  int v5;

  for (i = qword_1009846C0; i; i = *(_QWORD *)(i + 40))
  {
    v3 = *(_QWORD *)(i + 48);
    if (v3)
    {
      if (*(_BYTE *)(v3 + 54) != 7)
      {
        v4 = *(_DWORD *)(v3 + 48);
        v5 = *(unsigned __int16 *)(v3 + 52);
        if (v4 == *(_DWORD *)a1 && v5 == *(unsigned __int16 *)(a1 + 4))
          return i;
      }
    }
    else
    {
      sub_100253460();
    }
  }
  return i;
}

uint64_t sub_10019AF68(unint64_t a1)
{
  uint64_t v1;
  int v3;
  __int16 v4;
  char v5;

  v1 = sub_1000746A4(a1);
  v3 = v1;
  v5 = BYTE6(v1);
  v4 = WORD2(v1);
  return sub_10019AFA0(&v3);
}

uint64_t sub_10019AFA0(_DWORD *a1)
{
  uint64_t result;

  for (result = qword_1009846D0; result; result = *(_QWORD *)(result + 40))
  {
    if (*(_BYTE *)(result + 124) != 7)
    {
      if (*(_BYTE *)(result + 55))
      {
        if (*(_DWORD *)(result + 56) == *a1 && *(_DWORD *)(result + 59) == *(_DWORD *)((char *)a1 + 3))
          break;
      }
      if (*(_DWORD *)(result + 48) == *a1 && *(_DWORD *)(result + 51) == *(_DWORD *)((char *)a1 + 3))
        break;
    }
  }
  return result;
}

uint64_t sub_10019B008(uint64_t a1)
{
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;

  result = qword_1009846B0;
  if (qword_1009846B0)
  {
    while (*(_BYTE *)(result + 54) == 7
         || *(_DWORD *)(result + 48) != *(_DWORD *)a1
         || *(unsigned __int16 *)(result + 52) != *(unsigned __int16 *)(a1 + 4))
    {
      result = *(_QWORD *)(result + 40);
      if (!result)
        goto LABEL_8;
    }
  }
  else
  {
LABEL_8:
    result = qword_1009846D0;
    if (qword_1009846D0)
    {
      while (1)
      {
        if (*(_BYTE *)(result + 124) != 7)
        {
          if (*(_BYTE *)(result + 55))
          {
            if (*(_DWORD *)(result + 57) == *(_DWORD *)a1
              && *(unsigned __int16 *)(result + 61) == *(unsigned __int16 *)(a1 + 4))
            {
              break;
            }
          }
          if (*(_DWORD *)(result + 49) == *(_DWORD *)a1
            && *(unsigned __int16 *)(result + 53) == *(unsigned __int16 *)(a1 + 4))
          {
            break;
          }
        }
        result = *(_QWORD *)(result + 40);
        if (!result)
          goto LABEL_20;
      }
    }
    else
    {
LABEL_20:
      for (result = qword_1009846C0; result; result = *(_QWORD *)(result + 40))
      {
        v6 = *(_QWORD *)(result + 48);
        if (v6 && *(_BYTE *)(v6 + 54) != 7)
        {
          v7 = *(_DWORD *)(v6 + 48);
          v8 = *(unsigned __int16 *)(v6 + 52);
          if (v7 == *(_DWORD *)a1 && v8 == *(unsigned __int16 *)(a1 + 4))
            break;
        }
      }
    }
  }
  return result;
}

uint64_t sub_10019B0F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = 0;
  if (a1)
  {
    v2 = qword_1009846D0;
    if (qword_1009846D0)
    {
      while (v2 != a1 || *(_BYTE *)(v2 + 124) == 7)
      {
        v2 = *(_QWORD *)(v2 + 40);
        if (!v2)
          return 0;
      }
      v1 = a1 + 48;
      if (*(_BYTE *)(a1 + 55))
        return a1 + 56;
    }
  }
  return v1;
}

uint64_t sub_10019B144(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = 0;
  if (a1)
  {
    v2 = qword_1009846B0;
    if (qword_1009846B0)
    {
      while (v2 != a1 || *(_BYTE *)(v2 + 54) == 7)
      {
        v2 = *(_QWORD *)(v2 + 40);
        if (!v2)
          return 0;
      }
      return a1 + 48;
    }
  }
  return v1;
}

__int16 *sub_10019B188(uint64_t a1)
{
  __int16 *v1;
  uint64_t v3;
  int v4;
  int v5;

  v1 = (__int16 *)qword_1009846C0;
  if (qword_1009846C0)
  {
    do
    {
      if (*v1 == -1)
      {
        v3 = *((_QWORD *)v1 + 6);
        if (v3)
        {
          v4 = *(_DWORD *)(v3 + 48);
          v5 = *(unsigned __int16 *)(v3 + 52);
          if (v4 == *(_DWORD *)a1 && v5 == *(unsigned __int16 *)(a1 + 4))
            return v1;
        }
        else
        {
          sub_100253460();
        }
      }
      v1 = (__int16 *)*((_QWORD *)v1 + 5);
    }
    while (v1);
  }
  return v1;
}

uint64_t sub_10019B1F4(uint64_t a1, char a2)
{
  NSObject *v4;
  int v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _WORD *v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  NSObject *v23;
  uint64_t v25;
  uint8_t buf[4];
  void *v27;

  if (sub_10005549C())
  {
    v25 = a1;
    sub_100054530("Allocating ACL connection for %: at state:%d while numAclConnections is %d");
    v4 = sub_1000544A0(0x2Eu);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      v27 = sub_100054494();
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  v5 = dword_1009846A8;
  if (v5 == *(unsigned __int8 *)sub_100252DE8(0x28u))
  {
    if (sub_10005549C())
    {
      sub_100054530("Max ACL connections reached - refusing to allocate acl connection record");
      v6 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    v7 = sub_10002825C();
    if ((_DWORD)v7)
      sub_10017FB14(v7, v8, v9, v10, v11, v12, v13, v14, v25);
    sub_100253460();
    return 0;
  }
  v15 = sub_100114588(0x150uLL);
  if (!v15)
  {
LABEL_20:
    if (sub_10005549C())
    {
      sub_100054530("Out of memory - unable to allocate acl connection record");
      v23 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 0;
  }
  v16 = (uint64_t)v15;
  v17 = *(_DWORD *)a1;
  v15[26] = *(_WORD *)(a1 + 4);
  *((_DWORD *)v15 + 12) = v17;
  *((_BYTE *)v15 + 54) = a2;
  v15[69] = *(_WORD *)(qword_100998F48 + 10) & 6 | 1;
  *((_BYTE *)v15 + 144) = -1;
  *((_BYTE *)v15 + 152) = 0;
  v15[70] = 32000;
  *((_BYTE *)v15 + 2) = 0;
  *v15 = -1;
  v18 = dword_100978E40++;
  *((_DWORD *)v15 + 1) = v18;
  v15[10] = -1;
  *((_BYTE *)v15 + 256) = *(_BYTE *)(sub_100252DE8(0x28u) + 10) != 0;
  *(_BYTE *)(v16 + 153) = 0;
  *(_DWORD *)(v16 + 324) = 0;
  v19 = &qword_1009846B0;
  v20 = qword_1009846B0;
  if (qword_1009846B0)
  {
    do
    {
      v21 = v20;
      v20 = *(_QWORD *)(v20 + 40);
    }
    while (v20);
    v19 = (uint64_t *)(v21 + 40);
  }
  *v19 = v16;
  ++dword_1009846A8;
  if (sub_1001F35F4(v16))
  {
    if (sub_10005549C())
    {
      sub_100054530("Fail to allocate L2CAP resources for new ACL connection");
      v22 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    sub_10019B4A8(v16);
    sub_100053298((void *)v16);
    goto LABEL_20;
  }
  return v16;
}

void sub_10019B4A8(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;

  v1 = a1;
  v2 = qword_1009846B0;
  if (qword_1009846B0 == a1)
  {
    qword_1009846B0 = *(_QWORD *)(a1 + 40);
LABEL_6:
    --dword_1009846A8;
  }
  else
  {
    while (v2)
    {
      v3 = v2;
      v2 = *(_QWORD *)(v2 + 40);
      if (v2 == a1)
      {
        *(_QWORD *)(v3 + 40) = *(_QWORD *)(a1 + 40);
        goto LABEL_6;
      }
    }
    if (sub_10005549C())
    {
      sub_100054530("RemoveAclHandleFromList: invalid handle %x", v1);
      v4 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
        sub_1006D2E5C();
    }
  }
}

char *sub_10019B558(uint64_t a1)
{
  int v2;
  NSObject *v3;
  char *v4;
  char *v5;
  int v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;

  v2 = dword_1009846B8;
  if (v2 == *(unsigned __int8 *)(sub_100252DE8(0x28u) + 1))
  {
    if (!sub_10005549C())
      return 0;
    sub_100054530("Max SCO connections reached - refusing to allocate sco connection record");
    v3 = sub_1000544A0(0x2Eu);
    if (!os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
      return 0;
    goto LABEL_12;
  }
  v4 = (char *)sub_100114588(0x40uLL);
  if (!v4)
  {
    if (!sub_10005549C())
      return 0;
    sub_100054530("Out of memory - unable to allocate sco connection record");
    v10 = sub_1000544A0(0x2Eu);
    if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      return 0;
LABEL_12:
    sub_1006CE7A4();
    return 0;
  }
  v5 = v4;
  *((_QWORD *)v4 + 6) = sub_10019AEA4(a1);
  *(_WORD *)(v5 + 57) = 255;
  v5[59] = 0;
  v5[2] = 1;
  *(_WORD *)v5 = -1;
  v6 = dword_100978E40++;
  *((_DWORD *)v5 + 1) = v6;
  v7 = &qword_1009846C0;
  v8 = qword_1009846C0;
  if (qword_1009846C0)
  {
    do
    {
      v9 = v8;
      v8 = *(_QWORD *)(v8 + 40);
    }
    while (v8);
    v7 = (uint64_t *)(v9 + 40);
  }
  *v7 = (uint64_t)v5;
  ++dword_1009846B8;
  return v5;
}

void *sub_10019B6A0(int *a1)
{
  int v2;
  NSObject *v3;
  void *v4;
  void *v5;
  int v6;
  __int16 v7;
  int v8;
  NSObject *v9;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;

  v2 = dword_1009846C8;
  if (v2 == *(unsigned __int8 *)(sub_100252DE8(0x28u) + 2))
  {
    if (!sub_10005549C())
      return 0;
    sub_100054530("Max LE connections reached - refusing to allocate LE connection record");
    v3 = sub_1000544A0(0x2Eu);
    if (!os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
      return 0;
    goto LABEL_10;
  }
  v4 = sub_100114588(0x150uLL);
  if (!v4)
  {
    if (!sub_10005549C())
      return 0;
    sub_100054530("Out of memory - unable to allocate LE connection record");
    v9 = sub_1000544A0(0x2Eu);
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      return 0;
LABEL_10:
    sub_1006CE7A4();
    return 0;
  }
  v5 = v4;
  v6 = *a1;
  v7 = *((_WORD *)a1 + 2);
  *((_BYTE *)v4 + 54) = *((_BYTE *)a1 + 6);
  *((_WORD *)v4 + 26) = v7;
  *((_DWORD *)v4 + 12) = v6;
  *((_BYTE *)v4 + 2) = 4;
  v8 = dword_100978E40++;
  *((_DWORD *)v4 + 1) = v8;
  if (sub_1001F35F4((uint64_t)v4))
  {
    sub_100053298(v5);
    return 0;
  }
  v11 = &qword_1009846D0;
  v12 = qword_1009846D0;
  if (qword_1009846D0)
  {
    do
    {
      v13 = v12;
      v12 = *(_QWORD *)(v12 + 40);
    }
    while (v12);
    v11 = (uint64_t *)(v13 + 40);
  }
  *v11 = (uint64_t)v5;
  ++dword_1009846C8;
  return v5;
}

void *sub_10019B7F4(uint64_t a1)
{
  int v2;
  NSObject *v3;
  void *v4;
  void *v5;
  int v6;
  NSObject *v7;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v2 = dword_1009846F8;
  if (v2 == *(unsigned __int8 *)(sub_100252DE8(0x28u) + 5))
  {
    if (!sub_10005549C())
      return 0;
    sub_100054530("Max OTHER connections reached - refusing to allocate new OTHER connection record");
    v3 = sub_1000544A0(0x2Eu);
    if (!os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
      return 0;
    goto LABEL_10;
  }
  v4 = sub_100114588(0x48uLL);
  if (!v4)
  {
    if (!sub_10005549C())
      return 0;
    sub_100054530("Out of memory - unable to allocate OTHER connection record");
    v7 = sub_1000544A0(0x2Eu);
    if (!os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      return 0;
LABEL_10:
    sub_1006CE7A4();
    return 0;
  }
  v5 = v4;
  *((_BYTE *)v4 + 2) = 8;
  *((_QWORD *)v4 + 6) = a1;
  v6 = dword_100978E40++;
  *((_DWORD *)v4 + 1) = v6;
  if (sub_1001F35F4((uint64_t)v4))
  {
    sub_100053298(v5);
    return 0;
  }
  v9 = &qword_100984700;
  v10 = qword_100984700;
  if (qword_100984700)
  {
    do
    {
      v11 = v10;
      v10 = *(_QWORD *)(v10 + 40);
    }
    while (v10);
    v9 = (uint64_t *)(v11 + 40);
  }
  *v9 = (uint64_t)v5;
  ++dword_1009846F8;
  return v5;
}

void sub_10019B934(unsigned __int16 *a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  NSObject *v32;
  NSObject *v33;
  NSObject *v34;
  NSObject *v35;
  NSObject *v36;
  uint8_t buf[4];
  void *v38;

  if (a1)
  {
    switch(*((_BYTE *)a1 + 2))
    {
      case 0:
        v2 = qword_1009846B0;
        if (qword_1009846B0)
        {
          while ((unsigned __int16 *)v2 != a1)
          {
            v2 = *(_QWORD *)(v2 + 40);
            if (!v2)
              goto LABEL_6;
          }
        }
        else
        {
LABEL_6:
          sub_100253460();
        }
        sub_1001F369C((uint64_t)a1);
        if (*((_QWORD *)a1 + 20))
          sub_100253460();
        if (*((_QWORD *)a1 + 15))
          sub_100253460();
        if (*((_QWORD *)a1 + 16))
          sub_100253460();
        v3 = (void *)*((_QWORD *)a1 + 15);
        if (v3)
        {
          sub_100053298(v3);
          *((_QWORD *)a1 + 15) = 0;
        }
        v4 = (void *)*((_QWORD *)a1 + 16);
        if (v4)
        {
          sub_100053298(v4);
          *((_QWORD *)a1 + 16) = 0;
        }
        if (sub_10005549C())
        {
          sub_100054530("Releasing ACL connection 0x%x with addr %: numAclConnections:%d", *a1, a1 + 24, dword_1009846A8);
          v5 = sub_1000544A0(0x2Eu);
          if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 136446210;
            v38 = sub_100054494();
            _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
        sub_100049F6C(*((unsigned int *)a1 + 18));
        *((_DWORD *)a1 + 18) = 0;
        v6 = *((unsigned int *)a1 + 44);
        if ((_DWORD)v6)
          sub_100049F6C(v6);
        sub_10019ED88(a1);
        sub_10019B4A8((uint64_t)a1);
        break;
      case 1:
        v8 = qword_1009846C0;
        if (qword_1009846C0)
        {
          while ((unsigned __int16 *)v8 != a1)
          {
            v8 = *(_QWORD *)(v8 + 40);
            if (!v8)
              goto LABEL_29;
          }
        }
        else
        {
LABEL_29:
          sub_100253460();
        }
        if (sub_10005549C())
        {
          sub_100054530("Releasing SCO connection 0x%4x", *a1);
          v9 = sub_1000544A0(0x2Eu);
          if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 136446210;
            v38 = sub_100054494();
            _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
        sub_10019ED88(a1);
        v10 = qword_1009846C0;
        if ((unsigned __int16 *)qword_1009846C0 == a1)
        {
          qword_1009846C0 = *((_QWORD *)a1 + 5);
LABEL_91:
          --dword_1009846B8;
        }
        else
        {
          while (v10)
          {
            v11 = v10;
            v10 = *(_QWORD *)(v10 + 40);
            if ((unsigned __int16 *)v10 == a1)
            {
              *(_QWORD *)(v11 + 40) = *((_QWORD *)a1 + 5);
              goto LABEL_91;
            }
          }
          if (sub_10005549C())
          {
            sub_100054530("OI_HCI_ReleaseConnection: %x", (_DWORD)a1);
            v31 = sub_1000544A0(0x2Eu);
            if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR))
              goto LABEL_118;
          }
        }
        break;
      case 4:
        v16 = qword_1009846D0;
        if (qword_1009846D0)
        {
          while ((unsigned __int16 *)v16 != a1)
          {
            v16 = *(_QWORD *)(v16 + 40);
            if (!v16)
              goto LABEL_52;
          }
        }
        else
        {
LABEL_52:
          sub_100253460();
        }
        if (sub_10005549C())
        {
          sub_100054530("Releasing LE connection 0x%4x", *a1);
          v17 = sub_1000544A0(0x2Eu);
          if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 136446210;
            v38 = sub_100054494();
            _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
        sub_1001F369C((uint64_t)a1);
        sub_100049F6C(*((unsigned int *)a1 + 50));
        *((_DWORD *)a1 + 50) = 0;
        sub_10019ED88(a1);
        sub_100237B78((uint64_t)a1);
        v18 = qword_1009846D0;
        if ((unsigned __int16 *)qword_1009846D0 == a1)
        {
          qword_1009846D0 = *((_QWORD *)a1 + 5);
LABEL_95:
          --dword_1009846C8;
        }
        else
        {
          while (v18)
          {
            v19 = v18;
            v18 = *(_QWORD *)(v18 + 40);
            if ((unsigned __int16 *)v18 == a1)
            {
              *(_QWORD *)(v19 + 40) = *((_QWORD *)a1 + 5);
              goto LABEL_95;
            }
          }
          if (sub_10005549C())
          {
            sub_100054530("OI_HCI_ReleaseConnection: %x", (_DWORD)a1);
            v33 = sub_1000544A0(0x2Eu);
            if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
              goto LABEL_118;
          }
        }
        break;
      case 5:
        v20 = qword_1009846E0;
        if (qword_1009846E0)
        {
          while ((unsigned __int16 *)v20 != a1)
          {
            v20 = *(_QWORD *)(v20 + 40);
            if (!v20)
              goto LABEL_63;
          }
        }
        else
        {
LABEL_63:
          sub_100253460();
        }
        if (sub_10005549C())
        {
          sub_100054530("Releasing LE CIS connection 0x%4x", *a1);
          v21 = sub_1000544A0(0x2Eu);
          if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 136446210;
            v38 = sub_100054494();
            _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
        v22 = qword_1009846E0;
        if ((unsigned __int16 *)qword_1009846E0 == a1)
        {
          qword_1009846E0 = *((_QWORD *)a1 + 5);
LABEL_97:
          --dword_1009846D8;
        }
        else
        {
          while (v22)
          {
            v23 = v22;
            v22 = *(_QWORD *)(v22 + 40);
            if ((unsigned __int16 *)v22 == a1)
            {
              *(_QWORD *)(v23 + 40) = *((_QWORD *)a1 + 5);
              goto LABEL_97;
            }
          }
          if (sub_10005549C())
          {
            sub_100054530("OI_HCI_ReleaseConnection: %x", (_DWORD)a1);
            v34 = sub_1000544A0(0x2Eu);
            if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR))
              goto LABEL_118;
          }
        }
        break;
      case 6:
        v24 = qword_1009846F0;
        if (qword_1009846F0)
        {
          while ((unsigned __int16 *)v24 != a1)
          {
            v24 = *(_QWORD *)(v24 + 40);
            if (!v24)
              goto LABEL_74;
          }
        }
        else
        {
LABEL_74:
          sub_100253460();
        }
        if (sub_10005549C())
        {
          sub_100054530("Releasing LE BIS connection 0x%4x", *a1);
          v25 = sub_1000544A0(0x2Eu);
          if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 136446210;
            v38 = sub_100054494();
            _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
        v26 = qword_1009846F0;
        if ((unsigned __int16 *)qword_1009846F0 == a1)
        {
          qword_1009846F0 = *((_QWORD *)a1 + 5);
LABEL_99:
          --dword_1009846E8;
        }
        else
        {
          while (v26)
          {
            v27 = v26;
            v26 = *(_QWORD *)(v26 + 40);
            if ((unsigned __int16 *)v26 == a1)
            {
              *(_QWORD *)(v27 + 40) = *((_QWORD *)a1 + 5);
              goto LABEL_99;
            }
          }
          if (sub_10005549C())
          {
            sub_100054530("OI_HCI_ReleaseConnection: %x", (_DWORD)a1);
            v35 = sub_1000544A0(0x2Eu);
            if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR))
              goto LABEL_118;
          }
        }
        break;
      case 7:
        v12 = qword_100984708;
        if (qword_100984708)
        {
          while ((unsigned __int16 *)v12 != a1)
          {
            v12 = *(_QWORD *)(v12 + 40);
            if (!v12)
              goto LABEL_41;
          }
        }
        else
        {
LABEL_41:
          sub_100253460();
        }
        if (sub_10005549C())
        {
          sub_100054530("Releasing LE BIS sync connection 0x%4x", *a1);
          v13 = sub_1000544A0(0x2Eu);
          if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 136446210;
            v38 = sub_100054494();
            _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
        v14 = qword_100984708;
        if ((unsigned __int16 *)qword_100984708 == a1)
        {
          qword_100984708 = *((_QWORD *)a1 + 5);
LABEL_93:
          --dword_100984710;
        }
        else
        {
          while (v14)
          {
            v15 = v14;
            v14 = *(_QWORD *)(v14 + 40);
            if ((unsigned __int16 *)v14 == a1)
            {
              *(_QWORD *)(v15 + 40) = *((_QWORD *)a1 + 5);
              goto LABEL_93;
            }
          }
          if (sub_10005549C())
          {
            sub_100054530("OI_HCI_ReleaseConnection: %x", (_DWORD)a1);
            v32 = sub_1000544A0(0x2Eu);
            if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR))
LABEL_118:
              sub_1006D2E5C();
          }
        }
        break;
      case 8:
        v28 = qword_100984700;
        if (qword_100984700)
        {
          while ((unsigned __int16 *)v28 != a1)
          {
            v28 = *(_QWORD *)(v28 + 40);
            if (!v28)
              goto LABEL_85;
          }
        }
        else
        {
LABEL_85:
          sub_100253460();
        }
        sub_1001F369C((uint64_t)a1);
        v29 = qword_100984700;
        if ((unsigned __int16 *)qword_100984700 == a1)
        {
          qword_100984700 = *((_QWORD *)a1 + 5);
LABEL_101:
          --dword_1009846F8;
        }
        else
        {
          while (v29)
          {
            v30 = v29;
            v29 = *(_QWORD *)(v29 + 40);
            if ((unsigned __int16 *)v29 == a1)
            {
              *(_QWORD *)(v30 + 40) = *((_QWORD *)a1 + 5);
              goto LABEL_101;
            }
          }
          if (sub_10005549C())
          {
            sub_100054530("OI_HCI_ReleaseConnection: %x", (_DWORD)a1);
            v36 = sub_1000544A0(0x2Eu);
            if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR))
              sub_1006D2E5C();
          }
        }
        break;
      default:
        sub_100253460();
        break;
    }
    sub_100053298(a1);
  }
  else
  {
    sub_100253460();
    if ((sub_10005549C() & 1) != 0)
    {
      sub_100054530("connection handle is null, numAclConnections:%d", dword_1009846A8);
      v7 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
}

uint64_t sub_10019C1AC()
{
  uint64_t v0;
  uint64_t v2;

  v2 = 0;
  v0 = 0;
  while (sub_10019C200(&v2))
  {
    if (*(_BYTE *)(v2 + 54) == 7)
      v0 = v0;
    else
      v0 = (v0 + 1);
  }
  return v0;
}

BOOL sub_10019C200(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  if (!a1)
    sub_100253460();
  v2 = *a1;
  if (*a1)
  {
    v3 = qword_1009846B0;
    if (qword_1009846B0)
    {
      while (v3 != v2)
      {
        v3 = *(_QWORD *)(v3 + 40);
        if (!v3)
          goto LABEL_7;
      }
    }
    else
    {
LABEL_7:
      sub_100253460();
      v2 = *a1;
    }
    v4 = (uint64_t *)(v2 + 40);
  }
  else
  {
    v4 = &qword_1009846B0;
  }
  v5 = *v4;
  *a1 = v5;
  return v5 != 0;
}

uint64_t sub_10019C270()
{
  return dword_1009846B8;
}

uint64_t sub_10019C27C()
{
  uint64_t v0;
  uint64_t v2;

  v2 = 0;
  v0 = 0;
  while (sub_10019C2D0(&v2))
  {
    if (*(_BYTE *)(v2 + 124) == 7)
      v0 = v0;
    else
      v0 = (v0 + 1);
  }
  return v0;
}

BOOL sub_10019C2D0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  if (!a1)
    sub_100253460();
  v2 = *a1;
  if (*a1)
  {
    v3 = qword_1009846D0;
    if (qword_1009846D0)
    {
      while (v3 != v2)
      {
        v3 = *(_QWORD *)(v3 + 40);
        if (!v3)
          goto LABEL_7;
      }
    }
    else
    {
LABEL_7:
      sub_100253460();
      v2 = *a1;
    }
    v4 = (uint64_t *)(v2 + 40);
  }
  else
  {
    v4 = &qword_1009846D0;
  }
  v5 = *v4;
  *a1 = v5;
  return v5 != 0;
}

uint64_t sub_10019C340()
{
  uint64_t v0;
  uint64_t v2;

  v2 = 0;
  v0 = 0;
  while (sub_10019C2D0(&v2))
  {
    if (*(_BYTE *)(v2 + 124) != 7)
      v0 = v0 + *(unsigned __int8 *)(v2 + 127);
  }
  return v0;
}

uint64_t sub_10019C39C()
{
  uint64_t v0;
  uint64_t v2;

  v2 = 0;
  v0 = 0;
  while (sub_10019C3F0(&v2))
  {
    if (*(_BYTE *)(v2 + 60) == 7)
      v0 = v0;
    else
      v0 = (v0 + 1);
  }
  return v0;
}

BOOL sub_10019C3F0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  if (!a1)
    sub_100253460();
  v2 = *a1;
  if (*a1)
  {
    v3 = qword_100984700;
    if (qword_100984700)
    {
      while (v3 != v2)
      {
        v3 = *(_QWORD *)(v3 + 40);
        if (!v3)
          goto LABEL_7;
      }
    }
    else
    {
LABEL_7:
      sub_100253460();
      v2 = *a1;
    }
    v4 = (uint64_t *)(v2 + 40);
  }
  else
  {
    v4 = &qword_100984700;
  }
  v5 = *v4;
  *a1 = v5;
  return v5 != 0;
}

uint64_t sub_10019C460()
{
  uint64_t v0;
  uint64_t v2;

  v2 = 0;
  v0 = 0;
  while (sub_10019C200(&v2))
  {
    if (*(_DWORD *)(v2 + 248))
      v0 = (v0 + 1);
    else
      v0 = v0;
  }
  return v0;
}

BOOL sub_10019C4B4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  if (!a1)
    sub_100253460();
  v2 = *a1;
  if (*a1)
  {
    v3 = qword_1009846C0;
    if (qword_1009846C0)
    {
      while (v3 != v2)
      {
        v3 = *(_QWORD *)(v3 + 40);
        if (!v3)
          goto LABEL_7;
      }
    }
    else
    {
LABEL_7:
      sub_100253460();
      v2 = *a1;
    }
    v4 = (uint64_t *)(v2 + 40);
  }
  else
  {
    v4 = &qword_1009846C0;
  }
  v5 = *v4;
  *a1 = v5;
  return v5 != 0;
}

BOOL sub_10019C524(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  if (!a1)
    sub_100253460();
  v2 = *a1;
  if (*a1)
  {
    v3 = qword_1009846E0;
    if (qword_1009846E0)
    {
      while (v3 != v2)
      {
        v3 = *(_QWORD *)(v3 + 40);
        if (!v3)
          goto LABEL_7;
      }
    }
    else
    {
LABEL_7:
      sub_100253460();
      v2 = *a1;
    }
    v4 = (uint64_t *)(v2 + 40);
  }
  else
  {
    v4 = &qword_1009846E0;
  }
  v5 = *v4;
  *a1 = v5;
  return v5 != 0;
}

uint64_t sub_10019C594(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (a1 && (v1 = qword_1009846B0) != 0)
  {
    while (v1 != a1)
    {
      v1 = *(_QWORD *)(v1 + 40);
      if (!v1)
        goto LABEL_5;
    }
    return 1;
  }
  else
  {
LABEL_5:
    v2 = 0;
    if (a1)
    {
      v3 = qword_1009846D0;
      if (qword_1009846D0)
      {
        while (v3 != a1)
        {
          v3 = *(_QWORD *)(v3 + 40);
          if (!v3)
            return 0;
        }
        return 3;
      }
    }
  }
  return v2;
}

const char *sub_10019C5F4(unsigned int a1)
{
  if (a1 > 7)
    return "unknown";
  else
    return (&off_10091D660)[(char)a1];
}

void sub_10019C61C(uint64_t a1, float a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10[8];
  uint64_t v11;
  _WORD v12[7];

  *(_QWORD *)v10 = 0;
  v11 = 0;
  memset(v12, 0, sizeof(v12));
  LOWORD(a2) = *(_WORD *)(a1 + 80);
  gcvt((float)((float)LODWORD(a2) * 1.25), 7, v10);
  sub_100253434(*(unsigned __int8 *)(a1 + 70));
  sub_100253348((uint64_t)"Le topology - {adv-addr: %:-%s, resolved-addr: %:-%s, lmhandle: 0x%2x, interval: %s ms, latency: %d, lsto: %d, minCE: %d, maxCE: %d, role: %s, state: %s, ready-state: %s, enc-state: %s, phyStatsEnabled: %d}", v3, v4, v5, v6, v7, v8, v9, a1 + 49);
}

void sub_10019C79C(uint64_t a1, float a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10[8];
  uint64_t v11;
  _WORD v12[7];

  *(_QWORD *)v10 = 0;
  v11 = 0;
  memset(v12, 0, sizeof(v12));
  LOWORD(a2) = *(_WORD *)(a1 + 136);
  gcvt((float)((float)LODWORD(a2) * 0.625), 7, v10);
  sub_100253434(*(unsigned __int8 *)(a1 + 144));
  sub_10025340C(*(unsigned __int8 *)(a1 + 152));
  sub_100253370(*(unsigned __int8 *)(a1 + 153));
  sub_100253348((uint64_t)"ACL topology - {bd-addr: %:, lmhandle: 0x%2x, reference: %d, role: %s, state: %s, lk-mode: %s, enc-state: %s, lsto: %d, interval: %s ms, phyStatsEnabled: %d}", v3, v4, v5, v6, v7, v8, v9, a1 + 48);
}

void sub_10019C8B4(unsigned __int16 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *a1;
  sub_100253398(*((unsigned __int8 *)a1 + 58));
  sub_100253348((uint64_t)"Voice topology - {lmhandle: 0x%2x, voicehandle: 0x%2x, lk-type: %d, phyStatsEnabled: %d}}", v2, v3, v4, v5, v6, v7, v8, v1);
}

void sub_10019C914()
{
  float v0;
  uint64_t i;

  if (dword_1009846C8)
  {
    for (i = 0; sub_10019C2D0(&i); sub_10019C61C(i, v0))
      ;
  }
}

void sub_10019C95C()
{
  int v0;
  float v1;
  unsigned __int16 *i;

  v0 = dword_1009846B8;
  if (dword_1009846A8 | dword_1009846B8)
  {
    if (dword_1009846A8)
    {
      for (i = 0; sub_10019C200((uint64_t *)&i); sub_10019C79C((uint64_t)i, v1))
        ;
      v0 = dword_1009846B8;
    }
    if (v0)
    {
      for (i = 0; sub_10019C4B4((uint64_t *)&i); sub_10019C8B4(i))
        ;
    }
  }
}

void sub_10019C9E8()
{
  BOOL v0;
  float v3;
  float v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int16 *i;

  if (dword_1009846A8)
    v0 = 0;
  else
    v0 = dword_1009846B8 == 0;
  if (!v0 || dword_1009846C8 != 0 || dword_1009846D8 != 0)
  {
    if (dword_1009846A8)
    {
      for (i = 0; sub_10019C200((uint64_t *)&i); sub_10019C79C((uint64_t)i, v3))
        ;
    }
    if (dword_1009846B8)
    {
      for (i = 0; sub_10019C4B4((uint64_t *)&i); sub_10019C8B4(i))
        ;
    }
    if (dword_1009846C8)
    {
      for (i = 0; sub_10019C2D0((uint64_t *)&i); sub_10019C61C((uint64_t)i, v4))
        ;
    }
    if (dword_1009846D8)
    {
      for (i = 0;
            sub_10019C524((uint64_t *)&i);
            sub_100253348((uint64_t)"Le CIS topology - {cisHandle: 0x%2x, isoInterval: %d}", v5, v6, v7, v8, v9, v10, v11, *i))
      {
        ;
      }
    }
  }
}

void sub_10019CB24(int a1, uint64_t a2)
{
  NSObject *v3;
  NSObject *v4;
  NSObject *v5;

  if (DWORD2(xmmword_1009991F8))
  {
    switch(a1)
    {
      case 1:
        ++dword_100984718;
        sub_10019A900();
        break;
      case 2:
        ++dword_100984720;
        sub_10019F2C8(a2);
        break;
      case 3:
        ++dword_100984728;
        sub_10019F44C(a2);
        break;
      case 4:
        if (!sub_10005549C())
          goto LABEL_15;
        sub_100054530("OI_HCIIfc_SendCompleted, invalid sendType %d", 4);
        v5 = sub_1000544A0(0x2Eu);
        if (!os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
          goto LABEL_15;
        goto LABEL_14;
      default:
        if (sub_10005549C())
        {
          sub_100054530("OI_HCIIfc_SendCompleted, unknown sendType %d", a1);
          v4 = sub_1000544A0(0x2Eu);
          if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
LABEL_14:
            sub_1006CE7A4();
        }
LABEL_15:
        sub_100253460();
        break;
    }
    sub_100049AD8();
  }
  else if (sub_10005549C())
  {
    sub_100054530("OI_HCIIfc_SendCompleted, HCI not initialized - ignoring event");
    v3 = sub_1000544A0(0x2Eu);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
}

char *sub_10019CCA4(_BYTE *a1)
{
  if (a1)
    *a1 = 5;
  return &byte_100984730;
}

void sub_10019CCBC(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  NSObject *v13;
  unsigned int v14;
  unsigned __int8 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  NSObject *v21;
  NSObject *v22;
  __int16 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  _OWORD v29[16];

  memset(v29, 0, sizeof(v29));
  v4 = *(unsigned __int16 *)(a2 + 4);
  v5 = v4 >> 10;
  v6 = *(unsigned __int8 *)(a2 + 8);
  sub_1001D8754(v4);
  if (v5 < 0x3F)
    sub_1002532F8((uint64_t)v29, 256, (uint64_t)"HCI expected event %d with opcode %s (0x%x) %s, reason is %!", v7, v8, v9, v10, v11, v6);
  else
    sub_1002532F8((uint64_t)v29, 256, (uint64_t)"HCI expected event %d with opcode %s (0x%x) %s, reason is %!. subopcode: 0x%02x -- subopcode2: 0x%02x", v7, v8, v9, v10, v11, v6);
  if (sub_10005549C())
  {
    sub_100054530((char *)v29);
    v12 = sub_1000544A0(0x2Eu);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      sub_1006CEEC0();
  }
  sub_10011D44C((const char *)v29);
  if (sub_100052F88())
  {
    if (sub_10005549C())
    {
      sub_100054530("Controller core dump is in progress, don't trigger expected event timeouts");
      v13 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
        sub_1006CEEC0();
    }
    return;
  }
  if ((_DWORD)a1 == 621)
  {
    if (off_100984738)
      off_100984738(621);
    else
      sub_100253460();
  }
  v14 = *(unsigned __int8 *)(a2 + 8);
  switch(v14)
  {
    case 0xEu:
      v23 = 0;
      *(_QWORD *)&v24 = &v23;
      WORD4(v24) = 1;
      HIWORD(v24) = 1;
      *(_DWORD *)((char *)&v24 + 10) = 65537;
      (*(void (**)(uint64_t, _QWORD, __int128 *))(a2 + 16))(a1, *(_QWORD *)(a2 + 24), &v24);
      return;
    case 0x3Eu:
      v28 = 0;
      v26 = 0u;
      v27 = 0u;
      v24 = 0u;
      v25 = 0u;
      if (sub_1000499C8(0x3Eu))
      {
        sub_10019D1E0(a1, a2, (uint64_t)&v24);
        sub_10021EEE8((unsigned __int16)v24, DWORD2(v24), (unsigned __int8 *)v25);
        return;
      }
      if (sub_10005549C())
      {
        sub_100054530("Failed to find event descriptor for %x", 62);
        v21 = sub_1000544A0(0x2Eu);
        if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
LABEL_29:
          sub_1006CE7A4();
      }
      break;
    case 0xFu:
      sub_10019D010(a2, a1);
      return;
    default:
      v28 = 0;
      v26 = 0u;
      v27 = 0u;
      v24 = 0u;
      v25 = 0u;
      v15 = sub_1000499C8(v14);
      if (v15)
      {
        sub_10019D2F8(a1, a2, v15, (uint64_t *)&v24);
        sub_10019D5A8(v14, (uint64_t *)&v24, 0, 0, v16, v17, v18, v19, v20);
        return;
      }
      if (sub_10005549C())
      {
        sub_100054530("Failed to find event descriptor for %x", v14);
        v22 = sub_1000544A0(0x2Eu);
        if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
          goto LABEL_29;
      }
      break;
  }
}

void sub_10019D010(uint64_t a1, int a2)
{
  char *v4;
  uint64_t v5;
  NSObject *v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  NSObject *v13;
  NSObject *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;

  v19 = 0;
  v17 = 0u;
  v18 = 0u;
  v15 = 0u;
  v16 = 0u;
  v4 = sub_100052DE8(*(unsigned __int16 *)(a1 + 6));
  if (!v4)
  {
    if (!sub_10005549C())
      goto LABEL_16;
    sub_100054530("%! (%d)", 620, *(unsigned __int16 *)(a1 + 6), v15, v16, v17, v18, v19);
    v6 = sub_1000544A0(0x2Eu);
    if (!os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      goto LABEL_16;
    goto LABEL_15;
  }
  v5 = v4[20];
  if ((_DWORD)v5 == 62)
  {
    if (sub_1000499C8(0x3Eu))
    {
      sub_10019D1E0(a2, a1, (uint64_t)&v15);
      sub_10021EEE8((unsigned __int16)v15, DWORD2(v15), (unsigned __int8 *)v16);
      return;
    }
    if (!sub_10005549C())
      goto LABEL_16;
    sub_100054530("%! (%d)", 620, 62, v15, v16, v17, v18, v19);
    v13 = sub_1000544A0(0x2Eu);
    if (!os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      goto LABEL_16;
    goto LABEL_15;
  }
  v7 = sub_1000499C8(v4[20]);
  if (v7)
  {
    sub_10019D2F8(a2, a1, v7, (uint64_t *)&v15);
    sub_10019D5A8(v5, (uint64_t *)&v15, 0, 0, v8, v9, v10, v11, v12);
    return;
  }
  if (sub_10005549C())
  {
    sub_100054530("%! (%d)", 620, v5, v15, v16, v17, v18, v19);
    v14 = sub_1000544A0(0x2Eu);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
LABEL_15:
      sub_1006CE7A4();
  }
LABEL_16:
  sub_100253460();
}

void sub_10019D1E0(int a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  char v4;
  NSObject *v5;

  *(_QWORD *)(a3 + 64) = 0;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_DWORD *)a3 = *(unsigned __int16 *)(a2 + 4);
  *(_DWORD *)(a3 + 8) = a1;
  v3 = *(unsigned __int16 *)(a2 + 4);
  if (v3 > 0x2067)
  {
    if (v3 - 8296 >= 5)
    {
      if (v3 == 8318)
        goto LABEL_15;
      if (v3 != 8325)
        goto LABEL_12;
    }
    goto LABEL_9;
  }
  v4 = v3 - 13;
  if (v3 - 8205 <= 0x37)
  {
    if (((1 << v4) & 0x1240) != 0)
    {
LABEL_15:
      *(_DWORD *)(a3 + 16) = *(unsigned __int16 *)(a2 + 16);
      return;
    }
    if (((1 << v4) & 0xC0000000000001) != 0)
      goto LABEL_9;
  }
  if (v3 == 8292)
  {
LABEL_9:
    *(_QWORD *)(a3 + 16) = a2 + 16;
    return;
  }
  if (v3 == 8294)
    goto LABEL_15;
LABEL_12:
  if (sub_10005549C())
  {
    sub_100054530("Unknown expected param type.");
    v5 = sub_1000544A0(0x2Eu);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
}

void sub_10019D2F8(int a1, uint64_t a2, unsigned __int8 *a3, uint64_t *a4)
{
  unint64_t v8;
  unsigned __int16 *v9;
  uint64_t *v10;
  int v11;
  uint64_t v12;
  NSObject *v13;
  void *v14;
  int v15;
  int v16;
  uint64_t v17;
  uint8_t buf[4];
  void *v19;
  __int16 v20;
  int v21;

  bzero(a4, 8 * a3[4]);
  if (a3[4])
  {
    v8 = 0;
    v9 = (unsigned __int16 *)(a2 + 16);
    v10 = a4;
    while (1)
    {
      switch(*(_BYTE *)(*((_QWORD *)a3 + 1) + v8))
      {
        case 'a':
          if (a3[17] != 7)
            goto LABEL_4;
          *v10 = (uint64_t)v9;
          goto LABEL_5;
        case 'c':
        case 'e':
        case 'f':
        case 'k':
        case 'n':
        case 'p':
LABEL_4:
          *v10 = (uint64_t)&unk_10073A7FC;
          goto LABEL_5;
        case 'h':
          v11 = a3[17];
          if (v11 == 7)
          {
            v12 = (uint64_t)sub_10019B188((uint64_t)v9);
            if (v12)
            {
              if (*(_BYTE *)(*(_QWORD *)(v12 + 48) + 54) == 7)
                v12 = *(_QWORD *)(v12 + 48);
              if (v12)
                goto LABEL_25;
LABEL_22:
              if (!sub_10005549C()
                || (sub_100054530("No connection record found for %:", v9),
                    v13 = sub_1000544A0(0x2Eu),
                    !os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)))
              {
LABEL_24:
                v12 = 0;
                goto LABEL_25;
              }
LABEL_26:
              v14 = sub_100054494();
              *(_DWORD *)buf = 136446466;
              v19 = v14;
              v20 = 1024;
              v21 = 0xFFFF;
              _os_log_error_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
              goto LABEL_24;
            }
            v12 = sub_10019AEA4((uint64_t)v9);
            if (!v12)
              goto LABEL_22;
          }
          else
          {
            if (v11 != 6)
            {
              if (!sub_10005549C())
                goto LABEL_24;
              sub_100054530("Unable to recover handle from failed status event - no event context");
              v13 = sub_1000544A0(0x2Eu);
              if (!os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
                goto LABEL_24;
              goto LABEL_26;
            }
            v12 = (uint64_t)sub_10019ACEC(*v9);
          }
LABEL_25:
          *v10 = v12;
LABEL_5:
          ++v8;
          ++v10;
          if (v8 >= a3[4])
            goto LABEL_27;
          break;
        case 's':
          *(_DWORD *)v10 = a1;
          goto LABEL_5;
        default:
          goto LABEL_5;
      }
    }
  }
LABEL_27:
  v15 = *a3;
  if (v15 == 44)
  {
    v16 = 2;
    v17 = 3;
    goto LABEL_32;
  }
  if (v15 == 20 && sub_10019AB28(a4[1]))
  {
    v16 = *(_BYTE *)(a4[1] + 152) & 0x7F;
    v17 = 2;
LABEL_32:
    LODWORD(a4[v17]) = v16;
  }
}

void sub_10019D5A8(int a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9)
{
  NSObject *v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  switch(a1)
  {
    case 1:
      sub_1001870BC(*(unsigned int *)a2);
      return;
    case 2:
    case 34:
      sub_100187174(*a2);
      return;
    case 3:
      sub_100180A54(*(unsigned int *)a2, (char *)a2[1], a2[2], *((unsigned __int8 *)a2 + 24), *((unsigned __int8 *)a2 + 32), a6, a7, a8);
      return;
    case 4:
      sub_100181730(*a2, *((unsigned int *)a2 + 2), *((unsigned __int8 *)a2 + 16), a4, a5, a6, a7, a8);
      return;
    case 5:
      v11 = a2[1];
      if (!v11)
        goto LABEL_75;
      v12 = *(unsigned __int8 *)(v11 + 2);
      if (v12 != 5)
      {
        if (v12 == 4)
          sub_1002172A4(*(unsigned int *)a2, a2[1], *((unsigned int *)a2 + 4), a3, a4);
        else
LABEL_75:
          sub_100181BAC(*(unsigned int *)a2, (unsigned __int16 *)a2[1], *((unsigned int *)a2 + 4));
      }
      return;
    case 6:
      sub_10024F0B4(*(unsigned int *)a2, a2[1]);
      return;
    case 7:
      sub_1001820AC(*(unsigned int *)a2, a2[1], a2[2]);
      return;
    case 8:
      v13 = a2[1];
      if (v13 && *(_BYTE *)(v13 + 2) == 4)
        goto LABEL_70;
      v14 = *(unsigned int *)a2;
      v15 = *((unsigned __int8 *)a2 + 16);
      v16 = a2[1];
      v17 = 255;
      goto LABEL_74;
    case 9:
      sub_10024CC70(*(unsigned int *)a2, a2[1]);
      return;
    case 10:
      sub_10024CD38();
      return;
    case 11:
      sub_100188278(*(unsigned int *)a2, a2[1], a2[2]);
      return;
    case 12:
      v18 = a2[1];
      if (v18 && *(_BYTE *)(v18 + 2) == 4)
        sub_100218040(*(unsigned int *)a2, a2[1], *((unsigned __int8 *)a2 + 16), *((unsigned __int16 *)a2 + 12), *((unsigned __int16 *)a2 + 16));
      else
        sub_100188580(*(unsigned int *)a2, a2[1], *((unsigned __int8 *)a2 + 16), *((unsigned __int16 *)a2 + 12), *((unsigned __int16 *)a2 + 16));
      return;
    case 13:
      off_100998FD8(*(unsigned int *)a2, a2[1], *((unsigned __int8 *)a2 + 16), *((unsigned __int8 *)a2 + 24), *((unsigned int *)a2 + 8), *((unsigned int *)a2 + 10), *((unsigned int *)a2 + 12), *((unsigned int *)a2 + 14));
      return;
    case 14:
    case 15:
    case 19:
      goto LABEL_2;
    case 16:
      sub_10018670C(*(unsigned __int8 *)a2);
      return;
    case 17:
      (*(void (**)(uint64_t))(qword_100998FD0 + 24))(*a2);
      return;
    case 18:
      sub_10018BF6C(*(unsigned int *)a2, a2[1], *((unsigned __int8 *)a2 + 16));
      return;
    case 20:
      sub_100186878(*(unsigned int *)a2, a2[1], *((unsigned __int8 *)a2 + 16), *((unsigned __int16 *)a2 + 12));
      return;
    case 21:
      v19 = *a2;
      a2 = (uint64_t *)a2[1];
      goto LABEL_34;
    case 22:
      sub_10024E6A4(*a2);
      return;
    case 23:
      sub_10024E9C8(*a2);
      return;
    case 24:
      sub_10024EF80(*a2, a2[1], *((unsigned int *)a2 + 4));
      return;
    case 25:
      sub_1001865DC(*a2, *((unsigned __int8 *)a2 + 8));
      return;
    case 26:
      sub_1001821E8(*(unsigned __int8 *)a2);
      return;
    case 27:
      sub_1001869D8(*a2, *((unsigned __int8 *)a2 + 8));
      return;
    case 28:
      sub_100188694(*(unsigned int *)a2, a2[1]);
      return;
    case 29:
      sub_100186AC4(*(unsigned int *)a2, a2[1], *((unsigned __int16 *)a2 + 8));
      return;
    case 30:
      v19 = *a2;
LABEL_34:
      nullsub_90(v19, a2);
      return;
    case 31:
      sub_100186C14(*a2, *((unsigned __int8 *)a2 + 8));
      return;
    case 32:
      sub_100186CA4(*a2, *((unsigned __int8 *)a2 + 8));
      return;
    case 33:
      off_100998FE0(*(unsigned int *)a2, a2[1], *((unsigned __int8 *)a2 + 16), *((unsigned __int8 *)a2 + 24), *((unsigned __int8 *)a2 + 32), *((unsigned int *)a2 + 10), *((unsigned int *)a2 + 12), *((unsigned int *)a2 + 14), *((_DWORD *)a2 + 16));
      return;
    case 35:
      sub_1001883F0(*(unsigned int *)a2, a2[1], *((unsigned __int8 *)a2 + 16), *((unsigned __int8 *)a2 + 24), a2[4]);
      return;
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 47:
    case 55:
    case 58:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 88:
      goto LABEL_6;
    case 44:
      sub_10018F1CC(*(unsigned int *)a2, (char *)a2[1], a2[2], *((unsigned __int8 *)a2 + 24), *((unsigned __int8 *)a2 + 32), *((unsigned __int8 *)a2 + 40), *((unsigned __int16 *)a2 + 24), *((unsigned __int16 *)a2 + 28), *((_DWORD *)a2 + 16));
      return;
    case 45:
      sub_10018EEF4(*(unsigned int *)a2, a2[1], *((unsigned __int8 *)a2 + 16), *((unsigned __int8 *)a2 + 24), *((unsigned __int16 *)a2 + 16), *((unsigned __int16 *)a2 + 20));
      return;
    case 46:
      sub_100186D34(*(unsigned int *)a2, a2[1], *((unsigned __int16 *)a2 + 8), *((unsigned __int16 *)a2 + 12), *((unsigned __int16 *)a2 + 16), *((unsigned __int16 *)a2 + 20));
      return;
    case 48:
      v20 = a2[1];
      if (v20 && *(_BYTE *)(v20 + 2) == 4)
        sub_10022C00C(*(unsigned int *)a2, (_BYTE *)a2[1]);
      else
        sub_10024C748(*(unsigned int *)a2, a2[1]);
      return;
    case 49:
      sub_10024DA24(*a2);
      return;
    case 50:
      sub_10024E0C8(*a2, *((unsigned __int8 *)a2 + 8), *((unsigned __int8 *)a2 + 16), *((unsigned __int8 *)a2 + 24));
      return;
    case 51:
      sub_10024CF38(*a2, *((unsigned int *)a2 + 2));
      return;
    case 52:
      sub_10024D32C(*a2);
      return;
    case 53:
      sub_10024D634(*a2);
      return;
    case 54:
      sub_10024F448(*(unsigned int *)a2, a2[1], a9);
      return;
    case 56:
      nullsub_90(*a2, *((unsigned __int16 *)a2 + 4));
      return;
    case 57:
      sub_1001829B0(*a2);
      return;
    case 59:
      sub_10024D504(*a2, *((unsigned int *)a2 + 2));
      return;
    case 60:
      sub_10024D444(*a2, *((unsigned __int8 *)a2 + 8));
      return;
    case 61:
      sub_100186DFC(*a2, a2[1]);
      return;
    case 71:
      return;
    case 87:
      sub_10024C67C(*a2);
      return;
    case 89:
      v13 = a2[1];
      if (v13 && *(_BYTE *)(v13 + 2) == 4)
      {
LABEL_70:
        sub_10022BE78(*(unsigned int *)a2, v13, *((unsigned __int8 *)a2 + 16));
      }
      else
      {
        v14 = *(unsigned int *)a2;
        v15 = *((unsigned __int8 *)a2 + 16);
        v17 = *((unsigned __int8 *)a2 + 24);
        v16 = a2[1];
LABEL_74:
        sub_10024C7A0(v14, v16, v15, v17);
      }
      return;
    default:
      if (a1 == 254)
      {
        sub_10018654C(*a2, *((unsigned __int8 *)a2 + 8));
      }
      else
      {
LABEL_6:
        if (sub_10005549C())
        {
          sub_100054530("Unknown event type, event id %x", a1);
          v10 = sub_1000544A0(0x2Eu);
          if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
            sub_1006CE7A4();
        }
LABEL_2:
        sub_100253460();
      }
      return;
  }
}

void *sub_10019DCB0(void *result)
{
  off_100984740 = result;
  return result;
}

void *sub_10019DCBC(void *result)
{
  off_100984738 = result;
  return result;
}

void sub_10019DCC8(uint64_t *a1, int a2, int a3)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  int v9;
  NSObject *v10;
  NSObject *v11;
  int v12;
  int v13;
  uint64_t v14;
  __int16 v15;
  unsigned int v16;
  uint64_t v17;
  unsigned __int16 v18;
  unsigned __int16 v19;
  char v20;
  unsigned __int16 v21;
  unsigned __int16 v22;
  NSObject *v23;
  void *v24;
  NSObject *v25;
  NSObject *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint8_t buf[4];
  void *v31;
  __int16 v32;
  int v33;

  v27 = 0;
  v28 = 0;
  v29 = 0;
  if (!a2)
  {
    if (!sub_10005549C())
      return;
    sub_100054530("handle_InquiryResult bad parm length: expected %d, got %d", 1, 0);
    v10 = sub_1000544A0(0x2Eu);
    if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      return;
LABEL_10:
    sub_1006CE7A4();
    return;
  }
  if (*((_BYTE *)a1 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c", 1164, "OI_STATUS _handle_InquiryResult(OI_BYTE_STREAM *, const HCI_EVENT_DESCRIPTOR *, uint8_t, INQ_TYPE, _Bool)");
    goto LABEL_63;
  }
  v4 = *((unsigned __int16 *)a1 + 6);
  if (*((unsigned __int16 *)a1 + 5) <= v4 || *((_BYTE *)a1 + 14) != 1)
LABEL_63:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c");
  v7 = *a1;
  *((_WORD *)a1 + 6) = v4 + 1;
  v8 = *(unsigned __int8 *)(v7 + v4);
  if (a3 == 2)
  {
    if (v8 != 1)
    {
      if (sub_10005549C())
      {
        sub_100054530("handle_InquiryResult misinterpreted spec: expected 1 resp, got %d", v8);
        v26 = sub_1000544A0(0x2Eu);
        if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
          sub_1006CEEC0();
      }
      return;
    }
    v9 = 255;
  }
  else
  {
    v9 = (14 * v8) | 1;
    if (a3 == 1 && 15 * v8 + 1 == a2)
    {
      if (sub_10005549C())
      {
        sub_100054530("handle_InquiryResult misinterpreted spec: expected %d, got %d", (14 * v8) | 1, a2);
        v11 = sub_1000544A0(0x2Eu);
        if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      v12 = 1;
      if (!v8)
        return;
      goto LABEL_20;
    }
  }
  if (v9 != a2)
  {
    if (!sub_10005549C())
      return;
    sub_100054530("handle_InquiryResult bad parm length: expected %d, got %d", v9, a2);
    v25 = sub_1000544A0(0x2Eu);
    if (!os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
      return;
    goto LABEL_10;
  }
  v12 = 0;
  if (!v8)
    return;
LABEL_20:
  if (a3)
    v13 = v12;
  else
    v13 = 1;
  do
  {
    if (*((_BYTE *)a1 + 15))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c", 1199, "OI_STATUS _handle_InquiryResult(OI_BYTE_STREAM *, const HCI_EVENT_DESCRIPTOR *, uint8_t, INQ_TYPE, _Bool)");
LABEL_54:
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c");
    }
    v14 = *((unsigned __int16 *)a1 + 6);
    if (*((unsigned __int16 *)a1 + 5) - (int)v14 <= 5 || *((_BYTE *)a1 + 14) != 1)
      goto LABEL_54;
    sub_10004C878((uint64_t)&v27, *a1 + v14, 6uLL);
    v15 = *((_WORD *)a1 + 6);
    *((_WORD *)a1 + 6) = v15 + 6;
    if (*((_BYTE *)a1 + 15))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c", 1200, "OI_STATUS _handle_InquiryResult(OI_BYTE_STREAM *, const HCI_EVENT_DESCRIPTOR *, uint8_t, INQ_TYPE, _Bool)");
LABEL_56:
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c");
    }
    v16 = *((unsigned __int16 *)a1 + 5);
    if (v16 <= (unsigned __int16)(v15 + 6) || *((_BYTE *)a1 + 14) != 1)
      goto LABEL_56;
    v17 = *a1;
    *((_WORD *)a1 + 6) = v15 + 7;
    BYTE6(v27) = *(_BYTE *)(v17 + (unsigned __int16)(v15 + 6));
    if (v16 <= (unsigned __int16)(v15 + 7))
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c");
    v18 = v15 + 8;
    *((_WORD *)a1 + 6) = v15 + 8;
    HIBYTE(v27) = *(_BYTE *)(v17 + (unsigned __int16)(v15 + 7));
    if (v13)
    {
      if (v16 <= v18)
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c");
      v19 = v15 + 9;
      *((_WORD *)a1 + 6) = v19;
      v20 = *(_BYTE *)(v17 + v18);
    }
    else
    {
      v20 = 0;
      v19 = v15 + 8;
    }
    BYTE4(v28) = v20;
    if ((int)(v16 - v19) <= 2)
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c");
    LODWORD(v28) = *(unsigned __int16 *)(v17 + v19) | (*(unsigned __int8 *)(v17 + v19 + 2) << 16);
    *((_WORD *)a1 + 6) = v19 + 3;
    if ((int)(v16 - (unsigned __int16)(v19 + 3)) < 2)
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c");
    HIWORD(v28) = *(_WORD *)(v17 + (unsigned __int16)(v19 + 3));
    v21 = v19 + 5;
    *((_WORD *)a1 + 6) = v19 + 5;
    v29 = 0;
    BYTE5(v28) = 0;
    if (a3)
    {
      if (v16 <= v21)
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c");
      v22 = v19 + 6;
      *((_WORD *)a1 + 6) = v22;
      BYTE5(v28) = *(_BYTE *)(v17 + v21);
      if (a3 == 2)
      {
        if (v16 - 240 > 0x11)
        {
          if (sub_10005549C())
          {
            sub_100054530("Extended Inquiry Result bad parm length: maximum expected %d, got %d", 257, v16);
            v23 = sub_1000544A0(0x2Eu);
            if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
            {
              v24 = sub_100054494();
              *(_DWORD *)buf = 136446466;
              v31 = v24;
              v32 = 1024;
              v33 = 0xFFFF;
              _os_log_error_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
            }
          }
        }
        else
        {
          v29 = v17 + v22;
        }
      }
    }
    sub_100187174((uint64_t)&v27);
    --v8;
  }
  while (v8);
}

uint64_t sub_10019E240(uint64_t a1, uint64_t a2, uint64_t *a3, int a4, _WORD *a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v11;
  char v12;
  void *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  __int16 v23;
  int v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  NSObject *v37;

  if (!*(_BYTE *)(a2 + 4))
    return 0;
  v11 = 0;
  v12 = 0;
  v13 = &unk_10073A7FC;
  while (2)
  {
    if (*((_BYTE *)a3 + 15))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c", 358, "OI_STATUS _genericEventParser(u_hciParams *, const HCI_EVENT_DESCRIPTOR *, OI_BYTE_STREAM *, uint8_t, OI_HCI_LM_HANDLE *, OI_BD_ADDR *)");
      v14 = 0;
    }
    else
    {
      v14 = *((unsigned __int16 *)a3 + 5) - *((unsigned __int16 *)a3 + 6);
    }
    switch(*(_BYTE *)(*(_QWORD *)(a2 + 8) + v11))
    {
      case 'a':
        if (v14 < 6)
        {
          v16 = v7;
          v17 = v13;
          v18 = v6;
          if ((v12 & 1) != 0)
            v20 = 0;
          else
            v20 = 608;
          v19 = a6;
        }
        else
        {
          if (*((_BYTE *)a3 + 15))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c", 403, "OI_STATUS _genericEventParser(u_hciParams *, const HCI_EVENT_DESCRIPTOR *, OI_BYTE_STREAM *, uint8_t, OI_HCI_LM_HANDLE *, OI_BD_ADDR *)");
LABEL_101:
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c");
          }
          v15 = *((unsigned __int16 *)a3 + 6);
          if (*((unsigned __int16 *)a3 + 5) - (int)v15 <= 5 || *((_BYTE *)a3 + 14) != 1)
            goto LABEL_101;
          v16 = v7;
          v17 = v13;
          v18 = v6;
          v19 = a6;
          sub_10004C878(a6, *a3 + v15, 6uLL);
          v20 = 0;
          *((_WORD *)a3 + 6) += 6;
        }
        *(_QWORD *)a1 = v19;
        v6 = v18;
        v13 = v17;
        v7 = v16;
        goto LABEL_80;
      case 'b':
      case 'd':
      case 'e':
      case 'g':
      case 'i':
      case 'j':
      case 'l':
      case 'm':
      case 'o':
      case 'p':
      case 'q':
      case 'r':
LABEL_93:
        sub_100253460();
        v20 = 620;
        goto LABEL_88;
      case 'c':
        if (v14 < 0xA)
          goto LABEL_72;
        *(_QWORD *)a1 = *a3 + *((unsigned __int16 *)a3 + 6);
        if (*((_BYTE *)a3 + 15))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c", 480, "OI_STATUS _genericEventParser(u_hciParams *, const HCI_EVENT_DESCRIPTOR *, OI_BYTE_STREAM *, uint8_t, OI_HCI_LM_HANDLE *, OI_BD_ADDR *)");
LABEL_103:
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c");
        }
        v22 = *((unsigned __int16 *)a3 + 6);
        if (*((unsigned __int16 *)a3 + 5) - v22 <= 9)
          goto LABEL_103;
        v20 = 0;
        v23 = v22 + 10;
        goto LABEL_71;
      case 'f':
        if (v14 < 8)
          goto LABEL_72;
        *(_QWORD *)a1 = *a3 + *((unsigned __int16 *)a3 + 6);
        if (*((_BYTE *)a3 + 15))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c", 465, "OI_STATUS _genericEventParser(u_hciParams *, const HCI_EVENT_DESCRIPTOR *, OI_BYTE_STREAM *, uint8_t, OI_HCI_LM_HANDLE *, OI_BD_ADDR *)");
LABEL_105:
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c");
        }
        v24 = *((unsigned __int16 *)a3 + 6);
        if (*((unsigned __int16 *)a3 + 5) - v24 <= 7)
          goto LABEL_105;
        goto LABEL_70;
      case 'h':
        if (v14 < 2)
          goto LABEL_64;
        if (*((_BYTE *)a3 + 14) != 1)
          goto LABEL_108;
        if (*((_BYTE *)a3 + 15))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c", 414, "OI_STATUS _genericEventParser(u_hciParams *, const HCI_EVENT_DESCRIPTOR *, OI_BYTE_STREAM *, uint8_t, OI_HCI_LM_HANDLE *, OI_BD_ADDR *)");
LABEL_108:
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c");
        }
        v25 = *((unsigned __int16 *)a3 + 6);
        if (*((unsigned __int16 *)a3 + 5) - (int)v25 <= 1)
          goto LABEL_108;
        *a5 = *(_WORD *)(*a3 + v25);
        *((_WORD *)a3 + 6) += 2;
        v20 = 0;
        *(_QWORD *)a1 = sub_10019ACEC((unsigned __int16)*a5);
        goto LABEL_80;
      case 'k':
        if (v14 < 0x10)
          goto LABEL_72;
        *(_QWORD *)a1 = *a3 + *((unsigned __int16 *)a3 + 6);
        if (*((_BYTE *)a3 + 15))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c", 510, "OI_STATUS _genericEventParser(u_hciParams *, const HCI_EVENT_DESCRIPTOR *, OI_BYTE_STREAM *, uint8_t, OI_HCI_LM_HANDLE *, OI_BD_ADDR *)");
LABEL_110:
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c");
        }
        v26 = *((unsigned __int16 *)a3 + 6);
        if (*((unsigned __int16 *)a3 + 5) - v26 <= 15)
          goto LABEL_110;
        v20 = 0;
        v23 = v26 + 16;
        goto LABEL_71;
      case 'n':
        if (v14 >= 0xF8)
        {
          *(_QWORD *)a1 = *a3 + *((unsigned __int16 *)a3 + 6);
          if (*((_BYTE *)a3 + 15))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c", 447, "OI_STATUS _genericEventParser(u_hciParams *, const HCI_EVENT_DESCRIPTOR *, OI_BYTE_STREAM *, uint8_t, OI_HCI_LM_HANDLE *, OI_BD_ADDR *)");
LABEL_112:
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c");
          }
          v27 = *((unsigned __int16 *)a3 + 6);
          if (*((unsigned __int16 *)a3 + 5) - v27 <= 247)
            goto LABEL_112;
          v20 = 0;
          *((_WORD *)a3 + 6) = v27 + 248;
          *(_BYTE *)(*(_QWORD *)a1 + 247) = 0;
          goto LABEL_80;
        }
LABEL_72:
        if ((v12 & 1) == 0)
          goto LABEL_86;
        v20 = 0;
        *(_QWORD *)a1 = v13;
        goto LABEL_74;
      case 's':
        if (v14)
        {
          if (*((_BYTE *)a3 + 15))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c", 426, "OI_STATUS _genericEventParser(u_hciParams *, const HCI_EVENT_DESCRIPTOR *, OI_BYTE_STREAM *, uint8_t, OI_HCI_LM_HANDLE *, OI_BD_ADDR *)");
LABEL_95:
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c");
          }
          v28 = *((unsigned __int16 *)a3 + 6);
          if (*((unsigned __int16 *)a3 + 5) <= v28 || *((_BYTE *)a3 + 14) != 1)
            goto LABEL_95;
          v29 = *a3;
          *((_WORD *)a3 + 6) = v28 + 1;
          v30 = sub_100049F2C(*(unsigned __int8 *)(v29 + v28));
          v20 = 0;
          *(_DWORD *)a1 = v30;
          v12 |= v30 != 0;
LABEL_80:
          v36 = (_DWORD)v20 == 0;
          if ((_DWORD)v20)
            goto LABEL_87;
          ++v11;
          a1 += 8;
          if (v11 >= *(unsigned __int8 *)(a2 + 4))
            goto LABEL_87;
          continue;
        }
        if ((v12 & 1) != 0)
        {
          v20 = 0;
          *(_DWORD *)a1 = 638;
LABEL_74:
          v12 = 1;
          goto LABEL_80;
        }
LABEL_86:
        v36 = 0;
        v20 = 608;
LABEL_87:
        if (!v36)
        {
LABEL_88:
          if (*(unsigned __int16 *)(a2 + 2) != a4)
          {
            if (sub_10005549C())
            {
              sub_100054530("missing parameters, expected %d, got %d", *(unsigned __int16 *)(a2 + 2), a4);
              v37 = sub_1000544A0(0x2Eu);
              if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR))
                sub_1006CE7A4();
            }
          }
        }
        return v20;
      case 't':
        if (!v14)
        {
LABEL_64:
          if ((v12 & 1) != 0)
            v20 = 0;
          else
            v20 = 608;
          goto LABEL_80;
        }
        if (*((_BYTE *)a3 + 15))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c", 523, "OI_STATUS _genericEventParser(u_hciParams *, const HCI_EVENT_DESCRIPTOR *, OI_BYTE_STREAM *, uint8_t, OI_HCI_LM_HANDLE *, OI_BD_ADDR *)");
LABEL_97:
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c");
        }
        v21 = *((unsigned __int16 *)a3 + 6);
        if (*((unsigned __int16 *)a3 + 5) <= v21 || *((_BYTE *)a3 + 14) != 1)
          goto LABEL_97;
        goto LABEL_48;
      default:
        switch(*(_BYTE *)(*(_QWORD *)(a2 + 8) + v11))
        {
          case '1':
            if (!v14)
              goto LABEL_64;
            if (*((_BYTE *)a3 + 15))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c", 364, "OI_STATUS _genericEventParser(u_hciParams *, const HCI_EVENT_DESCRIPTOR *, OI_BYTE_STREAM *, uint8_t, OI_HCI_LM_HANDLE *, OI_BD_ADDR *)");
LABEL_99:
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c");
            }
            v21 = *((unsigned __int16 *)a3 + 6);
            if (*((unsigned __int16 *)a3 + 5) <= v21 || *((_BYTE *)a3 + 14) != 1)
              goto LABEL_99;
LABEL_48:
            v20 = 0;
            v31 = *a3;
            *((_WORD *)a3 + 6) = v21 + 1;
            *(_DWORD *)a1 = *(unsigned __int8 *)(v31 + v21);
            goto LABEL_80;
          case '2':
            if (v14 < 2)
              goto LABEL_64;
            if (*((_BYTE *)a3 + 14) != 1)
              goto LABEL_115;
            if (*((_BYTE *)a3 + 15))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c", 374, "OI_STATUS _genericEventParser(u_hciParams *, const HCI_EVENT_DESCRIPTOR *, OI_BYTE_STREAM *, uint8_t, OI_HCI_LM_HANDLE *, OI_BD_ADDR *)");
LABEL_115:
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c");
            }
            v32 = *((unsigned __int16 *)a3 + 6);
            if (*((unsigned __int16 *)a3 + 5) - (int)v32 <= 1)
              goto LABEL_115;
            v20 = 0;
            v33 = *(unsigned __int16 *)(*a3 + v32);
            *((_WORD *)a3 + 6) = v32 + 2;
            *(_DWORD *)a1 = v33;
            goto LABEL_80;
          case '3':
            if (v14 < 3)
              goto LABEL_64;
            if (*((_BYTE *)a3 + 15))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c", 384, "OI_STATUS _genericEventParser(u_hciParams *, const HCI_EVENT_DESCRIPTOR *, OI_BYTE_STREAM *, uint8_t, OI_HCI_LM_HANDLE *, OI_BD_ADDR *)");
LABEL_117:
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c");
            }
            v34 = *((unsigned __int16 *)a3 + 6);
            if (*((unsigned __int16 *)a3 + 5) - (int)v34 <= 2 || *((_BYTE *)a3 + 14) != 1)
              goto LABEL_117;
            v20 = 0;
            *(_DWORD *)a1 = *(unsigned __int16 *)(*a3 + v34) | (*(unsigned __int8 *)(*a3 + v34 + 2) << 16);
            v23 = *((_WORD *)a3 + 6) + 3;
            goto LABEL_71;
          case '4':
            if (v14 < 4)
              goto LABEL_64;
            if (*((_BYTE *)a3 + 15))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c", 393, "OI_STATUS _genericEventParser(u_hciParams *, const HCI_EVENT_DESCRIPTOR *, OI_BYTE_STREAM *, uint8_t, OI_HCI_LM_HANDLE *, OI_BD_ADDR *)");
LABEL_119:
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c");
            }
            v35 = *((unsigned __int16 *)a3 + 6);
            if (*((unsigned __int16 *)a3 + 5) - (int)v35 <= 3 || *((_BYTE *)a3 + 14) != 1)
              goto LABEL_119;
            v20 = 0;
            *(_DWORD *)a1 = *(_DWORD *)(*a3 + v35);
            v23 = *((_WORD *)a3 + 6) + 4;
LABEL_71:
            *((_WORD *)a3 + 6) = v23;
            break;
          case '8':
            if (v14 < 8)
              goto LABEL_72;
            *(_QWORD *)a1 = *a3 + *((unsigned __int16 *)a3 + 6);
            if (*((_BYTE *)a3 + 15))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c", 495, "OI_STATUS _genericEventParser(u_hciParams *, const HCI_EVENT_DESCRIPTOR *, OI_BYTE_STREAM *, uint8_t, OI_HCI_LM_HANDLE *, OI_BD_ADDR *)");
LABEL_121:
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c");
            }
            v24 = *((unsigned __int16 *)a3 + 6);
            if (*((unsigned __int16 *)a3 + 5) - v24 <= 7)
              goto LABEL_121;
LABEL_70:
            v20 = 0;
            v23 = v24 + 8;
            goto LABEL_71;
          default:
            goto LABEL_93;
        }
        goto LABEL_80;
    }
  }
}

void sub_10019EB18(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  int v4;

  if (a1[16] != 3)
  {
    v4 = 0;
    if (sub_10004AF24(*a1, &v4))
    {
      v1 = sub_10019F090(v4);
      if ((_DWORD)v1)
      {
        v2 = v1;
        if (sub_10005549C())
        {
          sub_100054530("%! (%d)", v2, 0);
          v3 = sub_1000544A0(0x2Eu);
          if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
            sub_1006CE7A4();
        }
      }
    }
  }
}

uint64_t sub_10019EBAC(unsigned __int8 *a1, int a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t i;
  int v10;
  NSObject *v12;
  NSObject *v14;
  int v15;

  if (a1[16] == 3)
    return 0;
  v15 = 0;
  for (i = sub_10004AF24(*a1, &v15); i; i = sub_10019F028(*a1, &v15))
  {
    v10 = a1[17];
    switch(v10)
    {
      case 6:
        if (*(unsigned __int16 *)(i + 16) == a2)
          goto LABEL_21;
        break;
      case 7:
        if (*(_DWORD *)a3 == *(_DWORD *)(i + 16) && *(unsigned __int16 *)(a3 + 4) == *(unsigned __int16 *)(i + 20))
        {
LABEL_21:
          if (a4)
          {
            v4 = sub_10019F090(v15);
            if ((_DWORD)v4)
            {
              if (sub_10005549C())
              {
                sub_100054530("%! (%d)", v4, 0);
                v14 = sub_1000544A0(0x2Eu);
                if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
                  sub_1006CE7A4();
              }
            }
            return v4;
          }
          return 0;
        }
        break;
      case 5:
        goto LABEL_21;
    }
  }
  if (a1[16] == 2)
  {
    if (sub_10005549C())
    {
      sub_100054530("%! (%d)", 619, *a1);
      v12 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
  return 120;
}

void sub_10019ED20(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_fault_impl(a1, v9, OS_LOG_TYPE_FAULT, a4, &a9, 0xCu);
}

uint64_t sub_10019ED34()
{
  word_100984750 = 0;
  dword_100984754 = 0;
  byte_100984758 = 0;
  qword_100984760 = (uint64_t)sub_100114588(32 * *(unsigned __int8 *)(qword_100998FC0 + 2));
  if (qword_100984760)
    return 0;
  else
    return 106;
}

void sub_10019ED88(unsigned __int16 *a1)
{
  int v2;
  unint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v9;
  __int128 v10;
  NSObject *v11;
  void *v13;
  NSObject *v14;
  __int128 v15;
  __int128 v16;
  uint8_t buf[4];
  void *v18;
  __int16 v19;
  int v20;

  if (sub_10019AB28((uint64_t)a1) || sub_10019AC00((uint64_t)a1))
  {
    v2 = 1;
  }
  else
  {
    if (!sub_10019ABD0((uint64_t)a1))
    {
      if (sub_10005549C())
      {
        sub_100054530("OI_HCIExpEvQ_Flush: %x", (_DWORD)a1);
        v14 = sub_1000544A0(0x2Eu);
        if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
          sub_1006D2F2C();
      }
      return;
    }
    v2 = 0;
  }
  v3 = (unsigned __int16)word_100984750;
  if (word_100984750)
  {
    v4 = 32 * (unsigned __int16)word_100984750;
    do
    {
      v5 = sub_100052DE8(*(unsigned __int16 *)(qword_100984760 + v4 - 26))[19];
      if (v5 == 6)
      {
        v7 = qword_100984760;
        if (*(unsigned __int16 *)(qword_100984760 + v4 - 16) == *a1)
          goto LABEL_18;
      }
      else if (v5 == 7 && v2 != 0)
      {
        v7 = qword_100984760;
        if (*((_DWORD *)a1 + 12) == *(_DWORD *)(qword_100984760 + v4 - 16)
          && a1[26] == *(unsigned __int16 *)(qword_100984760 + v4 - 12))
        {
LABEL_18:
          v15 = 0u;
          v16 = 0u;
          v9 = v7 + v4;
          v10 = *(_OWORD *)(v9 - 16);
          v15 = *(_OWORD *)(v9 - 32);
          v16 = v10;
          if (sub_10005549C())
          {
            sub_100054530("Handle disconnected: %d, expected %2x", *a1, BYTE8(v15));
            v11 = sub_1000544A0(0x2Eu);
            if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
            {
              v13 = sub_100054494();
              *(_DWORD *)buf = 136446466;
              v18 = v13;
              v19 = 1024;
              v20 = 634;
              _os_log_error_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
            }
          }
          sub_100049DF8(v3 - 1);
          if (BYTE8(v15) > 0x2Cu
            || ((1 << SBYTE8(v15)) & 0x100000100028) == 0
            && (BYTE8(v15) != 15 || WORD3(v15) > 0x2Au || ((1 << SBYTE6(v15)) & 0x60030000370) == 0))
          {
            sub_10019CCBC(634, &v15);
          }
        }
      }
      v4 -= 32;
    }
    while (v3-- > 1);
  }
}

uint64_t sub_10019F010(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  return sub_100049B1C(15, a1, a2, a3);
}

uint64_t sub_10019F028(int a1, int *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t i;

  v2 = *a2;
  if ((int)v2 + 1 >= (unsigned __int16)word_100984750)
    return 0;
  v3 = v2 + 1;
  for (i = qword_100984760 + 32 * v2 + 32;
        *(unsigned __int8 *)(i + 8) != a1 && *(unsigned __int8 *)(i + 9) != a1;
        i += 32)
  {
    if (++v3 >= (unsigned __int16)word_100984750)
      return 0;
  }
  *a2 = v3;
  return i;
}

uint64_t sub_10019F090(int a1)
{
  uint64_t v1;

  v1 = sub_100049DF8(a1);
  sub_100049C28();
  return v1;
}

void sub_10019F0B8()
{
  __int16 i;

  for (i = word_100984750; word_100984750; i = word_100984750)
  {
    word_100984750 = i - 1;
    sub_10019CCBC(129, qword_100984760 + 32 * (unsigned __int16)(i - 1));
  }
  byte_100984758 = 0;
}

void *sub_10019F10C(void *result)
{
  off_100984768 = result;
  return result;
}

void sub_10019F118(uint64_t a1)
{
  uint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 8);
  sub_10019CCBC(621, v1);
  v2 = *(unsigned __int8 *)(v1 + 8);
  if (v2 == 15)
  {
    if (byte_100999059)
      return;
LABEL_9:
    byte_100999059 = 1;
    sub_10004AE90((uint64_t)sub_10004AE60, 0, 0);
    return;
  }
  if (v2 == 14 && byte_100999059 == 0)
    goto LABEL_9;
}

uint64_t sub_10019F1A0()
{
  dword_100984754 = 0;
  return sub_100049C28();
}

void sub_10019F1AC(char a1, __int16 a2, __int16 a3, uint64_t a4)
{
  NSObject *v4;

  if (byte_1009990C8)
  {
    if (sub_10005549C())
    {
      sub_100054530("Failed to add external transport - too many alreay registered.");
      v4 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
  else
  {
    word_1009990B8 = a2;
    word_1009990BA = a2;
    word_1009990BC = a3;
    byte_1009990BE = 1;
    byte_1009990BF = a1;
    qword_1009990C0 = a4;
    byte_1009990D0 = 1;
    byte_1009990C8 = 1;
  }
}

void sub_10019F240()
{
  BOOL v0;
  char v1;

  WORD3(xmmword_100999070) = 1;
  if (BYTE14(xmmword_100999070))
    v0 = WORD5(xmmword_100999070) > 2u;
  else
    v0 = 0;
  v1 = v0;
  byte_1009990D1 = v1;
}

void sub_10019F270()
{
  BOOL v0;
  char v1;

  WORD3(xmmword_100999070) = 0;
  if (BYTE14(xmmword_100999070))
    v0 = WORD5(xmmword_100999070) == 0;
  else
    v0 = 1;
  v1 = !v0;
  byte_1009990D1 = v1;
}

BOOL sub_10019F29C()
{
  return !WORD3(xmmword_100999070) || WORD5(xmmword_100999070) > 1u;
}

uint64_t sub_10019F2BC(uint64_t result)
{
  BYTE1(xmmword_100999070) = result;
  return result;
}

void sub_10019F2C8(uint64_t a1)
{
  NSObject *v2;
  NSObject *v3;
  _BOOL4 v4;
  NSObject *v5;

  if (dword_100998FC8 == 2)
  {
    if (BYTE14(xmmword_100999070[0])
      && (sub_100253460(), BYTE14(xmmword_100999070[0]))
      && sub_10005549C()
      && (sub_100054530("%! (%d)", 614, 0),
          v2 = sub_1000544A0(0x2Eu),
          os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)))
    {
      sub_1006D2FA8();
      if ((_DWORD)a1)
        goto LABEL_7;
    }
    else if ((_DWORD)a1)
    {
LABEL_7:
      if (sub_10005549C())
      {
        sub_100054530("ACL transmit error (%!)", a1);
        v3 = sub_1000544A0(0x2Eu);
        if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
          sub_1006D17C4();
      }
    }
    BYTE14(xmmword_100999070[0]) = 1;
    v4 = WORD5(xmmword_100999070[0]) != 0;
    if (WORD3(xmmword_100999070[0]))
      v4 = WORD5(xmmword_100999070[0]) > 2u;
    byte_1009990D1 = v4;
    if (v4)
      (*(void (**)(_QWORD, uint64_t))(qword_100998FD0 + 16))(0, 1);
    return;
  }
  if (sub_10005549C())
  {
    sub_100054530("HCI not initialized, ignoring AclPacketSent event");
    v5 = sub_1000544A0(0x2Eu);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_1006D3010();
  }
}

void sub_10019F44C(uint64_t a1)
{
  NSObject *v2;
  NSObject *v3;
  NSObject *v4;

  if (dword_100998FC8 == 2)
  {
    if (byte_10099908E
      && (sub_100253460(), byte_10099908E)
      && sub_10005549C()
      && (sub_100054530("%! (%d)", 614, 0),
          v2 = sub_1000544A0(0x2Eu),
          os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)))
    {
      sub_1006D2FA8();
      if ((_DWORD)a1)
      {
LABEL_7:
        if (sub_10005549C())
        {
          sub_100054530("SCO transmit error (%!)", a1);
          v3 = sub_1000544A0(0x2Eu);
          if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
            sub_1006D17C4();
        }
      }
    }
    else if ((_DWORD)a1)
    {
      goto LABEL_7;
    }
    byte_10099908E = 1;
    sub_10018ED80();
    return;
  }
  if (sub_10005549C())
  {
    sub_100054530("HCI not initialized, ignoring ScoPacketSent event");
    v4 = sub_1000544A0(0x2Eu);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_1006D3010();
  }
}

void sub_10019F58C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  BOOL v5;
  NSObject *v6;
  int v9;
  unsigned int v11;
  int v12;
  uint64_t v13;
  __int128 *v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  NSObject *v25;
  NSObject *v26;
  NSObject *v27;
  int *v28;
  NSObject *v29;

  if (DWORD2(xmmword_1009991F8))
    v5 = dword_100998FC8 == 2;
  else
    v5 = 0;
  if (!v5)
  {
    if (sub_10005549C())
    {
      sub_100054530("OI_HCIIfc_AclPacketReceived, HCI not initialized - discarding data");
      v6 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      {
LABEL_7:
        sub_1006D3078();
        return;
      }
    }
    return;
  }
  if (!(_DWORD)a2)
    return;
  v9 = a4;
  v11 = a1;
  if (off_100999028)
  {
    off_100999028(a4, a1, a2, a3, a5);
    return;
  }
  v12 = a1 & 0xFFF;
  if ((a1 & 0x3000) == 0x2000)
  {
    v13 = 2;
  }
  else if ((a1 & 0x3000) == 0x1000)
  {
    v13 = 1;
  }
  else if ((a1 & 0x3000) != 0)
  {
    v13 = 3;
  }
  else if ((byte_100998F6A & 0x40) != 0)
  {
    v13 = 0;
  }
  else
  {
    v13 = 3;
  }
  v14 = sub_10019ACEC(a1 & 0xFFF);
  if (sub_1001F4E24() <= 0x12 && !v14)
  {
    sub_100253460();
LABEL_33:
    if (sub_10005549C())
    {
      sub_100054530("connection handle %p is invalid, ignoring ACL packet.", 0);
      v25 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return;
  }
  if (!v14)
    goto LABEL_33;
  v15 = (v11 >> 12) & 4;
  v16 = *((unsigned __int8 *)v14 + 2);
  if (v16 == 1)
  {
    sub_100253460();
    v16 = *((unsigned __int8 *)v14 + 2);
  }
  if (v16 != 8)
  {
    if (v16 == 4)
    {
      ++HIWORD(dword_100984776);
      LOWORD(dword_100984776) = v12;
      if (*((_BYTE *)v14 + 124) == 6 && (v9 != 6 || *a5 >= *((_QWORD *)v14 + 34)))
      {
        if (sub_10005549C())
        {
          sub_100054530("Received ACL data for disconnecting handle %d, discarding packet", v12);
          v29 = sub_1000544A0(0x2Eu);
          if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
            sub_1006D3078();
        }
      }
      else
      {
        (*(void (**)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t, BOOL, _QWORD *))(qword_100998FD0 + 8))(v14, v13, v15, a3, a2, v9 == 6, a5);
      }
      if (!*(_BYTE *)(qword_100998FC0 + 9))
        return;
      v28 = &dword_100984776;
    }
    else
    {
      if (v16)
      {
        if (sub_10005549C())
        {
          sub_100054530("Received ACL data for unknown handle %d, discarding packet", v12);
          v27 = sub_1000544A0(0x2Eu);
          if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
            sub_1006D30E0();
        }
        return;
      }
      ++HIWORD(dword_100984770);
      LOWORD(dword_100984770) = v12;
      if (*((_BYTE *)v14 + 54) == 6)
      {
        if (sub_10005549C())
        {
          sub_100054530("Received ACL data for disconnecting handle %d, discarding packet", v12);
          v24 = sub_1000544A0(0x2Eu);
          if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
            sub_1006D3078();
        }
      }
      else
      {
        (*(void (**)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD *))(qword_100998FD0 + 8))(v14, v13, v15, a3, a2, 0, a5);
      }
      if (!*(_BYTE *)(qword_100998FC0 + 7))
        return;
      v28 = &dword_100984770;
    }
    sub_10019F9D4((unsigned __int16 *)v28, v17, v18, v19, v20, v21, v22, v23);
    return;
  }
  if (*((_BYTE *)v14 + 60) == 6)
  {
    if (sub_10005549C())
    {
      sub_100054530("Received Other data for disconnecting handle %d, discarding packet", v12);
      v26 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
        goto LABEL_7;
    }
  }
  else
  {
    (*(void (**)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD *))(qword_100998FD0 + 8))(v14, v13, v15, a3, a2, 0, a5);
  }
}

void sub_10019F9D4(unsigned __int16 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;

  if (!*((_BYTE *)a1 + 4) && a1[1])
  {
    v12 = a1[1];
    v9 = sub_10004C9BC(95, 0, a3, a4, a5, a6, a7, a8, *a1);
    if ((_DWORD)v9)
    {
      v10 = v9;
      if (sub_10005549C())
      {
        sub_100054530("OI_HCICMD_HostNumberOfCompletedPackets failed: %!", v10, v12);
        v11 = sub_1000544A0(0x2Eu);
        if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
          sub_1006D3150();
      }
    }
    else
    {
      a1[1] = 0;
    }
  }
}

uint64_t sub_10019FA70(uint64_t a1)
{
  int v2;
  __int128 *v3;
  int v4;
  uint64_t result;
  uint64_t v6;
  NSObject *v7;
  NSObject *v8;

  v2 = a1 & 0xFFF;
  v3 = sub_10019ACEC(v2);
  if (v3)
  {
    v4 = (int)v3;
    result = *((unsigned __int8 *)v3 + 2);
    if (!(_DWORD)result)
      return result;
    if ((_DWORD)result == 4)
    {
      if ((~(_DWORD)a1 & 0x3000) != 0)
        return 1;
      else
        return 2;
    }
    if (!sub_10005549C())
      return 4;
    sub_100054530("lmHandle 0x%04X found as connectionHandle 0x%08X of non ACL/LE kind????\n", v2, v4);
    v7 = sub_1000544A0(0x2Eu);
    if (!os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      return 4;
LABEL_18:
    sub_1006D3078();
    return 4;
  }
  if (!off_100999030)
  {
    if (!sub_10005549C())
      return 4;
    sub_100054530("No stack handle found for lmHandle 0x%04X, falling back to KIND_UNKNOWN\n", v2);
    v8 = sub_1000544A0(0x2Eu);
    if (!os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      return 4;
    goto LABEL_18;
  }
  result = off_100999030(a1);
  if ((~(_DWORD)a1 & 0x3000) != 0)
    v6 = 1;
  else
    v6 = 2;
  if ((_DWORD)result == 1)
    return v6;
  return result;
}

void sub_10019FB98(unsigned __int16 *a1, unsigned int a2, uint64_t a3, uint64_t a4)
{
  NSObject *v5;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  NSObject *v20;
  char __str[16];
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  int v27;

  if (a2)
  {
    if (a2 > 3)
    {
      if (!a1)
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciflow.c");
      v9 = *a1;
      v10 = a1[1];
      if (*(_BYTE *)(a4 + 8))
      {
        v27 = 0;
        v25 = 0u;
        v26 = 0u;
        v23 = 0u;
        v24 = 0u;
        v11 = "HCI_ACL";
        if ((_DWORD)a3 == 6)
          v11 = "HCI_ACL_TS";
        *(_OWORD *)__str = 0uLL;
        v22 = 0uLL;
        snprintf(__str, 0x64uLL, "BT Controller %s wakeupCause (handle=0x%04X dataLen=%d)", v11, v9, v10);
        sub_100253320((uint64_t)"OI_HCIFlow_AclPacketReceived: %s", v12, v13, v14, v15, v16, v17, v18, (uint64_t)__str);
        sub_10011D280(__str);
      }
      v19 = a2 - 4;
      if (v19 == (_DWORD)v10)
      {
        sub_10019F58C(v9, v10, (uint64_t)(a1 + 2), a3, (_QWORD *)a4);
        qword_100984788 = sub_100113398();
        if (!dword_100984790)
        {
          sub_100113F1C();
          sub_10004A9EC((uint64_t)sub_1001A27AC, 0, 2, &dword_100984790);
        }
        sub_100049AD8();
      }
      else if (sub_10005549C())
      {
        sub_100054530("Potentially malicious packet received (actually %d bytes, but claims it is %d bytes), ignoring packet", v19, v10);
        v20 = sub_1000544A0(0x2Eu);
        if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
    }
    else if (sub_10005549C())
    {
      sub_100054530("Short ACL packet received (%d bytes), ignoring packet", a2);
      v5 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        sub_1006D31C0();
    }
  }
}

void sub_10019FD94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v4;
  NSObject *v5;
  unsigned int v9;
  __int128 *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  NSObject *v20;
  uint64_t v21;

  if (DWORD2(xmmword_1009991F8))
    v4 = dword_100998FC8 == 2;
  else
    v4 = 0;
  if (!v4)
  {
    if (sub_10005549C())
    {
      sub_100054530("OI_HCIIfc_ScoPacketReceived, HCI not initialized - discarding data, status %!", 408);
      v5 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        sub_1006CEEC0();
    }
    return;
  }
  v9 = a1;
  if (off_100999028)
  {
    off_100999028(3, a1, a2, a3, a4);
    return;
  }
  if (*(_BYTE *)(qword_100998FC0 + 8))
  {
    ++HIWORD(dword_10098477C);
    LOWORD(dword_10098477C) = a1 & 0xFFF;
  }
  v10 = sub_10019ACEC(a1 & 0xFFF);
  if (v10 && ((v11 = (uint64_t)v10, *((_BYTE *)v10 + 2) == 1) || (sub_100253460(), *(_BYTE *)(v11 + 2) == 1)))
  {
    if (!*(_BYTE *)(v11 + 56))
    {
      v21 = *(_QWORD *)(v11 + 48);
      if (v21)
      {
        if (*(_BYTE *)(v21 + 54) != 6)
        {
          sub_10018F01C(v11, a3, a2, (v9 >> 12) & 3, a4);
          goto LABEL_22;
        }
      }
    }
    if (sub_10005549C())
    {
      sub_100054530("Received SCO data for disconnecting handle %d, discarding packet. Status %!", v9 & 0xFFF, 408);
      v19 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
LABEL_21:
        sub_1006CEEC0();
    }
  }
  else if (sub_10005549C())
  {
    sub_100054530("Received SCO data for unknown handle %d, discarding packet. Status %!", v9 & 0xFFF, 414);
    v20 = sub_1000544A0(0x2Eu);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
      goto LABEL_21;
  }
LABEL_22:
  if (*(_BYTE *)(qword_100998FC0 + 8))
    sub_10019F9D4((unsigned __int16 *)&dword_10098477C, v12, v13, v14, v15, v16, v17, v18);
}

void sub_10019FFC4(unsigned __int16 *a1, uint64_t a2, uint64_t a3)
{
  NSObject *v4;
  uint64_t v7;
  int v8;
  unsigned __int16 v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  NSObject *v21;
  char __str[16];
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  int v28;

  if (a2 > 2)
  {
    if (!a1)
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciflow.c");
    v7 = *a1;
    v8 = byte_100984782;
    if ((byte_100984782 & 1) != 0)
    {
      if (a2 <= 3)
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciflow.c");
      v9 = a1[1];
      v10 = 4;
    }
    else
    {
      v9 = *((unsigned __int8 *)a1 + 2);
      v10 = 3;
    }
    if (*(_BYTE *)(a3 + 8))
    {
      v28 = 0;
      v26 = 0u;
      v27 = 0u;
      v24 = 0u;
      v25 = 0u;
      v11 = v9;
      *(_OWORD *)__str = 0u;
      v23 = 0u;
      snprintf(__str, 0x64uLL, "BT Controller HCI_SCO wakeupCause (handle=0x%04X dataLen=%d)", v7, v9);
      sub_100253320((uint64_t)"OI_HCIFlow_ScoPacketReceived: %s", v12, v13, v14, v15, v16, v17, v18, (uint64_t)__str);
      sub_10011D280(__str);
      v8 = byte_100984782;
    }
    else
    {
      v11 = v9;
    }
    if (v8)
      v19 = -4;
    else
      v19 = -3;
    v20 = v19 + a2;
    if (v20 == v11)
    {
      sub_10019FD94(v7, v9, (uint64_t)a1 + v10, a3);
    }
    else if (sub_10005549C())
    {
      sub_100054530("Potentially malicious packet received (actually %d bytes, but claims it is %d bytes), ignoring packet", v20, v11);
      v21 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
        sub_1006CEEC0();
    }
  }
  else if (sub_10005549C())
  {
    sub_100054530("Short SCO packet received (%d bytes), ignoring packet. Status %!", a2, 131);
    v4 = sub_1000544A0(0x2Eu);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_1006CEEC0();
  }
}

uint64_t sub_1001A01C4(uint64_t a1)
{
  unsigned __int16 v2;
  _BOOL4 v3;

  if (sub_10019AB28(a1))
  {
    if (*(_BYTE *)(a1 + 26))
      return 1288;
    else
      return 679;
  }
  else
  {
    v3 = sub_10019AC00(a1);
    v2 = word_10099909C;
    if (!v3)
      return 0;
  }
  return v2;
}

uint64_t sub_1001A021C(unsigned __int16 *a1, unsigned int a2, int a3, uint64_t a4)
{
  BOOL v8;
  NSObject *v9;
  uint64_t result;
  BOOL v11;
  uint64_t v12;
  uint64_t *i;
  int v14;
  BOOL v15;
  NSObject *v17;
  unsigned int v18;
  NSObject *v19;
  uint64_t v20;
  unsigned int v21;
  NSObject *v22;
  NSObject *v23;
  unsigned int v24;
  NSObject *v25;
  int v26;
  __int16 v27;
  NSObject *v28;
  NSObject *v29;
  NSObject *v30;
  unsigned __int16 v31;
  __int16 v32;
  int v33;
  __int16 v34;
  unsigned __int16 v35;
  __int16 v36;
  int v37;
  NSObject *v38;
  NSObject *v39;
  int v40;
  NSObject *v41;
  NSObject *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  BOOL v46;

  if (sub_10019AB28((uint64_t)a1))
  {
    if (DWORD2(xmmword_1009991F8))
      v8 = dword_100998FC8 == 2;
    else
      v8 = 0;
    if (!v8)
      return 103;
    if (!BYTE14(xmmword_100999070[0]))
    {
LABEL_10:
      if (!sub_10005549C())
        return 613;
      sub_100054530("writeAclData, transmit is not ready");
      v9 = sub_1000544A0(0x2Eu);
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        return 613;
      goto LABEL_12;
    }
    if (WORD3(xmmword_100999070[0]))
    {
      if (WORD5(xmmword_100999070[0]) <= 2u)
        goto LABEL_10;
    }
    else if (!WORD5(xmmword_100999070[0]))
    {
      goto LABEL_10;
    }
    if (*(unsigned __int16 *)(a4 + 4) >= WORD6(xmmword_100999070[0]))
      v18 = WORD6(xmmword_100999070[0]);
    else
      v18 = *(unsigned __int16 *)(a4 + 4);
    if (a3 != 2)
    {
      if (a3 != 1)
      {
        if (a3)
          return 101;
        if (*((_BYTE *)a1 + 2) || (v33 = *a1, v33 == 0xFFFF))
        {
          if (!sub_10005549C())
            return 601;
          sub_100054530("writeAclData, %d is not an ACL connection handle", *a1);
          v19 = sub_1000544A0(0x2Eu);
          if (!os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
            return 601;
          goto LABEL_143;
        }
        if (*((_BYTE *)a1 + 152) == 2)
          ++WORD2(xmmword_100999070[0]);
        v34 = v33 & 0xFFF;
LABEL_118:
        if (a2)
        {
          if (a2 != 1)
          {
            if (a2 == 2)
            {
              v34 |= 0x2000u;
              goto LABEL_126;
            }
            return 101;
          }
          v34 |= 0x1000u;
        }
        else if ((byte_100998F6A & 0x40) == 0)
        {
          sub_100253460();
        }
LABEL_126:
        v37 = *((unsigned __int8 *)a1 + 54);
        if (v37 == 6)
        {
          if (sub_10005549C())
          {
            sub_100054530("writeAclData, handle %d is disconnecting.  Sending anyway", *a1);
            v39 = sub_1000544A0(0x2Eu);
            if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR))
              sub_1006D32F8();
          }
        }
        else if (v37 == 7)
        {
          if (!sub_10005549C())
            return 601;
          sub_100054530("writeAclData, handle %d is disconnected.  discarding", *a1);
          v38 = sub_1000544A0(0x2Eu);
          if (!os_log_type_enabled(v38, OS_LOG_TYPE_ERROR))
            return 601;
          goto LABEL_143;
        }
        if (off_100999028)
        {
          result = 629;
          goto LABEL_171;
        }
        result = sub_10005347C(2, v34, a4, v18);
        if ((_DWORD)result != 625)
        {
          if ((_DWORD)result)
            goto LABEL_171;
          BYTE14(xmmword_100999070[0]) = 0;
        }
        --WORD5(xmmword_100999070[0]);
        ++a1[8];
        ++WORD1(xmmword_100999070[0]);
        (*(void (**)(unsigned __int16 *))qword_100998FD0)(a1);
        result = 0;
LABEL_171:
        v45 = BYTE14(xmmword_100999070[0]);
        if (BYTE14(xmmword_100999070[0]))
        {
          if (WORD3(xmmword_100999070[0]))
            v45 = WORD5(xmmword_100999070[0]) > 2u;
          else
            v45 = WORD5(xmmword_100999070[0]) != 0;
        }
LABEL_175:
        byte_1009990D1 = v45;
        return result;
      }
      if (&xmmword_100984408 != (__int128 *)a1)
      {
        if (!sub_10005549C())
          return 601;
        sub_100054530("writeAclData not the active broadcast connection handle");
        v23 = sub_1000544A0(0x2Eu);
        if (!os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
          return 601;
        goto LABEL_143;
      }
      v35 = *a1;
      v36 = 0x4000;
LABEL_117:
      v34 = v36 & 0xF000 | v35 & 0xFFF;
      goto LABEL_118;
    }
    if (&xmmword_100984558 == (__int128 *)a1)
    {
      v35 = *a1;
      v36 = 0x8000;
      goto LABEL_117;
    }
    if (!sub_10005549C())
      return 601;
    sub_100054530("writeAclData not the piconet broadcast connection handle");
    v22 = sub_1000544A0(0x2Eu);
    if (!os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
      return 601;
LABEL_143:
    sub_1006D3290();
    return 601;
  }
  if (!sub_10019AC00((uint64_t)a1))
  {
    if (sub_10019AC30((uint64_t)a1))
    {
      v12 = byte_1009990C8;
      if (byte_1009990C8)
      {
        for (i = &qword_1009990C0; *((_DWORD *)a1 + 14) != *((unsigned __int8 *)i - 1); i += 2)
        {
          if (!--v12)
            return 105;
        }
        if (*(unsigned __int16 *)(a4 + 4) >= *((unsigned __int16 *)i - 2))
          v20 = *((unsigned __int16 *)i - 2);
        else
          v20 = *(unsigned __int16 *)(a4 + 4);
        if (a2 >= 2)
          sub_100253460();
        result = ((uint64_t (*)(_QWORD, BOOL, uint64_t, uint64_t))*i)(*a1, a2 == 0, a4, v20);
        if ((_DWORD)result != 625)
        {
          if ((_DWORD)result)
          {
LABEL_64:
            byte_1009990D0 = *((_BYTE *)i - 2);
            return result;
          }
          *((_BYTE *)i - 2) = 0;
        }
        --*((_WORD *)i - 3);
        ++WORD1(xmmword_100999070[0]);
        ++a1[8];
        (*(void (**)(unsigned __int16 *))qword_100998FD0)(a1);
        result = 0;
        goto LABEL_64;
      }
    }
    else if (sub_10005549C())
    {
      sub_100054530("Can't write to unknown handle type.");
      v17 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 105;
  }
  if (DWORD2(xmmword_1009991F8))
    v11 = dword_100998FC8 == 2;
  else
    v11 = 0;
  if (!v11)
    return 103;
  v14 = LOBYTE(xmmword_100999070[0]);
  if (WORD4(xmmword_100999070[0]))
    v15 = LOBYTE(xmmword_100999070[0]) == 0;
  else
    v15 = 1;
  if (v15 && word_100999098 == 0)
  {
    sub_100253460();
    v14 = LOBYTE(xmmword_100999070[0]);
  }
  if (v14)
  {
    if (BYTE14(xmmword_100999070[0]))
    {
      if (WORD3(xmmword_100999070[0]))
      {
        if (WORD5(xmmword_100999070[0]) > 2u)
          goto LABEL_79;
      }
      else if (WORD5(xmmword_100999070[0]))
      {
        goto LABEL_79;
      }
    }
  }
  else if (byte_10099909E && word_10099909A)
  {
    v21 = *(unsigned __int16 *)(a4 + 4);
    if (a2 == 3)
      goto LABEL_88;
    goto LABEL_85;
  }
  if (!*((_BYTE *)a1 + 129))
  {
    if (!sub_10005549C())
      return 613;
    sub_100054530("writeLeData, transmit is not ready");
    v25 = sub_1000544A0(0x2Eu);
    if (!os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
      return 613;
LABEL_12:
    sub_1006D3228();
    return 613;
  }
LABEL_79:
  v21 = *(unsigned __int16 *)(a4 + 4);
  if (a2 == 3)
    goto LABEL_88;
  if (v14)
  {
    v24 = WORD6(xmmword_100999070[0]);
    goto LABEL_86;
  }
LABEL_85:
  v24 = (unsigned __int16)word_10099909C;
LABEL_86:
  if (v21 >= v24)
    v21 = v24;
LABEL_88:
  if (a3 == 2)
  {
    if (&xmmword_100984558 != (__int128 *)a1)
    {
      if (!sub_10005549C())
        return 601;
      sub_100054530("writeLeData not the piconet broadcast connection handle");
      v28 = sub_1000544A0(0x2Eu);
      if (!os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
        return 601;
      goto LABEL_143;
    }
    v31 = *a1;
    v32 = 0x8000;
    goto LABEL_107;
  }
  if (a3 == 1)
  {
    if (&xmmword_100984408 != (__int128 *)a1)
    {
      if (!sub_10005549C())
        return 601;
      sub_100054530("writeLeData not the active broadcast connection handle");
      v29 = sub_1000544A0(0x2Eu);
      if (!os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
        return 601;
      goto LABEL_143;
    }
    v31 = *a1;
    v32 = 0x4000;
LABEL_107:
    v27 = v32 & 0xF000 | v31 & 0xFFF;
    goto LABEL_108;
  }
  if (a3)
    return 101;
  if (*((_BYTE *)a1 + 2) != 4 || (v26 = *a1, v26 == 0xFFFF))
  {
    if (!sub_10005549C())
      return 601;
    sub_100054530("writeLeData, %d is not an LE connection handle", *a1);
    v30 = sub_1000544A0(0x2Eu);
    if (!os_log_type_enabled(v30, OS_LOG_TYPE_ERROR))
      return 601;
    goto LABEL_143;
  }
  v27 = v26 & 0xFFF;
LABEL_108:
  switch(a2)
  {
    case 0u:
      if ((byte_100998F6A & 0x40) == 0)
        sub_100253460();
      break;
    case 1u:
      v27 |= 0x1000u;
      break;
    case 2u:
      v27 |= 0x2000u;
      break;
    case 3u:
      v27 |= 0x3000u;
      break;
    default:
      return 101;
  }
  v40 = *((unsigned __int8 *)a1 + 124);
  if (v40 == 6)
  {
    if (sub_10005549C())
    {
      sub_100054530("writeLeData, handle %d is disconnecting.  Sending anyway", *a1);
      v42 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR))
        sub_1006D32F8();
    }
  }
  else if (v40 == 7)
  {
    if (!sub_10005549C())
      return 601;
    sub_100054530("writeLeData, handle %d is disconnected.  discarding", *a1);
    v41 = sub_1000544A0(0x2Eu);
    if (!os_log_type_enabled(v41, OS_LOG_TYPE_ERROR))
      return 601;
    goto LABEL_143;
  }
  if (off_100999028)
  {
    result = 629;
    goto LABEL_160;
  }
  result = sub_10005347C(2, v27, a4, v21);
  if ((_DWORD)result != 625)
  {
    if ((_DWORD)result)
      goto LABEL_160;
    v43 = 14;
    if (!LOBYTE(xmmword_100999070[0]))
      v43 = 46;
    *((_BYTE *)xmmword_100999070 + v43) = 0;
  }
  if (!*((_BYTE *)a1 + 129))
  {
    v44 = 10;
    if (!LOBYTE(xmmword_100999070[0]))
      v44 = 42;
    --*(_WORD *)((char *)xmmword_100999070 + v44);
    ++WORD1(xmmword_100999070[0]);
    ++a1[8];
  }
  (*(void (**)(unsigned __int16 *))qword_100998FD0)(a1);
  result = 0;
LABEL_160:
  if (LOBYTE(xmmword_100999070[0]))
  {
    v45 = BYTE14(xmmword_100999070[0]);
    if (BYTE14(xmmword_100999070[0]))
    {
      v45 = WORD5(xmmword_100999070[0]) != 0;
      if (WORD3(xmmword_100999070[0]))
        v45 = WORD5(xmmword_100999070[0]) > 2u;
    }
    goto LABEL_175;
  }
  v46 = byte_10099909E && word_10099909A || *((_BYTE *)a1 + 129) != 0;
  byte_1009990D2 = v46;
  return result;
}

uint64_t sub_1001A0BC8(_WORD *a1, uint64_t a2, unsigned int a3)
{
  NSObject *v7;

  if (sub_10019AC00((uint64_t)a1))
    return sub_10005347C(2, *a1 | 0x3000u, a2, a3);
  if (sub_10005549C())
  {
    sub_100054530("LE connection handle is no longer valid. Dropping LEA data.");
    v7 = sub_1000544A0(0x2Eu);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      sub_1006CEEC0();
  }
  return 601;
}

uint64_t sub_1001A0C64(__int16 *a1, char *a2, size_t a3, char a4)
{
  BOOL v8;
  uint64_t v9;
  NSObject *v10;
  NSObject *v12;
  NSObject *v13;
  NSObject *v14;
  __int16 v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  NSObject *v20;
  _OWORD v21[7];

  if (!sub_10019ABD0((uint64_t)a1))
  {
    if (!sub_10005549C())
      return 601;
    sub_100054530("SCO connection handle is no longer valid. Dropping SCO data.");
    v10 = sub_1000544A0(0x2Eu);
    if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      return 601;
    goto LABEL_9;
  }
  if (DWORD2(xmmword_1009991F8))
    v8 = dword_100998FC8 == 2;
  else
    v8 = 0;
  if (!v8)
    return 103;
  if (!byte_10099908E)
    return 613;
  if (!a1 || *((_BYTE *)a1 + 2) != 1)
  {
    if (!sub_10005549C())
      return 601;
    v9 = 601;
    sub_100054530("0x%x is not SCO connection handle, retval %!", a1, 601);
    v13 = sub_1000544A0(0x2Eu);
    if (!os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      return v9;
    goto LABEL_9;
  }
  if (*((_BYTE *)a1 + 56))
  {
    if (!sub_10005549C())
      return 601;
    v9 = 601;
    sub_100054530("SCO connection %d is disconnected, retval %!", (unsigned __int16)*a1, 601);
    v12 = sub_1000544A0(0x2Eu);
    if (!os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      return v9;
LABEL_9:
    sub_1006CEEC0();
    return 601;
  }
  if (!off_100999028)
  {
    memset(v21, 0, sizeof(v21));
    sub_1000532A8((uint64_t)v21, 1u);
    sub_10005336C((unsigned __int8 *)v21, a2, a3, 2u);
    if (byte_100984782 == 1)
    {
      v15 = *a1;
      v16 = -13;
LABEL_39:
      v9 = sub_10005347C(v16, v15, (uint64_t)v21, a3);
      goto LABEL_40;
    }
    if (a3 < 0x100)
    {
      v15 = *a1;
      v16 = 3;
      goto LABEL_39;
    }
    if (a3 >> 1 != 180)
      sub_100253460();
    v17 = sub_10005347C(3, *a1 | 0x4000u, (uint64_t)v21, a3 >> 1);
    if ((_DWORD)v17 == 625)
    {
      v18 = sub_10005347C(3, *a1, (uint64_t)v21, a3 >> 1);
      if ((_DWORD)v18 == 625)
        goto LABEL_43;
      v9 = v18;
      if (sub_10005549C())
      {
        sub_100054530("OI_HCI_Send failed to write second SCO data chunk");
        v19 = sub_1000544A0(0x2Eu);
        if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
          goto LABEL_37;
      }
    }
    else
    {
      v9 = v17;
      if (sub_10005549C())
      {
        sub_100054530("OI_HCI_Send failed to write first SCO data chunk");
        v20 = sub_1000544A0(0x2Eu);
        if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
LABEL_37:
          sub_1006D17C4();
      }
    }
LABEL_40:
    if ((_DWORD)v9 != 625)
    {
      if ((_DWORD)v9)
        goto LABEL_25;
LABEL_42:
      byte_10099908E = 0;
      return v9;
    }
LABEL_43:
    if ((a4 & 1) != 0)
      return 625;
    v9 = sub_10004AE90((uint64_t)sub_10019F44C, 0, 0);
    if ((_DWORD)v9)
      return v9;
    goto LABEL_42;
  }
  v9 = 629;
LABEL_25:
  if (sub_10005549C())
  {
    sub_100054530("OI_HCI_Send failed to write SCO data");
    v14 = sub_1000544A0(0x2Eu);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      sub_1006D17C4();
  }
  return v9;
}

uint64_t sub_1001A0FD0(int a1, uint64_t a2, void *a3)
{
  if (!a1)
    a2 = 0;
  if (!a1)
    a3 = 0;
  qword_100999060 = a2;
  off_100999068 = a3;
  return 0;
}

uint64_t sub_1001A0FF4(_WORD *a1)
{
  BOOL v1;
  uint64_t result;

  if (DWORD2(xmmword_1009991F8))
    v1 = dword_100998FC8 == 2;
  else
    v1 = 0;
  if (!v1)
    return 103;
  result = 0;
  *a1 = word_10099908C;
  return result;
}

uint64_t sub_1001A1038(__int16 a1, __int16 a2)
{
  BOOL v2;
  uint64_t result;

  if (DWORD2(xmmword_1009991F8))
    v2 = dword_100998FC8 == 2;
  else
    v2 = 0;
  if (!v2)
    return 103;
  result = 0;
  word_10099908C = a1;
  word_100999088 = a2;
  return result;
}

uint64_t sub_1001A1080()
{
  BOOL v0;
  uint64_t result;

  if (DWORD2(xmmword_1009991F8))
    v0 = dword_100998FC8 == 2;
  else
    v0 = 0;
  if (!v0)
    return 103;
  result = 0;
  byte_100984782 = 1;
  return result;
}

uint64_t sub_1001A10C0(_WORD *a1)
{
  BOOL v1;
  uint64_t result;

  if (DWORD2(xmmword_1009991F8))
    v1 = dword_100998FC8 == 2;
  else
    v1 = 0;
  if (!v1)
    return 103;
  result = 0;
  *a1 = WORD6(xmmword_100999070);
  return result;
}

uint64_t sub_1001A1104()
{
  return WORD6(xmmword_100999070);
}

uint64_t sub_1001A1110()
{
  BOOL v0;
  uint64_t result;
  NSObject *v2;

  if (DWORD2(xmmword_1009991F8))
    v0 = dword_100998FC8 == 2;
  else
    v0 = 0;
  if (v0)
    return WORD4(xmmword_100999070[0]);
  result = sub_10005549C();
  if ((_DWORD)result)
  {
    sub_100054530("OI_HCIAPI_GetTotalNumAclBuffers - not initialized");
    v2 = sub_1000544A0(0x2Eu);
    result = os_log_type_enabled(v2, OS_LOG_TYPE_ERROR);
    if ((_DWORD)result)
    {
      sub_1006D3010();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1001A1198()
{
  BOOL v0;
  uint64_t result;
  NSObject *v2;

  if (DWORD2(xmmword_1009991F8))
    v0 = dword_100998FC8 == 2;
  else
    v0 = 0;
  if (v0)
    return (unsigned __int16)word_100999098;
  result = sub_10005549C();
  if ((_DWORD)result)
  {
    sub_100054530("OI_HCIAPI_GetTotalNumAclBuffers - not initialized");
    v2 = sub_1000544A0(0x2Eu);
    result = os_log_type_enabled(v2, OS_LOG_TYPE_ERROR);
    if ((_DWORD)result)
    {
      sub_1006D3010();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1001A1220()
{
  BOOL v0;
  uint64_t result;
  NSObject *v2;

  if (DWORD2(xmmword_1009991F8))
    v0 = dword_100998FC8 == 2;
  else
    v0 = 0;
  if (v0)
    return (unsigned __int16)word_100999088;
  result = sub_10005549C();
  if ((_DWORD)result)
  {
    sub_100054530("OI_HCIAPI_GetTotalNumScoBuffers - not initialized");
    v2 = sub_1000544A0(0x2Eu);
    result = os_log_type_enabled(v2, OS_LOG_TYPE_ERROR);
    if ((_DWORD)result)
    {
      sub_1006D3010();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1001A12A8(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 16);
}

uint64_t sub_1001A12B0()
{
  BOOL v0;
  uint64_t result;
  NSObject *v2;

  if (DWORD2(xmmword_1009991F8))
    v0 = dword_100998FC8 == 2;
  else
    v0 = 0;
  if (v0)
    return byte_10099908E != 0;
  result = sub_10005549C();
  if ((_DWORD)result)
  {
    sub_100054530("OI_HCIAPI_ReadyToTransmitSco - not initialized");
    v2 = sub_1000544A0(0x2Eu);
    result = os_log_type_enabled(v2, OS_LOG_TYPE_ERROR);
    if ((_DWORD)result)
    {
      sub_1006D3010();
      return 0;
    }
  }
  return result;
}

void sub_1001A1340(uint64_t a1, unsigned int a2, uint64_t a3)
{
  NSObject *v5;
  signed int v6;
  NSObject *v7;
  NSObject *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int16 v12;
  __int128 *v13;
  __int128 *v14;
  NSObject *v16;
  void *v17;
  int v18;
  NSObject *v19;
  uint8_t buf[4];
  void *v21;
  __int16 v22;
  int v23;

  if (*(_BYTE *)(a3 + 8))
  {
    if (sub_10005549C())
    {
      sub_100054530("OI_HCIFlow_HandleNumCompletedPackets: wakeupCause HCI_EVENT Packet from BT Controller (len=%d)\n", a2);
      v5 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136446210;
        v21 = sub_100054494();
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
  }
  if (dword_100998FC8 == 2)
  {
    if (!a1)
      goto LABEL_65;
    if (a2 == 1)
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciflow.c");
    if (!a2)
LABEL_65:
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciflow.c");
    if (a2 <= 2)
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciflow.c");
    v6 = *(unsigned __int8 *)(a1 + 1);
    if ((int)(a2 - 2) > v6)
    {
      if (sub_10005549C())
      {
        sub_100054530("NumCompletedPackets short packet expected %d, got %d", v6 + 2, a2);
        v7 = sub_1000544A0(0x2Eu);
        if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
          sub_1006D31C0();
      }
      return;
    }
    v9 = *(unsigned __int8 *)(a1 + 2);
    if (v6 == ((4 * v9) | 1))
    {
      if (!*(_BYTE *)(a1 + 2))
        return;
      v10 = 0;
      v11 = (int)(a2 - 1);
      while (1)
      {
        if (v10 + 3 >= v11)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciflow.c");
        if (v10 + 5 >= v11)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciflow.c");
        v12 = *(_WORD *)(a1 + v10 + 5);
        v13 = sub_10019ACEC(*(unsigned __int16 *)(a1 + v10 + 3));
        if (!v13)
          goto LABEL_51;
        v14 = v13;
        switch(*((_BYTE *)v13 + 2))
        {
          case 0:
            sub_1001A182C((unsigned __int16 *)v13, v12);
            if (qword_100999060 && (__int128 *)qword_100999060 == v14 && !*((_WORD *)v14 + 8) && off_100999068 != 0)
              off_100999068(v14);
            if (!BYTE14(xmmword_100999070[0]))
              goto LABEL_51;
            if (WORD3(xmmword_100999070[0]))
            {
              if (WORD5(xmmword_100999070[0]) <= 2u)
                goto LABEL_51;
LABEL_50:
              (*(void (**)(_QWORD, uint64_t))(qword_100998FD0 + 16))(0, 1);
              goto LABEL_51;
            }
            if (WORD5(xmmword_100999070[0]))
              goto LABEL_50;
            goto LABEL_51;
          case 1:
            sub_10018EE20((uint64_t)v13, v12);
            goto LABEL_51;
          case 4:
            if (*((_BYTE *)v13 + 129))
              goto LABEL_41;
            sub_1001A182C((unsigned __int16 *)v13, v12);
            if (LOBYTE(xmmword_100999070[0]))
            {
              if (!BYTE14(xmmword_100999070[0]))
                goto LABEL_51;
              v18 = WORD5(xmmword_100999070[0]);
              if (WORD3(xmmword_100999070[0]))
              {
                if (WORD5(xmmword_100999070[0]) <= 2u)
                  goto LABEL_51;
                goto LABEL_41;
              }
            }
            else
            {
              if (!byte_10099909E)
                goto LABEL_51;
              v18 = (unsigned __int16)word_10099909A;
            }
            if (!v18)
              goto LABEL_51;
LABEL_41:
            (*(void (**)(_QWORD, uint64_t))(qword_100998FD0 + 16))(0, 3);
LABEL_51:
            --v9;
            v10 += 4;
            if (!(_BYTE)v9)
              return;
            break;
          case 5:
          case 6:
            sub_1001A182C((unsigned __int16 *)v13, v12);
            goto LABEL_51;
          case 8:
            sub_1001A182C((unsigned __int16 *)v13, v12);
            if (byte_1009990BE)
              (*(void (**)(_QWORD, uint64_t))(qword_100998FD0 + 16))(0, 5);
            goto LABEL_51;
          default:
            if (sub_10005549C())
            {
              sub_100054530("Unknown connection type.");
              v16 = sub_1000544A0(0x2Eu);
              if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
              {
                v17 = sub_100054494();
                *(_DWORD *)buf = 136446466;
                v21 = v17;
                v22 = 1024;
                v23 = 0xFFFF;
                _os_log_error_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
              }
            }
            goto LABEL_51;
        }
      }
    }
    if (sub_10005549C())
    {
      sub_100054530("NumCompletedPackets bad parm length: expected %d, got %d", (4 * v9) | 1, v6);
      v19 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
        sub_1006D31C0();
    }
  }
  else if (sub_10005549C())
  {
    sub_100054530("HCI not initialized, ignoring AclPacketSent event");
    v8 = sub_1000544A0(0x2Eu);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_1006D3010();
  }
}

void sub_1001A182C(unsigned __int16 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v4;
  NSObject *v5;
  __int16 v6;
  NSObject *v7;
  __int16 v8;
  NSObject *v9;
  unsigned __int16 v10;
  BOOL v11;
  BOOL v12;
  int v13;
  BOOL v14;
  int v15;
  void (*v16)(unsigned __int16 *);
  BOOL v17;
  char v18;

  v2 = a2;
  v4 = a1[8];
  if (v4 < a2)
  {
    if (sub_10005549C())
    {
      sub_100054530("hciflow inconsistency - %d packets completed for handle %d, but only %d were outstanding", v2, *a1, a1[8]);
      v5 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        sub_1006D3078();
    }
    v2 = a1[8];
    LOWORD(v4) = a1[8];
  }
  a1[8] = v4 - v2;
  v6 = WORD1(xmmword_100999070[0]);
  if (v2 > WORD1(xmmword_100999070[0]))
  {
    if (sub_10005549C())
    {
      sub_100054530("hciflow inconsistency - %d packets completed, only %d were outstannding", v2, WORD1(xmmword_100999070[0]));
      v7 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
        sub_1006D3078();
    }
    v6 = WORD1(xmmword_100999070[0]);
    v2 = WORD1(xmmword_100999070[0]);
  }
  v8 = v6 - v2;
  WORD1(xmmword_100999070[0]) = v8;
  if (!*((_BYTE *)a1 + 2) && *((_BYTE *)a1 + 152) == 2)
  {
    if (WORD2(xmmword_100999070[0]) >= v2)
    {
      WORD2(xmmword_100999070[0]) -= v2;
    }
    else
    {
      sub_100253460();
      WORD2(xmmword_100999070[0]) = 0;
      v8 = WORD1(xmmword_100999070[0]);
    }
  }
  if (!v8)
    WORD2(xmmword_100999070[0]) = 0;
  switch(*((_BYTE *)a1 + 2))
  {
    case 0:
      goto LABEL_24;
    case 4:
      if (LOBYTE(xmmword_100999070[0]))
      {
LABEL_24:
        v10 = WORD5(xmmword_100999070[0]) + v2;
        WORD5(xmmword_100999070[0]) += v2;
        if (BYTE14(xmmword_100999070[0]))
        {
          v11 = v10 != 0;
          v12 = v10 > 2u;
          if (!WORD3(xmmword_100999070[0]))
            v12 = v11;
        }
        else
        {
          v12 = 0;
        }
        byte_1009990D1 = v12;
      }
      else
      {
        word_10099909A += v2;
        if (word_10099909A)
          v17 = byte_10099909E == 0;
        else
          v17 = 1;
        v18 = !v17;
        byte_1009990D2 = v18;
      }
      break;
    case 5:
    case 6:
      word_1009990AA += v2;
      break;
    case 8:
      word_1009990BA += v2;
      byte_1009990D0 = byte_1009990BE;
      break;
    default:
      if (sub_10005549C())
      {
        sub_100054530("Unexpected connection type");
        v9 = sub_1000544A0(0x2Eu);
        if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      break;
  }
  v13 = (__int16)a1[9];
  v14 = __OFSUB__(v13, 1);
  v15 = v13 - 1;
  if (v15 < 0 == v14)
  {
    a1[9] = v15;
    if (!(_WORD)v15)
    {
      v16 = (void (*)(unsigned __int16 *))*((_QWORD *)a1 + 1);
      if (v16)
      {
        *((_QWORD *)a1 + 1) = 0;
        a1[9] = 0;
      }
      else
      {
        sub_100253460();
        v16 = (void (*)(unsigned __int16 *))*((_QWORD *)a1 + 1);
        *((_QWORD *)a1 + 1) = 0;
        a1[9] = 0;
        if (!v16)
          return;
      }
      v16(a1);
    }
  }
}

__int128 *sub_1001A1AF0(__int128 *result)
{
  int v1;
  __int128 *v2;
  int v3;
  int v4;
  int v5;

  *((_WORD *)result + 8) = 0;
  v1 = *(unsigned __int16 *)result;
  v2 = &xmmword_100984408;
  if (v1 == (unsigned __int16)xmmword_100984408)
  {
    v3 = 1794;
    do
    {
      v4 = v3;
      result = sub_10019ACEC((unsigned __int16)v3);
      v3 = v4 + 2;
    }
    while (result);
  }
  else
  {
    v2 = &xmmword_100984558;
    if (v1 != (unsigned __int16)xmmword_100984558)
      return result;
    v5 = 1795;
    do
    {
      v4 = v5;
      result = sub_10019ACEC((unsigned __int16)v5);
      v5 = v4 + 2;
    }
    while (result);
  }
  *(_WORD *)v2 = v4;
  return result;
}

void sub_1001A1B78(uint64_t a1)
{
  char v2;
  char v3;
  char v4;
  BOOL v5;
  int v6;
  char v7;
  NSObject *v8;
  int v9;
  unsigned int v10;
  BOOL v11;
  BOOL v12;
  char v13;
  __int16 v14;
  uint64_t v15;

  v2 = BYTE14(xmmword_100999070[0]);
  if (!BYTE14(xmmword_100999070[0]))
  {
    v3 = 0;
    v4 = 0;
    if (LOBYTE(xmmword_100999070[0]))
      goto LABEL_13;
    goto LABEL_6;
  }
  if (WORD3(xmmword_100999070[0]))
    v2 = WORD5(xmmword_100999070[0]) > 2u;
  else
    v2 = WORD5(xmmword_100999070[0]) != 0;
  v3 = v2;
  v4 = v2;
  if (!LOBYTE(xmmword_100999070[0]))
  {
LABEL_6:
    if (byte_10099909E)
      v5 = word_10099909A == 0;
    else
      v5 = 1;
    v4 = !v5;
    v3 = v2;
  }
LABEL_13:
  v6 = byte_1009990BE;
  if (*(_WORD *)(a1 + 16))
    sub_1001A182C((unsigned __int16 *)a1, *(unsigned __int16 *)(a1 + 16));
  switch(*(_BYTE *)(a1 + 2))
  {
    case 0:
      if (BYTE14(xmmword_100999070[0]))
        v7 = v3;
      else
        v7 = 1;
      if ((v7 & 1) != 0)
        goto LABEL_46;
      if (!WORD3(xmmword_100999070[0]))
      {
        if (!WORD5(xmmword_100999070[0]))
          goto LABEL_46;
        goto LABEL_40;
      }
      if (WORD5(xmmword_100999070[0]) > 2u)
LABEL_40:
        (*(void (**)(_QWORD, uint64_t))(qword_100998FD0 + 16))(0, 1);
LABEL_46:
      if (!sub_10019C1AC())
      {
        if (word_100984418)
          sub_1001A182C((unsigned __int16 *)&xmmword_100984408, (unsigned __int16)word_100984418);
        if (word_100984568)
          sub_1001A182C((unsigned __int16 *)&xmmword_100984558, (unsigned __int16)word_100984568);
        if (!LOBYTE(xmmword_100999070[0]) || !sub_10019C27C())
        {
          v10 = WORD5(xmmword_100999070[0]);
          if (WORD5(xmmword_100999070[0]) != WORD4(xmmword_100999070[0]))
          {
            sub_100253460();
            v10 = WORD4(xmmword_100999070[0]);
          }
          WORD5(xmmword_100999070[0]) = v10;
          BYTE14(xmmword_100999070[0]) = 1;
          v11 = v10 > 2;
          v12 = v10 != 0;
          if (WORD3(xmmword_100999070[0]))
            v12 = v11;
          byte_1009990D1 = v12;
        }
        sub_1001A2810();
      }
      if (!sub_10019C27C())
      {
        v15 = 0;
        word_10099909A = word_100999098;
        byte_10099909E = 1;
        if (LOBYTE(xmmword_100999070[0]))
        {
          v13 = BYTE14(xmmword_100999070[0]);
          if (BYTE14(xmmword_100999070[0]))
          {
            v13 = WORD5(xmmword_100999070[0]) != 0;
            if (WORD3(xmmword_100999070[0]))
              v13 = WORD5(xmmword_100999070[0]) > 2u;
          }
        }
        else
        {
          v13 = word_100999098 != 0;
        }
        byte_1009990D2 = v13;
        while (sub_10019C2D0(&v15))
        {
          if (*(_BYTE *)(v15 + 124) == 7)
            *(_WORD *)(v15 + 16) = 0;
        }
      }
      if (!sub_10019C39C())
      {
        v14 = word_1009990BA;
        if (word_1009990BA != word_1009990B8)
        {
          sub_100253460();
          v14 = word_1009990B8;
        }
        word_1009990BA = v14;
        byte_1009990BE = 1;
        byte_1009990D0 = 1;
      }
      if (!sub_10019C1AC() && !sub_10019C27C() && !sub_10019C39C())
      {
        if (byte_100984783 == 1)
        {
          if (WORD1(xmmword_100999070[0]))
            sub_100253460();
        }
        WORD1(xmmword_100999070[0]) = 0;
      }
      return;
    case 1:
      if (*(_WORD *)(a1 + 16))
        sub_10018EE20(a1, *(unsigned __int16 *)(a1 + 16));
      goto LABEL_46;
    case 4:
      if ((v4 & 1) != 0)
        goto LABEL_46;
      if (LOBYTE(xmmword_100999070[0]))
      {
        if (!BYTE14(xmmword_100999070[0]))
          goto LABEL_44;
        v9 = WORD5(xmmword_100999070[0]);
        if (WORD3(xmmword_100999070[0]))
        {
          if (WORD5(xmmword_100999070[0]) > 2u)
            goto LABEL_45;
          goto LABEL_44;
        }
      }
      else
      {
        if (!byte_10099909E)
          goto LABEL_44;
        v9 = (unsigned __int16)word_10099909A;
      }
      if (v9)
        goto LABEL_45;
LABEL_44:
      if (!*(_BYTE *)(a1 + 129))
        goto LABEL_46;
LABEL_45:
      (*(void (**)(_QWORD, uint64_t))(qword_100998FD0 + 16))(0, 3);
      goto LABEL_46;
    case 8:
      if (!v6 && byte_1009990BE)
        (*(void (**)(_QWORD, uint64_t))(qword_100998FD0 + 16))(0, 5);
      goto LABEL_46;
    default:
      if (sub_10005549C())
      {
        sub_100054530("Unknown connection type.");
        v8 = sub_1000544A0(0x2Eu);
        if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      goto LABEL_46;
  }
}

uint64_t sub_1001A1F70(uint64_t a1, uint64_t a2)
{
  return a2;
}

__int128 *sub_1001A1F78(unsigned int a1, __int16 a2, __int16 a3, __int16 a4, int a5, int a6, int a7, int a8, char a9)
{
  unsigned int v17;
  __int16 v18;
  BOOL v19;
  BOOL v20;
  BOOL v21;
  BOOL v22;
  int v23;
  int v24;
  __int128 *v25;
  int v26;
  int v27;
  __int128 *result;

  word_100984774 = 0;
  dword_100984770 = 0;
  dword_10098477C = 0;
  word_100984780 = 0;
  dword_100984776 = 0;
  word_10098477A = 0;
  xmmword_100999070[0] = 0u;
  unk_100999080 = 0u;
  unk_100999090 = 0u;
  unk_1009990A0 = 0u;
  unk_1009990B0 = 0u;
  *(_OWORD *)&qword_1009990C0 = 0u;
  v17 = (unsigned __int16)(sub_10016F8E0() - 4);
  if (a1 >= v17)
    v18 = v17;
  else
    v18 = a1;
  WORD6(xmmword_100999070[0]) = v18;
  word_10099908C = a2;
  word_10099909C = a3;
  word_1009990AC = a4;
  WORD4(xmmword_100999070[0]) = a5;
  word_100999088 = a6;
  word_100999098 = a7;
  word_1009990A8 = a8;
  WORD5(xmmword_100999070[0]) = a5;
  word_10099909A = a7;
  word_1009990AA = a8;
  WORD3(xmmword_100999070[0]) = 0;
  LOBYTE(xmmword_100999070[0]) = a9;
  if ((a9 & 1) != 0)
  {
    v19 = 1;
    v20 = a5 != 0;
    v21 = 1;
    v22 = 1;
  }
  else
  {
    v21 = a6 != 0;
    v20 = a7 != 0;
    v19 = a5 != 0;
    v22 = a7 != 0;
  }
  BYTE14(xmmword_100999070[0]) = v19;
  byte_10099908E = v21;
  byte_10099909E = v22;
  byte_1009990AE = a8 != 0;
  byte_1009990D1 = a5 != 0;
  byte_1009990D2 = v20;
  byte_1009990D0 = 0;
  byte_1009990C8 = 0;
  sub_1001A2810();
  v23 = 1794;
  do
  {
    v24 = v23;
    v25 = sub_10019ACEC((unsigned __int16)v23);
    v23 = v24 + 2;
  }
  while (v25);
  LOWORD(xmmword_100984408) = v24;
  v26 = 1795;
  do
  {
    v27 = v26;
    result = sub_10019ACEC((unsigned __int16)v26);
    v26 = v27 + 2;
  }
  while (result);
  LOWORD(xmmword_100984558) = v27;
  return result;
}

void sub_1001A2130()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int16 *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int16 *v7;
  int v8;
  int v9;
  __n128 v10;
  unsigned __int16 *v11;
  int v12;
  unsigned __int16 *v13;
  int v14;
  __n128 v15;
  char v16;
  BOOL v17;
  _BOOL4 v18;
  char v19;
  BOOL v20;
  unsigned __int16 *v21;

  v21 = 0;
  while (sub_10019C4B4((uint64_t *)&v21))
  {
    v3 = v21;
    if ((__int16)*v21 == -1)
    {
      sub_100180A54(129, (char *)v21, *((_QWORD *)v21 + 6) + 48, 0, 0, v0, v1, v2);
    }
    else
    {
      *((_BYTE *)v21 + 56) = 1;
      sub_100181BAC(0, v3, 129);
    }
    if (!sub_10019ABD0((uint64_t)v21))
      v21 = 0;
  }
  v21 = 0;
  if (sub_10019C200((uint64_t *)&v21))
  {
    while (1)
    {
      v7 = v21;
      v8 = *((unsigned __int8 *)v21 + 54);
      if ((v8 - 1) < 2)
        break;
      if (v8 != 7)
      {
        *((_BYTE *)v21 + 54) = 7;
        v9 = *((_DWORD *)v7 + 37);
        sub_1001A1B78((uint64_t)v7);
        sub_100181BAC(0, v21, 129);
        if (!v9)
        {
          sub_10024C150((uint64_t)v21, 129, v10);
          sub_100246E20((char *)v21, 129);
          sub_10019B934(v21);
        }
        goto LABEL_14;
      }
LABEL_15:
      if (!sub_10019C200((uint64_t *)&v21))
        goto LABEL_16;
    }
    sub_100180A54(129, (char *)v21, (uint64_t)(v21 + 24), 1, 0, v4, v5, v6);
LABEL_14:
    v21 = 0;
    goto LABEL_15;
  }
LABEL_16:
  v21 = 0;
  if (sub_10019C2D0((uint64_t *)&v21))
  {
    while (1)
    {
      v11 = v21;
      v12 = *((unsigned __int8 *)v21 + 124);
      if ((v12 - 1) < 2)
        break;
      if (v12 != 7)
      {
        *((_BYTE *)v21 + 124) = 7;
        v14 = *((_DWORD *)v11 + 51);
        sub_1001A1B78((uint64_t)v11);
        sub_1002172A4(0, (uint64_t)v21, 129, 0, 0);
        if (!v14)
        {
          sub_10024C150((uint64_t)v21, 129, v15);
          sub_100246E20((char *)v21, 129);
          sub_10019B934(v21);
        }
        goto LABEL_25;
      }
LABEL_26:
      if (!sub_10019C2D0((uint64_t *)&v21))
        goto LABEL_27;
    }
    if (*((_BYTE *)v21 + 55))
      v13 = v21 + 28;
    else
      v13 = 0;
    sub_1002167F4(129, 0, 0, (unsigned __int8 *)v21 + 48, v13, 0, 0, 0, 0, 0xFFFF, 0);
LABEL_25:
    v21 = 0;
    goto LABEL_26;
  }
LABEL_27:
  WORD5(xmmword_100999070[0]) = WORD4(xmmword_100999070[0]);
  word_10099909A = word_100999098;
  WORD1(xmmword_100999070[0]) = 0;
  if (LOBYTE(xmmword_100999070[0]))
  {
    v16 = 0;
    v17 = 1;
    BYTE14(xmmword_100999070[0]) = 1;
    v18 = 1;
  }
  else
  {
    v16 = WORD4(xmmword_100999070[0]) == 0;
    BYTE14(xmmword_100999070[0]) = WORD4(xmmword_100999070[0]) != 0;
    v17 = word_100999088 != 0;
    v18 = word_100999098 != 0;
  }
  byte_10099908E = v17;
  byte_10099909E = v18;
  WORD3(xmmword_100999070[0]) = 0;
  byte_1009990D1 = (WORD4(xmmword_100999070[0]) != 0) & ~v16;
  if (LOBYTE(xmmword_100999070[0]))
  {
    if (WORD4(xmmword_100999070[0]))
      v19 = v16;
    else
      v19 = 1;
    if ((v19 & 1) != 0)
      goto LABEL_39;
  }
  else if (!v18 || !word_100999098)
  {
LABEL_39:
    v20 = sub_10019C340() != 0;
    goto LABEL_40;
  }
  v20 = 1;
LABEL_40:
  byte_1009990D2 = v20;
  byte_1009990D0 = byte_1009990C8 != 0;
  sub_1001A2810();
}

uint64_t sub_1001A240C(int a1)
{
  return WORD5(xmmword_100999070[a1]);
}

BOOL sub_1001A2420()
{
  return WORD3(xmmword_100999070[0]) != 0;
}

uint64_t sub_1001A2434()
{
  return BYTE1(xmmword_100999070[0]);
}

void sub_1001A2440()
{
  byte_100984783 = 1;
}

void sub_1001A2450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  const char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  const char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  const char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  const char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  const char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  const char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  const char *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;

  sub_100253320((uint64_t)"HciFlow - txFlowControl\n", a2, a3, a4, a5, a6, a7, a8, v226);
  sub_100253320((uint64_t)"   gAssertOnControllerFlowPRoblems  = %d\n", v9, v10, v11, v12, v13, v14, v15, byte_100984783);
  sub_100253320((uint64_t)"   MaxAclDataPacketSize\t\t\t= %d\n", v16, v17, v18, v19, v20, v21, v22, WORD6(xmmword_100999070[0]));
  sub_100253320((uint64_t)"   MaxScoDataPacketSize\t\t\t= %d\n", v23, v24, v25, v26, v27, v28, v29, (unsigned __int16)word_10099908C);
  sub_100253320((uint64_t)"   MaxLeDataPacketSize\t\t\t= %d\n", v30, v31, v32, v33, v34, v35, v36, (unsigned __int16)word_10099909C);
  if (LOBYTE(xmmword_100999070[0]))
    v44 = "TRUE";
  else
    v44 = "FALSE";
  sub_100253320((uint64_t)"   sharedACLandLEbuffers     \t= %s\n", v37, v38, v39, v40, v41, v42, v43, (uint64_t)v44);
  sub_100253320((uint64_t)"   totalNumOutstandingTransmits\t= %d\n", v45, v46, v47, v48, v49, v50, v51, WORD1(xmmword_100999070[0]));
  sub_100253320((uint64_t)"   totalNumAclSlots\t\t\t\t= %d\n", v52, v53, v54, v55, v56, v57, v58, WORD4(xmmword_100999070[0]));
  sub_100253320((uint64_t)"   totalNumScoSlots\t\t\t\t= %d\n", v59, v60, v61, v62, v63, v64, v65, (unsigned __int16)word_100999088);
  sub_100253320((uint64_t)"   totalNumLeSlots\t\t\t\t= %d\n", v66, v67, v68, v69, v70, v71, v72, (unsigned __int16)word_100999098);
  sub_100253320((uint64_t)"   curNumAclSlotsAvail\t\t\t= %d\n", v73, v74, v75, v76, v77, v78, v79, WORD5(xmmword_100999070[0]));
  sub_100253320((uint64_t)"   curNumLeSlotsAvail\t\t\t= %d\n", v80, v81, v82, v83, v84, v85, v86, (unsigned __int16)word_10099909A);
  if (BYTE14(xmmword_100999070[0]))
    v94 = "TRUE";
  else
    v94 = "FALSE";
  sub_100253320((uint64_t)"   aclTransportReady\t\t\t\t= %s\n", v87, v88, v89, v90, v91, v92, v93, (uint64_t)v94);
  if (byte_10099908E)
    v102 = "TRUE";
  else
    v102 = "FALSE";
  sub_100253320((uint64_t)"   scoTransportReady\t\t\t\t= %s\n", v95, v96, v97, v98, v99, v100, v101, (uint64_t)v102);
  if (byte_10099909E)
    v110 = "TRUE";
  else
    v110 = "FALSE";
  sub_100253320((uint64_t)"   leTransportReady\t\t\t\t= %s\n", v103, v104, v105, v106, v107, v108, v109, (uint64_t)v110);
  sub_100253320((uint64_t)"   needScoBuffers\t\t\t\t= %d\n", v111, v112, v113, v114, v115, v116, v117, WORD3(xmmword_100999070[0]));
  sub_100253320((uint64_t)"   _OI_HCIAPI_ReadyToTransmitLe  = %d\n", v118, v119, v120, v121, v122, v123, v124, byte_1009990D2);
  sub_100253320((uint64_t)"   _OI_HCIAPI_ReadyToTransmitAcl  = %d\n", v125, v126, v127, v128, v129, v130, v131, byte_1009990D1);
  sub_100253320((uint64_t)"   _OI_HCIAPI_ReadyToTransmitOther  = %d\n", v132, v133, v134, v135, v136, v137, v138, byte_1009990D0);
  sub_10019C9E8();
  if (qword_100998FC0 && *(_BYTE *)(qword_100998FC0 + 7))
  {
    sub_100253320((uint64_t)"HciFlow - aclRxFlowControl:\n", v139, v140, v141, v142, v143, v144, v145, v227);
    sub_100253320((uint64_t)"   lmHandle\t = %d\n", v146, v147, v148, v149, v150, v151, v152, (unsigned __int16)dword_100984770);
    if ((_BYTE)word_100984774)
      v160 = "TRUE";
    else
      v160 = "FALSE";
    sub_100253320((uint64_t)"   flowIsPaused = %s\n", v153, v154, v155, v156, v157, v158, v159, (uint64_t)v160);
    sub_100253320((uint64_t)"   numOutstandingReceives = %d\n", v161, v162, v163, v164, v165, v166, v167, HIWORD(dword_100984770));
  }
  else
  {
    sub_100253320((uint64_t)"HciFlow - aclRxFlowControl not enabled\n", v139, v140, v141, v142, v143, v144, v145, v227);
  }
  if (qword_100998FC0 && *(_BYTE *)(qword_100998FC0 + 8))
  {
    sub_100253320((uint64_t)"HciFlow - scoRxFlowControl:\n", v168, v169, v170, v171, v172, v173, v174, v228);
    sub_100253320((uint64_t)"   lmHandle\t = %d\n", v175, v176, v177, v178, v179, v180, v181, (unsigned __int16)dword_10098477C);
    if ((_BYTE)word_100984780)
      v189 = "TRUE";
    else
      v189 = "FALSE";
    sub_100253320((uint64_t)"   flowIsPaused = %s\n", v182, v183, v184, v185, v186, v187, v188, (uint64_t)v189);
    sub_100253320((uint64_t)"   numOutstandingReceives = %d\n", v190, v191, v192, v193, v194, v195, v196, HIWORD(dword_10098477C));
  }
  else
  {
    sub_100253320((uint64_t)"HciFlow - scoRxFlowControl not enabled\n", v168, v169, v170, v171, v172, v173, v174, v228);
  }
  if (qword_100998FC0 && *(_BYTE *)(qword_100998FC0 + 9))
  {
    sub_100253320((uint64_t)"HciFlow - leRxFlowControl:\n", v197, v198, v199, v200, v201, v202, v203, v229);
    sub_100253320((uint64_t)"   lmHandle\t = %d\n", v204, v205, v206, v207, v208, v209, v210, (unsigned __int16)dword_100984776);
    if ((_BYTE)word_10098477A)
      v218 = "TRUE";
    else
      v218 = "FALSE";
    sub_100253320((uint64_t)"   flowIsPaused = %s\n", v211, v212, v213, v214, v215, v216, v217, (uint64_t)v218);
    sub_100253320((uint64_t)"   numOutstandingReceives = %d\n", v219, v220, v221, v222, v223, v224, v225, HIWORD(dword_100984776));
  }
  else
  {
    sub_100253320((uint64_t)"HciFlow - leRxFlowControl not enabled\n", v197, v198, v199, v200, v201, v202, v203, a9);
  }
}

void sub_1001A27AC()
{
  uint64_t v0;

  dword_100984790 = 0;
  v0 = sub_100113398();
  if (v0 - qword_100984788 < 0x7D0)
    sub_10004A9EC((uint64_t)sub_1001A27AC, 0, (unsigned __int16)(2099 - (v0 - qword_100984788)) / 0x64u, &dword_100984790);
  else
    sub_100113FC4();
}

void sub_1001A2810()
{
  if (dword_100984790)
  {
    sub_100049F6C(dword_100984790);
    dword_100984790 = 0;
    sub_100113FC4();
  }
  qword_100984788 = 0;
}

uint64_t sub_1001A2908()
{
  uint64_t v0;
  mach_port_t v1;
  uint64_t v2;
  IONotificationPort *v3;
  __CFRunLoopSource *RunLoopSource;
  __CFRunLoop *Current;
  const __CFDictionary *v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  io_service_t v16;
  NSObject *v17;
  NSObject *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  NSObject *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  io_iterator_t notification;
  uint8_t buf[4];
  const char *v36;

  if ((byte_100984798 & 1) != 0)
    return 0;
  v1 = dword_1009847B0;
  if (dword_1009847B0)
    goto LABEL_4;
  notification = 0;
  v3 = IONotificationPortCreate(kIOMainPortDefault);
  RunLoopSource = IONotificationPortGetRunLoopSource(v3);
  Current = CFRunLoopGetCurrent();
  CFRunLoopAddSource(Current, RunLoopSource, kCFRunLoopDefaultMode);
  v6 = IOServiceNameMatching("AppleBTHci");
  v7 = IOServiceAddMatchingNotification(v3, "IOServiceFirstMatch", v6, (IOServiceMatchingCallback)sub_1001A3B54, Current, &notification);
  if ((_DWORD)v7)
  {
    v0 = v7;
    if (qword_1009847A0 != -1)
      dispatch_once(&qword_1009847A0, &stru_10091DB40);
    v8 = qword_1009847A8;
    if (os_log_type_enabled((os_log_t)qword_1009847A8, OS_LOG_TYPE_ERROR))
      sub_1006D3490(v0, v8, v9, v10, v11, v12, v13, v14);
  }
  else
  {
    v16 = IOIteratorNext(notification);
    for (dword_1009847B4 = v16; !v16; dword_1009847B4 = v16)
    {
      if (qword_1009847A0 != -1)
        dispatch_once(&qword_1009847A0, &stru_10091DB80);
      v17 = qword_1009847A8;
      if (os_log_type_enabled((os_log_t)qword_1009847A8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136315138;
        v36 = "AppleBTHci";
        _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "applebt_hci_connect: Couldn't find %s service, waiting for first match\n", buf, 0xCu);
      }
      CFRunLoopRun();
      v16 = IOIteratorNext(notification);
    }
    v0 = IOServiceOpen(v16, mach_task_self_, 0, (io_connect_t *)&dword_1009847B0);
    if ((_DWORD)v0)
    {
      if (qword_1009847A0 != -1)
        dispatch_once(&qword_1009847A0, &stru_10091DBC0);
      v18 = qword_1009847A8;
      if (os_log_type_enabled((os_log_t)qword_1009847A8, OS_LOG_TYPE_ERROR))
        sub_1006D342C(v0, v18, v19, v20, v21, v22, v23, v24);
    }
  }
  CFRunLoopRemoveSource(Current, RunLoopSource, kCFRunLoopDefaultMode);
  IONotificationPortDestroy(v3);
  IOObjectRelease(notification);
  if (qword_1009847A0 != -1)
    dispatch_once(&qword_1009847A0, &stru_10091DC00);
  v25 = qword_1009847A8;
  if (os_log_type_enabled((os_log_t)qword_1009847A8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136315138;
    v36 = "AppleBTHci";
    _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "applebt_hci_connect: Service %s connected!\n", buf, 0xCu);
  }
  if (!(_DWORD)v0)
  {
    v1 = dword_1009847B0;
LABEL_4:
    v2 = IOConnectCallMethod(v1, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    if ((_DWORD)v2)
    {
      v0 = v2;
      if (qword_1009847A0 != -1)
        dispatch_once(&qword_1009847A0, &stru_10091D700);
      if (os_log_type_enabled((os_log_t)qword_1009847A8, OS_LOG_TYPE_ERROR))
        sub_1006D3360();
    }
    else
    {
      if (qword_1009847A0 != -1)
        dispatch_once(&qword_1009847A0, &stru_10091D740);
      v15 = qword_1009847A8;
      if (os_log_type_enabled((os_log_t)qword_1009847A8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136315138;
        v36 = "AppleBTHci";
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "applebt_hci_open: Service %s opened!\n", buf, 0xCu);
      }
      v0 = 0;
      byte_100984798 = 1;
    }
    return v0;
  }
  if (qword_1009847A0 != -1)
    dispatch_once(&qword_1009847A0, &stru_10091D6C0);
  v26 = qword_1009847A8;
  if (os_log_type_enabled((os_log_t)qword_1009847A8, OS_LOG_TYPE_ERROR))
    sub_1006D33C8(v0, v26, v27, v28, v29, v30, v31, v32);
  return v0;
}

void sub_1001A2D7C(id a1)
{
  qword_1009847A8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_1001A2DA8(id a1)
{
  qword_1009847A8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

const char *sub_1001A2DD4(int a1)
{
  const char *result;

  if (a1 > -536870182)
  {
    if (a1 > -536870161)
    {
      switch(a1)
      {
        case -536870160:
          return "kIOReturnNotFound";
        case 0:
          return "kIOReturnSuccess";
        case 5:
          return "KERN_FAILURE";
      }
    }
    else
    {
      switch(a1)
      {
        case -536870181:
          return "kIOReturnNoSpace";
        case -536870167:
          return "kIOReturnDeviceError";
        case -536870165:
          return "kIOReturnAborted";
      }
    }
    return "UNKNOWN";
  }
  if (a1 <= -536870199)
  {
    if (a1 == -536870211)
      return "kIOReturnNoMemory";
    if (a1 == -536870206)
      return "kIOReturnBadArgument";
    return "UNKNOWN";
  }
  switch(a1)
  {
    case -536870198:
      result = "kIOReturnIOError";
      break;
    case -536870197:
    case -536870196:
      return "UNKNOWN";
    case -536870195:
      result = "kIOReturnNotOpen";
      break;
    case -536870194:
      result = "kIOReturnNotReadable";
      break;
    case -536870193:
      result = "kIOReturnNotWritable";
      break;
    default:
      if (a1 != -536870185)
        return "UNKNOWN";
      result = "kIOReturnOffline";
      break;
  }
  return result;
}

void sub_1001A2F54(id a1)
{
  qword_1009847A8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

uint64_t sub_1001A2F80()
{
  uint64_t v0;
  NSObject *v1;
  uint8_t buf[4];
  const char *v4;

  if ((byte_100984798 & 1) != 0)
  {
    byte_100984798 = 0;
    v0 = IOConnectCallMethod(dword_1009847B0, 1u, 0, 0, 0, 0, 0, 0, 0, 0);
    if ((_DWORD)v0)
    {
      if (qword_1009847A0 != -1)
        dispatch_once(&qword_1009847A0, &stru_10091D7C0);
      if (os_log_type_enabled((os_log_t)qword_1009847A8, OS_LOG_TYPE_ERROR))
        sub_1006D34F4();
    }
    IOServiceClose(dword_1009847B0);
    dword_1009847B0 = 0;
    IOObjectRelease(dword_1009847B4);
    dword_1009847B4 = 0;
    if (qword_1009847A0 != -1)
      dispatch_once(&qword_1009847A0, &stru_10091D800);
    v1 = qword_1009847A8;
    if (os_log_type_enabled((os_log_t)qword_1009847A8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315138;
      v4 = "AppleBTHci";
      _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "applebt_hci_close: Service %s closed and disconnected!\n", buf, 0xCu);
    }
  }
  else
  {
    if (qword_1009847A0 != -1)
      dispatch_once(&qword_1009847A0, &stru_10091D780);
    if (os_log_type_enabled((os_log_t)qword_1009847A8, OS_LOG_TYPE_ERROR))
      sub_1006D355C();
    return 5;
  }
  return v0;
}

void sub_1001A3158(id a1)
{
  qword_1009847A8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_1001A3184(id a1)
{
  qword_1009847A8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_1001A31B0(id a1)
{
  qword_1009847A8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

uint64_t sub_1001A31DC()
{
  uint64_t v0;
  NSObject *v1;
  uint8_t buf[16];

  if ((byte_100984798 & 1) != 0)
  {
    v0 = IOConnectCallMethod(dword_1009847B0, 4u, 0, 0, 0, 0, 0, 0, 0, 0);
    if ((_DWORD)v0)
    {
      if (qword_1009847A0 != -1)
        dispatch_once(&qword_1009847A0, &stru_10091D880);
      if (!os_log_type_enabled((os_log_t)qword_1009847A8, OS_LOG_TYPE_ERROR))
        goto LABEL_9;
      sub_1006D3588();
    }
    if (qword_1009847A0 != -1)
      dispatch_once(&qword_1009847A0, &stru_10091D8C0);
LABEL_9:
    v1 = qword_1009847A8;
    if (os_log_type_enabled((os_log_t)qword_1009847A8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "applebt_hci_transport_reset: HCI Transport was reset!\n", buf, 2u);
    }
    return v0;
  }
  if (qword_1009847A0 != -1)
    dispatch_once(&qword_1009847A0, &stru_10091D840);
  if (os_log_type_enabled((os_log_t)qword_1009847A8, OS_LOG_TYPE_ERROR))
    sub_1006D35F0();
  return 5;
}

void sub_1001A3348(id a1)
{
  qword_1009847A8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_1001A3374(id a1)
{
  qword_1009847A8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_1001A33A0(id a1)
{
  qword_1009847A8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

uint64_t sub_1001A33CC(int a1, unsigned __int8 *inputStruct)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned __int8 *i;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  NSObject *v15;
  const char *v16;
  uint32_t v17;
  NSObject *v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  int v23;
  int v24;
  const char *v25;
  uint64_t v26;
  uint8_t buf[4];
  int v28;
  __int16 v29;
  int v30;
  __int16 v31;
  const char *v32;
  _OWORD outputStruct[5];
  uint64_t v34;

  if ((byte_100984798 & 1) != 0)
  {
    v34 = 0;
    memset(outputStruct, 0, sizeof(outputStruct));
    v26 = 8 * a1;
    v4 = IOConnectCallMethod(dword_1009847B0, 2u, 0, 0, inputStruct, 16 * a1, 0, 0, outputStruct, (size_t *)&v26);
    if ((_DWORD)v4)
    {
      v5 = v4;
      if (qword_1009847A0 != -1)
        dispatch_once(&qword_1009847A0, &stru_10091D940);
      if (os_log_type_enabled((os_log_t)qword_1009847A8, OS_LOG_TYPE_ERROR))
        sub_1006D361C();
      return v5;
    }
    if (a1 < 1)
      return 0;
    v5 = 0;
    v7 = a1;
    v8 = inputStruct + 1;
    for (i = (unsigned __int8 *)outputStruct + 4; ; i += 8)
    {
      v10 = *((_DWORD *)i - 1);
      if (v10)
        break;
LABEL_30:
      v8 += 16;
      if (!--v7)
        return v5;
    }
    if (v10 == -536870181)
    {
      if (qword_1009847A0 != -1)
        dispatch_once(&qword_1009847A0, &stru_10091D9C0);
      v18 = qword_1009847A8;
      if (os_log_type_enabled((os_log_t)qword_1009847A8, OS_LOG_TYPE_DEFAULT))
      {
        v19 = *(v8 - 1);
        v20 = *i;
        v21 = *v8;
        *(_DWORD *)buf = 67109632;
        v28 = v19;
        v29 = 1024;
        v30 = v20;
        v31 = 1024;
        LODWORD(v32) = v21;
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "applebt_hci_write: write to discardable pipe %d failed with no space, written %d out of %d packets\n", buf, 0x14u);
      }
      goto LABEL_30;
    }
    if (v10 == -536870198)
    {
      if (qword_1009847A0 != -1)
        dispatch_once(&qword_1009847A0, &stru_10091D980);
      v11 = qword_1009847A8;
      if (!os_log_type_enabled((os_log_t)qword_1009847A8, OS_LOG_TYPE_ERROR))
        goto LABEL_29;
      v12 = *(v8 - 1);
      v13 = *i;
      v14 = *v8;
      *(_DWORD *)buf = 67109632;
      v28 = v12;
      v29 = 1024;
      v30 = v13;
      v31 = 1024;
      LODWORD(v32) = v14;
      v15 = v11;
      v16 = "applebt_hci_write: write to non-discardable pipe %d failed with no space, written %d out of %d packets\n";
      v17 = 20;
    }
    else
    {
      if (qword_1009847A0 != -1)
        dispatch_once(&qword_1009847A0, &stru_10091DA00);
      v22 = qword_1009847A8;
      if (!os_log_type_enabled((os_log_t)qword_1009847A8, OS_LOG_TYPE_ERROR))
        goto LABEL_29;
      v23 = *(v8 - 1);
      v24 = *((_DWORD *)i - 1);
      v25 = sub_1001A2DD4(v24);
      *(_DWORD *)buf = 67109634;
      v28 = v23;
      v29 = 1024;
      v30 = v24;
      v31 = 2080;
      v32 = v25;
      v15 = v22;
      v16 = "applebt_hci_write: write to pipe %d failed with (0x%08X, %s)\n";
      v17 = 24;
    }
    _os_log_error_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, v16, buf, v17);
LABEL_29:
    v5 = 5;
    goto LABEL_30;
  }
  if (qword_1009847A0 != -1)
    dispatch_once(&qword_1009847A0, &stru_10091D900);
  if (os_log_type_enabled((os_log_t)qword_1009847A8, OS_LOG_TYPE_ERROR))
    sub_1006D3684();
  return 5;
}

void sub_1001A3770(id a1)
{
  qword_1009847A8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_1001A379C(id a1)
{
  qword_1009847A8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_1001A37C8(id a1)
{
  qword_1009847A8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_1001A37F4(id a1)
{
  qword_1009847A8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_1001A3820(id a1)
{
  qword_1009847A8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

uint64_t sub_1001A384C(int a1, void *inputStruct, void *outputStruct)
{
  size_t v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  uint8_t buf[8];
  uint64_t v11;

  if ((byte_100984798 & 1) != 0)
  {
    v11 = 8 * a1;
    v5 = 16 * a1;
    while (1)
    {
      v6 = IOConnectCallMethod(dword_1009847B0, 3u, 0, 0, inputStruct, v5, 0, 0, outputStruct, (size_t *)&v11);
      if ((_DWORD)v6 != -536870165)
        break;
      if (qword_1009847A0 != -1)
        dispatch_once(&qword_1009847A0, &stru_10091DAC0);
      v7 = qword_1009847A8;
      if (os_log_type_enabled((os_log_t)qword_1009847A8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "applebt_hci_read: method kAppleBTHciRead was aborted by signal! Read again\n", buf, 2u);
      }
    }
    v8 = v6;
    if ((_DWORD)v6)
    {
      if (qword_1009847A0 != -1)
        dispatch_once(&qword_1009847A0, &stru_10091DA80);
      if (os_log_type_enabled((os_log_t)qword_1009847A8, OS_LOG_TYPE_ERROR))
        sub_1006D36B0();
    }
  }
  else
  {
    if (qword_1009847A0 != -1)
      dispatch_once(&qword_1009847A0, &stru_10091DA40);
    if (os_log_type_enabled((os_log_t)qword_1009847A8, OS_LOG_TYPE_ERROR))
      sub_1006D3718();
    return 5;
  }
  return v8;
}

void sub_1001A3A04(id a1)
{
  qword_1009847A8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_1001A3A30(id a1)
{
  qword_1009847A8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_1001A3A5C(id a1)
{
  qword_1009847A8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

CFTypeRef sub_1001A3A88()
{
  if (dword_1009847B4)
    return IORegistryEntrySearchCFProperty(dword_1009847B4, "IODeviceTree", CFSTR("pipes"), kCFAllocatorDefault, 1u);
  if (qword_1009847A0 != -1)
    dispatch_once(&qword_1009847A0, &stru_10091DB00);
  if (os_log_type_enabled((os_log_t)qword_1009847A8, OS_LOG_TYPE_ERROR))
    sub_1006D3744();
  return 0;
}

void sub_1001A3B28(id a1)
{
  qword_1009847A8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_1001A3B54(__CFRunLoop *a1)
{
  NSObject *v2;
  uint8_t v3[16];

  if (qword_1009847A0 != -1)
    dispatch_once(&qword_1009847A0, &stru_10091DC40);
  v2 = qword_1009847A8;
  if (os_log_type_enabled((os_log_t)qword_1009847A8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "DeviceFoundCB: releasing waiting thread\n", v3, 2u);
  }
  CFRunLoopStop(a1);
}

void sub_1001A3BE8(id a1)
{
  qword_1009847A8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_1001A3C14(id a1)
{
  qword_1009847A8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_1001A3C40(id a1)
{
  qword_1009847A8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_1001A3C6C(id a1)
{
  qword_1009847A8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_1001A3C98(id a1)
{
  qword_1009847A8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

const char *sub_1001A3CDC(int a1)
{
  return sub_1001A2DD4(a1);
}

uint64_t sub_1001A3CE4()
{
  memcpy(&word_1009847B8, &unk_10073A898, 0x124uLL);
  off_1009848E0 = 0;
  byte_1009848E8 = 0;
  return 0;
}

uint64_t sub_1001A3D20(uint64_t a1, unsigned int a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t result;
  char v7;
  char *v8;
  uint64_t v9;
  NSObject *v10;

  if (!a1 || !a2)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c");
  if (a2 <= 2)
  {
    sub_100253460();
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c");
  }
  if (a2 == 3)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c");
  v4 = *(unsigned __int8 *)(a1 + 3);
  if (a2 - 4 == v4)
  {
    v5 = *(unsigned __int16 *)(a1 + 1);
    if (v5 > 0xC3B)
    {
      switch(*(_WORD *)(a1 + 1))
      {
        case 0xC3C:
          if (!*(_BYTE *)(a1 + 3))
            sub_100253460();
          if (a2 <= 4)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c");
          result = 0;
          byte_1009847CE = *(_BYTE *)(a1 + 4);
          break;
        case 0xC3D:
        case 0xC40:
        case 0xC41:
        case 0xC42:
        case 0xC44:
        case 0xC46:
        case 0xC48:
LABEL_113:
          if (sub_10005549C())
          {
            sub_100054530("OI_HCIParmCache, unknown opcode 0x%x", v5);
            v10 = sub_1000544A0(0x2Eu);
            if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
              sub_1006CE7A4();
          }
          result = 105;
          break;
        case 0xC3E:
          if (!*(_BYTE *)(a1 + 3))
            sub_100253460();
          if (a2 <= 4)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c");
          result = 0;
          byte_1009847CF = *(_BYTE *)(a1 + 4);
          break;
        case 0xC3F:
          if (v4 <= 9)
            sub_100253460();
          if (a2 - 14 >= 0xFFFFFFF6)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c");
          result = 0;
          v9 = *(_QWORD *)(a1 + 4);
          word_1009847DC = *(_WORD *)(a1 + 12);
          qword_1009847D4 = v9;
          break;
        case 0xC43:
          if (!*(_BYTE *)(a1 + 3))
            sub_100253460();
          if (a2 <= 4)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c");
          result = 0;
          byte_1009847D0 = *(_BYTE *)(a1 + 4);
          break;
        case 0xC45:
          if (!*(_BYTE *)(a1 + 3))
            sub_100253460();
          if (a2 <= 4)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c");
          result = 0;
          byte_1009847D1 = *(_BYTE *)(a1 + 4);
          break;
        case 0xC47:
          if (!*(_BYTE *)(a1 + 3))
            sub_100253460();
          if (a2 <= 4)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c");
          result = 0;
          byte_1009847D2 = *(_BYTE *)(a1 + 4);
          break;
        case 0xC49:
          if (!*(_BYTE *)(a1 + 3))
            sub_100253460();
          if (a2 <= 4)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c");
          result = 0;
          byte_1009847D3 = *(_BYTE *)(a1 + 4);
          break;
        default:
          switch(*(_WORD *)(a1 + 1))
          {
            case 0xC52:
              if (v4 <= 0xF0)
                sub_100253460();
              if (a2 - 245 >= 0xFFFFFF0F)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c");
              memmove(&byte_1009847E0, (const void *)(a1 + 4), 0xF1uLL);
              result = 0;
              break;
            case 0xC56:
              if (!*(_BYTE *)(a1 + 3))
                sub_100253460();
              if (a2 <= 4)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c");
              result = 0;
              byte_1009847DE = *(_BYTE *)(a1 + 4);
              break;
            case 0xC59:
              if (!*(_BYTE *)(a1 + 3))
                sub_100253460();
              if (a2 <= 4)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c");
              result = 0;
              v7 = *(_BYTE *)(a1 + 4);
              v8 = &byte_1009848DA;
              goto LABEL_107;
            case 0xC5B:
              if (!*(_BYTE *)(a1 + 3))
                sub_100253460();
              if (a2 <= 4)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c");
              result = 0;
              byte_1009847DF = *(_BYTE *)(a1 + 4);
              break;
            default:
              goto LABEL_113;
          }
          break;
      }
    }
    else
    {
      switch(*(_WORD *)(a1 + 1))
      {
        case 0xC16:
          if (v4 <= 1)
            sub_100253460();
          if (a2 <= 5)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c");
          result = 0;
          word_1009847B8 = *(_WORD *)(a1 + 4);
          return result;
        case 0xC17:
        case 0xC19:
        case 0xC1B:
        case 0xC1D:
        case 0xC1F:
        case 0xC21:
        case 0xC23:
        case 0xC25:
        case 0xC27:
        case 0xC28:
        case 0xC29:
        case 0xC2B:
        case 0xC2D:
        case 0xC2E:
          goto LABEL_113;
        case 0xC18:
          if (v4 <= 1)
            sub_100253460();
          if (a2 <= 5)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c");
          result = 0;
          word_1009847BC = *(_WORD *)(a1 + 4);
          return result;
        case 0xC1A:
          if (!*(_BYTE *)(a1 + 3))
            sub_100253460();
          if (a2 <= 4)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c");
          result = 0;
          byte_1009847C8 = *(_BYTE *)(a1 + 4);
          return result;
        case 0xC1C:
          if (v4 <= 3)
            sub_100253460();
          if (a2 <= 5)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c");
          word_1009847BE = *(_WORD *)(a1 + 4);
          if (a2 <= 7)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c");
          result = 0;
          word_1009847C0 = *(_WORD *)(a1 + 6);
          return result;
        case 0xC1E:
          if (v4 <= 3)
            sub_100253460();
          if (a2 <= 5)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c");
          word_1009847C2 = *(_WORD *)(a1 + 4);
          if (a2 <= 7)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c");
          result = 0;
          word_1009847C4 = *(_WORD *)(a1 + 6);
          return result;
        case 0xC20:
          if (!*(_BYTE *)(a1 + 3))
            sub_100253460();
          if (a2 <= 4)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c");
          result = 0;
          byte_1009847C9 = *(_BYTE *)(a1 + 4);
          return result;
        case 0xC22:
          if (!*(_BYTE *)(a1 + 3))
            sub_100253460();
          if (a2 <= 4)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c");
          result = 0;
          byte_1009847CA = *(_BYTE *)(a1 + 4);
          return result;
        case 0xC24:
          if (v4 <= 2)
            sub_100253460();
          if (a2 <= 6)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c");
          result = 0;
          v8 = &byte_1009848D1;
          dword_1009848D4 = *(unsigned __int16 *)(a1 + 4) | (*(unsigned __int8 *)(a1 + 6) << 16);
          goto LABEL_108;
        case 0xC26:
          if (v4 <= 1)
            sub_100253460();
          if (a2 <= 5)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c");
          result = 0;
          word_1009847BA = *(_WORD *)(a1 + 4);
          return result;
        case 0xC2A:
          if (!*(_BYTE *)(a1 + 3))
            sub_100253460();
          if (a2 <= 4)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c");
          result = 0;
          byte_1009847CB = *(_BYTE *)(a1 + 4);
          return result;
        case 0xC2C:
          if (!*(_BYTE *)(a1 + 3))
            sub_100253460();
          if (a2 <= 4)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c");
          result = 0;
          byte_1009847CC = *(_BYTE *)(a1 + 4);
          return result;
        case 0xC2F:
          if (!*(_BYTE *)(a1 + 3))
            sub_100253460();
          if (a2 <= 4)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c");
          result = 0;
          byte_1009847CD = *(_BYTE *)(a1 + 4);
          return result;
        default:
          if (v5 == 2063)
          {
            if (!*(_BYTE *)(a1 + 3))
              sub_100253460();
            if (a2 <= 4)
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c");
            result = 0;
            word_1009847C6 = *(unsigned __int8 *)(a1 + 4);
            return result;
          }
          if (v5 != 3082)
            goto LABEL_113;
          if (!*(_BYTE *)(a1 + 3))
            sub_100253460();
          if (a2 <= 4)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c");
          result = 0;
          v7 = *(_BYTE *)(a1 + 4);
          v8 = &byte_1009848D8;
          break;
      }
LABEL_107:
      v8[1] = v7;
LABEL_108:
      *v8 = 1;
    }
  }
  else
  {
    sub_100253460();
    return 101;
  }
  return result;
}

uint64_t sub_1001A453C(void *a1)
{
  if (!a1)
    sub_100253460();
  off_1009848E0 = a1;
  byte_1009848E8 = 1;
  sub_100252B54(off_10091DC60);
  return 0;
}

void sub_1001A4584(uint64_t a1)
{
  if (byte_1009848E8 == 1)
    sub_100252D38((void (**)(uint64_t))off_10091DC60, a1);
}

uint64_t sub_1001A45A8()
{
  uint64_t (*v0)(void);
  uint64_t result;

  byte_1009848E8 = 0;
  v0 = (uint64_t (*)(void))off_1009848E0;
  off_1009848E0 = 0;
  if (v0)
    return v0();
  return result;
}

void sub_1001A45C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;

  if (byte_1009848D1)
  {
    byte_100998FCC = 1;
    v8 = sub_10004C9BC(81, (uint64_t (*)())sub_1001A5708, a3, a4, a5, a6, a7, a8, dword_1009848D4);
    byte_100998FCC = 0;
    if ((_DWORD)v8)
    {
      v9 = v8;
      if ((_DWORD)v8 != 628 && sub_10005549C())
      {
        sub_100054530("OI_HCICMD_WriteClassofDevice failed %!", v9);
        v10 = sub_1000544A0(0x2Eu);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      sub_1001A5708(v9);
    }
  }
  else
  {
    sub_1001A5708(0);
  }
}

void sub_1001A4694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;

  if (byte_1009848D8)
  {
    byte_100998FCC = 1;
    v8 = sub_10004C9BC(59, (uint64_t (*)())sub_1001A5708, a3, a4, a5, a6, a7, a8, byte_1009848D9);
    byte_100998FCC = 0;
    if ((_DWORD)v8)
    {
      v9 = v8;
      if ((_DWORD)v8 != 628 && sub_10005549C())
      {
        sub_100054530("OI_HCICMD_WritePINType failed %!", v9);
        v10 = sub_1000544A0(0x2Eu);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      sub_1001A5708(v9);
    }
  }
  else
  {
    sub_1001A5708(0);
  }
}

void sub_1001A4760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;

  byte_100998FCC = 1;
  v8 = sub_10004C9BC(67, (uint64_t (*)())sub_1001A5708, a3, a4, a5, a6, a7, a8, (unsigned __int16)word_1009847B8);
  byte_100998FCC = 0;
  if ((_DWORD)v8)
  {
    v9 = v8;
    if ((_DWORD)v8 != 628 && sub_10005549C())
    {
      sub_100054530("OI_HCICMD_WriteConnectionAcceptTimeout failed %!", v9);
      v10 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    sub_1001A5708(v9);
  }
}

void sub_1001A480C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;

  byte_100998FCC = 1;
  v8 = sub_10004C9BC(69, (uint64_t (*)())sub_1001A5708, a3, a4, a5, a6, a7, a8, (unsigned __int16)word_1009847BC);
  byte_100998FCC = 0;
  if ((_DWORD)v8)
  {
    v9 = v8;
    if ((_DWORD)v8 != 628 && sub_10005549C())
    {
      sub_100054530("OI_HCICMD_WritePageTimeout failed %!", v9);
      v10 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    sub_1001A5708(v9);
  }
}

void sub_1001A48B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;

  byte_100998FCC = 1;
  v8 = sub_10004C9BC(71, (uint64_t (*)())sub_1001A5708, a3, a4, a5, a6, a7, a8, byte_1009847C8);
  byte_100998FCC = 0;
  if ((_DWORD)v8)
  {
    v9 = v8;
    if ((_DWORD)v8 != 628 && sub_10005549C())
    {
      sub_100054530("OI_HCICMD_WriteScanEnable failed %!", v9);
      v10 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    sub_1001A5708(v9);
  }
}

void sub_1001A4964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;

  byte_100998FCC = 1;
  v11 = (unsigned __int16)word_1009847C0;
  v8 = sub_10004C9BC(73, (uint64_t (*)())sub_1001A5708, a3, a4, a5, a6, a7, a8, (unsigned __int16)word_1009847BE);
  byte_100998FCC = 0;
  if ((_DWORD)v8)
  {
    v9 = v8;
    if ((_DWORD)v8 != 628 && sub_10005549C())
    {
      sub_100054530("OI_HCICMD_WritePageScanActivity failed %!", v9, v11);
      v10 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    sub_1001A5708(v9);
  }
}

void sub_1001A4A18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;

  byte_100998FCC = 1;
  v11 = (unsigned __int16)word_1009847C4;
  v8 = sub_10004C9BC(75, (uint64_t (*)())sub_1001A5708, a3, a4, a5, a6, a7, a8, (unsigned __int16)word_1009847C2);
  byte_100998FCC = 0;
  if ((_DWORD)v8)
  {
    v9 = v8;
    if ((_DWORD)v8 != 628 && sub_10005549C())
    {
      sub_100054530("OI_HCICMD_WriteInquiryScanActivity failed %!", v9, v11);
      v10 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    sub_1001A5708(v9);
  }
}

void sub_1001A4ACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;

  byte_100998FCC = 1;
  v8 = sub_10004C9BC(77, (uint64_t (*)())sub_1001A5708, a3, a4, a5, a6, a7, a8, byte_1009847C9);
  byte_100998FCC = 0;
  if ((_DWORD)v8)
  {
    v9 = v8;
    if ((_DWORD)v8 != 628 && sub_10005549C())
    {
      sub_100054530("OI_HCICMD_WriteAuthenticationEnable failed %!", v9);
      v10 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    sub_1001A5708(v9);
  }
}

void sub_1001A4B78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;

  byte_100998FCC = 1;
  v8 = sub_10004C9BC(79, (uint64_t (*)())sub_1001A5708, a3, a4, a5, a6, a7, a8, byte_1009847CA);
  byte_100998FCC = 0;
  if ((_DWORD)v8)
  {
    v9 = v8;
    if ((_DWORD)v8 != 628 && sub_10005549C())
    {
      sub_100054530("OI_HCICMD_WriteEncryptionMode failed %!", v9);
      v10 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    sub_1001A5708(v9);
  }
}

void sub_1001A4C24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;

  byte_100998FCC = 1;
  v8 = sub_10004C9BC(83, (uint64_t (*)())sub_1001A5708, a3, a4, a5, a6, a7, a8, (unsigned __int16)word_1009847BA);
  byte_100998FCC = 0;
  if ((_DWORD)v8)
  {
    v9 = v8;
    if ((_DWORD)v8 != 628 && sub_10005549C())
    {
      sub_100054530("OI_HCICMD_WriteVoiceSetting failed %!", v9);
      v10 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    sub_1001A5708(v9);
  }
}

void sub_1001A4CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;

  byte_100998FCC = 1;
  v8 = sub_10004C9BC(87, (uint64_t (*)())sub_1001A5708, a3, a4, a5, a6, a7, a8, byte_1009847CB);
  byte_100998FCC = 0;
  if ((_DWORD)v8)
  {
    v9 = v8;
    if ((_DWORD)v8 != 628 && sub_10005549C())
    {
      sub_100054530("OI_HCICMD_WriteNumBroadcastRetransmissions failed %!", v9);
      v10 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    sub_1001A5708(v9);
  }
}

void sub_1001A4D7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;

  byte_100998FCC = 1;
  v8 = sub_10004C9BC(89, (uint64_t (*)())sub_1001A5708, a3, a4, a5, a6, a7, a8, byte_1009847CC);
  byte_100998FCC = 0;
  if ((_DWORD)v8)
  {
    v9 = v8;
    if ((_DWORD)v8 != 628 && sub_10005549C())
    {
      sub_100054530("OI_HCICMD_WriteHoldModeActivity failed %!", v9);
      v10 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    sub_1001A5708(v9);
  }
}

void sub_1001A4E28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;

  byte_100998FCC = 1;
  v8 = sub_10004C9BC(92, (uint64_t (*)())sub_1001A5708, a3, a4, a5, a6, a7, a8, byte_1009847CD);
  byte_100998FCC = 0;
  if ((_DWORD)v8)
  {
    v9 = v8;
    if ((_DWORD)v8 != 628 && sub_10005549C())
    {
      sub_100054530("OI_HCICMD_WriteSCOFlowControlEnable failed %!", v9);
      v10 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    sub_1001A5708(v9);
  }
}

void sub_1001A4ED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;

  byte_100998FCC = 1;
  v8 = sub_10004C9BC(102, (uint64_t (*)())sub_1001A5708, a3, a4, a5, a6, a7, a8, byte_1009847CE);
  byte_100998FCC = 0;
  if ((_DWORD)v8)
  {
    v9 = v8;
    if ((_DWORD)v8 != 628 && sub_10005549C())
    {
      sub_100054530("OI_HCICMD_WritePageScanPeriodMode failed %!", v9);
      v10 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    sub_1001A5708(v9);
  }
}

void sub_1001A4F80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;

  byte_100998FCC = 1;
  v8 = sub_10004C9BC(104, (uint64_t (*)())sub_1001A5708, a3, a4, a5, a6, a7, a8, byte_1009847CF);
  byte_100998FCC = 0;
  if ((_DWORD)v8)
  {
    v9 = v8;
    if ((_DWORD)v8 != 628 && sub_10005549C())
    {
      sub_100054530("OI_HCICMD_WritePageScanMode failed %!", v9);
      v10 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    sub_1001A5708(v9);
  }
}

void sub_1001A502C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;

  byte_100998FCC = 1;
  v8 = sub_10004C9BC(107, (uint64_t (*)())sub_1001A5708, a3, a4, a5, a6, a7, a8, byte_1009847D0);
  byte_100998FCC = 0;
  if ((_DWORD)v8)
  {
    v9 = v8;
    if ((_DWORD)v8 != 628 && sub_10005549C())
    {
      sub_100054530("OI_HCICMD_WriteInquiryScanType failed %!", v9);
      v10 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    sub_1001A5708(v9);
  }
}

void sub_1001A50D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;

  byte_100998FCC = 1;
  v8 = sub_10004C9BC(109, (uint64_t (*)())sub_1001A5708, a3, a4, a5, a6, a7, a8, byte_1009847D1);
  byte_100998FCC = 0;
  if ((_DWORD)v8)
  {
    v9 = v8;
    if ((_DWORD)v8 != 628 && sub_10005549C())
    {
      sub_100054530("OI_HCICMD_WriteInquiryMode failed %!", v9);
      v10 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    sub_1001A5708(v9);
  }
}

void sub_1001A5184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;

  byte_100998FCC = 1;
  v8 = sub_10004C9BC(111, (uint64_t (*)())sub_1001A5708, a3, a4, a5, a6, a7, a8, byte_1009847D2);
  byte_100998FCC = 0;
  if ((_DWORD)v8)
  {
    v9 = v8;
    if ((_DWORD)v8 != 628 && sub_10005549C())
    {
      sub_100054530("OI_HCICMD_WritePageScanType failed %!", v9);
      v10 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    sub_1001A5708(v9);
  }
}

void sub_1001A5230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;

  byte_100998FCC = 1;
  v8 = sub_10004C9BC(113, (uint64_t (*)())sub_1001A5708, a3, a4, a5, a6, a7, a8, byte_1009847D3);
  byte_100998FCC = 0;
  if ((_DWORD)v8)
  {
    v9 = v8;
    if ((_DWORD)v8 != 628 && sub_10005549C())
    {
      sub_100054530("OI_HCICMD_WriteAfhChannelAssessmentMode failed %!", v9);
      v10 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    sub_1001A5708(v9);
  }
}

void sub_1001A52DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;

  byte_100998FCC = 1;
  v8 = sub_10004C9BC(51, (uint64_t (*)())sub_1001A5708, a3, a4, a5, a6, a7, a8, (unsigned __int16)word_1009847C6);
  byte_100998FCC = 0;
  if ((_DWORD)v8)
  {
    v9 = v8;
    if ((_DWORD)v8 != 628 && sub_10005549C())
    {
      sub_100054530("OI_HCICMD_WriteDefaultLinkPolicySettings failed %!", v9);
      v10 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    sub_1001A5708(v9);
  }
}

void sub_1001A5388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;

  byte_100998FCC = 1;
  v8 = sub_10004C9BC(105, (uint64_t (*)())sub_1001A5708, a3, a4, a5, a6, a7, a8, (uint64_t)&qword_1009847D4);
  byte_100998FCC = 0;
  if ((_DWORD)v8)
  {
    v9 = v8;
    if ((_DWORD)v8 != 628 && sub_10005549C())
    {
      sub_100054530("OI_HCICMD_SetAfhHostChannelClassification failed %!", v9);
      v10 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    sub_1001A5708(v9);
  }
}

void sub_1001A5434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;

  byte_100998FCC = 1;
  v8 = sub_10004C9BC(118, (uint64_t (*)())sub_1001A5708, a3, a4, a5, a6, a7, a8, byte_1009847DE);
  byte_100998FCC = 0;
  if ((_DWORD)v8)
  {
    v9 = v8;
    if ((_DWORD)v8 != 628 && sub_10005549C())
    {
      sub_100054530("OI_HCICMD_WriteSimplePairingMode failed %!", v9);
      v10 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    sub_1001A5708(v9);
  }
}

void sub_1001A54E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;

  byte_100998FCC = 1;
  v8 = sub_10004C9BC(124, (uint64_t (*)())sub_1001A5708, a3, a4, a5, a6, a7, a8, byte_1009847DF);
  byte_100998FCC = 0;
  if ((_DWORD)v8)
  {
    v9 = v8;
    if ((_DWORD)v8 != 628 && sub_10005549C())
    {
      sub_100054530("OI_HCICMD_WriteDefaultErroneousDataReporting failed %!", v9);
      v10 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    sub_1001A5708(v9);
  }
}

void sub_1001A558C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;

  byte_100998FCC = 1;
  v8 = sub_10004C9BC(115, (uint64_t (*)())sub_1001A5708, a3, a4, a5, a6, a7, a8, byte_1009847E0);
  byte_100998FCC = 0;
  if ((_DWORD)v8)
  {
    v9 = v8;
    if ((_DWORD)v8 != 628 && sub_10005549C())
    {
      sub_100054530("OI_HCICMD_WriteExtendedInquiryResponse failed %!", v9, &unk_1009847E1);
      v10 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    sub_1001A5708(v9);
  }
}

void sub_1001A563C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;

  if (byte_1009848DA)
  {
    byte_100998FCC = 1;
    v8 = sub_10004C9BC(121, (uint64_t (*)())sub_1001A5708, a3, a4, a5, a6, a7, a8, byte_1009848DB);
    byte_100998FCC = 0;
    if ((_DWORD)v8)
    {
      v9 = v8;
      if ((_DWORD)v8 != 628 && sub_10005549C())
      {
        sub_100054530("OI_HCICMD_WriteInquiryResponseTxPowerLevel failed %!", v9);
        v10 = sub_1000544A0(0x2Eu);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      sub_1001A5708(v9);
    }
  }
  else
  {
    sub_1001A5708(0);
  }
}

void sub_1001A5708(uint64_t a1)
{
  NSObject *v2;
  NSObject *v3;
  NSObject *v4;
  NSObject *v5;

  if ((byte_1009848E8 & 1) != 0)
  {
    if ((_DWORD)a1 == 628)
    {
LABEL_19:
      sub_100252CD4((uint64_t)off_10091DC60);
      return;
    }
    if ((_DWORD)a1 == 717)
    {
      if (!sub_10005549C())
        goto LABEL_19;
      sub_100054530("Unsupported command %!, ignoring error", 717);
      v2 = sub_1000544A0(0x2Eu);
      if (!os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
        goto LABEL_19;
      goto LABEL_6;
    }
    if ((a1 - 701) <= 0x44)
    {
      if (!sub_10005549C())
        goto LABEL_19;
      sub_100054530("Assuming unsupported command %!, ignoring error", a1);
      v4 = sub_1000544A0(0x2Eu);
      if (!os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
        goto LABEL_19;
LABEL_6:
      sub_1006CE7A4();
      goto LABEL_19;
    }
    if (!(_DWORD)a1)
      goto LABEL_19;
    if (sub_10005549C())
    {
      sub_100054530("commonRestoreCb %!", a1);
      v5 = sub_1000544A0(0x2Eu);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    sub_100252D38((void (**)(uint64_t))off_10091DC60, a1);
  }
  else if (sub_10005549C())
  {
    sub_100054530("Orphaned parm chache callback");
    v3 = sub_1000544A0(0x2Eu);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
}

void sub_1001A588C(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t *a3)
{
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if ((_DWORD)a1)
  {
    if (sub_10005549C())
    {
      sub_100054530("status %d, Byte 0x%x, hlCb 0x%x", a1, 0, (_DWORD)a2);
      v5 = sub_1000544A0(0x54u);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        sub_1006CEEC0();
    }
    v6 = 0;
    if (a2)
      goto LABEL_6;
    return;
  }
  if (*((_BYTE *)a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 66, "void _BCM_U8EventParser(OI_STATUS, GENERIC_HL_CB, OI_BYTE_STREAM *)");
    goto LABEL_14;
  }
  v7 = *((unsigned __int16 *)a3 + 6);
  if (*((unsigned __int16 *)a3 + 5) <= v7 || *((_BYTE *)a3 + 14) != 1)
LABEL_14:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v8 = *a3;
  *((_WORD *)a3 + 6) = v7 + 1;
  v6 = *(unsigned __int8 *)(v8 + v7);
  if (a2)
LABEL_6:
    a2(a1, v6);
}

void sub_1001A5998(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;

  if (!(_DWORD)a1)
  {
    if (*((_BYTE *)a3 + 15))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 83, "void _BCM_U8_U8EventParser(OI_STATUS, GENERIC_HL_CB, OI_BYTE_STREAM *)");
    }
    else
    {
      v8 = *((unsigned __int16 *)a3 + 5);
      v9 = *((unsigned __int16 *)a3 + 6);
      if (v8 > v9 && *((_BYTE *)a3 + 14) == 1)
      {
        v10 = *a3;
        *((_WORD *)a3 + 6) = v9 + 1;
        if (v8 <= (int)v9 + 1)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        v6 = *(unsigned __int8 *)(v10 + v9);
        *((_WORD *)a3 + 6) = v9 + 2;
        v7 = *(unsigned __int8 *)(v10 + v9 + 1);
        if (a2)
          goto LABEL_6;
        return;
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  if (sub_10005549C())
  {
    sub_100054530("status %d,  Byte 0x%x, Byte1 0x%x, hlCb 0x%x", a1, 0, 0, (_DWORD)a2);
    v5 = sub_1000544A0(0x54u);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_1006CEEC0();
  }
  v6 = 0;
  v7 = 0;
  if (a2)
LABEL_6:
    a2(a1, v6, v7);
}

void sub_1001A5AD4(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  int v12;
  int v13;

  if (!(_DWORD)a1)
  {
    if (*((_BYTE *)a3 + 15))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 122, "void _BCM_U16_U8EventParser(OI_STATUS, GENERIC_HL_CB, OI_BYTE_STREAM *)");
    }
    else
    {
      v8 = *((unsigned __int16 *)a3 + 5);
      v9 = *((unsigned __int16 *)a3 + 6);
      if ((int)(v8 - v9) > 1 && *((_BYTE *)a3 + 14) == 1)
      {
        v10 = *a3;
        v11 = (unsigned __int8 *)(*a3 + v9);
        v12 = *v11;
        v13 = v11[1];
        *((_WORD *)a3 + 6) = v9 + 2;
        if (v8 <= (unsigned __int16)(v9 + 2))
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        v6 = v12 | (v13 << 8);
        *((_WORD *)a3 + 6) = v9 + 3;
        v7 = *(unsigned __int8 *)(v10 + (unsigned __int16)(v9 + 2));
        if (a2)
          goto LABEL_6;
        return;
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  if (sub_10005549C())
  {
    sub_100054530("status %d, ConnectionHandle 0x%x, Byte 0x%x, hlCb 0x%x", a1, 0, 0, (_DWORD)a2);
    v5 = sub_1000544A0(0x54u);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_1006CEEC0();
  }
  v6 = 0;
  v7 = 0;
  if (a2)
LABEL_6:
    a2(a1, v6, v7);
}

void sub_1001A5C24(uint64_t a1, void (*a2)(uint64_t, _QWORD, _QWORD, uint64_t, _QWORD), uint64_t *a3)
{
  NSObject *v5;
  unsigned __int16 v6;
  unsigned __int16 v7;
  uint64_t v8;
  unsigned __int16 v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  int v14;
  int v15;

  if (!(_DWORD)a1)
  {
    if (*((_BYTE *)a3 + 15))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 140, "void _BCM_ProfilingStatsEventParser(OI_STATUS, GENERIC_HL_CB, OI_BYTE_STREAM *)");
    }
    else
    {
      v10 = *((unsigned __int16 *)a3 + 5);
      v11 = *((unsigned __int16 *)a3 + 6);
      if (v10 - (int)v11 > 1 && *((_BYTE *)a3 + 14) == 1)
      {
        v12 = *a3;
        v6 = *(_WORD *)(*a3 + v11);
        *((_WORD *)a3 + 6) = v11 + 2;
        if (v10 - (unsigned __int16)(v11 + 2) <= 1)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        v7 = *(_WORD *)(v12 + (unsigned __int16)(v11 + 2));
        *((_WORD *)a3 + 6) = v11 + 4;
        if (v10 - (unsigned __int16)(v11 + 4) <= 1)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        v13 = (unsigned __int8 *)(v12 + (unsigned __int16)(v11 + 4));
        v14 = *v13;
        v15 = v13[1];
        *((_WORD *)a3 + 6) = v11 + 6;
        if (v10 - (unsigned __int16)(v11 + 6) <= 1)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        v8 = v14 | (v15 << 8);
        v9 = *(_WORD *)(v12 + (unsigned __int16)(v11 + 6));
        *((_WORD *)a3 + 6) = v11 + 8;
        if (a2)
          goto LABEL_6;
        return;
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  if (sub_10005549C())
  {
    sub_100054530("status %!, transmitting %d, receiving %d, sleep %d, others %d", a1, 0, 0, 0, 0);
    v5 = sub_1000544A0(0x54u);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_1006CEEC0();
  }
  v6 = 0;
  v7 = 0;
  v8 = 0;
  v9 = 0;
  if (a2)
LABEL_6:
    a2(a1, v6, v7, v8, v9);
}

uint64_t sub_1001A5DF8(uint64_t a1, uint64_t (*a2)(uint64_t, _DWORD *), uint64_t *a3)
{
  NSObject *v4;
  unsigned int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  uint64_t result;
  uint64_t v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  unsigned int v43;
  unsigned int v44;
  int v45;
  unsigned __int16 v46;
  int v47;
  unsigned __int8 *v48;
  int v49;
  int v50;
  unsigned __int8 *v51;
  int v52;
  int v53;
  int v54;
  unsigned __int8 *v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v77;
  uint64_t v78;
  _DWORD v80[56];
  uint64_t v81;
  uint64_t v82;

  if ((_DWORD)a1)
  {
    if (sub_10005549C())
    {
      sub_100054530("EnhancedProfilingStats VSC failed with status %!", a1);
      v4 = sub_1000544A0(0x54u);
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
        sub_1006CEEC0();
    }
    v5 = 0;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
    v14 = 0;
    v61 = 0;
    v62 = 0;
    v74 = 0;
    v75 = 0;
    v15 = 0;
    v16 = 0;
    v17 = 0;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    v64 = 0;
    v65 = 0;
    v67 = 0;
    v68 = 0;
    v69 = 0;
    v70 = 0;
    v72 = 0;
    v73 = 0;
    v71 = 0;
    v22 = 0;
    v77 = 0;
    v78 = 0;
    v23 = 0;
    v66 = 0;
    v63 = 0;
    v60 = 0;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    v27 = 0;
    v28 = 0;
    v29 = 0;
    v30 = 0;
    result = 0;
    v32 = 0;
    goto LABEL_80;
  }
  if (*((_BYTE *)a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 173, "void _BCM_EnhancedProfilingStatsEventParser(OI_STATUS, GENERIC_HL_CB, OI_BYTE_STREAM *)");
    goto LABEL_85;
  }
  v33 = *((unsigned __int16 *)a3 + 5);
  v34 = *((unsigned __int16 *)a3 + 6);
  if (v33 <= v34 || *((_BYTE *)a3 + 14) != 1)
LABEL_85:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v35 = *a3;
  *((_WORD *)a3 + 6) = v34 + 1;
  if ((int)(v33 - (v34 + 1)) <= 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v5 = *(unsigned __int8 *)(v35 + v34);
  v59 = *(unsigned __int16 *)(v35 + v34 + 1);
  *((_WORD *)a3 + 6) = v34 + 3;
  if ((int)(v33 - (unsigned __int16)(v34 + 3)) <= 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v58 = *(unsigned __int16 *)(v35 + (unsigned __int16)(v34 + 3));
  *((_WORD *)a3 + 6) = v34 + 5;
  if ((int)(v33 - (unsigned __int16)(v34 + 5)) <= 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v8 = *(unsigned __int16 *)(v35 + (unsigned __int16)(v34 + 5));
  *((_WORD *)a3 + 6) = v34 + 7;
  if ((int)(v33 - (unsigned __int16)(v34 + 7)) <= 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v9 = *(unsigned __int16 *)(v35 + (unsigned __int16)(v34 + 7));
  *((_WORD *)a3 + 6) = v34 + 9;
  if ((int)(v33 - (unsigned __int16)(v34 + 9)) <= 3)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v36 = *(_DWORD *)(v35 + (unsigned __int16)(v34 + 9));
  *((_WORD *)a3 + 6) = v34 + 13;
  if ((int)(v33 - (unsigned __int16)(v34 + 13)) <= 3)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v11 = *(_DWORD *)(v35 + (unsigned __int16)(v34 + 13));
  *((_WORD *)a3 + 6) = v34 + 17;
  if ((int)(v33 - (unsigned __int16)(v34 + 17)) <= 3)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v12 = *(_DWORD *)(v35 + (unsigned __int16)(v34 + 17));
  *((_WORD *)a3 + 6) = v34 + 21;
  if ((int)(v33 - (unsigned __int16)(v34 + 21)) <= 3)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v13 = *(_DWORD *)(v35 + (unsigned __int16)(v34 + 21));
  *((_WORD *)a3 + 6) = v34 + 25;
  if ((int)(v33 - (unsigned __int16)(v34 + 25)) <= 3)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v37 = *(_DWORD *)(v35 + (unsigned __int16)(v34 + 25));
  *((_WORD *)a3 + 6) = v34 + 29;
  if ((int)(v33 - (unsigned __int16)(v34 + 29)) <= 3)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v38 = *(_DWORD *)(v35 + (unsigned __int16)(v34 + 29));
  *((_WORD *)a3 + 6) = v34 + 33;
  if ((int)(v33 - (unsigned __int16)(v34 + 33)) <= 3)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v39 = *(_DWORD *)(v35 + (unsigned __int16)(v34 + 33));
  *((_WORD *)a3 + 6) = v34 + 37;
  if ((int)(v33 - (unsigned __int16)(v34 + 37)) <= 3)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v40 = *(_DWORD *)(v35 + (unsigned __int16)(v34 + 37));
  *((_WORD *)a3 + 6) = v34 + 41;
  if ((int)(v33 - (unsigned __int16)(v34 + 41)) <= 3)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v15 = *(_DWORD *)(v35 + (unsigned __int16)(v34 + 41));
  *((_WORD *)a3 + 6) = v34 + 45;
  if ((int)(v33 - (unsigned __int16)(v34 + 45)) <= 3)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v16 = *(_DWORD *)(v35 + (unsigned __int16)(v34 + 45));
  *((_WORD *)a3 + 6) = v34 + 49;
  if ((int)(v33 - (unsigned __int16)(v34 + 49)) <= 3)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v17 = *(_DWORD *)(v35 + (unsigned __int16)(v34 + 49));
  *((_WORD *)a3 + 6) = v34 + 53;
  if ((int)(v33 - (unsigned __int16)(v34 + 53)) <= 3)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v18 = *(_DWORD *)(v35 + (unsigned __int16)(v34 + 53));
  *((_WORD *)a3 + 6) = v34 + 57;
  if ((int)(v33 - (unsigned __int16)(v34 + 57)) <= 3)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v19 = *(_DWORD *)(v35 + (unsigned __int16)(v34 + 57));
  *((_WORD *)a3 + 6) = v34 + 61;
  if ((int)(v33 - (unsigned __int16)(v34 + 61)) <= 3)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v20 = *(_DWORD *)(v35 + (unsigned __int16)(v34 + 61));
  *((_WORD *)a3 + 6) = v34 + 65;
  if ((int)(v33 - (unsigned __int16)(v34 + 65)) <= 3)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v21 = *(_DWORD *)(v35 + (unsigned __int16)(v34 + 65));
  *((_WORD *)a3 + 6) = v34 + 69;
  if ((int)(v33 - (unsigned __int16)(v34 + 69)) <= 3)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v41 = *(_DWORD *)(v35 + (unsigned __int16)(v34 + 69));
  *((_WORD *)a3 + 6) = v34 + 73;
  if ((int)(v33 - (unsigned __int16)(v34 + 73)) <= 3)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v42 = *(_DWORD *)(v35 + (unsigned __int16)(v34 + 73));
  *((_WORD *)a3 + 6) = v34 + 77;
  if ((int)(v33 - (unsigned __int16)(v34 + 77)) <= 3)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v43 = *(_DWORD *)(v35 + (unsigned __int16)(v34 + 77));
  *((_WORD *)a3 + 6) = v34 + 81;
  if ((int)(v33 - (unsigned __int16)(v34 + 81)) <= 3)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  HIDWORD(v75) = v40;
  v44 = *(_DWORD *)(v35 + (unsigned __int16)(v34 + 81));
  *((_WORD *)a3 + 6) = v34 + 85;
  if ((int)(v33 - (unsigned __int16)(v34 + 85)) <= 3)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v45 = *(_DWORD *)(v35 + (unsigned __int16)(v34 + 85));
  *((_WORD *)a3 + 6) = v34 + 89;
  if ((int)(v33 - (unsigned __int16)(v34 + 89)) <= 3)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  LODWORD(v75) = *(_DWORD *)(v35 + (unsigned __int16)(v34 + 89));
  *((_WORD *)a3 + 6) = v34 + 93;
  if ((int)(v33 - (unsigned __int16)(v34 + 93)) <= 3)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  HIDWORD(v74) = *(_DWORD *)(v35 + (unsigned __int16)(v34 + 93));
  *((_WORD *)a3 + 6) = v34 + 97;
  if ((int)(v33 - (unsigned __int16)(v34 + 97)) <= 3)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  LODWORD(v74) = *(_DWORD *)(v35 + (unsigned __int16)(v34 + 97));
  *((_WORD *)a3 + 6) = v34 + 101;
  if ((int)(v33 - (unsigned __int16)(v34 + 101)) <= 3)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  HIDWORD(v73) = *(_DWORD *)(v35 + (unsigned __int16)(v34 + 101));
  *((_WORD *)a3 + 6) = v34 + 105;
  if ((int)(v33 - (unsigned __int16)(v34 + 105)) <= 3)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  LODWORD(v73) = *(_DWORD *)(v35 + (unsigned __int16)(v34 + 105));
  *((_WORD *)a3 + 6) = v34 + 109;
  if ((int)(v33 - (unsigned __int16)(v34 + 109)) <= 3)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  HIDWORD(v72) = *(_DWORD *)(v35 + (unsigned __int16)(v34 + 109));
  *((_WORD *)a3 + 6) = v34 + 113;
  if ((int)(v33 - (unsigned __int16)(v34 + 113)) <= 3)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  LODWORD(v72) = *(_DWORD *)(v35 + (unsigned __int16)(v34 + 113));
  *((_WORD *)a3 + 6) = v34 + 117;
  if ((int)(v33 - (unsigned __int16)(v34 + 117)) <= 3)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  HIDWORD(v71) = *(_DWORD *)(v35 + (unsigned __int16)(v34 + 117));
  *((_WORD *)a3 + 6) = v34 + 121;
  if ((int)(v33 - (unsigned __int16)(v34 + 121)) <= 3)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  LODWORD(v71) = *(_DWORD *)(v35 + (unsigned __int16)(v34 + 121));
  *((_WORD *)a3 + 6) = v34 + 125;
  if ((int)(v33 - (unsigned __int16)(v34 + 125)) <= 3)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  HIDWORD(v70) = *(_DWORD *)(v35 + (unsigned __int16)(v34 + 125));
  *((_WORD *)a3 + 6) = v34 + 129;
  if ((int)(v33 - (unsigned __int16)(v34 + 129)) <= 3)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  LODWORD(v70) = *(_DWORD *)(v35 + (unsigned __int16)(v34 + 129));
  *((_WORD *)a3 + 6) = v34 + 133;
  if ((int)(v33 - (unsigned __int16)(v34 + 133)) <= 3)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  HIDWORD(v68) = v45;
  v69 = __PAIR64__(v43, v44);
  LODWORD(v68) = *(_DWORD *)(v35 + (unsigned __int16)(v34 + 133));
  *((_WORD *)a3 + 6) = v34 + 137;
  if ((int)(v33 - (unsigned __int16)(v34 + 137)) <= 3)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v22 = 0;
  LODWORD(v67) = *(_DWORD *)(v35 + (unsigned __int16)(v34 + 137));
  HIDWORD(v67) = v42;
  v46 = v34 + 141;
  *((_WORD *)a3 + 6) = v34 + 141;
  if (v5 > 0x16)
  {
    v78 = 0;
    v77 = 0;
  }
  else
  {
    v78 = 0;
    v77 = 0;
    if (((1 << v5) & 0x5A0000) != 0)
    {
      if ((int)(v33 - v46) <= 1)
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      v22 = *(unsigned __int16 *)(v35 + (unsigned __int16)(v34 + 141));
      *((_WORD *)a3 + 6) = v34 + 143;
      if ((int)(v33 - (unsigned __int16)(v34 + 143)) <= 1)
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      v47 = *(unsigned __int16 *)(v35 + (unsigned __int16)(v34 + 143));
      *((_WORD *)a3 + 6) = v34 + 145;
      if ((int)(v33 - (unsigned __int16)(v34 + 145)) <= 1)
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      LODWORD(v78) = *(unsigned __int16 *)(v35 + (unsigned __int16)(v34 + 145));
      HIDWORD(v78) = v47;
      *((_WORD *)a3 + 6) = v34 + 147;
      if ((int)(v33 - (unsigned __int16)(v34 + 147)) <= 1)
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      v48 = (unsigned __int8 *)(v35 + (unsigned __int16)(v34 + 147));
      v49 = *v48;
      v50 = v48[1];
      *((_WORD *)a3 + 6) = v34 + 149;
      if ((int)(v33 - (unsigned __int16)(v34 + 149)) <= 1)
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      LODWORD(v77) = *(unsigned __int16 *)(v35 + (unsigned __int16)(v34 + 149));
      HIDWORD(v77) = v49 | (v50 << 8);
      v46 = v34 + 151;
      *((_WORD *)a3 + 6) = v34 + 151;
    }
  }
  v23 = 0;
  if (v5 <= 0x16 && ((1 << v5) & 0x580000) != 0)
  {
    if ((int)(v33 - v46) <= 1)
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    v23 = *(unsigned __int16 *)(v35 + v46);
    *((_WORD *)a3 + 6) = v46 + 2;
    if ((int)(v33 - (unsigned __int16)(v46 + 2)) <= 1)
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    HIDWORD(v66) = *(unsigned __int16 *)(v35 + (unsigned __int16)(v46 + 2));
    *((_WORD *)a3 + 6) = v46 + 4;
    if ((int)(v33 - (unsigned __int16)(v46 + 4)) <= 1)
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    LODWORD(v66) = *(unsigned __int16 *)(v35 + (unsigned __int16)(v46 + 4));
    *((_WORD *)a3 + 6) = v46 + 6;
    if ((int)(v33 - (unsigned __int16)(v46 + 6)) <= 1)
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    v51 = (unsigned __int8 *)(v35 + (unsigned __int16)(v46 + 6));
    v52 = *v51;
    v53 = v51[1];
    *((_WORD *)a3 + 6) = v46 + 8;
    if ((int)(v33 - (unsigned __int16)(v46 + 8)) <= 1)
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    v54 = v52 | (v53 << 8);
    v63 = *(unsigned __int16 *)(v35 + (unsigned __int16)(v46 + 8));
    v46 += 10;
    *((_WORD *)a3 + 6) = v46;
  }
  else
  {
    v66 = 0;
    v54 = 0;
    v63 = 0;
  }
  v64 = v54;
  v65 = v41;
  if ((v5 | 2) == 0x16)
  {
    if ((int)(v33 - v46) <= 1)
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    v55 = (unsigned __int8 *)(v35 + v46);
    v56 = *v55;
    v57 = v55[1];
    *((_WORD *)a3 + 6) = v46 + 2;
    if ((int)(v33 - (unsigned __int16)(v46 + 2)) <= 1)
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    v60 = v56 | (v57 << 8);
    v24 = *(unsigned __int16 *)(v35 + (unsigned __int16)(v46 + 2));
    v46 += 4;
    *((_WORD *)a3 + 6) = v46;
  }
  else
  {
    v60 = 0;
    v24 = 0;
  }
  v61 = v39;
  v62 = v38;
  if (v5 == 22)
  {
    if ((int)(v33 - v46) <= 3)
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    v25 = *(_DWORD *)(v35 + v46);
    *((_WORD *)a3 + 6) = v46 + 4;
    if ((int)(v33 - (unsigned __int16)(v46 + 4)) <= 3)
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    v26 = *(_DWORD *)(v35 + (unsigned __int16)(v46 + 4));
    *((_WORD *)a3 + 6) = v46 + 8;
    if ((int)(v33 - (unsigned __int16)(v46 + 8)) <= 1)
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    v27 = *(unsigned __int16 *)(v35 + (unsigned __int16)(v46 + 8));
    *((_WORD *)a3 + 6) = v46 + 10;
    if ((int)(v33 - (unsigned __int16)(v46 + 10)) <= 1)
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    v14 = v37;
    v28 = *(unsigned __int16 *)(v35 + (unsigned __int16)(v46 + 10));
    *((_WORD *)a3 + 6) = v46 + 12;
    if ((int)(v33 - (unsigned __int16)(v46 + 12)) <= 1)
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    v29 = *(unsigned __int16 *)(v35 + (unsigned __int16)(v46 + 12));
    *((_WORD *)a3 + 6) = v46 + 14;
    if ((int)(v33 - (unsigned __int16)(v46 + 14)) <= 1)
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    v10 = v36;
    v30 = *(unsigned __int16 *)(v35 + (unsigned __int16)(v46 + 14));
    *((_WORD *)a3 + 6) = v46 + 16;
    if ((int)(v33 - (unsigned __int16)(v46 + 16)) <= 7)
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    result = *(_QWORD *)(v35 + (unsigned __int16)(v46 + 16));
    *((_WORD *)a3 + 6) = v46 + 24;
    if ((int)(v33 - (unsigned __int16)(v46 + 24)) <= 7)
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    v32 = *(_QWORD *)(v35 + (unsigned __int16)(v46 + 24));
    *((_WORD *)a3 + 6) = v46 + 32;
    v5 = 22;
  }
  else
  {
    v14 = v37;
    v10 = v36;
    v25 = 0;
    v26 = 0;
    v27 = 0;
    v28 = 0;
    v29 = 0;
    v30 = 0;
    result = 0;
    v32 = 0;
  }
  v7 = v58;
  v6 = v59;
LABEL_80:
  if (a2)
  {
    v80[0] = v5;
    v80[1] = v6;
    v80[2] = v7;
    v80[3] = v8;
    v80[4] = v9;
    v80[5] = v10;
    v80[6] = v11;
    v80[7] = v12;
    v80[8] = v13;
    v80[9] = v14;
    v80[10] = v62;
    v80[11] = v61;
    v80[12] = HIDWORD(v75);
    v80[13] = v15;
    v80[14] = v16;
    v80[15] = v17;
    v80[16] = v18;
    v80[17] = v19;
    v80[18] = v20;
    v80[19] = v21;
    v80[20] = v65;
    v80[21] = HIDWORD(v67);
    v80[22] = HIDWORD(v69);
    v80[23] = v69;
    v80[24] = HIDWORD(v68);
    v80[25] = v75;
    v80[26] = HIDWORD(v74);
    v80[27] = v74;
    v80[28] = HIDWORD(v73);
    v80[29] = v73;
    v80[30] = HIDWORD(v72);
    v80[31] = v72;
    v80[32] = HIDWORD(v71);
    v80[33] = v71;
    v80[34] = HIDWORD(v70);
    v80[35] = v70;
    v80[36] = v68;
    v80[37] = v67;
    v80[38] = v22;
    v80[39] = HIDWORD(v78);
    v80[40] = v78;
    v80[41] = HIDWORD(v77);
    v80[42] = v77;
    v80[43] = v23;
    v80[44] = HIDWORD(v66);
    v80[45] = v66;
    v80[46] = v64;
    v80[47] = v63;
    v80[48] = v60;
    v80[49] = v24;
    v80[50] = v25;
    v80[51] = v26;
    v80[52] = v27;
    v80[53] = v28;
    v80[54] = v29;
    v80[55] = v30;
    v81 = result;
    v82 = v32;
    return a2(a1, v80);
  }
  return result;
}

void sub_1001A6DC4(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a1)
  {
    if (sub_10005549C())
    {
      sub_100054530("status %!, iPACounter %d, ePACounter %d, iPAThreadCounter %d, ePAThreadCounter %d", a1, 0, 0, 0, 0);
      v5 = sub_1000544A0(0x54u);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        sub_1006CEEC0();
    }
    v6 = 0;
    v7 = 0;
    goto LABEL_15;
  }
  if (*((_BYTE *)a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 311, "void _BCM_ReadTransmitIpaEpaCountersEventParser(OI_STATUS, GENERIC_HL_CB, OI_BYTE_STREAM *)");
    goto LABEL_19;
  }
  v8 = *((unsigned __int16 *)a3 + 5);
  v9 = *((unsigned __int16 *)a3 + 6);
  if ((int)v8 - (int)v9 <= 3 || *((_BYTE *)a3 + 14) != 1)
LABEL_19:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v10 = *a3;
  v6 = *(unsigned int *)(*a3 + v9);
  *((_WORD *)a3 + 6) = v9 + 4;
  if ((int)(v8 - (unsigned __int16)(v9 + 4)) <= 3)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v7 = *(unsigned int *)(v10 + (unsigned __int16)(v9 + 4));
  *((_WORD *)a3 + 6) = v9 + 8;
  if (v8 - (unsigned __int16)(v9 + 8) != 8)
  {
LABEL_15:
    v12 = 0;
    v13 = 0;
    if (!a2)
      return;
    goto LABEL_16;
  }
  v11 = (unsigned __int16)(v9 + 8);
  if ((int)v8 - (int)v11 <= 3)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v12 = *(unsigned int *)(v10 + v11);
  *((_WORD *)a3 + 6) = v9 + 12;
  if ((int)(v8 - (unsigned __int16)(v9 + 12)) <= 3)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v13 = *(unsigned int *)(v10 + (unsigned __int16)(v9 + 12));
  *((_WORD *)a3 + 6) = v9 + 16;
  if (a2)
LABEL_16:
    a2(a1, v6, v7, v12, v13);
}

void sub_1001A6F98(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t a3)
{
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;

  if ((_DWORD)a1)
  {
    if (sub_10005549C())
    {
      sub_100054530("status %!", a1);
      v5 = sub_1000544A0(0x54u);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        sub_1006CEEC0();
    }
    v6 = 0;
    if (a2)
      goto LABEL_6;
    return;
  }
  if (*(_BYTE *)(a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 336, "void _BCM_ProprietaryLocalFeaturesEventParser(OI_STATUS, GENERIC_HL_CB, OI_BYTE_STREAM *)");
    goto LABEL_14;
  }
  v7 = *(unsigned __int16 *)(a3 + 12);
  if (*(unsigned __int16 *)(a3 + 10) - (int)v7 <= 3 || *(_BYTE *)(a3 + 14) != 1)
LABEL_14:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v6 = *(unsigned int *)(*(_QWORD *)a3 + v7);
  *(_WORD *)(a3 + 12) = v7 + 4;
  if (a2)
LABEL_6:
    a2(a1, v6);
}

void sub_1001A70A4(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  int v12;
  int v13;

  if (!(_DWORD)a1)
  {
    if (*((_BYTE *)a3 + 15))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 354, "void _BCM_ProprietaryRemoteFeaturesEventParser(OI_STATUS, GENERIC_HL_CB, OI_BYTE_STREAM *)");
    }
    else
    {
      v8 = *((unsigned __int16 *)a3 + 5);
      v9 = *((unsigned __int16 *)a3 + 6);
      if (v8 - (int)v9 > 1 && *((_BYTE *)a3 + 14) == 1)
      {
        v10 = *a3;
        v11 = (unsigned __int8 *)(*a3 + v9);
        v12 = *v11;
        v13 = v11[1];
        *((_WORD *)a3 + 6) = v9 + 2;
        if (v8 - (unsigned __int16)(v9 + 2) <= 3)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        v6 = v12 | (v13 << 8);
        v7 = *(unsigned int *)(v10 + (unsigned __int16)(v9 + 2));
        *((_WORD *)a3 + 6) = v9 + 6;
        if (a2)
          goto LABEL_6;
        return;
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  if (sub_10005549C())
  {
    sub_100054530("status %!", a1);
    v5 = sub_1000544A0(0x54u);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_1006CEEC0();
  }
  v6 = 0;
  v7 = 0;
  if (a2)
LABEL_6:
    a2(a1, v6, v7);
}

void sub_1001A71F8(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;

  if (!(_DWORD)a1)
  {
    if (*((_BYTE *)a3 + 15))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 372, "void _BCM_EpaGpioReadStatusEventParser(OI_STATUS, GENERIC_HL_CB, OI_BYTE_STREAM *)");
    }
    else
    {
      v9 = *((unsigned __int16 *)a3 + 5);
      v10 = *((unsigned __int16 *)a3 + 6);
      if (v9 > v10 && *((_BYTE *)a3 + 14) == 1)
      {
        v11 = *a3;
        *((_WORD *)a3 + 6) = v10 + 1;
        if (v9 <= (int)v10 + 1)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        v6 = *(unsigned __int8 *)(v11 + v10);
        *((_WORD *)a3 + 6) = v10 + 2;
        if (v9 <= (int)v10 + 2)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        v7 = *(unsigned __int8 *)(v11 + v10 + 1);
        *((_WORD *)a3 + 6) = v10 + 3;
        v8 = *(unsigned __int8 *)(v11 + v10 + 2);
        if (a2)
          goto LABEL_6;
        return;
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  if (sub_10005549C())
  {
    sub_100054530("status %!", a1);
    v5 = sub_1000544A0(0x54u);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_1006CEEC0();
  }
  v6 = 0;
  v7 = 0;
  v8 = 0;
  if (a2)
LABEL_6:
    a2(a1, v6, v7, v8);
}

void sub_1001A7364(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t *a3)
{
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;

  if ((_DWORD)a1)
  {
    if (sub_10005549C())
    {
      sub_100054530("status %!", a1);
      v5 = sub_1000544A0(0x54u);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        sub_1006CEEC0();
    }
    v6 = 255;
    goto LABEL_10;
  }
  if (*((_BYTE *)a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 391, "void _BCM_AdvBufConfigEventParser(OI_STATUS, GENERIC_HL_CB, OI_BYTE_STREAM *)");
    goto LABEL_18;
  }
  v7 = *((unsigned __int16 *)a3 + 6);
  if (*((unsigned __int16 *)a3 + 5) <= v7 || *((_BYTE *)a3 + 14) != 1)
LABEL_18:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v8 = *a3;
  *((_WORD *)a3 + 6) = v7 + 1;
  v6 = *(unsigned __int8 *)(v8 + v7);
  if ((_DWORD)v6 == 1)
    goto LABEL_12;
LABEL_10:
  if (!sub_10005549C()
    || (sub_100054530("SubOpcode Incorrect %!", a1),
        v9 = sub_1000544A0(0x54u),
        !os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)))
  {
LABEL_12:
    if (!a2)
      return;
    goto LABEL_13;
  }
  sub_1006CEEC0();
  if (a2)
LABEL_13:
    a2(a1, v6);
}

void sub_1001A74C0(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;

  if ((_DWORD)a1)
  {
    if (sub_10005549C())
    {
      sub_100054530("status %!", a1);
      v5 = sub_1000544A0(0x54u);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        sub_1006CEEC0();
    }
    v6 = 255;
    v7 = 255;
    v8 = 255;
    v9 = 255;
    goto LABEL_13;
  }
  if (*((_BYTE *)a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 414, "void _BCM_AdvBufExtFilterConfigEventParser(OI_STATUS, GENERIC_HL_CB, OI_BYTE_STREAM *)");
    goto LABEL_21;
  }
  v10 = *((unsigned __int16 *)a3 + 5);
  v11 = *((unsigned __int16 *)a3 + 6);
  if (v10 <= v11 || *((_BYTE *)a3 + 14) != 1)
LABEL_21:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v12 = *a3;
  *((_WORD *)a3 + 6) = v11 + 1;
  if (v10 <= (int)v11 + 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v9 = *(unsigned __int8 *)(v12 + v11);
  *((_WORD *)a3 + 6) = v11 + 2;
  if (v10 <= (int)v11 + 2)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v8 = *(unsigned __int8 *)(v12 + v11 + 1);
  *((_WORD *)a3 + 6) = v11 + 3;
  if (v10 <= (int)v11 + 3)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v7 = *(unsigned __int8 *)(v12 + v11 + 2);
  *((_WORD *)a3 + 6) = v11 + 4;
  v6 = *(unsigned __int8 *)(v12 + v11 + 3);
  if ((_DWORD)v9 == 13)
  {
LABEL_15:
    if (!a2)
      return;
    goto LABEL_16;
  }
LABEL_13:
  if (!sub_10005549C())
    goto LABEL_15;
  sub_100054530("SubOpcode Incorrect %!", a1);
  v13 = sub_1000544A0(0x54u);
  if (!os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    goto LABEL_15;
  sub_1006CEEC0();
  if (a2)
LABEL_16:
    a2(a1, v9, v8, v7, v6);
}

void sub_1001A76C8(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD), uint64_t *a3)
{
  NSObject *v5;
  unsigned __int16 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;

  if ((_DWORD)a1)
  {
    if (sub_10005549C())
    {
      sub_100054530("status %!", a1);
      v5 = sub_1000544A0(0x54u);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        sub_1006CEEC0();
    }
    v6 = 0;
    v7 = 0;
    v8 = 0;
    v9 = 255;
    goto LABEL_13;
  }
  if (*((_BYTE *)a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 440, "void _BCM_AdvBufReadCommandEventParser(OI_STATUS, GENERIC_HL_CB, OI_BYTE_STREAM *)");
    goto LABEL_21;
  }
  v10 = *((unsigned __int16 *)a3 + 5);
  v11 = *((unsigned __int16 *)a3 + 6);
  if (v10 <= v11 || *((_BYTE *)a3 + 14) != 1)
LABEL_21:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v12 = *a3;
  *((_WORD *)a3 + 6) = v11 + 1;
  if (v10 <= (unsigned __int16)(v11 + 1))
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v9 = *(unsigned __int8 *)(v12 + v11);
  *((_WORD *)a3 + 6) = v11 + 2;
  if (v10 <= (unsigned __int16)(v11 + 2))
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v8 = *(unsigned __int8 *)(v12 + v11 + 1);
  *((_WORD *)a3 + 6) = v11 + 3;
  if ((int)(v10 - (v11 + 3)) <= 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v7 = *(unsigned __int8 *)(v12 + v11 + 2);
  v6 = *(_WORD *)(v12 + v11 + 3);
  *((_WORD *)a3 + 6) = v11 + 5;
  if ((_DWORD)v9 == 2)
  {
LABEL_15:
    if (!a2)
      return;
    goto LABEL_16;
  }
LABEL_13:
  if (!sub_10005549C())
    goto LABEL_15;
  sub_100054530("SubOpcode Incorrect %!", a1);
  v13 = sub_1000544A0(0x54u);
  if (!os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    goto LABEL_15;
  sub_1006CEEC0();
  if (a2)
LABEL_16:
    a2(a1, v9, v8, v7, v6);
}

uint64_t sub_1001A78D4(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t *a3)
{
  NSObject *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  NSObject *v10;

  if ((_DWORD)a1)
  {
    if (sub_10005549C())
    {
      sub_100054530("status %!", a1);
      v5 = sub_1000544A0(0x54u);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        sub_1006CEEC0();
    }
    v6 = 255;
    goto LABEL_12;
  }
  if (*((_BYTE *)a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 483, "void _BCM_MatchTableExtFilterConfigEventParser(OI_STATUS, GENERIC_HL_CB, OI_BYTE_STREAM *)");
    goto LABEL_19;
  }
  v7 = *((unsigned __int16 *)a3 + 6);
  if (*((unsigned __int16 *)a3 + 5) <= v7 || *((_BYTE *)a3 + 14) != 1)
LABEL_19:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v8 = *a3;
  *((_WORD *)a3 + 6) = v7 + 1;
  v6 = *(unsigned __int8 *)(v8 + v7);
  if (v6 == 12)
  {
    result = 0;
    if (!a2)
      return result;
    return a2(result);
  }
LABEL_12:
  if (sub_10005549C())
  {
    sub_100054530("SubOpcode Incorrect %x!", v6);
    v10 = sub_1000544A0(0x54u);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      sub_1006CEEC0();
  }
  result = 101;
  if (a2)
    return a2(result);
  return result;
}

void sub_1001A7A28(uint64_t a1, void (*a2)(uint64_t))
{
  NSObject *v4;

  if ((_DWORD)a1
    && sub_10005549C()
    && (sub_100054530("status %!", a1), v4 = sub_1000544A0(0x54u),
                                        os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)))
  {
    sub_1006CEEC0();
    if (!a2)
      return;
  }
  else if (!a2)
  {
    return;
  }
  a2(a1);
}

void sub_1001A7AB0(uint64_t a1, void (*a2)(uint64_t))
{
  NSObject *v4;

  if ((_DWORD)a1
    && sub_10005549C()
    && (sub_100054530("status %!", a1), v4 = sub_1000544A0(0x54u),
                                        os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)))
  {
    sub_1006CEEC0();
    if (!a2)
      return;
  }
  else if (!a2)
  {
    return;
  }
  a2(a1);
}

void sub_1001A7B38(uint64_t a1, void (*a2)(uint64_t))
{
  NSObject *v4;

  if ((_DWORD)a1
    && sub_10005549C()
    && (sub_100054530("status %!", a1), v4 = sub_1000544A0(0x54u),
                                        os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)))
  {
    sub_1006CEEC0();
    if (!a2)
      return;
  }
  else if (!a2)
  {
    return;
  }
  a2(a1);
}

void sub_1001A7BC0(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t *a3)
{
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;

  if ((_DWORD)a1)
  {
    if (sub_10005549C())
    {
      sub_100054530("status %!", a1);
      v5 = sub_1000544A0(0x54u);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        sub_1006CEEC0();
    }
    v6 = 255;
    goto LABEL_10;
  }
  if (*((_BYTE *)a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 584, "void _BCM_MatchBufferConfigEventParser(OI_STATUS, GENERIC_HL_CB, OI_BYTE_STREAM *)");
    goto LABEL_18;
  }
  v7 = *((unsigned __int16 *)a3 + 6);
  if (*((unsigned __int16 *)a3 + 5) <= v7 || *((_BYTE *)a3 + 14) != 1)
LABEL_18:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v8 = *a3;
  *((_WORD *)a3 + 6) = v7 + 1;
  v6 = *(unsigned __int8 *)(v8 + v7);
  if ((_DWORD)v6 == 5)
    goto LABEL_12;
LABEL_10:
  if (!sub_10005549C()
    || (sub_100054530("SubOpcode Incorrect %!", a1),
        v9 = sub_1000544A0(0x54u),
        !os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)))
  {
LABEL_12:
    if (!a2)
      return;
    goto LABEL_13;
  }
  sub_1006CEEC0();
  if (a2)
LABEL_13:
    a2(a1, v6);
}

void sub_1001A7D1C(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;

  if ((_DWORD)a1)
  {
    if (sub_10005549C())
    {
      sub_100054530("status %!", a1);
      v5 = sub_1000544A0(0x54u);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        sub_1006CEEC0();
    }
    v6 = 0;
    v7 = 255;
    goto LABEL_11;
  }
  if (*((_BYTE *)a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 605, "void _BCM_MatchBufferReadEventParser(OI_STATUS, GENERIC_HL_CB, OI_BYTE_STREAM *)");
    goto LABEL_19;
  }
  v8 = *((unsigned __int16 *)a3 + 5);
  v9 = *((unsigned __int16 *)a3 + 6);
  if (v8 <= v9 || *((_BYTE *)a3 + 14) != 1)
LABEL_19:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v10 = *a3;
  *((_WORD *)a3 + 6) = v9 + 1;
  if (v8 <= (int)v9 + 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v7 = *(unsigned __int8 *)(v10 + v9);
  *((_WORD *)a3 + 6) = v9 + 2;
  v6 = *(unsigned __int8 *)(v10 + v9 + 1);
  if ((_DWORD)v7 == 6)
  {
LABEL_13:
    if (!a2)
      return;
    goto LABEL_14;
  }
LABEL_11:
  if (!sub_10005549C())
    goto LABEL_13;
  sub_100054530("SubOpcode Incorrect %!", a1);
  v11 = sub_1000544A0(0x54u);
  if (!os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    goto LABEL_13;
  sub_1006CEEC0();
  if (a2)
LABEL_14:
    a2(a1, v7, v6);
}

void sub_1001A7EB4(uint64_t a1, void (*a2)(uint64_t, _QWORD), uint64_t a3)
{
  NSObject *v5;
  unsigned __int16 v6;
  uint64_t v7;

  if ((_DWORD)a1)
  {
    if (sub_10005549C())
    {
      sub_100054530("status %!", a1);
      v5 = sub_1000544A0(0x54u);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        sub_1006CEEC0();
    }
    v6 = 0;
    if (a2)
      goto LABEL_6;
    return;
  }
  if (*(_BYTE *)(a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 626, "void _BCM_ReadConnEventCntEventParser(OI_STATUS, GENERIC_HL_CB, OI_BYTE_STREAM *)");
    goto LABEL_14;
  }
  v7 = *(unsigned __int16 *)(a3 + 12);
  if (*(unsigned __int16 *)(a3 + 10) - (int)v7 <= 1 || *(_BYTE *)(a3 + 14) != 1)
LABEL_14:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v6 = *(_WORD *)(*(_QWORD *)a3 + v7);
  *(_WORD *)(a3 + 12) = v7 + 2;
  if (a2)
LABEL_6:
    a2(a1, v6);
}

void sub_1001A7FC4(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  int v13;
  int v14;
  NSObject *v15;

  if ((_DWORD)a1)
  {
    if (sub_10005549C())
    {
      sub_100054530("status %!", a1);
      v5 = sub_1000544A0(0x54u);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        sub_1006CEEC0();
    }
    v6 = 0;
    v7 = 0;
    v8 = 255;
    goto LABEL_12;
  }
  if (*((_BYTE *)a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 645, "void _BCM_SCOBufferSizeControlEventParser(OI_STATUS, GENERIC_HL_CB, OI_BYTE_STREAM *)");
    goto LABEL_20;
  }
  v9 = *((unsigned __int16 *)a3 + 5);
  v10 = *((unsigned __int16 *)a3 + 6);
  if (v9 <= v10 || *((_BYTE *)a3 + 14) != 1)
LABEL_20:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v11 = *a3;
  *((_WORD *)a3 + 6) = v10 + 1;
  if ((int)(v9 - (v10 + 1)) <= 1)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v8 = *(unsigned __int8 *)(v11 + v10);
  v12 = (unsigned __int8 *)(v11 + v10 + 1);
  v13 = *v12;
  v14 = v12[1];
  *((_WORD *)a3 + 6) = v10 + 3;
  if (v9 <= (unsigned __int16)(v10 + 3))
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v7 = v13 | (v14 << 8);
  *((_WORD *)a3 + 6) = v10 + 4;
  v6 = *(unsigned __int8 *)(v11 + (unsigned __int16)(v10 + 3));
  if (!(_DWORD)v8)
  {
LABEL_14:
    if (!a2)
      return;
    goto LABEL_15;
  }
LABEL_12:
  if (!sub_10005549C())
    goto LABEL_14;
  sub_100054530("SubOpcode Incorrect %!", a1);
  v15 = sub_1000544A0(0x54u);
  if (!os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    goto LABEL_14;
  sub_1006CEEC0();
  if (a2)
LABEL_15:
    a2(a1, v8, v7, v6);
}

void sub_1001A81A0(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t *, uint64_t *, int), uint64_t *a3)
{
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  int v16;
  int *v17;
  int v18;
  int *v19;
  int v20;
  char v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  BYTE4(v25) = 0;
  LODWORD(v25) = 0;
  BYTE4(v24) = 0;
  LODWORD(v24) = 0;
  BYTE4(v23) = 0;
  LODWORD(v23) = 0;
  if ((_DWORD)a1)
  {
    if (sub_10005549C())
    {
      sub_100054530("status %!", a1, v23, v24, v25);
      v5 = sub_1000544A0(0x54u);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        sub_1006CEEC0();
    }
    v6 = 0;
    v7 = 0;
    v8 = 0;
    v9 = 0;
    goto LABEL_20;
  }
  if (*((_BYTE *)a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 674, "void _BCM_GetEssentialPowerDatabaseEntriesEventParser(OI_STATUS, GENERIC_HL_CB, OI_BYTE_STREAM *)");
    goto LABEL_26;
  }
  v11 = *((unsigned __int16 *)a3 + 5);
  v12 = *((unsigned __int16 *)a3 + 6);
  if (v11 <= v12 || *((_BYTE *)a3 + 14) != 1)
LABEL_26:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v13 = *a3;
  *((_WORD *)a3 + 6) = v12 + 1;
  if (v11 <= (unsigned __int16)(v12 + 1))
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v6 = *(unsigned __int8 *)(v13 + v12);
  *((_WORD *)a3 + 6) = v12 + 2;
  if (v11 <= (unsigned __int16)(v12 + 2))
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v7 = *(unsigned __int8 *)(v13 + v12 + 1);
  *((_WORD *)a3 + 6) = v12 + 3;
  if (v11 <= (unsigned __int16)(v12 + 3))
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v8 = *(unsigned __int8 *)(v13 + v12 + 2);
  v14 = v12 + 4;
  *((_WORD *)a3 + 6) = v12 + 4;
  v9 = *(unsigned __int8 *)(v13 + v12 + 3);
  if ((v6 - 1) > 1u)
  {
LABEL_20:
    v21 = 0;
    if (!a2)
      return;
    goto LABEL_21;
  }
  if ((int)(v11 - v14) <= 4)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v15 = (int *)(v13 + v14);
  v16 = *v15;
  BYTE4(v25) = *((_BYTE *)v15 + 4);
  LODWORD(v25) = v16;
  *((_WORD *)a3 + 6) = v12 + 9;
  if ((int)(v11 - (unsigned __int16)(v12 + 9)) <= 4)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v17 = (int *)(v13 + (unsigned __int16)(v12 + 9));
  v18 = *v17;
  BYTE4(v24) = *((_BYTE *)v17 + 4);
  LODWORD(v24) = v18;
  *((_WORD *)a3 + 6) = v12 + 14;
  if ((int)(v11 - (unsigned __int16)(v12 + 14)) <= 4)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v19 = (int *)(v13 + (unsigned __int16)(v12 + 14));
  v20 = *v19;
  BYTE4(v23) = *((_BYTE *)v19 + 4);
  LODWORD(v23) = v20;
  *((_WORD *)a3 + 6) = v12 + 19;
  if ((_DWORD)v6 != 2)
  {
    v21 = 0;
    v6 = 1;
    if (!a2)
      return;
LABEL_21:
    LOBYTE(v22) = v21;
    a2(a1, v6, v7, v8, v9, &v25, &v24, &v23, v22);
    return;
  }
  if (v11 <= (unsigned __int16)(v12 + 19))
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  *((_WORD *)a3 + 6) = v12 + 20;
  v21 = *(_BYTE *)(v13 + (unsigned __int16)(v12 + 19));
  v6 = 2;
  if (a2)
    goto LABEL_21;
}

uint64_t sub_1001A8488(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int), uint64_t *a3)
{
  uint64_t result;
  NSObject *v6;
  unsigned __int16 v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;

  if (!(_DWORD)a1)
  {
    if (*((_BYTE *)a3 + 15))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 712, "void _BCM_HRBReadEnhancedTransmitPowerLevelEventParser(OI_STATUS, GENERIC_HL_CB, OI_BYTE_STREAM *)");
    }
    else
    {
      v17 = *((unsigned __int16 *)a3 + 5);
      v18 = *((unsigned __int16 *)a3 + 6);
      if ((int)(v17 - v18) > 1 && *((_BYTE *)a3 + 14) == 1)
      {
        v19 = *a3;
        v7 = *(_WORD *)(*a3 + v18);
        *((_WORD *)a3 + 6) = v18 + 2;
        if (v17 <= (unsigned __int16)(v18 + 2))
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        *((_WORD *)a3 + 6) = v18 + 3;
        if (v17 <= (unsigned __int16)(v18 + 3))
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        v8 = *(_BYTE *)(v19 + (unsigned __int16)(v18 + 2));
        *((_WORD *)a3 + 6) = v18 + 4;
        if (v17 <= (unsigned __int16)(v18 + 4))
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        v9 = *(_BYTE *)(v19 + (unsigned __int16)(v18 + 3));
        *((_WORD *)a3 + 6) = v18 + 5;
        if (v17 <= (unsigned __int16)(v18 + 5))
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        v10 = *(_BYTE *)(v19 + (unsigned __int16)(v18 + 4));
        *((_WORD *)a3 + 6) = v18 + 6;
        if (v17 <= (unsigned __int16)(v18 + 6))
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        v11 = *(_BYTE *)(v19 + (unsigned __int16)(v18 + 5));
        *((_WORD *)a3 + 6) = v18 + 7;
        if (v17 <= (unsigned __int16)(v18 + 7))
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        v12 = *(_BYTE *)(v19 + (unsigned __int16)(v18 + 6));
        *((_WORD *)a3 + 6) = v18 + 8;
        if (v17 <= (unsigned __int16)(v18 + 8))
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        v13 = *(_BYTE *)(v19 + (unsigned __int16)(v18 + 7));
        *((_WORD *)a3 + 6) = v18 + 9;
        if (v17 <= (unsigned __int16)(v18 + 9))
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        result = *(unsigned __int8 *)(v19 + (unsigned __int16)(v18 + 8));
        *((_WORD *)a3 + 6) = v18 + 10;
        if (v17 <= (unsigned __int16)(v18 + 10))
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        v14 = *(_BYTE *)(v19 + (unsigned __int16)(v18 + 9));
        *((_WORD *)a3 + 6) = v18 + 11;
        if (v17 <= (unsigned __int16)(v18 + 11))
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        v15 = *(_BYTE *)(v19 + (unsigned __int16)(v18 + 10));
        *((_WORD *)a3 + 6) = v18 + 12;
        v16 = *(_BYTE *)(v19 + (unsigned __int16)(v18 + 11));
        if (a2)
          goto LABEL_6;
        return result;
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  result = sub_10005549C();
  if ((_DWORD)result
    && (sub_100054530("status %!", a1),
        v6 = sub_1000544A0(0x54u),
        result = os_log_type_enabled(v6, OS_LOG_TYPE_ERROR),
        (_DWORD)result))
  {
    sub_1006CEEC0();
    v7 = 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
    result = 0;
  }
  else
  {
    v7 = 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
  }
  v14 = 0;
  v15 = 0;
  v16 = 0;
  if (a2)
  {
LABEL_6:
    HIBYTE(v20) = v16;
    BYTE2(v20) = v15;
    BYTE1(v20) = v14;
    LOBYTE(v20) = result;
    return a2(a1, v7, v8, v9, v10, v11, v12, v13, v20);
  }
  return result;
}

void sub_1001A87E4(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (!(_DWORD)a1)
  {
    if (*((_BYTE *)a3 + 15))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 742, "void _BCM_HRBReadAFHChannelMapEventParser(OI_STATUS, GENERIC_HL_CB, OI_BYTE_STREAM *)");
    }
    else
    {
      v8 = *((unsigned __int16 *)a3 + 6);
      v9 = *((unsigned __int16 *)a3 + 5);
      if ((int)v9 - (int)v8 > 9)
      {
        v10 = *a3;
        *((_WORD *)a3 + 6) = v8 + 10;
        if (v9 - (unint64_t)(unsigned __int16)(v8 + 10) <= 0x9F)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        v6 = v10 + v8;
        v7 = v10 + (unsigned __int16)(v8 + 10);
        *((_WORD *)a3 + 6) = v8 + 170;
        if (a2)
          goto LABEL_6;
        return;
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  if (sub_10005549C())
  {
    sub_100054530("status %!", a1);
    v5 = sub_1000544A0(0x54u);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_1006CEEC0();
  }
  v6 = 0;
  v7 = 0;
  if (a2)
LABEL_6:
    a2(a1, v6, v7);
}

uint64_t sub_1001A890C(uint64_t a1, unsigned int a2, unsigned int a3)
{
  uint64_t result;
  NSObject *v7;

  if (!(_DWORD)a1)
    return (a2 & 0x3FF) <= 0x32 && ((1 << a2) & 0x7000000000001) != 0 || (a2 & 0x3FF) == 0x247;
  result = sub_10005549C();
  if ((_DWORD)result)
  {
    sub_100054530("status %!, opcode 0x%x, subOpcode %x, myopcode %x", a1, a2, a3, a2 & 0x3FF);
    v7 = sub_1000544A0(0x54u);
    result = os_log_type_enabled(v7, OS_LOG_TYPE_ERROR);
    if ((_DWORD)result)
    {
      sub_1006CEEC0();
      return 0;
    }
  }
  return result;
}

void sub_1001A89D4(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t *a3)
{
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if ((_DWORD)a1)
  {
    if (sub_10005549C())
    {
      sub_100054530("status %!", a1);
      v5 = sub_1000544A0(0x54u);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        sub_1006CEEC0();
    }
    v6 = 255;
    if (a2)
      goto LABEL_6;
    return;
  }
  if (*((_BYTE *)a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 827, "void _BCM_CreateMultiAdvInstParser(OI_STATUS, GENERIC_HL_CB, OI_BYTE_STREAM *)");
    goto LABEL_14;
  }
  v7 = *((unsigned __int16 *)a3 + 6);
  if (*((unsigned __int16 *)a3 + 5) <= v7 || *((_BYTE *)a3 + 14) != 1)
LABEL_14:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v8 = *a3;
  *((_WORD *)a3 + 6) = v7 + 1;
  v6 = *(unsigned __int8 *)(v8 + v7);
  if (a2)
LABEL_6:
    a2(a1, v6);
}

void sub_1001A8ADC(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;

  if (!(_DWORD)a1)
  {
    if (*((_BYTE *)a3 + 15))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 862, "void _BCM_SensorTrackCommandEventParser(OI_STATUS, GENERIC_HL_CB, OI_BYTE_STREAM *)");
    }
    else
    {
      v8 = *((unsigned __int16 *)a3 + 5);
      v9 = *((unsigned __int16 *)a3 + 6);
      if (v8 > v9 && *((_BYTE *)a3 + 14) == 1)
      {
        v10 = *a3;
        *((_WORD *)a3 + 6) = v9 + 1;
        if (v8 <= (int)v9 + 1)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        v6 = *(unsigned __int8 *)(v10 + v9);
        *((_WORD *)a3 + 6) = v9 + 2;
        v7 = *(unsigned __int8 *)(v10 + v9 + 1);
        if (a2)
          goto LABEL_6;
        return;
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  if (sub_10005549C())
  {
    sub_100054530("status %!", a1);
    v5 = sub_1000544A0(0x54u);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_1006CEEC0();
  }
  v6 = 0;
  v7 = 0;
  if (a2)
LABEL_6:
    a2(a1, v6, v7);
}

void sub_1001A8C14(uint64_t a1, void (*a2)(uint64_t))
{
  NSObject *v4;

  if ((_DWORD)a1
    && sub_10005549C()
    && (sub_100054530("status %!", a1), v4 = sub_1000544A0(0x54u),
                                        os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)))
  {
    sub_1006CEEC0();
    if (!a2)
      return;
  }
  else if (!a2)
  {
    return;
  }
  a2(a1);
}

void sub_1001A8C9C(uint64_t a1, void (*a2)(uint64_t, uint64_t, _QWORD, uint64_t), uint64_t *a3)
{
  NSObject *v5;
  uint64_t v6;
  unsigned __int16 v7;
  uint64_t v8;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  __int16 v13;
  int v14;

  if (!(_DWORD)a1)
  {
    if (*((_BYTE *)a3 + 15))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 897, "void _BCM_ReadLocalControllerCachedInfoEventParser(OI_STATUS, GENERIC_HL_CB, OI_BYTE_STREAM *)");
    }
    else
    {
      v10 = *((unsigned __int16 *)a3 + 5);
      v11 = *((unsigned __int16 *)a3 + 6);
      if (v10 > v11 && *((_BYTE *)a3 + 14) == 1)
      {
        v12 = *a3;
        *((_WORD *)a3 + 6) = v11 + 1;
        v6 = *(unsigned __int8 *)(v12 + v11);
        if ((int)(v10 - (v11 + 1)) <= 1)
        {
          *((_BYTE *)a3 + 15) = 1;
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 899, "void _BCM_ReadLocalControllerCachedInfoEventParser(OI_STATUS, GENERIC_HL_CB, OI_BYTE_STREAM *)");
          v7 = 0;
          v14 = 0;
        }
        else
        {
          v13 = v11 + 3;
          v7 = *(_WORD *)(v12 + v11 + 1);
          *((_WORD *)a3 + 6) = v13;
          v14 = (unsigned __int16)(v10 - v13);
        }
        if (v14 != v7)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        v8 = *a3 + *((unsigned __int16 *)a3 + 6);
        if (a2)
          goto LABEL_6;
        return;
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  if (sub_10005549C())
  {
    sub_100054530("status %!", a1);
    v5 = sub_1000544A0(0x54u);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_1006CEEC0();
  }
  v6 = 0;
  v7 = 0;
  v8 = 0;
  if (a2)
LABEL_6:
    a2(a1, v6, v7, v8);
}

uint64_t sub_1001A8E30(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t), uint64_t *a3)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t);
  uint64_t result;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  int v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  int v60;
  unsigned int v61;
  unsigned int v62;
  int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unsigned int v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  unsigned int v100;

  v3 = a2;
  if (!(_DWORD)a1)
  {
    if (*((_BYTE *)a3 + 15))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 978, "void _BCM_LowPowerCoreStatsEventParser(OI_STATUS, GENERIC_HL_CB, OI_BYTE_STREAM *)");
    }
    else
    {
      v35 = *((unsigned __int16 *)a3 + 5);
      v36 = *((unsigned __int16 *)a3 + 6);
      if (v35 - (int)v36 > 3 && *((_BYTE *)a3 + 14) == 1)
      {
        v37 = *a3;
        v83 = *(_DWORD *)(*a3 + v36);
        *((_WORD *)a3 + 6) = v36 + 4;
        if (v35 - (unsigned __int16)(v36 + 4) <= 3)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        v82 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 4));
        *((_WORD *)a3 + 6) = v36 + 8;
        if (v35 - (unsigned __int16)(v36 + 8) <= 3)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        v81 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 8));
        *((_WORD *)a3 + 6) = v36 + 12;
        if (v35 - (unsigned __int16)(v36 + 12) <= 3)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        v80 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 12));
        *((_WORD *)a3 + 6) = v36 + 16;
        if (v35 - (unsigned __int16)(v36 + 16) <= 3)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        v79 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 16));
        *((_WORD *)a3 + 6) = v36 + 20;
        if (v35 - (unsigned __int16)(v36 + 20) <= 3)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        v78 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 20));
        *((_WORD *)a3 + 6) = v36 + 24;
        if (v35 - (unsigned __int16)(v36 + 24) <= 3)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        v77 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 24));
        *((_WORD *)a3 + 6) = v36 + 28;
        if (v35 - (unsigned __int16)(v36 + 28) <= 3)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        v76 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 28));
        *((_WORD *)a3 + 6) = v36 + 32;
        if (v35 - (unsigned __int16)(v36 + 32) <= 3)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        v75 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 32));
        *((_WORD *)a3 + 6) = v36 + 36;
        if (v35 - (unsigned __int16)(v36 + 36) <= 3)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        v38 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 36));
        *((_WORD *)a3 + 6) = v36 + 40;
        v39 = v35 - (unsigned __int16)(v36 + 40);
        v100 = v38;
        if ((v39 & 0x1FFFE) != 0)
        {
          if (v39 <= 3)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v40 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 40));
          *((_WORD *)a3 + 6) = v36 + 44;
          if (v35 - (unsigned __int16)(v36 + 44) <= 3)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v41 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 44));
          *((_WORD *)a3 + 6) = v36 + 48;
          if (v35 - (unsigned __int16)(v36 + 48) <= 3)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v42 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 48));
          *((_WORD *)a3 + 6) = v36 + 52;
          if (v35 - (unsigned __int16)(v36 + 52) <= 3)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v43 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 52));
          *((_WORD *)a3 + 6) = v36 + 56;
          if (v35 - (unsigned __int16)(v36 + 56) <= 3)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v44 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 56));
          *((_WORD *)a3 + 6) = v36 + 60;
          if (v35 - (unsigned __int16)(v36 + 60) <= 3)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v45 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 60));
          *((_WORD *)a3 + 6) = v36 + 64;
          if (v35 - (unsigned __int16)(v36 + 64) <= 3)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v46 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 64));
          *((_WORD *)a3 + 6) = v36 + 68;
          if (v35 - (unsigned __int16)(v36 + 68) <= 3)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v47 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 68));
          *((_WORD *)a3 + 6) = v36 + 72;
          if (v35 - (unsigned __int16)(v36 + 72) <= 3)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v48 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 72));
          *((_WORD *)a3 + 6) = v36 + 76;
          if (v35 - (unsigned __int16)(v36 + 76) <= 3)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v49 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 76));
          *((_WORD *)a3 + 6) = v36 + 80;
          if (v35 - (unsigned __int16)(v36 + 80) <= 3)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v50 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 80));
          *((_WORD *)a3 + 6) = v36 + 84;
          if (v35 - (unsigned __int16)(v36 + 84) <= 3)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v51 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 84));
          *((_WORD *)a3 + 6) = v36 + 88;
          if (v35 - (unsigned __int16)(v36 + 88) <= 3)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v52 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 88));
          *((_WORD *)a3 + 6) = v36 + 92;
          if (v35 - (unsigned __int16)(v36 + 92) <= 3)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v53 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 92));
          *((_WORD *)a3 + 6) = v36 + 96;
          if (v35 - (unsigned __int16)(v36 + 96) <= 3)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v54 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 96));
          *((_WORD *)a3 + 6) = v36 + 100;
          if (v35 - (unsigned __int16)(v36 + 100) <= 3)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v55 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 100));
          *((_WORD *)a3 + 6) = v36 + 104;
          if (v35 - (unsigned __int16)(v36 + 104) <= 3)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v56 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 104));
          *((_WORD *)a3 + 6) = v36 + 108;
          if (v35 - (unsigned __int16)(v36 + 108) <= 3)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v57 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 108));
          *((_WORD *)a3 + 6) = v36 + 112;
          if (v35 - (unsigned __int16)(v36 + 112) <= 3)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v58 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 112));
          *((_WORD *)a3 + 6) = v36 + 116;
          if (v35 - (unsigned __int16)(v36 + 116) <= 3)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v59 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 116));
          *((_WORD *)a3 + 6) = v36 + 120;
          if (v35 - (unsigned __int16)(v36 + 120) <= 3)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v60 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 120));
          *((_WORD *)a3 + 6) = v36 + 124;
          if (v35 - (unsigned __int16)(v36 + 124) <= 3)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          LODWORD(v99) = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 124));
          HIDWORD(v99) = v60;
          *((_WORD *)a3 + 6) = v36 + 128;
          if (v35 - (unsigned __int16)(v36 + 128) <= 3)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v61 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 128));
          *((_WORD *)a3 + 6) = v36 + 132;
          if (v35 - (unsigned __int16)(v36 + 132) <= 3)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v98 = __PAIR64__(v58, v59);
          v62 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 132));
          *((_WORD *)a3 + 6) = v36 + 136;
          if (v35 - (unsigned __int16)(v36 + 136) <= 3)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v63 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 136));
          *((_WORD *)a3 + 6) = v36 + 140;
          if (v35 - (unsigned __int16)(v36 + 140) <= 3)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v97 = __PAIR64__(v56, v57);
          v64 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 140));
          *((_WORD *)a3 + 6) = v36 + 144;
          if (v35 - (unsigned __int16)(v36 + 144) <= 3)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v65 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 144));
          *((_WORD *)a3 + 6) = v36 + 148;
          if (v35 - (unsigned __int16)(v36 + 148) <= 3)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v96 = __PAIR64__(v54, v55);
          v66 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 148));
          *((_WORD *)a3 + 6) = v36 + 152;
          if (v35 - (unsigned __int16)(v36 + 152) <= 3)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v67 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 152));
          *((_WORD *)a3 + 6) = v36 + 156;
          if (v35 - (unsigned __int16)(v36 + 156) <= 3)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v68 = v41;
          v69 = v40;
          v95 = __PAIR64__(v52, v53);
          v70 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 156));
          *((_WORD *)a3 + 6) = v36 + 160;
          if (v35 - (unsigned __int16)(v36 + 160) <= 3)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v71 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 160));
          *((_WORD *)a3 + 6) = v36 + 164;
          if (v35 - (unsigned __int16)(v36 + 164) <= 3)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v94 = __PAIR64__(v50, v51);
          v72 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 164));
          *((_WORD *)a3 + 6) = v36 + 168;
          if (v35 - (unsigned __int16)(v36 + 168) <= 3)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v73 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 168));
          *((_WORD *)a3 + 6) = v36 + 172;
          if (v35 - (unsigned __int16)(v36 + 172) <= 1)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v93 = __PAIR64__(v48, v49);
          v74 = *(unsigned __int16 *)(v37 + (unsigned __int16)(v36 + 172));
          *((_WORD *)a3 + 6) = v36 + 174;
          if (v35 - (unsigned __int16)(v36 + 174) <= 1)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          result = *(unsigned __int16 *)(v37 + (unsigned __int16)(v36 + 174));
          *((_WORD *)a3 + 6) = v36 + 176;
          if (v35 - (unsigned __int16)(v36 + 176) <= 1)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v92 = __PAIR64__(v46, v47);
          v22 = *(unsigned __int16 *)(v37 + (unsigned __int16)(v36 + 176));
          *((_WORD *)a3 + 6) = v36 + 178;
          if (v35 - (unsigned __int16)(v36 + 178) <= 1)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v23 = *(unsigned __int16 *)(v37 + (unsigned __int16)(v36 + 178));
          *((_WORD *)a3 + 6) = v36 + 180;
          if (v35 - (unsigned __int16)(v36 + 180) <= 3)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v91 = __PAIR64__(v44, v45);
          v24 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 180));
          *((_WORD *)a3 + 6) = v36 + 184;
          if (v35 - (unsigned __int16)(v36 + 184) <= 3)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v90 = v61;
          v25 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 184));
          *((_WORD *)a3 + 6) = v36 + 188;
          if (v35 - (unsigned __int16)(v36 + 188) <= 1)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          HIDWORD(v87) = v71;
          v88 = __PAIR64__(v62, v70);
          v89 = __PAIR64__(v42, v43);
          v26 = *(unsigned __int16 *)(v37 + (unsigned __int16)(v36 + 188));
          *((_WORD *)a3 + 6) = v36 + 190;
          if (v35 - (unsigned __int16)(v36 + 190) <= 1)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          LODWORD(v87) = v63;
          v27 = *(unsigned __int16 *)(v37 + (unsigned __int16)(v36 + 190));
          *((_WORD *)a3 + 6) = v36 + 192;
          if (v35 - (unsigned __int16)(v36 + 192) <= 1)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v85 = v64;
          v86 = __PAIR64__(v69, v68);
          v28 = *(unsigned __int16 *)(v37 + (unsigned __int16)(v36 + 192));
          *((_WORD *)a3 + 6) = v36 + 194;
          if (v35 - (unsigned __int16)(v36 + 194) <= 1)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v29 = *(unsigned __int16 *)(v37 + (unsigned __int16)(v36 + 194));
          *((_WORD *)a3 + 6) = v36 + 196;
          if (v35 - (unsigned __int16)(v36 + 196) <= 3)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v30 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 196));
          *((_WORD *)a3 + 6) = v36 + 200;
          if (v35 - (unsigned __int16)(v36 + 200) <= 3)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v19 = v72;
          v16 = v65;
          v31 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 200));
          *((_WORD *)a3 + 6) = v36 + 204;
          if (v35 - (unsigned __int16)(v36 + 204) <= 3)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v20 = v73;
          v21 = v74;
          v18 = v67;
          v17 = v66;
          v32 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 204));
          *((_WORD *)a3 + 6) = v36 + 208;
          if (v35 - (unsigned __int16)(v36 + 208) <= 3)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v33 = *(_DWORD *)(v37 + (unsigned __int16)(v36 + 208));
          *((_WORD *)a3 + 6) = v36 + 212;
        }
        else
        {
          v86 = 0;
          v87 = 0;
          v88 = 0;
          v89 = 0;
          v91 = 0;
          v92 = 0;
          v93 = 0;
          v94 = 0;
          v95 = 0;
          v96 = 0;
          v97 = 0;
          v98 = 0;
          v99 = 0;
          v90 = 0;
          v85 = 0;
          v16 = 0;
          v17 = 0;
          v18 = 0;
          v19 = 0;
          v20 = 0;
          v21 = 0;
          result = 0;
          v22 = 0;
          v23 = 0;
          v24 = 0;
          v25 = 0;
          v26 = 0;
          v27 = 0;
          v28 = 0;
          v29 = 0;
          v30 = 0;
          v31 = 0;
          v32 = 0;
          v33 = 0;
        }
        v3 = a2;
        v7 = v83;
        v9 = v81;
        v8 = v82;
        v11 = v79;
        v10 = v80;
        v13 = v77;
        v12 = v78;
        v15 = v75;
        v14 = v76;
        if (a2)
          return v3(a1, v7, v8, v9, v10, v11, v12, v13, __PAIR64__(v15, v14), __PAIR64__(HIDWORD(v86), v100), __PAIR64__(HIDWORD(v89), v86), __PAIR64__(HIDWORD(v91), v89), __PAIR64__(HIDWORD(v92), v91), __PAIR64__(HIDWORD(v93), v92), __PAIR64__(HIDWORD(v94), v93), __PAIR64__(HIDWORD(v95), v94), __PAIR64__(HIDWORD(v96), v95), __PAIR64__(HIDWORD(v97), v96), __PAIR64__(HIDWORD(v98), v97),
                   __PAIR64__(HIDWORD(v99), v98),
                   __PAIR64__(v90, v99),
                   __PAIR64__(v87, HIDWORD(v88)),
                   __PAIR64__(v16, v85),
                   __PAIR64__(v18, v17),
                   __PAIR64__(HIDWORD(v87), v88),
                   __PAIR64__(v20, v19),
                   __PAIR64__(result, v21),
                   __PAIR64__(v23, v22),
                   __PAIR64__(v25, v24),
                   __PAIR64__(v27, v26),
                   __PAIR64__(v29, v28),
                   __PAIR64__(v31, v30),
                   __PAIR64__(v33, v32));
        return result;
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  result = sub_10005549C();
  if ((_DWORD)result
    && (sub_100054530("EnhancedProfilingStats VSC failed with status %!", a1),
        v6 = sub_1000544A0(0x54u),
        result = os_log_type_enabled(v6, OS_LOG_TYPE_ERROR),
        (_DWORD)result))
  {
    sub_1006CEEC0();
    v7 = 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
    v14 = 0;
    v15 = 0;
    v100 = 0;
    v86 = 0;
    v87 = 0;
    v88 = 0;
    v89 = 0;
    v91 = 0;
    v92 = 0;
    v93 = 0;
    v94 = 0;
    v95 = 0;
    v96 = 0;
    v97 = 0;
    v98 = 0;
    v99 = 0;
    v90 = 0;
    v85 = 0;
    v16 = 0;
    v17 = 0;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    result = 0;
  }
  else
  {
    v7 = 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
    v14 = 0;
    v15 = 0;
    v100 = 0;
    v86 = 0;
    v87 = 0;
    v88 = 0;
    v89 = 0;
    v91 = 0;
    v92 = 0;
    v93 = 0;
    v94 = 0;
    v95 = 0;
    v96 = 0;
    v97 = 0;
    v98 = 0;
    v99 = 0;
    v90 = 0;
    v85 = 0;
    v16 = 0;
    v17 = 0;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    v21 = 0;
  }
  v22 = 0;
  v23 = 0;
  v24 = 0;
  v25 = 0;
  v26 = 0;
  v27 = 0;
  v28 = 0;
  v29 = 0;
  v30 = 0;
  v31 = 0;
  v32 = 0;
  v33 = 0;
  if (v3)
    return v3(a1, v7, v8, v9, v10, v11, v12, v13, __PAIR64__(v15, v14), __PAIR64__(HIDWORD(v86), v100), __PAIR64__(HIDWORD(v89), v86), __PAIR64__(HIDWORD(v91), v89), __PAIR64__(HIDWORD(v92), v91), __PAIR64__(HIDWORD(v93), v92), __PAIR64__(HIDWORD(v94), v93), __PAIR64__(HIDWORD(v95), v94), __PAIR64__(HIDWORD(v96), v95), __PAIR64__(HIDWORD(v97), v96), __PAIR64__(HIDWORD(v98), v97),
             __PAIR64__(HIDWORD(v99), v98),
             __PAIR64__(v90, v99),
             __PAIR64__(v87, HIDWORD(v88)),
             __PAIR64__(v16, v85),
             __PAIR64__(v18, v17),
             __PAIR64__(HIDWORD(v87), v88),
             __PAIR64__(v20, v19),
             __PAIR64__(result, v21),
             __PAIR64__(v23, v22),
             __PAIR64__(v25, v24),
             __PAIR64__(v27, v26),
             __PAIR64__(v29, v28),
             __PAIR64__(v31, v30),
             __PAIR64__(v33, v32));
  return result;
}

void sub_1001A9E14(uint64_t a1, void (*a2)(uint64_t, uint64_t, _QWORD, _QWORD), uint64_t *a3)
{
  NSObject *v5;
  uint64_t v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;

  if (!(_DWORD)a1)
  {
    if (*((_BYTE *)a3 + 15))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1057, "void _BCM_AddToFilterAcceptListWithOptionsPollStatsParser(OI_STATUS, GENERIC_HL_CB, OI_BYTE_STREAM *)");
    }
    else
    {
      v8 = *((unsigned __int16 *)a3 + 5);
      v9 = *((unsigned __int16 *)a3 + 6);
      if ((int)(v8 - v9) > 3 && *((_BYTE *)a3 + 14) == 1)
      {
        v10 = *a3;
        v6 = *(unsigned int *)(*a3 + v9);
        *((_WORD *)a3 + 6) = v9 + 4;
        if (v8 <= (unsigned __int16)(v9 + 4))
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        *((_WORD *)a3 + 6) = v9 + 5;
        v7 = *(_BYTE *)(v10 + (unsigned __int16)(v9 + 4));
        if (a2)
          goto LABEL_6;
        return;
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  if (sub_10005549C())
  {
    sub_100054530("status %!", a1);
    v5 = sub_1000544A0(0x54u);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_1006CEEC0();
  }
  v6 = 0;
  v7 = 0;
  if (a2)
LABEL_6:
    a2(a1, v6, v7, 0);
}

void sub_1001A9F5C(uint64_t a1, void (*a2)(uint64_t, _OWORD *), uint64_t *a3)
{
  NSObject *v5;
  uint64_t v6;
  unsigned int v7;
  unsigned __int16 v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  uint64_t v13;
  _OWORD v14[5];
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  v18 = 0u;
  v19 = 0u;
  v16 = 0u;
  v17 = 0u;
  v15 = 0u;
  if ((_DWORD)a1)
  {
    if (sub_10005549C())
    {
      sub_100054530("status %!", a1);
      v5 = sub_1000544A0(0x54u);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        sub_1006CEEC0();
    }
  }
  else
  {
    if (*((_BYTE *)a3 + 15))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1078, "void _BCM_SPMICoexDebugCountersParser(OI_STATUS, GENERIC_HL_CB, OI_BYTE_STREAM *)");
LABEL_27:
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    v6 = 0;
    v7 = *((unsigned __int16 *)a3 + 5);
    v8 = *((_WORD *)a3 + 6);
    v9 = v7 - 1;
    do
    {
      if (v7 <= v8 || *((_BYTE *)a3 + 14) != 1)
        goto LABEL_27;
      v10 = *a3;
      *((_WORD *)a3 + 6) = v8 + 1;
      *((_BYTE *)&v15 + v6) = *(_BYTE *)(v10 + v8);
      if (v7 <= (unsigned __int16)(v8 + 1))
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      v11 = v8 + 2;
      *((_WORD *)a3 + 6) = v11;
      *((_BYTE *)&v15 + v6 + 1) = *(_BYTE *)(v10 + v8 + 1);
      if (v9 <= (unsigned __int16)v11)
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      *(_WORD *)((char *)&v15 + v6 + 2) = *(_WORD *)(v10 + v11);
      v8 += 4;
      *((_WORD *)a3 + 6) = v8;
      v6 += 4;
    }
    while (v6 != 40);
    for (i = 0; i != 40; i += 4)
    {
      if (v7 <= v8)
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      *((_WORD *)a3 + 6) = v8 + 1;
      *((_BYTE *)&v17 + i + 8) = *(_BYTE *)(v10 + v8);
      if (v7 <= (unsigned __int16)(v8 + 1))
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      v13 = v8 + 2;
      *((_WORD *)a3 + 6) = v13;
      *((_BYTE *)&v17 + i + 9) = *(_BYTE *)(v10 + v8 + 1);
      if (v9 <= (unsigned __int16)v13)
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      *(_WORD *)((char *)&v17 + i + 10) = *(_WORD *)(v10 + v13);
      v8 += 4;
      *((_WORD *)a3 + 6) = v8;
    }
  }
  if (a2)
  {
    v14[2] = v17;
    v14[3] = v18;
    v14[4] = v19;
    v14[0] = v15;
    v14[1] = v16;
    a2(a1, v14);
  }
}

void sub_1001AA1C8(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t *a3)
{
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if ((_DWORD)a1)
  {
    if (sub_10005549C())
    {
      sub_100054530("status %!", a1);
      v5 = sub_1000544A0(0x54u);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        sub_1006CEEC0();
    }
    v6 = 0;
    if (a2)
      goto LABEL_6;
    return;
  }
  if (*((_BYTE *)a3 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1103, "void _BCM_Load_MSFFile_EventParser(OI_STATUS, GENERIC_HL_CB, OI_BYTE_STREAM *)");
    goto LABEL_14;
  }
  v7 = *((unsigned __int16 *)a3 + 6);
  if (*((unsigned __int16 *)a3 + 5) <= v7 || *((_BYTE *)a3 + 14) != 1)
LABEL_14:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v8 = *a3;
  *((_WORD *)a3 + 6) = v7 + 1;
  v6 = *(unsigned __int8 *)(v8 + v7);
  if (a2)
LABEL_6:
    a2(a1, v6);
}

void sub_1001AA2D0(uint64_t a1, uint64_t (*a2)(_QWORD, _QWORD))
{
  void (*v4)(uint64_t, _QWORD);
  NSObject *v5;

  if ((_DWORD)a1)
  {
    v4 = (void (*)(uint64_t, _QWORD))off_1009848F0;
    if (sub_10005549C()
      && (sub_100054530("status %!, hlCb 0x%x, pCallbackFunc %x", a1, a2, off_1009848F0),
          v5 = sub_1000544A0(0x54u),
          os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)))
    {
      sub_1006CEEC0();
      if (!v4)
        return;
    }
    else if (!v4)
    {
      return;
    }
    v4(a1, 0);
    a2 = 0;
  }
  off_1009848F0 = a2;
}

uint64_t sub_1001AA374(int a1, int a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int16 v10;
  unsigned __int16 v11;
  uint64_t v12;
  uint64_t v13;

  v12 = 0;
  v13 = 0;
  result = sub_10004BC7C(&v12);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v13))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2751, "OI_STATUS _BCM_OlympicRSSIThreshold(uint32_t, uint32_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v13) - WORD2(v13) > 3 && BYTE6(v13) == 2)
    {
      *(_BYTE *)(v12 + WORD2(v13)) = 1;
      *(_WORD *)(v12 + WORD2(v13) + 1) = 0;
      *(_BYTE *)(v12 + WORD2(v13) + 3) = 0;
      v10 = WORD2(v13) + 4;
      WORD2(v13) += 4;
      if (HIBYTE(v13))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2752, "OI_STATUS _BCM_OlympicRSSIThreshold(uint32_t, uint32_t, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v13) - v10 > 3 && BYTE6(v13) == 2)
      {
        *(_BYTE *)(v12 + v10) = a1;
        *(_BYTE *)(v12 + WORD2(v13) + 1) = BYTE1(a1);
        *(_BYTE *)(v12 + WORD2(v13) + 2) = BYTE2(a1);
        *(_BYTE *)(v12 + WORD2(v13) + 3) = HIBYTE(a1);
        v11 = WORD2(v13) + 4;
        WORD2(v13) += 4;
        if (HIBYTE(v13))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2753, "OI_STATUS _BCM_OlympicRSSIThreshold(uint32_t, uint32_t, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v13) - v11 > 3 && BYTE6(v13) == 2)
        {
          *(_BYTE *)(v12 + v11) = a2;
          *(_BYTE *)(v12 + WORD2(v13) + 1) = BYTE1(a2);
          *(_BYTE *)(v12 + WORD2(v13) + 2) = BYTE2(a2);
          *(_BYTE *)(v12 + WORD2(v13) + 3) = HIBYTE(a2);
          WORD2(v13) += 4;
          return sub_10004C8A0(226, v12, BYTE4(v13), a3, (uint64_t)sub_10004AE9C, v7, v8, v9);
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001AA600(char a1, _BYTE *a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int16 v10;
  unsigned __int16 v11;
  uint64_t v12;
  unsigned __int16 v13;
  unsigned __int16 v14;
  uint64_t v15;
  uint64_t v16;

  v15 = 0;
  v16 = 0;
  result = sub_10004BC7C(&v15);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v16))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2767, "OI_STATUS _BCM_OlympicWriteDisableFEC(_Bool, OI_HCI_CONNECTION_HANDLE, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v16) - WORD2(v16) > 3 && BYTE6(v16) == 2)
    {
      *(_BYTE *)(v15 + WORD2(v16)) = 7;
      *(_WORD *)(v15 + WORD2(v16) + 1) = 0;
      *(_BYTE *)(v15 + WORD2(v16) + 3) = 0;
      v10 = WORD2(v16);
      v11 = WORD2(v16) + 4;
      WORD2(v16) += 4;
      if (HIBYTE(v16))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2768, "OI_STATUS _BCM_OlympicWriteDisableFEC(_Bool, OI_HCI_CONNECTION_HANDLE, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v16) > v11 && BYTE6(v16) == 2)
      {
        WORD2(v16) = v10 + 5;
        *(_BYTE *)(v15 + v11) = a1;
        if (HIBYTE(v16))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2769, "OI_STATUS _BCM_OlympicWriteDisableFEC(_Bool, OI_HCI_CONNECTION_HANDLE, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v16) - WORD2(v16) > 2 && BYTE6(v16) == 2)
        {
          v12 = v15 + WORD2(v16);
          *(_BYTE *)(v12 + 2) = 0;
          *(_WORD *)v12 = 0;
          v13 = WORD2(v16) + 3;
          WORD2(v16) += 3;
          if (HIBYTE(v16))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2770, "OI_STATUS _BCM_OlympicWriteDisableFEC(_Bool, OI_HCI_CONNECTION_HANDLE, BT_VSC_COMPLETE_CB)");
          }
          else if (WORD1(v16) - v13 > 1 && BYTE6(v16) == 2)
          {
            *(_BYTE *)(v15 + v13) = *a2;
            *(_BYTE *)(v15 + WORD2(v16) + 1) = a2[1];
            v14 = WORD2(v16) + 2;
            WORD2(v16) += 2;
            if (HIBYTE(v16))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2771, "OI_STATUS _BCM_OlympicWriteDisableFEC(_Bool, OI_HCI_CONNECTION_HANDLE, BT_VSC_COMPLETE_CB)");
            }
            else if (WORD1(v16) - v14 > 1 && BYTE6(v16) == 2)
            {
              *(_WORD *)(v15 + v14) = 0;
              WORD2(v16) += 2;
              return sub_10004C8A0(226, v15, BYTE4(v16), a3, (uint64_t)sub_10004AE9C, v7, v8, v9);
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001AA92C(char a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int16 v8;
  unsigned __int16 v9;
  uint64_t v10;
  uint64_t v11;

  v10 = 0;
  v11 = 0;
  result = sub_10004BC7C(&v10);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v11))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2786, "OI_STATUS _BCM_OlympicReadProfilingStats(_Bool, BT_VSC_PROFILING_STATS_CB)");
    }
    else if (WORD1(v11) - WORD2(v11) > 3 && BYTE6(v11) == 2)
    {
      *(_BYTE *)(v10 + WORD2(v11)) = 13;
      *(_WORD *)(v10 + WORD2(v11) + 1) = 0;
      *(_BYTE *)(v10 + WORD2(v11) + 3) = 0;
      v8 = WORD2(v11);
      v9 = WORD2(v11) + 4;
      WORD2(v11) += 4;
      if (HIBYTE(v11))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2787, "OI_STATUS _BCM_OlympicReadProfilingStats(_Bool, BT_VSC_PROFILING_STATS_CB)");
      }
      else if (WORD1(v11) > v9 && BYTE6(v11) == 2)
      {
        WORD2(v11) = v8 + 5;
        *(_BYTE *)(v10 + v9) = a1;
        return sub_10004C8A0(226, v10, BYTE4(v11), a2, (uint64_t)sub_1001A5C24, v5, v6, v7);
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001AAAAC(char a1, char a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v12 = 0;
  v13 = 0;
  result = sub_10004BC7C(&v12);
  if (((a2 - 2) & 0xFC) != 0)
    v10 = 1;
  else
    v10 = 0x16141311u >> (8 * (a2 - 2));
  if (!(_DWORD)result)
  {
    if (HIBYTE(v13))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2816, "OI_STATUS _BCM_OlympicReadEnhancedProfilingStats(_Bool, uint8_t, BT_VSC_ENHANCED_PROFILING_STATS_CB)");
    }
    else
    {
      v11 = WORD2(v13);
      if (WORD1(v13) > WORD2(v13) && BYTE6(v13) == 2)
      {
        ++WORD2(v13);
        *(_BYTE *)(v12 + v11) = v10;
        if (HIBYTE(v13))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2817, "OI_STATUS _BCM_OlympicReadEnhancedProfilingStats(_Bool, uint8_t, BT_VSC_ENHANCED_PROFILING_STATS_CB)");
        }
        else if (WORD1(v13) - WORD2(v13) > 3 && BYTE6(v13) == 2)
        {
          *(_BYTE *)(v12 + WORD2(v13)) = a1;
          *(_WORD *)(v12 + WORD2(v13) + 1) = 0;
          *(_BYTE *)(v12 + WORD2(v13) + 3) = 0;
          WORD2(v13) += 4;
          return sub_10004C8A0(496, v12, BYTE4(v13), a3, (uint64_t)sub_1001A5DF8, v7, v8, v9);
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001AAC54(char a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v9 = 0;
  v10 = 0;
  result = sub_10004BC7C(&v9);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v10))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2832, "OI_STATUS _BCM_OlympicReadTransmitIpaEpaCounters(uint8_t, BT_VSC_TRANSMIT_IPA_EPA_COUNTERS_CB)");
    }
    else
    {
      v8 = WORD2(v10);
      if (WORD1(v10) > WORD2(v10) && BYTE6(v10) == 2)
      {
        ++WORD2(v10);
        *(_BYTE *)(v9 + v8) = a1;
        return sub_10004C8A0(528, v9, BYTE4(v10), a2, (uint64_t)sub_1001A6DC4, v5, v6, v7);
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001AAD20(char a1, _BYTE *a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int16 v10;
  __int16 v11;
  unsigned __int16 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = 0;
  v14 = 0;
  result = sub_10004BC7C(&v13);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v14))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2847, "OI_STATUS _BCM_OlympicSetCountryBasedPower(uint8_t, OI_HCI_CONNECTION_HANDLE, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v14) - WORD2(v14) > 3 && BYTE6(v14) == 2)
    {
      *(_BYTE *)(v13 + WORD2(v14)) = 18;
      *(_WORD *)(v13 + WORD2(v14) + 1) = 0;
      *(_BYTE *)(v13 + WORD2(v14) + 3) = 0;
      v10 = WORD2(v14) + 4;
      WORD2(v14) += 4;
      if (HIBYTE(v14))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2848, "OI_STATUS _BCM_OlympicSetCountryBasedPower(uint8_t, OI_HCI_CONNECTION_HANDLE, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v14) - v10 > 1 && BYTE6(v14) == 2)
      {
        *(_BYTE *)(v13 + v10) = *a2;
        *(_BYTE *)(v13 + WORD2(v14) + 1) = a2[1];
        v11 = WORD2(v14);
        v12 = WORD2(v14) + 2;
        WORD2(v14) += 2;
        if (HIBYTE(v14))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2849, "OI_STATUS _BCM_OlympicSetCountryBasedPower(uint8_t, OI_HCI_CONNECTION_HANDLE, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v14) > v12 && BYTE6(v14) == 2)
        {
          WORD2(v14) = v11 + 3;
          *(_BYTE *)(v13 + v12) = a1;
          return sub_10004C8A0(226, v13, BYTE4(v14), a3, (uint64_t)sub_10004AE9C, v7, v8, v9);
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001AAF44(_BYTE *a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int16 v8;
  __int16 v9;
  unsigned __int16 v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;

  v18 = 0;
  v19 = 0;
  result = sub_10004BC7C(&v18);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v19))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2866, "OI_STATUS _BCM_OlympicAntennaPreference(BT_VSCAntPrefParams_t *, BT_VSC_BYTESTREAM_CB)");
    }
    else if (WORD1(v19) - WORD2(v19) > 3 && BYTE6(v19) == 2)
    {
      *(_BYTE *)(v18 + WORD2(v19)) = 21;
      *(_WORD *)(v18 + WORD2(v19) + 1) = 0;
      *(_BYTE *)(v18 + WORD2(v19) + 3) = 0;
      v8 = WORD2(v19) + 4;
      WORD2(v19) += 4;
      if (HIBYTE(v19))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2867, "OI_STATUS _BCM_OlympicAntennaPreference(BT_VSCAntPrefParams_t *, BT_VSC_BYTESTREAM_CB)");
      }
      else if (WORD1(v19) - v8 > 1 && BYTE6(v19) == 2)
      {
        *(_BYTE *)(v18 + v8) = *a1;
        *(_BYTE *)(v18 + WORD2(v19) + 1) = a1[1];
        v9 = WORD2(v19);
        v10 = WORD2(v19) + 2;
        WORD2(v19) += 2;
        if (HIBYTE(v19))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2868, "OI_STATUS _BCM_OlympicAntennaPreference(BT_VSCAntPrefParams_t *, BT_VSC_BYTESTREAM_CB)");
        }
        else if (WORD1(v19) > v10 && BYTE6(v19) == 2)
        {
          v11 = a1[2];
          WORD2(v19) = v9 + 3;
          *(_BYTE *)(v18 + v10) = v11;
          if (HIBYTE(v19))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2869, "OI_STATUS _BCM_OlympicAntennaPreference(BT_VSCAntPrefParams_t *, BT_VSC_BYTESTREAM_CB)");
          }
          else
          {
            v12 = WORD2(v19);
            if (WORD1(v19) > WORD2(v19) && BYTE6(v19) == 2)
            {
              v13 = a1[3];
              ++WORD2(v19);
              *(_BYTE *)(v18 + v12) = v13;
              if (HIBYTE(v19))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2870, "OI_STATUS _BCM_OlympicAntennaPreference(BT_VSCAntPrefParams_t *, BT_VSC_BYTESTREAM_CB)");
              }
              else
              {
                v14 = WORD2(v19);
                if (WORD1(v19) > WORD2(v19) && BYTE6(v19) == 2)
                {
                  v15 = a1[4];
                  ++WORD2(v19);
                  *(_BYTE *)(v18 + v14) = v15;
                  if (HIBYTE(v19))
                  {
                    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2871, "OI_STATUS _BCM_OlympicAntennaPreference(BT_VSCAntPrefParams_t *, BT_VSC_BYTESTREAM_CB)");
                  }
                  else
                  {
                    v16 = WORD2(v19);
                    if (WORD1(v19) > WORD2(v19) && BYTE6(v19) == 2)
                    {
                      v17 = a1[5];
                      ++WORD2(v19);
                      *(_BYTE *)(v18 + v16) = v17;
                      return sub_10004C8A0(226, v18, BYTE4(v19), a2, (uint64_t)sub_1000723AC, v5, v6, v7);
                    }
                  }
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001AB2D4(char a1, char a2, char a3, uint64_t (*a4)())
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int16 v14;
  unsigned __int16 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v17 = 0;
  v18 = 0;
  result = sub_10004BC7C(&v17);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v18))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3090, "OI_STATUS _BCM_SetCellularTxAntenna(uint8_t, _Bool, uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v12 = WORD2(v18);
      if (WORD1(v18) > WORD2(v18) && BYTE6(v18) == 2)
      {
        ++WORD2(v18);
        *(_BYTE *)(v17 + v12) = a1;
        if (HIBYTE(v18))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3091, "OI_STATUS _BCM_SetCellularTxAntenna(uint8_t, _Bool, uint8_t, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v18) - WORD2(v18) > 2 && BYTE6(v18) == 2)
        {
          v13 = v17 + WORD2(v18);
          *(_BYTE *)(v13 + 2) = 0;
          *(_WORD *)v13 = 0;
          v14 = WORD2(v18);
          v15 = WORD2(v18) + 3;
          WORD2(v18) += 3;
          if (HIBYTE(v18))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3092, "OI_STATUS _BCM_SetCellularTxAntenna(uint8_t, _Bool, uint8_t, BT_VSC_COMPLETE_CB)");
          }
          else if (WORD1(v18) > v15 && BYTE6(v18) == 2)
          {
            WORD2(v18) = v14 + 4;
            *(_BYTE *)(v17 + v15) = a2;
            if (HIBYTE(v18))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3093, "OI_STATUS _BCM_SetCellularTxAntenna(uint8_t, _Bool, uint8_t, BT_VSC_COMPLETE_CB)");
            }
            else
            {
              v16 = WORD2(v18);
              if (WORD1(v18) > WORD2(v18) && BYTE6(v18) == 2)
              {
                ++WORD2(v18);
                *(_BYTE *)(v17 + v16) = a3;
                return sub_10004C8A0(383, v17, BYTE4(v18), a4, (uint64_t)sub_10004AE9C, v9, v10, v11);
              }
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001AB528(_WORD *a1, const void *a2, int a3, uint64_t (*a4)())
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  unsigned __int16 v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v19 = 0;
  v20 = 0;
  result = sub_10004BC7C(&v19);
  if ((_DWORD)result)
    return result;
  if (HIBYTE(v20))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3456, "OI_STATUS _BCM_LEMetaMonitorRssi(OI_HCI_CONNECTION_HANDLE, int8_t *, uint8_t, BT_VSC_COMPLETE_CB)");
    goto LABEL_22;
  }
  v9 = WORD2(v20);
  if (WORD1(v20) <= WORD2(v20) || BYTE6(v20) != 2)
LABEL_22:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  ++WORD2(v20);
  *(_BYTE *)(v19 + v9) = 11;
  if (HIBYTE(v20))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3457, "OI_STATUS _BCM_LEMetaMonitorRssi(OI_HCI_CONNECTION_HANDLE, int8_t *, uint8_t, BT_VSC_COMPLETE_CB)");
    goto LABEL_24;
  }
  v10 = WORD2(v20);
  if (WORD1(v20) <= WORD2(v20) || BYTE6(v20) != 2)
LABEL_24:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  ++WORD2(v20);
  *(_BYTE *)(v19 + v10) = 1;
  if (HIBYTE(v20))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3458, "OI_STATUS _BCM_LEMetaMonitorRssi(OI_HCI_CONNECTION_HANDLE, int8_t *, uint8_t, BT_VSC_COMPLETE_CB)");
    goto LABEL_26;
  }
  if (WORD1(v20) - WORD2(v20) <= 1 || BYTE6(v20) != 2)
LABEL_26:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  *(_WORD *)(v19 + WORD2(v20)) = *a1;
  v11 = WORD2(v20);
  v12 = WORD2(v20) + 2;
  WORD2(v20) += 2;
  if (HIBYTE(v20))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3459, "OI_STATUS _BCM_LEMetaMonitorRssi(OI_HCI_CONNECTION_HANDLE, int8_t *, uint8_t, BT_VSC_COMPLETE_CB)");
    goto LABEL_28;
  }
  if (WORD1(v20) <= v12 || BYTE6(v20) != 2)
LABEL_28:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  WORD2(v20) = v11 + 3;
  *(_BYTE *)(v19 + v12) = 5;
  v13 = v19;
  v14 = WORD2(v20);
  if (HIBYTE(v20))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3460, "OI_STATUS _BCM_LEMetaMonitorRssi(OI_HCI_CONNECTION_HANDLE, int8_t *, uint8_t, BT_VSC_COMPLETE_CB)");
    v15 = 0;
  }
  else
  {
    v15 = WORD1(v20) - WORD2(v20);
  }
  if (v15 < a3 || BYTE6(v20) != 2)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  memmove((void *)(v13 + v14), a2, a3);
  WORD2(v20) += a3;
  return sub_10004C8A0(233, v19, BYTE4(v20), a4, (uint64_t)sub_10004AE9C, v16, v17, v18);
}

uint64_t sub_1001AB834(_WORD *a1, uint64_t a2, uint64_t (*a3)())
{
  uint64_t result;
  unsigned __int16 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v11 = 0;
  v12 = 0;
  result = sub_10004BC7C(&v11);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v12))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3702, "OI_STATUS _BCM_LEWriteRemotePublicAddress(OI_HCI_CONNECTION_HANDLE, OI_BD_ADDR *, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v12) - WORD2(v12) > 1 && BYTE6(v12) == 2)
    {
      *(_WORD *)(v11 + WORD2(v12)) = *a1;
      v7 = WORD2(v12) + 2;
      WORD2(v12) += 2;
      if (HIBYTE(v12))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3703, "OI_STATUS _BCM_LEWriteRemotePublicAddress(OI_HCI_CONNECTION_HANDLE, OI_BD_ADDR *, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v12) - v7 > 5 && BYTE6(v12) == 2)
      {
        sub_10004C878(v11 + v7, a2, 6uLL);
        WORD2(v12) += 6;
        return sub_10004C8A0(386, v11, BYTE4(v12), a3, (uint64_t)sub_10004AE9C, v8, v9, v10);
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001AB9B4(uint64_t (*a1)())
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v8 = 0;
  v9 = 0;
  result = sub_10004BC7C(&v8);
  if ((_DWORD)result)
    return result;
  if (HIBYTE(v9))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4116, "OI_STATUS _BCM_GetPowerConsumption(BT_VSC_GET_POWER_CONSUME_CB)");
    goto LABEL_13;
  }
  v6 = WORD2(v9);
  if (WORD1(v9) <= WORD2(v9) || BYTE6(v9) != 2)
LABEL_13:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  ++WORD2(v9);
  *(_BYTE *)(v8 + v6) = -16;
  if (HIBYTE(v9))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4117, "OI_STATUS _BCM_GetPowerConsumption(BT_VSC_GET_POWER_CONSUME_CB)");
    goto LABEL_15;
  }
  v7 = WORD2(v9);
  if (WORD1(v9) <= WORD2(v9) || BYTE6(v9) != 2)
LABEL_15:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  ++WORD2(v9);
  *(_BYTE *)(v8 + v7) = 3;
  if (off_1009848F0)
    sub_100253460();
  return sub_10004C8A0(0, v8, BYTE4(v9), a1, (uint64_t)sub_1001AA2D0, v3, v4, v5);
}

uint64_t sub_1001ABB0C(char a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int16 v8;
  unsigned __int16 v9;
  uint64_t v10;
  uint64_t v11;

  v10 = 0;
  v11 = 0;
  result = sub_10004BC7C(&v10);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v11))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4133, "OI_STATUS _BCM_WriteCellularTxState(_Bool, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v11) - WORD2(v11) > 3 && BYTE6(v11) == 2)
    {
      *(_DWORD *)(v10 + WORD2(v11)) = 0;
      v8 = WORD2(v11);
      v9 = WORD2(v11) + 4;
      WORD2(v11) += 4;
      if (HIBYTE(v11))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4134, "OI_STATUS _BCM_WriteCellularTxState(_Bool, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v11) > v9 && BYTE6(v11) == 2)
      {
        WORD2(v11) = v8 + 5;
        *(_BYTE *)(v10 + v9) = a1;
        return sub_10004C8A0(383, v10, BYTE4(v11), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001ABC58(char a1, _WORD *a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  __int16 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = 0;
  v14 = 0;
  result = sub_10004BC7C(&v13);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v14))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4148, "OI_STATUS _BCM_WriteWBSEnable(_Bool, OI_HCI_CONNECTION_HANDLE, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v7 = WORD2(v14);
      if (WORD1(v14) > WORD2(v14) && BYTE6(v14) == 2)
      {
        ++WORD2(v14);
        *(_BYTE *)(v13 + v7) = a1;
        if (HIBYTE(v14))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4149, "OI_STATUS _BCM_WriteWBSEnable(_Bool, OI_HCI_CONNECTION_HANDLE, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v14) - WORD2(v14) > 1 && BYTE6(v14) == 2)
        {
          *(_WORD *)(v13 + WORD2(v14)) = 2;
          WORD2(v14) += 2;
          if (sub_1001F4E24() > 8)
          {
            if (HIBYTE(v14))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4152, "OI_STATUS _BCM_WriteWBSEnable(_Bool, OI_HCI_CONNECTION_HANDLE, BT_VSC_COMPLETE_CB)");
            }
            else if (WORD1(v14) - WORD2(v14) > 1 && BYTE6(v14) == 2)
            {
              *(_WORD *)(v13 + WORD2(v14)) = *a2;
              v11 = BYTE4(v14) + 2;
              WORD2(v14) += 2;
              v12 = 258;
              return sub_10004C8A0(v12, v13, v11, a3, (uint64_t)sub_10004AE9C, v8, v9, v10);
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          v12 = 126;
          v11 = BYTE4(v14);
          return sub_10004C8A0(v12, v13, v11, a3, (uint64_t)sub_10004AE9C, v8, v9, v10);
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001ABE74(unsigned int a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v16 = 0;
  v17 = 0;
  result = sub_10004BC7C(&v16);
  v8 = 0x101u >> (8 * a1);
  if (a1 <= 2)
    v9 = 0x100u >> (8 * a1);
  else
    v9 = 0;
  if (a1 <= 2)
    v10 = 0x20000u >> (8 * a1);
  else
    v10 = 0;
  if (a1 > 2)
    LOBYTE(v8) = 0;
  if (!(_DWORD)result)
  {
    if (HIBYTE(v17))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4206, "OI_STATUS _BCM_WriteVoiceConfig(VSCVoiceRouting, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v11 = WORD2(v17);
      if (WORD1(v17) > WORD2(v17) && BYTE6(v17) == 2)
      {
        ++WORD2(v17);
        *(_BYTE *)(v16 + v11) = v9;
        if (HIBYTE(v17))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4207, "OI_STATUS _BCM_WriteVoiceConfig(VSCVoiceRouting, BT_VSC_COMPLETE_CB)");
        }
        else
        {
          v12 = WORD2(v17);
          if (WORD1(v17) > WORD2(v17) && BYTE6(v17) == 2)
          {
            ++WORD2(v17);
            *(_BYTE *)(v16 + v12) = v10;
            if (HIBYTE(v17))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4208, "OI_STATUS _BCM_WriteVoiceConfig(VSCVoiceRouting, BT_VSC_COMPLETE_CB)");
            }
            else
            {
              v13 = WORD2(v17);
              if (WORD1(v17) > WORD2(v17) && BYTE6(v17) == 2)
              {
                ++WORD2(v17);
                *(_BYTE *)(v16 + v13) = v8;
                if (HIBYTE(v17))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4209, "OI_STATUS _BCM_WriteVoiceConfig(VSCVoiceRouting, BT_VSC_COMPLETE_CB)");
                }
                else
                {
                  v14 = WORD2(v17);
                  if (WORD1(v17) > WORD2(v17) && BYTE6(v17) == 2)
                  {
                    ++WORD2(v17);
                    *(_BYTE *)(v16 + v14) = 0;
                    if (HIBYTE(v17))
                    {
                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4210, "OI_STATUS _BCM_WriteVoiceConfig(VSCVoiceRouting, BT_VSC_COMPLETE_CB)");
                    }
                    else
                    {
                      v15 = WORD2(v17);
                      if (WORD1(v17) > WORD2(v17) && BYTE6(v17) == 2)
                      {
                        ++WORD2(v17);
                        *(_BYTE *)(v16 + v15) = 0;
                        return sub_10004C8A0(28, v16, BYTE4(v17), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
                      }
                    }
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                }
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001AC14C(const void *a1, unsigned int a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v13 = 0;
  v14 = 0;
  result = sub_10004BC7C(&v13);
  if (!(_DWORD)result)
  {
    v7 = v13;
    v8 = WORD2(v14);
    if (HIBYTE(v14))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4224, "OI_STATUS _BCM_WritePCMConfig(uint8_t *, uint32_t, BT_VSC_COMPLETE_CB)");
      v9 = 0;
    }
    else
    {
      v9 = WORD1(v14) - WORD2(v14);
    }
    if (v9 < a2 || BYTE6(v14) != 2)
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    memmove((void *)(v7 + v8), a1, a2);
    WORD2(v14) += a2;
    return sub_10004C8A0(97, v13, BYTE4(v14), a3, (uint64_t)sub_10004AE9C, v10, v11, v12);
  }
  return result;
}

uint64_t sub_1001AC248(_WORD *a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v8 = 0;
  v9 = 0;
  result = sub_10004BC7C(&v8);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v9))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4238, "OI_STATUS _BCM_ReadRawRSSI(OI_HCI_CONNECTION_HANDLE, BT_VSC_READ_RAW_RSSI_CB)");
    }
    else if (WORD1(v9) - WORD2(v9) > 1 && BYTE6(v9) == 2)
    {
      *(_WORD *)(v8 + WORD2(v9)) = *a1;
      WORD2(v9) += 2;
      return sub_10004C8A0(72, v8, BYTE4(v9), a2, (uint64_t)sub_1001A5AD4, v5, v6, v7);
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001AC334(char a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v9 = 0;
  v10 = 0;
  result = sub_10004BC7C(&v9);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v10))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4252, "OI_STATUS _BCM_ConfigTpc(_Bool, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v8 = WORD2(v10);
      if (WORD1(v10) > WORD2(v10) && BYTE6(v10) == 2)
      {
        ++WORD2(v10);
        *(_BYTE *)(v9 + v8) = a1;
        return sub_10004C8A0(393, v9, BYTE4(v10), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001AC400(int a1, unsigned int a2, uint64_t (*a3)())
{
  uint64_t result;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int __src;
  uint64_t v16;
  uint64_t v17;

  v16 = 0;
  v17 = 0;
  result = sub_10004BC7C(&v16);
  v7 = 1;
  __src = 1;
  if (a1 == 1)
  {
    v8 = 2;
  }
  else
  {
    if (a1)
      goto LABEL_6;
    v7 = 0;
    v8 = 1;
  }
  BYTE2(__src) = v7;
  HIBYTE(__src) = v8;
LABEL_6:
  if (!(_DWORD)result)
  {
    v9 = v16;
    v10 = WORD2(v17);
    if (HIBYTE(v17))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4288, "OI_STATUS _BCM_WriteI2sPcmConfig(VSCI2SSamplingRate, uint32_t, BT_VSC_COMPLETE_CB)");
      v11 = 0;
    }
    else
    {
      v11 = WORD1(v17) - WORD2(v17);
    }
    if (v11 < a2 || BYTE6(v17) != 2)
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    memmove((void *)(v9 + v10), &__src, a2);
    WORD2(v17) += a2;
    return sub_10004C8A0(109, v16, BYTE4(v17), a3, (uint64_t)sub_10004AE9C, v12, v13, v14);
  }
  return result;
}

uint64_t sub_1001AC520(_BYTE *a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int16 v8;
  unsigned __int16 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v11 = 0;
  v12 = 0;
  result = sub_10004BC7C(&v11);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v12))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4304, "OI_STATUS _BCM_WriteDynRouteChange(OI_HCI_CONNECTION_HANDLE, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v12) - WORD2(v12) > 1 && BYTE6(v12) == 2)
    {
      *(_BYTE *)(v11 + WORD2(v12)) = 0;
      *(_BYTE *)(v11 + WORD2(v12) + 1) = 1;
      v8 = WORD2(v12) + 2;
      WORD2(v12) += 2;
      if (HIBYTE(v12))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4305, "OI_STATUS _BCM_WriteDynRouteChange(OI_HCI_CONNECTION_HANDLE, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v12) - v8 > 1 && BYTE6(v12) == 2)
      {
        *(_BYTE *)(v11 + v8) = *a1;
        *(_BYTE *)(v11 + WORD2(v12) + 1) = a1[1];
        v9 = WORD2(v12) + 2;
        WORD2(v12) += 2;
        if (HIBYTE(v12))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4306, "OI_STATUS _BCM_WriteDynRouteChange(OI_HCI_CONNECTION_HANDLE, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v12) - v9 > 2 && BYTE6(v12) == 2)
        {
          v10 = v11 + v9;
          *(_BYTE *)(v10 + 2) = 0;
          *(_WORD *)v10 = 0;
          WORD2(v12) += 3;
          return sub_10004C8A0(131, v11, BYTE4(v12), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001AC724(const void *a1, int a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v13 = 0;
  v14 = 0;
  result = sub_10004BC7C(&v13);
  if (!(_DWORD)result)
  {
    v7 = v13;
    v8 = WORD2(v14);
    if (HIBYTE(v14))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4321, "OI_STATUS _BCM_WriteEnableWCI2(uint8_t *, uint8_t, BT_VSC_COMPLETE_CB)");
      v9 = 0;
    }
    else
    {
      v9 = WORD1(v14) - WORD2(v14);
    }
    if (v9 < a2 || BYTE6(v14) != 2)
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    memmove((void *)(v7 + v8), a1, a2);
    WORD2(v14) += a2;
    return sub_10004C8A0(270, v13, BYTE4(v14), a3, (uint64_t)sub_10004AE9C, v10, v11, v12);
  }
  return result;
}

uint64_t sub_1001AC820(const void *a1, int a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v13 = 0;
  v14 = 0;
  result = sub_10004BC7C(&v13);
  if (!(_DWORD)result)
  {
    v7 = v13;
    v8 = WORD2(v14);
    if (HIBYTE(v14))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4335, "OI_STATUS _BCM_FactoryCalSetTxPower(uint8_t *, uint8_t, BT_VSC_COMPLETE_CB)");
      v9 = 0;
    }
    else
    {
      v9 = WORD1(v14) - WORD2(v14);
    }
    if (v9 < a2 || BYTE6(v14) != 2)
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    memmove((void *)(v7 + v8), a1, a2);
    WORD2(v14) += a2;
    return sub_10004C8A0(277, v13, BYTE4(v14), a3, (uint64_t)sub_10004AE9C, v10, v11, v12);
  }
  return result;
}

uint64_t sub_1001AC91C(const void *a1, int a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v13 = 0;
  v14 = 0;
  result = sub_10004BC7C(&v13);
  if (!(_DWORD)result)
  {
    v7 = v13;
    v8 = WORD2(v14);
    if (HIBYTE(v14))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4349, "OI_STATUS _BCM_WriteTriggerWCI2(uint8_t *, uint8_t, BT_VSC_COMPLETE_CB)");
      v9 = 0;
    }
    else
    {
      v9 = WORD1(v14) - WORD2(v14);
    }
    if (v9 < a2 || BYTE6(v14) != 2)
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    memmove((void *)(v7 + v8), a1, a2);
    WORD2(v14) += a2;
    return sub_10004C8A0(269, v13, BYTE4(v14), a3, (uint64_t)sub_10004AE9C, v10, v11, v12);
  }
  return result;
}

uint64_t sub_1001ACA18(_BYTE *a1, _WORD *a2, int a3, uint64_t (*a4)())
{
  uint64_t result;
  unsigned __int16 v9;
  unsigned __int16 v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v17 = 0;
  v18 = 0;
  result = sub_10004BC7C(&v17);
  if ((_DWORD)result)
    return result;
  if (HIBYTE(v18))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4363, "OI_STATUS _BCM_WriteLTELinkQualityMode(OI_HCI_CONNECTION_HANDLE, const uint8_t *, uint8_t, BT_VSC_COMPLETE_CB)");
    goto LABEL_16;
  }
  if (WORD1(v18) - WORD2(v18) <= 1 || BYTE6(v18) != 2)
LABEL_16:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  *(_WORD *)(v17 + WORD2(v18)) = *a2;
  v9 = WORD2(v18) + 2;
  WORD2(v18) += 2;
  if (HIBYTE(v18))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4364, "OI_STATUS _BCM_WriteLTELinkQualityMode(OI_HCI_CONNECTION_HANDLE, const uint8_t *, uint8_t, BT_VSC_COMPLETE_CB)");
    goto LABEL_18;
  }
  if (WORD1(v18) - v9 <= 1 || BYTE6(v18) != 2)
LABEL_18:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  *(_BYTE *)(v17 + v9) = *a1;
  *(_BYTE *)(v17 + WORD2(v18) + 1) = a1[1];
  v10 = WORD2(v18) + 2;
  WORD2(v18) += 2;
  v11 = v17;
  if (HIBYTE(v18))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4365, "OI_STATUS _BCM_WriteLTELinkQualityMode(OI_HCI_CONNECTION_HANDLE, const uint8_t *, uint8_t, BT_VSC_COMPLETE_CB)");
    v12 = 0;
  }
  else
  {
    v12 = WORD1(v18) - v10;
  }
  v13 = a3 - 4;
  if (v12 < v13 || BYTE6(v18) != 2)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  memmove((void *)(v11 + v10), a2 + 2, v13);
  WORD2(v18) += v13;
  return sub_10004C8A0(268, v17, BYTE4(v18), a4, (uint64_t)sub_10004AE9C, v14, v15, v16);
}

uint64_t sub_1001ACC34(_BYTE *a1, char a2, __int16 a3, __int16 a4, __int16 a5, __int16 a6, uint64_t (*a7)())
{
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int16 v18;
  __int16 v19;
  unsigned __int16 v20;
  uint64_t v21;
  unsigned __int16 v22;
  unsigned __int16 v23;
  unsigned __int16 v24;
  uint64_t v25;
  uint64_t v26;

  v25 = 0;
  v26 = 0;
  result = sub_10004BC7C(&v25);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v26))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4380, "OI_STATUS _BCM_WriteLinkQualityMode(OI_HCI_CONNECTION_HANDLE, _Bool, uint16_t, uint16_t, uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v26) - WORD2(v26) > 3 && BYTE6(v26) == 2)
    {
      *(_BYTE *)(v25 + WORD2(v26)) = 8;
      *(_WORD *)(v25 + WORD2(v26) + 1) = 0;
      *(_BYTE *)(v25 + WORD2(v26) + 3) = 0;
      v18 = WORD2(v26) + 4;
      WORD2(v26) += 4;
      if (HIBYTE(v26))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4381, "OI_STATUS _BCM_WriteLinkQualityMode(OI_HCI_CONNECTION_HANDLE, _Bool, uint16_t, uint16_t, uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v26) - v18 > 1 && BYTE6(v26) == 2)
      {
        *(_BYTE *)(v25 + v18) = *a1;
        *(_BYTE *)(v25 + WORD2(v26) + 1) = a1[1];
        v19 = WORD2(v26);
        v20 = WORD2(v26) + 2;
        WORD2(v26) += 2;
        if (HIBYTE(v26))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4382, "OI_STATUS _BCM_WriteLinkQualityMode(OI_HCI_CONNECTION_HANDLE, _Bool, uint16_t, uint16_t, uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v26) > v20 && BYTE6(v26) == 2)
        {
          WORD2(v26) = v19 + 3;
          *(_BYTE *)(v25 + v20) = a2;
          if (HIBYTE(v26))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4383, "OI_STATUS _BCM_WriteLinkQualityMode(OI_HCI_CONNECTION_HANDLE, _Bool, uint16_t, uint16_t, uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
          }
          else
          {
            v21 = WORD2(v26);
            if (WORD1(v26) > WORD2(v26) && BYTE6(v26) == 2)
            {
              ++WORD2(v26);
              *(_BYTE *)(v25 + v21) = 0;
              if (HIBYTE(v26))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4384, "OI_STATUS _BCM_WriteLinkQualityMode(OI_HCI_CONNECTION_HANDLE, _Bool, uint16_t, uint16_t, uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
              }
              else if (WORD1(v26) - WORD2(v26) > 1 && BYTE6(v26) == 2)
              {
                *(_WORD *)(v25 + WORD2(v26)) = a3;
                v22 = WORD2(v26) + 2;
                WORD2(v26) += 2;
                if (HIBYTE(v26))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4385, "OI_STATUS _BCM_WriteLinkQualityMode(OI_HCI_CONNECTION_HANDLE, _Bool, uint16_t, uint16_t, uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
                }
                else if (WORD1(v26) - v22 > 1 && BYTE6(v26) == 2)
                {
                  *(_BYTE *)(v25 + v22) = a4;
                  *(_BYTE *)(v25 + WORD2(v26) + 1) = HIBYTE(a4);
                  v23 = WORD2(v26) + 2;
                  WORD2(v26) += 2;
                  if (HIBYTE(v26))
                  {
                    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4386, "OI_STATUS _BCM_WriteLinkQualityMode(OI_HCI_CONNECTION_HANDLE, _Bool, uint16_t, uint16_t, uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
                  }
                  else if (WORD1(v26) - v23 > 1 && BYTE6(v26) == 2)
                  {
                    *(_BYTE *)(v25 + v23) = a5;
                    *(_BYTE *)(v25 + WORD2(v26) + 1) = HIBYTE(a5);
                    v24 = WORD2(v26) + 2;
                    WORD2(v26) += 2;
                    if (HIBYTE(v26))
                    {
                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4387, "OI_STATUS _BCM_WriteLinkQualityMode(OI_HCI_CONNECTION_HANDLE, _Bool, uint16_t, uint16_t, uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
                    }
                    else if (WORD1(v26) - v24 > 1 && BYTE6(v26) == 2)
                    {
                      *(_BYTE *)(v25 + v24) = a6;
                      *(_BYTE *)(v25 + WORD2(v26) + 1) = HIBYTE(a6);
                      WORD2(v26) += 2;
                      return sub_10004C8A0(226, v25, BYTE4(v26), a7, (uint64_t)sub_10004AE9C, v15, v16, v17);
                    }
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001AD140(_WORD *a1, char a2, int a3, int a4, int a5, int a6, int a7, int a8, char a9, uint64_t (*a10)())
{
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  __int16 v28;
  unsigned __int16 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = 0;
  v32 = 0;
  result = sub_10004BC7C(&v31);
  if (a3)
    v22 = 2;
  else
    v22 = 0;
  if (a4)
    v23 = 4;
  else
    v23 = 0;
  if (a5)
    v24 = 8;
  else
    v24 = 0;
  if (a6)
    v25 = 16;
  else
    v25 = 0;
  if (a7)
    v26 = 64;
  else
    v26 = 0;
  if (a8)
    v27 = 0x80;
  else
    v27 = 0;
  if (!(_DWORD)result)
  {
    if (HIBYTE(v32))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4406, "OI_STATUS _BCM_WriteEnhancedLinkQualityMode(OI_HCI_CONNECTION_HANDLE, _Bool, _Bool, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v32) - WORD2(v32) > 1 && BYTE6(v32) == 2)
    {
      *(_WORD *)(v31 + WORD2(v32)) = *a1;
      v28 = WORD2(v32);
      v29 = WORD2(v32) + 2;
      WORD2(v32) += 2;
      if (HIBYTE(v32))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4407, "OI_STATUS _BCM_WriteEnhancedLinkQualityMode(OI_HCI_CONNECTION_HANDLE, _Bool, _Bool, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v32) > v29 && BYTE6(v32) == 2)
      {
        WORD2(v32) = v28 + 3;
        *(_BYTE *)(v31 + v29) = v22 | a2 | v23 | v24 | v25 | v26 | v27;
        if (HIBYTE(v32))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4408, "OI_STATUS _BCM_WriteEnhancedLinkQualityMode(OI_HCI_CONNECTION_HANDLE, _Bool, _Bool, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, BT_VSC_COMPLETE_CB)");
        }
        else
        {
          v30 = WORD2(v32);
          if (WORD1(v32) > WORD2(v32) && BYTE6(v32) == 2)
          {
            ++WORD2(v32);
            *(_BYTE *)(v31 + v30) = a9;
            return sub_10004C8A0(477, v31, BYTE4(v32), a10, (uint64_t)sub_10004AE9C, v19, v20, v21);
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001AD3B0(int a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;

  v11 = 0;
  v12 = 0;
  result = sub_10004BC7C(&v11);
  v14 = 0;
  v13 = 0;
  if (!(_DWORD)result)
  {
    if (a1)
    {
      if (HIBYTE(v12))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4425, "OI_STATUS _BCM_WriteSleepMode(uint8_t, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v12) - WORD2(v12) > 11 && BYTE6(v12) == 2)
      {
        v8 = &qword_10073AAA2;
LABEL_11:
        v9 = v11 + WORD2(v12);
        v10 = *v8;
        *(_DWORD *)(v9 + 8) = *((_DWORD *)v8 + 2);
        *(_QWORD *)v9 = v10;
        WORD2(v12) += 12;
        return sub_10004C8A0(39, v11, BYTE4(v12), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    if (HIBYTE(v12))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4427, "OI_STATUS _BCM_WriteSleepMode(uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v12) - WORD2(v12) > 11 && BYTE6(v12) == 2)
    {
      v8 = &v13;
      goto LABEL_11;
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001AD540(int a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v9 = 0;
  v10 = 0;
  result = sub_10004BC7C(&v9);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v10))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4442, "OI_STATUS _BCM_PowerLDODuringSleep(uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v8 = WORD2(v10);
      if (WORD1(v10) > WORD2(v10) && BYTE6(v10) == 2)
      {
        ++WORD2(v10);
        *(_BYTE *)(v9 + v8) = a1 != 0;
        return sub_10004C8A0(385, v9, BYTE4(v10), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001AD614(char *a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  __int16 v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  unsigned __int16 v17;
  __int16 v18;
  unsigned __int16 v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;

  v28 = 0;
  v29 = 0;
  result = sub_10004BC7C(&v28);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v29))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4457, "OI_STATUS _BCM_AntennaDiversity(BT_VSCDiversityParams_t *, BT_VSC_BYTESTREAM_CB)");
    }
    else
    {
      v8 = WORD2(v29);
      if (WORD1(v29) > WORD2(v29) && BYTE6(v29) == 2)
      {
        v9 = *a1;
        ++WORD2(v29);
        *(_BYTE *)(v28 + v8) = v9;
        if (HIBYTE(v29))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4458, "OI_STATUS _BCM_AntennaDiversity(BT_VSCDiversityParams_t *, BT_VSC_BYTESTREAM_CB)");
        }
        else if (WORD1(v29) - WORD2(v29) > 1 && BYTE6(v29) == 2)
        {
          *(_WORD *)(v28 + WORD2(v29)) = *((_WORD *)a1 + 1);
          v10 = WORD2(v29);
          LOWORD(v11) = WORD2(v29) + 2;
          WORD2(v29) += 2;
          if (*a1)
          {
            if (HIBYTE(v29))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4461, "OI_STATUS _BCM_AntennaDiversity(BT_VSCDiversityParams_t *, BT_VSC_BYTESTREAM_CB)");
            }
            else if (WORD1(v29) > (unsigned __int16)v11 && BYTE6(v29) == 2)
            {
              v12 = a1[4];
              WORD2(v29) = v10 + 3;
              *(_BYTE *)(v28 + (unsigned __int16)v11) = v12;
              if (HIBYTE(v29))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4462, "OI_STATUS _BCM_AntennaDiversity(BT_VSCDiversityParams_t *, BT_VSC_BYTESTREAM_CB)");
              }
              else
              {
                v13 = WORD2(v29);
                if (WORD1(v29) > WORD2(v29) && BYTE6(v29) == 2)
                {
                  v14 = a1[5];
                  ++WORD2(v29);
                  *(_BYTE *)(v28 + v13) = v14;
                  if (HIBYTE(v29))
                  {
                    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4463, "OI_STATUS _BCM_AntennaDiversity(BT_VSCDiversityParams_t *, BT_VSC_BYTESTREAM_CB)");
                  }
                  else
                  {
                    v15 = WORD2(v29);
                    if (WORD1(v29) > WORD2(v29) && BYTE6(v29) == 2)
                    {
                      v16 = a1[6];
                      ++WORD2(v29);
                      *(_BYTE *)(v28 + v15) = v16;
                      if (HIBYTE(v29))
                      {
                        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4464, "OI_STATUS _BCM_AntennaDiversity(BT_VSCDiversityParams_t *, BT_VSC_BYTESTREAM_CB)");
                      }
                      else if (WORD1(v29) - WORD2(v29) > 1 && BYTE6(v29) == 2)
                      {
                        *(_WORD *)(v28 + WORD2(v29)) = *((_WORD *)a1 + 4);
                        v17 = WORD2(v29) + 2;
                        WORD2(v29) += 2;
                        if (HIBYTE(v29))
                        {
                          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4465, "OI_STATUS _BCM_AntennaDiversity(BT_VSCDiversityParams_t *, BT_VSC_BYTESTREAM_CB)");
                        }
                        else if (WORD1(v29) - v17 > 1 && BYTE6(v29) == 2)
                        {
                          *(_BYTE *)(v28 + v17) = a1[10];
                          *(_BYTE *)(v28 + WORD2(v29) + 1) = a1[11];
                          v18 = WORD2(v29);
                          v19 = WORD2(v29) + 2;
                          WORD2(v29) += 2;
                          if (HIBYTE(v29))
                          {
                            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4466, "OI_STATUS _BCM_AntennaDiversity(BT_VSCDiversityParams_t *, BT_VSC_BYTESTREAM_CB)");
                          }
                          else if (WORD1(v29) > v19 && BYTE6(v29) == 2)
                          {
                            v20 = a1[12];
                            WORD2(v29) = v18 + 3;
                            *(_BYTE *)(v28 + v19) = v20;
                            if (HIBYTE(v29))
                            {
                              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4467, "OI_STATUS _BCM_AntennaDiversity(BT_VSCDiversityParams_t *, BT_VSC_BYTESTREAM_CB)");
                            }
                            else
                            {
                              v21 = WORD2(v29);
                              if (WORD1(v29) > WORD2(v29) && BYTE6(v29) == 2)
                              {
                                v22 = a1[13];
                                ++WORD2(v29);
                                *(_BYTE *)(v28 + v21) = v22;
                                if (HIBYTE(v29))
                                {
                                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4468, "OI_STATUS _BCM_AntennaDiversity(BT_VSCDiversityParams_t *, BT_VSC_BYTESTREAM_CB)");
                                }
                                else
                                {
                                  v23 = WORD2(v29);
                                  if (WORD1(v29) > WORD2(v29) && BYTE6(v29) == 2)
                                  {
                                    v24 = a1[14];
                                    ++WORD2(v29);
                                    *(_BYTE *)(v28 + v23) = v24;
                                    if (HIBYTE(v29))
                                    {
                                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4469, "OI_STATUS _BCM_AntennaDiversity(BT_VSCDiversityParams_t *, BT_VSC_BYTESTREAM_CB)");
                                    }
                                    else
                                    {
                                      v25 = WORD2(v29);
                                      if (WORD1(v29) > WORD2(v29) && BYTE6(v29) == 2)
                                      {
                                        v26 = a1[15];
                                        ++WORD2(v29);
                                        *(_BYTE *)(v28 + v25) = v26;
                                        if (HIBYTE(v29))
                                        {
                                          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4470, "OI_STATUS _BCM_AntennaDiversity(BT_VSCDiversityParams_t *, BT_VSC_BYTESTREAM_CB)");
                                        }
                                        else
                                        {
                                          v11 = WORD2(v29);
                                          if (WORD1(v29) > WORD2(v29) && BYTE6(v29) == 2)
                                          {
                                            v27 = a1[16];
                                            ++WORD2(v29);
                                            *(_BYTE *)(v28 + v11) = v27;
                                            LOBYTE(v11) = BYTE4(v29);
                                            return sub_10004C8A0(289, v28, v11, a2, (uint64_t)sub_1000723AC, v5, v6, v7);
                                          }
                                        }
                                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_bas"
                                                               "e/Stack/vsc/bcm/bcm_vsc.c");
                                      }
                                    }
                                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/St"
                                                           "ack/vsc/bcm/bcm_vsc.c");
                                  }
                                }
                                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/bcm/bcm_vsc.c");
                              }
                            }
                            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                          }
                          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                        }
                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }
                      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                    }
                  }
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          return sub_10004C8A0(289, v28, v11, a2, (uint64_t)sub_1000723AC, v5, v6, v7);
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t *sub_1001ADC98(uint64_t *result, char *a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t i;
  uint64_t v9;
  char v10;
  uint64_t v11;

  if (*((_BYTE *)result + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4482, "void _BCM_WriteDiversityAFHMap(OI_BYTE_STREAM *, BT_VSCDiversityAFHMap_t *)");
    goto LABEL_16;
  }
  v2 = *((unsigned __int16 *)result + 6);
  if (*((unsigned __int16 *)result + 5) <= v2 || *((_BYTE *)result + 14) != 2)
LABEL_16:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v3 = *a2;
  v4 = *result;
  *((_WORD *)result + 6) = v2 + 1;
  *(_BYTE *)(v4 + v2) = v3;
  if (*((_BYTE *)result + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4483, "void _BCM_WriteDiversityAFHMap(OI_BYTE_STREAM *, BT_VSCDiversityAFHMap_t *)");
    goto LABEL_18;
  }
  v5 = *((unsigned __int16 *)result + 6);
  if (*((unsigned __int16 *)result + 5) <= v5 || *((_BYTE *)result + 14) != 2)
LABEL_18:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v6 = a2[1];
  v7 = *result;
  *((_WORD *)result + 6) = v5 + 1;
  *(_BYTE *)(v7 + v5) = v6;
  for (i = 2; i != 12; ++i)
  {
    if (*((_BYTE *)result + 15))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4485, "void _BCM_WriteDiversityAFHMap(OI_BYTE_STREAM *, BT_VSCDiversityAFHMap_t *)");
LABEL_14:
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    v9 = *((unsigned __int16 *)result + 6);
    if (*((unsigned __int16 *)result + 5) <= v9 || *((_BYTE *)result + 14) != 2)
      goto LABEL_14;
    v10 = a2[i];
    v11 = *result;
    *((_WORD *)result + 6) = v9 + 1;
    *(_BYTE *)(v11 + v9) = v10;
  }
  return result;
}

uint64_t sub_1001ADE2C(char *a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v10 = 0;
  v11 = 0;
  result = sub_10004BC7C(&v10);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v11))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4495, "OI_STATUS _BCM_DiversityAFHMaps(BT_VSCDiversityAFHMapsParams_t *, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v5 = WORD2(v11);
      if (WORD1(v11) > WORD2(v11) && BYTE6(v11) == 2)
      {
        v6 = *a1;
        ++WORD2(v11);
        *(_BYTE *)(v10 + v5) = v6;
        sub_1001ADC98(&v10, a1 + 1);
        sub_1001ADC98(&v10, a1 + 13);
        sub_1001ADC98(&v10, a1 + 25);
        sub_1001ADC98(&v10, a1 + 37);
        return sub_10004C8A0(465, v10, BYTE4(v11), a2, (uint64_t)sub_10004AE9C, v7, v8, v9);
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001ADF38(char *a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t i;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;

  v23 = 0;
  v24 = 0;
  result = sub_10004BC7C(&v23);
  if ((_DWORD)result)
    return result;
  if (HIBYTE(v24))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4514, "OI_STATUS _BCM_DiversityCellCoex(BT_VSCDiversityCellCoexParams_t *, BT_VSC_COMPLETE_CB)");
    goto LABEL_30;
  }
  v8 = WORD2(v24);
  if (WORD1(v24) <= WORD2(v24) || BYTE6(v24) != 2)
LABEL_30:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v9 = *a1;
  ++WORD2(v24);
  *(_BYTE *)(v23 + v8) = v9;
  if (HIBYTE(v24))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4515, "OI_STATUS _BCM_DiversityCellCoex(BT_VSCDiversityCellCoexParams_t *, BT_VSC_COMPLETE_CB)");
    goto LABEL_32;
  }
  v10 = WORD2(v24);
  if (WORD1(v24) <= WORD2(v24) || BYTE6(v24) != 2)
LABEL_32:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v11 = a1[1];
  ++WORD2(v24);
  *(_BYTE *)(v23 + v10) = v11;
  if (HIBYTE(v24))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4516, "OI_STATUS _BCM_DiversityCellCoex(BT_VSCDiversityCellCoexParams_t *, BT_VSC_COMPLETE_CB)");
    goto LABEL_34;
  }
  v12 = WORD2(v24);
  if (WORD1(v24) <= WORD2(v24) || BYTE6(v24) != 2)
LABEL_34:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v13 = a1[2];
  ++WORD2(v24);
  *(_BYTE *)(v23 + v12) = v13;
  if (HIBYTE(v24))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4517, "OI_STATUS _BCM_DiversityCellCoex(BT_VSCDiversityCellCoexParams_t *, BT_VSC_COMPLETE_CB)");
    goto LABEL_36;
  }
  v14 = WORD2(v24);
  if (WORD1(v24) <= WORD2(v24) || BYTE6(v24) != 2)
LABEL_36:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v15 = a1[3];
  ++WORD2(v24);
  *(_BYTE *)(v23 + v14) = v15;
  if (HIBYTE(v24))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4518, "OI_STATUS _BCM_DiversityCellCoex(BT_VSCDiversityCellCoexParams_t *, BT_VSC_COMPLETE_CB)");
    goto LABEL_38;
  }
  v16 = WORD2(v24);
  if (WORD1(v24) <= WORD2(v24) || BYTE6(v24) != 2)
LABEL_38:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v17 = a1[4];
  ++WORD2(v24);
  *(_BYTE *)(v23 + v16) = v17;
  if (HIBYTE(v24))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4519, "OI_STATUS _BCM_DiversityCellCoex(BT_VSCDiversityCellCoexParams_t *, BT_VSC_COMPLETE_CB)");
    goto LABEL_40;
  }
  v18 = WORD2(v24);
  if (WORD1(v24) <= WORD2(v24) || BYTE6(v24) != 2)
LABEL_40:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v19 = a1[5];
  ++WORD2(v24);
  *(_BYTE *)(v23 + v18) = v19;
  for (i = 6; i != 16; ++i)
  {
    if (HIBYTE(v24))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4521, "OI_STATUS _BCM_DiversityCellCoex(BT_VSCDiversityCellCoexParams_t *, BT_VSC_COMPLETE_CB)");
LABEL_28:
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    v21 = WORD2(v24);
    if (WORD1(v24) <= WORD2(v24) || BYTE6(v24) != 2)
      goto LABEL_28;
    v22 = a1[i];
    ++WORD2(v24);
    *(_BYTE *)(v23 + v21) = v22;
  }
  return sub_10004C8A0(478, v23, BYTE4(v24), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
}

uint64_t sub_1001AE300(_WORD *a1, __int16 a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int16 v10;
  uint64_t v11;
  uint64_t v12;

  v11 = 0;
  v12 = 0;
  result = sub_10004BC7C(&v11);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v12))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4537, "OI_STATUS _BCM_EnableBTSync(OI_HCI_CONNECTION_HANDLE, uint16_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v12) - WORD2(v12) > 1 && BYTE6(v12) == 2)
    {
      *(_WORD *)(v11 + WORD2(v12)) = *a1;
      v10 = WORD2(v12) + 2;
      WORD2(v12) += 2;
      if (HIBYTE(v12))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4538, "OI_STATUS _BCM_EnableBTSync(OI_HCI_CONNECTION_HANDLE, uint16_t, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v12) - v10 > 1 && BYTE6(v12) == 2)
      {
        *(_BYTE *)(v11 + v10) = a2;
        *(_BYTE *)(v11 + WORD2(v12) + 1) = HIBYTE(a2);
        WORD2(v12) += 2;
        return sub_10004C8A0(371, v11, BYTE4(v12), a3, (uint64_t)sub_10004AE9C, v7, v8, v9);
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001AE48C(__int16 a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v8 = 0;
  v9 = 0;
  result = sub_10004BC7C(&v8);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v9))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4553, "OI_STATUS _BCM_DelayedHostWake(uint16_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v9) - WORD2(v9) > 1 && BYTE6(v9) == 2)
    {
      *(_WORD *)(v8 + WORD2(v9)) = a1;
      WORD2(v9) += 2;
      return sub_10004C8A0(411, v8, BYTE4(v9), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001AE574(_WORD *a1, char a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int16 v10;
  unsigned __int16 v11;
  uint64_t v12;
  uint64_t v13;

  v12 = 0;
  v13 = 0;
  result = sub_10004BC7C(&v12);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v13))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4568, "OI_STATUS _BCM_SetCountryBasedPower(OI_HCI_CONNECTION_HANDLE, uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v13) - WORD2(v13) > 1 && BYTE6(v13) == 2)
    {
      *(_WORD *)(v12 + WORD2(v13)) = *a1;
      v10 = WORD2(v13);
      v11 = WORD2(v13) + 2;
      WORD2(v13) += 2;
      if (HIBYTE(v13))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4569, "OI_STATUS _BCM_SetCountryBasedPower(OI_HCI_CONNECTION_HANDLE, uint8_t, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v13) > v11 && BYTE6(v13) == 2)
      {
        WORD2(v13) = v10 + 3;
        *(_BYTE *)(v12 + v11) = a2;
        return sub_10004C8A0(394, v12, BYTE4(v13), a3, (uint64_t)sub_10004AE9C, v7, v8, v9);
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001AE6E4(char a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v9 = 0;
  v10 = 0;
  result = sub_10004BC7C(&v9);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v10))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4584, "OI_STATUS _BCM_ReadFactoryCalTable(uint8_t, BT_VSC_BYTESTREAM_CB)");
    }
    else
    {
      v8 = WORD2(v10);
      if (WORD1(v10) > WORD2(v10) && BYTE6(v10) == 2)
      {
        ++WORD2(v10);
        *(_BYTE *)(v9 + v8) = a1;
        return sub_10004C8A0(283, v9, BYTE4(v10), a2, (uint64_t)sub_1000723AC, v5, v6, v7);
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001AE7B0(char a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int16 v8;
  uint64_t v9;
  uint64_t v10;

  v9 = 0;
  v10 = 0;
  result = sub_10004BC7C(&v9);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v10))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4599, "OI_STATUS _BCM_OlympicSetTxPowerCap(uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v10) - WORD2(v10) > 3 && BYTE6(v10) == 2)
    {
      *(_BYTE *)(v9 + WORD2(v10)) = 27;
      *(_WORD *)(v9 + WORD2(v10) + 1) = 0;
      *(_BYTE *)(v9 + WORD2(v10) + 3) = 0;
      v8 = WORD2(v10) + 4;
      WORD2(v10) += 4;
      if (HIBYTE(v10))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4600, "OI_STATUS _BCM_OlympicSetTxPowerCap(uint8_t, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v10) - v8 > 3 && BYTE6(v10) == 2)
      {
        *(_BYTE *)(v9 + v8) = a1;
        *(_WORD *)(v9 + WORD2(v10) + 1) = 0;
        *(_BYTE *)(v9 + WORD2(v10) + 3) = 0;
        WORD2(v10) += 4;
        return sub_10004C8A0(226, v9, BYTE4(v10), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001AE968(int a1, char a2, char a3, uint64_t (*a4)())
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;
  unsigned __int16 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v16 = 0;
  v17 = 0;
  result = sub_10004BC7C(&v16);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v17))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4615, "OI_STATUS _BCM_OlympicCountryCodeSel(uint8_t, uint8_t, uint8_t, BT_VSC_BYTESTREAM_CB)");
    }
    else if (WORD1(v17) - WORD2(v17) > 3 && BYTE6(v17) == 2)
    {
      *(_BYTE *)(v16 + WORD2(v17)) = 19;
      *(_WORD *)(v16 + WORD2(v17) + 1) = 0;
      *(_BYTE *)(v16 + WORD2(v17) + 3) = 0;
      v12 = WORD2(v17);
      v13 = WORD2(v17) + 4;
      WORD2(v17) += 4;
      if (HIBYTE(v17))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4616, "OI_STATUS _BCM_OlympicCountryCodeSel(uint8_t, uint8_t, uint8_t, BT_VSC_BYTESTREAM_CB)");
      }
      else if (WORD1(v17) > v13 && BYTE6(v17) == 2)
      {
        WORD2(v17) = v12 + 5;
        *(_BYTE *)(v16 + v13) = a1;
        if (a1)
        {
          if (HIBYTE(v17))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4619, "OI_STATUS _BCM_OlympicCountryCodeSel(uint8_t, uint8_t, uint8_t, BT_VSC_BYTESTREAM_CB)");
          }
          else
          {
            v14 = WORD2(v17);
            if (WORD1(v17) > WORD2(v17) && BYTE6(v17) == 2)
            {
              ++WORD2(v17);
              *(_BYTE *)(v16 + v14) = a2;
              if (HIBYTE(v17))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4620, "OI_STATUS _BCM_OlympicCountryCodeSel(uint8_t, uint8_t, uint8_t, BT_VSC_BYTESTREAM_CB)");
              }
              else
              {
                v15 = WORD2(v17);
                if (WORD1(v17) > WORD2(v17) && BYTE6(v17) == 2)
                {
                  ++WORD2(v17);
                  *(_BYTE *)(v16 + v15) = a3;
                  return sub_10004C8A0(226, v16, BYTE4(v17), a4, (uint64_t)sub_1000723AC, v9, v10, v11);
                }
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        return sub_10004C8A0(226, v16, BYTE4(v17), a4, (uint64_t)sub_1000723AC, v9, v10, v11);
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001AEBEC(int a1, char a2, char a3, char a4, char a5, char a6, uint64_t (*a7)())
{
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int16 v18;
  unsigned __int16 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int16 v23;
  unsigned __int16 v24;
  __int16 v25;
  unsigned __int16 v26;
  unsigned __int8 v27;
  uint64_t v28;
  uint64_t v29;

  v28 = 0;
  v29 = 0;
  result = sub_10004BC7C(&v28);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v29))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4636, "OI_STATUS _BCM_OlympicCountryCodeSelMultiBand(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_BYTESTREAM_CB)");
    }
    else if (WORD1(v29) - WORD2(v29) > 3 && BYTE6(v29) == 2)
    {
      *(_BYTE *)(v28 + WORD2(v29)) = 61;
      *(_WORD *)(v28 + WORD2(v29) + 1) = 0;
      *(_BYTE *)(v28 + WORD2(v29) + 3) = 0;
      v18 = WORD2(v29);
      v19 = WORD2(v29) + 4;
      WORD2(v29) += 4;
      if (HIBYTE(v29))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4637, "OI_STATUS _BCM_OlympicCountryCodeSelMultiBand(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_BYTESTREAM_CB)");
      }
      else if (WORD1(v29) > v19 && BYTE6(v29) == 2)
      {
        WORD2(v29) = v18 + 5;
        *(_BYTE *)(v28 + v19) = a1;
        if (a1)
        {
          if (HIBYTE(v29))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4640, "OI_STATUS _BCM_OlympicCountryCodeSelMultiBand(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_BYTESTREAM_CB)");
          }
          else
          {
            v20 = WORD2(v29);
            if (WORD1(v29) > WORD2(v29) && BYTE6(v29) == 2)
            {
              ++WORD2(v29);
              *(_BYTE *)(v28 + v20) = a2;
              if (HIBYTE(v29))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4641, "OI_STATUS _BCM_OlympicCountryCodeSelMultiBand(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_BYTESTREAM_CB)");
              }
              else
              {
                v21 = WORD2(v29);
                if (WORD1(v29) > WORD2(v29) && BYTE6(v29) == 2)
                {
                  ++WORD2(v29);
                  *(_BYTE *)(v28 + v21) = a3;
                  if (HIBYTE(v29))
                  {
                    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4642, "OI_STATUS _BCM_OlympicCountryCodeSelMultiBand(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_BYTESTREAM_CB)");
                  }
                  else
                  {
                    v22 = WORD2(v29);
                    if (WORD1(v29) > WORD2(v29) && BYTE6(v29) == 2)
                    {
                      ++WORD2(v29);
                      *(_BYTE *)(v28 + v22) = a4;
                      if (HIBYTE(v29))
                      {
                        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4643, "OI_STATUS _BCM_OlympicCountryCodeSelMultiBand(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_BYTESTREAM_CB)");
                      }
                      else if (WORD1(v29) > WORD2(v29) && BYTE6(v29) == 2)
                      {
                        *(_BYTE *)(v28 + WORD2(v29)) = 0;
                        v23 = WORD2(v29);
                        v24 = ++WORD2(v29);
                        if (HIBYTE(v29))
                        {
                          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4644, "OI_STATUS _BCM_OlympicCountryCodeSelMultiBand(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_BYTESTREAM_CB)");
                        }
                        else if (WORD1(v29) > v24 && BYTE6(v29) == 2)
                        {
                          WORD2(v29) = v23 + 2;
                          *(_BYTE *)(v28 + v24) = a5;
                          if (HIBYTE(v29))
                          {
                            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4645, "OI_STATUS _BCM_OlympicCountryCodeSelMultiBand(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_BYTESTREAM_CB)");
                          }
                          else if (WORD1(v29) > WORD2(v29) && BYTE6(v29) == 2)
                          {
                            *(_BYTE *)(v28 + WORD2(v29)) = 0;
                            v25 = WORD2(v29);
                            v26 = ++WORD2(v29);
                            if (HIBYTE(v29))
                            {
                              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4646, "OI_STATUS _BCM_OlympicCountryCodeSelMultiBand(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_BYTESTREAM_CB)");
                            }
                            else if (WORD1(v29) > v26 && BYTE6(v29) == 2)
                            {
                              WORD2(v29) = v25 + 2;
                              *(_BYTE *)(v28 + v26) = a6;
                              if (HIBYTE(v29))
                              {
                                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4647, "OI_STATUS _BCM_OlympicCountryCodeSelMultiBand(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_BYTESTREAM_CB)");
                              }
                              else if (WORD1(v29) - WORD2(v29) > 1 && BYTE6(v29) == 2)
                              {
                                *(_WORD *)(v28 + WORD2(v29)) = 0;
                                v27 = BYTE4(v29) + 2;
                                WORD2(v29) += 2;
                                return sub_10004C8A0(226, v28, v27, a7, (uint64_t)sub_1000723AC, v15, v16, v17);
                              }
                              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                            }
                            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                          }
                          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                        }
                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }
                      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                    }
                  }
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        v27 = BYTE4(v29);
        return sub_10004C8A0(226, v28, v27, a7, (uint64_t)sub_1000723AC, v15, v16, v17);
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001AF174(uint64_t (*a1)())
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v7 = 0;
  v8 = 0;
  result = sub_10004BC7C(&v7);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v8))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4663, "OI_STATUS _BCM_CoreDump(BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v6 = WORD2(v8);
      if (WORD1(v8) > WORD2(v8) && BYTE6(v8) == 2)
      {
        ++WORD2(v8);
        *(_BYTE *)(v7 + v6) = -15;
        return sub_10004C8A0(284, v7, BYTE4(v8), a1, (uint64_t)sub_10004AE9C, v3, v4, v5);
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001AF240(uint64_t (*a1)())
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int16 v7;
  uint64_t v8;
  uint64_t v9;

  v8 = 0;
  v9 = 0;
  result = sub_10004BC7C(&v8);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v9))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4678, "OI_STATUS _BCM_ReadFWMemoryStatistics(BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v6 = WORD2(v9);
      if (WORD1(v9) > WORD2(v9) && BYTE6(v9) == 2)
      {
        ++WORD2(v9);
        *(_BYTE *)(v8 + v6) = 80;
        if (HIBYTE(v9))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4679, "OI_STATUS _BCM_ReadFWMemoryStatistics(BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v9) - WORD2(v9) > 3 && BYTE6(v9) == 2)
        {
          *(_BYTE *)(v8 + WORD2(v9)) = 0;
          *(_WORD *)(v8 + WORD2(v9) + 1) = 0;
          *(_BYTE *)(v8 + WORD2(v9) + 3) = 0;
          v7 = WORD2(v9) + 4;
          WORD2(v9) += 4;
          if (HIBYTE(v9))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4680, "OI_STATUS _BCM_ReadFWMemoryStatistics(BT_VSC_COMPLETE_CB)");
          }
          else if (WORD1(v9) - v7 > 1 && BYTE6(v9) == 2)
          {
            *(_BYTE *)(v8 + v7) = 2;
            *(_BYTE *)(v8 + WORD2(v9) + 1) = 0;
            WORD2(v9) += 2;
            return sub_10004C8A0(284, v8, BYTE4(v9), a1, (uint64_t)sub_10004AE9C, v3, v4, v5);
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001AF450(int a1, int a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int16 v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  uint64_t v18;

  v17 = 0;
  v18 = 0;
  result = sub_10004BC7C(&v17);
  if (!(_DWORD)result)
  {
    if (!a1)
    {
      if (HIBYTE(v18))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4709, "OI_STATUS _BCM_EnableDisableFwLogStreaming(_Bool, uint16_t, BT_VSC_COMPLETE_CB)");
      }
      else
      {
        v14 = WORD2(v18);
        if (WORD1(v18) > WORD2(v18) && BYTE6(v18) == 2)
        {
          ++WORD2(v18);
          *(_BYTE *)(v17 + v14) = 81;
          if (HIBYTE(v18))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4710, "OI_STATUS _BCM_EnableDisableFwLogStreaming(_Bool, uint16_t, BT_VSC_COMPLETE_CB)");
          }
          else
          {
            v15 = WORD2(v18);
            if (WORD1(v18) > WORD2(v18) && BYTE6(v18) == 2)
            {
              ++WORD2(v18);
              *(_BYTE *)(v17 + v15) = 0;
              v16 = BYTE4(v18);
              return sub_10004C8A0(284, v17, v16, a3, (uint64_t)sub_10004AE9C, v7, v8, v9);
            }
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    if (HIBYTE(v18))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4695, "OI_STATUS _BCM_EnableDisableFwLogStreaming(_Bool, uint16_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v10 = WORD2(v18);
      if (WORD1(v18) > WORD2(v18) && BYTE6(v18) == 2)
      {
        ++WORD2(v18);
        *(_BYTE *)(v17 + v10) = 81;
        if (HIBYTE(v18))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4696, "OI_STATUS _BCM_EnableDisableFwLogStreaming(_Bool, uint16_t, BT_VSC_COMPLETE_CB)");
        }
        else
        {
          v11 = WORD2(v18);
          if (WORD1(v18) > WORD2(v18) && BYTE6(v18) == 2)
          {
            ++WORD2(v18);
            *(_BYTE *)(v17 + v11) = 1;
            if (HIBYTE(v18))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4697, "OI_STATUS _BCM_EnableDisableFwLogStreaming(_Bool, uint16_t, BT_VSC_COMPLETE_CB)");
            }
            else if (WORD1(v18) - WORD2(v18) > 1 && BYTE6(v18) == 2)
            {
              *(_WORD *)(v17 + WORD2(v18)) = __PAIR16__((2 * a2) >> 24, 2 * a2);
              v12 = WORD2(v18) + 2;
              WORD2(v18) += 2;
              if (HIBYTE(v18))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4698, "OI_STATUS _BCM_EnableDisableFwLogStreaming(_Bool, uint16_t, BT_VSC_COMPLETE_CB)");
              }
              else if (WORD1(v18) - v12 > 3 && BYTE6(v18) == 2)
              {
                *(_BYTE *)(v17 + v12) = 112;
                *(_WORD *)(v17 + WORD2(v18) + 1) = 23;
                *(_BYTE *)(v17 + WORD2(v18) + 3) = 0;
                WORD2(v18) += 4;
                if (sub_1001F4E24()
                  && sub_1001F4E24() <= 0x7CF
                  && sub_1001F4E24() >= 0x13)
                {
                  if (HIBYTE(v18))
                  {
                    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4701, "OI_STATUS _BCM_EnableDisableFwLogStreaming(_Bool, uint16_t, BT_VSC_COMPLETE_CB)");
                  }
                  else if (WORD1(v18) - WORD2(v18) > 3 && BYTE6(v18) == 2)
                  {
                    *(_BYTE *)(v17 + WORD2(v18)) = -112;
                    v13 = 11;
LABEL_33:
                    *(_BYTE *)(v17 + WORD2(v18) + 1) = v13;
                    *(_BYTE *)(v17 + WORD2(v18) + 2) = 72;
                    *(_BYTE *)(v17 + WORD2(v18) + 3) = 4;
                    v16 = BYTE4(v18) + 4;
                    WORD2(v18) += 4;
                    return sub_10004C8A0(284, v17, v16, a3, (uint64_t)sub_10004AE9C, v7, v8, v9);
                  }
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
                if (HIBYTE(v18))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4703, "OI_STATUS _BCM_EnableDisableFwLogStreaming(_Bool, uint16_t, BT_VSC_COMPLETE_CB)");
                }
                else if (WORD1(v18) - WORD2(v18) > 3 && BYTE6(v18) == 2)
                {
                  v13 = 0;
                  *(_BYTE *)(v17 + WORD2(v18)) = 0;
                  goto LABEL_33;
                }
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001AF950(int a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int16 v9;
  uint64_t v10;
  uint64_t v11;

  v10 = 0;
  v11 = 0;
  result = sub_10004BC7C(&v10);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v11))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4724, "OI_STATUS _BCM_SetFwLogMask(uint32_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v8 = WORD2(v11);
      if (WORD1(v11) > WORD2(v11) && BYTE6(v11) == 2)
      {
        ++WORD2(v11);
        *(_BYTE *)(v10 + v8) = -7;
        if (HIBYTE(v11))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4725, "OI_STATUS _BCM_SetFwLogMask(uint32_t, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v11) - WORD2(v11) > 3 && BYTE6(v11) == 2)
        {
          *(_WORD *)(v10 + WORD2(v11)) = a1;
          *(_BYTE *)(v10 + WORD2(v11) + 2) = BYTE2(a1);
          *(_BYTE *)(v10 + WORD2(v11) + 3) = HIBYTE(a1);
          v9 = WORD2(v11) + 4;
          WORD2(v11) += 4;
          if (HIBYTE(v11))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4726, "OI_STATUS _BCM_SetFwLogMask(uint32_t, BT_VSC_COMPLETE_CB)");
          }
          else if (WORD1(v11) - v9 > 3 && BYTE6(v11) == 2)
          {
            *(_BYTE *)(v10 + v9) = 0;
            *(_WORD *)(v10 + WORD2(v11) + 1) = 0;
            *(_BYTE *)(v10 + WORD2(v11) + 3) = 0;
            WORD2(v11) += 4;
            return sub_10004C8A0(284, v10, BYTE4(v11), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001AFB8C(char a1, __int16 a2, __int16 a3, char a4, char a5, int a6, char a7, char a8, char a9, uint64_t (*a10)())
{
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int16 v23;
  __int16 v24;
  unsigned __int16 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v30 = 0;
  v31 = 0;
  result = sub_10004BC7C(&v30);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v31))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4739, "OI_STATUS _BCM_SetBTSCPageScan(_Bool, uint16_t, uint16_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v22 = WORD2(v31);
      if (WORD1(v31) > WORD2(v31) && BYTE6(v31) == 2)
      {
        ++WORD2(v31);
        *(_BYTE *)(v30 + v22) = a1;
        if (HIBYTE(v31))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4740, "OI_STATUS _BCM_SetBTSCPageScan(_Bool, uint16_t, uint16_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v31) - WORD2(v31) > 1 && BYTE6(v31) == 2)
        {
          *(_WORD *)(v30 + WORD2(v31)) = a2;
          v23 = WORD2(v31) + 2;
          WORD2(v31) += 2;
          if (HIBYTE(v31))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4741, "OI_STATUS _BCM_SetBTSCPageScan(_Bool, uint16_t, uint16_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, BT_VSC_COMPLETE_CB)");
          }
          else if (WORD1(v31) - v23 > 1 && BYTE6(v31) == 2)
          {
            *(_BYTE *)(v30 + v23) = a3;
            *(_BYTE *)(v30 + WORD2(v31) + 1) = HIBYTE(a3);
            v24 = WORD2(v31);
            v25 = WORD2(v31) + 2;
            WORD2(v31) += 2;
            if (HIBYTE(v31))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4742, "OI_STATUS _BCM_SetBTSCPageScan(_Bool, uint16_t, uint16_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, BT_VSC_COMPLETE_CB)");
            }
            else if (WORD1(v31) > v25 && BYTE6(v31) == 2)
            {
              WORD2(v31) = v24 + 3;
              *(_BYTE *)(v30 + v25) = a4;
              if (HIBYTE(v31))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4743, "OI_STATUS _BCM_SetBTSCPageScan(_Bool, uint16_t, uint16_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, BT_VSC_COMPLETE_CB)");
              }
              else
              {
                v26 = WORD2(v31);
                if (WORD1(v31) > WORD2(v31) && BYTE6(v31) == 2)
                {
                  ++WORD2(v31);
                  *(_BYTE *)(v30 + v26) = a5;
                  if (a6)
                  {
                    if (HIBYTE(v31))
                    {
                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4745, "OI_STATUS _BCM_SetBTSCPageScan(_Bool, uint16_t, uint16_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, BT_VSC_COMPLETE_CB)");
                    }
                    else
                    {
                      v27 = WORD2(v31);
                      if (WORD1(v31) > WORD2(v31) && BYTE6(v31) == 2)
                      {
                        ++WORD2(v31);
                        *(_BYTE *)(v30 + v27) = a7;
                        if (HIBYTE(v31))
                        {
                          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4746, "OI_STATUS _BCM_SetBTSCPageScan(_Bool, uint16_t, uint16_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, BT_VSC_COMPLETE_CB)");
                        }
                        else
                        {
                          v28 = WORD2(v31);
                          if (WORD1(v31) > WORD2(v31) && BYTE6(v31) == 2)
                          {
                            ++WORD2(v31);
                            *(_BYTE *)(v30 + v28) = a8;
                            if (HIBYTE(v31))
                            {
                              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4747, "OI_STATUS _BCM_SetBTSCPageScan(_Bool, uint16_t, uint16_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, BT_VSC_COMPLETE_CB)");
                            }
                            else
                            {
                              v29 = WORD2(v31);
                              if (WORD1(v31) > WORD2(v31) && BYTE6(v31) == 2)
                              {
                                ++WORD2(v31);
                                *(_BYTE *)(v30 + v29) = a9;
                                return sub_10004C8A0(585, v30, BYTE4(v31), a10, (uint64_t)sub_10004AE9C, v19, v20, v21);
                              }
                            }
                            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                          }
                        }
                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }
                    }
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                  return sub_10004C8A0(585, v30, BYTE4(v31), a10, (uint64_t)sub_10004AE9C, v19, v20, v21);
                }
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001B0010(char a1, char a2, char a3, char a4, char a5, char a6, char a7, char a8, char a9, char a10, char a11, char a12, char a13, char a14, char a15, char a16, int a17, int a18, int a19, int a20,int a21,int a22,int a23,int a24,int a25,int a26,int a27,int a28,int a29,int a30,int a31,int a32,int a33,int a34,int a35,int a36,int a37,int a38,int a39,int a40,int a41,int a42,char a43,char a44,__int16 a45,char a46,uint64_t (*a47)())
{
  uint64_t result;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unsigned __int16 v75;
  unsigned __int16 v76;
  unsigned __int16 v77;
  unsigned __int16 v78;
  unsigned __int16 v79;
  unsigned __int16 v80;
  unsigned __int16 v81;
  unsigned __int16 v82;
  unsigned __int16 v83;
  unsigned __int16 v84;
  unsigned __int16 v85;
  unsigned __int16 v86;
  unsigned __int16 v87;
  unsigned __int16 v88;
  unsigned __int16 v89;
  unsigned __int16 v90;
  unsigned __int16 v91;
  unsigned __int16 v92;
  unsigned __int16 v93;
  unsigned __int16 v94;
  unsigned __int16 v95;
  unsigned __int16 v96;
  unsigned __int16 v97;
  unsigned __int16 v98;
  unsigned __int16 v99;
  unsigned __int16 v100;
  __int16 v101;
  unsigned __int16 v102;
  uint64_t v103;
  uint64_t v104;

  v103 = 0;
  v104 = 0;
  result = sub_10004BC7C(&v103);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v104))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4766, "OI_STATUS _BCM_SetQoSConfig(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v59 = WORD2(v104);
      if (WORD1(v104) > WORD2(v104) && BYTE6(v104) == 2)
      {
        ++WORD2(v104);
        *(_BYTE *)(v103 + v59) = a1;
        if (HIBYTE(v104))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4767, "OI_STATUS _BCM_SetQoSConfig(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
        }
        else
        {
          v60 = WORD2(v104);
          if (WORD1(v104) > WORD2(v104) && BYTE6(v104) == 2)
          {
            ++WORD2(v104);
            *(_BYTE *)(v103 + v60) = a2;
            if (HIBYTE(v104))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4768, "OI_STATUS _BCM_SetQoSConfig(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
            }
            else
            {
              v61 = WORD2(v104);
              if (WORD1(v104) > WORD2(v104) && BYTE6(v104) == 2)
              {
                ++WORD2(v104);
                *(_BYTE *)(v103 + v61) = a3;
                if (HIBYTE(v104))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4769, "OI_STATUS _BCM_SetQoSConfig(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                }
                else
                {
                  v62 = WORD2(v104);
                  if (WORD1(v104) > WORD2(v104) && BYTE6(v104) == 2)
                  {
                    ++WORD2(v104);
                    *(_BYTE *)(v103 + v62) = a4;
                    if (HIBYTE(v104))
                    {
                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4770, "OI_STATUS _BCM_SetQoSConfig(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                    }
                    else
                    {
                      v63 = WORD2(v104);
                      if (WORD1(v104) > WORD2(v104) && BYTE6(v104) == 2)
                      {
                        ++WORD2(v104);
                        *(_BYTE *)(v103 + v63) = a5;
                        if (HIBYTE(v104))
                        {
                          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4771, "OI_STATUS _BCM_SetQoSConfig(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                        }
                        else
                        {
                          v64 = WORD2(v104);
                          if (WORD1(v104) > WORD2(v104) && BYTE6(v104) == 2)
                          {
                            ++WORD2(v104);
                            *(_BYTE *)(v103 + v64) = a6;
                            if (HIBYTE(v104))
                            {
                              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4772, "OI_STATUS _BCM_SetQoSConfig(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                            }
                            else
                            {
                              v65 = WORD2(v104);
                              if (WORD1(v104) > WORD2(v104) && BYTE6(v104) == 2)
                              {
                                ++WORD2(v104);
                                *(_BYTE *)(v103 + v65) = a7;
                                if (HIBYTE(v104))
                                {
                                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4773, "OI_STATUS _BCM_SetQoSConfig(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                                }
                                else
                                {
                                  v66 = WORD2(v104);
                                  if (WORD1(v104) > WORD2(v104) && BYTE6(v104) == 2)
                                  {
                                    ++WORD2(v104);
                                    *(_BYTE *)(v103 + v66) = a8;
                                    if (HIBYTE(v104))
                                    {
                                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4774, "OI_STATUS _BCM_SetQoSConfig(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                                    }
                                    else
                                    {
                                      v67 = WORD2(v104);
                                      if (WORD1(v104) > WORD2(v104) && BYTE6(v104) == 2)
                                      {
                                        ++WORD2(v104);
                                        *(_BYTE *)(v103 + v67) = a9;
                                        if (HIBYTE(v104))
                                        {
                                          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4775, "OI_STATUS _BCM_SetQoSConfig(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                                        }
                                        else
                                        {
                                          v68 = WORD2(v104);
                                          if (WORD1(v104) > WORD2(v104) && BYTE6(v104) == 2)
                                          {
                                            ++WORD2(v104);
                                            *(_BYTE *)(v103 + v68) = a10;
                                            if (HIBYTE(v104))
                                            {
                                              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4776, "OI_STATUS _BCM_SetQoSConfig(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                                            }
                                            else
                                            {
                                              v69 = WORD2(v104);
                                              if (WORD1(v104) > WORD2(v104) && BYTE6(v104) == 2)
                                              {
                                                ++WORD2(v104);
                                                *(_BYTE *)(v103 + v69) = a11;
                                                if (HIBYTE(v104))
                                                {
                                                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4777, "OI_STATUS _BCM_SetQoSConfig(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                                                }
                                                else
                                                {
                                                  v70 = WORD2(v104);
                                                  if (WORD1(v104) > WORD2(v104) && BYTE6(v104) == 2)
                                                  {
                                                    ++WORD2(v104);
                                                    *(_BYTE *)(v103 + v70) = a12;
                                                    if (HIBYTE(v104))
                                                    {
                                                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4778, "OI_STATUS _BCM_SetQoSConfig(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                                                    }
                                                    else
                                                    {
                                                      v71 = WORD2(v104);
                                                      if (WORD1(v104) > WORD2(v104) && BYTE6(v104) == 2)
                                                      {
                                                        ++WORD2(v104);
                                                        *(_BYTE *)(v103 + v71) = a13;
                                                        if (HIBYTE(v104))
                                                        {
                                                          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4779, "OI_STATUS _BCM_SetQoSConfig(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                                                        }
                                                        else
                                                        {
                                                          v72 = WORD2(v104);
                                                          if (WORD1(v104) > WORD2(v104)
                                                            && BYTE6(v104) == 2)
                                                          {
                                                            ++WORD2(v104);
                                                            *(_BYTE *)(v103 + v72) = a14;
                                                            if (HIBYTE(v104))
                                                            {
                                                              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4780, "OI_STATUS _BCM_SetQoSConfig(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                                                            }
                                                            else
                                                            {
                                                              v73 = WORD2(v104);
                                                              if (WORD1(v104) > WORD2(v104)
                                                                && BYTE6(v104) == 2)
                                                              {
                                                                ++WORD2(v104);
                                                                *(_BYTE *)(v103 + v73) = a15;
                                                                if (HIBYTE(v104))
                                                                {
                                                                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4781, "OI_STATUS _BCM_SetQoSConfig(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                                                                }
                                                                else
                                                                {
                                                                  v74 = WORD2(v104);
                                                                  if (WORD1(v104) > WORD2(v104)
                                                                    && BYTE6(v104) == 2)
                                                                  {
                                                                    ++WORD2(v104);
                                                                    *(_BYTE *)(v103 + v74) = a16;
                                                                    if (HIBYTE(v104))
                                                                    {
                                                                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4782, "OI_STATUS _BCM_SetQoSConfig(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                                                                    }
                                                                    else if (WORD1(v104) - WORD2(v104) > 3
                                                                           && BYTE6(v104) == 2)
                                                                    {
                                                                      *(_DWORD *)(v103 + WORD2(v104)) = a17;
                                                                      v75 = WORD2(v104) + 4;
                                                                      WORD2(v104) += 4;
                                                                      if (HIBYTE(v104))
                                                                      {
                                                                        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4783, "OI_STATUS _BCM_SetQoSConfig(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                                                                      }
                                                                      else if (WORD1(v104) - v75 > 3
                                                                             && BYTE6(v104) == 2)
                                                                      {
                                                                        *(_BYTE *)(v103 + v75) = a18;
                                                                        *(_WORD *)(v103 + WORD2(v104) + 1) = *(_WORD *)((char *)&a18 + 1);
                                                                        *(_BYTE *)(v103 + WORD2(v104) + 3) = HIBYTE(a18);
                                                                        v76 = WORD2(v104) + 4;
                                                                        WORD2(v104) += 4;
                                                                        if (HIBYTE(v104))
                                                                        {
                                                                          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4784, "OI_STATUS _BCM_SetQoSConfig(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                                                                        }
                                                                        else if (WORD1(v104) - v76 > 3
                                                                               && BYTE6(v104) == 2)
                                                                        {
                                                                          *(_BYTE *)(v103 + v76) = a19;
                                                                          *(_WORD *)(v103 + WORD2(v104) + 1) = *(_WORD *)((char *)&a19 + 1);
                                                                          *(_BYTE *)(v103 + WORD2(v104) + 3) = HIBYTE(a19);
                                                                          v77 = WORD2(v104) + 4;
                                                                          WORD2(v104) += 4;
                                                                          if (HIBYTE(v104))
                                                                          {
                                                                            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4785, "OI_STATUS _BCM_SetQoSConfig(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                                                                          }
                                                                          else if (WORD1(v104) - v77 > 3
                                                                                 && BYTE6(v104) == 2)
                                                                          {
                                                                            *(_BYTE *)(v103 + v77) = a20;
                                                                            *(_WORD *)(v103 + WORD2(v104) + 1) = *(_WORD *)((char *)&a20 + 1);
                                                                            *(_BYTE *)(v103 + WORD2(v104) + 3) = HIBYTE(a20);
                                                                            v78 = WORD2(v104) + 4;
                                                                            WORD2(v104) += 4;
                                                                            if (HIBYTE(v104))
                                                                            {
                                                                              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4787, "OI_STATUS _BCM_SetQoSConfig(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                                                                            }
                                                                            else if (WORD1(v104) - v78 > 3
                                                                                   && BYTE6(v104) == 2)
                                                                            {
                                                                              *(_BYTE *)(v103 + v78) = a21;
                                                                              *(_WORD *)(v103 + WORD2(v104) + 1) = *(_WORD *)((char *)&a21 + 1);
                                                                              *(_BYTE *)(v103 + WORD2(v104) + 3) = HIBYTE(a21);
                                                                              v79 = WORD2(v104) + 4;
                                                                              WORD2(v104) += 4;
                                                                              if (HIBYTE(v104))
                                                                              {
                                                                                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4788, "OI_STATUS _BCM_SetQoSConfig(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                                                                              }
                                                                              else if (WORD1(v104) - v79 > 3
                                                                                     && BYTE6(v104) == 2)
                                                                              {
                                                                                *(_BYTE *)(v103 + v79) = a22;
                                                                                *(_WORD *)(v103 + WORD2(v104) + 1) = *(_WORD *)((char *)&a22 + 1);
                                                                                *(_BYTE *)(v103 + WORD2(v104) + 3) = HIBYTE(a22);
                                                                                v80 = WORD2(v104) + 4;
                                                                                WORD2(v104) += 4;
                                                                                if (HIBYTE(v104))
                                                                                {
                                                                                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4789, "OI_STATUS _BCM_SetQoSConfig(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                                                                                }
                                                                                else if (WORD1(v104) - v80 > 3
                                                                                       && BYTE6(v104) == 2)
                                                                                {
                                                                                  *(_BYTE *)(v103 + v80) = a23;
                                                                                  *(_WORD *)(v103 + WORD2(v104) + 1) = *(_WORD *)((char *)&a23 + 1);
                                                                                  *(_BYTE *)(v103 + WORD2(v104) + 3) = HIBYTE(a23);
                                                                                  v81 = WORD2(v104) + 4;
                                                                                  WORD2(v104) += 4;
                                                                                  if (HIBYTE(v104))
                                                                                  {
                                                                                    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4790, "OI_STATUS _BCM_SetQoSConfig(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                                                                                  }
                                                                                  else if (WORD1(v104) - v81 > 3
                                                                                         && BYTE6(v104) == 2)
                                                                                  {
                                                                                    *(_BYTE *)(v103 + v81) = a24;
                                                                                    *(_WORD *)(v103 + WORD2(v104) + 1) = *(_WORD *)((char *)&a24 + 1);
                                                                                    *(_BYTE *)(v103 + WORD2(v104) + 3) = HIBYTE(a24);
                                                                                    v82 = WORD2(v104) + 4;
                                                                                    WORD2(v104) += 4;
                                                                                    if (HIBYTE(v104))
                                                                                    {
                                                                                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4792, "OI_STATUS _BCM_SetQoSConfig(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                                                                                    }
                                                                                    else if (WORD1(v104) - v82 > 3
                                                                                           && BYTE6(v104) == 2)
                                                                                    {
                                                                                      *(_BYTE *)(v103 + v82) = a25;
                                                                                      *(_WORD *)(v103 + WORD2(v104) + 1) = *(_WORD *)((char *)&a25 + 1);
                                                                                      *(_BYTE *)(v103 + WORD2(v104) + 3) = HIBYTE(a25);
                                                                                      v83 = WORD2(v104) + 4;
                                                                                      WORD2(v104) += 4;
                                                                                      if (HIBYTE(v104))
                                                                                      {
                                                                                        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4794, "OI_STATUS _BCM_SetQoSConfig(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                                                                                      }
                                                                                      else if (WORD1(v104) - v83 > 3
                                                                                             && BYTE6(v104) == 2)
                                                                                      {
                                                                                        *(_BYTE *)(v103 + v83) = a26;
                                                                                        *(_WORD *)(v103 + WORD2(v104) + 1) = *(_WORD *)((char *)&a26 + 1);
                                                                                        *(_BYTE *)(v103 + WORD2(v104) + 3) = HIBYTE(a26);
                                                                                        v84 = WORD2(v104) + 4;
                                                                                        WORD2(v104) += 4;
                                                                                        if (HIBYTE(v104))
                                                                                        {
                                                                                          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4795, "OI_STATUS _BCM_SetQoSConfig(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t"
                                                                                            ", uint8_t, BT_VSC_COMPLETE_CB)");
                                                                                        }
                                                                                        else if (WORD1(v104) - v84 > 3
                                                                                               && BYTE6(v104) == 2)
                                                                                        {
                                                                                          *(_BYTE *)(v103 + v84) = a27;
                                                                                          *(_WORD *)(v103 + WORD2(v104) + 1) = *(_WORD *)((char *)&a27 + 1);
                                                                                          *(_BYTE *)(v103 + WORD2(v104) + 3) = HIBYTE(a27);
                                                                                          v85 = WORD2(v104) + 4;
                                                                                          WORD2(v104) += 4;
                                                                                          if (HIBYTE(v104))
                                                                                          {
                                                                                            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4796, "OI_STATUS _BCM_SetQoSConfig(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t"
                                                                                              ", uint32_t, uint32_t, uint"
                                                                                              "32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                                                                                          }
                                                                                          else if (WORD1(v104) - v85 > 3 && BYTE6(v104) == 2)
                                                                                          {
                                                                                            *(_BYTE *)(v103 + v85) = a28;
                                                                                            *(_WORD *)(v103 + WORD2(v104) + 1) = *(_WORD *)((char *)&a28 + 1);
                                                                                            *(_BYTE *)(v103 + WORD2(v104) + 3) = HIBYTE(a28);
                                                                                            v86 = WORD2(v104) + 4;
                                                                                            WORD2(v104) += 4;
                                                                                            if (HIBYTE(v104))
                                                                                            {
                                                                                              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4797, "OI_STATUS _BCM_SetQoSConfig(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t"
                                                                                                ", uint32_t, uint32_t, ui"
                                                                                                "nt32_t, uint32_t, uint32"
                                                                                                "_t, uint32_t, uint8_t, B"
                                                                                                "T_VSC_COMPLETE_CB)");
                                                                                            }
                                                                                            else if (WORD1(v104) - v86 > 3 && BYTE6(v104) == 2)
                                                                                            {
                                                                                              *(_BYTE *)(v103 + v86) = a29;
                                                                                              *(_WORD *)(v103 + WORD2(v104) + 1) = *(_WORD *)((char *)&a29 + 1);
                                                                                              *(_BYTE *)(v103 + WORD2(v104) + 3) = HIBYTE(a29);
                                                                                              v87 = WORD2(v104) + 4;
                                                                                              WORD2(v104) += 4;
                                                                                              if (HIBYTE(v104))
                                                                                              {
                                                                                                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4799, "OI_STATUS _BCM_SetQoSConfig(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32"
                                                                                                  "_t, uint32_t, uint32_t"
                                                                                                  ", uint32_t, uint32_t, "
                                                                                                  "uint32_t, uint32_t, ui"
                                                                                                  "nt32_t, uint32_t, uint"
                                                                                                  "32_t, uint32_t, uint32"
                                                                                                  "_t, uint8_t, BT_VSC_COMPLETE_CB)");
                                                                                              }
                                                                                              else if (WORD1(v104) - v87 > 3 && BYTE6(v104) == 2)
                                                                                              {
                                                                                                *(_BYTE *)(v103 + v87) = a30;
                                                                                                *(_WORD *)(v103 + WORD2(v104) + 1) = *(_WORD *)((char *)&a30 + 1);
                                                                                                *(_BYTE *)(v103 + WORD2(v104) + 3) = HIBYTE(a30);
                                                                                                v88 = WORD2(v104) + 4;
                                                                                                WORD2(v104) += 4;
                                                                                                if (HIBYTE(v104))
                                                                                                {
                                                                                                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4800, "OI_STATUS _BCM_SetQoSConfig(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                                                                                                }
                                                                                                else if (WORD1(v104) - v88 > 3 && BYTE6(v104) == 2)
                                                                                                {
                                                                                                  *(_BYTE *)(v103 + v88) = a31;
                                                                                                  *(_WORD *)(v103 + WORD2(v104) + 1) = *(_WORD *)((char *)&a31 + 1);
                                                                                                  *(_BYTE *)(v103 + WORD2(v104) + 3) = HIBYTE(a31);
                                                                                                  v89 = WORD2(v104) + 4;
                                                                                                  WORD2(v104) += 4;
                                                                                                  if (HIBYTE(v104))
                                                                                                  {
                                                                                                    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4801, "OI_STATUS _BCM_SetQoSConfig(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                                                                                                  }
                                                                                                  else if (WORD1(v104) - v89 > 3 && BYTE6(v104) == 2)
                                                                                                  {
                                                                                                    *(_BYTE *)(v103 + v89) = a32;
                                                                                                    *(_WORD *)(v103 + WORD2(v104) + 1) = *(_WORD *)((char *)&a32 + 1);
                                                                                                    *(_BYTE *)(v103 + WORD2(v104) + 3) = HIBYTE(a32);
                                                                                                    v90 = WORD2(v104) + 4;
                                                                                                    WORD2(v104) += 4;
                                                                                                    if (HIBYTE(v104))
                                                                                                    {
                                                                                                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4802, "OI_STATUS _BCM_SetQoSConfig(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                                                                                                    }
                                                                                                    else if (WORD1(v104) - v90 > 3 && BYTE6(v104) == 2)
                                                                                                    {
                                                                                                      *(_BYTE *)(v103 + v90) = a33;
                                                                                                      *(_WORD *)(v103 + WORD2(v104) + 1) = *(_WORD *)((char *)&a33 + 1);
                                                                                                      *(_BYTE *)(v103 + WORD2(v104) + 3) = HIBYTE(a33);
                                                                                                      v91 = WORD2(v104) + 4;
                                                                                                      WORD2(v104) += 4;
                                                                                                      if (HIBYTE(v104))
                                                                                                      {
                                                                                                        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4804, "OI_STATUS _BCM_SetQoSConfig(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                                                                                                      }
                                                                                                      else if (WORD1(v104) - v91 > 3 && BYTE6(v104) == 2)
                                                                                                      {
                                                                                                        *(_BYTE *)(v103 + v91) = a34;
                                                                                                        *(_WORD *)(v103 + WORD2(v104) + 1) = *(_WORD *)((char *)&a34 + 1);
                                                                                                        *(_BYTE *)(v103 + WORD2(v104) + 3) = HIBYTE(a34);
                                                                                                        v92 = WORD2(v104) + 4;
                                                                                                        WORD2(v104) += 4;
                                                                                                        if (HIBYTE(v104))
                                                                                                        {
                                                                                                          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4805, "OI_STATUS _BCM_SetQoSConfig(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                                                                                                        }
                                                                                                        else if (WORD1(v104) - v92 > 3 && BYTE6(v104) == 2)
                                                                                                        {
                                                                                                          *(_BYTE *)(v103 + v92) = a35;
                                                                                                          *(_WORD *)(v103 + WORD2(v104) + 1) = *(_WORD *)((char *)&a35 + 1);
                                                                                                          *(_BYTE *)(v103 + WORD2(v104) + 3) = HIBYTE(a35);
                                                                                                          v93 = WORD2(v104) + 4;
                                                                                                          WORD2(v104) += 4;
                                                                                                          if (HIBYTE(v104))
                                                                                                          {
                                                                                                            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4806, "OI_STATUS _BCM_SetQoSConfig(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                                                                                                          }
                                                                                                          else if (WORD1(v104) - v93 > 3 && BYTE6(v104) == 2)
                                                                                                          {
                                                                                                            *(_BYTE *)(v103 + v93) = a36;
                                                                                                            *(_WORD *)(v103 + WORD2(v104) + 1) = *(_WORD *)((char *)&a36 + 1);
                                                                                                            *(_BYTE *)(v103 + WORD2(v104) + 3) = HIBYTE(a36);
                                                                                                            v94 = WORD2(v104) + 4;
                                                                                                            WORD2(v104) += 4;
                                                                                                            if (HIBYTE(v104))
                                                                                                            {
                                                                                                              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4807, "OI_STATUS _BCM_SetQoSConfig(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                                                                                                            }
                                                                                                            else if (WORD1(v104) - v94 > 3 && BYTE6(v104) == 2)
                                                                                                            {
                                                                                                              *(_BYTE *)(v103 + v94) = a37;
                                                                                                              *(_WORD *)(v103 + WORD2(v104) + 1) = *(_WORD *)((char *)&a37 + 1);
                                                                                                              *(_BYTE *)(v103 + WORD2(v104) + 3) = HIBYTE(a37);
                                                                                                              v95 = WORD2(v104) + 4;
                                                                                                              WORD2(v104) += 4;
                                                                                                              if (HIBYTE(v104))
                                                                                                              {
                                                                                                                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4809, "OI_STATUS _BCM_SetQoSConfig(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                                                                                                              }
                                                                                                              else if (WORD1(v104) - v95 > 3 && BYTE6(v104) == 2)
                                                                                                              {
                                                                                                                *(_BYTE *)(v103 + v95) = a38;
                                                                                                                *(_WORD *)(v103 + WORD2(v104) + 1) = *(_WORD *)((char *)&a38 + 1);
                                                                                                                *(_BYTE *)(v103 + WORD2(v104) + 3) = HIBYTE(a38);
                                                                                                                v96 = WORD2(v104) + 4;
                                                                                                                WORD2(v104) += 4;
                                                                                                                if (HIBYTE(v104))
                                                                                                                {
                                                                                                                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4811, "OI_STATUS _BCM_SetQoSConfig(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                                                                                                                }
                                                                                                                else if (WORD1(v104) - v96 > 3 && BYTE6(v104) == 2)
                                                                                                                {
                                                                                                                  *(_BYTE *)(v103 + v96) = a39;
                                                                                                                  *(_WORD *)(v103 + WORD2(v104) + 1) = *(_WORD *)((char *)&a39 + 1);
                                                                                                                  *(_BYTE *)(v103 + WORD2(v104) + 3) = HIBYTE(a39);
                                                                                                                  v97 = WORD2(v104) + 4;
                                                                                                                  WORD2(v104) += 4;
                                                                                                                  if (HIBYTE(v104))
                                                                                                                  {
                                                                                                                    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4812, "OI_STATUS _BCM_SetQoSConfig(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                                                                                                                  }
                                                                                                                  else if (WORD1(v104) - v97 > 3 && BYTE6(v104) == 2)
                                                                                                                  {
                                                                                                                    *(_BYTE *)(v103 + v97) = a40;
                                                                                                                    *(_WORD *)(v103 + WORD2(v104) + 1) = *(_WORD *)((char *)&a40 + 1);
                                                                                                                    *(_BYTE *)(v103 + WORD2(v104) + 3) = HIBYTE(a40);
                                                                                                                    v98 = WORD2(v104) + 4;
                                                                                                                    WORD2(v104) += 4;
                                                                                                                    if (HIBYTE(v104))
                                                                                                                    {
                                                                                                                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4813, "OI_STATUS _BCM_SetQoSConfig(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                                                                                                                    }
                                                                                                                    else if (WORD1(v104) - v98 > 3 && BYTE6(v104) == 2)
                                                                                                                    {
                                                                                                                      *(_BYTE *)(v103 + v98) = a41;
                                                                                                                      *(_WORD *)(v103 + WORD2(v104) + 1) = *(_WORD *)((char *)&a41 + 1);
                                                                                                                      *(_BYTE *)(v103 + WORD2(v104) + 3) = HIBYTE(a41);
                                                                                                                      v99 = WORD2(v104) + 4;
                                                                                                                      WORD2(v104) += 4;
                                                                                                                      if (HIBYTE(v104))
                                                                                                                      {
                                                                                                                        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4814, "OI_STATUS _BCM_SetQoSConfig(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                                                                                                                      }
                                                                                                                      else if (WORD1(v104) - v99 > 3 && BYTE6(v104) == 2)
                                                                                                                      {
                                                                                                                        *(_BYTE *)(v103 + v99) = a42;
                                                                                                                        *(_WORD *)(v103 + WORD2(v104) + 1) = *(_WORD *)((char *)&a42 + 1);
                                                                                                                        *(_BYTE *)(v103 + WORD2(v104) + 3) = HIBYTE(a42);
                                                                                                                        v100 = WORD2(v104) + 4;
                                                                                                                        WORD2(v104) += 4;
                                                                                                                        if (HIBYTE(v104))
                                                                                                                        {
                                                                                                                          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4816, "OI_STATUS _BCM_SetQoSConfig(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                                                                                                                        }
                                                                                                                        else if (WORD1(v104) - v100 > 3 && BYTE6(v104) == 2)
                                                                                                                        {
                                                                                                                          *(_BYTE *)(v103 + v100) = a43;
                                                                                                                          *(_BYTE *)(v103 + WORD2(v104) + 1) = a44;
                                                                                                                          *(_WORD *)(v103 + WORD2(v104) + 2) = a45;
                                                                                                                          v101 = WORD2(v104);
                                                                                                                          v102 = WORD2(v104) + 4;
                                                                                                                          WORD2(v104) += 4;
                                                                                                                          if (HIBYTE(v104))
                                                                                                                          {
                                                                                                                            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4818, "OI_STATUS _BCM_SetQoSConfig(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint8_t, _Bool, _Bool, _Bool, _Bool, _Bool, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                                                                                                                          }
                                                                                                                          else if (WORD1(v104) > v102 && BYTE6(v104) == 2)
                                                                                                                          {
                                                                                                                            WORD2(v104) = v101 + 5;
                                                                                                                            *(_BYTE *)(v103 + v102) = a46;
                                                                                                                            return sub_10004C8A0(641, v103, BYTE4(v104), a47, (uint64_t)sub_10004AE9C, v56, v57, v58);
                                                                                                                          }
                                                                                                                          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                                                        }
                                                                                                                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                                                      }
                                                                                                                      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                                                    }
                                                                                                                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                                                  }
                                                                                                                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                                                }
                                                                                                                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                                              }
                                                                                                              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                                            }
                                                                                                            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                                          }
                                                                                                          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                                        }
                                                                                                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                                      }
                                                                                                      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                                    }
                                                                                                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                                  }
                                                                                                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                                }
                                                                                                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                              }
                                                                                              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                            }
                                                                                            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                          }
                                                                                          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                        }
                                                                                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                      }
                                                                                      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                    }
                                                                                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                  }
                                                                                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                }
                                                                                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                              }
                                                                              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                            }
                                                                            sub_1001494E0((uint64_t)"/Library/Caches/com.a"
                                                                                                   "pple.xbs/Sources/Mobi"
                                                                                                   "leBluetooth_base/Stac"
                                                                                                   "k/vsc/bcm/bcm_vsc.c");
                                                                          }
                                                                          sub_1001494E0((uint64_t)"/Library/Caches/com.app"
                                                                                                 "le.xbs/Sources/MobileBl"
                                                                                                 "uetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                        }
                                                                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple"
                                                                                               ".xbs/Sources/MobileBlueto"
                                                                                               "oth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                      }
                                                                      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.x"
                                                                                             "bs/Sources/MobileBluetooth_"
                                                                                             "base/Stack/vsc/bcm/bcm_vsc.c");
                                                                    }
                                                                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs"
                                                                                           "/Sources/MobileBluetooth_base"
                                                                                           "/Stack/vsc/bcm/bcm_vsc.c");
                                                                  }
                                                                }
                                                                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sou"
                                                                                       "rces/MobileBluetooth_base/Stack/v"
                                                                                       "sc/bcm/bcm_vsc.c");
                                                              }
                                                            }
                                                            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources"
                                                                                   "/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                          }
                                                        }
                                                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mob"
                                                                               "ileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                      }
                                                    }
                                                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileB"
                                                                           "luetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                  }
                                                }
                                                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluet"
                                                                       "ooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                              }
                                            }
                                            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth"
                                                                   "_base/Stack/vsc/bcm/bcm_vsc.c");
                                          }
                                        }
                                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_bas"
                                                               "e/Stack/vsc/bcm/bcm_vsc.c");
                                      }
                                    }
                                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/St"
                                                           "ack/vsc/bcm/bcm_vsc.c");
                                  }
                                }
                                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/bcm/bcm_vsc.c");
                              }
                            }
                            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                          }
                        }
                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }
                    }
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                }
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001B1CF0(char a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v9 = 0;
  v10 = 0;
  result = sub_10004BC7C(&v9);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v10))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4836, "OI_STATUS _BCM_GetQoSConfig(uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v8 = WORD2(v10);
      if (WORD1(v10) > WORD2(v10) && BYTE6(v10) == 2)
      {
        ++WORD2(v10);
        *(_BYTE *)(v9 + v8) = a1;
        return sub_10004C8A0(643, v9, BYTE4(v10), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001B1DBC(char a1, char a2, int a3, int a4, int a5, int a6, int a7, int a8, char a9, char a10, __int16 a11, char a12, uint64_t (*a13)())
{
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int16 v28;
  unsigned __int16 v29;
  unsigned __int16 v30;
  unsigned __int16 v31;
  unsigned __int16 v32;
  unsigned __int16 v33;
  __int16 v34;
  unsigned __int16 v35;
  uint64_t v36;
  uint64_t v37;

  v36 = 0;
  v37 = 0;
  result = sub_10004BC7C(&v36);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v37))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4854, "OI_STATUS _BCM_GetScanStatsWithThreshold(uint8_t, uint8_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v25 = WORD2(v37);
      if (WORD1(v37) > WORD2(v37) && BYTE6(v37) == 2)
      {
        ++WORD2(v37);
        *(_BYTE *)(v36 + v25) = 0;
        if (HIBYTE(v37))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4855, "OI_STATUS _BCM_GetScanStatsWithThreshold(uint8_t, uint8_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
        }
        else
        {
          v26 = WORD2(v37);
          if (WORD1(v37) > WORD2(v37) && BYTE6(v37) == 2)
          {
            ++WORD2(v37);
            *(_BYTE *)(v36 + v26) = a1;
            if (HIBYTE(v37))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4856, "OI_STATUS _BCM_GetScanStatsWithThreshold(uint8_t, uint8_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
            }
            else
            {
              v27 = WORD2(v37);
              if (WORD1(v37) > WORD2(v37) && BYTE6(v37) == 2)
              {
                ++WORD2(v37);
                *(_BYTE *)(v36 + v27) = a2;
                if (HIBYTE(v37))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4857, "OI_STATUS _BCM_GetScanStatsWithThreshold(uint8_t, uint8_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                }
                else if (WORD1(v37) - WORD2(v37) > 3 && BYTE6(v37) == 2)
                {
                  *(_WORD *)(v36 + WORD2(v37)) = a3;
                  *(_BYTE *)(v36 + WORD2(v37) + 2) = BYTE2(a3);
                  *(_BYTE *)(v36 + WORD2(v37) + 3) = HIBYTE(a3);
                  v28 = WORD2(v37) + 4;
                  WORD2(v37) += 4;
                  if (HIBYTE(v37))
                  {
                    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4858, "OI_STATUS _BCM_GetScanStatsWithThreshold(uint8_t, uint8_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                  }
                  else if (WORD1(v37) - v28 > 3 && BYTE6(v37) == 2)
                  {
                    *(_BYTE *)(v36 + v28) = a4;
                    *(_BYTE *)(v36 + WORD2(v37) + 1) = BYTE1(a4);
                    *(_BYTE *)(v36 + WORD2(v37) + 2) = BYTE2(a4);
                    *(_BYTE *)(v36 + WORD2(v37) + 3) = HIBYTE(a4);
                    v29 = WORD2(v37) + 4;
                    WORD2(v37) += 4;
                    if (HIBYTE(v37))
                    {
                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4859, "OI_STATUS _BCM_GetScanStatsWithThreshold(uint8_t, uint8_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                    }
                    else if (WORD1(v37) - v29 > 3 && BYTE6(v37) == 2)
                    {
                      *(_BYTE *)(v36 + v29) = a5;
                      *(_BYTE *)(v36 + WORD2(v37) + 1) = BYTE1(a5);
                      *(_BYTE *)(v36 + WORD2(v37) + 2) = BYTE2(a5);
                      *(_BYTE *)(v36 + WORD2(v37) + 3) = HIBYTE(a5);
                      v30 = WORD2(v37) + 4;
                      WORD2(v37) += 4;
                      if (HIBYTE(v37))
                      {
                        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4860, "OI_STATUS _BCM_GetScanStatsWithThreshold(uint8_t, uint8_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                      }
                      else if (WORD1(v37) - v30 > 3 && BYTE6(v37) == 2)
                      {
                        *(_BYTE *)(v36 + v30) = a6;
                        *(_BYTE *)(v36 + WORD2(v37) + 1) = BYTE1(a6);
                        *(_BYTE *)(v36 + WORD2(v37) + 2) = BYTE2(a6);
                        *(_BYTE *)(v36 + WORD2(v37) + 3) = HIBYTE(a6);
                        v31 = WORD2(v37) + 4;
                        WORD2(v37) += 4;
                        if (HIBYTE(v37))
                        {
                          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4861, "OI_STATUS _BCM_GetScanStatsWithThreshold(uint8_t, uint8_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                        }
                        else if (WORD1(v37) - v31 > 3 && BYTE6(v37) == 2)
                        {
                          *(_BYTE *)(v36 + v31) = a7;
                          *(_BYTE *)(v36 + WORD2(v37) + 1) = BYTE1(a7);
                          *(_BYTE *)(v36 + WORD2(v37) + 2) = BYTE2(a7);
                          *(_BYTE *)(v36 + WORD2(v37) + 3) = HIBYTE(a7);
                          v32 = WORD2(v37) + 4;
                          WORD2(v37) += 4;
                          if (HIBYTE(v37))
                          {
                            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4862, "OI_STATUS _BCM_GetScanStatsWithThreshold(uint8_t, uint8_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                          }
                          else if (WORD1(v37) - v32 > 3 && BYTE6(v37) == 2)
                          {
                            *(_BYTE *)(v36 + v32) = a8;
                            *(_BYTE *)(v36 + WORD2(v37) + 1) = BYTE1(a8);
                            *(_BYTE *)(v36 + WORD2(v37) + 2) = BYTE2(a8);
                            *(_BYTE *)(v36 + WORD2(v37) + 3) = HIBYTE(a8);
                            v33 = WORD2(v37) + 4;
                            WORD2(v37) += 4;
                            if (HIBYTE(v37))
                            {
                              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4863, "OI_STATUS _BCM_GetScanStatsWithThreshold(uint8_t, uint8_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                            }
                            else if (WORD1(v37) - v33 > 3 && BYTE6(v37) == 2)
                            {
                              *(_BYTE *)(v36 + v33) = a9;
                              *(_BYTE *)(v36 + WORD2(v37) + 1) = a10;
                              *(_WORD *)(v36 + WORD2(v37) + 2) = a11;
                              v34 = WORD2(v37);
                              v35 = WORD2(v37) + 4;
                              WORD2(v37) += 4;
                              if (HIBYTE(v37))
                              {
                                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4864, "OI_STATUS _BCM_GetScanStatsWithThreshold(uint8_t, uint8_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                              }
                              else if (WORD1(v37) > v35 && BYTE6(v37) == 2)
                              {
                                WORD2(v37) = v34 + 5;
                                *(_BYTE *)(v36 + v35) = a12;
                                return sub_10004C8A0(657, v36, BYTE4(v37), a13, (uint64_t)sub_10004AE9C, v22, v23, v24);
                              }
                              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                            }
                            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                          }
                          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                        }
                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }
                      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                    }
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001B254C(char a1, char a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v13 = 0;
  v14 = 0;
  result = sub_10004BC7C(&v13);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v14))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4878, "OI_STATUS _BCM_ReadScanStatsWithThreshold(uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v10 = WORD2(v14);
      if (WORD1(v14) > WORD2(v14) && BYTE6(v14) == 2)
      {
        ++WORD2(v14);
        *(_BYTE *)(v13 + v10) = 1;
        if (HIBYTE(v14))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4879, "OI_STATUS _BCM_ReadScanStatsWithThreshold(uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
        }
        else
        {
          v11 = WORD2(v14);
          if (WORD1(v14) > WORD2(v14) && BYTE6(v14) == 2)
          {
            ++WORD2(v14);
            *(_BYTE *)(v13 + v11) = a1;
            if (HIBYTE(v14))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4880, "OI_STATUS _BCM_ReadScanStatsWithThreshold(uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
            }
            else
            {
              v12 = WORD2(v14);
              if (WORD1(v14) > WORD2(v14) && BYTE6(v14) == 2)
              {
                ++WORD2(v14);
                *(_BYTE *)(v13 + v12) = a2;
                return sub_10004C8A0(657, v13, BYTE4(v14), a3, (uint64_t)sub_10004AE9C, v7, v8, v9);
              }
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001B2718(int a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v9 = 0;
  v10 = 0;
  result = sub_10004BC7C(&v9);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v10))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4894, "OI_STATUS _BCM_ConfigAppleExtAdvReport(uint32_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v8 = WORD2(v10);
      if (WORD1(v10) > WORD2(v10) && BYTE6(v10) == 2)
      {
        ++WORD2(v10);
        *(_BYTE *)(v9 + v8) = 16;
        if (HIBYTE(v10))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4895, "OI_STATUS _BCM_ConfigAppleExtAdvReport(uint32_t, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v10) - WORD2(v10) > 3 && BYTE6(v10) == 2)
        {
          *(_WORD *)(v9 + WORD2(v10)) = a1;
          *(_BYTE *)(v9 + WORD2(v10) + 2) = BYTE2(a1);
          *(_BYTE *)(v9 + WORD2(v10) + 3) = HIBYTE(a1);
          WORD2(v10) += 4;
          return sub_10004C8A0(291, v9, BYTE4(v10), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001B28A4(char *a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v10 = 0;
  v11 = 0;
  result = sub_10004BC7C(&v10);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v11))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4908, "OI_STATUS _BCM_CreateMultipleAdvInstance(const LE_Address *, BT_VSC_CREATE_MULTI_ADV_INST_CB)");
    }
    else
    {
      v5 = WORD2(v11);
      if (WORD1(v11) > WORD2(v11) && BYTE6(v11) == 2)
      {
        v6 = *a1;
        ++WORD2(v11);
        *(_BYTE *)(v10 + v5) = v6;
        if (HIBYTE(v11))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4909, "OI_STATUS _BCM_CreateMultipleAdvInstance(const LE_Address *, BT_VSC_CREATE_MULTI_ADV_INST_CB)");
        }
        else if (WORD1(v11) - WORD2(v11) > 5 && BYTE6(v11) == 2)
        {
          sub_10004C878(v10 + WORD2(v11), (uint64_t)(a1 + 1), 6uLL);
          WORD2(v11) += 6;
          return sub_10004C8A0(328, v10, BYTE4(v11), a2, (uint64_t)sub_1001A89D4, v7, v8, v9);
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001B2A00(char a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v9 = 0;
  v10 = 0;
  result = sub_10004BC7C(&v9);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v10))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4924, "OI_STATUS _BCM_RemoveMultipleAdvInstance(uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v8 = WORD2(v10);
      if (WORD1(v10) > WORD2(v10) && BYTE6(v10) == 2)
      {
        ++WORD2(v10);
        *(_BYTE *)(v9 + v8) = a1;
        return sub_10004C8A0(329, v9, BYTE4(v10), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001B2ACC(char a1, __int16 a2, __int16 a3, char a4, char a5, char a6, uint64_t (*a7)())
{
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int16 v19;
  __int16 v20;
  unsigned __int16 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v24 = 0;
  v25 = 0;
  result = sub_10004BC7C(&v24);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v25))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4939, "OI_STATUS _BCM_SetMultipleAdvInstanceParams(uint8_t, uint16_t, uint16_t, uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v18 = WORD2(v25);
      if (WORD1(v25) > WORD2(v25) && BYTE6(v25) == 2)
      {
        ++WORD2(v25);
        *(_BYTE *)(v24 + v18) = a1;
        if (HIBYTE(v25))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4940, "OI_STATUS _BCM_SetMultipleAdvInstanceParams(uint8_t, uint16_t, uint16_t, uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v25) - WORD2(v25) > 1 && BYTE6(v25) == 2)
        {
          *(_WORD *)(v24 + WORD2(v25)) = a2;
          v19 = WORD2(v25) + 2;
          WORD2(v25) += 2;
          if (HIBYTE(v25))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4941, "OI_STATUS _BCM_SetMultipleAdvInstanceParams(uint8_t, uint16_t, uint16_t, uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
          }
          else if (WORD1(v25) - v19 > 1 && BYTE6(v25) == 2)
          {
            *(_BYTE *)(v24 + v19) = a3;
            *(_BYTE *)(v24 + WORD2(v25) + 1) = HIBYTE(a3);
            v20 = WORD2(v25);
            v21 = WORD2(v25) + 2;
            WORD2(v25) += 2;
            if (HIBYTE(v25))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4942, "OI_STATUS _BCM_SetMultipleAdvInstanceParams(uint8_t, uint16_t, uint16_t, uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
            }
            else if (WORD1(v25) > v21 && BYTE6(v25) == 2)
            {
              WORD2(v25) = v20 + 3;
              *(_BYTE *)(v24 + v21) = a4;
              if (HIBYTE(v25))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4943, "OI_STATUS _BCM_SetMultipleAdvInstanceParams(uint8_t, uint16_t, uint16_t, uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
              }
              else
              {
                v22 = WORD2(v25);
                if (WORD1(v25) > WORD2(v25) && BYTE6(v25) == 2)
                {
                  ++WORD2(v25);
                  *(_BYTE *)(v24 + v22) = a5;
                  if (HIBYTE(v25))
                  {
                    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4944, "OI_STATUS _BCM_SetMultipleAdvInstanceParams(uint8_t, uint16_t, uint16_t, uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                  }
                  else
                  {
                    v23 = WORD2(v25);
                    if (WORD1(v25) > WORD2(v25) && BYTE6(v25) == 2)
                    {
                      ++WORD2(v25);
                      *(_BYTE *)(v24 + v23) = a6;
                      return sub_10004C8A0(330, v24, BYTE4(v25), a7, (uint64_t)sub_10004AE9C, v15, v16, v17);
                    }
                  }
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001B2E54(char a1, unsigned int a2, const void *a3, uint64_t (*a4)())
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v15 = 0;
  v16 = 0;
  result = sub_10004BC7C(&v15);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v16))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4959, "OI_STATUS _BCM_SetMultipleAdvInstanceData(uint8_t, uint8_t, const uint8_t *, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v9 = WORD2(v16);
      if (WORD1(v16) > WORD2(v16) && BYTE6(v16) == 2)
      {
        ++WORD2(v16);
        *(_BYTE *)(v15 + v9) = a1;
        if (HIBYTE(v16))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4960, "OI_STATUS _BCM_SetMultipleAdvInstanceData(uint8_t, uint8_t, const uint8_t *, BT_VSC_COMPLETE_CB)");
        }
        else
        {
          v10 = WORD2(v16);
          if (WORD1(v16) > WORD2(v16) && BYTE6(v16) == 2)
          {
            if (a2 >= 0x1F)
              v11 = 31;
            else
              v11 = a2;
            ++WORD2(v16);
            *(_BYTE *)(v15 + v10) = v11;
            if (HIBYTE(v16))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4961, "OI_STATUS _BCM_SetMultipleAdvInstanceData(uint8_t, uint8_t, const uint8_t *, BT_VSC_COMPLETE_CB)");
            }
            else if (WORD1(v16) - WORD2(v16) > 30 && BYTE6(v16) == 2)
            {
              memmove((void *)(v15 + WORD2(v16)), a3, 0x1FuLL);
              WORD2(v16) += 31;
              return sub_10004C8A0(331, v15, BYTE4(v16), a4, (uint64_t)sub_10004AE9C, v12, v13, v14);
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001B3040(char a1, unsigned int a2, const void *a3, uint64_t (*a4)())
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v15 = 0;
  v16 = 0;
  result = sub_10004BC7C(&v15);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v16))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4976, "OI_STATUS _BCM_SetMultipleScanRspInstanceData(uint8_t, uint8_t, const uint8_t *, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v9 = WORD2(v16);
      if (WORD1(v16) > WORD2(v16) && BYTE6(v16) == 2)
      {
        ++WORD2(v16);
        *(_BYTE *)(v15 + v9) = a1;
        if (HIBYTE(v16))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4977, "OI_STATUS _BCM_SetMultipleScanRspInstanceData(uint8_t, uint8_t, const uint8_t *, BT_VSC_COMPLETE_CB)");
        }
        else
        {
          v10 = WORD2(v16);
          if (WORD1(v16) > WORD2(v16) && BYTE6(v16) == 2)
          {
            if (a2 >= 0x1F)
              v11 = 31;
            else
              v11 = a2;
            ++WORD2(v16);
            *(_BYTE *)(v15 + v10) = v11;
            if (HIBYTE(v16))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4978, "OI_STATUS _BCM_SetMultipleScanRspInstanceData(uint8_t, uint8_t, const uint8_t *, BT_VSC_COMPLETE_CB)");
            }
            else if (WORD1(v16) - WORD2(v16) > 30 && BYTE6(v16) == 2)
            {
              memmove((void *)(v15 + WORD2(v16)), a3, 0x1FuLL);
              WORD2(v16) += 31;
              return sub_10004C8A0(332, v15, BYTE4(v16), a4, (uint64_t)sub_10004AE9C, v12, v13, v14);
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001B322C(char a1, char a2, int a3, char a4, uint64_t (*a5)())
{
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  unsigned __int16 v17;
  uint64_t v18;
  uint64_t v19;

  v18 = 0;
  v19 = 0;
  result = sub_10004BC7C(&v18);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v19))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4993, "OI_STATUS _BCM_SetMultipleAdvInstanceEnable(uint8_t, _Bool, uint32_t, _Bool, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v14 = WORD2(v19);
      if (WORD1(v19) > WORD2(v19) && BYTE6(v19) == 2)
      {
        ++WORD2(v19);
        *(_BYTE *)(v18 + v14) = a1;
        if (HIBYTE(v19))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4994, "OI_STATUS _BCM_SetMultipleAdvInstanceEnable(uint8_t, _Bool, uint32_t, _Bool, BT_VSC_COMPLETE_CB)");
        }
        else
        {
          v15 = WORD2(v19);
          if (WORD1(v19) > WORD2(v19) && BYTE6(v19) == 2)
          {
            ++WORD2(v19);
            *(_BYTE *)(v18 + v15) = a2;
            if (HIBYTE(v19))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4995, "OI_STATUS _BCM_SetMultipleAdvInstanceEnable(uint8_t, _Bool, uint32_t, _Bool, BT_VSC_COMPLETE_CB)");
            }
            else if (WORD1(v19) - WORD2(v19) > 3 && BYTE6(v19) == 2)
            {
              *(_WORD *)(v18 + WORD2(v19)) = a3;
              *(_BYTE *)(v18 + WORD2(v19) + 2) = BYTE2(a3);
              *(_BYTE *)(v18 + WORD2(v19) + 3) = HIBYTE(a3);
              v16 = WORD2(v19);
              v17 = WORD2(v19) + 4;
              WORD2(v19) += 4;
              if (HIBYTE(v19))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4996, "OI_STATUS _BCM_SetMultipleAdvInstanceEnable(uint8_t, _Bool, uint32_t, _Bool, BT_VSC_COMPLETE_CB)");
              }
              else if (WORD1(v19) > v17 && BYTE6(v19) == 2)
              {
                WORD2(v19) = v16 + 5;
                *(_BYTE *)(v18 + v17) = a4;
                return sub_10004C8A0(333, v18, BYTE4(v19), a5, (uint64_t)sub_10004AE9C, v11, v12, v13);
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001B34C0(char a1, char *a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v13 = 0;
  v14 = 0;
  result = sub_10004BC7C(&v13);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v14))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5012, "OI_STATUS _BCM_UpdateMultipleAdvInstanceAddress(uint8_t, const LE_Address *, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v7 = WORD2(v14);
      if (WORD1(v14) > WORD2(v14) && BYTE6(v14) == 2)
      {
        ++WORD2(v14);
        *(_BYTE *)(v13 + v7) = a1;
        if (HIBYTE(v14))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5013, "OI_STATUS _BCM_UpdateMultipleAdvInstanceAddress(uint8_t, const LE_Address *, BT_VSC_COMPLETE_CB)");
        }
        else
        {
          v8 = WORD2(v14);
          if (WORD1(v14) > WORD2(v14) && BYTE6(v14) == 2)
          {
            v9 = *a2;
            ++WORD2(v14);
            *(_BYTE *)(v13 + v8) = v9;
            if (HIBYTE(v14))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5014, "OI_STATUS _BCM_UpdateMultipleAdvInstanceAddress(uint8_t, const LE_Address *, BT_VSC_COMPLETE_CB)");
            }
            else if (WORD1(v14) - WORD2(v14) > 5 && BYTE6(v14) == 2)
            {
              sub_10004C878(v13 + WORD2(v14), (uint64_t)(a2 + 1), 6uLL);
              WORD2(v14) += 6;
              return sub_10004C8A0(334, v13, BYTE4(v14), a3, (uint64_t)sub_10004AE9C, v10, v11, v12);
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001B36A0(_QWORD *a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v8 = 0;
  v9 = 0;
  result = sub_10004BC7C(&v8);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v9))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5030, "OI_STATUS _BCM_WriteLELocalSupportedFeatures(uint8_t *, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v9) - WORD2(v9) > 7 && BYTE6(v9) == 2)
    {
      *(_QWORD *)(v8 + WORD2(v9)) = *a1;
      WORD2(v9) += 8;
      return sub_10004C8A0(316, v8, BYTE4(v9), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001B3778(char a1, __int16 a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int16 v10;
  unsigned __int16 v11;
  uint64_t v12;
  uint64_t v13;

  v12 = 0;
  v13 = 0;
  result = sub_10004BC7C(&v12);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v13))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5045, "OI_STATUS _BCM_EnableExtendedDuplicateFilter(_Bool, uint16_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v13) - WORD2(v13) > 1 && BYTE6(v13) == 2)
    {
      *(_BYTE *)(v12 + WORD2(v13) + 1) = a2;
      *(_BYTE *)(v12 + WORD2(v13)) = HIBYTE(a2);
      v10 = WORD2(v13);
      v11 = WORD2(v13) + 2;
      WORD2(v13) += 2;
      if (HIBYTE(v13))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5046, "OI_STATUS _BCM_EnableExtendedDuplicateFilter(_Bool, uint16_t, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v13) > v11 && BYTE6(v13) == 2)
      {
        WORD2(v13) = v10 + 3;
        *(_BYTE *)(v12 + v11) = a1;
        return sub_10004C8A0(327, v12, BYTE4(v13), a3, (uint64_t)sub_10004AE9C, v7, v8, v9);
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001B38E4(__int16 a1, char a2, uint64_t a3, uint64_t (*a4)())
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  unsigned __int16 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = 0;
  v14 = 0;
  result = sub_10004BC7C(&v13);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v14))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5061, "OI_STATUS _BCM_SetPriorityLe(uint16_t, uint8_t, _Bool, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v14) - WORD2(v14) > 1 && BYTE6(v14) == 2)
    {
      *(_WORD *)(v13 + WORD2(v14)) = a1;
      v11 = WORD2(v14);
      v12 = WORD2(v14) + 2;
      WORD2(v14) += 2;
      if (HIBYTE(v14))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5062, "OI_STATUS _BCM_SetPriorityLe(uint16_t, uint8_t, _Bool, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v14) > v12 && BYTE6(v14) == 2)
      {
        WORD2(v14) = v11 + 3;
        *(_BYTE *)(v13 + v12) = a2;
        return sub_10004C8A0(87, v13, BYTE4(v14), a4, (uint64_t)sub_10004AE9C, v8, v9, v10);
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001B3A50(char a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int16 v8;
  unsigned __int16 v9;
  uint64_t v10;
  uint64_t v11;

  v10 = 0;
  v11 = 0;
  result = sub_10004BC7C(&v10);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v11))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5180, "OI_STATUS _BCM_OlympicSetMinAFHLeChannels(uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v11) - WORD2(v11) > 3 && BYTE6(v11) == 2)
    {
      *(_BYTE *)(v10 + WORD2(v11)) = 28;
      *(_WORD *)(v10 + WORD2(v11) + 1) = 0;
      *(_BYTE *)(v10 + WORD2(v11) + 3) = 0;
      v8 = WORD2(v11);
      v9 = WORD2(v11) + 4;
      WORD2(v11) += 4;
      if (HIBYTE(v11))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5181, "OI_STATUS _BCM_OlympicSetMinAFHLeChannels(uint8_t, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v11) > v9 && BYTE6(v11) == 2)
      {
        WORD2(v11) = v8 + 5;
        *(_BYTE *)(v10 + v9) = a1;
        return sub_10004C8A0(226, v10, BYTE4(v11), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001B3BD0(char a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v9 = 0;
  v10 = 0;
  result = sub_10004BC7C(&v9);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v10))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5195, "OI_STATUS _BCM_EnableCoExDebugCounters(uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v8 = WORD2(v10);
      if (WORD1(v10) > WORD2(v10) && BYTE6(v10) == 2)
      {
        ++WORD2(v10);
        *(_BYTE *)(v9 + v8) = a1;
        return sub_10004C8A0(431, v9, BYTE4(v10), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001B3C9C(__int16 a1, char a2, char a3, char *a4, unsigned int a5, uint64_t (*a6)())
{
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  unsigned __int16 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;

  v22 = 0;
  v23 = 0;
  result = sub_10004BC7C(&v22);
  if ((_DWORD)result)
    return result;
  if (HIBYTE(v23))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5209, "OI_STATUS _BCM_ConfigureControllerBTClockCapture(const uint16_t, const uint, const uint, const uint8_t *, const uint16_t, BT_VSC_COMPLETE_CB)");
    goto LABEL_22;
  }
  if (WORD1(v23) - WORD2(v23) <= 1 || BYTE6(v23) != 2)
LABEL_22:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  *(_WORD *)(v22 + WORD2(v23)) = a1;
  v16 = WORD2(v23);
  v17 = WORD2(v23) + 2;
  WORD2(v23) += 2;
  if (HIBYTE(v23))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5210, "OI_STATUS _BCM_ConfigureControllerBTClockCapture(const uint16_t, const uint, const uint, const uint8_t *, const uint16_t, BT_VSC_COMPLETE_CB)");
    goto LABEL_24;
  }
  if (WORD1(v23) <= v17 || BYTE6(v23) != 2)
LABEL_24:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  WORD2(v23) = v16 + 3;
  *(_BYTE *)(v22 + v17) = a2;
  if (HIBYTE(v23))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5211, "OI_STATUS _BCM_ConfigureControllerBTClockCapture(const uint16_t, const uint, const uint, const uint8_t *, const uint16_t, BT_VSC_COMPLETE_CB)");
    goto LABEL_26;
  }
  v18 = WORD2(v23);
  if (WORD1(v23) <= WORD2(v23) || BYTE6(v23) != 2)
LABEL_26:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  ++WORD2(v23);
  *(_BYTE *)(v22 + v18) = a3;
  if (a5)
  {
    v19 = a5;
    while (!HIBYTE(v23))
    {
      v20 = WORD2(v23);
      if (WORD1(v23) <= WORD2(v23) || BYTE6(v23) != 2)
        goto LABEL_20;
      v21 = *a4++;
      ++WORD2(v23);
      *(_BYTE *)(v22 + v20) = v21;
      if (!--v19)
        return sub_10004C8A0(586, v22, BYTE4(v23), a6, (uint64_t)sub_10004AE9C, v13, v14, v15);
    }
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5213, "OI_STATUS _BCM_ConfigureControllerBTClockCapture(const uint16_t, const uint, const uint, const uint8_t *, const uint16_t, BT_VSC_COMPLETE_CB)");
LABEL_20:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return sub_10004C8A0(586, v22, BYTE4(v23), a6, (uint64_t)sub_10004AE9C, v13, v14, v15);
}

uint64_t sub_1001B3F20(char a1, __int16 a2, char a3, char a4, char a5, char a6, char a7, char a8, char a9, __int16 a10, char a11, char a12, char a13, char a14, char a15, int a16, int a17, char a18, char a19, __int16 a20,char a21,int a22,uint64_t (*a23)())
{
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int16 v36;
  unsigned __int16 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int16 v44;
  unsigned __int16 v45;
  __int16 v46;
  unsigned __int16 v47;
  unsigned __int16 v48;
  unsigned __int16 v49;
  __int16 v50;
  unsigned __int16 v51;
  uint64_t v52;
  uint64_t v53;

  v52 = 0;
  v53 = 0;
  result = sub_10004BC7C(&v52);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v53))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5227, "OI_STATUS _BCM_ConfigureRSSIStatisticsDetection(_Bool, uint16_t, uint8_t, int8_t, int8_t, int8_t, int8_t, int8_t, int8_t, uint16_t, uint16_t, uint16_t, uint8_t, uint32_t, uint32_t, uint32_t, uint8_t, uint32_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v35 = WORD2(v53);
      if (WORD1(v53) > WORD2(v53) && BYTE6(v53) == 2)
      {
        ++WORD2(v53);
        *(_BYTE *)(v52 + v35) = a1;
        if (HIBYTE(v53))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5228, "OI_STATUS _BCM_ConfigureRSSIStatisticsDetection(_Bool, uint16_t, uint8_t, int8_t, int8_t, int8_t, int8_t, int8_t, int8_t, uint16_t, uint16_t, uint16_t, uint8_t, uint32_t, uint32_t, uint32_t, uint8_t, uint32_t, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v53) - WORD2(v53) > 1 && BYTE6(v53) == 2)
        {
          *(_WORD *)(v52 + WORD2(v53)) = a2;
          v36 = WORD2(v53);
          v37 = WORD2(v53) + 2;
          WORD2(v53) += 2;
          if (HIBYTE(v53))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5229, "OI_STATUS _BCM_ConfigureRSSIStatisticsDetection(_Bool, uint16_t, uint8_t, int8_t, int8_t, int8_t, int8_t, int8_t, int8_t, uint16_t, uint16_t, uint16_t, uint8_t, uint32_t, uint32_t, uint32_t, uint8_t, uint32_t, BT_VSC_COMPLETE_CB)");
          }
          else if (WORD1(v53) > v37 && BYTE6(v53) == 2)
          {
            WORD2(v53) = v36 + 3;
            *(_BYTE *)(v52 + v37) = a3;
            if (HIBYTE(v53))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5230, "OI_STATUS _BCM_ConfigureRSSIStatisticsDetection(_Bool, uint16_t, uint8_t, int8_t, int8_t, int8_t, int8_t, int8_t, int8_t, uint16_t, uint16_t, uint16_t, uint8_t, uint32_t, uint32_t, uint32_t, uint8_t, uint32_t, BT_VSC_COMPLETE_CB)");
            }
            else
            {
              v38 = WORD2(v53);
              if (WORD1(v53) > WORD2(v53) && BYTE6(v53) == 2)
              {
                ++WORD2(v53);
                *(_BYTE *)(v52 + v38) = a4;
                if (HIBYTE(v53))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5231, "OI_STATUS _BCM_ConfigureRSSIStatisticsDetection(_Bool, uint16_t, uint8_t, int8_t, int8_t, int8_t, int8_t, int8_t, int8_t, uint16_t, uint16_t, uint16_t, uint8_t, uint32_t, uint32_t, uint32_t, uint8_t, uint32_t, BT_VSC_COMPLETE_CB)");
                }
                else
                {
                  v39 = WORD2(v53);
                  if (WORD1(v53) > WORD2(v53) && BYTE6(v53) == 2)
                  {
                    ++WORD2(v53);
                    *(_BYTE *)(v52 + v39) = a5;
                    if (HIBYTE(v53))
                    {
                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5232, "OI_STATUS _BCM_ConfigureRSSIStatisticsDetection(_Bool, uint16_t, uint8_t, int8_t, int8_t, int8_t, int8_t, int8_t, int8_t, uint16_t, uint16_t, uint16_t, uint8_t, uint32_t, uint32_t, uint32_t, uint8_t, uint32_t, BT_VSC_COMPLETE_CB)");
                    }
                    else
                    {
                      v40 = WORD2(v53);
                      if (WORD1(v53) > WORD2(v53) && BYTE6(v53) == 2)
                      {
                        ++WORD2(v53);
                        *(_BYTE *)(v52 + v40) = a6;
                        if (HIBYTE(v53))
                        {
                          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5233, "OI_STATUS _BCM_ConfigureRSSIStatisticsDetection(_Bool, uint16_t, uint8_t, int8_t, int8_t, int8_t, int8_t, int8_t, int8_t, uint16_t, uint16_t, uint16_t, uint8_t, uint32_t, uint32_t, uint32_t, uint8_t, uint32_t, BT_VSC_COMPLETE_CB)");
                        }
                        else
                        {
                          v41 = WORD2(v53);
                          if (WORD1(v53) > WORD2(v53) && BYTE6(v53) == 2)
                          {
                            ++WORD2(v53);
                            *(_BYTE *)(v52 + v41) = a7;
                            if (HIBYTE(v53))
                            {
                              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5234, "OI_STATUS _BCM_ConfigureRSSIStatisticsDetection(_Bool, uint16_t, uint8_t, int8_t, int8_t, int8_t, int8_t, int8_t, int8_t, uint16_t, uint16_t, uint16_t, uint8_t, uint32_t, uint32_t, uint32_t, uint8_t, uint32_t, BT_VSC_COMPLETE_CB)");
                            }
                            else
                            {
                              v42 = WORD2(v53);
                              if (WORD1(v53) > WORD2(v53) && BYTE6(v53) == 2)
                              {
                                ++WORD2(v53);
                                *(_BYTE *)(v52 + v42) = a8;
                                if (HIBYTE(v53))
                                {
                                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5235, "OI_STATUS _BCM_ConfigureRSSIStatisticsDetection(_Bool, uint16_t, uint8_t, int8_t, int8_t, int8_t, int8_t, int8_t, int8_t, uint16_t, uint16_t, uint16_t, uint8_t, uint32_t, uint32_t, uint32_t, uint8_t, uint32_t, BT_VSC_COMPLETE_CB)");
                                }
                                else
                                {
                                  v43 = WORD2(v53);
                                  if (WORD1(v53) > WORD2(v53) && BYTE6(v53) == 2)
                                  {
                                    ++WORD2(v53);
                                    *(_BYTE *)(v52 + v43) = a9;
                                    if (HIBYTE(v53))
                                    {
                                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5236, "OI_STATUS _BCM_ConfigureRSSIStatisticsDetection(_Bool, uint16_t, uint8_t, int8_t, int8_t, int8_t, int8_t, int8_t, int8_t, uint16_t, uint16_t, uint16_t, uint8_t, uint32_t, uint32_t, uint32_t, uint8_t, uint32_t, BT_VSC_COMPLETE_CB)");
                                    }
                                    else if (WORD1(v53) - WORD2(v53) > 1 && BYTE6(v53) == 2)
                                    {
                                      *(_WORD *)(v52 + WORD2(v53)) = a10;
                                      v44 = WORD2(v53) + 2;
                                      WORD2(v53) += 2;
                                      if (HIBYTE(v53))
                                      {
                                        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5237, "OI_STATUS _BCM_ConfigureRSSIStatisticsDetection(_Bool, uint16_t, uint8_t, int8_t, int8_t, int8_t, int8_t, int8_t, int8_t, uint16_t, uint16_t, uint16_t, uint8_t, uint32_t, uint32_t, uint32_t, uint8_t, uint32_t, BT_VSC_COMPLETE_CB)");
                                      }
                                      else if (WORD1(v53) - v44 > 1 && BYTE6(v53) == 2)
                                      {
                                        *(_BYTE *)(v52 + v44) = a11;
                                        *(_BYTE *)(v52 + WORD2(v53) + 1) = a12;
                                        v45 = WORD2(v53) + 2;
                                        WORD2(v53) += 2;
                                        if (HIBYTE(v53))
                                        {
                                          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5238, "OI_STATUS _BCM_ConfigureRSSIStatisticsDetection(_Bool, uint16_t, uint8_t, int8_t, int8_t, int8_t, int8_t, int8_t, int8_t, uint16_t, uint16_t, uint16_t, uint8_t, uint32_t, uint32_t, uint32_t, uint8_t, uint32_t, BT_VSC_COMPLETE_CB)");
                                        }
                                        else if (WORD1(v53) - v45 > 1 && BYTE6(v53) == 2)
                                        {
                                          *(_BYTE *)(v52 + v45) = a13;
                                          *(_BYTE *)(v52 + WORD2(v53) + 1) = a14;
                                          v46 = WORD2(v53);
                                          v47 = WORD2(v53) + 2;
                                          WORD2(v53) += 2;
                                          if (HIBYTE(v53))
                                          {
                                            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5239, "OI_STATUS _BCM_ConfigureRSSIStatisticsDetection(_Bool, uint16_t, uint8_t, int8_t, int8_t, int8_t, int8_t, int8_t, int8_t, uint16_t, uint16_t, uint16_t, uint8_t, uint32_t, uint32_t, uint32_t, uint8_t, uint32_t, BT_VSC_COMPLETE_CB)");
                                          }
                                          else if (WORD1(v53) > v47 && BYTE6(v53) == 2)
                                          {
                                            WORD2(v53) = v46 + 3;
                                            *(_BYTE *)(v52 + v47) = a15;
                                            if (HIBYTE(v53))
                                            {
                                              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5240, "OI_STATUS _BCM_ConfigureRSSIStatisticsDetection(_Bool, uint16_t, uint8_t, int8_t, int8_t, int8_t, int8_t, int8_t, int8_t, uint16_t, uint16_t, uint16_t, uint8_t, uint32_t, uint32_t, uint32_t, uint8_t, uint32_t, BT_VSC_COMPLETE_CB)");
                                            }
                                            else if (WORD1(v53) - WORD2(v53) > 3 && BYTE6(v53) == 2)
                                            {
                                              *(_DWORD *)(v52 + WORD2(v53)) = a16;
                                              v48 = WORD2(v53) + 4;
                                              WORD2(v53) += 4;
                                              if (HIBYTE(v53))
                                              {
                                                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5241, "OI_STATUS _BCM_ConfigureRSSIStatisticsDetection(_Bool, uint16_t, uint8_t, int8_t, int8_t, int8_t, int8_t, int8_t, int8_t, uint16_t, uint16_t, uint16_t, uint8_t, uint32_t, uint32_t, uint32_t, uint8_t, uint32_t, BT_VSC_COMPLETE_CB)");
                                              }
                                              else if (WORD1(v53) - v48 > 3 && BYTE6(v53) == 2)
                                              {
                                                *(_BYTE *)(v52 + v48) = a17;
                                                *(_WORD *)(v52 + WORD2(v53) + 1) = *(_WORD *)((char *)&a17 + 1);
                                                *(_BYTE *)(v52 + WORD2(v53) + 3) = HIBYTE(a17);
                                                v49 = WORD2(v53) + 4;
                                                WORD2(v53) += 4;
                                                if (HIBYTE(v53))
                                                {
                                                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5242, "OI_STATUS _BCM_ConfigureRSSIStatisticsDetection(_Bool, uint16_t, uint8_t, int8_t, int8_t, int8_t, int8_t, int8_t, int8_t, uint16_t, uint16_t, uint16_t, uint8_t, uint32_t, uint32_t, uint32_t, uint8_t, uint32_t, BT_VSC_COMPLETE_CB)");
                                                }
                                                else if (WORD1(v53) - v49 > 3 && BYTE6(v53) == 2)
                                                {
                                                  *(_BYTE *)(v52 + v49) = a18;
                                                  *(_BYTE *)(v52 + WORD2(v53) + 1) = a19;
                                                  *(_WORD *)(v52 + WORD2(v53) + 2) = a20;
                                                  v50 = WORD2(v53);
                                                  v51 = WORD2(v53) + 4;
                                                  WORD2(v53) += 4;
                                                  if (HIBYTE(v53))
                                                  {
                                                    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5243, "OI_STATUS _BCM_ConfigureRSSIStatisticsDetection(_Bool, uint16_t, uint8_t, int8_t, int8_t, int8_t, int8_t, int8_t, int8_t, uint16_t, uint16_t, uint16_t, uint8_t, uint32_t, uint32_t, uint32_t, uint8_t, uint32_t, BT_VSC_COMPLETE_CB)");
                                                  }
                                                  else if (WORD1(v53) > v51 && BYTE6(v53) == 2)
                                                  {
                                                    WORD2(v53) = v50 + 5;
                                                    *(_BYTE *)(v52 + v51) = a21;
                                                    if (HIBYTE(v53))
                                                    {
                                                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5244, "OI_STATUS _BCM_ConfigureRSSIStatisticsDetection(_Bool, uint16_t, uint8_t, int8_t, int8_t, int8_t, int8_t, int8_t, int8_t, uint16_t, uint16_t, uint16_t, uint8_t, uint32_t, uint32_t, uint32_t, uint8_t, uint32_t, BT_VSC_COMPLETE_CB)");
                                                    }
                                                    else if (WORD1(v53) - WORD2(v53) > 3 && BYTE6(v53) == 2)
                                                    {
                                                      *(_DWORD *)(v52 + WORD2(v53)) = a22;
                                                      WORD2(v53) += 4;
                                                      return sub_10004C8A0(616, v52, BYTE4(v53), a23, (uint64_t)sub_10004AE9C, v32, v33, v34);
                                                    }
                                                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileB"
                                                                           "luetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                  }
                                                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBlu"
                                                                         "etooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                }
                                                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluet"
                                                                       "ooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                              }
                                              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetoo"
                                                                     "th_base/Stack/vsc/bcm/bcm_vsc.c");
                                            }
                                            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth"
                                                                   "_base/Stack/vsc/bcm/bcm_vsc.c");
                                          }
                                          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_b"
                                                                 "ase/Stack/vsc/bcm/bcm_vsc.c");
                                        }
                                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_bas"
                                                               "e/Stack/vsc/bcm/bcm_vsc.c");
                                      }
                                      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/"
                                                             "Stack/vsc/bcm/bcm_vsc.c");
                                    }
                                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/St"
                                                           "ack/vsc/bcm/bcm_vsc.c");
                                  }
                                }
                                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/bcm/bcm_vsc.c");
                              }
                            }
                            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                          }
                        }
                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }
                    }
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                }
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001B49BC(__int16 a1, __int16 a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int16 v10;
  unsigned __int16 v11;
  uint64_t v12;
  uint64_t v13;

  v12 = 0;
  v13 = 0;
  result = sub_10004BC7C(&v12);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v13))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6072, "OI_STATUS _BCM_AdjustLEInstantFactor(uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v13) - WORD2(v13) > 3 && BYTE6(v13) == 2)
    {
      *(_BYTE *)(v12 + WORD2(v13)) = 59;
      *(_WORD *)(v12 + WORD2(v13) + 1) = 0;
      *(_BYTE *)(v12 + WORD2(v13) + 3) = 0;
      v10 = WORD2(v13) + 4;
      WORD2(v13) += 4;
      if (HIBYTE(v13))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6073, "OI_STATUS _BCM_AdjustLEInstantFactor(uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v13) - v10 > 1 && BYTE6(v13) == 2)
      {
        *(_BYTE *)(v12 + v10) = a1;
        *(_BYTE *)(v12 + WORD2(v13) + 1) = HIBYTE(a1);
        v11 = WORD2(v13) + 2;
        WORD2(v13) += 2;
        if (HIBYTE(v13))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6074, "OI_STATUS _BCM_AdjustLEInstantFactor(uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v13) - v11 > 1 && BYTE6(v13) == 2)
        {
          *(_BYTE *)(v12 + v11) = a2;
          *(_BYTE *)(v12 + WORD2(v13) + 1) = HIBYTE(a2);
          WORD2(v13) += 2;
          return sub_10004C8A0(226, v12, BYTE4(v13), a3, (uint64_t)sub_10004AE9C, v7, v8, v9);
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001B4BF8(__int16 a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v9 = 0;
  v10 = 0;
  result = sub_10004BC7C(&v9);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v10))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6328, "OI_STATUS _BCM_DelayedHostWakePCIe(uint16_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v8 = WORD2(v10);
      if (WORD1(v10) > WORD2(v10) && BYTE6(v10) == 2)
      {
        ++WORD2(v10);
        *(_BYTE *)(v9 + v8) = 9;
        if (HIBYTE(v10))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6329, "OI_STATUS _BCM_DelayedHostWakePCIe(uint16_t, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v10) - WORD2(v10) > 1 && BYTE6(v10) == 2)
        {
          *(_WORD *)(v9 + WORD2(v10)) = a1;
          WORD2(v10) += 2;
          return sub_10004C8A0(496, v9, BYTE4(v10), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001B4D5C(char a1, char a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v12 = 0;
  v13 = 0;
  result = sub_10004BC7C(&v12);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v13))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6374, "OI_STATUS _BCM_SetWiFi5GTxState(_Bool, uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v10 = WORD2(v13);
      if (WORD1(v13) > WORD2(v13) && BYTE6(v13) == 2)
      {
        ++WORD2(v13);
        *(_BYTE *)(v12 + v10) = a1;
        if (HIBYTE(v13))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6375, "OI_STATUS _BCM_SetWiFi5GTxState(_Bool, uint8_t, BT_VSC_COMPLETE_CB)");
        }
        else
        {
          v11 = WORD2(v13);
          if (WORD1(v13) > WORD2(v13) && BYTE6(v13) == 2)
          {
            ++WORD2(v13);
            *(_BYTE *)(v12 + v11) = a2;
            return sub_10004C8A0(392, v12, BYTE4(v13), a3, (uint64_t)sub_10004AE9C, v7, v8, v9);
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001B4EAC(char a1, __int16 a2, const void *a3, unsigned int a4, uint64_t (*a5)())
{
  uint64_t result;
  uint64_t v11;
  unsigned __int16 v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int16 v18;
  uint64_t v19;
  int v20;
  size_t v21;
  uint64_t v22;
  uint64_t v23;

  v22 = 0;
  v23 = 0;
  result = sub_10004BC7C(&v22);
  if ((_DWORD)result)
    return result;
  if (HIBYTE(v23))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6986, "OI_STATUS _BCM_Load_MSFFile(uint8_t, uint16_t, uint8_t *, uint16_t, BT_VSC_LOAD_MSFFILE_CB)");
    goto LABEL_23;
  }
  v11 = WORD2(v23);
  if (WORD1(v23) <= WORD2(v23) || BYTE6(v23) != 2)
LABEL_23:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  ++WORD2(v23);
  *(_BYTE *)(v22 + v11) = a1;
  if (HIBYTE(v23))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6987, "OI_STATUS _BCM_Load_MSFFile(uint8_t, uint16_t, uint8_t *, uint16_t, BT_VSC_LOAD_MSFFILE_CB)");
    goto LABEL_25;
  }
  if (WORD1(v23) - WORD2(v23) <= 1 || BYTE6(v23) != 2)
LABEL_25:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  *(_WORD *)(v22 + WORD2(v23)) = a2;
  v12 = WORD2(v23) + 2;
  WORD2(v23) += 2;
  v13 = v22;
  if (HIBYTE(v23))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6988, "OI_STATUS _BCM_Load_MSFFile(uint8_t, uint16_t, uint8_t *, uint16_t, BT_VSC_LOAD_MSFFILE_CB)");
    v14 = 0;
  }
  else
  {
    v14 = WORD1(v23) - v12;
  }
  if (v14 < (int)a4 || BYTE6(v23) != 2)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  memmove((void *)(v13 + v12), a3, a4);
  v18 = WORD2(v23) + a4;
  WORD2(v23) += a4;
  if (a4 <= 0xE5)
  {
    v19 = v22;
    if (HIBYTE(v23))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6990, "OI_STATUS _BCM_Load_MSFFile(uint8_t, uint16_t, uint8_t *, uint16_t, BT_VSC_LOAD_MSFFILE_CB)");
      v20 = 0;
    }
    else
    {
      v20 = WORD1(v23) - v18;
    }
    v21 = 230 - a4;
    if (v20 < (int)v21 || BYTE6(v23) != 2)
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    bzero((void *)(v19 + v18), v21);
    LOBYTE(v18) = BYTE4(v23) + v21;
    WORD2(v23) += v21;
  }
  return sub_10004C8A0(407, v22, v18, a5, (uint64_t)sub_1001AA1C8, v15, v16, v17);
}

uint64_t sub_1001B5154(const void *a1, int a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v13 = 0;
  v14 = 0;
  result = sub_10004BC7C(&v13);
  if (!(_DWORD)result)
  {
    v7 = v13;
    v8 = WORD2(v14);
    if (HIBYTE(v14))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7004, "OI_STATUS _BCM_Load_Pwr_RegulatoryFile(uint8_t *, uint16_t, BT_VSC_COMPLETE_CB)");
      v9 = 0;
    }
    else
    {
      v9 = WORD1(v14) - WORD2(v14);
    }
    if (v9 < a2 || BYTE6(v14) != 2)
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    memmove((void *)(v7 + v8), a1, a2);
    WORD2(v14) += a2;
    return sub_10004C8A0(408, v13, BYTE4(v14), a3, (uint64_t)sub_10004AE9C, v10, v11, v12);
  }
  return result;
}

uint64_t sub_1001B5250(__int16 a1, const void *a2, int a3, uint64_t (*a4)())
{
  uint64_t result;
  unsigned __int16 v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v15 = 0;
  v16 = 0;
  result = sub_10004BC7C(&v15);
  if ((_DWORD)result)
    return result;
  if (HIBYTE(v16))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7018, "OI_STATUS _BCM_Load_Pwr_RegulatoryFile_A3(uint16_t, uint8_t *, uint16_t, BT_VSC_COMPLETE_CB)");
    goto LABEL_13;
  }
  if (WORD1(v16) - WORD2(v16) <= 1 || BYTE6(v16) != 2)
LABEL_13:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  *(_WORD *)(v15 + WORD2(v16)) = a1;
  v9 = WORD2(v16) + 2;
  WORD2(v16) += 2;
  v10 = v15;
  if (HIBYTE(v16))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7019, "OI_STATUS _BCM_Load_Pwr_RegulatoryFile_A3(uint16_t, uint8_t *, uint16_t, BT_VSC_COMPLETE_CB)");
    v11 = 0;
  }
  else
  {
    v11 = WORD1(v16) - v9;
  }
  if (v11 < a3 || BYTE6(v16) != 2)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  memmove((void *)(v10 + v9), a2, a3);
  WORD2(v16) += a3;
  return sub_10004C8A0(525, v15, BYTE4(v16), a4, (uint64_t)sub_10004AE9C, v12, v13, v14);
}

uint64_t sub_1001B53E0(uint64_t a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v8 = 0;
  v9 = 0;
  result = sub_10004BC7C(&v8);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v9))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7033, "OI_STATUS _BCM_Write_Bd_Addr(OI_BD_ADDR *, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v9) - WORD2(v9) > 5 && BYTE6(v9) == 2)
    {
      sub_10004C878(v8 + WORD2(v9), a1, 6uLL);
      WORD2(v9) += 6;
      return sub_10004C8A0(1, v8, BYTE4(v9), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001B54C0(__int16 a1, unsigned int a2, char *a3, uint64_t (*a4)())
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int16 v13;
  unsigned __int16 v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;

  v18 = 0;
  v19 = 0;
  result = sub_10004BC7C(&v18);
  if ((_DWORD)result)
    return result;
  if (HIBYTE(v19))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7046, "OI_STATUS _BCM_Enable_Connection_Adv_Indications(uint16_t, uint8_t, uint8_t *, BT_VSC_COMPLETE_CB)");
    goto LABEL_22;
  }
  v12 = WORD2(v19);
  if (WORD1(v19) <= WORD2(v19) || BYTE6(v19) != 2)
LABEL_22:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  ++WORD2(v19);
  *(_BYTE *)(v18 + v12) = 14;
  if (HIBYTE(v19))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7047, "OI_STATUS _BCM_Enable_Connection_Adv_Indications(uint16_t, uint8_t, uint8_t *, BT_VSC_COMPLETE_CB)");
    goto LABEL_24;
  }
  if (WORD1(v19) - WORD2(v19) <= 1 || BYTE6(v19) != 2)
LABEL_24:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  *(_WORD *)(v18 + WORD2(v19)) = a1;
  v13 = WORD2(v19);
  v14 = WORD2(v19) + 2;
  WORD2(v19) += 2;
  if (HIBYTE(v19))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7048, "OI_STATUS _BCM_Enable_Connection_Adv_Indications(uint16_t, uint8_t, uint8_t *, BT_VSC_COMPLETE_CB)");
    goto LABEL_26;
  }
  if (WORD1(v19) <= v14 || BYTE6(v19) != 2)
LABEL_26:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  WORD2(v19) = v13 + 3;
  *(_BYTE *)(v18 + v14) = a2;
  if (a2)
  {
    v15 = a2;
    while (!HIBYTE(v19))
    {
      v16 = WORD2(v19);
      if (WORD1(v19) <= WORD2(v19) || BYTE6(v19) != 2)
        goto LABEL_20;
      v17 = *a3++;
      ++WORD2(v19);
      *(_BYTE *)(v18 + v16) = v17;
      if (!--v15)
        return sub_10004C8A0(291, v18, BYTE4(v19), a4, (uint64_t)sub_10004AE9C, v9, v10, v11);
    }
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7050, "OI_STATUS _BCM_Enable_Connection_Adv_Indications(uint16_t, uint8_t, uint8_t *, BT_VSC_COMPLETE_CB)");
LABEL_20:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return sub_10004C8A0(291, v18, BYTE4(v19), a4, (uint64_t)sub_10004AE9C, v9, v10, v11);
}

uint64_t sub_1001B5738(__int16 a1, char a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  unsigned __int16 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = 0;
  v14 = 0;
  result = sub_10004BC7C(&v13);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v14))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7064, "OI_STATUS _BCM_Configure_Connection_Adv_Indications(uint16_t, uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v10 = WORD2(v14);
      if (WORD1(v14) > WORD2(v14) && BYTE6(v14) == 2)
      {
        ++WORD2(v14);
        *(_BYTE *)(v13 + v10) = 15;
        if (HIBYTE(v14))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7065, "OI_STATUS _BCM_Configure_Connection_Adv_Indications(uint16_t, uint8_t, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v14) - WORD2(v14) > 1 && BYTE6(v14) == 2)
        {
          *(_WORD *)(v13 + WORD2(v14)) = a1;
          v11 = WORD2(v14);
          v12 = WORD2(v14) + 2;
          WORD2(v14) += 2;
          if (HIBYTE(v14))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7066, "OI_STATUS _BCM_Configure_Connection_Adv_Indications(uint16_t, uint8_t, BT_VSC_COMPLETE_CB)");
          }
          else if (WORD1(v14) > v12 && BYTE6(v14) == 2)
          {
            WORD2(v14) = v11 + 3;
            *(_BYTE *)(v13 + v12) = a2;
            return sub_10004C8A0(291, v13, BYTE4(v14), a3, (uint64_t)sub_10004AE9C, v7, v8, v9);
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001B5920(int a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  v10 = 0;
  v11 = 0;
  result = sub_10004BC7C(&v10);
  if ((_DWORD)result)
    return result;
  if (HIBYTE(v11))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7079, "OI_STATUS _BCM_IncomingLEConnectionDenyListEnable(_Bool, BT_VSC_COMPLETE_CB)");
    goto LABEL_11;
  }
  v8 = WORD2(v11);
  if (WORD1(v11) <= WORD2(v11) || BYTE6(v11) != 2)
LABEL_11:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  if (a1)
    v9 = 1;
  else
    v9 = 2;
  ++WORD2(v11);
  *(_BYTE *)(v10 + v8) = v9;
  return sub_10004C8A0(569, v10, BYTE4(v11), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
}

uint64_t sub_1001B59F8(unint64_t a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int16 v10;
  unsigned __int16 v11;
  int v12;
  __int16 v13;
  char v14;
  uint64_t v15;
  uint64_t v16;

  v15 = 0;
  v16 = 0;
  result = sub_10004BC7C(&v15);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v16))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7092, "OI_STATUS _BCM_IncomingLEConnectionDenyListAdd(BTAddress, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v5 = WORD2(v16);
      if (WORD1(v16) > WORD2(v16) && BYTE6(v16) == 2)
      {
        ++WORD2(v16);
        *(_BYTE *)(v15 + v5) = 4;
        v6 = sub_1000746A4(a1);
        v12 = v6;
        v14 = BYTE6(v6);
        v13 = WORD2(v6);
        if (HIBYTE(v16))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7094, "OI_STATUS _BCM_IncomingLEConnectionDenyListAdd(BTAddress, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v16) - WORD2(v16) > 5 && BYTE6(v16) == 2)
        {
          sub_10004C878(v15 + WORD2(v16), (uint64_t)&v12 + 1, 6uLL);
          v10 = WORD2(v16);
          v11 = WORD2(v16) + 6;
          WORD2(v16) += 6;
          if (HIBYTE(v16))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7095, "OI_STATUS _BCM_IncomingLEConnectionDenyListAdd(BTAddress, BT_VSC_COMPLETE_CB)");
          }
          else if (WORD1(v16) > v11 && BYTE6(v16) == 2)
          {
            WORD2(v16) = v10 + 7;
            *(_BYTE *)(v15 + v11) = v12;
            return sub_10004C8A0(569, v15, BYTE4(v16), a2, (uint64_t)sub_10004AE9C, v7, v8, v9);
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001B5BF0(unint64_t a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int16 v10;
  unsigned __int16 v11;
  int v12;
  __int16 v13;
  char v14;
  uint64_t v15;
  uint64_t v16;

  v15 = 0;
  v16 = 0;
  result = sub_10004BC7C(&v15);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v16))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7108, "OI_STATUS _BCM_IncomingLEConnectionDenyListRemove(BTAddress, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v5 = WORD2(v16);
      if (WORD1(v16) > WORD2(v16) && BYTE6(v16) == 2)
      {
        ++WORD2(v16);
        *(_BYTE *)(v15 + v5) = 5;
        v6 = sub_1000746A4(a1);
        v12 = v6;
        v14 = BYTE6(v6);
        v13 = WORD2(v6);
        if (HIBYTE(v16))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7110, "OI_STATUS _BCM_IncomingLEConnectionDenyListRemove(BTAddress, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v16) - WORD2(v16) > 5 && BYTE6(v16) == 2)
        {
          sub_10004C878(v15 + WORD2(v16), (uint64_t)&v12 + 1, 6uLL);
          v10 = WORD2(v16);
          v11 = WORD2(v16) + 6;
          WORD2(v16) += 6;
          if (HIBYTE(v16))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7111, "OI_STATUS _BCM_IncomingLEConnectionDenyListRemove(BTAddress, BT_VSC_COMPLETE_CB)");
          }
          else if (WORD1(v16) > v11 && BYTE6(v16) == 2)
          {
            WORD2(v16) = v10 + 7;
            *(_BYTE *)(v15 + v11) = v12;
            return sub_10004C8A0(569, v15, BYTE4(v16), a2, (uint64_t)sub_10004AE9C, v7, v8, v9);
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001B5DE8(uint64_t (*a1)())
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v7 = 0;
  v8 = 0;
  result = sub_10004BC7C(&v7);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v8))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7124, "OI_STATUS _BCM_IncomingLEConnectionDenyListClear(BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v6 = WORD2(v8);
      if (WORD1(v8) > WORD2(v8) && BYTE6(v8) == 2)
      {
        ++WORD2(v8);
        *(_BYTE *)(v7 + v6) = 3;
        return sub_10004C8A0(569, v7, BYTE4(v8), a1, (uint64_t)sub_10004AE9C, v3, v4, v5);
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001B5EB4(unint64_t a1, int a2, unsigned int a3, const void *a4, uint64_t (*a5)())
{
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  unsigned __int16 v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  __int16 v23;
  char v24;
  uint64_t v25;
  uint64_t v26;

  if (a3 < 0x10)
    return 101;
  v25 = 0;
  v26 = 0;
  result = sub_10004BC7C(&v25);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v26))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7435, "OI_STATUS _BCM_WriteStoredLELTK(BTAddress, _Bool, uint8_t, uint8_t *, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v11 = WORD2(v26);
      if (WORD1(v26) > WORD2(v26) && BYTE6(v26) == 2)
      {
        ++WORD2(v26);
        *(_BYTE *)(v25 + v11) = 8;
        v12 = sub_1000746A4(a1);
        v22 = v12;
        v24 = BYTE6(v12);
        v23 = WORD2(v12);
        if (a2)
          v13 = 2;
        else
          v13 = 0;
        if (a2)
          v14 = 3;
        else
          v14 = 1;
        if ((a1 & 0xFF000000000000) != 0)
          v13 = v14;
        if (HIBYTE(v26))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7443, "OI_STATUS _BCM_WriteStoredLELTK(BTAddress, _Bool, uint8_t, uint8_t *, BT_VSC_COMPLETE_CB)");
        }
        else
        {
          v15 = WORD2(v26);
          if (WORD1(v26) > WORD2(v26) && BYTE6(v26) == 2)
          {
            ++WORD2(v26);
            *(_BYTE *)(v25 + v15) = v13;
            if (HIBYTE(v26))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7444, "OI_STATUS _BCM_WriteStoredLELTK(BTAddress, _Bool, uint8_t, uint8_t *, BT_VSC_COMPLETE_CB)");
            }
            else if (WORD1(v26) - WORD2(v26) > 5 && BYTE6(v26) == 2)
            {
              sub_10004C878(v25 + WORD2(v26), (uint64_t)&v22 + 1, 6uLL);
              v16 = WORD2(v26) + 6;
              WORD2(v26) += 6;
              v17 = v25;
              if (HIBYTE(v26))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7445, "OI_STATUS _BCM_WriteStoredLELTK(BTAddress, _Bool, uint8_t, uint8_t *, BT_VSC_COMPLETE_CB)");
                v18 = 0;
              }
              else
              {
                v18 = WORD1(v26) - v16;
              }
              if (v18 < (int)a3 || BYTE6(v26) != 2)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              memmove((void *)(v17 + v16), a4, a3);
              WORD2(v26) += a3;
              return sub_10004C8A0(291, v25, BYTE4(v26), a5, (uint64_t)sub_10004AE9C, v19, v20, v21);
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001B6184(unint64_t a1, int a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  __int16 v16;
  char v17;
  uint64_t v18;
  uint64_t v19;

  v18 = 0;
  v19 = 0;
  result = sub_10004BC7C(&v18);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v19))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7460, "OI_STATUS _BCM_RemoveStoredLELTK(BTAddress, _Bool, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v7 = WORD2(v19);
      if (WORD1(v19) > WORD2(v19) && BYTE6(v19) == 2)
      {
        ++WORD2(v19);
        *(_BYTE *)(v18 + v7) = 9;
        v8 = sub_1000746A4(a1);
        v15 = v8;
        v17 = BYTE6(v8);
        v16 = WORD2(v8);
        if (a2)
          v9 = 2;
        else
          v9 = 0;
        if (a2)
          v10 = 3;
        else
          v10 = 1;
        if ((a1 & 0xFF000000000000) != 0)
          v9 = v10;
        if (HIBYTE(v19))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7468, "OI_STATUS _BCM_RemoveStoredLELTK(BTAddress, _Bool, BT_VSC_COMPLETE_CB)");
        }
        else
        {
          v11 = WORD2(v19);
          if (WORD1(v19) > WORD2(v19) && BYTE6(v19) == 2)
          {
            ++WORD2(v19);
            *(_BYTE *)(v18 + v11) = v9;
            if (HIBYTE(v19))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7469, "OI_STATUS _BCM_RemoveStoredLELTK(BTAddress, _Bool, BT_VSC_COMPLETE_CB)");
            }
            else if (WORD1(v19) - WORD2(v19) > 5 && BYTE6(v19) == 2)
            {
              sub_10004C878(v18 + WORD2(v19), (uint64_t)&v15 + 1, 6uLL);
              WORD2(v19) += 6;
              return sub_10004C8A0(291, v18, BYTE4(v19), a3, (uint64_t)sub_10004AE9C, v12, v13, v14);
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001B63A4(uint64_t (*a1)())
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v7 = 0;
  v8 = 0;
  result = sub_10004BC7C(&v7);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v8))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7484, "OI_STATUS _BCM_ReadLocalControllerCachedInfo(BT_VSC_READ_LOCAL_CACHED_INFO_CB)");
    }
    else
    {
      v6 = WORD2(v8);
      if (WORD1(v8) > WORD2(v8) && BYTE6(v8) == 2)
      {
        ++WORD2(v8);
        *(_BYTE *)(v7 + v6) = 10;
        return sub_10004C8A0(291, v7, BYTE4(v8), a1, (uint64_t)sub_1001A8C9C, v3, v4, v5);
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001B6470(unint64_t a1, int a2, char a3, int a4, const void *a5, uint64_t (*a6)())
{
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int16 v21;
  unsigned __int16 v22;
  char v23;
  unsigned __int16 v24;
  uint64_t v25;
  int v26;
  int v27;
  __int16 v28;
  char v29;
  uint64_t v30;
  uint64_t v31;

  v30 = 0;
  v31 = 0;
  result = sub_10004BC7C(&v30);
  if ((_DWORD)result)
    return result;
  if (HIBYTE(v31))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7499, "OI_STATUS _BCM_WritePeerCachedInfo(BTAddress, _Bool, uint8_t, uint16_t, uint8_t *, BT_VSC_COMPLETE_CB)");
    goto LABEL_38;
  }
  v13 = WORD2(v31);
  if (WORD1(v31) <= WORD2(v31) || BYTE6(v31) != 2)
LABEL_38:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  ++WORD2(v31);
  *(_BYTE *)(v30 + v13) = 11;
  v14 = sub_1000746A4(a1);
  v27 = v14;
  v29 = BYTE6(v14);
  v28 = WORD2(v14);
  if (a2)
    v15 = 2;
  else
    v15 = 0;
  if (a2)
    v16 = 3;
  else
    v16 = 1;
  if ((a1 & 0xFF000000000000) != 0)
    v15 = v16;
  if (HIBYTE(v31))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7509, "OI_STATUS _BCM_WritePeerCachedInfo(BTAddress, _Bool, uint8_t, uint16_t, uint8_t *, BT_VSC_COMPLETE_CB)");
    goto LABEL_40;
  }
  v17 = WORD2(v31);
  if (WORD1(v31) <= WORD2(v31) || BYTE6(v31) != 2)
LABEL_40:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  ++WORD2(v31);
  *(_BYTE *)(v30 + v17) = v15;
  if (HIBYTE(v31))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7510, "OI_STATUS _BCM_WritePeerCachedInfo(BTAddress, _Bool, uint8_t, uint16_t, uint8_t *, BT_VSC_COMPLETE_CB)");
    goto LABEL_42;
  }
  if (WORD1(v31) - WORD2(v31) <= 5 || BYTE6(v31) != 2)
LABEL_42:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  sub_10004C878(v30 + WORD2(v31), (uint64_t)&v27 + 1, 6uLL);
  v21 = WORD2(v31);
  v22 = WORD2(v31) + 6;
  WORD2(v31) += 6;
  if (HIBYTE(v31))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7511, "OI_STATUS _BCM_WritePeerCachedInfo(BTAddress, _Bool, uint8_t, uint16_t, uint8_t *, BT_VSC_COMPLETE_CB)");
    goto LABEL_44;
  }
  if (WORD1(v31) <= v22 || BYTE6(v31) != 2)
LABEL_44:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  if (a4)
    v23 = a3;
  else
    v23 = 1;
  WORD2(v31) = v21 + 7;
  *(_BYTE *)(v30 + v22) = v23;
  if (HIBYTE(v31))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7512, "OI_STATUS _BCM_WritePeerCachedInfo(BTAddress, _Bool, uint8_t, uint16_t, uint8_t *, BT_VSC_COMPLETE_CB)");
    goto LABEL_46;
  }
  if (WORD1(v31) - WORD2(v31) <= 1 || BYTE6(v31) != 2)
LABEL_46:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  *(_WORD *)(v30 + WORD2(v31)) = a4;
  v24 = WORD2(v31) + 2;
  WORD2(v31) += 2;
  if (a4)
  {
    v25 = v30;
    if (HIBYTE(v31))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7514, "OI_STATUS _BCM_WritePeerCachedInfo(BTAddress, _Bool, uint8_t, uint16_t, uint8_t *, BT_VSC_COMPLETE_CB)");
      v26 = 0;
    }
    else
    {
      v26 = WORD1(v31) - v24;
    }
    if (v26 < a4 || BYTE6(v31) != 2)
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    memmove((void *)(v25 + v24), a5, a4);
    LOBYTE(v24) = BYTE4(v31) + a4;
    WORD2(v31) += a4;
  }
  return sub_10004C8A0(291, v30, v24, a6, (uint64_t)sub_10004AE9C, v18, v19, v20);
}

uint64_t sub_1001B684C(__int16 a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v9 = 0;
  v10 = 0;
  result = sub_10004BC7C(&v9);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v10))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7529, "OI_STATUS _BCM_SetMaxInstantUpdateInfo(uint16_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v8 = WORD2(v10);
      if (WORD1(v10) > WORD2(v10) && BYTE6(v10) == 2)
      {
        ++WORD2(v10);
        *(_BYTE *)(v9 + v8) = 12;
        if (HIBYTE(v10))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7530, "OI_STATUS _BCM_SetMaxInstantUpdateInfo(uint16_t, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v10) - WORD2(v10) > 1 && BYTE6(v10) == 2)
        {
          *(_WORD *)(v9 + WORD2(v10)) = a1;
          WORD2(v10) += 2;
          return sub_10004C8A0(291, v9, BYTE4(v10), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001B69B0(char a1, char a2, char a3, char a4, char a5, uint64_t (*a6)())
{
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v21 = 0;
  v22 = 0;
  result = sub_10004BC7C(&v21);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v22))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7544, "OI_STATUS _BCM_LEAdvTxPowerIncrease(uint8_t, uint8_t, int8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v16 = WORD2(v22);
      if (WORD1(v22) > WORD2(v22) && BYTE6(v22) == 2)
      {
        ++WORD2(v22);
        *(_BYTE *)(v21 + v16) = a1;
        if (HIBYTE(v22))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7545, "OI_STATUS _BCM_LEAdvTxPowerIncrease(uint8_t, uint8_t, int8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
        }
        else
        {
          v17 = WORD2(v22);
          if (WORD1(v22) > WORD2(v22) && BYTE6(v22) == 2)
          {
            ++WORD2(v22);
            *(_BYTE *)(v21 + v17) = a2;
            if (HIBYTE(v22))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7546, "OI_STATUS _BCM_LEAdvTxPowerIncrease(uint8_t, uint8_t, int8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
            }
            else
            {
              v18 = WORD2(v22);
              if (WORD1(v22) > WORD2(v22) && BYTE6(v22) == 2)
              {
                ++WORD2(v22);
                *(_BYTE *)(v21 + v18) = a3;
                if (HIBYTE(v22))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7547, "OI_STATUS _BCM_LEAdvTxPowerIncrease(uint8_t, uint8_t, int8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                }
                else
                {
                  v19 = WORD2(v22);
                  if (WORD1(v22) > WORD2(v22) && BYTE6(v22) == 2)
                  {
                    ++WORD2(v22);
                    *(_BYTE *)(v21 + v19) = a4;
                    if (HIBYTE(v22))
                    {
                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7548, "OI_STATUS _BCM_LEAdvTxPowerIncrease(uint8_t, uint8_t, int8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                    }
                    else
                    {
                      v20 = WORD2(v22);
                      if (WORD1(v22) > WORD2(v22) && BYTE6(v22) == 2)
                      {
                        ++WORD2(v22);
                        *(_BYTE *)(v21 + v20) = a5;
                        return sub_10004C8A0(652, v21, BYTE4(v22), a6, (uint64_t)sub_10004AE9C, v13, v14, v15);
                      }
                    }
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                }
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001B6C7C(unsigned int a1, uint64_t a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  unsigned __int16 v14;
  unsigned __int16 v15;
  unsigned __int16 v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;

  v18 = 0;
  v19 = 0;
  result = sub_10004BC7C(&v18);
  if ((_DWORD)result)
    return result;
  if (HIBYTE(v19))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7562, "OI_STATUS _BCM_AppleLeFeatureVendorList(uint8_t, BT_VSCValidVendorInfo_t *, BT_VSC_COMPLETE_CB)");
    goto LABEL_36;
  }
  v10 = WORD2(v19);
  if (WORD1(v19) <= WORD2(v19) || BYTE6(v19) != 2)
LABEL_36:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  ++WORD2(v19);
  *(_BYTE *)(v18 + v10) = 17;
  if (HIBYTE(v19))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7563, "OI_STATUS _BCM_AppleLeFeatureVendorList(uint8_t, BT_VSCValidVendorInfo_t *, BT_VSC_COMPLETE_CB)");
    goto LABEL_38;
  }
  v11 = WORD2(v19);
  if (WORD1(v19) <= WORD2(v19) || BYTE6(v19) != 2)
LABEL_38:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  ++WORD2(v19);
  *(_BYTE *)(v18 + v11) = a1;
  if (a1)
  {
    v12 = a1;
    v13 = (_BYTE *)(a2 + 4);
    while (!HIBYTE(v19))
    {
      if (WORD1(v19) - WORD2(v19) <= 1 || BYTE6(v19) != 2)
        goto LABEL_28;
      *(_WORD *)(v18 + WORD2(v19)) = *((_WORD *)v13 - 2);
      v14 = WORD2(v19) + 2;
      WORD2(v19) += 2;
      if (HIBYTE(v19))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7567, "OI_STATUS _BCM_AppleLeFeatureVendorList(uint8_t, BT_VSCValidVendorInfo_t *, BT_VSC_COMPLETE_CB)");
LABEL_30:
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      if (WORD1(v19) - v14 <= 1 || BYTE6(v19) != 2)
        goto LABEL_30;
      *(_BYTE *)(v18 + v14) = *(v13 - 2);
      *(_BYTE *)(v18 + WORD2(v19) + 1) = *(v13 - 1);
      v15 = WORD2(v19) + 2;
      WORD2(v19) += 2;
      if (HIBYTE(v19))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7568, "OI_STATUS _BCM_AppleLeFeatureVendorList(uint8_t, BT_VSCValidVendorInfo_t *, BT_VSC_COMPLETE_CB)");
LABEL_32:
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      if (WORD1(v19) - v15 <= 1 || BYTE6(v19) != 2)
        goto LABEL_32;
      *(_BYTE *)(v18 + v15) = *v13;
      *(_BYTE *)(v18 + WORD2(v19) + 1) = v13[1];
      v16 = WORD2(v19) + 2;
      WORD2(v19) += 2;
      if (HIBYTE(v19))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7569, "OI_STATUS _BCM_AppleLeFeatureVendorList(uint8_t, BT_VSCValidVendorInfo_t *, BT_VSC_COMPLETE_CB)");
LABEL_34:
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      if (WORD1(v19) - v16 <= 1 || BYTE6(v19) != 2)
        goto LABEL_34;
      *(_BYTE *)(v18 + v16) = v13[2];
      *(_BYTE *)(v18 + WORD2(v19) + 1) = v13[3];
      v17 = BYTE4(v19) + 2;
      WORD2(v19) += 2;
      v13 += 8;
      if (!--v12)
        return sub_10004C8A0(291, v18, v17, a3, (uint64_t)sub_10004AE9C, v7, v8, v9);
    }
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7566, "OI_STATUS _BCM_AppleLeFeatureVendorList(uint8_t, BT_VSCValidVendorInfo_t *, BT_VSC_COMPLETE_CB)");
LABEL_28:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  v17 = BYTE4(v19);
  return sub_10004C8A0(291, v18, v17, a3, (uint64_t)sub_10004AE9C, v7, v8, v9);
}

void (**sub_1001B7050(void (**result)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8), const void *a2))(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *result = sub_1001B70C4;
  if (a2)
    return (void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))memcpy(&off_1009848F8, a2, 0x1C8uLL);
  return result;
}

void *sub_1001B7074(void *a1)
{
  memcpy(a1, off_10091DD38, 0x8F0uLL);
  sub_10019DCB0(sub_1001A890C);
  return sub_10019F10C(sub_100049E8C);
}

void *sub_1001B70A8(void *__src)
{
  if (__src)
    return memcpy(&unk_100984AC0, __src, 0x1C8uLL);
  return __src;
}

void sub_1001B70C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _BYTE *v8;
  uint64_t v10;
  unsigned __int16 *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  void *v17;
  unsigned __int16 v18;
  uint64_t v19;
  NSObject *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int16 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int16 v31;
  int v32;
  __int128 *v33;
  unsigned int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int16 v38;
  BOOL v39;
  unsigned int v40;
  uint64_t v41;
  unsigned __int16 v42;
  uint64_t v43;
  unsigned __int16 v44;
  uint64_t v45;
  unsigned __int16 v46;
  void *v47;
  unsigned __int16 v48;
  unsigned __int16 v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t);
  uint64_t v53;
  int v54;
  int v55;
  unsigned __int16 v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  int v62;
  uint64_t v63;
  unsigned int v64;
  uint64_t v65;
  int v66;
  NSObject *v67;
  void *v68;
  char v69;
  NSObject *v70;
  _BOOL4 v71;
  void *v72;
  NSObject *v73;
  void *v74;
  NSObject *v75;
  void *v76;
  int v77;
  int v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  unsigned int v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unsigned __int16 v98;
  unsigned __int16 v99;
  uint64_t v100;
  unsigned __int16 v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unsigned __int16 v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  size_t v121;
  void *v122;
  uint64_t v123;
  _BYTE *v124;
  uint64_t v125;
  uint64_t v126;
  int v127;
  char *v128;
  _BYTE *v129;
  char v130;
  int v131;
  int v132;
  uint64_t v133;
  void (*v134)(size_t *);
  uint64_t v135;
  unsigned int v136;
  unsigned __int16 v137;
  unsigned __int16 v138;
  unsigned int v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  int v143;
  int v144;
  uint64_t v145;
  uint64_t v146;
  __int16 v147;
  void (*v148)(uint64_t, uint64_t);
  unint64_t v149;
  NSObject *v150;
  int v151;
  int v152;
  uint64_t v153;
  void (*v154)(_QWORD);
  uint64_t v155;
  uint64_t v156;
  int v157;
  int v158;
  unsigned __int8 v159;
  void (*v160)(uint64_t);
  __int16 v161;
  int v162;
  int v163;
  __int128 *v164;
  int v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  unsigned __int16 v170;
  __int128 *v171;
  unsigned __int8 v172;
  BOOL v174;
  uint64_t v175;
  uint64_t v176;
  int v177;
  void *v178;
  uint64_t v179;
  unsigned __int16 v180;
  unsigned __int16 v181;
  uint64_t v182;
  size_t *v183;
  uint64_t v184;
  int v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  unsigned __int8 v189;
  int v190;
  unsigned __int8 v191;
  __int16 v192;
  uint64_t v193;
  unsigned __int16 v194;
  uint64_t v195;
  _BOOL4 v196;
  unint64_t v197;
  __int16 v198;
  uint64_t v199;
  unsigned __int16 v200;
  unsigned __int16 v201;
  unsigned __int16 v202;
  unsigned __int16 v203;
  unsigned __int8 *v204;
  int v205;
  int v206;
  uint64_t v207;
  unsigned int v208;
  unsigned int v209;
  int v210;
  uint64_t v211;
  unsigned __int8 *v212;
  int v213;
  int v214;
  NSObject *v215;
  NSObject *v216;
  uint64_t v217;
  uint64_t v218;
  unsigned int v219;
  unsigned int v220;
  unsigned int v221;
  unsigned int v222;
  uint64_t v223;
  uint64_t v224;
  unsigned __int16 v225;
  int v226;
  unsigned __int16 v227;
  uint64_t v228;
  uint64_t v229;
  unsigned __int16 v230;
  unsigned __int16 v231;
  uint64_t v232;
  unint64_t v233;
  unsigned __int16 v234;
  unsigned __int16 v235;
  NSObject *v236;
  unsigned __int16 v237;
  uint64_t v238;
  unint64_t v239;
  _BOOL4 v240;
  uint64_t v241;
  unint64_t v242;
  void *v243;
  void *v244;
  int v245;
  uint64_t v246;
  unsigned __int16 v247;
  uint64_t v248;
  unsigned __int16 v249;
  uint64_t v250;
  uint64_t v251;
  unsigned __int16 v252;
  uint64_t v253;
  uint64_t v254;
  unsigned __int16 v255;
  int v256;
  uint64_t v257;
  int v258;
  NSObject *v259;
  uint64_t v260;
  uint64_t v261;
  unsigned __int16 v262;
  unsigned __int8 *v263;
  int v264;
  int v265;
  void (*v266)(size_t *);
  int v267;
  int v268;
  unsigned int v269;
  unsigned int v270;
  unsigned int v271;
  uint64_t v272;
  uint64_t v273;
  unsigned __int16 v274;
  uint64_t v275;
  int v276;
  int v277;
  int v278;
  int v279;
  _BYTE *v280;
  uint64_t v281;
  uint64_t v282;
  int v283;
  int v284;
  int v285;
  int v286;
  int v287;
  int v288;
  uint64_t v289;
  uint64_t v290;
  int v291;
  unsigned __int16 v292;
  int v293;
  uint64_t v294;
  uint64_t v295;
  int v296;
  int v297;
  int v298;
  int v299;
  int v300;
  NSObject *v301;
  NSObject *v302;
  NSObject *v303;
  uint64_t v304;
  int v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  unsigned __int16 v312;
  uint64_t v313;
  unsigned __int16 v314;
  uint64_t v315;
  int v316;
  int v317;
  int v318;
  int v319;
  int v320;
  int v321;
  _BYTE *v322;
  int v323;
  unsigned __int16 v324;
  unsigned __int16 v325;
  unsigned int v326;
  _BOOL4 v327;
  _DWORD v328[2];
  _DWORD v329[2];
  _DWORD v330[2];
  uint8_t buf[16];
  __int128 v332;
  __int128 v333;
  __int128 v334;
  __int128 v335;
  size_t size[2];
  void *ptr[4];
  __int128 v338;
  __int128 v339;
  __int128 v340;
  __int128 v341;
  __int128 v342;
  __int128 v343;
  __int128 v344;
  __int128 v345;
  __int128 v346;
  __int128 v347;
  __int128 v348;
  _DWORD v349[8];
  int v350;

  v8 = (_BYTE *)(a1 + 15);
  if (*(_BYTE *)(a1 + 15))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1360, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
    goto LABEL_778;
  }
  v11 = (unsigned __int16 *)(a1 + 12);
  v10 = *(unsigned __int16 *)(a1 + 12);
  v12 = *(unsigned __int16 *)(a1 + 10);
  if (v12 <= v10 || *(_BYTE *)(a1 + 14) != 1)
LABEL_778:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v13 = a2;
  v14 = *(_QWORD *)a1;
  v15 = v10 + 1;
  *(_WORD *)(a1 + 12) = v10 + 1;
  v16 = *(unsigned __int8 *)(v14 + v10);
  if (v16 <= 0xB4)
  {
    if (*(unsigned __int8 *)(v14 + v10) > 0x85u)
    {
      switch(*(_BYTE *)(v14 + v10))
      {
        case 0x86:
          v348 = 0u;
          memset(v349, 0, 27);
          v346 = 0u;
          v347 = 0u;
          v344 = 0u;
          v345 = 0u;
          v342 = 0u;
          v343 = 0u;
          v340 = 0u;
          v341 = 0u;
          v338 = 0u;
          v339 = 0u;
          *(_OWORD *)size = 0u;
          memset(ptr, 0, sizeof(ptr));
          if (*v8)
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1680, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
          }
          else if ((int)(v12 - (unsigned __int16)v15) > 1)
          {
            *v11 = v10 + 3;
            __strlcpy_chk(size, v14 + (unsigned __int16)(v10 + 3), v12 - (unsigned __int16)(v10 + 3), 251);
            if (sub_10005549C())
            {
              sub_100054530("controller debug - %s", (const char *)size);
              v20 = sub_1000544A0(0x54u);
              if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)buf = 136446210;
                *(_QWORD *)&buf[4] = sub_100054494();
                _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
              }
            }
            goto LABEL_760;
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        case 0x87:
        case 0x89:
        case 0x8A:
        case 0x8B:
        case 0x8D:
        case 0x90:
        case 0x91:
        case 0x92:
        case 0x93:
        case 0x94:
        case 0x95:
        case 0x96:
        case 0x97:
        case 0x98:
        case 0x9C:
        case 0xA0:
        case 0xA1:
          goto LABEL_760;
        case 0x88:
          if (!off_100984960)
            goto LABEL_760;
          if (*v8)
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1568, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
            v192 = ((uint64_t (*)(_QWORD, _QWORD))off_100984960)(*(_QWORD *)a1 + *(unsigned __int16 *)(a1 + 12), 0);
          }
          else
          {
            v192 = ((uint64_t (*)(uint64_t, _QWORD))off_100984960)(v14 + (unsigned __int16)v15, (v12 - v15));
          }
          v235 = *v11 + v192;
          *v11 = v235;
          if (*v8)
          {
            v226 = 1572;
            goto LABEL_502;
          }
          if (*(unsigned __int16 *)(a1 + 10) != v235)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          return;
        case 0x8C:
          if (!off_100984A88)
            goto LABEL_760;
          v338 = 0u;
          v339 = 0u;
          *(_OWORD *)size = 0u;
          memset(ptr, 0, sizeof(ptr));
          if (*v8)
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2160, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
          }
          else if (v12 > (unsigned __int16)v15)
          {
            *v11 = v10 + 2;
            if ((int)v12 - ((int)v10 + 2) > 1)
            {
              v193 = *(unsigned __int8 *)(v14 + v15);
              v194 = *(_WORD *)(v14 + v10 + 2);
              *v11 = v10 + 4;
              v325 = v194;
              if (v12 <= (unsigned __int16)(v10 + 4))
              {
                *v8 = 1;
                memset(v330, 0, 7);
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2166, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
              }
              else
              {
                *v11 = v10 + 5;
                memset(v330, 0, 7);
                if (v12 > (unsigned __int16)(v10 + 5))
                {
                  *v11 = v10 + 6;
                  LOBYTE(v330[0]) = *(_BYTE *)(v14 + (unsigned __int16)(v10 + 5));
                  v195 = LOBYTE(v330[0]);
                  v196 = (v330[0] & 0xFE) == 2;
                  if (LOBYTE(v330[0]) == 3)
                  {
                    v195 = 1;
                    LOBYTE(v330[0]) = 1;
                  }
                  else if (LOBYTE(v330[0]) == 2)
                  {
                    v195 = 0;
                    LOBYTE(v330[0]) = 0;
                  }
                  if (*(_BYTE *)(a1 + 14) == 1)
                  {
                    v304 = *(unsigned __int16 *)(a1 + 12);
                    v327 = v196;
                    if (*(unsigned __int16 *)(a1 + 10) - (int)v304 >= 6)
                    {
                      sub_10004C878((uint64_t)v330 + 1, *(_QWORD *)a1 + v304, 6uLL);
                      *(_WORD *)(a1 + 12) += 6;
                      v224 = BYTE1(v330[0]);
                      v223 = BYTE2(v330[0]);
                      v222 = HIBYTE(v330[0]);
                      v221 = LOBYTE(v330[1]);
                      v220 = BYTE1(v330[1]);
                      v219 = BYTE2(v330[1]);
                      v195 = LOBYTE(v330[0]);
LABEL_467:
                      *(_DWORD *)((char *)v329 + 3) = 0;
                      v329[0] = 0;
                      if (*(_BYTE *)(a1 + 14) != 1)
                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      if (*v8)
                      {
                        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2185, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                      }
                      else
                      {
                        v238 = *(unsigned __int16 *)(a1 + 12);
                        if (*(unsigned __int16 *)(a1 + 10) - (int)v238 >= 6)
                        {
                          sub_10004C878((uint64_t)v329 + 1, *(_QWORD *)a1 + v238, 6uLL);
                          *(_WORD *)(a1 + 12) += 6;
                          goto LABEL_510;
                        }
                      }
                      *v8 = 1;
LABEL_510:
                      LOBYTE(v329[0]) = 1;
                      ptr[1] = (void *)(((unint64_t)BYTE2(v329[0]) << 32) | ((unint64_t)BYTE1(v329[0]) << 40) | ((unint64_t)HIBYTE(v329[0]) << 24) | ((unint64_t)LOBYTE(v329[1]) << 16) | ((unint64_t)BYTE1(v329[1]) << 8) | BYTE2(v329[1]) | 0x1000000000000);
                      *(_DWORD *)((char *)v328 + 3) = 0;
                      v328[0] = 0;
                      if (*(_BYTE *)(a1 + 14) != 1)
                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      v239 = (v224 << 40) | (v223 << 32) | ((unint64_t)v222 << 24) | ((unint64_t)v221 << 16) | ((unint64_t)v220 << 8) | v219 | (v195 << 48);
                      if (*v8)
                      {
                        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2190, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                        v240 = v327;
                      }
                      else
                      {
                        v241 = *(unsigned __int16 *)(a1 + 12);
                        v240 = v327;
                        if (*(unsigned __int16 *)(a1 + 10) - (int)v241 >= 6)
                        {
                          sub_10004C878((uint64_t)v328 + 1, *(_QWORD *)a1 + v241, 6uLL);
                          *(_WORD *)(a1 + 12) += 6;
                          goto LABEL_516;
                        }
                      }
                      *v8 = 1;
LABEL_516:
                      v242 = (unint64_t)BYTE2(v328[0]) << 32;
                      v243 = (void *)(v242 | ((unint64_t)BYTE1(v328[0]) << 40) | ((unint64_t)HIBYTE(v328[0]) << 24) | ((unint64_t)LOBYTE(v328[1]) << 16) | ((unint64_t)BYTE1(v328[1]) << 8) | BYTE2(v328[1]) | 0x1000000000000);
                      if (v240)
                        v244 = (void *)(v242 | ((unint64_t)BYTE1(v328[0]) << 40) | ((unint64_t)HIBYTE(v328[0]) << 24) | ((unint64_t)LOBYTE(v328[1]) << 16) | ((unint64_t)BYTE1(v328[1]) << 8) | BYTE2(v328[1]) | 0x1000000000000);
                      else
                        v244 = (void *)v239;
                      if (!v240)
                        v243 = 0;
                      ptr[0] = v244;
                      ptr[2] = v243;
                      if (*(_BYTE *)(a1 + 14) != 1)
                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      if (*v8)
                      {
                        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2196, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                        v245 = *(unsigned __int8 *)(a1 + 14);
                        *(_BYTE *)(a1 + 15) = 1;
                        if (v245 != 1)
                          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }
                      else
                      {
                        v246 = *(unsigned __int16 *)(a1 + 12);
                        if (*(unsigned __int16 *)(a1 + 10) - (int)v246 > 1)
                        {
                          LOWORD(ptr[3]) = *(_WORD *)(*(_QWORD *)a1 + v246);
                          *(_WORD *)(a1 + 12) = v246 + 2;
                          if (*(unsigned __int16 *)(a1 + 10) - (unsigned __int16)(v246 + 2) > 1)
                          {
                            WORD1(ptr[3]) = *(_WORD *)(*(_QWORD *)a1 + (unsigned __int16)(v246 + 2));
                            *(_WORD *)(a1 + 12) = v246 + 4;
                            if (*(unsigned __int16 *)(a1 + 10) - (unsigned __int16)(v246 + 4) > 1)
                            {
                              WORD2(ptr[3]) = *(_WORD *)(*(_QWORD *)a1 + (unsigned __int16)(v246 + 4));
                              v247 = v246 + 6;
                              *(_WORD *)(a1 + 12) = v246 + 6;
                              if (*(unsigned __int16 *)(a1 + 10) > (unsigned __int16)(v246 + 6))
                              {
                                v248 = *(_QWORD *)a1;
                                v249 = v246 + 7;
                                *(_WORD *)(a1 + 12) = v249;
                                BYTE6(ptr[3]) = *(_BYTE *)(v248 + v247);
                                if (*(unsigned __int16 *)(a1 + 10) > v249)
                                {
                                  v250 = v249;
                                  v251 = *(_QWORD *)a1;
                                  v252 = v249 + 1;
                                  *(_WORD *)(a1 + 12) = v252;
                                  HIBYTE(ptr[3]) = *(_BYTE *)(v251 + v250);
                                  if (*(unsigned __int16 *)(a1 + 10) - v252 > 1)
                                  {
                                    v253 = v252;
                                    v254 = *(_QWORD *)a1;
                                    LOWORD(v338) = *(_WORD *)(*(_QWORD *)a1 + v253);
                                    *(_WORD *)(a1 + 12) = v253 + 2;
                                    if (*(unsigned __int16 *)(a1 + 10) - (unsigned __int16)(v253 + 2) > 1)
                                    {
                                      WORD1(v338) = *(_WORD *)(v254 + (unsigned __int16)(v253 + 2));
                                      v255 = v253 + 4;
                                      *(_WORD *)(a1 + 12) = v255;
                                      v256 = 8;
                                      BYTE12(v338) = 8;
                                      v257 = v254 + v255;
                                      v258 = *(unsigned __int16 *)(a1 + 10) - v255;
                                      goto LABEL_689;
                                    }
                                    *v8 = 1;
                                    BYTE12(v338) = 8;
                                    v257 = v254 + (unsigned __int16)(v253 + 2);
LABEL_688:
                                    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2206, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                                    v258 = 0;
                                    v256 = BYTE12(v338);
LABEL_689:
                                    if (v258 >= v256)
                                    {
                                      __memmove_chk((char *)&v338 + 4, v257, v256, 28);
                                      v292 = *(_WORD *)(a1 + 12) + BYTE12(v338);
                                      *(_WORD *)(a1 + 12) = v292;
                                      if (*(_BYTE *)(a1 + 14) != 1)
                                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_bas"
                                                               "e/Stack/vsc/bcm/bcm_vsc.c");
                                      if (*v8)
                                      {
                                        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2208, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                                        v293 = *(unsigned __int8 *)(a1 + 14);
                                        *(_BYTE *)(a1 + 15) = 1;
                                        if (v293 != 1)
                                          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_b"
                                                                 "ase/Stack/vsc/bcm/bcm_vsc.c");
                                      }
                                      else
                                      {
                                        if (*(unsigned __int16 *)(a1 + 10) > v292)
                                        {
                                          v294 = *(_QWORD *)a1;
                                          *(_WORD *)(a1 + 12) = v292 + 1;
                                          BYTE13(v338) = *(_BYTE *)(v294 + v292);
                                          if (*(unsigned __int16 *)(a1 + 10) > (unsigned __int16)(v292 + 1))
                                          {
                                            v295 = *(_QWORD *)a1;
                                            *(_WORD *)(a1 + 12) = v292 + 2;
                                            BYTE14(v338) = *(_BYTE *)(v295 + (unsigned __int16)(v292 + 1));
                                            if (*(unsigned __int16 *)(a1 + 10) - (unsigned __int16)(v292 + 2) > 1)
                                            {
                                              LOWORD(v339) = *(_WORD *)(*(_QWORD *)a1 + (unsigned __int16)(v292 + 2));
                                              *(_WORD *)(a1 + 12) = v292 + 4;
                                              if (*(unsigned __int16 *)(a1 + 10) - (unsigned __int16)(v292 + 4) > 1)
                                              {
                                                WORD1(v339) = *(_WORD *)(*(_QWORD *)a1 + (unsigned __int16)(v292 + 4));
                                                *(_WORD *)(a1 + 12) = v292 + 6;
                                                if (*(unsigned __int16 *)(a1 + 10) - (unsigned __int16)(v292 + 6) > 1)
                                                {
                                                  WORD2(v339) = *(_WORD *)(*(_QWORD *)a1 + (unsigned __int16)(v292 + 6));
                                                  *(_WORD *)(a1 + 12) = v292 + 8;
                                                  if (*(unsigned __int16 *)(a1 + 10) - (unsigned __int16)(v292 + 8) > 1)
                                                  {
                                                    WORD3(v339) = *(_WORD *)(*(_QWORD *)a1 + (unsigned __int16)(v292 + 8));
                                                    *(_WORD *)(a1 + 12) = v292 + 10;
                                                    if (*(unsigned __int16 *)(a1 + 10) - (unsigned __int16)(v292 + 10) >= 2)
                                                    {
                                                      WORD4(v339) = *(_WORD *)(*(_QWORD *)a1
                                                                             + (unsigned __int16)(v292 + 10));
                                                      *(_WORD *)(a1 + 12) = v292 + 12;
LABEL_710:
                                                      size[0] = (size_t)sub_10019ACEC(v325);
                                                      v333 = *(_OWORD *)&ptr[2];
                                                      v334 = v338;
                                                      v335 = v339;
                                                      *(_OWORD *)buf = *(_OWORD *)size;
                                                      v332 = *(_OWORD *)ptr;
                                                      off_100984A88(v193, buf);
                                                      goto LABEL_760;
                                                    }
LABEL_709:
                                                    *v8 = 1;
                                                    goto LABEL_710;
                                                  }
                                                  *v8 = 1;
LABEL_708:
                                                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2214, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                                                  goto LABEL_709;
                                                }
                                                *v8 = 1;
LABEL_707:
                                                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2213, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                                                v300 = *(unsigned __int8 *)(a1 + 14);
                                                *(_BYTE *)(a1 + 15) = 1;
                                                if (v300 != 1)
                                                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBlu"
                                                                         "etooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                goto LABEL_708;
                                              }
                                              *v8 = 1;
LABEL_706:
                                              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2212, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                                              v299 = *(unsigned __int8 *)(a1 + 14);
                                              *(_BYTE *)(a1 + 15) = 1;
                                              if (v299 != 1)
                                                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluet"
                                                                       "ooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                              goto LABEL_707;
                                            }
                                            *v8 = 1;
LABEL_705:
                                            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2211, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                                            v298 = *(unsigned __int8 *)(a1 + 14);
                                            *(_BYTE *)(a1 + 15) = 1;
                                            if (v298 != 1)
                                              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetoo"
                                                                     "th_base/Stack/vsc/bcm/bcm_vsc.c");
                                            goto LABEL_706;
                                          }
                                          *v8 = 1;
LABEL_704:
                                          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2210, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                                          v297 = *(unsigned __int8 *)(a1 + 14);
                                          *(_BYTE *)(a1 + 15) = 1;
                                          if (v297 != 1)
                                            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth"
                                                                   "_base/Stack/vsc/bcm/bcm_vsc.c");
                                          goto LABEL_705;
                                        }
                                        *v8 = 1;
                                      }
                                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2209, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                                      v296 = *(unsigned __int8 *)(a1 + 14);
                                      *(_BYTE *)(a1 + 15) = 1;
                                      if (v296 != 1)
                                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_bas"
                                                               "e/Stack/vsc/bcm/bcm_vsc.c");
                                      goto LABEL_704;
                                    }
LABEL_919:
                                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/St"
                                                           "ack/vsc/bcm/bcm_vsc.c");
                                  }
                                  *v8 = 1;
LABEL_686:
                                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2203, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                                  v289 = *(_QWORD *)a1;
                                  v290 = *(unsigned __int16 *)(a1 + 12);
                                  v291 = *(unsigned __int8 *)(a1 + 14);
                                  *(_BYTE *)(a1 + 15) = 1;
                                  BYTE12(v338) = 8;
                                  if (v291 != 1)
                                    goto LABEL_919;
                                  v257 = v289 + v290;
                                  goto LABEL_688;
                                }
                                *v8 = 1;
LABEL_685:
                                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2202, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                                v288 = *(unsigned __int8 *)(a1 + 14);
                                *(_BYTE *)(a1 + 15) = 1;
                                if (v288 != 1)
                                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stac"
                                                         "k/vsc/bcm/bcm_vsc.c");
                                goto LABEL_686;
                              }
                              *v8 = 1;
LABEL_684:
                              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2201, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                              v287 = *(unsigned __int8 *)(a1 + 14);
                              *(_BYTE *)(a1 + 15) = 1;
                              if (v287 != 1)
                                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/bcm/bcm_vsc.c");
                              goto LABEL_685;
                            }
                            *v8 = 1;
LABEL_683:
                            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2199, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                            v286 = *(unsigned __int8 *)(a1 + 14);
                            *(_BYTE *)(a1 + 15) = 1;
                            if (v286 != 1)
                              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                            goto LABEL_684;
                          }
                          *v8 = 1;
LABEL_682:
                          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2198, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                          v285 = *(unsigned __int8 *)(a1 + 14);
                          *(_BYTE *)(a1 + 15) = 1;
                          if (v285 != 1)
                            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                          goto LABEL_683;
                        }
                        *v8 = 1;
                      }
                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2197, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                      v284 = *(unsigned __int8 *)(a1 + 14);
                      *(_BYTE *)(a1 + 15) = 1;
                      if (v284 != 1)
                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      goto LABEL_682;
                    }
LABEL_466:
                    v219 = 0;
                    v220 = 0;
                    v221 = 0;
                    v222 = 0;
                    v223 = 0;
                    v224 = 0;
                    *v8 = 1;
                    goto LABEL_467;
                  }
                  goto LABEL_918;
                }
              }
              *(_BYTE *)(a1 + 15) = 1;
              if (*(_BYTE *)(a1 + 14) == 1)
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2181, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                v327 = 0;
                v195 = 0;
                goto LABEL_466;
              }
LABEL_918:
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
LABEL_910:
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          *v8 = 1;
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2162, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
          goto LABEL_910;
        case 0x8E:
          if (!off_100984978)
            goto LABEL_760;
          if (*v8)
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1692, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
            v197 = 0;
          }
          else
          {
            v197 = v12 - (unsigned __int16)v15;
          }
          if (v197 > 0xCD || v197 == 39)
          {
            off_100984978(*(_QWORD *)a1 + *(unsigned __int16 *)(a1 + 12), v13);
            goto LABEL_760;
          }
          if (sub_10005549C())
          {
            sub_100054530("BT_VSE_PHY_STATISTIC - Invalid data size %lu", v197);
            v236 = sub_1000544A0(0x54u);
            if (os_log_type_enabled(v236, OS_LOG_TYPE_ERROR))
              goto LABEL_722;
          }
          goto LABEL_760;
        case 0x8F:
          if (!off_100984968)
            goto LABEL_760;
          if (*v8)
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1582, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
            v198 = ((uint64_t (*)(_QWORD, _QWORD))off_100984968)(*(_QWORD *)a1 + *(unsigned __int16 *)(a1 + 12), 0);
          }
          else
          {
            v198 = ((uint64_t (*)(uint64_t, _QWORD))off_100984968)(v14 + (unsigned __int16)v15, (v12 - v15));
          }
          v237 = *v11 + v198;
          *v11 = v237;
          if (*v8)
          {
            v226 = 1586;
            goto LABEL_502;
          }
          if (*(unsigned __int16 *)(a1 + 10) != v237)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          return;
        case 0x99:
          v148 = (void (*)(uint64_t, uint64_t))qword_100984A08;
          if (!qword_100984A08)
            goto LABEL_760;
          if (*v8)
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1895, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
            v159 = 0;
            v14 = *(_QWORD *)a1;
            LOWORD(v15) = *(_WORD *)(a1 + 12);
            v148 = (void (*)(uint64_t, uint64_t))qword_100984A08;
          }
          else
          {
LABEL_451:
            v159 = v12 - v15;
          }
LABEL_452:
          v175 = v14 + (unsigned __int16)v15;
          a2 = v159;
          goto LABEL_462;
        case 0x9A:
          v160 = (void (*)(uint64_t))qword_100984A28;
          if (qword_100984A28)
            goto LABEL_397;
          goto LABEL_760;
        case 0x9B:
          v160 = (void (*)(uint64_t))qword_100984A10;
          if (!qword_100984A10)
            goto LABEL_760;
LABEL_397:
          v199 = v14 + (unsigned __int16)v15;
LABEL_398:
          v160(v199);
          goto LABEL_760;
        case 0x9D:
          v148 = (void (*)(uint64_t, uint64_t))qword_100984988;
          if (!qword_100984988)
            goto LABEL_760;
          v175 = v14 + (unsigned __int16)v15;
          goto LABEL_462;
        case 0x9E:
          if (v12 <= (unsigned __int16)v15)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v176 = v10 + 2;
          *v11 = v10 + 2;
          switch(*(_BYTE *)(v14 + v15))
          {
            case 0:
              if (!qword_100984A58)
                goto LABEL_760;
              size[0] = 0;
              size[1] = 0;
              LOWORD(ptr[0]) = 0;
              if (*(_BYTE *)(a1 + 14) != 1)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              if (*v8)
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1969, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                v177 = *(unsigned __int8 *)(a1 + 14);
                *(_BYTE *)(a1 + 15) = 1;
                if (v177 != 1)
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                goto LABEL_734;
              }
              if ((int)v12 - (int)v176 <= 1)
              {
                *v8 = 1;
LABEL_734:
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1970, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                goto LABEL_735;
              }
              LOWORD(size[0]) = *(_WORD *)(*(_QWORD *)a1 + v176);
              *(_WORD *)(a1 + 12) = v10 + 4;
              if (*(unsigned __int16 *)(a1 + 10) - (unsigned __int16)(v10 + 4) >= 6)
              {
                sub_10004C878((uint64_t)size + 2, *(_QWORD *)a1 + (unsigned __int16)(v10 + 4), 6uLL);
                *(_WORD *)(a1 + 12) += 6;
                goto LABEL_736;
              }
LABEL_735:
              *v8 = 1;
LABEL_736:
              if (*(_BYTE *)(a1 + 14) != 1)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              if (*v8)
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1971, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                v305 = *(unsigned __int8 *)(a1 + 14);
                *(_BYTE *)(a1 + 15) = 1;
                if (v305 != 1)
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              else
              {
                v306 = *(unsigned __int16 *)(a1 + 12);
                if (*(unsigned __int16 *)(a1 + 10) > v306)
                {
                  v307 = *(_QWORD *)a1;
                  *(_WORD *)(a1 + 12) = v306 + 1;
                  LOBYTE(size[1]) = *(_BYTE *)(v307 + v306);
                  if (*(unsigned __int16 *)(a1 + 10) > (unsigned __int16)(v306 + 1))
                  {
                    v308 = *(_QWORD *)a1;
                    *(_WORD *)(a1 + 12) = v306 + 2;
                    BYTE1(size[1]) = *(_BYTE *)(v308 + (unsigned __int16)(v306 + 1));
                    if (*(unsigned __int16 *)(a1 + 10) > (unsigned __int16)(v306 + 2))
                    {
                      v309 = *(_QWORD *)a1;
                      *(_WORD *)(a1 + 12) = v306 + 3;
                      BYTE2(size[1]) = *(_BYTE *)(v309 + (unsigned __int16)(v306 + 2));
                      if (*(unsigned __int16 *)(a1 + 10) > (unsigned __int16)(v306 + 3))
                      {
                        v310 = *(_QWORD *)a1;
                        *(_WORD *)(a1 + 12) = v306 + 4;
                        BYTE3(size[1]) = *(_BYTE *)(v310 + (unsigned __int16)(v306 + 3));
                        if (*(unsigned __int16 *)(a1 + 10) - (unsigned __int16)(v306 + 4) > 1)
                        {
                          v311 = (unsigned __int16)(v306 + 4);
                          WORD2(size[1]) = *(_WORD *)(*(_QWORD *)a1 + v311);
                          *(_WORD *)(a1 + 12) = v306 + 6;
                          if (*(unsigned __int16 *)(a1 + 10) - (unsigned __int16)(v306 + 6) > 1)
                          {
                            HIWORD(size[1]) = *(_WORD *)(*(_QWORD *)a1 + (unsigned __int16)(v306 + 6));
                            v312 = v306 + 8;
                            *(_WORD *)(a1 + 12) = v311 + 4;
                            if (*(unsigned __int16 *)(a1 + 10) > (unsigned __int16)(v311 + 4))
                            {
                              v313 = *(_QWORD *)a1;
                              v314 = v311 + 5;
                              *(_WORD *)(a1 + 12) = v314;
                              LOBYTE(ptr[0]) = *(_BYTE *)(v313 + v312);
                              if (*(unsigned __int16 *)(a1 + 10) > v314)
                              {
                                v315 = *(_QWORD *)a1;
                                *(_WORD *)(a1 + 12) = v314 + 1;
                                BYTE1(ptr[0]) = *(_BYTE *)(v315 + v314);
LABEL_758:
                                v266 = (void (*)(size_t *))qword_100984A58;
                                goto LABEL_759;
                              }
LABEL_757:
                              *v8 = 1;
                              goto LABEL_758;
                            }
                            *v8 = 1;
LABEL_756:
                            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1978, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                            goto LABEL_757;
                          }
                          *v8 = 1;
LABEL_755:
                          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1977, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                          v321 = *(unsigned __int8 *)(a1 + 14);
                          *(_BYTE *)(a1 + 15) = 1;
                          if (v321 != 1)
                            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                          goto LABEL_756;
                        }
                        *v8 = 1;
LABEL_754:
                        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1976, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                        v320 = *(unsigned __int8 *)(a1 + 14);
                        *(_BYTE *)(a1 + 15) = 1;
                        if (v320 != 1)
                          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                        goto LABEL_755;
                      }
                      *v8 = 1;
LABEL_753:
                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1975, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                      v319 = *(unsigned __int8 *)(a1 + 14);
                      *(_BYTE *)(a1 + 15) = 1;
                      if (v319 != 1)
                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      goto LABEL_754;
                    }
                    *v8 = 1;
LABEL_752:
                    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1974, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                    v318 = *(unsigned __int8 *)(a1 + 14);
                    *(_BYTE *)(a1 + 15) = 1;
                    if (v318 != 1)
                      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                    goto LABEL_753;
                  }
                  *v8 = 1;
LABEL_751:
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1973, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                  v317 = *(unsigned __int8 *)(a1 + 14);
                  *(_BYTE *)(a1 + 15) = 1;
                  if (v317 != 1)
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  goto LABEL_752;
                }
                *v8 = 1;
              }
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1972, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
              v316 = *(unsigned __int8 *)(a1 + 14);
              *(_BYTE *)(a1 + 15) = 1;
              if (v316 != 1)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              goto LABEL_751;
            case 1:
              v266 = (void (*)(size_t *))off_100984A60;
              if (!off_100984A60)
                goto LABEL_760;
              v350 = 0;
              memset(v349, 0, sizeof(v349));
              v347 = 0u;
              v348 = 0u;
              v345 = 0u;
              v346 = 0u;
              v343 = 0u;
              v344 = 0u;
              v341 = 0u;
              v342 = 0u;
              v339 = 0u;
              v340 = 0u;
              v338 = 0u;
              *(_OWORD *)size = 0u;
              memset(ptr, 0, sizeof(ptr));
              if ((int)(v12 - (unsigned __int16)v176) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              LODWORD(size[0]) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 2));
              *v11 = v10 + 6;
              if ((int)(v12 - (unsigned __int16)(v10 + 6)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              HIDWORD(size[0]) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 6));
              *v11 = v10 + 10;
              if ((int)(v12 - (unsigned __int16)(v10 + 10)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              LODWORD(size[1]) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 10));
              *v11 = v10 + 14;
              if ((int)(v12 - (unsigned __int16)(v10 + 14)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              HIDWORD(size[1]) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 14));
              *v11 = v10 + 18;
              if ((int)(v12 - (unsigned __int16)(v10 + 18)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              LODWORD(ptr[0]) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 18));
              *v11 = v10 + 22;
              if ((int)(v12 - (unsigned __int16)(v10 + 22)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              HIDWORD(ptr[0]) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 22));
              *v11 = v10 + 26;
              if ((int)(v12 - (unsigned __int16)(v10 + 26)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              LODWORD(ptr[1]) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 26));
              *v11 = v10 + 30;
              if ((int)(v12 - (unsigned __int16)(v10 + 30)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              HIDWORD(ptr[1]) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 30));
              *v11 = v10 + 34;
              if ((int)(v12 - (unsigned __int16)(v10 + 34)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              LODWORD(ptr[2]) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 34));
              *v11 = v10 + 38;
              if ((int)(v12 - (unsigned __int16)(v10 + 38)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              HIDWORD(ptr[2]) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 38));
              *v11 = v10 + 42;
              v267 = v12 - (unsigned __int16)(v10 + 42);
              if ((v267 & 0x1FFFE) == 0)
                goto LABEL_759;
              if (v267 <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              LODWORD(ptr[3]) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 42));
              *v11 = v10 + 46;
              if ((int)(v12 - (unsigned __int16)(v10 + 46)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              HIDWORD(ptr[3]) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 46));
              *v11 = v10 + 50;
              if ((int)(v12 - (unsigned __int16)(v10 + 50)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              LODWORD(v338) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 50));
              *v11 = v10 + 54;
              if ((int)(v12 - (unsigned __int16)(v10 + 54)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              DWORD1(v338) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 54));
              *v11 = v10 + 58;
              if ((int)(v12 - (unsigned __int16)(v10 + 58)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              DWORD2(v338) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 58));
              *v11 = v10 + 62;
              if ((int)(v12 - (unsigned __int16)(v10 + 62)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              HIDWORD(v338) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 62));
              *v11 = v10 + 66;
              if ((int)(v12 - (unsigned __int16)(v10 + 66)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              LODWORD(v339) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 66));
              *v11 = v10 + 70;
              if ((int)(v12 - (unsigned __int16)(v10 + 70)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              DWORD1(v339) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 70));
              *v11 = v10 + 74;
              if ((int)(v12 - (unsigned __int16)(v10 + 74)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              DWORD2(v339) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 74));
              *v11 = v10 + 78;
              if ((int)(v12 - (unsigned __int16)(v10 + 78)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              HIDWORD(v339) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 78));
              *v11 = v10 + 82;
              if ((int)(v12 - (unsigned __int16)(v10 + 82)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              LODWORD(v340) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 82));
              *v11 = v10 + 86;
              if ((int)(v12 - (unsigned __int16)(v10 + 86)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              DWORD1(v340) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 86));
              *v11 = v10 + 90;
              if ((int)(v12 - (unsigned __int16)(v10 + 90)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              DWORD2(v340) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 90));
              *v11 = v10 + 94;
              if ((int)(v12 - (unsigned __int16)(v10 + 94)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              HIDWORD(v340) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 94));
              *v11 = v10 + 98;
              if ((int)(v12 - (unsigned __int16)(v10 + 98)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              LODWORD(v341) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 98));
              *v11 = v10 + 102;
              if ((int)(v12 - (unsigned __int16)(v10 + 102)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              DWORD1(v341) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 102));
              *v11 = v10 + 106;
              if ((int)(v12 - (unsigned __int16)(v10 + 106)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              DWORD2(v341) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 106));
              *v11 = v10 + 110;
              if ((int)(v12 - (unsigned __int16)(v10 + 110)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              HIDWORD(v341) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 110));
              *v11 = v10 + 114;
              if ((int)(v12 - (unsigned __int16)(v10 + 114)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              LODWORD(v342) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 114));
              *v11 = v10 + 118;
              if ((int)(v12 - (unsigned __int16)(v10 + 118)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              DWORD1(v342) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 118));
              *v11 = v10 + 122;
              if ((int)(v12 - (unsigned __int16)(v10 + 122)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              DWORD2(v342) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 122));
              *v11 = v10 + 126;
              if ((int)(v12 - (unsigned __int16)(v10 + 126)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              HIDWORD(v342) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 126));
              *v11 = v10 + 130;
              if ((int)(v12 - (unsigned __int16)(v10 + 130)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              LODWORD(v343) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 130));
              *v11 = v10 + 134;
              if ((int)(v12 - (unsigned __int16)(v10 + 134)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              DWORD1(v343) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 134));
              *v11 = v10 + 138;
              if ((int)(v12 - (unsigned __int16)(v10 + 138)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              DWORD2(v343) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 138));
              *v11 = v10 + 142;
              if ((int)(v12 - (unsigned __int16)(v10 + 142)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              HIDWORD(v343) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 142));
              *v11 = v10 + 146;
              if ((int)(v12 - (unsigned __int16)(v10 + 146)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              LODWORD(v344) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 146));
              *v11 = v10 + 150;
              if ((int)(v12 - (unsigned __int16)(v10 + 150)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              DWORD1(v344) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 150));
              *v11 = v10 + 154;
              if ((int)(v12 - (unsigned __int16)(v10 + 154)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              DWORD2(v344) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 154));
              *v11 = v10 + 158;
              if ((int)(v12 - (unsigned __int16)(v10 + 158)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              HIDWORD(v344) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 158));
              *v11 = v10 + 162;
              if ((int)(v12 - (unsigned __int16)(v10 + 162)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              LODWORD(v345) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 162));
              *v11 = v10 + 166;
              if ((int)(v12 - (unsigned __int16)(v10 + 166)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              DWORD1(v345) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 166));
              *v11 = v10 + 170;
              if ((int)(v12 - (unsigned __int16)(v10 + 170)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              DWORD2(v345) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 170));
              *v11 = v10 + 174;
              if ((int)(v12 - (unsigned __int16)(v10 + 174)) <= 1)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              HIDWORD(v345) = *(unsigned __int16 *)(v14 + (unsigned __int16)(v10 + 174));
              *v11 = v10 + 176;
              if ((int)(v12 - (unsigned __int16)(v10 + 176)) <= 1)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              LODWORD(v346) = *(unsigned __int16 *)(v14 + (unsigned __int16)(v10 + 176));
              *v11 = v10 + 178;
              if ((int)(v12 - (unsigned __int16)(v10 + 178)) <= 1)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              DWORD1(v346) = *(unsigned __int16 *)(v14 + (unsigned __int16)(v10 + 178));
              *v11 = v10 + 180;
              if ((int)(v12 - (unsigned __int16)(v10 + 180)) <= 1)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              DWORD2(v346) = *(unsigned __int16 *)(v14 + (unsigned __int16)(v10 + 180));
              *v11 = v10 + 182;
              if ((int)(v12 - (unsigned __int16)(v10 + 182)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              HIDWORD(v346) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 182));
              *v11 = v10 + 186;
              if ((int)(v12 - (unsigned __int16)(v10 + 186)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              LODWORD(v347) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 186));
              *v11 = v10 + 190;
              if ((int)(v12 - (unsigned __int16)(v10 + 190)) <= 1)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              DWORD1(v347) = *(unsigned __int16 *)(v14 + (unsigned __int16)(v10 + 190));
              *v11 = v10 + 192;
              if ((int)(v12 - (unsigned __int16)(v10 + 192)) <= 1)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              DWORD2(v347) = *(unsigned __int16 *)(v14 + (unsigned __int16)(v10 + 192));
              *v11 = v10 + 194;
              if ((int)(v12 - (unsigned __int16)(v10 + 194)) <= 1)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              HIDWORD(v347) = *(unsigned __int16 *)(v14 + (unsigned __int16)(v10 + 194));
              *v11 = v10 + 196;
              if ((int)(v12 - (unsigned __int16)(v10 + 196)) <= 1)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              LODWORD(v348) = *(unsigned __int16 *)(v14 + (unsigned __int16)(v10 + 196));
              *v11 = v10 + 198;
              if ((int)(v12 - (unsigned __int16)(v10 + 198)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              DWORD1(v348) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 198));
              *v11 = v10 + 202;
              if ((int)(v12 - (unsigned __int16)(v10 + 202)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              DWORD2(v348) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 202));
              *v11 = v10 + 206;
              if ((int)(v12 - (unsigned __int16)(v10 + 206)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              HIDWORD(v348) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 206));
              *v11 = v10 + 210;
              if ((int)(v12 - (unsigned __int16)(v10 + 210)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              v349[0] = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 210));
              *v11 = v10 + 214;
              if ((int)(v12 - (unsigned __int16)(v10 + 214)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              v349[1] = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 214));
              *v11 = v10 + 218;
              if ((int)(v12 - (unsigned __int16)(v10 + 218)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              v349[2] = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 218));
              *v11 = v10 + 222;
              if ((int)(v12 - (unsigned __int16)(v10 + 222)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              v349[3] = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 222));
              *v11 = v10 + 226;
              if ((int)(v12 - (unsigned __int16)(v10 + 226)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              v349[4] = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 226));
              *v11 = v10 + 230;
              if ((int)(v12 - (unsigned __int16)(v10 + 230)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              v349[5] = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 230));
              *v11 = v10 + 234;
              if ((int)(v12 - (unsigned __int16)(v10 + 234)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              v349[6] = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 234));
              *v11 = v10 + 238;
              if ((int)(v12 - (unsigned __int16)(v10 + 238)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              v349[7] = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 238));
              *v11 = v10 + 242;
              if (*v8)
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2061, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
              }
              else if (*(unsigned __int16 *)(a1 + 10) - (unsigned __int16)(v10 + 242) > 3 && *(_BYTE *)(a1 + 14) == 1)
              {
                v350 = *(_DWORD *)(*(_QWORD *)a1 + (unsigned __int16)(v10 + 242));
                *(_WORD *)(a1 + 12) = v10 + 246;
LABEL_759:
                v266(size);
                goto LABEL_760;
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            case 2:
              v266 = (void (*)(size_t *))qword_100984A78;
              if (!qword_100984A78)
                goto LABEL_760;
              LODWORD(ptr[2]) = 0;
              if ((int)(v12 - (unsigned __int16)v176) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              LODWORD(size[0]) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 2));
              *v11 = v10 + 6;
              if ((int)(v12 - (unsigned __int16)(v10 + 6)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              HIDWORD(size[0]) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 6));
              *v11 = v10 + 10;
              if ((int)(v12 - (unsigned __int16)(v10 + 10)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              LODWORD(size[1]) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 10));
              *v11 = v10 + 14;
              if ((int)(v12 - (unsigned __int16)(v10 + 14)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              HIDWORD(size[1]) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 14));
              *v11 = v10 + 18;
              if ((int)(v12 - (unsigned __int16)(v10 + 18)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              LODWORD(ptr[0]) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 18));
              *v11 = v10 + 22;
              if ((int)(v12 - (unsigned __int16)(v10 + 22)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              HIDWORD(ptr[0]) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 22));
              *v11 = v10 + 26;
              if ((int)(v12 - (unsigned __int16)(v10 + 26)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              LODWORD(ptr[1]) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 26));
              *v11 = v10 + 30;
              if ((int)(v12 - (unsigned __int16)(v10 + 30)) <= 3)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              HIDWORD(ptr[1]) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 30));
              *v11 = v10 + 34;
              if (v12 <= (unsigned __int16)(v10 + 34))
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              *v11 = v10 + 35;
              LOBYTE(ptr[2]) = *(_BYTE *)(v14 + (unsigned __int16)(v10 + 34));
              goto LABEL_759;
            case 3:
              v266 = (void (*)(size_t *))qword_100984A68;
              if (!qword_100984A68)
                goto LABEL_760;
              *(_OWORD *)size = 0u;
              memset(ptr, 0, 28);
              if (v12 <= (unsigned __int16)v176)
              {
                *v8 = 1;
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2078, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
              }
              else
              {
                *v11 = v10 + 3;
                LOBYTE(size[0]) = *(_BYTE *)(v14 + (unsigned __int16)(v10 + 2));
                if ((int)v12 - ((int)v10 + 3) > 3)
                {
                  HIDWORD(size[0]) = *(_DWORD *)(v14 + v10 + 3);
                  *v11 = v10 + 7;
                  if ((int)(v12 - (unsigned __int16)(v10 + 7)) <= 3)
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  LODWORD(size[1]) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 7));
                  *v11 = v10 + 11;
                  if ((int)(v12 - (unsigned __int16)(v10 + 11)) <= 3)
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  HIDWORD(size[1]) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 11));
                  *v11 = v10 + 15;
                  if ((int)(v12 - (unsigned __int16)(v10 + 15)) <= 3)
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  LODWORD(ptr[0]) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 15));
                  *v11 = v10 + 19;
                  if ((int)(v12 - (unsigned __int16)(v10 + 19)) <= 3)
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  HIDWORD(ptr[0]) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 19));
                  *v11 = v10 + 23;
                  if ((int)(v12 - (unsigned __int16)(v10 + 23)) <= 3)
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  LODWORD(ptr[1]) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 23));
                  *v11 = v10 + 27;
                  if ((int)(v12 - (unsigned __int16)(v10 + 27)) <= 3)
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  HIDWORD(ptr[1]) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 27));
                  *v11 = v10 + 31;
                  if ((int)(v12 - (unsigned __int16)(v10 + 31)) <= 3)
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  LODWORD(ptr[2]) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 31));
                  *v11 = v10 + 35;
                  if ((int)(v12 - (unsigned __int16)(v10 + 35)) <= 3)
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  HIDWORD(ptr[2]) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 35));
                  *v11 = v10 + 39;
                  if ((int)(v12 - (unsigned __int16)(v10 + 39)) <= 3)
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  LODWORD(ptr[3]) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 39));
                  *v11 = v10 + 43;
                  goto LABEL_759;
                }
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            default:
              goto LABEL_760;
          }
        case 0x9F:
          v154 = (void (*)(_QWORD))qword_100984A18;
          if (!qword_100984A18)
            goto LABEL_760;
          if (*v8)
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1918, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
          }
          else if (v12 > (unsigned __int16)v15)
          {
LABEL_402:
            *v11 = v10 + 2;
            v154(*(unsigned __int8 *)(v14 + v15));
            goto LABEL_760;
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        case 0xA2:
          if (*v8)
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1548, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
          }
          else if (v12 > (unsigned __int16)v15)
          {
            *v11 = v10 + 2;
            if ((int)v12 - ((int)v10 + 2) <= 1)
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            v200 = *(_WORD *)(v14 + v10 + 2);
            *v11 = v10 + 4;
            if ((int)(v12 - (unsigned __int16)(v10 + 4)) <= 1)
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            v201 = *(_WORD *)(v14 + (unsigned __int16)(v10 + 4));
            *v11 = v10 + 6;
            if ((int)(v12 - (unsigned __int16)(v10 + 6)) <= 1)
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            v202 = *(_WORD *)(v14 + (unsigned __int16)(v10 + 6));
            *v11 = v10 + 8;
            if ((int)(v12 - (unsigned __int16)(v10 + 8)) <= 1)
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            v203 = *(_WORD *)(v14 + (unsigned __int16)(v10 + 8));
            *v11 = v10 + 10;
            if ((int)(v12 - (unsigned __int16)(v10 + 10)) <= 1)
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            v204 = (unsigned __int8 *)(v14 + (unsigned __int16)(v10 + 10));
            v205 = *v204;
            v206 = v204[1];
            *v11 = v10 + 12;
            if (off_100984920)
              off_100984920(v200, v201, v202, v203, v205 | (v206 << 8));
            goto LABEL_760;
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        case 0xA3:
          v178 = off_100984AA0;
          if (!off_100984AA0)
            goto LABEL_760;
          if (*v8)
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2268, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
          }
          else if (v12 > (unsigned __int16)v15)
          {
            *v11 = v10 + 2;
            if ((int)v12 - ((int)v10 + 2) > 1)
            {
              v179 = *(unsigned __int8 *)(v14 + v15);
              v180 = *(_WORD *)(v14 + v10 + 2);
              *v11 = v10 + 4;
              if ((int)(v12 - (unsigned __int16)(v10 + 4)) <= 1)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              v181 = *(_WORD *)(v14 + (unsigned __int16)(v10 + 4));
              *v11 = v10 + 6;
              if (v12 <= (unsigned __int16)(v10 + 6))
              {
                v182 = 0;
                *v8 = 1;
                *(_OWORD *)size = 0u;
                memset(ptr, 0, 24);
              }
              else
              {
                *v11 = v10 + 7;
                v182 = *(unsigned __int8 *)(v14 + (unsigned __int16)(v10 + 6));
                *(_OWORD *)size = 0u;
                memset(ptr, 0, 24);
                if (v182)
                {
                  v324 = v180;
                  v326 = v179;
                  v183 = size;
                  v184 = v182;
                  while (1)
                  {
                    *(_WORD *)&buf[4] = 0;
                    *(_DWORD *)buf = 0;
                    if (*(_BYTE *)(a1 + 14) != 1)
                      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                    if (*v8)
                      break;
                    v186 = *(unsigned __int16 *)(a1 + 12);
                    if (*(unsigned __int16 *)(a1 + 10) <= v186)
                    {
                      *v8 = 1;
LABEL_371:
                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2285, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                      v191 = 0;
LABEL_372:
                      *v8 = 1;
                      goto LABEL_373;
                    }
                    v187 = *(_QWORD *)a1;
                    v188 = v186 + 1;
                    *(_WORD *)(a1 + 12) = v186 + 1;
                    v189 = *(_BYTE *)(v187 + v186);
                    v190 = v189;
                    if (v189 == 3)
                      v189 = 1;
                    if (v190 == 2)
                      v191 = 0;
                    else
                      v191 = v189;
                    if (*(unsigned __int16 *)(a1 + 10) - (int)v188 < 6)
                      goto LABEL_372;
                    sub_10004C878((uint64_t)buf, *(_QWORD *)a1 + v188, 6uLL);
                    *(_WORD *)(a1 + 12) += 6;
LABEL_373:
                    *v183++ = ((unint64_t)v191 << 48) | ((unint64_t)buf[0] << 40) | ((unint64_t)buf[1] << 32) | ((unint64_t)buf[2] << 24) | ((unint64_t)buf[3] << 16) | ((unint64_t)buf[4] << 8) | buf[5];
                    if (!--v184)
                    {
                      ((void (*)(_QWORD, _QWORD, _QWORD, uint64_t, size_t *))off_100984AA0)(v326, v181, v324, v182, size);
                      goto LABEL_760;
                    }
                  }
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2277, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                  v185 = *(unsigned __int8 *)(a1 + 14);
                  *(_BYTE *)(a1 + 15) = 1;
                  if (v185 != 1)
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  goto LABEL_371;
                }
              }
              ((void (*)(uint64_t, _QWORD, _QWORD, uint64_t, size_t *))v178)(v179, v181, v180, v182, size);
              goto LABEL_760;
            }
LABEL_906:
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          *v8 = 1;
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2269, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
          goto LABEL_906;
        default:
          if (v16 != 175)
            goto LABEL_760;
          if (*v8)
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1653, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
            v46 = 0;
          }
          else
          {
            v46 = v12 - v15;
          }
          v148 = (void (*)(uint64_t, uint64_t))qword_100984998;
          if (!qword_100984998)
            goto LABEL_760;
          v175 = *(_QWORD *)a1 + *(unsigned __int16 *)(a1 + 12);
          a2 = v46;
LABEL_462:
          v148(v175, a2);
          goto LABEL_760;
      }
    }
    switch(*(_BYTE *)(v14 + v10))
    {
      case 0x12:
        if (!off_1009849D0)
          goto LABEL_760;
        if (*v8)
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1826, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
        }
        else if (v12 > (unsigned __int16)v15)
        {
          *v11 = v10 + 2;
          if ((int)v12 - ((int)v10 + 2) <= 1)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v23 = *(unsigned __int8 *)(v14 + v15);
          v24 = *(_WORD *)(v14 + v10 + 2);
          *v11 = v10 + 4;
          if (v12 <= (unsigned __int16)(v10 + 4))
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          *v11 = v10 + 5;
          if ((int)(v12 - (unsigned __int16)(v10 + 5)) <= 3)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v25 = *(unsigned __int8 *)(v14 + (unsigned __int16)(v10 + 4));
          v26 = *(unsigned int *)(v14 + (unsigned __int16)(v10 + 5));
          *v11 = v10 + 9;
          if ((int)(v12 - (unsigned __int16)(v10 + 9)) <= 3)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v27 = *(unsigned int *)(v14 + (unsigned __int16)(v10 + 9));
          *v11 = v10 + 13;
          if (v12 <= (unsigned __int16)(v10 + 13))
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          *v11 = v10 + 14;
          if (v12 <= (unsigned __int16)(v10 + 14))
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v28 = *(unsigned __int8 *)(v14 + (unsigned __int16)(v10 + 13));
          *v11 = v10 + 15;
          v29 = *(unsigned __int8 *)(v14 + (unsigned __int16)(v10 + 14));
          if (v12 - (unint64_t)(unsigned __int16)(v10 + 15) < 2)
          {
            v31 = -1;
          }
          else
          {
            v30 = (unsigned __int16)(v10 + 15);
            if ((int)v12 - (int)v30 <= 1)
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            v31 = *(_WORD *)(v14 + v30);
            *v11 = v10 + 17;
          }
          v217 = v24;
          v218 = v31;
          off_100984B98(v23, v217, v25, v26, v27, v28, v29, v218);
          off_1009849D0(v23, v217, v25, v26, v27, v28, v29, v218);
          goto LABEL_760;
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      case 0x13:
        v47 = off_1009849D8;
        if (!off_1009849D8)
          goto LABEL_760;
        if (*v8)
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1856, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
        }
        else if ((int)(v12 - (unsigned __int16)v15) > 1)
        {
          v48 = *(_WORD *)(v14 + v15);
          *v11 = v10 + 3;
          if ((int)(v12 - (unsigned __int16)(v10 + 3)) <= 1)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v49 = *(_WORD *)(v14 + (unsigned __int16)(v10 + 3));
          *v11 = v10 + 5;
          if ((int)(v12 - (unsigned __int16)(v10 + 5)) <= 3)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v50 = *(unsigned int *)(v14 + (unsigned __int16)(v10 + 5));
          *v11 = v10 + 9;
          if ((int)(v12 - (unsigned __int16)(v10 + 9)) <= 3)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v51 = *(unsigned int *)(v14 + (unsigned __int16)(v10 + 9));
          *v11 = v10 + 13;
          ((void (*)(_QWORD, _QWORD, uint64_t, uint64_t))v47)(v48, v49, v50, v51);
          goto LABEL_760;
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      case 0x14:
        v52 = (void (*)(uint64_t, uint64_t))qword_1009849E0;
        if (!qword_1009849E0)
          goto LABEL_760;
        if (*v8)
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1872, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
        }
        else if ((int)(v12 - (unsigned __int16)v15) > 1)
        {
          v53 = v14 + v15;
          v54 = *(unsigned __int8 *)(v14 + v15);
          v55 = *(unsigned __int8 *)(v53 + 1);
          v56 = v10 + 3;
          *v11 = v10 + 3;
          if (v12 <= (unsigned __int16)(v10 + 3))
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          goto LABEL_301;
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      case 0x15:
      case 0x16:
      case 0x17:
      case 0x18:
      case 0x19:
      case 0x1A:
        goto LABEL_760;
      case 0x1B:
        if (*v8)
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1530, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
        }
        else if (v12 > (unsigned __int16)v15)
        {
          *v11 = v10 + 2;
LABEL_232:
          if (*(_BYTE *)(v14 + v15) == 3)
          {
            sub_10011472C(v14, *(unsigned __int16 *)(a1 + 8), a3, a4, a5, a6, a7, a8);
            if ((byte_100984C88 & 1) == 0)
              byte_100984C88 = 1;
          }
          goto LABEL_760;
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      default:
        if (v16 != 90)
        {
          if (v16 != 128)
            goto LABEL_760;
          if (*v8)
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1624, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
          }
          else if ((int)(v12 - (unsigned __int16)v15) > 1)
          {
            v44 = *(_WORD *)(v14 + v15);
            *v11 = v10 + 3;
            if (v12 <= (unsigned __int16)(v10 + 3))
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            *v11 = v10 + 4;
            if (v12 <= (unsigned __int16)(v10 + 4))
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            v45 = *(unsigned __int8 *)(v14 + (unsigned __int16)(v10 + 3));
            *v11 = v10 + 5;
            if (off_100984928)
              off_100984928(v44, v45, *(unsigned __int8 *)(v14 + (unsigned __int16)(v10 + 4)));
            goto LABEL_760;
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        if (*v8)
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1457, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
        }
        else if (v12 > (unsigned __int16)v15)
        {
          *v11 = v10 + 2;
          v208 = *(unsigned __int8 *)(v14 + v15);
          if (*(_BYTE *)(v14 + v15))
          {
            v209 = 0;
            do
            {
              if (*v8)
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1461, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
LABEL_788:
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              v210 = *(unsigned __int16 *)(a1 + 10);
              v211 = *(unsigned __int16 *)(a1 + 12);
              if (v210 - (int)v211 <= 1 || *(_BYTE *)(a1 + 14) != 1)
                goto LABEL_788;
              v212 = (unsigned __int8 *)(*(_QWORD *)a1 + v211);
              v213 = *v212;
              v214 = v212[1];
              *(_WORD *)(a1 + 12) = v211 + 2;
              if (v210 - (unsigned __int16)(v211 + 2) <= 1)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              *v11 = v211 + 4;
              if (sub_10019ACEC(v213 | (v214 << 8)) && off_1009848F8)
                ((void (*)(void))off_1009848F8)();
              ++v209;
            }
            while (v209 < v208);
          }
LABEL_760:
          if (!*v8)
            return;
LABEL_810:
          sub_100112D60(136);
LABEL_811:
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1510, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
LABEL_812:
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
  }
  switch(*(_BYTE *)(v14 + v10))
  {
    case 0xE5:
      v17 = off_1009849B8;
      if (!off_1009849B8)
        goto LABEL_760;
      if (*v8)
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1782, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
      }
      else if ((int)(v12 - (unsigned __int16)v15) > 1)
      {
        v18 = *(_WORD *)(v14 + v15);
        *v11 = v10 + 3;
        if (v12 <= (unsigned __int16)(v10 + 3))
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        *v11 = v10 + 4;
        if (v12 <= (unsigned __int16)(v10 + 4))
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        v19 = *(unsigned __int8 *)(v14 + (unsigned __int16)(v10 + 3));
        *v11 = v10 + 5;
        ((void (*)(_QWORD, uint64_t, _QWORD))v17)(v18, v19, *(unsigned __int8 *)(v14 + (unsigned __int16)(v10 + 4)));
        goto LABEL_760;
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    case 0xE6:
      v134 = (void (*)(size_t *))off_100984AA8;
      if (!off_100984AA8)
        goto LABEL_760;
      *(_QWORD *)&v338 = 0;
      *(_OWORD *)size = 0u;
      memset(ptr, 0, sizeof(ptr));
      if (*v8)
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2297, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
      }
      else if (v12 > (unsigned __int16)v15)
      {
        *v11 = v10 + 2;
        LOBYTE(size[0]) = *(_BYTE *)(v14 + v15);
        if ((int)v12 - ((int)v10 + 2) <= 3)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        HIDWORD(size[0]) = *(_DWORD *)(v14 + v10 + 2);
        *v11 = v10 + 6;
        if (v12 <= (unsigned __int16)(v10 + 6))
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        *v11 = v10 + 7;
        LOBYTE(size[1]) = *(_BYTE *)(v14 + (unsigned __int16)(v10 + 6));
        if ((int)(v12 - (unsigned __int16)(v10 + 7)) <= 3)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        HIDWORD(size[1]) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 7));
        *v11 = v10 + 11;
        if ((int)(v12 - (unsigned __int16)(v10 + 11)) <= 3)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        LODWORD(ptr[0]) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 11));
        *v11 = v10 + 15;
        if ((int)(v12 - (unsigned __int16)(v10 + 15)) <= 3)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        HIDWORD(ptr[0]) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 15));
        *v11 = v10 + 19;
        if ((int)(v12 - (unsigned __int16)(v10 + 19)) <= 3)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        LODWORD(ptr[1]) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 19));
        *v11 = v10 + 23;
        if ((int)(v12 - (unsigned __int16)(v10 + 23)) <= 3)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        HIDWORD(ptr[1]) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 23));
        *v11 = v10 + 27;
        if ((int)(v12 - (unsigned __int16)(v10 + 27)) <= 3)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        LODWORD(ptr[2]) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 27));
        *v11 = v10 + 31;
        if ((int)(v12 - (unsigned __int16)(v10 + 31)) <= 3)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        HIDWORD(ptr[2]) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 31));
        *v11 = v10 + 35;
        if ((int)(v12 - (unsigned __int16)(v10 + 35)) <= 3)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        LODWORD(ptr[3]) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 35));
        *v11 = v10 + 39;
        if ((int)(v12 - (unsigned __int16)(v10 + 39)) <= 3)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        HIDWORD(ptr[3]) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 39));
        *v11 = v10 + 43;
        if ((int)(v12 - (unsigned __int16)(v10 + 43)) <= 3)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        LODWORD(v338) = *(_DWORD *)(v14 + (unsigned __int16)(v10 + 43));
        *v11 = v10 + 47;
        if (v12 <= (unsigned __int16)(v10 + 47))
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        *v11 = v10 + 48;
        BYTE4(v338) = *(_BYTE *)(v14 + (unsigned __int16)(v10 + 47));
        if (v12 <= (unsigned __int16)(v10 + 48))
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        *v11 = v10 + 49;
        BYTE5(v338) = *(_BYTE *)(v14 + (unsigned __int16)(v10 + 48));
        if (v12 <= (unsigned __int16)(v10 + 49))
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        *v11 = v10 + 50;
        BYTE6(v338) = *(_BYTE *)(v14 + (unsigned __int16)(v10 + 49));
LABEL_434:
        v134(size);
        goto LABEL_760;
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    case 0xE7:
    case 0xEA:
    case 0xF1:
    case 0xF2:
    case 0xF3:
    case 0xF4:
    case 0xF5:
    case 0xF6:
    case 0xF8:
    case 0xF9:
    case 0xFC:
      goto LABEL_760;
    case 0xE8:
      v52 = (void (*)(uint64_t, uint64_t))qword_1009849C0;
      if (!qword_1009849C0)
        goto LABEL_760;
      if (*v8)
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1797, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
      }
      else if ((int)(v12 - (unsigned __int16)v15) > 1)
      {
        v57 = v14 + v15;
        v54 = *(unsigned __int8 *)(v14 + v15);
        v55 = *(unsigned __int8 *)(v57 + 1);
        v56 = v10 + 3;
        *v11 = v10 + 3;
        if (v12 <= (unsigned __int16)(v10 + 3))
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
LABEL_301:
        v145 = v54 | (v55 << 8);
        *v11 = v10 + 4;
        v146 = *(unsigned __int8 *)(v14 + v56);
LABEL_302:
        v52(v145, v146);
        goto LABEL_760;
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    case 0xE9:
      if (*v8)
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1501, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
      }
      else if (v12 > (unsigned __int16)v15)
      {
        v135 = v10 + 2;
        *v11 = v10 + 2;
        switch(*(_BYTE *)(v14 + v15))
        {
          case 1:
            v136 = (unsigned __int16)(v12 - v135);
            if (v136 >= 8)
            {
              if (!off_100984A70)
                goto LABEL_760;
              WORD2(size[0]) = 0;
              LODWORD(size[0]) = 0;
              if ((int)v12 - (int)v135 <= 5)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              sub_10004C878((uint64_t)size, v14 + v135, 6uLL);
              v137 = *v11;
              v138 = *v11 + 6;
              *v11 = v138;
              if (*v8)
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1237, "_Bool _BCM_LEMeta_EventHandler(uint8_t, OI_BYTE_STREAM *, _Bool)");
              }
              else
              {
                v139 = *(unsigned __int16 *)(a1 + 10);
                if (v139 > v138 && *(_BYTE *)(a1 + 14) == 1)
                {
                  v140 = *(_QWORD *)a1;
                  *(_WORD *)(a1 + 12) = v137 + 7;
                  if (v139 <= (unsigned __int16)(v137 + 7))
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  v141 = *(unsigned __int8 *)(v140 + v138);
                  *v11 = v137 + 8;
                  off_100984A70(LODWORD(size[0]) | ((unint64_t)WORD2(size[0]) << 32), v141, *(unsigned __int8 *)(v140 + (unsigned __int16)(v137 + 7)), v13);
                  goto LABEL_760;
                }
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            if (!sub_10005549C())
              goto LABEL_760;
            sub_100054530("Sensor state report event returned invalid length %d of data", v136);
            v301 = sub_1000544A0(0x54u);
            if (!os_log_type_enabled(v301, OS_LOG_TYPE_ERROR))
              goto LABEL_760;
            goto LABEL_722;
          case 2:
            if ((int)(v12 - (unsigned __int16)v135) <= 1)
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            v268 = *(unsigned __int16 *)(v14 + (unsigned __int16)(v10 + 2));
            *v11 = v10 + 4;
            if (!sub_10019ACEC(v268))
            {
              if (!sub_10005549C())
                goto LABEL_760;
              sub_100054530("RSSI Prox alert: ACL handle invalid");
              v303 = sub_1000544A0(0x54u);
              if (!os_log_type_enabled(v303, OS_LOG_TYPE_ERROR))
                goto LABEL_760;
LABEL_722:
              sub_1006CE7A4();
              goto LABEL_760;
            }
            if (*v8)
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1276, "_Bool _BCM_LEMeta_EventHandler(uint8_t, OI_BYTE_STREAM *, _Bool)");
            }
            else
            {
              v269 = *(unsigned __int16 *)(a1 + 10);
              v270 = *(unsigned __int16 *)(a1 + 12);
              if (v269 > v270 && *(_BYTE *)(a1 + 14) == 1)
              {
                *(_WORD *)(a1 + 12) = v270 + 1;
                if (v269 <= v270 + 1)
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                *v11 = v270 + 2;
                if (off_100984908)
                  off_100984908();
                goto LABEL_760;
              }
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          case 3:
          case 4:
          case 5:
          case 6:
          case 8:
          case 9:
          case 0xA:
            goto LABEL_760;
          case 7:
            v271 = v12 - (unsigned __int16)v135;
            if ((v271 & 0x1FFFE) != 0)
            {
              if (off_100984900)
                off_100984900(v14 + (unsigned __int16)v135, (v271 >> 1), v14 + (unsigned __int16)v135 + (unsigned __int16)(v271 >> 1), (v271 >> 1));
              goto LABEL_760;
            }
            if (!sub_10005549C())
              goto LABEL_760;
            sub_100054530("LostDevice size is zero");
            v302 = sub_1000544A0(0x54u);
            if (!os_log_type_enabled(v302, OS_LOG_TYPE_ERROR))
              goto LABEL_760;
            goto LABEL_722;
          case 0xB:
            if ((int)(v12 - (unsigned __int16)v135) <= 3)
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            v272 = *(unsigned int *)(v14 + (unsigned __int16)(v10 + 2));
            *v11 = v10 + 6;
            if ((int)(v12 - (unsigned __int16)(v10 + 6)) <= 3)
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            v273 = *(unsigned int *)(v14 + (unsigned __int16)(v10 + 6));
            *v11 = v10 + 10;
            if (off_100984910)
              off_100984910(v272, v273);
            goto LABEL_760;
          case 0xC:
            if ((int)(v12 - (unsigned __int16)v135) <= 1)
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            v274 = *(_WORD *)(v14 + (unsigned __int16)(v10 + 2));
            *v11 = v10 + 4;
            if (v12 <= (unsigned __int16)(v10 + 4))
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            *v11 = v10 + 5;
            v275 = *(unsigned __int8 *)(v14 + (unsigned __int16)(v10 + 4));
            if (off_100984AE0)
              off_100984AE0(v274, v275);
            if ((_DWORD)v275 && off_100984918)
              off_100984918(v274, v275);
            goto LABEL_760;
          default:
            if (*(_BYTE *)(v14 + v15) == 33)
            {
              if (v12 <= (unsigned __int16)v135)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              *v11 = v10 + 3;
              if (v12 <= (unsigned __int16)(v10 + 3))
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              v260 = *(unsigned __int8 *)(v14 + (unsigned __int16)(v10 + 2));
              *v11 = v10 + 4;
              if ((int)v12 - ((int)v10 + 4) <= 1)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              v261 = *(unsigned __int8 *)(v14 + v10 + 3);
              v262 = *(_WORD *)(v14 + v10 + 4);
              *v11 = v10 + 6;
              if ((int)(v12 - (unsigned __int16)(v10 + 6)) <= 1)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              v263 = (unsigned __int8 *)(v14 + (unsigned __int16)(v10 + 6));
              v264 = *v263;
              v265 = v263[1];
              *v11 = v10 + 8;
              if (off_100984A00)
                off_100984A00(v260, v261, v262, v264 | (v265 << 8));
            }
            goto LABEL_760;
        }
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    case 0xEB:
      v52 = (void (*)(uint64_t, uint64_t))off_100984C58;
      if (!off_100984C58)
        goto LABEL_760;
      if (*v8)
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2139, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
      }
      else if ((int)(v12 - (unsigned __int16)v15) > 1)
      {
        v142 = v14 + v15;
        v143 = *(unsigned __int8 *)(v14 + v15);
        v144 = *(unsigned __int8 *)(v142 + 1);
        *v11 = v10 + 3;
        if (v12 <= (unsigned __int16)(v10 + 3))
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        v145 = v143 | (v144 << 8);
        *v11 = v10 + 4;
        v146 = *(_BYTE *)(v14 + (unsigned __int16)(v10 + 3)) != 0;
        goto LABEL_302;
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    case 0xEC:
      if (!off_100984970)
        goto LABEL_760;
      if (*v8)
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1596, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
        v147 = ((uint64_t (*)(_QWORD, _QWORD))off_100984970)(*(_QWORD *)a1 + *(unsigned __int16 *)(a1 + 12), 0);
      }
      else
      {
        v147 = ((uint64_t (*)(uint64_t, _QWORD))off_100984970)(v14 + (unsigned __int16)v15, (v12 - v15));
      }
      v225 = *v11 + v147;
      *v11 = v225;
      if (*v8)
      {
        v226 = 1600;
LABEL_502:
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", v226, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
        goto LABEL_760;
      }
      if (*(unsigned __int16 *)(a1 + 10) != v225)
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      return;
    case 0xED:
      v148 = (void (*)(uint64_t, uint64_t))qword_100984A80;
      if (!qword_100984A80)
        goto LABEL_760;
      v149 = v12 - (unsigned __int16)v15;
      if (v149 > 0x26)
      {
        v175 = v14 + (unsigned __int16)v15;
        goto LABEL_462;
      }
      if (sub_10005549C())
      {
        sub_100054530("BT_VSE_HID_LATENCY_STATISTICS - Invalid data size %lu", v149);
        v150 = sub_1000544A0(0x54u);
        if (os_log_type_enabled(v150, OS_LOG_TYPE_ERROR))
          goto LABEL_722;
      }
      goto LABEL_760;
    case 0xEE:
      if (!off_100984A98)
        goto LABEL_760;
      size[0] = 0;
      size[1] = 0;
      *(void **)((char *)ptr + 7) = 0;
      ptr[0] = 0;
      *(_WORD *)&buf[4] = 0;
      *(_DWORD *)buf = 0;
      if (*v8)
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2245, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
        v151 = *(unsigned __int8 *)(a1 + 14);
        *(_BYTE *)(a1 + 15) = 1;
        if (v151 != 1)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        goto LABEL_662;
      }
      if ((int)(v12 - (unsigned __int16)v15) <= 1)
      {
        *v8 = 1;
LABEL_662:
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2246, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
        v276 = *(unsigned __int8 *)(a1 + 14);
        *(_BYTE *)(a1 + 15) = 1;
        if (v276 != 1)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        v227 = 0;
        goto LABEL_664;
      }
      v227 = *(_WORD *)(v14 + v15);
      *(_WORD *)(a1 + 12) = v10 + 3;
      if (*(unsigned __int16 *)(a1 + 10) <= (unsigned __int16)(v10 + 3))
      {
        *v8 = 1;
LABEL_664:
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2247, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
        v277 = *(unsigned __int8 *)(a1 + 14);
        *(_BYTE *)(a1 + 15) = 1;
        if (v277 != 1)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        v229 = 0;
        goto LABEL_666;
      }
      v228 = *(_QWORD *)a1;
      *(_WORD *)(a1 + 12) = v10 + 4;
      v229 = *(unsigned __int8 *)(v228 + (unsigned __int16)(v10 + 3));
      if (*(unsigned __int16 *)(a1 + 10) - (unsigned __int16)(v10 + 4) <= 1)
      {
        *v8 = 1;
LABEL_666:
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2248, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
        v278 = *(unsigned __int8 *)(a1 + 14);
        *(_BYTE *)(a1 + 15) = 1;
        if (v278 != 1)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        v230 = 0;
        goto LABEL_668;
      }
      v230 = *(_WORD *)(*(_QWORD *)a1 + (unsigned __int16)(v10 + 4));
      *(_WORD *)(a1 + 12) = v10 + 6;
      if (*(unsigned __int16 *)(a1 + 10) - (unsigned __int16)(v10 + 6) <= 1)
      {
        *v8 = 1;
LABEL_668:
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2249, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
        v279 = *(unsigned __int8 *)(a1 + 14);
        *(_BYTE *)(a1 + 15) = 1;
        if (v279 != 1)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        v231 = 0;
        goto LABEL_670;
      }
      v231 = *(_WORD *)(*(_QWORD *)a1 + (unsigned __int16)(v10 + 6));
      *(_WORD *)(a1 + 12) = v10 + 8;
      if (*(unsigned __int16 *)(a1 + 10) <= (unsigned __int16)(v10 + 8))
      {
        *v8 = 1;
LABEL_670:
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2250, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
        v233 = 0;
        goto LABEL_671;
      }
      v232 = *(_QWORD *)a1;
      *(_WORD *)(a1 + 12) = v10 + 9;
      v233 = (unint64_t)*(unsigned __int8 *)(v232 + (unsigned __int16)(v10 + 8)) << 48;
      if (*(unsigned __int16 *)(a1 + 10) - (unsigned __int16)(v10 + 9) >= 6)
      {
        sub_10004C878((uint64_t)buf, *(_QWORD *)a1 + (unsigned __int16)(v10 + 9), 6uLL);
        *(_WORD *)(a1 + 12) += 6;
        goto LABEL_672;
      }
LABEL_671:
      *v8 = 1;
LABEL_672:
      if (v230)
      {
        if (*(_BYTE *)(a1 + 14) != 1
          || ((v280 = v8, v281 = *(_QWORD *)a1, v282 = *(unsigned __int16 *)(a1 + 12), !*v280)
            ? (v283 = *(unsigned __int16 *)(a1 + 10) - (_DWORD)v282)
            : (sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2252, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)"), v283 = 0), v283 < v230))
        {
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        __memmove_chk(size, v281 + v282, v230, 31);
        *v11 += v230;
        v8 = v280;
      }
      off_100984A98(v227, v229, v230, v231, v233 | ((unint64_t)buf[0] << 40) | ((unint64_t)buf[1] << 32) | ((unint64_t)buf[2] << 24) | ((unint64_t)buf[3] << 16) | ((unint64_t)buf[4] << 8) | buf[5], size);
      goto LABEL_760;
    case 0xEF:
      if (*v8)
      {
        v322 = v8;
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2349, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
        v323 = *(unsigned __int8 *)(a1 + 14);
        *(_BYTE *)(a1 + 15) = 1;
        if (v323 != 1)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      else
      {
        if ((int)(v12 - (unsigned __int16)v15) > 3)
        {
          v58 = *(_DWORD *)(v14 + v15);
          *(_WORD *)(a1 + 12) = v10 + 5;
          if (*(unsigned __int16 *)(a1 + 10) > (unsigned __int16)(v10 + 5))
          {
            v59 = *(_QWORD *)a1;
            *(_WORD *)(a1 + 12) = v10 + 6;
            v60 = (unsigned __int16)(v10 + 5);
            v61 = *(unsigned __int8 *)(v59 + v60);
            if (!*(_BYTE *)(v59 + v60))
              goto LABEL_760;
            v62 = 0;
            while (1)
            {
              v338 = 0u;
              v339 = 0u;
              *(_OWORD *)size = 0u;
              memset(ptr, 0, sizeof(ptr));
              if (*(_BYTE *)(a1 + 14) != 1)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              if (*v8)
                break;
              v63 = *(unsigned __int16 *)(a1 + 12);
              if (*(unsigned __int16 *)(a1 + 10) - (int)v63 < 2)
                goto LABEL_102;
              v64 = *(unsigned __int16 *)(*(_QWORD *)a1 + v63);
              *(_WORD *)(a1 + 12) = v63 + 2;
LABEL_103:
              WORD1(ptr[1]) = v64 & 0x1F;
              BYTE4(ptr[1]) = (v64 >> 5) & 3;
              BYTE6(ptr[3]) = (v64 & 0x80) != 0;
              BYTE5(ptr[3]) = BYTE1(v64) & 0x3F;
              BYTE4(ptr[3]) = (v64 & 0x4000) != 0;
              HIBYTE(ptr[3]) = v64 >> 15;
              v65 = (v64 & 0x1F) - 16;
              if (v65 < 0xE && ((0x2C2Du >> v65) & 1) != 0)
              {
                v69 = byte_10073AAAE[v65];
              }
              else
              {
                BYTE3(ptr[3]) = 1;
                v66 = sub_10005549C();
                if ((v64 & 1) != 0)
                {
                  if ((v64 & 4) != 0)
                  {
                    if (v66)
                    {
                      sub_100054530("legacy=false EXTENDED_ADVERTISING_EVENT_TYPE_CONNECTABLE & EXTENDED_ADVERTISING_EVENT_TYPE_DIRECTED_ADV");
                      v75 = sub_1000544A0(0x54u);
                      if (os_log_type_enabled(v75, OS_LOG_TYPE_DEFAULT))
                      {
                        v76 = sub_100054494();
                        *(_DWORD *)buf = 136446210;
                        *(_QWORD *)&buf[4] = v76;
                        _os_log_impl((void *)&_mh_execute_header, v75, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
                      }
                    }
                    v69 = 1;
                  }
                  else
                  {
                    if (v66)
                    {
                      sub_100054530("legacy=false EXTENDED_ADVERTISING_EVENT_TYPE_CONNECTABLE");
                      v70 = sub_1000544A0(0x54u);
                      v71 = os_log_type_enabled(v70, OS_LOG_TYPE_DEFAULT);
                      v69 = 0;
                      if (!v71)
                        goto LABEL_125;
                      v72 = sub_100054494();
                      *(_DWORD *)buf = 136446210;
                      *(_QWORD *)&buf[4] = v72;
                      _os_log_impl((void *)&_mh_execute_header, v70, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
                    }
                    v69 = 0;
                  }
                }
                else if ((v64 & 8) != 0)
                {
                  if (v66)
                  {
                    sub_100054530("legacy=false EXTENDED_ADVERTISING_EVENT_TYPE_SCAN_RSP");
                    v73 = sub_1000544A0(0x54u);
                    if (os_log_type_enabled(v73, OS_LOG_TYPE_DEFAULT))
                    {
                      v74 = sub_100054494();
                      *(_DWORD *)buf = 136446210;
                      *(_QWORD *)&buf[4] = v74;
                      _os_log_impl((void *)&_mh_execute_header, v73, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
                    }
                  }
                  v69 = 4;
                }
                else
                {
                  if (v66)
                  {
                    sub_100054530("legacy=false LE_ADVERTISING_TYPE_NON_CONNECTABLE_UNDIRECTED");
                    v67 = sub_1000544A0(0x54u);
                    if (os_log_type_enabled(v67, OS_LOG_TYPE_DEFAULT))
                    {
                      v68 = sub_100054494();
                      *(_DWORD *)buf = 136446210;
                      *(_QWORD *)&buf[4] = v68;
                      _os_log_impl((void *)&_mh_execute_header, v67, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
                    }
                  }
                  v69 = 3;
                }
              }
LABEL_125:
              LOBYTE(size[0]) = (16 * BYTE5(ptr[3]) - 80) | v69;
              v77 = *(unsigned __int8 *)(a1 + 14);
              if ((v58 & 2) != 0)
              {
                if (v77 != 1)
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                if (*v8)
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2406, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                  v79 = *(unsigned __int8 *)(a1 + 14);
                  *(_BYTE *)(a1 + 15) = 1;
                  if (v79 != 1)
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
LABEL_146:
                  v86 = 2407;
LABEL_147:
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", v86, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                  goto LABEL_148;
                }
                v84 = *(unsigned __int16 *)(a1 + 12);
                if (*(unsigned __int16 *)(a1 + 10) <= v84)
                {
                  *v8 = 1;
                  goto LABEL_146;
                }
                v85 = *(_QWORD *)a1;
                *(_WORD *)(a1 + 12) = v84 + 1;
                BYTE3(v338) = *(_BYTE *)(v85 + v84);
                if (*(unsigned __int16 *)(a1 + 10) - (unsigned __int16)(v84 + 1) >= 6)
                {
                  v82 = *(_QWORD *)a1 + (unsigned __int16)(v84 + 1);
                  v83 = (char *)&v338 + 4;
                  goto LABEL_142;
                }
              }
              else
              {
                if (v77 != 1)
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                if (*v8)
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2409, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                  v78 = *(unsigned __int8 *)(a1 + 14);
                  *(_BYTE *)(a1 + 15) = 1;
                  if (v78 != 1)
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  goto LABEL_144;
                }
                v80 = *(unsigned __int16 *)(a1 + 12);
                if (*(unsigned __int16 *)(a1 + 10) <= v80)
                {
                  *v8 = 1;
LABEL_144:
                  v86 = 2410;
                  goto LABEL_147;
                }
                v81 = *(_QWORD *)a1;
                *(_WORD *)(a1 + 12) = v80 + 1;
                BYTE1(size[0]) = *(_BYTE *)(v81 + v80);
                if (*(unsigned __int16 *)(a1 + 10) - (unsigned __int16)(v80 + 1) >= 6)
                {
                  v82 = *(_QWORD *)a1 + (unsigned __int16)(v80 + 1);
                  v83 = (char *)size + 2;
LABEL_142:
                  sub_10004C878((uint64_t)v83, v82, 6uLL);
                  *(_WORD *)(a1 + 12) += 6;
                  goto LABEL_149;
                }
              }
LABEL_148:
              *v8 = 1;
LABEL_149:
              if (*(_BYTE *)(a1 + 14) != 1)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              if (*v8)
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2412, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                v87 = *(unsigned __int8 *)(a1 + 14);
              }
              else
              {
                v88 = *(unsigned __int16 *)(a1 + 12);
                if (*(unsigned __int16 *)(a1 + 10) > v88)
                {
                  v89 = *(_QWORD *)a1;
                  *(_WORD *)(a1 + 12) = v88 + 1;
                  v90 = *(unsigned __int8 *)(v89 + v88);
                  BYTE5(ptr[1]) = *(_BYTE *)(v89 + v88);
                  v87 = 1;
                  v91 = 1;
                  goto LABEL_156;
                }
                v87 = 1;
              }
              v91 = 0;
              *v8 = 1;
              v90 = BYTE5(ptr[1]);
LABEL_156:
              LOBYTE(v338) = v90 >> 7;
              BYTE1(v338) = (v90 & 0x40) != 0;
              BYTE2(v338) = (v90 & 0x20) != 0;
              if (v87 != 1)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              if (!v91)
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2418, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                v102 = *(unsigned __int8 *)(a1 + 14);
                *(_BYTE *)(a1 + 15) = 1;
                if (v102 != 1)
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
LABEL_169:
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2419, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                v103 = *(unsigned __int8 *)(a1 + 14);
                *(_BYTE *)(a1 + 15) = 1;
                if (v103 != 1)
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
LABEL_170:
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2420, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                v104 = *(unsigned __int8 *)(a1 + 14);
                *(_BYTE *)(a1 + 15) = 1;
                if (v104 != 1)
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
LABEL_171:
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2421, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                v105 = *(unsigned __int8 *)(a1 + 14);
                *(_BYTE *)(a1 + 15) = 1;
                if (v105 != 1)
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
LABEL_172:
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2422, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                v106 = *(unsigned __int8 *)(a1 + 14);
                *(_BYTE *)(a1 + 15) = 1;
                if (v106 != 1)
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
LABEL_173:
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2423, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                v107 = *(unsigned __int8 *)(a1 + 14);
                *(_BYTE *)(a1 + 15) = 1;
                if (v107 != 1)
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
LABEL_174:
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2424, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                goto LABEL_175;
              }
              v92 = *(unsigned __int16 *)(a1 + 12);
              if (*(unsigned __int16 *)(a1 + 10) <= v92)
              {
                *v8 = 1;
                goto LABEL_169;
              }
              v93 = *(_QWORD *)a1;
              *(_WORD *)(a1 + 12) = v92 + 1;
              BYTE6(ptr[1]) = *(_BYTE *)(v93 + v92);
              if (*(unsigned __int16 *)(a1 + 10) <= (v92 + 1))
              {
                *v8 = 1;
                goto LABEL_170;
              }
              v94 = *(_QWORD *)a1;
              *(_WORD *)(a1 + 12) = v92 + 2;
              HIBYTE(ptr[1]) = *(_BYTE *)(v94 + v92 + 1);
              if (*(unsigned __int16 *)(a1 + 10) <= (v92 + 2))
              {
                *v8 = 1;
                goto LABEL_171;
              }
              v95 = *(_QWORD *)a1;
              v96 = v92 + 3;
              *(_WORD *)(a1 + 12) = v92 + 3;
              LOBYTE(ptr[2]) = *(_BYTE *)(v95 + v92 + 2);
              if (*(unsigned __int16 *)(a1 + 10) <= (v92 + 3))
              {
                *v8 = 1;
                goto LABEL_172;
              }
              v97 = *(_QWORD *)a1;
              v98 = v92 + 4;
              *(_WORD *)(a1 + 12) = v98;
              LOBYTE(ptr[1]) = *(_BYTE *)(v97 + v96);
              if (*(unsigned __int16 *)(a1 + 10) - v98 <= 1)
              {
                *v8 = 1;
                goto LABEL_173;
              }
              WORD1(ptr[2]) = *(_WORD *)(*(_QWORD *)a1 + v98);
              v99 = v98 + 2;
              *(_WORD *)(a1 + 12) = v98 + 2;
              if (*(unsigned __int16 *)(a1 + 10) <= (unsigned __int16)(v98 + 2))
              {
                *v8 = 1;
                goto LABEL_174;
              }
              v100 = *(_QWORD *)a1;
              v101 = v98 + 3;
              *(_WORD *)(a1 + 12) = v101;
              BYTE4(ptr[2]) = *(_BYTE *)(v100 + v99);
              if (*(unsigned __int16 *)(a1 + 10) - v101 >= 6)
              {
                sub_10004C878((uint64_t)&ptr[2] + 5, *(_QWORD *)a1 + v101, 6uLL);
                *(_WORD *)(a1 + 12) += 6;
                goto LABEL_176;
              }
LABEL_175:
              *v8 = 1;
LABEL_176:
              if ((v58 & 2) == 0)
                goto LABEL_188;
              if (*(_BYTE *)(a1 + 14) != 1)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              if (*v8)
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2427, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                v108 = *(unsigned __int8 *)(a1 + 14);
                *(_BYTE *)(a1 + 15) = 1;
                if (v108 != 1)
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                goto LABEL_186;
              }
              v109 = *(unsigned __int16 *)(a1 + 12);
              if (*(unsigned __int16 *)(a1 + 10) <= v109)
              {
                *v8 = 1;
LABEL_186:
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2428, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                goto LABEL_187;
              }
              v110 = *(_QWORD *)a1;
              *(_WORD *)(a1 + 12) = v109 + 1;
              BYTE1(size[0]) = *(_BYTE *)(v110 + v109);
              if (*(unsigned __int16 *)(a1 + 10) - (unsigned __int16)(v109 + 1) >= 6)
              {
                sub_10004C878((uint64_t)size + 2, *(_QWORD *)a1 + (unsigned __int16)(v109 + 1), 6uLL);
                *(_WORD *)(a1 + 12) += 6;
                goto LABEL_188;
              }
LABEL_187:
              *v8 = 1;
LABEL_188:
              v111 = *(unsigned __int8 *)(a1 + 14);
              if ((v58 & 8) == 0)
                goto LABEL_201;
              if (v111 != 1)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              if (*v8)
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2432, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                v112 = *(unsigned __int8 *)(a1 + 14);
                *(_BYTE *)(a1 + 15) = 1;
                if (v112 != 1)
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                goto LABEL_198;
              }
              v113 = *(unsigned __int16 *)(a1 + 12);
              if (*(unsigned __int16 *)(a1 + 10) <= v113)
              {
                *v8 = 1;
LABEL_198:
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2433, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                v118 = *(unsigned __int8 *)(a1 + 14);
                *(_BYTE *)(a1 + 15) = 1;
                if (v118 != 1)
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                goto LABEL_199;
              }
              v114 = *(_QWORD *)a1;
              v115 = v113 + 1;
              *(_WORD *)(a1 + 12) = v113 + 1;
              BYTE8(v339) = *(_BYTE *)(v114 + v113);
              if (*(unsigned __int16 *)(a1 + 10) > (v113 + 1))
              {
                v116 = *(_QWORD *)a1;
                v117 = v113 + 2;
                *(_WORD *)(a1 + 12) = v117;
                BYTE9(v339) = *(_BYTE *)(v116 + v115);
                if (*(unsigned __int16 *)(a1 + 10) - v117 >= 2)
                {
                  WORD5(v339) = *(_WORD *)(*(_QWORD *)a1 + v117);
                  *(_WORD *)(a1 + 12) = v117 + 2;
                  goto LABEL_202;
                }
                v111 = 1;
                goto LABEL_200;
              }
              *v8 = 1;
LABEL_199:
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2434, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
              v111 = *(unsigned __int8 *)(a1 + 14);
LABEL_200:
              *v8 = 1;
LABEL_201:
              if (v111 != 1)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
LABEL_202:
              if (*v8)
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2437, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
              }
              else
              {
                v119 = *(unsigned __int16 *)(a1 + 12);
                if (*(unsigned __int16 *)(a1 + 10) > v119)
                {
                  v120 = *(_QWORD *)a1;
                  *(_WORD *)(a1 + 12) = v119 + 1;
                  v121 = *(unsigned __int8 *)(v120 + v119);
                  LOWORD(size[1]) = *(unsigned __int8 *)(v120 + v119);
                  goto LABEL_207;
                }
              }
              *v8 = 1;
              v121 = LOWORD(size[1]);
LABEL_207:
              v122 = sub_100052DC0(v121);
              ptr[0] = v122;
              if (v122)
              {
                v123 = LOWORD(size[1]);
                if (LOWORD(size[1]))
                {
                  if (*(_BYTE *)(a1 + 14) != 1)
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  v124 = v122;
                  v125 = *(_QWORD *)a1;
                  v126 = *(unsigned __int16 *)(a1 + 12);
                  if (*v8)
                  {
                    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2440, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                    v127 = 0;
                  }
                  else
                  {
                    v127 = *(unsigned __int16 *)(a1 + 10) - (_DWORD)v126;
                  }
                  if (v127 >= LOWORD(size[1]))
                  {
                    v128 = (char *)(v125 + v126);
                    v129 = &v124[v123];
                    do
                    {
                      v130 = *v128++;
                      *v124++ = v130;
                    }
                    while (v124 < v129);
                    *v11 += LOWORD(size[1]);
                  }
                  else
                  {
                    *v8 = 1;
                  }
                }
              }
              sub_100053D00((unsigned __int16 *)size);
              sub_100053298(ptr[0]);
              if (++v62 == v61)
                goto LABEL_760;
            }
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2356, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
LABEL_102:
            v64 = 0;
            *v8 = 1;
            goto LABEL_103;
          }
LABEL_809:
          *v8 = 1;
          goto LABEL_810;
        }
        v322 = v8;
        *v8 = 1;
      }
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2350, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
      v8 = v322;
      goto LABEL_809;
    case 0xF0:
      if (*v8)
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1480, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
      }
      else if ((int)(v12 - (unsigned __int16)v15) > 1)
      {
        v152 = *(unsigned __int16 *)(v14 + v15);
        *v11 = v10 + 3;
        if (v152 == 768)
        {
          if ((int)(v12 - (unsigned __int16)(v10 + 3)) <= 3)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          v153 = *(unsigned int *)(v14 + (unsigned __int16)(v10 + 3));
          *v11 = v10 + 7;
          if (off_1009848F0)
          {
            off_1009848F0(0, v153);
            off_1009848F0 = 0;
          }
        }
        goto LABEL_760;
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    case 0xF7:
      if (*v8)
        goto LABEL_811;
      if (v12 <= (unsigned __int16)v15)
        goto LABEL_812;
      *v11 = v10 + 2;
      if (v12 <= (unsigned __int16)(v10 + 2))
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      v131 = *(unsigned __int8 *)(v14 + v15);
      v15 = v10 + 3;
      *v11 = v10 + 3;
      if (v12 <= (unsigned __int16)(v10 + 3))
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      v132 = *(unsigned __int8 *)(v14 + v10 + 2);
      *v11 = v10 + 4;
      if (!v131 && v132 == 146)
        goto LABEL_232;
      goto LABEL_760;
    case 0xFA:
      v154 = (void (*)(_QWORD))off_1009849C8;
      if (!off_1009849C8)
        goto LABEL_760;
      if (*v8)
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1809, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
        goto LABEL_897;
      }
      if (v12 <= (unsigned __int16)v15)
LABEL_897:
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      goto LABEL_402;
    case 0xFB:
      v52 = (void (*)(uint64_t, uint64_t))qword_1009849B0;
      if (!qword_1009849B0)
        goto LABEL_760;
      if (*v8)
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1767, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
      }
      else if ((int)(v12 - (unsigned __int16)v15) > 1)
      {
        v155 = v14 + v15;
        v54 = *(unsigned __int8 *)(v14 + v15);
        v55 = *(unsigned __int8 *)(v155 + 1);
        v56 = v10 + 3;
        *v11 = v10 + 3;
        if (v12 <= (unsigned __int16)(v10 + 3))
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        goto LABEL_301;
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    case 0xFD:
      v52 = (void (*)(uint64_t, uint64_t))qword_1009849A8;
      if (!qword_1009849A8)
        goto LABEL_760;
      if (*v8)
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1753, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
      }
      else if ((int)(v12 - (unsigned __int16)v15) > 1)
      {
        v156 = v14 + v15;
        v157 = *(unsigned __int8 *)(v14 + v15);
        v158 = *(unsigned __int8 *)(v156 + 1);
        *v11 = v10 + 3;
        if ((int)(v12 - (unsigned __int16)(v10 + 3)) <= 3)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        v145 = v157 | (v158 << 8);
        v146 = *(unsigned int *)(v14 + (unsigned __int16)(v10 + 3));
        *v11 = v10 + 7;
        goto LABEL_302;
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    case 0xFE:
      v52 = (void (*)(uint64_t, uint64_t))qword_1009849A0;
      if (!qword_1009849A0)
        goto LABEL_760;
      if (*v8)
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1738, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
      }
      else if ((int)(v12 - (unsigned __int16)v15) > 1)
      {
        v133 = v14 + v15;
        v54 = *(unsigned __int8 *)(v14 + v15);
        v55 = *(unsigned __int8 *)(v133 + 1);
        v56 = v10 + 3;
        *v11 = v10 + 3;
        if (v12 <= (unsigned __int16)(v10 + 3))
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        goto LABEL_301;
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    default:
      switch(*(_BYTE *)(v14 + v10))
      {
        case 0xB5:
          if (*v8)
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1640, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
          }
          else if (v12 > (unsigned __int16)v15)
          {
            *v11 = v10 + 2;
            if (v12 <= (unsigned __int16)(v10 + 2))
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            v21 = *(unsigned __int8 *)(v14 + v15);
            *v11 = v10 + 3;
            if (v12 <= (unsigned __int16)(v10 + 3))
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            v22 = *(unsigned __int8 *)(v14 + v10 + 2);
            *v11 = v10 + 4;
            if (off_100984990)
              off_100984990(v21, v22, *(unsigned __int8 *)(v14 + v10 + 3), v14 + v10 + 4, (v12 - (v10 + 4)));
            goto LABEL_760;
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        case 0xB6:
        case 0xB7:
        case 0xBA:
        case 0xBC:
        case 0xBD:
        case 0xBE:
        case 0xBF:
          goto LABEL_760;
        case 0xB8:
          v148 = (void (*)(uint64_t, uint64_t))off_1009849F8;
          if (!off_1009849F8)
            goto LABEL_760;
          if (!*v8)
            goto LABEL_451;
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1884, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
          v159 = 0;
          v148 = (void (*)(uint64_t, uint64_t))off_1009849F8;
          v14 = *(_QWORD *)a1;
          LOWORD(v15) = *(_WORD *)(a1 + 12);
          goto LABEL_452;
        case 0xB9:
          v160 = (void (*)(uint64_t))off_100984A20;
          if (!off_100984A20)
            goto LABEL_760;
          goto LABEL_397;
        case 0xBB:
          v160 = (void (*)(uint64_t))qword_100984A38;
          if (!qword_100984A38)
            goto LABEL_760;
          goto LABEL_397;
        case 0xC0:
          if (!off_100984A40)
            goto LABEL_760;
          if (*v8)
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1610, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
            v161 = ((uint64_t (*)(_QWORD, _QWORD))off_100984A40)(*(_QWORD *)a1 + *(unsigned __int16 *)(a1 + 12), 0);
          }
          else
          {
            v161 = ((uint64_t (*)(uint64_t, _QWORD))off_100984A40)(v14 + (unsigned __int16)v15, (v12 - v15));
          }
          v234 = *v11 + v161;
          *v11 = v234;
          if (*v8)
          {
            v226 = 1614;
            goto LABEL_502;
          }
          if (*(unsigned __int16 *)(a1 + 10) != v234)
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          return;
        case 0xC1:
          if (*v8)
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1376, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
          }
          else if (v12 > (unsigned __int16)v15)
          {
            *v11 = v10 + 2;
            if ((int)v12 - ((int)v10 + 2) <= 1)
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            v162 = *(unsigned __int8 *)(v14 + v15);
            v163 = *(unsigned __int16 *)(v14 + v10 + 2);
            *v11 = v10 + 4;
            v164 = sub_10019ACEC(v163);
            if (*v8)
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1379, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
            }
            else
            {
              v165 = *(unsigned __int16 *)(a1 + 10);
              v166 = *(unsigned __int16 *)(a1 + 12);
              if (v165 - (int)v166 > 3 && *(_BYTE *)(a1 + 14) == 1)
              {
                v167 = *(_QWORD *)a1;
                v168 = *(unsigned int *)(*(_QWORD *)a1 + v166);
                *(_WORD *)(a1 + 12) = v166 + 4;
                if (v165 - (unsigned __int16)(v166 + 4) <= 3)
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                v169 = *(unsigned int *)(v167 + (unsigned __int16)(v166 + 4));
                *v11 = v166 + 8;
                if (v165 - (unsigned __int16)(v166 + 8) <= 1)
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                v170 = *(_WORD *)(v167 + (unsigned __int16)(v166 + 8));
                *v11 = v166 + 10;
                if (v165 - (unsigned __int16)(v166 + 10) <= 1)
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                v171 = v164;
                v172 = *(_BYTE *)(v167 + (unsigned __int16)(v166 + 10));
                *v11 = v166 + 12;
                if ((v172 & (v162 == 10)) != 0)
                  LOBYTE(v162) = -118;
                LODWORD(size[0]) = 0;
                *(_DWORD *)buf = 0;
                sub_10011344C(size, (__darwin_suseconds_t *)buf);
                v174 = v162 != 1 && v162 != 0 && v171 == 0;
                if (v174 || v162 == 10)
                {
                  if (sub_10005549C())
                  {
                    sub_100054530("updateBTControllerClockCB size is zero");
                    v215 = sub_1000544A0(0x54u);
                    if (os_log_type_enabled(v215, OS_LOG_TYPE_ERROR))
                      sub_1006CE7A4();
                  }
                }
                else if (off_100984A50)
                {
                  off_100984A50(v171, v162, v168, v169, v170, LODWORD(size[0]), *(unsigned int *)buf);
                }
                goto LABEL_760;
              }
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        default:
          switch(*(_BYTE *)(v14 + v10))
          {
            case 0xCD:
              size[0] = 0;
              size[1] = 0;
              if (*v8)
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1423, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
              }
              else if ((int)(v12 - (unsigned __int16)v15) > 1)
              {
                v32 = *(unsigned __int16 *)(v14 + v15);
                *v11 = v10 + 3;
                v33 = sub_10019ACEC(v32);
                if (*v8)
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1425, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                }
                else
                {
                  v34 = *(unsigned __int16 *)(a1 + 10);
                  v35 = *(unsigned __int16 *)(a1 + 12);
                  if ((int)(v34 - v35) > 3 && *(_BYTE *)(a1 + 14) == 1)
                  {
                    v36 = *(_QWORD *)a1;
                    *(_WORD *)(a1 + 12) = v35 + 4;
                    if ((int)(v34 - (unsigned __int16)(v35 + 4)) <= 3)
                      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                    *v11 = v35 + 8;
                    if ((int)(v34 - (unsigned __int16)(v35 + 8)) <= 3)
                      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                    *v11 = v35 + 12;
                    if ((int)(v34 - (unsigned __int16)(v35 + 12)) <= 3)
                      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                    v37 = 0;
                    v38 = v35 + 16;
                    *v11 = v35 + 16;
                    v39 = v34 >= (unsigned __int16)(v35 + 16);
                    v40 = v34 - (unsigned __int16)(v35 + 16);
                    if (v39)
                      v41 = v40;
                    else
                      v41 = 0;
                    do
                    {
                      if (v41 == v37)
                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      v42 = v38;
                      v43 = v38++;
                      *v11 = v38;
                      *((_BYTE *)size + v37++) = *(_BYTE *)(v36 + v43);
                    }
                    while (v37 != 16);
                    if (v34 <= v38)
                      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                    *v11 = v42 + 2;
                    if (v34 <= (unsigned __int16)(v42 + 2))
                      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                    *v11 = v42 + 3;
                    if (v34 <= (unsigned __int16)(v42 + 3))
                      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                    *v11 = v42 + 4;
                    if ((int)(v34 - (unsigned __int16)(v42 + 4)) <= 1)
                    {
                      *v8 = 1;
                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1439, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                    }
                    else
                    {
                      *v11 = v42 + 6;
                      if (v34 > (unsigned __int16)(v42 + 6))
                      {
                        *v11 = v42 + 7;
                        if (v33)
                        {
                          if (off_100984A48)
                            off_100984A48(v33);
                        }
                        else if (sub_10005549C())
                        {
                          sub_100054530("updateBTControllerClockCB size is zero");
                          v216 = sub_1000544A0(0x54u);
                          if (os_log_type_enabled(v216, OS_LOG_TYPE_ERROR))
                            sub_1006CE7A4();
                        }
                        goto LABEL_760;
                      }
                    }
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                }
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            case 0xCF:
              v160 = (void (*)(uint64_t))qword_100984980;
              if (!qword_100984980)
                goto LABEL_760;
              if (*v8)
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1708, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
                v207 = 0;
              }
              else
              {
                v207 = v12 - (unsigned __int16)v15;
                if (v207 == 123)
                {
                  v199 = v14 + (unsigned __int16)v15;
                  goto LABEL_398;
                }
              }
              if (sub_10005549C())
              {
                sub_100054530("BT_VSE_PHY_STATISTIC_DUAL_CORE - Invalid data size %lu", v207);
                v259 = sub_1000544A0(0x54u);
                if (os_log_type_enabled(v259, OS_LOG_TYPE_ERROR))
                  goto LABEL_722;
              }
              goto LABEL_760;
            case 0xD5:
              v134 = (void (*)(size_t *))qword_100984AB8;
              if (!qword_100984AB8)
                goto LABEL_760;
              BYTE1(size[1]) = 0;
              if (*v8)
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2330, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
              }
              else if (v12 > (unsigned __int16)v15)
              {
                *v11 = v10 + 2;
                LOBYTE(size[0]) = *(_BYTE *)(v14 + v15);
                if (v12 <= (unsigned __int16)(v10 + 2))
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                *v11 = v10 + 3;
                BYTE1(size[0]) = *(_BYTE *)(v14 + v10 + 2);
                if (v12 <= (unsigned __int16)(v10 + 3))
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                *v11 = v10 + 4;
                BYTE2(size[0]) = *(_BYTE *)(v14 + v10 + 3);
                if (v12 <= (unsigned __int16)(v10 + 4))
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                *v11 = v10 + 5;
                BYTE3(size[0]) = *(_BYTE *)(v14 + v10 + 4);
                if (v12 <= (unsigned __int16)(v10 + 5))
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                *v11 = v10 + 6;
                BYTE4(size[0]) = *(_BYTE *)(v14 + v10 + 5);
                if (v12 <= (unsigned __int16)(v10 + 6))
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                *v11 = v10 + 7;
                BYTE5(size[0]) = *(_BYTE *)(v14 + v10 + 6);
                if (v12 <= (unsigned __int16)(v10 + 7))
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                *v11 = v10 + 8;
                BYTE6(size[0]) = *(_BYTE *)(v14 + v10 + 7);
                if (v12 <= (unsigned __int16)(v10 + 8))
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                *v11 = v10 + 9;
                HIBYTE(size[0]) = *(_BYTE *)(v14 + v10 + 8);
                if (v12 <= (unsigned __int16)(v10 + 9))
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                *v11 = v10 + 10;
                LOBYTE(size[1]) = *(_BYTE *)(v14 + v10 + 9);
                if (v12 <= (unsigned __int16)(v10 + 10))
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                *v11 = v10 + 11;
                BYTE1(size[1]) = *(_BYTE *)(v14 + v10 + 10);
                goto LABEL_434;
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            case 0xD6:
              v134 = (void (*)(size_t *))qword_100984AB0;
              if (!qword_100984AB0)
                goto LABEL_760;
              if (*v8)
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2320, "void _BCM_EventHandler(OI_BYTE_STREAM *, _Bool)");
              }
              else if (v12 > (unsigned __int16)v15)
              {
                *v11 = v10 + 2;
                LOBYTE(size[0]) = *(_BYTE *)(v14 + v15);
                if (v12 <= (unsigned __int16)(v10 + 2))
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                *v11 = v10 + 3;
                BYTE1(size[0]) = *(_BYTE *)(v14 + v10 + 2);
                if (v12 <= (unsigned __int16)(v10 + 3))
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                *v11 = v10 + 4;
                BYTE2(size[0]) = *(_BYTE *)(v14 + v10 + 3);
                goto LABEL_434;
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            default:
              goto LABEL_760;
          }
      }
  }
}

uint64_t sub_1001BCEF4(uint64_t (*a1)())
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v6 = 0;
  v7 = 0;
  result = sub_10004BC7C(&v6);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v7))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2618, "OI_STATUS _BCM_OlympicReadWBSSupport(BT_VSC_READ_WBS_SUPPORTED_CB)");
    }
    else if (WORD1(v7) - WORD2(v7) > 3 && BYTE6(v7) == 2)
    {
      *(_BYTE *)(v6 + WORD2(v7)) = 5;
      *(_WORD *)(v6 + WORD2(v7) + 1) = 0;
      *(_BYTE *)(v6 + WORD2(v7) + 3) = 0;
      WORD2(v7) += 4;
      return sub_10004C8A0(226, v6, BYTE4(v7), a1, (uint64_t)sub_1001A588C, v3, v4, v5);
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001BCFF8(char a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int16 v8;
  unsigned __int16 v9;
  uint64_t v10;
  uint64_t v11;

  v10 = 0;
  v11 = 0;
  result = sub_10004BC7C(&v10);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v11))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2585, "OI_STATUS _BCM_OlympicWriteLESettings(uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v11) - WORD2(v11) > 3 && BYTE6(v11) == 2)
    {
      *(_BYTE *)(v10 + WORD2(v11)) = 11;
      *(_WORD *)(v10 + WORD2(v11) + 1) = 0;
      *(_BYTE *)(v10 + WORD2(v11) + 3) = 0;
      v8 = WORD2(v11);
      v9 = WORD2(v11) + 4;
      WORD2(v11) += 4;
      if (HIBYTE(v11))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2586, "OI_STATUS _BCM_OlympicWriteLESettings(uint8_t, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v11) > v9 && BYTE6(v11) == 2)
      {
        WORD2(v11) = v8 + 5;
        *(_BYTE *)(v10 + v9) = a1;
        return sub_10004C8A0(226, v10, BYTE4(v11), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001BD178(uint64_t (*a1)())
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v6 = 0;
  v7 = 0;
  result = sub_10004BC7C(&v6);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v7))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2604, "OI_STATUS _BCM_OlympicReadLESettings(BT_VSC_READ_LE_SETTINGS_CB)");
    }
    else if (WORD1(v7) - WORD2(v7) > 3 && BYTE6(v7) == 2)
    {
      *(_BYTE *)(v6 + WORD2(v7)) = 10;
      *(_WORD *)(v6 + WORD2(v7) + 1) = 0;
      *(_BYTE *)(v6 + WORD2(v7) + 3) = 0;
      WORD2(v7) += 4;
      return sub_10004C8A0(226, v6, BYTE4(v7), a1, (uint64_t)sub_1001A588C, v3, v4, v5);
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001BD27C(_WORD *a1, char a2, char a3, uint64_t (*a4)())
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  unsigned __int16 v12;
  unsigned __int16 v13;
  __int16 v14;
  unsigned __int16 v15;
  uint64_t v17;
  uint64_t v18;

  v17 = 0;
  v18 = 0;
  if (!sub_10004BC7C(&v17))
  {
    if (HIBYTE(v18))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2631, "OI_STATUS _BCM_OlympicEnableLEA(OI_HCI_CONNECTION_HANDLE, uint8_t, _Bool, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v18) - WORD2(v18) > 3 && BYTE6(v18) == 2)
    {
      *(_BYTE *)(v17 + WORD2(v18)) = 9;
      *(_WORD *)(v17 + WORD2(v18) + 1) = 0;
      *(_BYTE *)(v17 + WORD2(v18) + 3) = 0;
      v12 = WORD2(v18) + 4;
      WORD2(v18) += 4;
      if (HIBYTE(v18))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2632, "OI_STATUS _BCM_OlympicEnableLEA(OI_HCI_CONNECTION_HANDLE, uint8_t, _Bool, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v18) - v12 > 3 && BYTE6(v18) == 2)
      {
        *(_DWORD *)(v17 + v12) = 0;
        v13 = WORD2(v18) + 4;
        WORD2(v18) += 4;
        if (HIBYTE(v18))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2633, "OI_STATUS _BCM_OlympicEnableLEA(OI_HCI_CONNECTION_HANDLE, uint8_t, _Bool, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v18) > v13 && BYTE6(v18) == 2)
        {
          *(_BYTE *)(v17 + v13) = 0;
          v14 = WORD2(v18);
          v15 = ++WORD2(v18);
          if (HIBYTE(v18))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2634, "OI_STATUS _BCM_OlympicEnableLEA(OI_HCI_CONNECTION_HANDLE, uint8_t, _Bool, BT_VSC_COMPLETE_CB)");
          }
          else if (WORD1(v18) > v15 && BYTE6(v18) == 2)
          {
            WORD2(v18) = v14 + 2;
            *(_BYTE *)(v17 + v15) = a3 | (16 * a2);
            if (HIBYTE(v18))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2635, "OI_STATUS _BCM_OlympicEnableLEA(OI_HCI_CONNECTION_HANDLE, uint8_t, _Bool, BT_VSC_COMPLETE_CB)");
            }
            else if (WORD1(v18) - WORD2(v18) > 1 && BYTE6(v18) == 2)
            {
              *(_WORD *)(v17 + WORD2(v18)) = *a1;
              v11 = BYTE4(v18) + 2;
              WORD2(v18) += 2;
              return sub_10004C8A0(226, v17, v11, a4, (uint64_t)sub_10004AE9C, v8, v9, v10);
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  v11 = BYTE4(v18);
  return sub_10004C8A0(226, v17, v11, a4, (uint64_t)sub_10004AE9C, v8, v9, v10);
}

uint64_t sub_1001BD5AC(_BYTE *a1, char a2, uint64_t (*a3)())
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int16 v9;
  __int16 v10;
  unsigned __int16 v11;
  uint64_t v13;
  uint64_t v14;

  v13 = 0;
  v14 = 0;
  if (!sub_10004BC7C(&v13))
  {
    if (HIBYTE(v14))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2649, "OI_STATUS _BCM_OlympicEnableLEAStats(OI_HCI_CONNECTION_HANDLE, _Bool, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v14) - WORD2(v14) > 3 && BYTE6(v14) == 2)
    {
      *(_BYTE *)(v13 + WORD2(v14)) = 43;
      *(_WORD *)(v13 + WORD2(v14) + 1) = 0;
      *(_BYTE *)(v13 + WORD2(v14) + 3) = 0;
      v9 = WORD2(v14) + 4;
      WORD2(v14) += 4;
      if (HIBYTE(v14))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2650, "OI_STATUS _BCM_OlympicEnableLEAStats(OI_HCI_CONNECTION_HANDLE, _Bool, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v14) - v9 > 1 && BYTE6(v14) == 2)
      {
        *(_BYTE *)(v13 + v9) = *a1;
        *(_BYTE *)(v13 + WORD2(v14) + 1) = a1[1];
        v10 = WORD2(v14);
        v11 = WORD2(v14) + 2;
        WORD2(v14) += 2;
        if (HIBYTE(v14))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2651, "OI_STATUS _BCM_OlympicEnableLEAStats(OI_HCI_CONNECTION_HANDLE, _Bool, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v14) > v11 && BYTE6(v14) == 2)
        {
          WORD2(v14) = v10 + 3;
          *(_BYTE *)(v13 + v11) = a2;
          return sub_10004C8A0(226, v13, BYTE4(v14), a3, (uint64_t)sub_10004AE9C, v6, v7, v8);
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return sub_10004C8A0(226, v13, BYTE4(v14), a3, (uint64_t)sub_10004AE9C, v6, v7, v8);
}

uint64_t sub_1001BD7D0(char a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int16 v8;
  unsigned __int16 v9;
  uint64_t v10;
  uint64_t v11;

  v10 = 0;
  v11 = 0;
  result = sub_10004BC7C(&v10);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v11))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2665, "OI_STATUS _BCM_OlympicWriteLeNumOfCompletedPackets(uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v11) - WORD2(v11) > 3 && BYTE6(v11) == 2)
    {
      *(_BYTE *)(v10 + WORD2(v11)) = 15;
      *(_WORD *)(v10 + WORD2(v11) + 1) = 0;
      *(_BYTE *)(v10 + WORD2(v11) + 3) = 0;
      v8 = WORD2(v11);
      v9 = WORD2(v11) + 4;
      WORD2(v11) += 4;
      if (HIBYTE(v11))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2666, "OI_STATUS _BCM_OlympicWriteLeNumOfCompletedPackets(uint8_t, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v11) > v9 && BYTE6(v11) == 2)
      {
        WORD2(v11) = v8 + 5;
        *(_BYTE *)(v10 + v9) = a1;
        return sub_10004C8A0(226, v10, BYTE4(v11), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001BD950(char a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int16 v8;
  unsigned __int16 v9;
  uint64_t v10;
  uint64_t v11;

  v10 = 0;
  v11 = 0;
  result = sub_10004BC7C(&v10);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v11))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2680, "OI_STATUS _BCM_OlympicWriteTxRxPairsMax(uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v11) - WORD2(v11) > 3 && BYTE6(v11) == 2)
    {
      *(_BYTE *)(v10 + WORD2(v11)) = 16;
      *(_WORD *)(v10 + WORD2(v11) + 1) = 0;
      *(_BYTE *)(v10 + WORD2(v11) + 3) = 0;
      v8 = WORD2(v11);
      v9 = WORD2(v11) + 4;
      WORD2(v11) += 4;
      if (HIBYTE(v11))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2681, "OI_STATUS _BCM_OlympicWriteTxRxPairsMax(uint8_t, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v11) > v9 && BYTE6(v11) == 2)
      {
        WORD2(v11) = v8 + 5;
        *(_BYTE *)(v10 + v9) = a1;
        return sub_10004C8A0(226, v10, BYTE4(v11), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001BDAD0(char a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int16 v8;
  unsigned __int16 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v11 = 0;
  v12 = 0;
  result = sub_10004BC7C(&v11);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v12))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2695, "OI_STATUS _BCM_OlympicEnaSimultaneousA2DPACL(_Bool, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v12) - WORD2(v12) > 3 && BYTE6(v12) == 2)
    {
      *(_BYTE *)(v11 + WORD2(v12)) = 25;
      *(_WORD *)(v11 + WORD2(v12) + 1) = 0;
      *(_BYTE *)(v11 + WORD2(v12) + 3) = 0;
      v8 = WORD2(v12);
      v9 = WORD2(v12) + 4;
      WORD2(v12) += 4;
      if (HIBYTE(v12))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2696, "OI_STATUS _BCM_OlympicEnaSimultaneousA2DPACL(_Bool, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v12) > v9 && BYTE6(v12) == 2)
      {
        WORD2(v12) = v8 + 5;
        *(_BYTE *)(v11 + v9) = a1;
        if (HIBYTE(v12))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2697, "OI_STATUS _BCM_OlympicEnaSimultaneousA2DPACL(_Bool, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v12) - WORD2(v12) > 2 && BYTE6(v12) == 2)
        {
          v10 = v11 + WORD2(v12);
          *(_BYTE *)(v10 + 2) = 0;
          *(_WORD *)v10 = 0;
          WORD2(v12) += 3;
          return sub_10004C8A0(226, v11, BYTE4(v12), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001BDCD8(_BYTE *a1, char a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int16 v11;
  __int16 v12;
  unsigned __int16 v13;
  uint64_t v14;
  uint64_t v15;

  v14 = 0;
  v15 = 0;
  result = sub_10004BC7C(&v14);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v15))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2713, "OI_STATUS _BCM_Olympic300KhzFreqMode(OI_HCI_CONNECTION_HANDLE, uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v10 = WORD2(v15);
      if (WORD1(v15) > WORD2(v15) && BYTE6(v15) == 2)
      {
        ++WORD2(v15);
        *(_BYTE *)(v14 + v10) = 20;
        if (HIBYTE(v15))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2714, "OI_STATUS _BCM_Olympic300KhzFreqMode(OI_HCI_CONNECTION_HANDLE, uint8_t, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v15) - WORD2(v15) > 1 && BYTE6(v15) == 2)
        {
          *(_WORD *)(v14 + WORD2(v15)) = 0;
          v11 = WORD2(v15) + 2;
          WORD2(v15) += 2;
          if (HIBYTE(v15))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2716, "OI_STATUS _BCM_Olympic300KhzFreqMode(OI_HCI_CONNECTION_HANDLE, uint8_t, BT_VSC_COMPLETE_CB)");
          }
          else if (WORD1(v15) - v11 > 1 && BYTE6(v15) == 2)
          {
            *(_BYTE *)(v14 + v11 + 1) = *a1;
            *(_BYTE *)(v14 + WORD2(v15)) = a1[1];
            v12 = WORD2(v15);
            v13 = WORD2(v15) + 2;
            WORD2(v15) += 2;
            if (HIBYTE(v15))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2717, "OI_STATUS _BCM_Olympic300KhzFreqMode(OI_HCI_CONNECTION_HANDLE, uint8_t, BT_VSC_COMPLETE_CB)");
            }
            else if (WORD1(v15) > v13 && BYTE6(v15) == 2)
            {
              WORD2(v15) = v12 + 3;
              *(_BYTE *)(v14 + v13) = a2;
              return sub_10004C8A0(226, v14, BYTE4(v15), a3, (uint64_t)sub_10004AE9C, v7, v8, v9);
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001BDF40(unsigned int a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int16 v8;
  unsigned __int16 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v11 = 0;
  v12 = 0;
  result = sub_10004BC7C(&v11);
  if (a1 > 3)
    return 101;
  if (!(_DWORD)result)
  {
    if (HIBYTE(v12))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2735, "OI_STATUS _BCM_OlympicWriteNumOfCompletedPackets(uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v12) - WORD2(v12) > 3 && BYTE6(v12) == 2)
    {
      *(_BYTE *)(v11 + WORD2(v12)) = 0;
      *(_WORD *)(v11 + WORD2(v12) + 1) = 0;
      *(_BYTE *)(v11 + WORD2(v12) + 3) = 0;
      v8 = WORD2(v12);
      v9 = WORD2(v12) + 4;
      WORD2(v12) += 4;
      if (HIBYTE(v12))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2736, "OI_STATUS _BCM_OlympicWriteNumOfCompletedPackets(uint8_t, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v12) > v9 && BYTE6(v12) == 2)
      {
        WORD2(v12) = v8 + 5;
        *(_BYTE *)(v11 + v9) = a1;
        if (HIBYTE(v12))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2737, "OI_STATUS _BCM_OlympicWriteNumOfCompletedPackets(uint8_t, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v12) - WORD2(v12) > 2 && BYTE6(v12) == 2)
        {
          v10 = v11 + WORD2(v12);
          *(_BYTE *)(v10 + 2) = 0;
          *(_WORD *)v10 = 0;
          WORD2(v12) += 3;
          return sub_10004C8A0(226, v11, BYTE4(v12), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001BE154(char a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int16 v8;
  unsigned __int16 v9;
  uint64_t v10;
  uint64_t v11;

  v10 = 0;
  v11 = 0;
  result = sub_10004BC7C(&v10);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v11))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2886, "OI_STATUS _BCM_OlympicSetZoneRSSI(uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v11) - WORD2(v11) > 3 && BYTE6(v11) == 2)
    {
      *(_BYTE *)(v10 + WORD2(v11)) = 14;
      *(_WORD *)(v10 + WORD2(v11) + 1) = 0;
      *(_BYTE *)(v10 + WORD2(v11) + 3) = 0;
      v8 = WORD2(v11);
      v9 = WORD2(v11) + 4;
      WORD2(v11) += 4;
      if (HIBYTE(v11))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2887, "OI_STATUS _BCM_OlympicSetZoneRSSI(uint8_t, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v11) > v9 && BYTE6(v11) == 2)
      {
        WORD2(v11) = v8 + 5;
        *(_BYTE *)(v10 + v9) = a1;
        return sub_10004C8A0(226, v10, BYTE4(v11), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001BE2D4(int a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int16 v8;
  uint64_t v9;
  uint64_t v10;

  v9 = 0;
  v10 = 0;
  result = sub_10004BC7C(&v9);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v10))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2900, "OI_STATUS _BCM_OlympicAdvDuplicateFilterBypassConfig(const uint32_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v10) - WORD2(v10) > 3 && BYTE6(v10) == 2)
    {
      *(_BYTE *)(v9 + WORD2(v10)) = 30;
      *(_WORD *)(v9 + WORD2(v10) + 1) = 0;
      *(_BYTE *)(v9 + WORD2(v10) + 3) = 0;
      v8 = WORD2(v10) + 4;
      WORD2(v10) += 4;
      if (HIBYTE(v10))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2901, "OI_STATUS _BCM_OlympicAdvDuplicateFilterBypassConfig(const uint32_t, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v10) - v8 > 3 && BYTE6(v10) == 2)
      {
        *(_BYTE *)(v9 + v8) = a1;
        *(_BYTE *)(v9 + WORD2(v10) + 1) = BYTE1(a1);
        *(_BYTE *)(v9 + WORD2(v10) + 2) = BYTE2(a1);
        *(_BYTE *)(v9 + WORD2(v10) + 3) = HIBYTE(a1);
        WORD2(v10) += 4;
        return sub_10004C8A0(226, v9, BYTE4(v10), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001BE498(int a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int16 v8;
  uint64_t v9;
  uint64_t v10;

  v9 = 0;
  v10 = 0;
  result = sub_10004BC7C(&v9);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v10))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2915, "OI_STATUS _BCM_OlympicSetHiPrioRSSI(uint32_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v10) - WORD2(v10) > 3 && BYTE6(v10) == 2)
    {
      *(_BYTE *)(v9 + WORD2(v10)) = 4;
      *(_WORD *)(v9 + WORD2(v10) + 1) = 0;
      *(_BYTE *)(v9 + WORD2(v10) + 3) = 0;
      v8 = WORD2(v10) + 4;
      WORD2(v10) += 4;
      if (HIBYTE(v10))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2916, "OI_STATUS _BCM_OlympicSetHiPrioRSSI(uint32_t, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v10) - v8 > 3 && BYTE6(v10) == 2)
      {
        *(_BYTE *)(v9 + v8) = a1;
        *(_BYTE *)(v9 + WORD2(v10) + 1) = BYTE1(a1);
        *(_BYTE *)(v9 + WORD2(v10) + 2) = BYTE2(a1);
        *(_BYTE *)(v9 + WORD2(v10) + 3) = HIBYTE(a1);
        WORD2(v10) += 4;
        return sub_10004C8A0(226, v9, BYTE4(v10), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001BE65C(int a1, int a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int16 v10;
  unsigned __int16 v11;
  uint64_t v12;
  uint64_t v13;

  v12 = 0;
  v13 = 0;
  result = sub_10004BC7C(&v12);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v13))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2929, "OI_STATUS _BCM_OlympicCoexMultiHIDLEConfig(uint32_t, uint32_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v13) - WORD2(v13) > 3 && BYTE6(v13) == 2)
    {
      *(_BYTE *)(v12 + WORD2(v13)) = 31;
      *(_WORD *)(v12 + WORD2(v13) + 1) = 0;
      *(_BYTE *)(v12 + WORD2(v13) + 3) = 0;
      v10 = WORD2(v13) + 4;
      WORD2(v13) += 4;
      if (HIBYTE(v13))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2930, "OI_STATUS _BCM_OlympicCoexMultiHIDLEConfig(uint32_t, uint32_t, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v13) - v10 > 3 && BYTE6(v13) == 2)
      {
        *(_BYTE *)(v12 + v10) = a1;
        *(_BYTE *)(v12 + WORD2(v13) + 1) = BYTE1(a1);
        *(_BYTE *)(v12 + WORD2(v13) + 2) = BYTE2(a1);
        *(_BYTE *)(v12 + WORD2(v13) + 3) = HIBYTE(a1);
        v11 = WORD2(v13) + 4;
        WORD2(v13) += 4;
        if (HIBYTE(v13))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2931, "OI_STATUS _BCM_OlympicCoexMultiHIDLEConfig(uint32_t, uint32_t, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v13) - v11 > 3 && BYTE6(v13) == 2)
        {
          *(_BYTE *)(v12 + v11) = a2;
          *(_BYTE *)(v12 + WORD2(v13) + 1) = BYTE1(a2);
          *(_BYTE *)(v12 + WORD2(v13) + 2) = BYTE2(a2);
          *(_BYTE *)(v12 + WORD2(v13) + 3) = HIBYTE(a2);
          WORD2(v13) += 4;
          return sub_10004C8A0(226, v12, BYTE4(v13), a3, (uint64_t)sub_10004AE9C, v7, v8, v9);
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001BE8E8(_BYTE *a1, __int16 a2, __int16 a3, __int16 a4, __int16 a5, uint64_t (*a6)())
{
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int16 v16;
  unsigned __int16 v17;
  unsigned __int16 v18;
  unsigned __int16 v19;
  unsigned __int16 v20;
  uint64_t v21;
  uint64_t v22;

  v21 = 0;
  v22 = 0;
  result = sub_10004BC7C(&v21);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v22))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2945, "OI_STATUS _BCM_OlympicLESetDataLengthExtended(OI_HCI_CONNECTION_HANDLE, uint16_t, uint16_t, uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v22) - WORD2(v22) > 3 && BYTE6(v22) == 2)
    {
      *(_BYTE *)(v21 + WORD2(v22)) = 33;
      *(_WORD *)(v21 + WORD2(v22) + 1) = 0;
      *(_BYTE *)(v21 + WORD2(v22) + 3) = 0;
      v16 = WORD2(v22) + 4;
      WORD2(v22) += 4;
      if (HIBYTE(v22))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2946, "OI_STATUS _BCM_OlympicLESetDataLengthExtended(OI_HCI_CONNECTION_HANDLE, uint16_t, uint16_t, uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v22) - v16 > 1 && BYTE6(v22) == 2)
      {
        *(_BYTE *)(v21 + v16) = *a1;
        *(_BYTE *)(v21 + WORD2(v22) + 1) = a1[1];
        v17 = WORD2(v22) + 2;
        WORD2(v22) += 2;
        if (HIBYTE(v22))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2947, "OI_STATUS _BCM_OlympicLESetDataLengthExtended(OI_HCI_CONNECTION_HANDLE, uint16_t, uint16_t, uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v22) - v17 > 1 && BYTE6(v22) == 2)
        {
          *(_BYTE *)(v21 + v17) = a2;
          *(_BYTE *)(v21 + WORD2(v22) + 1) = HIBYTE(a2);
          v18 = WORD2(v22) + 2;
          WORD2(v22) += 2;
          if (HIBYTE(v22))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2948, "OI_STATUS _BCM_OlympicLESetDataLengthExtended(OI_HCI_CONNECTION_HANDLE, uint16_t, uint16_t, uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
          }
          else if (WORD1(v22) - v18 > 1 && BYTE6(v22) == 2)
          {
            *(_BYTE *)(v21 + v18) = a3;
            *(_BYTE *)(v21 + WORD2(v22) + 1) = HIBYTE(a3);
            v19 = WORD2(v22) + 2;
            WORD2(v22) += 2;
            if (HIBYTE(v22))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2949, "OI_STATUS _BCM_OlympicLESetDataLengthExtended(OI_HCI_CONNECTION_HANDLE, uint16_t, uint16_t, uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
            }
            else if (WORD1(v22) - v19 > 1 && BYTE6(v22) == 2)
            {
              *(_BYTE *)(v21 + v19) = a4;
              *(_BYTE *)(v21 + WORD2(v22) + 1) = HIBYTE(a4);
              v20 = WORD2(v22) + 2;
              WORD2(v22) += 2;
              if (HIBYTE(v22))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2950, "OI_STATUS _BCM_OlympicLESetDataLengthExtended(OI_HCI_CONNECTION_HANDLE, uint16_t, uint16_t, uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
              }
              else if (WORD1(v22) - v20 > 1 && BYTE6(v22) == 2)
              {
                *(_BYTE *)(v21 + v20) = a5;
                *(_BYTE *)(v21 + WORD2(v22) + 1) = HIBYTE(a5);
                WORD2(v22) += 2;
                return sub_10004C8A0(226, v21, BYTE4(v22), a6, (uint64_t)sub_10004AE9C, v13, v14, v15);
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001BECF8(__int16 a1, __int16 a2, __int16 a3, __int16 a4, uint64_t (*a5)())
{
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int16 v14;
  unsigned __int16 v15;
  unsigned __int16 v16;
  unsigned __int16 v17;
  uint64_t v18;
  uint64_t v19;

  v18 = 0;
  v19 = 0;
  result = sub_10004BC7C(&v18);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v19))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2964, "OI_STATUS _BCM_OlympicLEWriteSuggestedDefaultExtended(uint16_t, uint16_t, uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v19) - WORD2(v19) > 3 && BYTE6(v19) == 2)
    {
      *(_BYTE *)(v18 + WORD2(v19)) = 34;
      *(_WORD *)(v18 + WORD2(v19) + 1) = 0;
      *(_BYTE *)(v18 + WORD2(v19) + 3) = 0;
      v14 = WORD2(v19) + 4;
      WORD2(v19) += 4;
      if (HIBYTE(v19))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2965, "OI_STATUS _BCM_OlympicLEWriteSuggestedDefaultExtended(uint16_t, uint16_t, uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v19) - v14 > 1 && BYTE6(v19) == 2)
      {
        *(_BYTE *)(v18 + v14) = a1;
        *(_BYTE *)(v18 + WORD2(v19) + 1) = HIBYTE(a1);
        v15 = WORD2(v19) + 2;
        WORD2(v19) += 2;
        if (HIBYTE(v19))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2966, "OI_STATUS _BCM_OlympicLEWriteSuggestedDefaultExtended(uint16_t, uint16_t, uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v19) - v15 > 1 && BYTE6(v19) == 2)
        {
          *(_BYTE *)(v18 + v15) = a2;
          *(_BYTE *)(v18 + WORD2(v19) + 1) = HIBYTE(a2);
          v16 = WORD2(v19) + 2;
          WORD2(v19) += 2;
          if (HIBYTE(v19))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2967, "OI_STATUS _BCM_OlympicLEWriteSuggestedDefaultExtended(uint16_t, uint16_t, uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
          }
          else if (WORD1(v19) - v16 > 1 && BYTE6(v19) == 2)
          {
            *(_BYTE *)(v18 + v16) = a3;
            *(_BYTE *)(v18 + WORD2(v19) + 1) = HIBYTE(a3);
            v17 = WORD2(v19) + 2;
            WORD2(v19) += 2;
            if (HIBYTE(v19))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2968, "OI_STATUS _BCM_OlympicLEWriteSuggestedDefaultExtended(uint16_t, uint16_t, uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
            }
            else if (WORD1(v19) - v17 > 1 && BYTE6(v19) == 2)
            {
              *(_BYTE *)(v18 + v17) = a4;
              *(_BYTE *)(v18 + WORD2(v19) + 1) = HIBYTE(a4);
              WORD2(v19) += 2;
              return sub_10004C8A0(226, v18, BYTE4(v19), a5, (uint64_t)sub_10004AE9C, v11, v12, v13);
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001BF06C(uint64_t (*a1)())
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v6 = 0;
  v7 = 0;
  result = sub_10004BC7C(&v6);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v7))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2982, "OI_STATUS _BCM_OlympicLEReadSuggestedDefaultExtended(BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v7) - WORD2(v7) > 3 && BYTE6(v7) == 2)
    {
      *(_BYTE *)(v6 + WORD2(v7)) = 35;
      *(_WORD *)(v6 + WORD2(v7) + 1) = 0;
      *(_BYTE *)(v6 + WORD2(v7) + 3) = 0;
      WORD2(v7) += 4;
      return sub_10004C8A0(226, v6, BYTE4(v7), a1, (uint64_t)sub_10004AE9C, v3, v4, v5);
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001BF170(char a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int16 v8;
  unsigned __int16 v9;
  uint64_t v10;
  uint64_t v11;

  v10 = 0;
  v11 = 0;
  result = sub_10004BC7C(&v10);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v11))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2995, "OI_STATUS _BCM_OlympicLEMagnetSuspendEnable(_Bool, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v11) - WORD2(v11) > 3 && BYTE6(v11) == 2)
    {
      *(_BYTE *)(v10 + WORD2(v11)) = 37;
      *(_WORD *)(v10 + WORD2(v11) + 1) = 0;
      *(_BYTE *)(v10 + WORD2(v11) + 3) = 0;
      v8 = WORD2(v11);
      v9 = WORD2(v11) + 4;
      WORD2(v11) += 4;
      if (HIBYTE(v11))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2996, "OI_STATUS _BCM_OlympicLEMagnetSuspendEnable(_Bool, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v11) > v9 && BYTE6(v11) == 2)
      {
        WORD2(v11) = v8 + 5;
        *(_BYTE *)(v10 + v9) = a1;
        return sub_10004C8A0(226, v10, BYTE4(v11), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001BF2F0(char a1, char a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int16 v10;
  unsigned __int16 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v13 = 0;
  v14 = 0;
  result = sub_10004BC7C(&v13);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v14))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3010, "OI_STATUS _BCM_OlympicSetSARLocation(_Bool, _Bool, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v14) - WORD2(v14) > 3 && BYTE6(v14) == 2)
    {
      *(_BYTE *)(v13 + WORD2(v14)) = 38;
      *(_WORD *)(v13 + WORD2(v14) + 1) = 0;
      *(_BYTE *)(v13 + WORD2(v14) + 3) = 0;
      v10 = WORD2(v14);
      v11 = WORD2(v14) + 4;
      WORD2(v14) += 4;
      if (HIBYTE(v14))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3011, "OI_STATUS _BCM_OlympicSetSARLocation(_Bool, _Bool, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v14) > v11 && BYTE6(v14) == 2)
      {
        WORD2(v14) = v10 + 5;
        *(_BYTE *)(v13 + v11) = a1;
        if (HIBYTE(v14))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3012, "OI_STATUS _BCM_OlympicSetSARLocation(_Bool, _Bool, BT_VSC_COMPLETE_CB)");
        }
        else
        {
          v12 = WORD2(v14);
          if (WORD1(v14) > WORD2(v14) && BYTE6(v14) == 2)
          {
            ++WORD2(v14);
            *(_BYTE *)(v13 + v12) = a2;
            return sub_10004C8A0(226, v13, BYTE4(v14), a3, (uint64_t)sub_10004AE9C, v7, v8, v9);
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001BF4F4(char a1, char a2, __int16 a3, __int16 a4, __int16 a5, uint64_t (*a6)())
{
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int16 v18;
  unsigned __int16 v19;
  uint64_t v20;
  uint64_t v21;

  v20 = 0;
  v21 = 0;
  result = sub_10004BC7C(&v20);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v21))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3025, "OI_STATUS _BCM_OlympicConfigureGpioAudioSync(uint8_t, uint8_t, uint16_t, uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v16 = WORD2(v21);
      if (WORD1(v21) > WORD2(v21) && BYTE6(v21) == 2)
      {
        ++WORD2(v21);
        *(_BYTE *)(v20 + v16) = a1;
        if (HIBYTE(v21))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3026, "OI_STATUS _BCM_OlympicConfigureGpioAudioSync(uint8_t, uint8_t, uint16_t, uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
        }
        else
        {
          v17 = WORD2(v21);
          if (WORD1(v21) > WORD2(v21) && BYTE6(v21) == 2)
          {
            ++WORD2(v21);
            *(_BYTE *)(v20 + v17) = a2;
            if (HIBYTE(v21))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3027, "OI_STATUS _BCM_OlympicConfigureGpioAudioSync(uint8_t, uint8_t, uint16_t, uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
            }
            else if (WORD1(v21) - WORD2(v21) > 1 && BYTE6(v21) == 2)
            {
              *(_WORD *)(v20 + WORD2(v21)) = a4;
              v18 = WORD2(v21) + 2;
              WORD2(v21) += 2;
              if (HIBYTE(v21))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3028, "OI_STATUS _BCM_OlympicConfigureGpioAudioSync(uint8_t, uint8_t, uint16_t, uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
              }
              else if (WORD1(v21) - v18 > 1 && BYTE6(v21) == 2)
              {
                *(_BYTE *)(v20 + v18) = a5;
                *(_BYTE *)(v20 + WORD2(v21) + 1) = HIBYTE(a5);
                v19 = WORD2(v21) + 2;
                WORD2(v21) += 2;
                if (HIBYTE(v21))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3029, "OI_STATUS _BCM_OlympicConfigureGpioAudioSync(uint8_t, uint8_t, uint16_t, uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
                }
                else if (WORD1(v21) - v19 > 1 && BYTE6(v21) == 2)
                {
                  *(_BYTE *)(v20 + v19) = a3;
                  *(_BYTE *)(v20 + WORD2(v21) + 1) = HIBYTE(a3);
                  WORD2(v21) += 2;
                  return sub_10004C8A0(517, v20, BYTE4(v21), a6, (uint64_t)sub_10004AE9C, v13, v14, v15);
                }
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001BF814(char a1, __int16 a2, char a3, __int16 a4, char a5, uint64_t (*a6)())
{
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  unsigned __int16 v17;
  __int16 v18;
  unsigned __int16 v19;
  __int16 v20;
  unsigned __int16 v21;
  uint64_t v22;
  uint64_t v23;

  v22 = 0;
  v23 = 0;
  result = sub_10004BC7C(&v22);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v23))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6164, "OI_STATUS _BCM_OlympicSetExtendedScanLimits(_Bool, uint16_t, uint8_t, uint16_t, uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v23) - WORD2(v23) > 3 && BYTE6(v23) == 2)
    {
      *(_BYTE *)(v22 + WORD2(v23)) = 44;
      *(_WORD *)(v22 + WORD2(v23) + 1) = 0;
      *(_BYTE *)(v22 + WORD2(v23) + 3) = 0;
      v16 = WORD2(v23);
      v17 = WORD2(v23) + 4;
      WORD2(v23) += 4;
      if (HIBYTE(v23))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6165, "OI_STATUS _BCM_OlympicSetExtendedScanLimits(_Bool, uint16_t, uint8_t, uint16_t, uint8_t, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v23) > v17 && BYTE6(v23) == 2)
      {
        WORD2(v23) = v16 + 5;
        *(_BYTE *)(v22 + v17) = a1;
        if (HIBYTE(v23))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6166, "OI_STATUS _BCM_OlympicSetExtendedScanLimits(_Bool, uint16_t, uint8_t, uint16_t, uint8_t, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v23) - WORD2(v23) > 1 && BYTE6(v23) == 2)
        {
          *(_WORD *)(v22 + WORD2(v23)) = a2;
          v18 = WORD2(v23);
          v19 = WORD2(v23) + 2;
          WORD2(v23) += 2;
          if (HIBYTE(v23))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6167, "OI_STATUS _BCM_OlympicSetExtendedScanLimits(_Bool, uint16_t, uint8_t, uint16_t, uint8_t, BT_VSC_COMPLETE_CB)");
          }
          else if (WORD1(v23) > v19 && BYTE6(v23) == 2)
          {
            WORD2(v23) = v18 + 3;
            *(_BYTE *)(v22 + v19) = a3;
            if (HIBYTE(v23))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6168, "OI_STATUS _BCM_OlympicSetExtendedScanLimits(_Bool, uint16_t, uint8_t, uint16_t, uint8_t, BT_VSC_COMPLETE_CB)");
            }
            else if (WORD1(v23) - WORD2(v23) > 1 && BYTE6(v23) == 2)
            {
              *(_WORD *)(v22 + WORD2(v23)) = a4;
              v20 = WORD2(v23);
              v21 = WORD2(v23) + 2;
              WORD2(v23) += 2;
              if (HIBYTE(v23))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6169, "OI_STATUS _BCM_OlympicSetExtendedScanLimits(_Bool, uint16_t, uint8_t, uint16_t, uint8_t, BT_VSC_COMPLETE_CB)");
              }
              else if (WORD1(v23) > v21 && BYTE6(v23) == 2)
              {
                WORD2(v23) = v20 + 3;
                *(_BYTE *)(v22 + v21) = a5;
                return sub_10004C8A0(226, v22, BYTE4(v23), a6, (uint64_t)sub_1000723AC, v13, v14, v15);
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001BFBCC(char a1, __int16 a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int16 v10;
  unsigned __int16 v11;
  uint64_t v12;
  uint64_t v13;

  v12 = 0;
  v13 = 0;
  result = sub_10004BC7C(&v12);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v13))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6199, "OI_STATUS _BCM_OlympicSetExtendedAdvLimits(_Bool, uint16_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v13) - WORD2(v13) > 3 && BYTE6(v13) == 2)
    {
      *(_BYTE *)(v12 + WORD2(v13)) = 46;
      *(_WORD *)(v12 + WORD2(v13) + 1) = 0;
      *(_BYTE *)(v12 + WORD2(v13) + 3) = 0;
      v10 = WORD2(v13);
      v11 = WORD2(v13) + 4;
      WORD2(v13) += 4;
      if (HIBYTE(v13))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6200, "OI_STATUS _BCM_OlympicSetExtendedAdvLimits(_Bool, uint16_t, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v13) > v11 && BYTE6(v13) == 2)
      {
        WORD2(v13) = v10 + 5;
        *(_BYTE *)(v12 + v11) = a1;
        if (HIBYTE(v13))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6201, "OI_STATUS _BCM_OlympicSetExtendedAdvLimits(_Bool, uint16_t, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v13) - WORD2(v13) > 1 && BYTE6(v13) == 2)
        {
          *(_WORD *)(v12 + WORD2(v13)) = a2;
          WORD2(v13) += 2;
          return sub_10004C8A0(226, v12, BYTE4(v13), a3, (uint64_t)sub_1000723AC, v7, v8, v9);
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001BFDEC(char a1, __int16 a2, char a3, uint64_t (*a4)())
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;
  unsigned __int16 v13;
  __int16 v14;
  unsigned __int16 v15;
  uint64_t v16;
  uint64_t v17;

  v16 = 0;
  v17 = 0;
  result = sub_10004BC7C(&v16);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v17))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6234, "OI_STATUS _BCM_OlympicSetExtendedScanBuffers(_Bool, uint16_t, uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v17) - WORD2(v17) > 3 && BYTE6(v17) == 2)
    {
      *(_BYTE *)(v16 + WORD2(v17)) = 49;
      *(_WORD *)(v16 + WORD2(v17) + 1) = 0;
      *(_BYTE *)(v16 + WORD2(v17) + 3) = 0;
      v12 = WORD2(v17);
      v13 = WORD2(v17) + 4;
      WORD2(v17) += 4;
      if (HIBYTE(v17))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6235, "OI_STATUS _BCM_OlympicSetExtendedScanBuffers(_Bool, uint16_t, uint8_t, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v17) > v13 && BYTE6(v17) == 2)
      {
        WORD2(v17) = v12 + 5;
        *(_BYTE *)(v16 + v13) = a1;
        if (HIBYTE(v17))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6236, "OI_STATUS _BCM_OlympicSetExtendedScanBuffers(_Bool, uint16_t, uint8_t, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v17) - WORD2(v17) > 1 && BYTE6(v17) == 2)
        {
          *(_WORD *)(v16 + WORD2(v17)) = a2;
          v14 = WORD2(v17);
          v15 = WORD2(v17) + 2;
          WORD2(v17) += 2;
          if (HIBYTE(v17))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6237, "OI_STATUS _BCM_OlympicSetExtendedScanBuffers(_Bool, uint16_t, uint8_t, BT_VSC_COMPLETE_CB)");
          }
          else if (WORD1(v17) > v15 && BYTE6(v17) == 2)
          {
            WORD2(v17) = v14 + 3;
            *(_BYTE *)(v16 + v15) = a3;
            return sub_10004C8A0(226, v16, BYTE4(v17), a4, (uint64_t)sub_1000723AC, v9, v10, v11);
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C0088(char a1, _BYTE *a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int16 v10;
  unsigned __int16 v11;
  unsigned __int16 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = 0;
  v14 = 0;
  result = sub_10004BC7C(&v13);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v14))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2473, "OI_STATUS _BCM_OlympicWriteSingleShotRoleSwitchSettings(_Bool, OI_HCI_CONNECTION_HANDLE, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v14) - WORD2(v14) > 3 && BYTE6(v14) == 2)
    {
      *(_BYTE *)(v13 + WORD2(v14)) = 48;
      *(_WORD *)(v13 + WORD2(v14) + 1) = 0;
      *(_BYTE *)(v13 + WORD2(v14) + 3) = 0;
      v10 = WORD2(v14);
      v11 = WORD2(v14) + 4;
      WORD2(v14) += 4;
      if (HIBYTE(v14))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2475, "OI_STATUS _BCM_OlympicWriteSingleShotRoleSwitchSettings(_Bool, OI_HCI_CONNECTION_HANDLE, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v14) > v11 && BYTE6(v14) == 2)
      {
        WORD2(v14) = v10 + 5;
        *(_BYTE *)(v13 + v11) = a1;
        if (HIBYTE(v14))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2476, "OI_STATUS _BCM_OlympicWriteSingleShotRoleSwitchSettings(_Bool, OI_HCI_CONNECTION_HANDLE, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v14) > WORD2(v14) && BYTE6(v14) == 2)
        {
          *(_BYTE *)(v13 + WORD2(v14)) = 0;
          v12 = ++WORD2(v14);
          if (HIBYTE(v14))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2477, "OI_STATUS _BCM_OlympicWriteSingleShotRoleSwitchSettings(_Bool, OI_HCI_CONNECTION_HANDLE, BT_VSC_COMPLETE_CB)");
          }
          else if (WORD1(v14) - v12 > 1 && BYTE6(v14) == 2)
          {
            *(_BYTE *)(v13 + v12) = *a2;
            *(_BYTE *)(v13 + WORD2(v14) + 1) = a2[1];
            WORD2(v14) += 2;
            return sub_10004C8A0(226, v13, BYTE4(v14), a3, (uint64_t)sub_10004AE9C, v7, v8, v9);
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C0328(__int16 a1, char a2, char a3, uint64_t (*a4)())
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int16 v12;
  __int16 v13;
  unsigned __int16 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v16 = 0;
  v17 = 0;
  result = sub_10004BC7C(&v16);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v17))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6216, "OI_STATUS _BCM_OlympicSetExtendedAdvPhyOptions(uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v17) - WORD2(v17) > 3 && BYTE6(v17) == 2)
    {
      *(_BYTE *)(v16 + WORD2(v17)) = 47;
      *(_WORD *)(v16 + WORD2(v17) + 1) = 0;
      *(_BYTE *)(v16 + WORD2(v17) + 3) = 0;
      v12 = WORD2(v17) + 4;
      WORD2(v17) += 4;
      if (HIBYTE(v17))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6217, "OI_STATUS _BCM_OlympicSetExtendedAdvPhyOptions(uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v17) - v12 > 1 && BYTE6(v17) == 2)
      {
        *(_BYTE *)(v16 + v12) = a1;
        *(_BYTE *)(v16 + WORD2(v17) + 1) = HIBYTE(a1);
        v13 = WORD2(v17);
        v14 = WORD2(v17) + 2;
        WORD2(v17) += 2;
        if (HIBYTE(v17))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6218, "OI_STATUS _BCM_OlympicSetExtendedAdvPhyOptions(uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v17) > v14 && BYTE6(v17) == 2)
        {
          WORD2(v17) = v13 + 3;
          *(_BYTE *)(v16 + v14) = a2;
          if (HIBYTE(v17))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6219, "OI_STATUS _BCM_OlympicSetExtendedAdvPhyOptions(uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
          }
          else
          {
            v15 = WORD2(v17);
            if (WORD1(v17) > WORD2(v17) && BYTE6(v17) == 2)
            {
              ++WORD2(v17);
              *(_BYTE *)(v16 + v15) = a3;
              return sub_10004C8A0(226, v16, BYTE4(v17), a4, (uint64_t)sub_1000723AC, v9, v10, v11);
            }
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C05C4(unsigned int a1, unsigned int a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int16 v10;
  double v11;
  unsigned __int16 v12;
  double v13;
  uint64_t v14;
  uint64_t v15;

  v14 = 0;
  v15 = 0;
  result = sub_10004BC7C(&v14);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v15))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2497, "OI_STATUS _BCM_OlympicSetRC2BTSuppression(uint32_t, uint32_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v15) - WORD2(v15) > 3 && BYTE6(v15) == 2)
    {
      *(_BYTE *)(v14 + WORD2(v15)) = 50;
      *(_WORD *)(v14 + WORD2(v15) + 1) = 0;
      *(_BYTE *)(v14 + WORD2(v15) + 3) = 0;
      v10 = WORD2(v15) + 4;
      WORD2(v15) += 4;
      if (HIBYTE(v15))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2499, "OI_STATUS _BCM_OlympicSetRC2BTSuppression(uint32_t, uint32_t, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v15) - v10 > 3 && BYTE6(v15) == 2)
      {
        v11 = (double)a1 / 1.25;
        *(_BYTE *)(v14 + v10) = v11;
        *(_BYTE *)(v14 + WORD2(v15) + 1) = (unsigned __int16)v11 >> 8;
        *(_BYTE *)(v14 + WORD2(v15) + 2) = v11 >> 16;
        *(_BYTE *)(v14 + WORD2(v15) + 3) = v11 >> 24;
        v12 = WORD2(v15) + 4;
        WORD2(v15) += 4;
        if (HIBYTE(v15))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2500, "OI_STATUS _BCM_OlympicSetRC2BTSuppression(uint32_t, uint32_t, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v15) - v12 > 3 && BYTE6(v15) == 2)
        {
          v13 = (double)a2 / 1.25;
          *(_BYTE *)(v14 + v12) = v13;
          *(_BYTE *)(v14 + WORD2(v15) + 1) = (unsigned __int16)v13 >> 8;
          *(_BYTE *)(v14 + WORD2(v15) + 2) = v13 >> 16;
          *(_BYTE *)(v14 + WORD2(v15) + 3) = v13 >> 24;
          WORD2(v15) += 4;
          return sub_10004C8A0(226, v14, BYTE4(v15), a3, (uint64_t)sub_10004AE9C, v7, v8, v9);
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C086C(char a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int16 v8;
  uint64_t v9;
  uint64_t v10;

  v9 = 0;
  v10 = 0;
  result = sub_10004BC7C(&v9);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v10))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2518, "OI_STATUS _BCM_OlympicEnableBTGrantRC2Coex(_Bool, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v10) - WORD2(v10) > 3 && BYTE6(v10) == 2)
    {
      *(_BYTE *)(v9 + WORD2(v10)) = 51;
      *(_WORD *)(v9 + WORD2(v10) + 1) = 0;
      *(_BYTE *)(v9 + WORD2(v10) + 3) = 0;
      v8 = WORD2(v10) + 4;
      WORD2(v10) += 4;
      if (HIBYTE(v10))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2519, "OI_STATUS _BCM_OlympicEnableBTGrantRC2Coex(_Bool, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v10) - v8 > 3 && BYTE6(v10) == 2)
      {
        *(_BYTE *)(v9 + v8) = a1;
        *(_WORD *)(v9 + WORD2(v10) + 1) = 0;
        *(_BYTE *)(v9 + WORD2(v10) + 3) = 0;
        WORD2(v10) += 4;
        return sub_10004C8A0(226, v9, BYTE4(v10), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C0A24(int a1, _WORD *a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int16 v10;
  unsigned __int16 v11;
  unsigned __int16 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = 0;
  v14 = 0;
  result = sub_10004BC7C(&v13);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v14))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2536, "OI_STATUS _BCM_OlympicSetSniffAttemptOptimization(_Bool, OI_HCI_CONNECTION_HANDLE, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v14) - WORD2(v14) > 3 && BYTE6(v14) == 2)
    {
      *(_BYTE *)(v13 + WORD2(v14)) = 53;
      *(_WORD *)(v13 + WORD2(v14) + 1) = 0;
      *(_BYTE *)(v13 + WORD2(v14) + 3) = 0;
      v10 = WORD2(v14);
      v11 = WORD2(v14) + 4;
      WORD2(v14) += 4;
      if (HIBYTE(v14))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2537, "OI_STATUS _BCM_OlympicSetSniffAttemptOptimization(_Bool, OI_HCI_CONNECTION_HANDLE, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v14) > v11 && BYTE6(v14) == 2)
      {
        WORD2(v14) = v10 + 5;
        *(_BYTE *)(v13 + v11) = 1;
        if (HIBYTE(v14))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2538, "OI_STATUS _BCM_OlympicSetSniffAttemptOptimization(_Bool, OI_HCI_CONNECTION_HANDLE, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v14) - WORD2(v14) > 1 && BYTE6(v14) == 2)
        {
          *(_WORD *)(v13 + WORD2(v14)) = *a2;
          v12 = WORD2(v14) + 2;
          WORD2(v14) += 2;
          if (a1)
          {
            if (HIBYTE(v14))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2541, "OI_STATUS _BCM_OlympicSetSniffAttemptOptimization(_Bool, OI_HCI_CONNECTION_HANDLE, BT_VSC_COMPLETE_CB)");
            }
            else if (WORD1(v14) - v12 > 3 && BYTE6(v14) == 2)
            {
              *(_DWORD *)(v13 + v12) = 0;
LABEL_20:
              WORD2(v14) += 4;
              return sub_10004C8A0(226, v13, BYTE4(v14), a3, (uint64_t)sub_10004AE9C, v7, v8, v9);
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          if (HIBYTE(v14))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2543, "OI_STATUS _BCM_OlympicSetSniffAttemptOptimization(_Bool, OI_HCI_CONNECTION_HANDLE, BT_VSC_COMPLETE_CB)");
          }
          else if (WORD1(v14) - v12 > 3 && BYTE6(v14) == 2)
          {
            *(_BYTE *)(v13 + v12) = 0x80;
            *(_WORD *)(v13 + WORD2(v14) + 1) = 0;
            *(_BYTE *)(v13 + WORD2(v14) + 3) = 0;
            goto LABEL_20;
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C0D7C(uint64_t a1, uint64_t (*a2)())
{
  uint64_t result;
  unsigned __int16 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int16 v9;
  unsigned __int16 v10;
  _BYTE v11[6];
  uint64_t v12;
  uint64_t v13;

  v12 = 0;
  v13 = 0;
  result = sub_10004BC7C(&v12);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v13))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2562, "OI_STATUS _BCM_OlympicUpdateLEPhyDenylist(BTAddress, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v13) - WORD2(v13) > 3 && BYTE6(v13) == 2)
    {
      *(_BYTE *)(v12 + WORD2(v13)) = 52;
      *(_WORD *)(v12 + WORD2(v13) + 1) = 0;
      *(_BYTE *)(v12 + WORD2(v13) + 3) = 0;
      v5 = WORD2(v13) + 4;
      WORD2(v13) += 4;
      v11[0] = BYTE5(a1);
      v11[1] = BYTE4(a1);
      v11[2] = BYTE3(a1);
      v11[3] = BYTE2(a1);
      v11[4] = BYTE1(a1);
      v11[5] = a1;
      if (HIBYTE(v13))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2565, "OI_STATUS _BCM_OlympicUpdateLEPhyDenylist(BTAddress, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v13) - v5 > 5 && BYTE6(v13) == 2)
      {
        sub_10004C878(v12 + v5, (uint64_t)v11, 6uLL);
        v9 = WORD2(v13);
        v10 = WORD2(v13) + 6;
        WORD2(v13) += 6;
        if (HIBYTE(v13))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2566, "OI_STATUS _BCM_OlympicUpdateLEPhyDenylist(BTAddress, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v13) > v10 && BYTE6(v13) == 2)
        {
          WORD2(v13) = v9 + 7;
          *(_BYTE *)(v12 + v10) = BYTE6(a1);
          return sub_10004C8A0(226, v12, BYTE4(v13), a2, (uint64_t)sub_10004AE9C, v6, v7, v8);
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C0FB4(__int16 a1, char a2, char a3, uint64_t (*a4)())
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int16 v12;
  __int16 v13;
  unsigned __int16 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v16 = 0;
  v17 = 0;
  result = sub_10004BC7C(&v16);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v17))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6266, "OI_STATUS _BCM_OlympicSetHIDLatencyStats(OI_HCI_LM_HANDLE, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v17) - WORD2(v17) > 3 && BYTE6(v17) == 2)
    {
      *(_BYTE *)(v16 + WORD2(v17)) = 57;
      *(_WORD *)(v16 + WORD2(v17) + 1) = 0;
      *(_BYTE *)(v16 + WORD2(v17) + 3) = 0;
      v12 = WORD2(v17) + 4;
      WORD2(v17) += 4;
      if (HIBYTE(v17))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6267, "OI_STATUS _BCM_OlympicSetHIDLatencyStats(OI_HCI_LM_HANDLE, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v17) - v12 > 1 && BYTE6(v17) == 2)
      {
        *(_BYTE *)(v16 + v12) = a1;
        *(_BYTE *)(v16 + WORD2(v17) + 1) = HIBYTE(a1);
        v13 = WORD2(v17);
        v14 = WORD2(v17) + 2;
        WORD2(v17) += 2;
        if (HIBYTE(v17))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6268, "OI_STATUS _BCM_OlympicSetHIDLatencyStats(OI_HCI_LM_HANDLE, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v17) > v14 && BYTE6(v17) == 2)
        {
          WORD2(v17) = v13 + 3;
          *(_BYTE *)(v16 + v14) = a2;
          if (HIBYTE(v17))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6269, "OI_STATUS _BCM_OlympicSetHIDLatencyStats(OI_HCI_LM_HANDLE, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
          }
          else
          {
            v15 = WORD2(v17);
            if (WORD1(v17) > WORD2(v17) && BYTE6(v17) == 2)
            {
              ++WORD2(v17);
              *(_BYTE *)(v16 + v15) = a3;
              return sub_10004C8A0(226, v16, BYTE4(v17), a4, (uint64_t)sub_1000723AC, v9, v10, v11);
            }
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C1250(__int16 a1, char a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int16 v10;
  __int16 v11;
  unsigned __int16 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = 0;
  v14 = 0;
  result = sub_10004BC7C(&v13);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v14))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6283, "OI_STATUS _BCM_OlympicSetLMPHalt(OI_HCI_LM_HANDLE, uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v14) - WORD2(v14) > 3 && BYTE6(v14) == 2)
    {
      *(_BYTE *)(v13 + WORD2(v14)) = 64;
      *(_WORD *)(v13 + WORD2(v14) + 1) = 0;
      *(_BYTE *)(v13 + WORD2(v14) + 3) = 0;
      v10 = WORD2(v14) + 4;
      WORD2(v14) += 4;
      if (HIBYTE(v14))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6284, "OI_STATUS _BCM_OlympicSetLMPHalt(OI_HCI_LM_HANDLE, uint8_t, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v14) - v10 > 1 && BYTE6(v14) == 2)
      {
        *(_BYTE *)(v13 + v10) = a1;
        *(_BYTE *)(v13 + WORD2(v14) + 1) = HIBYTE(a1);
        v11 = WORD2(v14);
        v12 = WORD2(v14) + 2;
        WORD2(v14) += 2;
        if (HIBYTE(v14))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6285, "OI_STATUS _BCM_OlympicSetLMPHalt(OI_HCI_LM_HANDLE, uint8_t, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v14) > v12 && BYTE6(v14) == 2)
        {
          WORD2(v14) = v11 + 3;
          *(_BYTE *)(v13 + v12) = a2;
          return sub_10004C8A0(226, v13, BYTE4(v14), a3, (uint64_t)sub_1000723AC, v7, v8, v9);
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C1470(char a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int16 v8;
  unsigned __int16 v9;
  uint64_t v10;
  uint64_t v11;

  v10 = 0;
  v11 = 0;
  result = sub_10004BC7C(&v10);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v11))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6298, "OI_STATUS _BCM_OlympicDisableDiagDebugEventWakeUpAP(_Bool, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v11) - WORD2(v11) > 3 && BYTE6(v11) == 2)
    {
      *(_BYTE *)(v10 + WORD2(v11)) = 66;
      *(_WORD *)(v10 + WORD2(v11) + 1) = 0;
      *(_BYTE *)(v10 + WORD2(v11) + 3) = 0;
      v8 = WORD2(v11);
      v9 = WORD2(v11) + 4;
      WORD2(v11) += 4;
      if (HIBYTE(v11))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6299, "OI_STATUS _BCM_OlympicDisableDiagDebugEventWakeUpAP(_Bool, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v11) > v9 && BYTE6(v11) == 2)
      {
        WORD2(v11) = v8 + 5;
        *(_BYTE *)(v10 + v9) = a1;
        return sub_10004C8A0(226, v10, BYTE4(v11), a2, (uint64_t)sub_1000723AC, v5, v6, v7);
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C15F0(char a1, uint64_t a2, const void *a3, int a4, uint64_t (*a5)())
{
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  unsigned __int16 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v19 = 0;
  v20 = 0;
  result = sub_10004BC7C(&v19);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v20))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3140, "OI_STATUS _BCM_LEMetaAddIrk(_Bool, const OI_BD_ADDR *, const uint8_t *, uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v11 = WORD2(v20);
      if (WORD1(v20) > WORD2(v20) && BYTE6(v20) == 2)
      {
        ++WORD2(v20);
        *(_BYTE *)(v19 + v11) = 2;
        v12 = v19;
        v13 = WORD2(v20);
        if (HIBYTE(v20))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3141, "OI_STATUS _BCM_LEMetaAddIrk(_Bool, const OI_BD_ADDR *, const uint8_t *, uint8_t, BT_VSC_COMPLETE_CB)");
          v14 = 0;
        }
        else
        {
          v14 = WORD1(v20) - WORD2(v20);
        }
        if (v14 < a4 || BYTE6(v20) != 2)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        memmove((void *)(v12 + v13), a3, a4);
        v15 = WORD2(v20) + a4;
        WORD2(v20) += a4;
        if (HIBYTE(v20))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3142, "OI_STATUS _BCM_LEMetaAddIrk(_Bool, const OI_BD_ADDR *, const uint8_t *, uint8_t, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v20) > v15 && BYTE6(v20) == 2)
        {
          WORD2(v20) = v15 + 1;
          *(_BYTE *)(v19 + v15) = a1;
          if (HIBYTE(v20))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3143, "OI_STATUS _BCM_LEMetaAddIrk(_Bool, const OI_BD_ADDR *, const uint8_t *, uint8_t, BT_VSC_COMPLETE_CB)");
          }
          else if (WORD1(v20) - WORD2(v20) > 5 && BYTE6(v20) == 2)
          {
            sub_10004C878(v19 + WORD2(v20), a2, 6uLL);
            WORD2(v20) += 6;
            return sub_10004C8A0(233, v19, BYTE4(v20), a5, (uint64_t)sub_10004AE9C, v16, v17, v18);
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C187C(char a1, uint64_t a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v12 = 0;
  v13 = 0;
  result = sub_10004BC7C(&v12);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v13))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3156, "OI_STATUS _BCM_LEMetaRemoveIrk(_Bool, const OI_BD_ADDR *, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v7 = WORD2(v13);
      if (WORD1(v13) > WORD2(v13) && BYTE6(v13) == 2)
      {
        ++WORD2(v13);
        *(_BYTE *)(v12 + v7) = 3;
        if (HIBYTE(v13))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3157, "OI_STATUS _BCM_LEMetaRemoveIrk(_Bool, const OI_BD_ADDR *, BT_VSC_COMPLETE_CB)");
        }
        else
        {
          v8 = WORD2(v13);
          if (WORD1(v13) > WORD2(v13) && BYTE6(v13) == 2)
          {
            ++WORD2(v13);
            *(_BYTE *)(v12 + v8) = a1;
            if (HIBYTE(v13))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3158, "OI_STATUS _BCM_LEMetaRemoveIrk(_Bool, const OI_BD_ADDR *, BT_VSC_COMPLETE_CB)");
            }
            else if (WORD1(v13) - WORD2(v13) > 5 && BYTE6(v13) == 2)
            {
              sub_10004C878(v12 + WORD2(v13), a2, 6uLL);
              WORD2(v13) += 6;
              return sub_10004C8A0(233, v12, BYTE4(v13), a3, (uint64_t)sub_10004AE9C, v9, v10, v11);
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C1A5C(uint64_t (*a1)())
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v7 = 0;
  v8 = 0;
  result = sub_10004BC7C(&v7);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v8))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3171, "OI_STATUS _BCM_LEMetaClearIrk(BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v6 = WORD2(v8);
      if (WORD1(v8) > WORD2(v8) && BYTE6(v8) == 2)
      {
        ++WORD2(v8);
        *(_BYTE *)(v7 + v6) = 4;
        return sub_10004C8A0(233, v7, BYTE4(v8), a1, (uint64_t)sub_10004AE9C, v3, v4, v5);
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C1B28(uint64_t (*a1)())
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int16 v9;
  unsigned __int16 v10;
  uint64_t v11;
  uint64_t v12;

  v11 = 0;
  v12 = 0;
  result = sub_10004BC7C(&v11);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v12))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3222, "OI_STATUS _BCM_LEMetaPCFClearFilterUUID(BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v6 = WORD2(v12);
      if (WORD1(v12) > WORD2(v12) && BYTE6(v12) == 2)
      {
        ++WORD2(v12);
        *(_BYTE *)(v11 + v6) = 7;
        if (HIBYTE(v12))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3223, "OI_STATUS _BCM_LEMetaPCFClearFilterUUID(BT_VSC_COMPLETE_CB)");
        }
        else
        {
          v7 = WORD2(v12);
          if (WORD1(v12) > WORD2(v12) && BYTE6(v12) == 2)
          {
            ++WORD2(v12);
            *(_BYTE *)(v11 + v7) = 2;
            if (HIBYTE(v12))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3224, "OI_STATUS _BCM_LEMetaPCFClearFilterUUID(BT_VSC_COMPLETE_CB)");
            }
            else if (WORD1(v12) - WORD2(v12) > 5 && BYTE6(v12) == 2)
            {
              v8 = v11 + WORD2(v12);
              *(_WORD *)(v8 + 4) = 0;
              *(_DWORD *)v8 = 0;
              v9 = WORD2(v12);
              v10 = WORD2(v12) + 6;
              WORD2(v12) += 6;
              if (HIBYTE(v12))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3225, "OI_STATUS _BCM_LEMetaPCFClearFilterUUID(BT_VSC_COMPLETE_CB)");
              }
              else if (WORD1(v12) > v10 && BYTE6(v12) == 2)
              {
                WORD2(v12) = v9 + 7;
                *(_BYTE *)(v11 + v10) = 2;
                return sub_10004C8A0(233, v11, BYTE4(v12), a1, (uint64_t)sub_10004AE9C, v3, v4, v5);
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C1D74(uint64_t a1, unsigned int a2, int a3, uint64_t (*a4)())
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  char v14;
  uint64_t v15;
  __int16 v16;
  unsigned __int16 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;

  v22 = 0;
  v23 = 0;
  result = sub_10004BC7C(&v22);
  if ((_DWORD)result)
    return result;
  if (HIBYTE(v23))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3239, "OI_STATUS _BCM_LEMetaScanFilterUUID(uint8_t *, uint8_t, _Bool, BT_VSC_COMPLETE_CB)");
    goto LABEL_36;
  }
  v12 = WORD2(v23);
  if (WORD1(v23) <= WORD2(v23) || BYTE6(v23) != 2)
LABEL_36:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  ++WORD2(v23);
  *(_BYTE *)(v22 + v12) = 7;
  if (a3)
  {
    if (HIBYTE(v23))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3242, "OI_STATUS _BCM_LEMetaScanFilterUUID(uint8_t *, uint8_t, _Bool, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v13 = WORD2(v23);
      if (WORD1(v23) > WORD2(v23) && BYTE6(v23) == 2)
      {
        v14 = 0;
        goto LABEL_14;
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  if (HIBYTE(v23))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3244, "OI_STATUS _BCM_LEMetaScanFilterUUID(uint8_t *, uint8_t, _Bool, BT_VSC_COMPLETE_CB)");
    goto LABEL_46;
  }
  v13 = WORD2(v23);
  if (WORD1(v23) <= WORD2(v23) || BYTE6(v23) != 2)
LABEL_46:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v14 = 1;
LABEL_14:
  WORD2(v23) = v13 + 1;
  *(_BYTE *)(v22 + v13) = v14;
  if (HIBYTE(v23))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3246, "OI_STATUS _BCM_LEMetaScanFilterUUID(uint8_t *, uint8_t, _Bool, BT_VSC_COMPLETE_CB)");
    goto LABEL_38;
  }
  if (WORD1(v23) - WORD2(v23) <= 5 || BYTE6(v23) != 2)
LABEL_38:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v15 = v22 + WORD2(v23);
  *(_WORD *)(v15 + 4) = 0;
  *(_DWORD *)v15 = 0;
  v16 = WORD2(v23);
  v17 = WORD2(v23) + 6;
  WORD2(v23) += 6;
  if (HIBYTE(v23))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3247, "OI_STATUS _BCM_LEMetaScanFilterUUID(uint8_t *, uint8_t, _Bool, BT_VSC_COMPLETE_CB)");
    goto LABEL_40;
  }
  if (WORD1(v23) <= v17 || BYTE6(v23) != 2)
LABEL_40:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  WORD2(v23) = v16 + 7;
  *(_BYTE *)(v22 + v17) = 2;
  if (HIBYTE(v23))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3248, "OI_STATUS _BCM_LEMetaScanFilterUUID(uint8_t *, uint8_t, _Bool, BT_VSC_COMPLETE_CB)");
    goto LABEL_42;
  }
  v18 = WORD2(v23);
  if (WORD1(v23) <= WORD2(v23) || BYTE6(v23) != 2)
LABEL_42:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  ++WORD2(v23);
  *(_BYTE *)(v22 + v18) = 0;
  if (a2 == 2 || a2 == 16 || (sub_100253460(), a2))
  {
    v19 = a2;
    while (!HIBYTE(v23))
    {
      v20 = WORD2(v23);
      if (WORD1(v23) <= WORD2(v23) || BYTE6(v23) != 2)
        goto LABEL_34;
      v21 = *(_BYTE *)(a1 - 1 + v19--);
      ++WORD2(v23);
      *(_BYTE *)(v22 + v20) = v21;
      if ((unint64_t)(v19 + 1) <= 1)
        return sub_10004C8A0(233, v22, BYTE4(v23), a4, (uint64_t)sub_10004AE9C, v9, v10, v11);
    }
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3256, "OI_STATUS _BCM_LEMetaScanFilterUUID(uint8_t *, uint8_t, _Bool, BT_VSC_COMPLETE_CB)");
LABEL_34:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return sub_10004C8A0(233, v22, BYTE4(v23), a4, (uint64_t)sub_10004AE9C, v9, v10, v11);
}

uint64_t sub_1001C2168(uint64_t (*a1)())
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v7 = 0;
  v8 = 0;
  result = sub_10004BC7C(&v7);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v8))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3343, "OI_STATUS _BCM_LEMetaGetZoneCapacity(BT_VSC_GET_ZONE_CAPACITY_CB)");
    }
    else
    {
      v6 = WORD2(v8);
      if (WORD1(v8) > WORD2(v8) && BYTE6(v8) == 2)
      {
        ++WORD2(v8);
        *(_BYTE *)(v7 + v6) = 28;
        return sub_10004C8A0(233, v7, BYTE4(v8), a1, (uint64_t)sub_1001A588C, v3, v4, v5);
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C2234(const void *a1, int a2, char a3, uint64_t (*a4)())
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  unsigned __int16 v13;
  uint64_t v14;
  int v15;
  int v16;
  unsigned __int16 v17;
  uint64_t v18;
  int v19;
  unsigned __int16 v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int16 v26;
  uint64_t v27;
  uint64_t v28;

  v27 = 0;
  v28 = 0;
  result = sub_10004BC7C(&v27);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v28))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3357, "OI_STATUS _BCM_LEMetaAddZoneCapacity(const uint8_t *, uint16_t, uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v9 = WORD2(v28);
      if (WORD1(v28) > WORD2(v28) && BYTE6(v28) == 2)
      {
        ++WORD2(v28);
        *(_BYTE *)(v27 + v9) = 29;
        v10 = v27;
        v11 = WORD2(v28);
        if (HIBYTE(v28))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3358, "OI_STATUS _BCM_LEMetaAddZoneCapacity(const uint8_t *, uint16_t, uint8_t, BT_VSC_COMPLETE_CB)");
          v12 = 0;
        }
        else
        {
          v12 = WORD1(v28) - WORD2(v28);
        }
        if (v12 < a2 || BYTE6(v28) != 2)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        memmove((void *)(v10 + v11), a1, a2);
        v13 = WORD2(v28) + a2;
        WORD2(v28) += a2;
        v14 = v27;
        if (HIBYTE(v28))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3359, "OI_STATUS _BCM_LEMetaAddZoneCapacity(const uint8_t *, uint16_t, uint8_t, BT_VSC_COMPLETE_CB)");
          v15 = 0;
        }
        else
        {
          v15 = WORD1(v28) - v13;
        }
        v16 = 21 - a2;
        if (v15 < 21 - a2 || BYTE6(v28) != 2)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        bzero((void *)(v14 + v13), v16);
        v17 = WORD2(v28) + v16;
        WORD2(v28) += v16;
        v18 = v27;
        if (HIBYTE(v28))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3360, "OI_STATUS _BCM_LEMetaAddZoneCapacity(const uint8_t *, uint16_t, uint8_t, BT_VSC_COMPLETE_CB)");
          v19 = 0;
        }
        else
        {
          v19 = WORD1(v28) - v17;
        }
        if (v19 < a2 || BYTE6(v28) != 2)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        memset((void *)(v18 + v17), 255, a2);
        v20 = WORD2(v28) + a2;
        WORD2(v28) = v20;
        v21 = v27;
        if (HIBYTE(v28))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3361, "OI_STATUS _BCM_LEMetaAddZoneCapacity(const uint8_t *, uint16_t, uint8_t, BT_VSC_COMPLETE_CB)");
          v22 = 0;
        }
        else
        {
          v22 = WORD1(v28) - v20;
        }
        if (v22 < v16 || BYTE6(v28) != 2)
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        bzero((void *)(v21 + v20), v16);
        v26 = WORD2(v28) + v16;
        WORD2(v28) += v16;
        if (HIBYTE(v28))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3362, "OI_STATUS _BCM_LEMetaAddZoneCapacity(const uint8_t *, uint16_t, uint8_t, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v28) > v26 && BYTE6(v28) == 2)
        {
          WORD2(v28) = v26 + 1;
          *(_BYTE *)(v27 + v26) = a3;
          return sub_10004C8A0(233, v27, BYTE4(v28), a4, (uint64_t)sub_10004AE9C, v23, v24, v25);
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C25E8(const void *a1, int a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  unsigned __int16 v11;
  uint64_t v12;
  int v13;
  int v14;
  unsigned __int16 v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v21 = 0;
  v22 = 0;
  result = sub_10004BC7C(&v21);
  if ((_DWORD)result)
    return result;
  if (HIBYTE(v22))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3376, "OI_STATUS _BCM_LEMetaRemoveZone(const uint8_t *, uint16_t, BT_VSC_COMPLETE_CB)");
    goto LABEL_23;
  }
  v7 = WORD2(v22);
  if (WORD1(v22) <= WORD2(v22) || BYTE6(v22) != 2)
LABEL_23:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  ++WORD2(v22);
  *(_BYTE *)(v21 + v7) = 31;
  v8 = v21;
  v9 = WORD2(v22);
  if (HIBYTE(v22))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3377, "OI_STATUS _BCM_LEMetaRemoveZone(const uint8_t *, uint16_t, BT_VSC_COMPLETE_CB)");
    v10 = 0;
  }
  else
  {
    v10 = WORD1(v22) - WORD2(v22);
  }
  if (v10 < a2 || BYTE6(v22) != 2)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  memmove((void *)(v8 + v9), a1, a2);
  v11 = WORD2(v22) + a2;
  WORD2(v22) += a2;
  v12 = v21;
  if (HIBYTE(v22))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3378, "OI_STATUS _BCM_LEMetaRemoveZone(const uint8_t *, uint16_t, BT_VSC_COMPLETE_CB)");
    v13 = 0;
  }
  else
  {
    v13 = WORD1(v22) - v11;
  }
  v14 = 21 - a2;
  if (v13 < 21 - a2 || BYTE6(v22) != 2)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  bzero((void *)(v12 + v11), v14);
  v15 = WORD2(v22) + v14;
  WORD2(v22) += v14;
  v16 = v21;
  if (HIBYTE(v22))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3379, "OI_STATUS _BCM_LEMetaRemoveZone(const uint8_t *, uint16_t, BT_VSC_COMPLETE_CB)");
    v17 = 0;
  }
  else
  {
    v17 = WORD1(v22) - v15;
  }
  if (v17 < a2 || BYTE6(v22) != 2)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  memset((void *)(v16 + v15), 255, a2);
  WORD2(v22) += a2;
  return sub_10004C8A0(233, v21, BYTE4(v22), a3, (uint64_t)sub_10004AE9C, v18, v19, v20);
}

uint64_t sub_1001C2888(uint64_t (*a1)())
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v7 = 0;
  v8 = 0;
  result = sub_10004BC7C(&v7);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v8))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3393, "OI_STATUS _BCM_LEMetaClearZone(BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v6 = WORD2(v8);
      if (WORD1(v8) > WORD2(v8) && BYTE6(v8) == 2)
      {
        ++WORD2(v8);
        *(_BYTE *)(v7 + v6) = 32;
        return sub_10004C8A0(233, v7, BYTE4(v8), a1, (uint64_t)sub_10004AE9C, v3, v4, v5);
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C2954(const void *a1, int a2, const void *a3, int a4, char a5, char a6, int a7, int a8, uint64_t a9, uint64_t (*a10)())
{
  uint64_t result;
  unsigned int v19;
  char v20;
  unsigned int v21;
  char v22;
  uint64_t v23;
  unsigned __int16 v24;
  uint64_t v25;
  int v26;
  unsigned __int16 v27;
  uint64_t v28;
  int v29;
  int v30;
  unsigned __int16 v31;
  uint64_t v32;
  int v33;
  unsigned __int16 v34;
  uint64_t v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int16 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v43 = 0;
  v44 = 0;
  result = sub_10004BC7C(&v43);
  if (!(_DWORD)result)
  {
    if (a7)
    {
      if (HIBYTE(v44))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3408, "OI_STATUS _BCM_LEMetaMatchingRules(const uint8_t *, uint16_t, const uint8_t *, uint16_t, uint8_t, uint8_t, _Bool, _Bool, const BTAddress, BT_VSC_COMPLETE_CB)");
      }
      else
      {
        v19 = WORD2(v44);
        if (WORD1(v44) > WORD2(v44) && BYTE6(v44) == 2)
        {
          v20 = 50;
          goto LABEL_11;
        }
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    if (HIBYTE(v44))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3410, "OI_STATUS _BCM_LEMetaMatchingRules(const uint8_t *, uint16_t, const uint8_t *, uint16_t, uint8_t, uint8_t, _Bool, _Bool, const BTAddress, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v19 = WORD2(v44);
      if (WORD1(v44) > WORD2(v44) && BYTE6(v44) == 2)
      {
        v20 = 51;
LABEL_11:
        WORD2(v44) = v19 + 1;
        *(_BYTE *)(v43 + v19) = v20;
        if (a8)
        {
          if (HIBYTE(v44))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3414, "OI_STATUS _BCM_LEMetaMatchingRules(const uint8_t *, uint16_t, const uint8_t *, uint16_t, uint8_t, uint8_t, _Bool, _Bool, const BTAddress, BT_VSC_COMPLETE_CB)");
            goto LABEL_66;
          }
          v21 = WORD2(v44);
          if (WORD1(v44) <= WORD2(v44) || (v22 = BYTE6(v44), BYTE6(v44) != 2))
LABEL_66:
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
LABEL_20:
          WORD2(v44) = v21 + 1;
          *(_BYTE *)(v43 + v21) = v22;
          if (HIBYTE(v44))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3419, "OI_STATUS _BCM_LEMetaMatchingRules(const uint8_t *, uint16_t, const uint8_t *, uint16_t, uint8_t, uint8_t, _Bool, _Bool, const BTAddress, BT_VSC_COMPLETE_CB)");
          }
          else if (WORD1(v44) - WORD2(v44) > 5 && BYTE6(v44) == 2)
          {
            v23 = v43 + WORD2(v44);
            *(_WORD *)(v23 + 4) = 0;
            *(_DWORD *)v23 = 0;
            v24 = WORD2(v44) + 6;
            WORD2(v44) += 6;
            v25 = v43;
            if (HIBYTE(v44))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3420, "OI_STATUS _BCM_LEMetaMatchingRules(const uint8_t *, uint16_t, const uint8_t *, uint16_t, uint8_t, uint8_t, _Bool, _Bool, const BTAddress, BT_VSC_COMPLETE_CB)");
              v26 = 0;
            }
            else
            {
              v26 = WORD1(v44) - v24;
            }
            if (v26 < a2 || BYTE6(v44) != 2)
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            memmove((void *)(v25 + v24), a1, a2);
            v27 = WORD2(v44) + a2;
            WORD2(v44) += a2;
            v28 = v43;
            if (HIBYTE(v44))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3421, "OI_STATUS _BCM_LEMetaMatchingRules(const uint8_t *, uint16_t, const uint8_t *, uint16_t, uint8_t, uint8_t, _Bool, _Bool, const BTAddress, BT_VSC_COMPLETE_CB)");
              v29 = 0;
            }
            else
            {
              v29 = WORD1(v44) - v27;
            }
            v30 = 22 - a2;
            if (v29 < v30 || BYTE6(v44) != 2)
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            bzero((void *)(v28 + v27), v30);
            v31 = WORD2(v44) + v30;
            WORD2(v44) = v31;
            v32 = v43;
            if (HIBYTE(v44))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3422, "OI_STATUS _BCM_LEMetaMatchingRules(const uint8_t *, uint16_t, const uint8_t *, uint16_t, uint8_t, uint8_t, _Bool, _Bool, const BTAddress, BT_VSC_COMPLETE_CB)");
              v33 = 0;
            }
            else
            {
              v33 = WORD1(v44) - v31;
            }
            if (v33 < a4 || BYTE6(v44) != 2)
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            memmove((void *)(v32 + v31), a3, a4);
            v34 = WORD2(v44) + a4;
            WORD2(v44) += a4;
            v35 = v43;
            if (HIBYTE(v44))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3423, "OI_STATUS _BCM_LEMetaMatchingRules(const uint8_t *, uint16_t, const uint8_t *, uint16_t, uint8_t, uint8_t, _Bool, _Bool, const BTAddress, BT_VSC_COMPLETE_CB)");
              v36 = 0;
            }
            else
            {
              v36 = WORD1(v44) - v34;
            }
            v37 = 22 - a4;
            if (v36 < v37 || BYTE6(v44) != 2)
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            bzero((void *)(v35 + v34), v37);
            v41 = WORD2(v44) + v37;
            WORD2(v44) += v37;
            if (HIBYTE(v44))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3424, "OI_STATUS _BCM_LEMetaMatchingRules(const uint8_t *, uint16_t, const uint8_t *, uint16_t, uint8_t, uint8_t, _Bool, _Bool, const BTAddress, BT_VSC_COMPLETE_CB)");
            }
            else if (WORD1(v44) > v41 && BYTE6(v44) == 2)
            {
              WORD2(v44) = v41 + 1;
              *(_BYTE *)(v43 + v41) = a5;
              if (HIBYTE(v44))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3425, "OI_STATUS _BCM_LEMetaMatchingRules(const uint8_t *, uint16_t, const uint8_t *, uint16_t, uint8_t, uint8_t, _Bool, _Bool, const BTAddress, BT_VSC_COMPLETE_CB)");
              }
              else
              {
                v42 = WORD2(v44);
                if (WORD1(v44) > WORD2(v44) && BYTE6(v44) == 2)
                {
                  ++WORD2(v44);
                  *(_BYTE *)(v43 + v42) = a6;
                  return sub_10004C8A0(233, v43, BYTE4(v44), a10, (uint64_t)sub_10004AE9C, v38, v39, v40);
                }
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        if (HIBYTE(v44))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3416, "OI_STATUS _BCM_LEMetaMatchingRules(const uint8_t *, uint16_t, const uint8_t *, uint16_t, uint8_t, uint8_t, _Bool, _Bool, const BTAddress, BT_VSC_COMPLETE_CB)");
        }
        else
        {
          v21 = WORD2(v44);
          if (WORD1(v44) > WORD2(v44) && BYTE6(v44) == 2)
          {
            v22 = 3;
            goto LABEL_20;
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C2F68(_WORD *a1, char a2, char a3, uint64_t (*a4)())
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int16 v14;
  unsigned __int16 v15;
  uint64_t v16;
  uint64_t v17;

  v16 = 0;
  v17 = 0;
  result = sub_10004BC7C(&v16);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v17))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3439, "OI_STATUS _BCM_LEMetaEnableRssiHistory(OI_HCI_CONNECTION_HANDLE, _Bool, uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v12 = WORD2(v17);
      if (WORD1(v17) > WORD2(v17) && BYTE6(v17) == 2)
      {
        ++WORD2(v17);
        *(_BYTE *)(v16 + v12) = 48;
        if (HIBYTE(v17))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3440, "OI_STATUS _BCM_LEMetaEnableRssiHistory(OI_HCI_CONNECTION_HANDLE, _Bool, uint8_t, BT_VSC_COMPLETE_CB)");
        }
        else
        {
          v13 = WORD2(v17);
          if (WORD1(v17) > WORD2(v17) && BYTE6(v17) == 2)
          {
            ++WORD2(v17);
            *(_BYTE *)(v16 + v13) = a2;
            if (HIBYTE(v17))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3441, "OI_STATUS _BCM_LEMetaEnableRssiHistory(OI_HCI_CONNECTION_HANDLE, _Bool, uint8_t, BT_VSC_COMPLETE_CB)");
            }
            else if (WORD1(v17) - WORD2(v17) > 1 && BYTE6(v17) == 2)
            {
              *(_WORD *)(v16 + WORD2(v17)) = *a1;
              v14 = WORD2(v17);
              v15 = WORD2(v17) + 2;
              WORD2(v17) += 2;
              if (HIBYTE(v17))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3442, "OI_STATUS _BCM_LEMetaEnableRssiHistory(OI_HCI_CONNECTION_HANDLE, _Bool, uint8_t, BT_VSC_COMPLETE_CB)");
              }
              else if (WORD1(v17) > v15 && BYTE6(v17) == 2)
              {
                WORD2(v17) = v14 + 3;
                *(_BYTE *)(v16 + v15) = a3;
                return sub_10004C8A0(233, v16, BYTE4(v17), a4, (uint64_t)sub_10004AE9C, v9, v10, v11);
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C31D0(uint64_t a1, char a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  unsigned __int16 v12;
  uint64_t v13;
  _BYTE v14[6];
  uint64_t v15;
  uint64_t v16;

  v15 = 0;
  v16 = 0;
  result = sub_10004BC7C(&v15);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v16))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3474, "OI_STATUS _BCM_LEMetaTrackSensor(const BTAddress, uint8_t, BT_VSC_SENSOR_TRACK_CB)");
    }
    else
    {
      v7 = WORD2(v16);
      if (WORD1(v16) > WORD2(v16) && BYTE6(v16) == 2)
      {
        ++WORD2(v16);
        *(_BYTE *)(v15 + v7) = 12;
        v14[0] = BYTE5(a1);
        v14[1] = BYTE4(a1);
        v14[2] = BYTE3(a1);
        v14[3] = BYTE2(a1);
        v14[4] = BYTE1(a1);
        v14[5] = a1;
        if (HIBYTE(v16))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3477, "OI_STATUS _BCM_LEMetaTrackSensor(const BTAddress, uint8_t, BT_VSC_SENSOR_TRACK_CB)");
        }
        else if (WORD1(v16) - WORD2(v16) > 5 && BYTE6(v16) == 2)
        {
          sub_10004C878(v15 + WORD2(v16), (uint64_t)v14, 6uLL);
          v11 = WORD2(v16);
          v12 = WORD2(v16) + 6;
          WORD2(v16) += 6;
          if (HIBYTE(v16))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3478, "OI_STATUS _BCM_LEMetaTrackSensor(const BTAddress, uint8_t, BT_VSC_SENSOR_TRACK_CB)");
          }
          else if (WORD1(v16) > v12 && BYTE6(v16) == 2)
          {
            WORD2(v16) = v11 + 7;
            *(_BYTE *)(v15 + v12) = BYTE6(a1);
            if (HIBYTE(v16))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3479, "OI_STATUS _BCM_LEMetaTrackSensor(const BTAddress, uint8_t, BT_VSC_SENSOR_TRACK_CB)");
            }
            else
            {
              v13 = WORD2(v16);
              if (WORD1(v16) > WORD2(v16) && BYTE6(v16) == 2)
              {
                ++WORD2(v16);
                *(_BYTE *)(v15 + v13) = a2;
                return sub_10004C8A0(233, v15, BYTE4(v16), a3, (uint64_t)sub_1001A8ADC, v8, v9, v10);
              }
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C3458(uint64_t a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int16 v11;
  unsigned __int16 v12;
  unsigned __int16 v13;
  unsigned __int16 v14;
  unsigned __int16 v15;
  unsigned __int16 v16;
  uint64_t v17;
  uint64_t v18;

  v17 = 0;
  v18 = 0;
  result = sub_10004BC7C(&v17);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v18))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3731, "OI_STATUS _BCM_LEMetaAddToFilterAcceptListWithInterval(BT_VSCAddFilterAcceptListParams_t *, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v5 = WORD2(v18);
      if (WORD1(v18) > WORD2(v18) && BYTE6(v18) == 2)
      {
        ++WORD2(v18);
        *(_BYTE *)(v17 + v5) = 52;
        if (HIBYTE(v18))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3732, "OI_STATUS _BCM_LEMetaAddToFilterAcceptListWithInterval(BT_VSCAddFilterAcceptListParams_t *, BT_VSC_COMPLETE_CB)");
        }
        else
        {
          v6 = WORD2(v18);
          if (WORD1(v18) > WORD2(v18) && BYTE6(v18) == 2)
          {
            v7 = *(_BYTE *)(a1 + 20);
            ++WORD2(v18);
            *(_BYTE *)(v17 + v6) = v7;
            if (HIBYTE(v18))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3733, "OI_STATUS _BCM_LEMetaAddToFilterAcceptListWithInterval(BT_VSCAddFilterAcceptListParams_t *, BT_VSC_COMPLETE_CB)");
            }
            else if (WORD1(v18) - WORD2(v18) > 5 && BYTE6(v18) == 2)
            {
              sub_10004C878(v17 + WORD2(v18), *(_QWORD *)a1, 6uLL);
              v11 = WORD2(v18) + 6;
              WORD2(v18) += 6;
              if (HIBYTE(v18))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3734, "OI_STATUS _BCM_LEMetaAddToFilterAcceptListWithInterval(BT_VSCAddFilterAcceptListParams_t *, BT_VSC_COMPLETE_CB)");
              }
              else if (WORD1(v18) - v11 > 1 && BYTE6(v18) == 2)
              {
                *(_BYTE *)(v17 + v11) = *(_BYTE *)(a1 + 8);
                *(_BYTE *)(v17 + WORD2(v18) + 1) = *(_BYTE *)(a1 + 9);
                v12 = WORD2(v18) + 2;
                WORD2(v18) += 2;
                if (HIBYTE(v18))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3735, "OI_STATUS _BCM_LEMetaAddToFilterAcceptListWithInterval(BT_VSCAddFilterAcceptListParams_t *, BT_VSC_COMPLETE_CB)");
                }
                else if (WORD1(v18) - v12 > 1 && BYTE6(v18) == 2)
                {
                  *(_BYTE *)(v17 + v12) = *(_BYTE *)(a1 + 10);
                  *(_BYTE *)(v17 + WORD2(v18) + 1) = *(_BYTE *)(a1 + 11);
                  v13 = WORD2(v18) + 2;
                  WORD2(v18) += 2;
                  if (HIBYTE(v18))
                  {
                    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3736, "OI_STATUS _BCM_LEMetaAddToFilterAcceptListWithInterval(BT_VSCAddFilterAcceptListParams_t *, BT_VSC_COMPLETE_CB)");
                  }
                  else if (WORD1(v18) - v13 > 1 && BYTE6(v18) == 2)
                  {
                    *(_BYTE *)(v17 + v13) = *(_BYTE *)(a1 + 12);
                    *(_BYTE *)(v17 + WORD2(v18) + 1) = *(_BYTE *)(a1 + 13);
                    v14 = WORD2(v18) + 2;
                    WORD2(v18) += 2;
                    if (HIBYTE(v18))
                    {
                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3737, "OI_STATUS _BCM_LEMetaAddToFilterAcceptListWithInterval(BT_VSCAddFilterAcceptListParams_t *, BT_VSC_COMPLETE_CB)");
                    }
                    else if (WORD1(v18) - v14 > 1 && BYTE6(v18) == 2)
                    {
                      *(_BYTE *)(v17 + v14) = *(_BYTE *)(a1 + 14);
                      *(_BYTE *)(v17 + WORD2(v18) + 1) = *(_BYTE *)(a1 + 15);
                      v15 = WORD2(v18) + 2;
                      WORD2(v18) += 2;
                      if (HIBYTE(v18))
                      {
                        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3738, "OI_STATUS _BCM_LEMetaAddToFilterAcceptListWithInterval(BT_VSCAddFilterAcceptListParams_t *, BT_VSC_COMPLETE_CB)");
                      }
                      else if (WORD1(v18) - v15 > 1 && BYTE6(v18) == 2)
                      {
                        *(_BYTE *)(v17 + v15) = *(_BYTE *)(a1 + 16);
                        *(_BYTE *)(v17 + WORD2(v18) + 1) = *(_BYTE *)(a1 + 17);
                        v16 = WORD2(v18) + 2;
                        WORD2(v18) += 2;
                        if (HIBYTE(v18))
                        {
                          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3739, "OI_STATUS _BCM_LEMetaAddToFilterAcceptListWithInterval(BT_VSCAddFilterAcceptListParams_t *, BT_VSC_COMPLETE_CB)");
                        }
                        else if (WORD1(v18) - v16 > 1 && BYTE6(v18) == 2)
                        {
                          *(_BYTE *)(v17 + v16) = *(_BYTE *)(a1 + 18);
                          *(_BYTE *)(v17 + WORD2(v18) + 1) = *(_BYTE *)(a1 + 19);
                          WORD2(v18) += 2;
                          return sub_10004C8A0(233, v17, BYTE4(v18), a2, (uint64_t)sub_10004AE9C, v8, v9, v10);
                        }
                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }
                      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                    }
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C39C0(uint64_t a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[6];
  uint64_t v12;
  uint64_t v13;

  v12 = 0;
  v13 = 0;
  result = sub_10004BC7C(&v12);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v13))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3775, "OI_STATUS _BCM_LEMetaRemoveDeviceFromMatchingAddressList(const BTAddress, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v5 = WORD2(v13);
      if (WORD1(v13) > WORD2(v13) && BYTE6(v13) == 2)
      {
        ++WORD2(v13);
        *(_BYTE *)(v12 + v5) = 53;
        if (HIBYTE(v13))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3776, "OI_STATUS _BCM_LEMetaRemoveDeviceFromMatchingAddressList(const BTAddress, BT_VSC_COMPLETE_CB)");
        }
        else
        {
          v6 = WORD2(v13);
          if (WORD1(v13) > WORD2(v13) && BYTE6(v13) == 2)
          {
            ++WORD2(v13);
            *(_BYTE *)(v12 + v6) = 1;
            if (HIBYTE(v13))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3777, "OI_STATUS _BCM_LEMetaRemoveDeviceFromMatchingAddressList(const BTAddress, BT_VSC_COMPLETE_CB)");
            }
            else
            {
              v7 = WORD2(v13);
              if (WORD1(v13) > WORD2(v13) && BYTE6(v13) == 2)
              {
                ++WORD2(v13);
                *(_BYTE *)(v12 + v7) = BYTE6(a1);
                v11[0] = BYTE5(a1);
                v11[1] = BYTE4(a1);
                v11[2] = BYTE3(a1);
                v11[3] = BYTE2(a1);
                v11[4] = BYTE1(a1);
                v11[5] = a1;
                if (HIBYTE(v13))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3781, "OI_STATUS _BCM_LEMetaRemoveDeviceFromMatchingAddressList(const BTAddress, BT_VSC_COMPLETE_CB)");
                }
                else if (WORD1(v13) - WORD2(v13) > 5 && BYTE6(v13) == 2)
                {
                  sub_10004C878(v12 + WORD2(v13), (uint64_t)v11, 6uLL);
                  WORD2(v13) += 6;
                  return sub_10004C8A0(233, v12, BYTE4(v13), a2, (uint64_t)sub_10004AE9C, v8, v9, v10);
                }
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C3C40(const void *a1, int a2, const void *a3, int a4, char a5, char a6, int a7, char a8, char a9, char a10, char a11, char a12, char a13, char a14, __int16 a15, char a16, char a17, char a18, uint64_t (*a19)())
{
  uint64_t result;
  unsigned int v28;
  char v29;
  uint64_t v30;
  unsigned __int16 v31;
  uint64_t v32;
  int v33;
  unsigned __int16 v34;
  uint64_t v35;
  int v36;
  int v37;
  unsigned __int16 v38;
  uint64_t v39;
  int v40;
  unsigned __int16 v41;
  uint64_t v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned __int16 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE v53[6];
  uint64_t v54;
  uint64_t v55;

  v54 = 0;
  v55 = 0;
  result = sub_10004BC7C(&v54);
  if (!(_DWORD)result)
  {
    if (a7)
    {
      if (HIBYTE(v55))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3813, "OI_STATUS _BCM_LEMetaAdvMatchingRuleEnhanced(const uint8_t *, uint16_t, const uint8_t *, uint16_t, uint8_t, uint8_t, _Bool, uint8_t, const BTAddress, uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
      }
      else
      {
        v28 = WORD2(v55);
        if (WORD1(v55) > WORD2(v55) && BYTE6(v55) == 2)
        {
          v29 = 55;
          goto LABEL_11;
        }
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    if (HIBYTE(v55))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3815, "OI_STATUS _BCM_LEMetaAdvMatchingRuleEnhanced(const uint8_t *, uint16_t, const uint8_t *, uint16_t, uint8_t, uint8_t, _Bool, uint8_t, const BTAddress, uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v28 = WORD2(v55);
      if (WORD1(v55) > WORD2(v55) && BYTE6(v55) == 2)
      {
        v29 = 56;
LABEL_11:
        WORD2(v55) = v28 + 1;
        *(_BYTE *)(v54 + v28) = v29;
        if (HIBYTE(v55))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3818, "OI_STATUS _BCM_LEMetaAdvMatchingRuleEnhanced(const uint8_t *, uint16_t, const uint8_t *, uint16_t, uint8_t, uint8_t, _Bool, uint8_t, const BTAddress, uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
        }
        else
        {
          v30 = WORD2(v55);
          if (WORD1(v55) > WORD2(v55) && BYTE6(v55) == 2)
          {
            ++WORD2(v55);
            *(_BYTE *)(v54 + v30) = a8;
            v53[0] = a14;
            v53[1] = a13;
            v53[2] = a12;
            v53[3] = a11;
            v53[4] = a10;
            v53[5] = a9;
            if (HIBYTE(v55))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3821, "OI_STATUS _BCM_LEMetaAdvMatchingRuleEnhanced(const uint8_t *, uint16_t, const uint8_t *, uint16_t, uint8_t, uint8_t, _Bool, uint8_t, const BTAddress, uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
            }
            else if (WORD1(v55) - WORD2(v55) > 5 && BYTE6(v55) == 2)
            {
              sub_10004C878(v54 + WORD2(v55), (uint64_t)v53, 6uLL);
              v31 = WORD2(v55) + 6;
              WORD2(v55) += 6;
              v32 = v54;
              if (HIBYTE(v55))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3822, "OI_STATUS _BCM_LEMetaAdvMatchingRuleEnhanced(const uint8_t *, uint16_t, const uint8_t *, uint16_t, uint8_t, uint8_t, _Bool, uint8_t, const BTAddress, uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                v33 = 0;
              }
              else
              {
                v33 = WORD1(v55) - v31;
              }
              if (v33 < a2 || BYTE6(v55) != 2)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              memmove((void *)(v32 + v31), a1, a2);
              v34 = WORD2(v55) + a2;
              WORD2(v55) += a2;
              v35 = v54;
              if (HIBYTE(v55))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3823, "OI_STATUS _BCM_LEMetaAdvMatchingRuleEnhanced(const uint8_t *, uint16_t, const uint8_t *, uint16_t, uint8_t, uint8_t, _Bool, uint8_t, const BTAddress, uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                v36 = 0;
              }
              else
              {
                v36 = WORD1(v55) - v34;
              }
              v37 = 22 - a2;
              if (v36 < v37 || BYTE6(v55) != 2)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              bzero((void *)(v35 + v34), v37);
              v38 = WORD2(v55) + v37;
              WORD2(v55) = v38;
              v39 = v54;
              if (HIBYTE(v55))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3824, "OI_STATUS _BCM_LEMetaAdvMatchingRuleEnhanced(const uint8_t *, uint16_t, const uint8_t *, uint16_t, uint8_t, uint8_t, _Bool, uint8_t, const BTAddress, uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                v40 = 0;
              }
              else
              {
                v40 = WORD1(v55) - v38;
              }
              if (v40 < a4 || BYTE6(v55) != 2)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              memmove((void *)(v39 + v38), a3, a4);
              v41 = WORD2(v55) + a4;
              WORD2(v55) += a4;
              v42 = v54;
              if (HIBYTE(v55))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3825, "OI_STATUS _BCM_LEMetaAdvMatchingRuleEnhanced(const uint8_t *, uint16_t, const uint8_t *, uint16_t, uint8_t, uint8_t, _Bool, uint8_t, const BTAddress, uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                v43 = 0;
              }
              else
              {
                v43 = WORD1(v55) - v41;
              }
              v44 = 22 - a4;
              if (v43 < v44 || BYTE6(v55) != 2)
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              bzero((void *)(v42 + v41), v44);
              v48 = WORD2(v55) + v44;
              WORD2(v55) += v44;
              if (HIBYTE(v55))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3826, "OI_STATUS _BCM_LEMetaAdvMatchingRuleEnhanced(const uint8_t *, uint16_t, const uint8_t *, uint16_t, uint8_t, uint8_t, _Bool, uint8_t, const BTAddress, uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
              }
              else if (WORD1(v55) > v48 && BYTE6(v55) == 2)
              {
                WORD2(v55) = v48 + 1;
                *(_BYTE *)(v54 + v48) = a5;
                if (HIBYTE(v55))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3827, "OI_STATUS _BCM_LEMetaAdvMatchingRuleEnhanced(const uint8_t *, uint16_t, const uint8_t *, uint16_t, uint8_t, uint8_t, _Bool, uint8_t, const BTAddress, uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                }
                else
                {
                  v49 = WORD2(v55);
                  if (WORD1(v55) > WORD2(v55) && BYTE6(v55) == 2)
                  {
                    ++WORD2(v55);
                    *(_BYTE *)(v54 + v49) = a6;
                    if (HIBYTE(v55))
                    {
                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3828, "OI_STATUS _BCM_LEMetaAdvMatchingRuleEnhanced(const uint8_t *, uint16_t, const uint8_t *, uint16_t, uint8_t, uint8_t, _Bool, uint8_t, const BTAddress, uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                    }
                    else
                    {
                      v50 = WORD2(v55);
                      if (WORD1(v55) > WORD2(v55) && BYTE6(v55) == 2)
                      {
                        ++WORD2(v55);
                        *(_BYTE *)(v54 + v50) = a16;
                        if (HIBYTE(v55))
                        {
                          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3829, "OI_STATUS _BCM_LEMetaAdvMatchingRuleEnhanced(const uint8_t *, uint16_t, const uint8_t *, uint16_t, uint8_t, uint8_t, _Bool, uint8_t, const BTAddress, uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                        }
                        else
                        {
                          v51 = WORD2(v55);
                          if (WORD1(v55) > WORD2(v55) && BYTE6(v55) == 2)
                          {
                            ++WORD2(v55);
                            *(_BYTE *)(v54 + v51) = a17;
                            if (HIBYTE(v55))
                            {
                              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3830, "OI_STATUS _BCM_LEMetaAdvMatchingRuleEnhanced(const uint8_t *, uint16_t, const uint8_t *, uint16_t, uint8_t, uint8_t, _Bool, uint8_t, const BTAddress, uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                            }
                            else
                            {
                              v52 = WORD2(v55);
                              if (WORD1(v55) > WORD2(v55) && BYTE6(v55) == 2)
                              {
                                ++WORD2(v55);
                                *(_BYTE *)(v54 + v52) = a18;
                                return sub_10004C8A0(233, v54, BYTE4(v55), a19, (uint64_t)sub_10004AE9C, v45, v46, v47);
                              }
                            }
                            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                          }
                        }
                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }
                    }
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                }
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C4390(uint64_t (*a1)())
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v7 = 0;
  v8 = 0;
  result = sub_10004BC7C(&v7);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v8))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3897, "OI_STATUS _BCM_LEMetaAdvMatchingRuleStatus(BT_VSC_READ_STATUS_DF_CB)");
    }
    else
    {
      v6 = WORD2(v8);
      if (WORD1(v8) > WORD2(v8) && BYTE6(v8) == 2)
      {
        ++WORD2(v8);
        *(_BYTE *)(v7 + v6) = 57;
        return sub_10004C8A0(233, v7, BYTE4(v8), a1, (uint64_t)sub_1001A5998, v3, v4, v5);
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C445C(char a1, const void *a2, int a3, const void *a4, int a5, uint64_t (*a6)())
{
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  unsigned __int16 v18;
  uint64_t v19;
  int v20;
  int v21;
  unsigned __int16 v22;
  uint64_t v23;
  int v24;
  unsigned __int16 v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v32 = 0;
  v33 = 0;
  result = sub_10004BC7C(&v32);
  if ((_DWORD)result)
    return result;
  if (HIBYTE(v33))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3877, "OI_STATUS _BCM_LEMetaMatchingRulesEnhancedSetExtendedBlobAndMask(uint8_t, const uint8_t *, uint16_t, const uint8_t *, uint16_t, BT_VSC_COMPLETE_CB)");
    goto LABEL_31;
  }
  v13 = WORD2(v33);
  if (WORD1(v33) <= WORD2(v33) || BYTE6(v33) != 2)
LABEL_31:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  ++WORD2(v33);
  *(_BYTE *)(v32 + v13) = 91;
  if (HIBYTE(v33))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3878, "OI_STATUS _BCM_LEMetaMatchingRulesEnhancedSetExtendedBlobAndMask(uint8_t, const uint8_t *, uint16_t, const uint8_t *, uint16_t, BT_VSC_COMPLETE_CB)");
    goto LABEL_33;
  }
  v14 = WORD2(v33);
  if (WORD1(v33) <= WORD2(v33) || BYTE6(v33) != 2)
LABEL_33:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  ++WORD2(v33);
  *(_BYTE *)(v32 + v14) = a1;
  v15 = v32;
  v16 = WORD2(v33);
  if (HIBYTE(v33))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3879, "OI_STATUS _BCM_LEMetaMatchingRulesEnhancedSetExtendedBlobAndMask(uint8_t, const uint8_t *, uint16_t, const uint8_t *, uint16_t, BT_VSC_COMPLETE_CB)");
    v17 = 0;
  }
  else
  {
    v17 = WORD1(v33) - WORD2(v33);
  }
  if (v17 < a3 || BYTE6(v33) != 2)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  memmove((void *)(v15 + v16), a2, a3);
  v18 = WORD2(v33) + a3;
  WORD2(v33) += a3;
  v19 = v32;
  if (HIBYTE(v33))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3880, "OI_STATUS _BCM_LEMetaMatchingRulesEnhancedSetExtendedBlobAndMask(uint8_t, const uint8_t *, uint16_t, const uint8_t *, uint16_t, BT_VSC_COMPLETE_CB)");
    v20 = 0;
  }
  else
  {
    v20 = WORD1(v33) - v18;
  }
  v21 = 3 - a3;
  if (v20 < v21 || BYTE6(v33) != 2)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  bzero((void *)(v19 + v18), v21);
  v22 = WORD2(v33) + v21;
  WORD2(v33) = v22;
  v23 = v32;
  if (HIBYTE(v33))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3881, "OI_STATUS _BCM_LEMetaMatchingRulesEnhancedSetExtendedBlobAndMask(uint8_t, const uint8_t *, uint16_t, const uint8_t *, uint16_t, BT_VSC_COMPLETE_CB)");
    v24 = 0;
  }
  else
  {
    v24 = WORD1(v33) - v22;
  }
  if (v24 < a5 || BYTE6(v33) != 2)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  memmove((void *)(v23 + v22), a4, a5);
  v25 = WORD2(v33) + a5;
  WORD2(v33) += a5;
  v26 = v32;
  if (HIBYTE(v33))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3882, "OI_STATUS _BCM_LEMetaMatchingRulesEnhancedSetExtendedBlobAndMask(uint8_t, const uint8_t *, uint16_t, const uint8_t *, uint16_t, BT_VSC_COMPLETE_CB)");
    v27 = 0;
  }
  else
  {
    v27 = WORD1(v33) - v25;
  }
  v28 = 3 - a5;
  if (v27 < v28 || BYTE6(v33) != 2)
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  bzero((void *)(v26 + v25), v28);
  WORD2(v33) += v28;
  return sub_10004C8A0(233, v32, BYTE4(v33), a6, (uint64_t)sub_10004AE9C, v29, v30, v31);
}

uint64_t sub_1001C4818(char a1, int a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = 0;
  v14 = 0;
  result = sub_10004BC7C(&v13);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v14))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3912, "OI_STATUS _BCM_LEMetaGetLPCoreStatistics(_Bool, uint, BT_VSC_READ_LPCORE_STATS_CB)");
    }
    else
    {
      v10 = WORD2(v14);
      if (WORD1(v14) > WORD2(v14) && BYTE6(v14) == 2)
      {
        ++WORD2(v14);
        *(_BYTE *)(v13 + v10) = a1;
        if (a2 == 1)
        {
          if (HIBYTE(v14))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3917, "OI_STATUS _BCM_LEMetaGetLPCoreStatistics(_Bool, uint, BT_VSC_READ_LPCORE_STATS_CB)");
          }
          else
          {
            v11 = WORD2(v14);
            if (WORD1(v14) > WORD2(v14) && BYTE6(v14) == 2)
            {
              ++WORD2(v14);
              *(_BYTE *)(v13 + v11) = 0;
              v12 = 583;
              return sub_10004C8A0(v12, v13, BYTE4(v14), a3, (uint64_t)sub_1001A8E30, v7, v8, v9);
            }
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        v12 = 571;
        return sub_10004C8A0(v12, v13, BYTE4(v14), a3, (uint64_t)sub_1001A8E30, v7, v8, v9);
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C4978(char a1, char a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v12 = 0;
  v13 = 0;
  result = sub_10004BC7C(&v12);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v13))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3931, "OI_STATUS _BCM_LEMetaGetScanStats(_Bool, uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v10 = WORD2(v13);
      if (WORD1(v13) > WORD2(v13) && BYTE6(v13) == 2)
      {
        ++WORD2(v13);
        *(_BYTE *)(v12 + v10) = a1;
        if (HIBYTE(v13))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3932, "OI_STATUS _BCM_LEMetaGetScanStats(_Bool, uint8_t, BT_VSC_COMPLETE_CB)");
        }
        else
        {
          v11 = WORD2(v13);
          if (WORD1(v13) > WORD2(v13) && BYTE6(v13) == 2)
          {
            ++WORD2(v13);
            *(_BYTE *)(v12 + v11) = a2;
            return sub_10004C8A0(583, v12, BYTE4(v13), a3, (uint64_t)sub_10004AE9C, v7, v8, v9);
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C4AC8(char a1, uint64_t a2, char a3, uint64_t (*a4)())
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int16 v13;
  unsigned __int16 v14;
  _BYTE v15[6];
  uint64_t v16;
  uint64_t v17;

  v16 = 0;
  v17 = 0;
  result = sub_10004BC7C(&v16);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v17))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3947, "OI_STATUS _BCM_LEMetaAdvMatchingRuleRemoveDuplicateEntry(uint8_t, const BTAddress, uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v9 = WORD2(v17);
      if (WORD1(v17) > WORD2(v17) && BYTE6(v17) == 2)
      {
        ++WORD2(v17);
        *(_BYTE *)(v16 + v9) = a1;
        v15[0] = BYTE5(a2);
        v15[1] = BYTE4(a2);
        v15[2] = BYTE3(a2);
        v15[3] = BYTE2(a2);
        v15[4] = BYTE1(a2);
        v15[5] = a2;
        if (HIBYTE(v17))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3950, "OI_STATUS _BCM_LEMetaAdvMatchingRuleRemoveDuplicateEntry(uint8_t, const BTAddress, uint8_t, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v17) - WORD2(v17) > 5 && BYTE6(v17) == 2)
        {
          sub_10004C878(v16 + WORD2(v17), (uint64_t)v15, 6uLL);
          v13 = WORD2(v17);
          v14 = WORD2(v17) + 6;
          WORD2(v17) += 6;
          if (HIBYTE(v17))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3951, "OI_STATUS _BCM_LEMetaAdvMatchingRuleRemoveDuplicateEntry(uint8_t, const BTAddress, uint8_t, BT_VSC_COMPLETE_CB)");
          }
          else if (WORD1(v17) > v14 && BYTE6(v17) == 2)
          {
            WORD2(v17) = v13 + 7;
            *(_BYTE *)(v16 + v14) = a3;
            return sub_10004C8A0(555, v16, BYTE4(v17), a4, (uint64_t)sub_10004AE9C, v10, v11, v12);
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C4CD4(uint64_t a1, unsigned int a2, char a3, char a4, uint64_t (*a5)())
{
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v28 = 0;
  v29 = 0;
  result = sub_10004BC7C(&v28);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v29))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3966, "OI_STATUS _BCM_LEMetaAdvMatchingRuleRemoveMultipleDuplicateFilterEntries(LE_Address *, uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v11 = WORD2(v29);
      if (WORD1(v29) > WORD2(v29) && BYTE6(v29) == 2)
      {
        ++WORD2(v29);
        *(_BYTE *)(v28 + v11) = 77;
        if (HIBYTE(v29))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3967, "OI_STATUS _BCM_LEMetaAdvMatchingRuleRemoveMultipleDuplicateFilterEntries(LE_Address *, uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
        }
        else
        {
          v12 = WORD2(v29);
          if (WORD1(v29) > WORD2(v29) && BYTE6(v29) == 2)
          {
            ++WORD2(v29);
            *(_BYTE *)(v28 + v12) = a2;
            if (!a2)
              goto LABEL_18;
            v13 = a2;
            v14 = a1 + 1;
            do
            {
              if (HIBYTE(v29))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3969, "OI_STATUS _BCM_LEMetaAdvMatchingRuleRemoveMultipleDuplicateFilterEntries(LE_Address *, uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
LABEL_40:
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              v15 = WORD2(v29);
              if (WORD1(v29) <= WORD2(v29) || BYTE6(v29) != 2)
                goto LABEL_40;
              v16 = *(_BYTE *)(v14 - 1);
              ++WORD2(v29);
              *(_BYTE *)(v28 + v15) = v16;
              if (HIBYTE(v29))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3970, "OI_STATUS _BCM_LEMetaAdvMatchingRuleRemoveMultipleDuplicateFilterEntries(LE_Address *, uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
LABEL_42:
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              if (WORD1(v29) - WORD2(v29) <= 5 || BYTE6(v29) != 2)
                goto LABEL_42;
              sub_10004C878(v28 + WORD2(v29), v14, 6uLL);
              WORD2(v29) += 6;
              v14 += 7;
              --v13;
            }
            while (v13);
            if (a2 <= 7)
            {
LABEL_18:
              v20 = a2;
              v21 = a1 - a2 + 8 * a2 + 1;
              v22 = v20 - 8;
              while (!HIBYTE(v29))
              {
                v23 = WORD2(v29);
                if (WORD1(v29) <= WORD2(v29) || BYTE6(v29) != 2)
                  goto LABEL_36;
                v24 = *(_BYTE *)(v21 - 1);
                ++WORD2(v29);
                *(_BYTE *)(v28 + v23) = v24;
                if (HIBYTE(v29))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3974, "OI_STATUS _BCM_LEMetaAdvMatchingRuleRemoveMultipleDuplicateFilterEntries(LE_Address *, uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
LABEL_38:
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
                if (WORD1(v29) - WORD2(v29) <= 5 || BYTE6(v29) != 2)
                  goto LABEL_38;
                sub_10004C878(v28 + WORD2(v29), v21, 6uLL);
                WORD2(v29) += 6;
                v21 += 7;
                if (__CFADD__(v22++, 1))
                  goto LABEL_27;
              }
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3973, "OI_STATUS _BCM_LEMetaAdvMatchingRuleRemoveMultipleDuplicateFilterEntries(LE_Address *, uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
LABEL_36:
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
LABEL_27:
            if (HIBYTE(v29))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3976, "OI_STATUS _BCM_LEMetaAdvMatchingRuleRemoveMultipleDuplicateFilterEntries(LE_Address *, uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
            }
            else
            {
              v26 = WORD2(v29);
              if (WORD1(v29) > WORD2(v29) && BYTE6(v29) == 2)
              {
                ++WORD2(v29);
                *(_BYTE *)(v28 + v26) = a3;
                if (HIBYTE(v29))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3977, "OI_STATUS _BCM_LEMetaAdvMatchingRuleRemoveMultipleDuplicateFilterEntries(LE_Address *, uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                }
                else
                {
                  v27 = WORD2(v29);
                  if (WORD1(v29) > WORD2(v29) && BYTE6(v29) == 2)
                  {
                    ++WORD2(v29);
                    *(_BYTE *)(v28 + v27) = a4;
                    return sub_10004C8A0(233, v28, BYTE4(v29), a5, (uint64_t)sub_10004AE9C, v17, v18, v19);
                  }
                }
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C5180(char a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v9 = 0;
  v10 = 0;
  result = sub_10004BC7C(&v9);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v10))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3991, "OI_STATUS _BCM_LEMetaAdvMatchingRuleWipeDuplicateList(uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v8 = WORD2(v10);
      if (WORD1(v10) > WORD2(v10) && BYTE6(v10) == 2)
      {
        ++WORD2(v10);
        *(_BYTE *)(v9 + v8) = a1;
        return sub_10004C8A0(554, v9, BYTE4(v10), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C524C(unsigned __int8 *a1, uint64_t (*a2)())
{
  uint64_t result;
  int v5;
  unsigned int v6;
  char v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int16 v13;
  unsigned __int16 v14;
  unsigned __int8 v15;
  __int16 v16;
  unsigned __int16 v17;
  unsigned __int8 v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned __int8 v26;
  uint64_t v27;
  uint64_t v28;

  v27 = 0;
  v28 = 0;
  result = sub_10004BC7C(&v27);
  if (!(_DWORD)result)
  {
    v5 = *a1;
    if (v5 != 3)
    {
      if (v5 == 1)
      {
        if (HIBYTE(v28))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4007, "OI_STATUS _BCM_LEMetaAddToFilterAcceptListWithOptions(BT_VSCAddFilterAcceptListOptions_t *, BT_VSC_COMPLETE_CB)");
        }
        else
        {
          v6 = WORD2(v28);
          if (WORD1(v28) > WORD2(v28) && BYTE6(v28) == 2)
          {
            v7 = 74;
            goto LABEL_16;
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      if (HIBYTE(v28))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4011, "OI_STATUS _BCM_LEMetaAddToFilterAcceptListWithOptions(BT_VSCAddFilterAcceptListOptions_t *, BT_VSC_COMPLETE_CB)");
      }
      else
      {
        v6 = WORD2(v28);
        if (WORD1(v28) > WORD2(v28) && BYTE6(v28) == 2)
        {
LABEL_15:
          v7 = 92;
LABEL_16:
          WORD2(v28) = v6 + 1;
          *(_BYTE *)(v27 + v6) = v7;
          if (HIBYTE(v28))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4013, "OI_STATUS _BCM_LEMetaAddToFilterAcceptListWithOptions(BT_VSCAddFilterAcceptListOptions_t *, BT_VSC_COMPLETE_CB)");
          }
          else
          {
            v8 = WORD2(v28);
            if (WORD1(v28) > WORD2(v28) && BYTE6(v28) == 2)
            {
              v9 = a1[16];
              ++WORD2(v28);
              *(_BYTE *)(v27 + v8) = v9;
              if (HIBYTE(v28))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4014, "OI_STATUS _BCM_LEMetaAddToFilterAcceptListWithOptions(BT_VSCAddFilterAcceptListOptions_t *, BT_VSC_COMPLETE_CB)");
              }
              else if (WORD1(v28) - WORD2(v28) > 5 && BYTE6(v28) == 2)
              {
                sub_10004C878(v27 + WORD2(v28), *((_QWORD *)a1 + 1), 6uLL);
                v13 = WORD2(v28);
                v14 = WORD2(v28) + 6;
                WORD2(v28) += 6;
                if (HIBYTE(v28))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4015, "OI_STATUS _BCM_LEMetaAddToFilterAcceptListWithOptions(BT_VSCAddFilterAcceptListOptions_t *, BT_VSC_COMPLETE_CB)");
                }
                else if (WORD1(v28) > v14 && BYTE6(v28) == 2)
                {
                  v15 = a1[17];
                  WORD2(v28) = v13 + 7;
                  *(_BYTE *)(v27 + v14) = v15;
                  if (HIBYTE(v28))
                  {
                    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4016, "OI_STATUS _BCM_LEMetaAddToFilterAcceptListWithOptions(BT_VSCAddFilterAcceptListOptions_t *, BT_VSC_COMPLETE_CB)");
                  }
                  else if (WORD1(v28) > WORD2(v28) && BYTE6(v28) == 2)
                  {
                    *(_BYTE *)(v27 + WORD2(v28)) = a1[18];
                    v16 = WORD2(v28);
                    v17 = ++WORD2(v28);
                    if (HIBYTE(v28))
                    {
                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4017, "OI_STATUS _BCM_LEMetaAddToFilterAcceptListWithOptions(BT_VSCAddFilterAcceptListOptions_t *, BT_VSC_COMPLETE_CB)");
                    }
                    else if (WORD1(v28) > v17 && BYTE6(v28) == 2)
                    {
                      v18 = a1[19];
                      WORD2(v28) = v16 + 2;
                      *(_BYTE *)(v27 + v17) = v18;
                      if (*a1 < 2u)
                        return sub_10004C8A0(233, v27, BYTE4(v28), a2, (uint64_t)sub_10004AE9C, v10, v11, v12);
                      if (HIBYTE(v28))
                      {
                        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4019, "OI_STATUS _BCM_LEMetaAddToFilterAcceptListWithOptions(BT_VSCAddFilterAcceptListOptions_t *, BT_VSC_COMPLETE_CB)");
                      }
                      else
                      {
                        v19 = WORD2(v28);
                        if (WORD1(v28) > WORD2(v28) && BYTE6(v28) == 2)
                        {
                          v20 = a1[20];
                          ++WORD2(v28);
                          *(_BYTE *)(v27 + v19) = v20;
                          if (*a1 == 3)
                          {
                            if (HIBYTE(v28))
                            {
                              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4022, "OI_STATUS _BCM_LEMetaAddToFilterAcceptListWithOptions(BT_VSCAddFilterAcceptListOptions_t *, BT_VSC_COMPLETE_CB)");
                            }
                            else
                            {
                              v21 = WORD2(v28);
                              if (WORD1(v28) > WORD2(v28) && BYTE6(v28) == 2)
                              {
                                v22 = a1[21];
                                ++WORD2(v28);
                                *(_BYTE *)(v27 + v21) = v22;
                                if (HIBYTE(v28))
                                {
                                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4023, "OI_STATUS _BCM_LEMetaAddToFilterAcceptListWithOptions(BT_VSCAddFilterAcceptListOptions_t *, BT_VSC_COMPLETE_CB)");
                                }
                                else
                                {
                                  v23 = WORD2(v28);
                                  if (WORD1(v28) > WORD2(v28) && BYTE6(v28) == 2)
                                  {
                                    v24 = a1[22];
                                    ++WORD2(v28);
                                    *(_BYTE *)(v27 + v23) = v24;
                                    if (HIBYTE(v28))
                                    {
                                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4024, "OI_STATUS _BCM_LEMetaAddToFilterAcceptListWithOptions(BT_VSCAddFilterAcceptListOptions_t *, BT_VSC_COMPLETE_CB)");
                                    }
                                    else
                                    {
                                      v25 = WORD2(v28);
                                      if (WORD1(v28) > WORD2(v28) && BYTE6(v28) == 2)
                                      {
                                        v26 = a1[23];
                                        ++WORD2(v28);
                                        *(_BYTE *)(v27 + v25) = v26;
                                        return sub_10004C8A0(233, v27, BYTE4(v28), a2, (uint64_t)sub_10004AE9C, v10, v11, v12);
                                      }
                                    }
                                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/St"
                                                           "ack/vsc/bcm/bcm_vsc.c");
                                  }
                                }
                                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/bcm/bcm_vsc.c");
                              }
                            }
                            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                          }
                          return sub_10004C8A0(233, v27, BYTE4(v28), a2, (uint64_t)sub_10004AE9C, v10, v11, v12);
                        }
                      }
                      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                    }
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    if (HIBYTE(v28))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4009, "OI_STATUS _BCM_LEMetaAddToFilterAcceptListWithOptions(BT_VSCAddFilterAcceptListOptions_t *, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v6 = WORD2(v28);
      if (WORD1(v28) > WORD2(v28) && BYTE6(v28) == 2)
        goto LABEL_15;
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C5894(uint64_t a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v11 = 0;
  v12 = 0;
  result = sub_10004BC7C(&v11);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v12))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4039, "OI_STATUS _BCM_LEMetaAddToFilterAcceptListWithOptionsPollStats(BT_VSCAddFilterAcceptListOptionsPollStats_t *, BT_VSC_ADD_DEVICE_TO_FILTERACCEPTLIST_WITH_OPTIONS_POLL_STATS_CB)");
    }
    else
    {
      v5 = WORD2(v12);
      if (WORD1(v12) > WORD2(v12) && BYTE6(v12) == 2)
      {
        ++WORD2(v12);
        *(_BYTE *)(v11 + v5) = 75;
        if (HIBYTE(v12))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4040, "OI_STATUS _BCM_LEMetaAddToFilterAcceptListWithOptionsPollStats(BT_VSCAddFilterAcceptListOptionsPollStats_t *, BT_VSC_ADD_DEVICE_TO_FILTERACCEPTLIST_WITH_OPTIONS_POLL_STATS_CB)");
        }
        else
        {
          v6 = WORD2(v12);
          if (WORD1(v12) > WORD2(v12) && BYTE6(v12) == 2)
          {
            v7 = *(_BYTE *)(a1 + 8);
            ++WORD2(v12);
            *(_BYTE *)(v11 + v6) = v7;
            if (HIBYTE(v12))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4041, "OI_STATUS _BCM_LEMetaAddToFilterAcceptListWithOptionsPollStats(BT_VSCAddFilterAcceptListOptionsPollStats_t *, BT_VSC_ADD_DEVICE_TO_FILTERACCEPTLIST_WITH_OPTIONS_POLL_STATS_CB)");
            }
            else if (WORD1(v12) - WORD2(v12) > 5 && BYTE6(v12) == 2)
            {
              sub_10004C878(v11 + WORD2(v12), *(_QWORD *)a1, 6uLL);
              WORD2(v12) += 6;
              return sub_10004C8A0(233, v11, BYTE4(v12), a2, (uint64_t)sub_1001A9E14, v8, v9, v10);
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C5A6C(char a1, __int16 a2, __int16 a3, char a4, uint64_t (*a5)())
{
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int16 v16;
  __int16 v17;
  unsigned __int16 v18;
  uint64_t v19;
  uint64_t v20;

  v19 = 0;
  v20 = 0;
  result = sub_10004BC7C(&v19);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v20))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4056, "OI_STATUS _BCM_LEMetaBTSCLESetConnectionScan(_Bool, uint16_t, uint16_t, _Bool, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v14 = WORD2(v20);
      if (WORD1(v20) > WORD2(v20) && BYTE6(v20) == 2)
      {
        ++WORD2(v20);
        *(_BYTE *)(v19 + v14) = 76;
        if (HIBYTE(v20))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4057, "OI_STATUS _BCM_LEMetaBTSCLESetConnectionScan(_Bool, uint16_t, uint16_t, _Bool, BT_VSC_COMPLETE_CB)");
        }
        else
        {
          v15 = WORD2(v20);
          if (WORD1(v20) > WORD2(v20) && BYTE6(v20) == 2)
          {
            ++WORD2(v20);
            *(_BYTE *)(v19 + v15) = a1;
            if (HIBYTE(v20))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4058, "OI_STATUS _BCM_LEMetaBTSCLESetConnectionScan(_Bool, uint16_t, uint16_t, _Bool, BT_VSC_COMPLETE_CB)");
            }
            else if (WORD1(v20) - WORD2(v20) > 1 && BYTE6(v20) == 2)
            {
              *(_WORD *)(v19 + WORD2(v20)) = a2;
              v16 = WORD2(v20) + 2;
              WORD2(v20) += 2;
              if (HIBYTE(v20))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4059, "OI_STATUS _BCM_LEMetaBTSCLESetConnectionScan(_Bool, uint16_t, uint16_t, _Bool, BT_VSC_COMPLETE_CB)");
              }
              else if (WORD1(v20) - v16 > 1 && BYTE6(v20) == 2)
              {
                *(_BYTE *)(v19 + v16) = a3;
                *(_BYTE *)(v19 + WORD2(v20) + 1) = HIBYTE(a3);
                v17 = WORD2(v20);
                v18 = WORD2(v20) + 2;
                WORD2(v20) += 2;
                if (HIBYTE(v20))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4060, "OI_STATUS _BCM_LEMetaBTSCLESetConnectionScan(_Bool, uint16_t, uint16_t, _Bool, BT_VSC_COMPLETE_CB)");
                }
                else if (WORD1(v20) > v18 && BYTE6(v20) == 2)
                {
                  WORD2(v20) = v17 + 3;
                  *(_BYTE *)(v19 + v18) = a4;
                  return sub_10004C8A0(233, v19, BYTE4(v20), a5, (uint64_t)sub_10004AE9C, v11, v12, v13);
                }
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C5D70(uint64_t a1, unsigned int a2, unsigned int a3, char a4, char a5, char a6, uint64_t (*a7)())
{
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int16 v21;
  unsigned __int16 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;

  v30 = 0;
  v31 = 0;
  result = sub_10004BC7C(&v30);
  if ((_DWORD)result)
    return result;
  if (HIBYTE(v31))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3272, "OI_STATUS _BCM_LEMetaScanFilterUUIDV2(uint8_t *, uint8_t, uint8_t, _Bool, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
    goto LABEL_41;
  }
  v18 = WORD2(v31);
  if (WORD1(v31) <= WORD2(v31) || BYTE6(v31) != 2)
LABEL_41:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  ++WORD2(v31);
  *(_BYTE *)(v30 + v18) = 80;
  if (HIBYTE(v31))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3274, "OI_STATUS _BCM_LEMetaScanFilterUUIDV2(uint8_t *, uint8_t, uint8_t, _Bool, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
    goto LABEL_43;
  }
  v19 = WORD2(v31);
  if (WORD1(v31) <= WORD2(v31) || BYTE6(v31) != 2)
LABEL_43:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  ++WORD2(v31);
  *(_BYTE *)(v30 + v19) = a3;
  if (HIBYTE(v31))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3275, "OI_STATUS _BCM_LEMetaScanFilterUUIDV2(uint8_t *, uint8_t, uint8_t, _Bool, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
    goto LABEL_45;
  }
  if (WORD1(v31) - WORD2(v31) <= 5 || BYTE6(v31) != 2)
LABEL_45:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v20 = v30 + WORD2(v31);
  *(_WORD *)(v20 + 4) = 0;
  *(_DWORD *)v20 = 0;
  v21 = WORD2(v31);
  v22 = WORD2(v31) + 6;
  WORD2(v31) += 6;
  if (HIBYTE(v31))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3276, "OI_STATUS _BCM_LEMetaScanFilterUUIDV2(uint8_t *, uint8_t, uint8_t, _Bool, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
    goto LABEL_47;
  }
  if (WORD1(v31) <= v22 || BYTE6(v31) != 2)
LABEL_47:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  WORD2(v31) = v21 + 7;
  *(_BYTE *)(v30 + v22) = 2;
  if (HIBYTE(v31))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3277, "OI_STATUS _BCM_LEMetaScanFilterUUIDV2(uint8_t *, uint8_t, uint8_t, _Bool, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
    goto LABEL_49;
  }
  v23 = WORD2(v31);
  if (WORD1(v31) <= WORD2(v31) || BYTE6(v31) != 2)
LABEL_49:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  ++WORD2(v31);
  *(_BYTE *)(v30 + v23) = 0;
  if (HIBYTE(v31))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3279, "OI_STATUS _BCM_LEMetaScanFilterUUIDV2(uint8_t *, uint8_t, uint8_t, _Bool, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
    goto LABEL_51;
  }
  v24 = WORD2(v31);
  if (WORD1(v31) <= WORD2(v31) || BYTE6(v31) != 2)
LABEL_51:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  ++WORD2(v31);
  *(_BYTE *)(v30 + v24) = a4;
  if (HIBYTE(v31))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3280, "OI_STATUS _BCM_LEMetaScanFilterUUIDV2(uint8_t *, uint8_t, uint8_t, _Bool, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
    goto LABEL_53;
  }
  v25 = WORD2(v31);
  if (WORD1(v31) <= WORD2(v31) || BYTE6(v31) != 2)
LABEL_53:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  ++WORD2(v31);
  *(_BYTE *)(v30 + v25) = a5;
  if (HIBYTE(v31))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3281, "OI_STATUS _BCM_LEMetaScanFilterUUIDV2(uint8_t *, uint8_t, uint8_t, _Bool, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
    goto LABEL_55;
  }
  v26 = WORD2(v31);
  if (WORD1(v31) <= WORD2(v31) || BYTE6(v31) != 2)
LABEL_55:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  ++WORD2(v31);
  *(_BYTE *)(v30 + v26) = a6;
  if (a3 <= 1)
  {
    if (a2 == 2 || a2 == 16)
      goto LABEL_31;
    sub_100253460();
  }
  if (a2)
  {
LABEL_31:
    v27 = a2;
    while (!HIBYTE(v31))
    {
      v28 = WORD2(v31);
      if (WORD1(v31) <= WORD2(v31) || BYTE6(v31) != 2)
        goto LABEL_39;
      v29 = *(_BYTE *)(a1 - 1 + v27--);
      ++WORD2(v31);
      *(_BYTE *)(v30 + v28) = v29;
      if ((unint64_t)(v27 + 1) <= 1)
        return sub_10004C8A0(233, v30, BYTE4(v31), a7, (uint64_t)sub_10004AE9C, v15, v16, v17);
    }
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3288, "OI_STATUS _BCM_LEMetaScanFilterUUIDV2(uint8_t *, uint8_t, uint8_t, _Bool, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
LABEL_39:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return sub_10004C8A0(233, v30, BYTE4(v31), a7, (uint64_t)sub_10004AE9C, v15, v16, v17);
}

uint64_t sub_1001C627C(__int16 a1, __int16 a2, const void *a3, int a4, const void *a5, int a6, char a7, char a8, char a9, uint64_t (*a10)())
{
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  unsigned __int16 v21;
  unsigned __int16 v22;
  uint64_t v23;
  int v24;
  unsigned __int16 v25;
  uint64_t v26;
  int v27;
  int v28;
  unsigned __int16 v29;
  uint64_t v30;
  int v31;
  unsigned __int16 v32;
  uint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int16 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v42 = 0;
  v43 = 0;
  result = sub_10004BC7C(&v42);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v43))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3563, "OI_STATUS _BCM_LEMetaAddManufacturerScanFilter(uint16_t, uint16_t, const uint8_t *, uint16_t, const uint8_t *, uint16_t, uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v19 = WORD2(v43);
      if (WORD1(v43) > WORD2(v43) && BYTE6(v43) == 2)
      {
        ++WORD2(v43);
        *(_BYTE *)(v42 + v19) = 90;
        if (HIBYTE(v43))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3564, "OI_STATUS _BCM_LEMetaAddManufacturerScanFilter(uint16_t, uint16_t, const uint8_t *, uint16_t, const uint8_t *, uint16_t, uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
        }
        else
        {
          v20 = WORD2(v43);
          if (WORD1(v43) > WORD2(v43) && BYTE6(v43) == 2)
          {
            ++WORD2(v43);
            *(_BYTE *)(v42 + v20) = 1;
            if (HIBYTE(v43))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3565, "OI_STATUS _BCM_LEMetaAddManufacturerScanFilter(uint16_t, uint16_t, const uint8_t *, uint16_t, const uint8_t *, uint16_t, uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
            }
            else if (WORD1(v43) - WORD2(v43) > 1 && BYTE6(v43) == 2)
            {
              *(_WORD *)(v42 + WORD2(v43)) = a1;
              v21 = WORD2(v43) + 2;
              WORD2(v43) += 2;
              if (HIBYTE(v43))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3566, "OI_STATUS _BCM_LEMetaAddManufacturerScanFilter(uint16_t, uint16_t, const uint8_t *, uint16_t, const uint8_t *, uint16_t, uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
              }
              else if (WORD1(v43) - v21 > 1 && BYTE6(v43) == 2)
              {
                *(_BYTE *)(v42 + v21) = a2;
                *(_BYTE *)(v42 + WORD2(v43) + 1) = HIBYTE(a2);
                v22 = WORD2(v43) + 2;
                WORD2(v43) += 2;
                v23 = v42;
                if (HIBYTE(v43))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3567, "OI_STATUS _BCM_LEMetaAddManufacturerScanFilter(uint16_t, uint16_t, const uint8_t *, uint16_t, const uint8_t *, uint16_t, uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                  v24 = 0;
                }
                else
                {
                  v24 = WORD1(v43) - v22;
                }
                if (v24 < a4 || BYTE6(v43) != 2)
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                memmove((void *)(v23 + v22), a3, a4);
                v25 = WORD2(v43) + a4;
                WORD2(v43) += a4;
                v26 = v42;
                if (HIBYTE(v43))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3568, "OI_STATUS _BCM_LEMetaAddManufacturerScanFilter(uint16_t, uint16_t, const uint8_t *, uint16_t, const uint8_t *, uint16_t, uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                  v27 = 0;
                }
                else
                {
                  v27 = WORD1(v43) - v25;
                }
                v28 = 27 - a4;
                if (v27 < v28 || BYTE6(v43) != 2)
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                bzero((void *)(v26 + v25), v28);
                v29 = WORD2(v43) + v28;
                WORD2(v43) = v29;
                v30 = v42;
                if (HIBYTE(v43))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3569, "OI_STATUS _BCM_LEMetaAddManufacturerScanFilter(uint16_t, uint16_t, const uint8_t *, uint16_t, const uint8_t *, uint16_t, uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                  v31 = 0;
                }
                else
                {
                  v31 = WORD1(v43) - v29;
                }
                if (v31 < a6 || BYTE6(v43) != 2)
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                memmove((void *)(v30 + v29), a5, a6);
                v32 = WORD2(v43) + a6;
                WORD2(v43) += a6;
                v33 = v42;
                if (HIBYTE(v43))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3570, "OI_STATUS _BCM_LEMetaAddManufacturerScanFilter(uint16_t, uint16_t, const uint8_t *, uint16_t, const uint8_t *, uint16_t, uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                  v34 = 0;
                }
                else
                {
                  v34 = WORD1(v43) - v32;
                }
                v35 = 27 - a6;
                if (v34 < v35 || BYTE6(v43) != 2)
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                bzero((void *)(v33 + v32), v35);
                v39 = WORD2(v43) + v35;
                WORD2(v43) += v35;
                if (HIBYTE(v43))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3571, "OI_STATUS _BCM_LEMetaAddManufacturerScanFilter(uint16_t, uint16_t, const uint8_t *, uint16_t, const uint8_t *, uint16_t, uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                }
                else if (WORD1(v43) > v39 && BYTE6(v43) == 2)
                {
                  WORD2(v43) = v39 + 1;
                  *(_BYTE *)(v42 + v39) = a7;
                  if (HIBYTE(v43))
                  {
                    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3572, "OI_STATUS _BCM_LEMetaAddManufacturerScanFilter(uint16_t, uint16_t, const uint8_t *, uint16_t, const uint8_t *, uint16_t, uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                  }
                  else
                  {
                    v40 = WORD2(v43);
                    if (WORD1(v43) > WORD2(v43) && BYTE6(v43) == 2)
                    {
                      ++WORD2(v43);
                      *(_BYTE *)(v42 + v40) = a8;
                      if (HIBYTE(v43))
                      {
                        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3573, "OI_STATUS _BCM_LEMetaAddManufacturerScanFilter(uint16_t, uint16_t, const uint8_t *, uint16_t, const uint8_t *, uint16_t, uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                      }
                      else
                      {
                        v41 = WORD2(v43);
                        if (WORD1(v43) > WORD2(v43) && BYTE6(v43) == 2)
                        {
                          ++WORD2(v43);
                          *(_BYTE *)(v42 + v41) = a9;
                          return sub_10004C8A0(233, v42, BYTE4(v43), a10, (uint64_t)sub_10004AE9C, v36, v37, v38);
                        }
                      }
                      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                    }
                  }
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C68D4(__int16 a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v10 = 0;
  v11 = 0;
  result = sub_10004BC7C(&v10);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v11))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3585, "OI_STATUS _BCM_LEMetaRemoveManufacturerScanFilter(uint16_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v8 = WORD2(v11);
      if (WORD1(v11) > WORD2(v11) && BYTE6(v11) == 2)
      {
        ++WORD2(v11);
        *(_BYTE *)(v10 + v8) = 90;
        if (HIBYTE(v11))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3586, "OI_STATUS _BCM_LEMetaRemoveManufacturerScanFilter(uint16_t, BT_VSC_COMPLETE_CB)");
        }
        else
        {
          v9 = WORD2(v11);
          if (WORD1(v11) > WORD2(v11) && BYTE6(v11) == 2)
          {
            ++WORD2(v11);
            *(_BYTE *)(v10 + v9) = 2;
            if (HIBYTE(v11))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3587, "OI_STATUS _BCM_LEMetaRemoveManufacturerScanFilter(uint16_t, BT_VSC_COMPLETE_CB)");
            }
            else if (WORD1(v11) - WORD2(v11) > 1 && BYTE6(v11) == 2)
            {
              *(_WORD *)(v10 + WORD2(v11)) = a1;
              WORD2(v11) += 2;
              return sub_10004C8A0(233, v10, BYTE4(v11), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C6AB4(uint64_t (*a1)())
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v8 = 0;
  v9 = 0;
  result = sub_10004BC7C(&v8);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v9))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3599, "OI_STATUS _BCM_LEMetaClearManufacturerScanFilter(BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v6 = WORD2(v9);
      if (WORD1(v9) > WORD2(v9) && BYTE6(v9) == 2)
      {
        ++WORD2(v9);
        *(_BYTE *)(v8 + v6) = 90;
        if (HIBYTE(v9))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3600, "OI_STATUS _BCM_LEMetaClearManufacturerScanFilter(BT_VSC_COMPLETE_CB)");
        }
        else
        {
          v7 = WORD2(v9);
          if (WORD1(v9) > WORD2(v9) && BYTE6(v9) == 2)
          {
            ++WORD2(v9);
            *(_BYTE *)(v8 + v7) = 3;
            return sub_10004C8A0(233, v8, BYTE4(v9), a1, (uint64_t)sub_10004AE9C, v3, v4, v5);
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C6BFC(__int16 a1, char a2, char a3, char a4, uint64_t a5, char a6, uint64_t (*a7)())
{
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int16 v18;
  unsigned __int16 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v23 = 0;
  v24 = 0;
  result = sub_10004BC7C(&v23);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v24))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3612, "OI_STATUS _BCM_LEMetaSetConnectionPrioritization(uint16_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v17 = WORD2(v24);
      if (WORD1(v24) > WORD2(v24) && BYTE6(v24) == 2)
      {
        ++WORD2(v24);
        *(_BYTE *)(v23 + v17) = 89;
        if (HIBYTE(v24))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3613, "OI_STATUS _BCM_LEMetaSetConnectionPrioritization(uint16_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v24) - WORD2(v24) > 1 && BYTE6(v24) == 2)
        {
          *(_WORD *)(v23 + WORD2(v24)) = a1;
          v18 = WORD2(v24);
          v19 = WORD2(v24) + 2;
          WORD2(v24) += 2;
          if (HIBYTE(v24))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3614, "OI_STATUS _BCM_LEMetaSetConnectionPrioritization(uint16_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
          }
          else if (WORD1(v24) > v19 && BYTE6(v24) == 2)
          {
            WORD2(v24) = v18 + 3;
            *(_BYTE *)(v23 + v19) = a2;
            if (HIBYTE(v24))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3615, "OI_STATUS _BCM_LEMetaSetConnectionPrioritization(uint16_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
            }
            else
            {
              v20 = WORD2(v24);
              if (WORD1(v24) > WORD2(v24) && BYTE6(v24) == 2)
              {
                ++WORD2(v24);
                *(_BYTE *)(v23 + v20) = a3;
                if (HIBYTE(v24))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3617, "OI_STATUS _BCM_LEMetaSetConnectionPrioritization(uint16_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                }
                else
                {
                  v21 = WORD2(v24);
                  if (WORD1(v24) > WORD2(v24) && BYTE6(v24) == 2)
                  {
                    ++WORD2(v24);
                    *(_BYTE *)(v23 + v21) = a4;
                    if (HIBYTE(v24))
                    {
                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3618, "OI_STATUS _BCM_LEMetaSetConnectionPrioritization(uint16_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                    }
                    else
                    {
                      v22 = WORD2(v24);
                      if (WORD1(v24) > WORD2(v24) && BYTE6(v24) == 2)
                      {
                        ++WORD2(v24);
                        *(_BYTE *)(v23 + v22) = a6;
                        return sub_10004C8A0(233, v23, BYTE4(v24), a7, (uint64_t)sub_10004AE9C, v14, v15, v16);
                      }
                    }
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                }
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C6F60(__int16 a1, char a2, char a3, unsigned int a4, int *a5, char a6, char a7, __int16 a8, __int16 a9, char a10, char a11, char a12, char a13, __int16 a14, uint64_t (*a15)())
{
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int16 v28;
  unsigned __int16 v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  char v34;
  char v35;
  char v36;
  uint64_t v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  unsigned __int16 v43;
  __int16 v44;
  unsigned __int16 v45;
  unsigned __int16 v46;
  uint64_t v47;
  uint64_t v48;

  v47 = 0;
  v48 = 0;
  result = sub_10004BC7C(&v47);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v48))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3637, "OI_STATUS _BCM_LEMetaDisableHostWakeOnLELinkDrop(uint16_t, _Bool, uint8_t, uint8_t, OI_STATUS *, int8_t, uint8_t, uint16_t, uint16_t, uint8_t, uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v27 = WORD2(v48);
      if (WORD1(v48) > WORD2(v48) && BYTE6(v48) == 2)
      {
        ++WORD2(v48);
        *(_BYTE *)(v47 + v27) = 13;
        if (HIBYTE(v48))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3638, "OI_STATUS _BCM_LEMetaDisableHostWakeOnLELinkDrop(uint16_t, _Bool, uint8_t, uint8_t, OI_STATUS *, int8_t, uint8_t, uint16_t, uint16_t, uint8_t, uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v48) - WORD2(v48) > 1 && BYTE6(v48) == 2)
        {
          *(_WORD *)(v47 + WORD2(v48)) = a1;
          v28 = WORD2(v48);
          v29 = WORD2(v48) + 2;
          WORD2(v48) += 2;
          if (HIBYTE(v48))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3639, "OI_STATUS _BCM_LEMetaDisableHostWakeOnLELinkDrop(uint16_t, _Bool, uint8_t, uint8_t, OI_STATUS *, int8_t, uint8_t, uint16_t, uint16_t, uint8_t, uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
          }
          else if (WORD1(v48) > v29 && BYTE6(v48) == 2)
          {
            WORD2(v48) = v28 + 3;
            *(_BYTE *)(v47 + v29) = a2;
            if (HIBYTE(v48))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3640, "OI_STATUS _BCM_LEMetaDisableHostWakeOnLELinkDrop(uint16_t, _Bool, uint8_t, uint8_t, OI_STATUS *, int8_t, uint8_t, uint16_t, uint16_t, uint8_t, uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
            }
            else
            {
              v30 = WORD2(v48);
              if (WORD1(v48) > WORD2(v48) && BYTE6(v48) == 2)
              {
                ++WORD2(v48);
                *(_BYTE *)(v47 + v30) = a3;
                if (!a4)
                  goto LABEL_36;
                v31 = a4;
                do
                {
                  v33 = *a5++;
                  v32 = v33;
                  if (v33 == 762)
                    v34 = 62;
                  else
                    v34 = 0;
                  if (v32 == 761)
                    v34 = 61;
                  if (v32 == 734)
                    v34 = 34;
                  if (v32 == 719)
                    v35 = 19;
                  else
                    v35 = 0;
                  if (v32 == 708)
                    v35 = 8;
                  if (v32 <= 733)
                    v36 = v35;
                  else
                    v36 = v34;
                  if (HIBYTE(v48))
                  {
                    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3662, "OI_STATUS _BCM_LEMetaDisableHostWakeOnLELinkDrop(uint16_t, _Bool, uint8_t, uint8_t, OI_STATUS *, int8_t, uint8_t, uint16_t, uint16_t, uint8_t, uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
LABEL_68:
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                  v37 = WORD2(v48);
                  if (WORD1(v48) <= WORD2(v48) || BYTE6(v48) != 2)
                    goto LABEL_68;
                  ++WORD2(v48);
                  *(_BYTE *)(v47 + v37) = v36;
                  --v31;
                }
                while (v31);
                if (a4 <= 4)
                {
LABEL_36:
                  v38 = a4 - 5;
                  while (!HIBYTE(v48))
                  {
                    v39 = WORD2(v48);
                    if (WORD1(v48) <= WORD2(v48) || BYTE6(v48) != 2)
                      goto LABEL_66;
                    ++WORD2(v48);
                    *(_BYTE *)(v47 + v39) = 0;
                    if (__CFADD__(v38++, 1))
                      goto LABEL_42;
                  }
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3665, "OI_STATUS _BCM_LEMetaDisableHostWakeOnLELinkDrop(uint16_t, _Bool, uint8_t, uint8_t, OI_STATUS *, int8_t, uint8_t, uint16_t, uint16_t, uint8_t, uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
LABEL_66:
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
LABEL_42:
                if (HIBYTE(v48))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3667, "OI_STATUS _BCM_LEMetaDisableHostWakeOnLELinkDrop(uint16_t, _Bool, uint8_t, uint8_t, OI_STATUS *, int8_t, uint8_t, uint16_t, uint16_t, uint8_t, uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
                }
                else
                {
                  v41 = WORD2(v48);
                  if (WORD1(v48) > WORD2(v48) && BYTE6(v48) == 2)
                  {
                    ++WORD2(v48);
                    *(_BYTE *)(v47 + v41) = a6;
                    if (HIBYTE(v48))
                    {
                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3668, "OI_STATUS _BCM_LEMetaDisableHostWakeOnLELinkDrop(uint16_t, _Bool, uint8_t, uint8_t, OI_STATUS *, int8_t, uint8_t, uint16_t, uint16_t, uint8_t, uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
                    }
                    else
                    {
                      v42 = WORD2(v48);
                      if (WORD1(v48) > WORD2(v48) && BYTE6(v48) == 2)
                      {
                        ++WORD2(v48);
                        *(_BYTE *)(v47 + v42) = a7;
                        if (HIBYTE(v48))
                        {
                          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3669, "OI_STATUS _BCM_LEMetaDisableHostWakeOnLELinkDrop(uint16_t, _Bool, uint8_t, uint8_t, OI_STATUS *, int8_t, uint8_t, uint16_t, uint16_t, uint8_t, uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
                        }
                        else if (WORD1(v48) - WORD2(v48) > 1 && BYTE6(v48) == 2)
                        {
                          *(_WORD *)(v47 + WORD2(v48)) = a9;
                          v43 = WORD2(v48) + 2;
                          WORD2(v48) += 2;
                          if (HIBYTE(v48))
                          {
                            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3670, "OI_STATUS _BCM_LEMetaDisableHostWakeOnLELinkDrop(uint16_t, _Bool, uint8_t, uint8_t, OI_STATUS *, int8_t, uint8_t, uint16_t, uint16_t, uint8_t, uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
                          }
                          else if (WORD1(v48) - v43 > 1 && BYTE6(v48) == 2)
                          {
                            *(_BYTE *)(v47 + v43) = a8;
                            *(_BYTE *)(v47 + WORD2(v48) + 1) = HIBYTE(a8);
                            v44 = WORD2(v48);
                            v45 = WORD2(v48) + 2;
                            WORD2(v48) += 2;
                            if (HIBYTE(v48))
                            {
                              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3671, "OI_STATUS _BCM_LEMetaDisableHostWakeOnLELinkDrop(uint16_t, _Bool, uint8_t, uint8_t, OI_STATUS *, int8_t, uint8_t, uint16_t, uint16_t, uint8_t, uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
                            }
                            else if (WORD1(v48) > v45 && BYTE6(v48) == 2)
                            {
                              WORD2(v48) = v44 + 3;
                              *(_BYTE *)(v47 + v45) = a10;
                              if (HIBYTE(v48))
                              {
                                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3672, "OI_STATUS _BCM_LEMetaDisableHostWakeOnLELinkDrop(uint16_t, _Bool, uint8_t, uint8_t, OI_STATUS *, int8_t, uint8_t, uint16_t, uint16_t, uint8_t, uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
                              }
                              else if (WORD1(v48) - WORD2(v48) > 1 && BYTE6(v48) == 2)
                              {
                                *(_WORD *)(v47 + WORD2(v48)) = a14;
                                v46 = WORD2(v48) + 2;
                                WORD2(v48) += 2;
                                if (HIBYTE(v48))
                                {
                                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3673, "OI_STATUS _BCM_LEMetaDisableHostWakeOnLELinkDrop(uint16_t, _Bool, uint8_t, uint8_t, OI_STATUS *, int8_t, uint8_t, uint16_t, uint16_t, uint8_t, uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
                                }
                                else if (WORD1(v48) - v46 > 1 && BYTE6(v48) == 2)
                                {
                                  *(_BYTE *)(v47 + v46) = a12;
                                  *(_BYTE *)(v47 + WORD2(v48) + 1) = a13;
                                  WORD2(v48) += 2;
                                  return sub_10004C8A0(291, v47, BYTE4(v48), a15, (uint64_t)sub_10004AE9C, v24, v25, v26);
                                }
                                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/bcm/bcm_vsc.c");
                              }
                              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                            }
                            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                          }
                          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                        }
                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }
                    }
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                }
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C7708(char a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v9 = 0;
  v10 = 0;
  result = sub_10004BC7C(&v9);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v10))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4079, "OI_STATUS _BCM_WriteLocalHostState(_Bool, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v8 = WORD2(v10);
      if (WORD1(v10) > WORD2(v10) && BYTE6(v10) == 2)
      {
        ++WORD2(v10);
        *(_BYTE *)(v9 + v8) = a1;
        if (HIBYTE(v10))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4080, "OI_STATUS _BCM_WriteLocalHostState(_Bool, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v10) > WORD2(v10) && BYTE6(v10) == 2)
        {
          *(_BYTE *)(v9 + WORD2(v10)) = 0;
          ++WORD2(v10);
          return sub_10004C8A0(348, v9, BYTE4(v10), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C7850(uint64_t a1, char a2, uint64_t a3, uint64_t (*a4)())
{
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;
  unsigned __int16 v13;
  uint64_t v15;
  uint64_t v16;
  _WORD *v17;

  v16 = 0;
  v17 = 0;
  v15 = 0;
  v6 = sub_100182588(a1, (uint64_t *)&v17);
  if ((_DWORD)v6)
  {
    v7 = v6;
    if (sub_10005549C())
    {
      sub_100054530("VSC Error %!", v7);
      v8 = sub_1000544A0(0x54u);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
        sub_1006CEEC0();
    }
  }
  else
  {
    v7 = sub_10004BC7C(&v15);
    if (!(_DWORD)v7)
    {
      if (HIBYTE(v16))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4102, "OI_STATUS _BCM_WriteHiPrioConn(OI_BD_ADDR *, uint8_t, uint32_t, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v16) - WORD2(v16) > 1 && BYTE6(v16) == 2)
      {
        *(_WORD *)(v15 + WORD2(v16)) = *v17;
        v12 = WORD2(v16);
        v13 = WORD2(v16) + 2;
        WORD2(v16) += 2;
        if (HIBYTE(v16))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4103, "OI_STATUS _BCM_WriteHiPrioConn(OI_BD_ADDR *, uint8_t, uint32_t, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v16) > v13 && BYTE6(v16) == 2)
        {
          WORD2(v16) = v12 + 3;
          *(_BYTE *)(v15 + v13) = a2;
          return sub_10004C8A0(87, v15, BYTE4(v16), a4, (uint64_t)sub_10004AE9C, v9, v10, v11);
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
  }
  return v7;
}

uint64_t sub_1001C7A28(__int16 a1, char a2, char a3, char a4, char a5, uint64_t (*a6)())
{
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  unsigned __int16 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v20 = 0;
  v21 = 0;
  result = sub_10004BC7C(&v20);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v21))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5095, "OI_STATUS _BCM_HPBTClassic(uint16_t, uint8_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v21) - WORD2(v21) > 1 && BYTE6(v21) == 2)
    {
      *(_WORD *)(v20 + WORD2(v21)) = a1;
      v16 = WORD2(v21);
      v17 = WORD2(v21) + 2;
      WORD2(v21) += 2;
      if (HIBYTE(v21))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5096, "OI_STATUS _BCM_HPBTClassic(uint16_t, uint8_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v21) > v17 && BYTE6(v21) == 2)
      {
        WORD2(v21) = v16 + 3;
        *(_BYTE *)(v20 + v17) = a2;
        if (HIBYTE(v21))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5097, "OI_STATUS _BCM_HPBTClassic(uint16_t, uint8_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
        }
        else
        {
          v18 = WORD2(v21);
          if (WORD1(v21) > WORD2(v21) && BYTE6(v21) == 2)
          {
            ++WORD2(v21);
            *(_BYTE *)(v20 + v18) = a3;
            if (HIBYTE(v21))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5098, "OI_STATUS _BCM_HPBTClassic(uint16_t, uint8_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
            }
            else
            {
              v19 = WORD2(v21);
              if (WORD1(v21) > WORD2(v21) && BYTE6(v21) == 2)
              {
                ++WORD2(v21);
                *(_BYTE *)(v20 + v19) = a4;
                if (HIBYTE(v21))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5099, "OI_STATUS _BCM_HPBTClassic(uint16_t, uint8_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
                }
                else if (WORD1(v21) > WORD2(v21) && BYTE6(v21) == 2)
                {
                  *(_BYTE *)(v20 + WORD2(v21)) = a5;
                  ++WORD2(v21);
                  return sub_10004C8A0(435, v20, BYTE4(v21), a6, (uint64_t)sub_10004AE9C, v13, v14, v15);
                }
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C7D18(char a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int16 v8;
  unsigned __int16 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v13 = 0;
  v14 = 0;
  result = sub_10004BC7C(&v13);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v14))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5114, "OI_STATUS _BCM_HPBTClassicEnableVSE(_Bool, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v14) - WORD2(v14) > 3 && BYTE6(v14) == 2)
    {
      *(_BYTE *)(v13 + WORD2(v14)) = 32;
      *(_WORD *)(v13 + WORD2(v14) + 1) = 0;
      *(_BYTE *)(v13 + WORD2(v14) + 3) = 0;
      v8 = WORD2(v14);
      v9 = WORD2(v14) + 4;
      WORD2(v14) += 4;
      if (HIBYTE(v14))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5115, "OI_STATUS _BCM_HPBTClassicEnableVSE(_Bool, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v14) > v9 && BYTE6(v14) == 2)
      {
        WORD2(v14) = v8 + 5;
        *(_BYTE *)(v13 + v9) = a1;
        if (HIBYTE(v14))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5117, "OI_STATUS _BCM_HPBTClassicEnableVSE(_Bool, BT_VSC_COMPLETE_CB)");
        }
        else
        {
          v10 = WORD2(v14);
          if (WORD1(v14) > WORD2(v14) && BYTE6(v14) == 2)
          {
            ++WORD2(v14);
            *(_BYTE *)(v13 + v10) = 0;
            if (HIBYTE(v14))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5118, "OI_STATUS _BCM_HPBTClassicEnableVSE(_Bool, BT_VSC_COMPLETE_CB)");
            }
            else
            {
              v11 = WORD2(v14);
              if (WORD1(v14) > WORD2(v14) && BYTE6(v14) == 2)
              {
                ++WORD2(v14);
                *(_BYTE *)(v13 + v11) = 0;
                if (HIBYTE(v14))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5119, "OI_STATUS _BCM_HPBTClassicEnableVSE(_Bool, BT_VSC_COMPLETE_CB)");
                }
                else
                {
                  v12 = WORD2(v14);
                  if (WORD1(v14) > WORD2(v14) && BYTE6(v14) == 2)
                  {
                    ++WORD2(v14);
                    *(_BYTE *)(v13 + v12) = 0;
                    return sub_10004C8A0(226, v13, BYTE4(v14), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
                  }
                }
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C8000(_WORD *a1, char a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int16 v10;
  unsigned __int16 v11;
  uint64_t v12;
  uint64_t v13;

  v12 = 0;
  v13 = 0;
  result = sub_10004BC7C(&v12);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v13))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5132, "OI_STATUS _BCM_LeSetPrioritizationThreshold(OI_HCI_CONNECTION_HANDLE, uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v13) - WORD2(v13) > 1 && BYTE6(v13) == 2)
    {
      *(_WORD *)(v12 + WORD2(v13)) = *a1;
      v10 = WORD2(v13);
      v11 = WORD2(v13) + 2;
      WORD2(v13) += 2;
      if (HIBYTE(v13))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5133, "OI_STATUS _BCM_LeSetPrioritizationThreshold(OI_HCI_CONNECTION_HANDLE, uint8_t, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v13) > v11 && BYTE6(v13) == 2)
      {
        WORD2(v13) = v10 + 3;
        *(_BYTE *)(v12 + v11) = a2;
        return sub_10004C8A0(449, v12, BYTE4(v13), a3, (uint64_t)sub_10004AE9C, v7, v8, v9);
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C8170(char a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int16 v8;
  unsigned __int16 v9;
  uint64_t v10;
  uint64_t v11;

  v10 = 0;
  v11 = 0;
  result = sub_10004BC7C(&v10);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v11))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5147, "OI_STATUS _BCM_LMPRoutingEnable(_Bool, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v11) - WORD2(v11) > 3 && BYTE6(v11) == 2)
    {
      *(_BYTE *)(v10 + WORD2(v11)) = 39;
      *(_WORD *)(v10 + WORD2(v11) + 1) = 0;
      *(_BYTE *)(v10 + WORD2(v11) + 3) = 0;
      v8 = WORD2(v11);
      v9 = WORD2(v11) + 4;
      WORD2(v11) += 4;
      if (HIBYTE(v11))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5148, "OI_STATUS _BCM_LMPRoutingEnable(_Bool, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v11) > v9 && BYTE6(v11) == 2)
      {
        WORD2(v11) = v8 + 5;
        *(_BYTE *)(v10 + v9) = a1;
        return sub_10004C8A0(226, v10, BYTE4(v11), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C82F0(int a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v11 = 0;
  v12 = 0;
  result = sub_10004BC7C(&v11);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v12))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5161, "OI_STATUS _BCM_LMPRoutingEnableThroughVSE(_Bool, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v8 = WORD2(v12);
      if (WORD1(v12) > WORD2(v12) && BYTE6(v12) == 2)
      {
        ++WORD2(v12);
        *(_BYTE *)(v11 + v8) = -16;
        if (a1)
        {
          if (HIBYTE(v12))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5163, "OI_STATUS _BCM_LMPRoutingEnableThroughVSE(_Bool, BT_VSC_COMPLETE_CB)");
          }
          else
          {
            v9 = WORD2(v12);
            if (WORD1(v12) > WORD2(v12) && BYTE6(v12) == 2)
            {
              v10 = 3;
LABEL_14:
              WORD2(v12) = v9 + 1;
              *(_BYTE *)(v11 + v9) = v10;
              return sub_10004C8A0(490, v11, BYTE4(v12), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
            }
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        if (HIBYTE(v12))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5165, "OI_STATUS _BCM_LMPRoutingEnableThroughVSE(_Bool, BT_VSC_COMPLETE_CB)");
        }
        else
        {
          v9 = WORD2(v12);
          if (WORD1(v12) > WORD2(v12) && BYTE6(v12) == 2)
          {
            v10 = 0;
            goto LABEL_14;
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C84AC(__int16 a1, char a2, char a3, char a4, uint64_t (*a5)())
{
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int16 v14;
  unsigned __int16 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v32 = 0;
  v33 = 0;
  result = sub_10004BC7C(&v32);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v33))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5258, "OI_STATUS _BCM_HPEDRAccessory(uint16_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v33) - WORD2(v33) > 1 && BYTE6(v33) == 2)
    {
      *(_WORD *)(v32 + WORD2(v33)) = a1;
      v14 = WORD2(v33);
      v15 = WORD2(v33) + 2;
      WORD2(v33) += 2;
      if (HIBYTE(v33))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5259, "OI_STATUS _BCM_HPEDRAccessory(uint16_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v33) > v15 && BYTE6(v33) == 2)
      {
        WORD2(v33) = v14 + 3;
        *(_BYTE *)(v32 + v15) = a2;
        if (HIBYTE(v33))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5260, "OI_STATUS _BCM_HPEDRAccessory(uint16_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
        }
        else
        {
          v16 = WORD2(v33);
          if (WORD1(v33) > WORD2(v33) && BYTE6(v33) == 2)
          {
            ++WORD2(v33);
            *(_BYTE *)(v32 + v16) = a3;
            if (HIBYTE(v33))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5261, "OI_STATUS _BCM_HPEDRAccessory(uint16_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
            }
            else
            {
              v17 = WORD2(v33);
              if (WORD1(v33) > WORD2(v33) && BYTE6(v33) == 2)
              {
                ++WORD2(v33);
                *(_BYTE *)(v32 + v17) = a3;
                if (HIBYTE(v33))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5262, "OI_STATUS _BCM_HPEDRAccessory(uint16_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
                }
                else
                {
                  v18 = WORD2(v33);
                  if (WORD1(v33) > WORD2(v33) && BYTE6(v33) == 2)
                  {
                    ++WORD2(v33);
                    *(_BYTE *)(v32 + v18) = a3;
                    if (HIBYTE(v33))
                    {
                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5263, "OI_STATUS _BCM_HPEDRAccessory(uint16_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
                    }
                    else
                    {
                      v19 = WORD2(v33);
                      if (WORD1(v33) > WORD2(v33) && BYTE6(v33) == 2)
                      {
                        ++WORD2(v33);
                        *(_BYTE *)(v32 + v19) = a3;
                        if (HIBYTE(v33))
                        {
                          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5264, "OI_STATUS _BCM_HPEDRAccessory(uint16_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
                        }
                        else
                        {
                          v20 = WORD2(v33);
                          if (WORD1(v33) > WORD2(v33) && BYTE6(v33) == 2)
                          {
                            ++WORD2(v33);
                            *(_BYTE *)(v32 + v20) = a3;
                            if (HIBYTE(v33))
                            {
                              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5265, "OI_STATUS _BCM_HPEDRAccessory(uint16_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
                            }
                            else
                            {
                              v21 = WORD2(v33);
                              if (WORD1(v33) > WORD2(v33) && BYTE6(v33) == 2)
                              {
                                ++WORD2(v33);
                                *(_BYTE *)(v32 + v21) = a3;
                                if (HIBYTE(v33))
                                {
                                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5266, "OI_STATUS _BCM_HPEDRAccessory(uint16_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
                                }
                                else
                                {
                                  v22 = WORD2(v33);
                                  if (WORD1(v33) > WORD2(v33) && BYTE6(v33) == 2)
                                  {
                                    ++WORD2(v33);
                                    *(_BYTE *)(v32 + v22) = a3;
                                    if (HIBYTE(v33))
                                    {
                                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5267, "OI_STATUS _BCM_HPEDRAccessory(uint16_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
                                    }
                                    else
                                    {
                                      v23 = WORD2(v33);
                                      if (WORD1(v33) > WORD2(v33) && BYTE6(v33) == 2)
                                      {
                                        ++WORD2(v33);
                                        *(_BYTE *)(v32 + v23) = a3;
                                        if (HIBYTE(v33))
                                        {
                                          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5268, "OI_STATUS _BCM_HPEDRAccessory(uint16_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
                                        }
                                        else
                                        {
                                          v24 = WORD2(v33);
                                          if (WORD1(v33) > WORD2(v33) && BYTE6(v33) == 2)
                                          {
                                            ++WORD2(v33);
                                            *(_BYTE *)(v32 + v24) = a3;
                                            if (HIBYTE(v33))
                                            {
                                              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5269, "OI_STATUS _BCM_HPEDRAccessory(uint16_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
                                            }
                                            else
                                            {
                                              v25 = WORD2(v33);
                                              if (WORD1(v33) > WORD2(v33) && BYTE6(v33) == 2)
                                              {
                                                ++WORD2(v33);
                                                *(_BYTE *)(v32 + v25) = a3;
                                                if (HIBYTE(v33))
                                                {
                                                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5270, "OI_STATUS _BCM_HPEDRAccessory(uint16_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
                                                }
                                                else
                                                {
                                                  v26 = WORD2(v33);
                                                  if (WORD1(v33) > WORD2(v33) && BYTE6(v33) == 2)
                                                  {
                                                    ++WORD2(v33);
                                                    *(_BYTE *)(v32 + v26) = a3;
                                                    if (HIBYTE(v33))
                                                    {
                                                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5271, "OI_STATUS _BCM_HPEDRAccessory(uint16_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
                                                    }
                                                    else
                                                    {
                                                      v27 = WORD2(v33);
                                                      if (WORD1(v33) > WORD2(v33) && BYTE6(v33) == 2)
                                                      {
                                                        ++WORD2(v33);
                                                        *(_BYTE *)(v32 + v27) = a3;
                                                        if (HIBYTE(v33))
                                                        {
                                                          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5272, "OI_STATUS _BCM_HPEDRAccessory(uint16_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
                                                        }
                                                        else
                                                        {
                                                          v28 = WORD2(v33);
                                                          if (WORD1(v33) > WORD2(v33) && BYTE6(v33) == 2)
                                                          {
                                                            ++WORD2(v33);
                                                            *(_BYTE *)(v32 + v28) = a3;
                                                            if (HIBYTE(v33))
                                                            {
                                                              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5273, "OI_STATUS _BCM_HPEDRAccessory(uint16_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
                                                            }
                                                            else
                                                            {
                                                              v29 = WORD2(v33);
                                                              if (WORD1(v33) > WORD2(v33)
                                                                && BYTE6(v33) == 2)
                                                              {
                                                                ++WORD2(v33);
                                                                *(_BYTE *)(v32 + v29) = a3;
                                                                if (HIBYTE(v33))
                                                                {
                                                                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5274, "OI_STATUS _BCM_HPEDRAccessory(uint16_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
                                                                }
                                                                else
                                                                {
                                                                  v30 = WORD2(v33);
                                                                  if (WORD1(v33) > WORD2(v33)
                                                                    && BYTE6(v33) == 2)
                                                                  {
                                                                    ++WORD2(v33);
                                                                    *(_BYTE *)(v32 + v30) = a3;
                                                                    if (HIBYTE(v33))
                                                                    {
                                                                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5275, "OI_STATUS _BCM_HPEDRAccessory(uint16_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
                                                                    }
                                                                    else
                                                                    {
                                                                      v31 = WORD2(v33);
                                                                      if (WORD1(v33) > WORD2(v33)
                                                                        && BYTE6(v33) == 2)
                                                                      {
                                                                        ++WORD2(v33);
                                                                        *(_BYTE *)(v32 + v31) = a3;
                                                                        if (HIBYTE(v33))
                                                                        {
                                                                          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5276, "OI_STATUS _BCM_HPEDRAccessory(uint16_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
                                                                        }
                                                                        else if (WORD1(v33) > WORD2(v33)
                                                                               && BYTE6(v33) == 2)
                                                                        {
                                                                          *(_BYTE *)(v32 + WORD2(v33)) = a4;
                                                                          ++WORD2(v33);
                                                                          return sub_10004C8A0(441, v32, BYTE4(v33), a5, (uint64_t)sub_10004AE9C, v11, v12, v13);
                                                                        }
                                                                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple"
                                                                                               ".xbs/Sources/MobileBlueto"
                                                                                               "oth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                      }
                                                                    }
                                                                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs"
                                                                                           "/Sources/MobileBluetooth_base"
                                                                                           "/Stack/vsc/bcm/bcm_vsc.c");
                                                                  }
                                                                }
                                                                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sou"
                                                                                       "rces/MobileBluetooth_base/Stack/v"
                                                                                       "sc/bcm/bcm_vsc.c");
                                                              }
                                                            }
                                                            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources"
                                                                                   "/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                          }
                                                        }
                                                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mob"
                                                                               "ileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                      }
                                                    }
                                                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileB"
                                                                           "luetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                  }
                                                }
                                                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluet"
                                                                       "ooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                              }
                                            }
                                            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth"
                                                                   "_base/Stack/vsc/bcm/bcm_vsc.c");
                                          }
                                        }
                                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_bas"
                                                               "e/Stack/vsc/bcm/bcm_vsc.c");
                                      }
                                    }
                                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/St"
                                                           "ack/vsc/bcm/bcm_vsc.c");
                                  }
                                }
                                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/bcm/bcm_vsc.c");
                              }
                            }
                            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                          }
                        }
                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }
                    }
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                }
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C8E28(__int16 a1, char a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int16 v10;
  unsigned __int16 v11;
  uint64_t v12;
  uint64_t v13;

  v12 = 0;
  v13 = 0;
  result = sub_10004BC7C(&v12);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v13))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5079, "OI_STATUS _BCM_LowLatencyPriority(uint16_t, _Bool, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v13) - WORD2(v13) > 1 && BYTE6(v13) == 2)
    {
      *(_WORD *)(v12 + WORD2(v13)) = a1;
      v10 = WORD2(v13);
      v11 = WORD2(v13) + 2;
      WORD2(v13) += 2;
      if (HIBYTE(v13))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5080, "OI_STATUS _BCM_LowLatencyPriority(uint16_t, _Bool, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v13) > v11 && BYTE6(v13) == 2)
      {
        WORD2(v13) = v10 + 3;
        *(_BYTE *)(v12 + v11) = a2;
        return sub_10004C8A0(484, v12, BYTE4(v13), a3, (uint64_t)sub_10004AE9C, v7, v8, v9);
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C8F94(_WORD *a1, char a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int16 v10;
  unsigned __int16 v11;
  uint64_t v12;
  uint64_t v13;

  v12 = 0;
  v13 = 0;
  result = sub_10004BC7C(&v12);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v13))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5331, "OI_STATUS _BCM_SetMaximumConnectionUpdateInstant(OI_HCI_CONNECTION_HANDLE, uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v13) - WORD2(v13) > 1 && BYTE6(v13) == 2)
    {
      *(_WORD *)(v12 + WORD2(v13)) = *a1;
      v10 = WORD2(v13);
      v11 = WORD2(v13) + 2;
      WORD2(v13) += 2;
      if (HIBYTE(v13))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5332, "OI_STATUS _BCM_SetMaximumConnectionUpdateInstant(OI_HCI_CONNECTION_HANDLE, uint8_t, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v13) > v11 && BYTE6(v13) == 2)
      {
        WORD2(v13) = v10 + 3;
        *(_BYTE *)(v12 + v11) = a2;
        return sub_10004C8A0(491, v12, BYTE4(v13), a3, (uint64_t)sub_10004AE9C, v7, v8, v9);
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C9104(char a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v9 = 0;
  v10 = 0;
  result = sub_10004BC7C(&v9);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v10))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5346, "OI_STATUS _BCM_HDRControl(_Bool, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v8 = WORD2(v10);
      if (WORD1(v10) > WORD2(v10) && BYTE6(v10) == 2)
      {
        ++WORD2(v10);
        *(_BYTE *)(v9 + v8) = a1;
        return sub_10004C8A0(509, v9, BYTE4(v10), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C91D0(uint64_t (*a1)())
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v6 = 0;
  v7 = 0;
  result = sub_10004BC7C(&v6);
  if (!(_DWORD)result)
    return sub_10004C8A0(474, v6, BYTE4(v7), a1, (uint64_t)sub_1001A6F98, v3, v4, v5);
  return result;
}

uint64_t sub_1001C9220(__int16 a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v8 = 0;
  v9 = 0;
  result = sub_10004BC7C(&v8);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v9))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5372, "OI_STATUS _BCM_ReadProprietaryRemoteFeatures(OI_HCI_LM_HANDLE, BT_VSC_READ_PROP_REMOTE_FEATURES_CB)");
    }
    else if (WORD1(v9) - WORD2(v9) > 1 && BYTE6(v9) == 2)
    {
      *(_WORD *)(v8 + WORD2(v9)) = a1;
      WORD2(v9) += 2;
      return sub_10004C8A0(522, v8, BYTE4(v9), a2, (uint64_t)sub_1001A70A4, v5, v6, v7);
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C9308(__int16 a1, int a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int16 v10;
  uint64_t v11;
  uint64_t v12;

  v11 = 0;
  v12 = 0;
  result = sub_10004BC7C(&v11);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v12))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5386, "OI_STATUS _BCM_HDRChangeConnPktType(OI_HCI_LM_HANDLE, uint32_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v12) - WORD2(v12) > 1 && BYTE6(v12) == 2)
    {
      *(_WORD *)(v11 + WORD2(v12)) = a1;
      v10 = WORD2(v12) + 2;
      WORD2(v12) += 2;
      if (HIBYTE(v12))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5387, "OI_STATUS _BCM_HDRChangeConnPktType(OI_HCI_LM_HANDLE, uint32_t, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v12) - v10 > 3 && BYTE6(v12) == 2)
      {
        *(_BYTE *)(v11 + v10) = a2;
        *(_BYTE *)(v11 + WORD2(v12) + 1) = BYTE1(a2);
        *(_BYTE *)(v11 + WORD2(v12) + 2) = BYTE2(a2);
        *(_BYTE *)(v11 + WORD2(v12) + 3) = HIBYTE(a2);
        WORD2(v12) += 4;
        return sub_10004C8A0(475, v11, BYTE4(v12), a3, (uint64_t)sub_10004AE9C, v7, v8, v9);
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C94B8(__int16 a1, int a2, int a3, __int16 a4, __int16 a5, char a6, int a7, uint64_t (*a8)())
{
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int16 v20;
  unsigned __int16 v21;
  unsigned __int16 v22;
  unsigned __int16 v23;
  __int16 v24;
  unsigned __int16 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v29 = 0;
  v30 = 0;
  result = sub_10004BC7C(&v29);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v30))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5402, "OI_STATUS _BCM_HDRSetupSynchConn(OI_HCI_LM_HANDLE, uint32_t, uint32_t, uint16_t, uint16_t, uint8_t, uint32_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v30) - WORD2(v30) > 1 && BYTE6(v30) == 2)
    {
      *(_WORD *)(v29 + WORD2(v30)) = a1;
      v20 = WORD2(v30) + 2;
      WORD2(v30) += 2;
      if (HIBYTE(v30))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5403, "OI_STATUS _BCM_HDRSetupSynchConn(OI_HCI_LM_HANDLE, uint32_t, uint32_t, uint16_t, uint16_t, uint8_t, uint32_t, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v30) - v20 > 3 && BYTE6(v30) == 2)
      {
        *(_BYTE *)(v29 + v20) = a2;
        *(_BYTE *)(v29 + WORD2(v30) + 1) = BYTE1(a2);
        *(_BYTE *)(v29 + WORD2(v30) + 2) = BYTE2(a2);
        *(_BYTE *)(v29 + WORD2(v30) + 3) = HIBYTE(a2);
        v21 = WORD2(v30) + 4;
        WORD2(v30) += 4;
        if (HIBYTE(v30))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5404, "OI_STATUS _BCM_HDRSetupSynchConn(OI_HCI_LM_HANDLE, uint32_t, uint32_t, uint16_t, uint16_t, uint8_t, uint32_t, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v30) - v21 > 3 && BYTE6(v30) == 2)
        {
          *(_BYTE *)(v29 + v21) = a3;
          *(_BYTE *)(v29 + WORD2(v30) + 1) = BYTE1(a3);
          *(_BYTE *)(v29 + WORD2(v30) + 2) = BYTE2(a3);
          *(_BYTE *)(v29 + WORD2(v30) + 3) = HIBYTE(a3);
          v22 = WORD2(v30) + 4;
          WORD2(v30) += 4;
          if (HIBYTE(v30))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5405, "OI_STATUS _BCM_HDRSetupSynchConn(OI_HCI_LM_HANDLE, uint32_t, uint32_t, uint16_t, uint16_t, uint8_t, uint32_t, BT_VSC_COMPLETE_CB)");
          }
          else if (WORD1(v30) - v22 > 1 && BYTE6(v30) == 2)
          {
            *(_BYTE *)(v29 + v22) = a4;
            *(_BYTE *)(v29 + WORD2(v30) + 1) = HIBYTE(a4);
            v23 = WORD2(v30) + 2;
            WORD2(v30) += 2;
            if (HIBYTE(v30))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5406, "OI_STATUS _BCM_HDRSetupSynchConn(OI_HCI_LM_HANDLE, uint32_t, uint32_t, uint16_t, uint16_t, uint8_t, uint32_t, BT_VSC_COMPLETE_CB)");
            }
            else if (WORD1(v30) - v23 > 1 && BYTE6(v30) == 2)
            {
              *(_BYTE *)(v29 + v23) = a5;
              *(_BYTE *)(v29 + WORD2(v30) + 1) = HIBYTE(a5);
              v24 = WORD2(v30);
              v25 = WORD2(v30) + 2;
              WORD2(v30) += 2;
              if (HIBYTE(v30))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5407, "OI_STATUS _BCM_HDRSetupSynchConn(OI_HCI_LM_HANDLE, uint32_t, uint32_t, uint16_t, uint16_t, uint8_t, uint32_t, BT_VSC_COMPLETE_CB)");
              }
              else if (WORD1(v30) > v25 && BYTE6(v30) == 2)
              {
                WORD2(v30) = v24 + 3;
                *(_BYTE *)(v29 + v25) = a6;
                if (HIBYTE(v30))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5410, "OI_STATUS _BCM_HDRSetupSynchConn(OI_HCI_LM_HANDLE, uint32_t, uint32_t, uint16_t, uint16_t, uint8_t, uint32_t, BT_VSC_COMPLETE_CB)");
                }
                else
                {
                  v26 = WORD2(v30);
                  if (WORD1(v30) > WORD2(v30) && BYTE6(v30) == 2)
                  {
                    ++WORD2(v30);
                    *(_BYTE *)(v29 + v26) = a7;
                    if (HIBYTE(v30))
                    {
                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5412, "OI_STATUS _BCM_HDRSetupSynchConn(OI_HCI_LM_HANDLE, uint32_t, uint32_t, uint16_t, uint16_t, uint8_t, uint32_t, BT_VSC_COMPLETE_CB)");
                    }
                    else
                    {
                      v27 = WORD2(v30);
                      if (WORD1(v30) > WORD2(v30) && BYTE6(v30) == 2)
                      {
                        ++WORD2(v30);
                        *(_BYTE *)(v29 + v27) = BYTE1(a7);
                        if (HIBYTE(v30))
                        {
                          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5414, "OI_STATUS _BCM_HDRSetupSynchConn(OI_HCI_LM_HANDLE, uint32_t, uint32_t, uint16_t, uint16_t, uint8_t, uint32_t, BT_VSC_COMPLETE_CB)");
                        }
                        else
                        {
                          v28 = WORD2(v30);
                          if (WORD1(v30) > WORD2(v30) && BYTE6(v30) == 2)
                          {
                            ++WORD2(v30);
                            *(_BYTE *)(v29 + v28) = BYTE2(a7);
                            return sub_10004C8A0(476, v29, BYTE4(v30), a8, (uint64_t)sub_10004AE9C, v17, v18, v19);
                          }
                        }
                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }
                    }
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                }
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C9A58(uint64_t a1, int a2, int a3, __int16 a4, __int16 a5, char a6, int a7, uint64_t (*a8)())
{
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int16 v20;
  unsigned __int16 v21;
  unsigned __int16 v22;
  unsigned __int16 v23;
  __int16 v24;
  unsigned __int16 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v29 = 0;
  v30 = 0;
  result = sub_10004BC7C(&v29);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v30))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5428, "OI_STATUS _BCM_HDRAcceptSynchConn(OI_BD_ADDR *, uint32_t, uint32_t, uint16_t, uint16_t, uint8_t, uint32_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v30) - WORD2(v30) > 5 && BYTE6(v30) == 2)
    {
      sub_10004C878(v29 + WORD2(v30), a1, 6uLL);
      v20 = WORD2(v30) + 6;
      WORD2(v30) += 6;
      if (HIBYTE(v30))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5429, "OI_STATUS _BCM_HDRAcceptSynchConn(OI_BD_ADDR *, uint32_t, uint32_t, uint16_t, uint16_t, uint8_t, uint32_t, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v30) - v20 > 3 && BYTE6(v30) == 2)
      {
        *(_BYTE *)(v29 + v20) = a2;
        *(_BYTE *)(v29 + WORD2(v30) + 1) = BYTE1(a2);
        *(_BYTE *)(v29 + WORD2(v30) + 2) = BYTE2(a2);
        *(_BYTE *)(v29 + WORD2(v30) + 3) = HIBYTE(a2);
        v21 = WORD2(v30) + 4;
        WORD2(v30) += 4;
        if (HIBYTE(v30))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5430, "OI_STATUS _BCM_HDRAcceptSynchConn(OI_BD_ADDR *, uint32_t, uint32_t, uint16_t, uint16_t, uint8_t, uint32_t, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v30) - v21 > 3 && BYTE6(v30) == 2)
        {
          *(_BYTE *)(v29 + v21) = a3;
          *(_BYTE *)(v29 + WORD2(v30) + 1) = BYTE1(a3);
          *(_BYTE *)(v29 + WORD2(v30) + 2) = BYTE2(a3);
          *(_BYTE *)(v29 + WORD2(v30) + 3) = HIBYTE(a3);
          v22 = WORD2(v30) + 4;
          WORD2(v30) += 4;
          if (HIBYTE(v30))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5431, "OI_STATUS _BCM_HDRAcceptSynchConn(OI_BD_ADDR *, uint32_t, uint32_t, uint16_t, uint16_t, uint8_t, uint32_t, BT_VSC_COMPLETE_CB)");
          }
          else if (WORD1(v30) - v22 > 1 && BYTE6(v30) == 2)
          {
            *(_BYTE *)(v29 + v22) = a4;
            *(_BYTE *)(v29 + WORD2(v30) + 1) = HIBYTE(a4);
            v23 = WORD2(v30) + 2;
            WORD2(v30) += 2;
            if (HIBYTE(v30))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5432, "OI_STATUS _BCM_HDRAcceptSynchConn(OI_BD_ADDR *, uint32_t, uint32_t, uint16_t, uint16_t, uint8_t, uint32_t, BT_VSC_COMPLETE_CB)");
            }
            else if (WORD1(v30) - v23 > 1 && BYTE6(v30) == 2)
            {
              *(_BYTE *)(v29 + v23) = a5;
              *(_BYTE *)(v29 + WORD2(v30) + 1) = HIBYTE(a5);
              v24 = WORD2(v30);
              v25 = WORD2(v30) + 2;
              WORD2(v30) += 2;
              if (HIBYTE(v30))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5433, "OI_STATUS _BCM_HDRAcceptSynchConn(OI_BD_ADDR *, uint32_t, uint32_t, uint16_t, uint16_t, uint8_t, uint32_t, BT_VSC_COMPLETE_CB)");
              }
              else if (WORD1(v30) > v25 && BYTE6(v30) == 2)
              {
                WORD2(v30) = v24 + 3;
                *(_BYTE *)(v29 + v25) = a6;
                if (HIBYTE(v30))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5436, "OI_STATUS _BCM_HDRAcceptSynchConn(OI_BD_ADDR *, uint32_t, uint32_t, uint16_t, uint16_t, uint8_t, uint32_t, BT_VSC_COMPLETE_CB)");
                }
                else
                {
                  v26 = WORD2(v30);
                  if (WORD1(v30) > WORD2(v30) && BYTE6(v30) == 2)
                  {
                    ++WORD2(v30);
                    *(_BYTE *)(v29 + v26) = a7;
                    if (HIBYTE(v30))
                    {
                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5438, "OI_STATUS _BCM_HDRAcceptSynchConn(OI_BD_ADDR *, uint32_t, uint32_t, uint16_t, uint16_t, uint8_t, uint32_t, BT_VSC_COMPLETE_CB)");
                    }
                    else
                    {
                      v27 = WORD2(v30);
                      if (WORD1(v30) > WORD2(v30) && BYTE6(v30) == 2)
                      {
                        ++WORD2(v30);
                        *(_BYTE *)(v29 + v27) = BYTE1(a7);
                        if (HIBYTE(v30))
                        {
                          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5440, "OI_STATUS _BCM_HDRAcceptSynchConn(OI_BD_ADDR *, uint32_t, uint32_t, uint16_t, uint16_t, uint8_t, uint32_t, BT_VSC_COMPLETE_CB)");
                        }
                        else
                        {
                          v28 = WORD2(v30);
                          if (WORD1(v30) > WORD2(v30) && BYTE6(v30) == 2)
                          {
                            ++WORD2(v30);
                            *(_BYTE *)(v29 + v28) = BYTE2(a7);
                            return sub_10004C8A0(516, v29, BYTE4(v30), a8, (uint64_t)sub_10004AE9C, v17, v18, v19);
                          }
                        }
                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }
                    }
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                }
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001C9FF0(char a1, __int16 a2, char a3, uint64_t (*a4)())
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int16 v14;
  unsigned __int16 v15;
  uint64_t v16;
  uint64_t v17;

  v16 = 0;
  v17 = 0;
  result = sub_10004BC7C(&v16);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v17))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5453, "OI_STATUS _BCM_SCOBufferSizeControl(uint8_t, uint16_t, uint8_t, BT_VSC_SCO_BUFFER_SIZE_CONTROL_CB)");
    }
    else
    {
      v12 = WORD2(v17);
      if (WORD1(v17) > WORD2(v17) && BYTE6(v17) == 2)
      {
        ++WORD2(v17);
        *(_BYTE *)(v16 + v12) = 0;
        if (HIBYTE(v17))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5454, "OI_STATUS _BCM_SCOBufferSizeControl(uint8_t, uint16_t, uint8_t, BT_VSC_SCO_BUFFER_SIZE_CONTROL_CB)");
        }
        else
        {
          v13 = WORD2(v17);
          if (WORD1(v17) > WORD2(v17) && BYTE6(v17) == 2)
          {
            ++WORD2(v17);
            *(_BYTE *)(v16 + v13) = a1;
            if (HIBYTE(v17))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5455, "OI_STATUS _BCM_SCOBufferSizeControl(uint8_t, uint16_t, uint8_t, BT_VSC_SCO_BUFFER_SIZE_CONTROL_CB)");
            }
            else if (WORD1(v17) - WORD2(v17) > 1 && BYTE6(v17) == 2)
            {
              *(_WORD *)(v16 + WORD2(v17)) = a2;
              v14 = WORD2(v17);
              v15 = WORD2(v17) + 2;
              WORD2(v17) += 2;
              if (HIBYTE(v17))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5456, "OI_STATUS _BCM_SCOBufferSizeControl(uint8_t, uint16_t, uint8_t, BT_VSC_SCO_BUFFER_SIZE_CONTROL_CB)");
              }
              else if (WORD1(v17) > v15 && BYTE6(v17) == 2)
              {
                WORD2(v17) = v14 + 3;
                *(_BYTE *)(v16 + v15) = a3;
                return sub_10004C8A0(622, v16, BYTE4(v17), a4, (uint64_t)sub_1001A7FC4, v9, v10, v11);
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001CA250(char a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v9 = 0;
  v10 = 0;
  result = sub_10004BC7C(&v9);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v10))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5470, "OI_STATUS _BCM_HRBControl(uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v8 = WORD2(v10);
      if (WORD1(v10) > WORD2(v10) && BYTE6(v10) == 2)
      {
        ++WORD2(v10);
        *(_BYTE *)(v9 + v8) = a1;
        return sub_10004C8A0(592, v9, BYTE4(v10), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001CA31C(char a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v9 = 0;
  v10 = 0;
  result = sub_10004BC7C(&v9);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v10))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5484, "OI_STATUS _BCM_HRBAllowedBands(uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v8 = WORD2(v10);
      if (WORD1(v10) > WORD2(v10) && BYTE6(v10) == 2)
      {
        ++WORD2(v10);
        *(_BYTE *)(v9 + v8) = a1;
        return sub_10004C8A0(593, v9, BYTE4(v10), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001CA3E8(char a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v9 = 0;
  v10 = 0;
  result = sub_10004BC7C(&v9);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v10))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5498, "OI_STATUS _BCM_HRBClassificationBands(uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v8 = WORD2(v10);
      if (WORD1(v10) > WORD2(v10) && BYTE6(v10) == 2)
      {
        ++WORD2(v10);
        *(_BYTE *)(v9 + v8) = a1;
        return sub_10004C8A0(604, v9, BYTE4(v10), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001CA4B4(uint64_t a1, __int16 a2, char a3, __int16 a4, char a5, char a6, char a7)
{
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int16 v18;
  __int16 v19;
  unsigned __int16 v20;
  uint64_t v21;
  __int16 v22;
  unsigned __int16 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v26 = 0;
  v27 = 0;
  result = sub_10004BC7C(&v26);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v27))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5513, "OI_STATUS _BCM_HRBCreateConnection(OI_BD_ADDR *, uint16_t, uint8_t, uint16_t, uint8_t, uint8_t, uint8_t)");
    }
    else if (WORD1(v27) - WORD2(v27) > 5 && BYTE6(v27) == 2)
    {
      sub_10004C878(v26 + WORD2(v27), a1, 6uLL);
      v18 = WORD2(v27) + 6;
      WORD2(v27) += 6;
      if (HIBYTE(v27))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5514, "OI_STATUS _BCM_HRBCreateConnection(OI_BD_ADDR *, uint16_t, uint8_t, uint16_t, uint8_t, uint8_t, uint8_t)");
      }
      else if (WORD1(v27) - v18 > 1 && BYTE6(v27) == 2)
      {
        *(_BYTE *)(v26 + v18) = a2;
        *(_BYTE *)(v26 + WORD2(v27) + 1) = HIBYTE(a2);
        v19 = WORD2(v27);
        v20 = WORD2(v27) + 2;
        WORD2(v27) += 2;
        if (HIBYTE(v27))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5515, "OI_STATUS _BCM_HRBCreateConnection(OI_BD_ADDR *, uint16_t, uint8_t, uint16_t, uint8_t, uint8_t, uint8_t)");
        }
        else if (WORD1(v27) > v20 && BYTE6(v27) == 2)
        {
          WORD2(v27) = v19 + 3;
          *(_BYTE *)(v26 + v20) = a3;
          if (HIBYTE(v27))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5516, "OI_STATUS _BCM_HRBCreateConnection(OI_BD_ADDR *, uint16_t, uint8_t, uint16_t, uint8_t, uint8_t, uint8_t)");
          }
          else
          {
            v21 = WORD2(v27);
            if (WORD1(v27) > WORD2(v27) && BYTE6(v27) == 2)
            {
              ++WORD2(v27);
              *(_BYTE *)(v26 + v21) = 0;
              if (HIBYTE(v27))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5517, "OI_STATUS _BCM_HRBCreateConnection(OI_BD_ADDR *, uint16_t, uint8_t, uint16_t, uint8_t, uint8_t, uint8_t)");
              }
              else if (WORD1(v27) - WORD2(v27) > 1 && BYTE6(v27) == 2)
              {
                *(_WORD *)(v26 + WORD2(v27)) = a4;
                v22 = WORD2(v27);
                v23 = WORD2(v27) + 2;
                WORD2(v27) += 2;
                if (HIBYTE(v27))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5518, "OI_STATUS _BCM_HRBCreateConnection(OI_BD_ADDR *, uint16_t, uint8_t, uint16_t, uint8_t, uint8_t, uint8_t)");
                }
                else if (WORD1(v27) > v23 && BYTE6(v27) == 2)
                {
                  WORD2(v27) = v22 + 3;
                  *(_BYTE *)(v26 + v23) = a5;
                  if (HIBYTE(v27))
                  {
                    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5519, "OI_STATUS _BCM_HRBCreateConnection(OI_BD_ADDR *, uint16_t, uint8_t, uint16_t, uint8_t, uint8_t, uint8_t)");
                  }
                  else
                  {
                    v24 = WORD2(v27);
                    if (WORD1(v27) > WORD2(v27) && BYTE6(v27) == 2)
                    {
                      ++WORD2(v27);
                      *(_BYTE *)(v26 + v24) = a6;
                      if (HIBYTE(v27))
                      {
                        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5520, "OI_STATUS _BCM_HRBCreateConnection(OI_BD_ADDR *, uint16_t, uint8_t, uint16_t, uint8_t, uint8_t, uint8_t)");
                      }
                      else
                      {
                        v25 = WORD2(v27);
                        if (WORD1(v27) > WORD2(v27) && BYTE6(v27) == 2)
                        {
                          ++WORD2(v27);
                          *(_BYTE *)(v26 + v25) = a7;
                          return sub_10004C8A0(598, v26, BYTE4(v27), 0, (uint64_t)sub_10004AE9C, v15, v16, v17);
                        }
                      }
                      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                    }
                  }
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001CA940(__int16 a1, char a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int16 v10;
  unsigned __int16 v11;
  uint64_t v12;
  uint64_t v13;

  v12 = 0;
  v13 = 0;
  result = sub_10004BC7C(&v12);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v13))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5534, "OI_STATUS _BCM_HRBChangeConnectionBand(OI_HCI_LM_HANDLE, uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v13) - WORD2(v13) > 1 && BYTE6(v13) == 2)
    {
      *(_WORD *)(v12 + WORD2(v13)) = a1;
      v10 = WORD2(v13);
      v11 = WORD2(v13) + 2;
      WORD2(v13) += 2;
      if (HIBYTE(v13))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5535, "OI_STATUS _BCM_HRBChangeConnectionBand(OI_HCI_LM_HANDLE, uint8_t, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v13) > v11 && BYTE6(v13) == 2)
      {
        WORD2(v13) = v10 + 3;
        *(_BYTE *)(v12 + v11) = a2;
        return sub_10004C8A0(599, v12, BYTE4(v13), a3, (uint64_t)sub_10004AE9C, v7, v8, v9);
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001CAAAC(char a1, char a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v12 = 0;
  v13 = 0;
  result = sub_10004BC7C(&v12);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v13))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5549, "OI_STATUS _BCM_HRBWriteScanEnable(uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v10 = WORD2(v13);
      if (WORD1(v13) > WORD2(v13) && BYTE6(v13) == 2)
      {
        ++WORD2(v13);
        *(_BYTE *)(v12 + v10) = a1;
        if (HIBYTE(v13))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5550, "OI_STATUS _BCM_HRBWriteScanEnable(uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
        }
        else
        {
          v11 = WORD2(v13);
          if (WORD1(v13) > WORD2(v13) && BYTE6(v13) == 2)
          {
            ++WORD2(v13);
            *(_BYTE *)(v12 + v11) = a2;
            return sub_10004C8A0(600, v12, BYTE4(v13), a3, (uint64_t)sub_10004AE9C, v7, v8, v9);
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001CABFC(__int16 a1, __int16 a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int16 v10;
  uint64_t v11;
  uint64_t v12;

  v11 = 0;
  v12 = 0;
  result = sub_10004BC7C(&v11);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v12))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5564, "OI_STATUS _BCM_HRBWritePageScanActivity(uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v12) - WORD2(v12) > 1 && BYTE6(v12) == 2)
    {
      *(_WORD *)(v11 + WORD2(v12)) = a1;
      v10 = WORD2(v12) + 2;
      WORD2(v12) += 2;
      if (HIBYTE(v12))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5565, "OI_STATUS _BCM_HRBWritePageScanActivity(uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v12) - v10 > 1 && BYTE6(v12) == 2)
      {
        *(_BYTE *)(v11 + v10) = a2;
        *(_BYTE *)(v11 + WORD2(v12) + 1) = HIBYTE(a2);
        WORD2(v12) += 2;
        return sub_10004C8A0(601, v11, BYTE4(v12), a3, (uint64_t)sub_10004AE9C, v7, v8, v9);
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001CAD84(int a1, _WORD *a2, _BYTE *a3, char *a4, uint64_t (*a5)())
{
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int16 v15;
  unsigned __int16 v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;

  LODWORD(v9) = a1;
  v18 = 0;
  v19 = 0;
  result = sub_10004BC7C(&v18);
  if ((_DWORD)result)
    return result;
  if (HIBYTE(v19))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5580, "OI_STATUS _BCM_HRBSetAFHHostChannelClassification(uint8_t, uint16_t *, uint16_t *, uint8_t *, BT_VSC_COMPLETE_CB)");
    goto LABEL_28;
  }
  v14 = WORD2(v19);
  if (WORD1(v19) <= WORD2(v19) || BYTE6(v19) != 2)
LABEL_28:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  ++WORD2(v19);
  *(_BYTE *)(v18 + v14) = v9;
  if ((_DWORD)v9)
  {
    v9 = v9;
    while (!HIBYTE(v19))
    {
      if (WORD1(v19) - WORD2(v19) <= 1 || BYTE6(v19) != 2)
        goto LABEL_22;
      *(_WORD *)(v18 + WORD2(v19)) = *a2;
      v15 = WORD2(v19) + 2;
      WORD2(v19) += 2;
      if (HIBYTE(v19))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5584, "OI_STATUS _BCM_HRBSetAFHHostChannelClassification(uint8_t, uint16_t *, uint16_t *, uint8_t *, BT_VSC_COMPLETE_CB)");
LABEL_24:
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      if (WORD1(v19) - v15 <= 1 || BYTE6(v19) != 2)
        goto LABEL_24;
      *(_BYTE *)(v18 + v15) = *a3;
      *(_BYTE *)(v18 + WORD2(v19) + 1) = a3[1];
      v16 = WORD2(v19) + 2;
      WORD2(v19) += 2;
      if (HIBYTE(v19))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5585, "OI_STATUS _BCM_HRBSetAFHHostChannelClassification(uint8_t, uint16_t *, uint16_t *, uint8_t *, BT_VSC_COMPLETE_CB)");
LABEL_26:
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      if (WORD1(v19) - v16 <= 62 || BYTE6(v19) != 2)
        goto LABEL_26;
      memmove((void *)(v18 + v16), a4, 0x3FuLL);
      v17 = BYTE4(v19) + 63;
      WORD2(v19) += 63;
      a4 += 63;
      a3 += 2;
      ++a2;
      if (!--v9)
        return sub_10004C8A0(606, v18, v17, a5, (uint64_t)sub_10004AE9C, v11, v12, v13);
    }
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5583, "OI_STATUS _BCM_HRBSetAFHHostChannelClassification(uint8_t, uint16_t *, uint16_t *, uint8_t *, BT_VSC_COMPLETE_CB)");
LABEL_22:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  v17 = BYTE4(v19);
  return sub_10004C8A0(606, v18, v17, a5, (uint64_t)sub_10004AE9C, v11, v12, v13);
}

uint64_t sub_1001CB048(char a1, char a2, char a3, char a4, uint64_t (*a5)())
{
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v18 = 0;
  v19 = 0;
  result = sub_10004BC7C(&v18);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v19))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5600, "OI_STATUS _BCM_GetEssentialPowerDatabaseEntries(uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_GET_ESSENTIAL_POWER_DATABASE_ENTRIES_CB)");
    }
    else
    {
      v14 = WORD2(v19);
      if (WORD1(v19) > WORD2(v19) && BYTE6(v19) == 2)
      {
        ++WORD2(v19);
        *(_BYTE *)(v18 + v14) = a1;
        if (HIBYTE(v19))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5601, "OI_STATUS _BCM_GetEssentialPowerDatabaseEntries(uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_GET_ESSENTIAL_POWER_DATABASE_ENTRIES_CB)");
        }
        else
        {
          v15 = WORD2(v19);
          if (WORD1(v19) > WORD2(v19) && BYTE6(v19) == 2)
          {
            ++WORD2(v19);
            *(_BYTE *)(v18 + v15) = a2;
            if (HIBYTE(v19))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5602, "OI_STATUS _BCM_GetEssentialPowerDatabaseEntries(uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_GET_ESSENTIAL_POWER_DATABASE_ENTRIES_CB)");
            }
            else
            {
              v16 = WORD2(v19);
              if (WORD1(v19) > WORD2(v19) && BYTE6(v19) == 2)
              {
                ++WORD2(v19);
                *(_BYTE *)(v18 + v16) = a3;
                if (HIBYTE(v19))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5603, "OI_STATUS _BCM_GetEssentialPowerDatabaseEntries(uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_GET_ESSENTIAL_POWER_DATABASE_ENTRIES_CB)");
                }
                else
                {
                  v17 = WORD2(v19);
                  if (WORD1(v19) > WORD2(v19) && BYTE6(v19) == 2)
                  {
                    ++WORD2(v19);
                    *(_BYTE *)(v18 + v17) = a4;
                    return sub_10004C8A0(609, v18, BYTE4(v19), a5, (uint64_t)sub_1001A81A0, v11, v12, v13);
                  }
                }
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001CB298(__int16 a1, char a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int16 v10;
  unsigned __int16 v11;
  uint64_t v12;
  uint64_t v13;

  v12 = 0;
  v13 = 0;
  result = sub_10004BC7C(&v12);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v13))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5617, "OI_STATUS _BCM_HRBReadEnhancedTransmitPowerLevel(uint16_t, uint8_t, BT_VSC_HRB_READ_ENHANCED_TX_POWER_LEVEL_CB)");
    }
    else if (WORD1(v13) - WORD2(v13) > 1 && BYTE6(v13) == 2)
    {
      *(_WORD *)(v12 + WORD2(v13)) = a1;
      v10 = WORD2(v13);
      v11 = WORD2(v13) + 2;
      WORD2(v13) += 2;
      if (HIBYTE(v13))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5618, "OI_STATUS _BCM_HRBReadEnhancedTransmitPowerLevel(uint16_t, uint8_t, BT_VSC_HRB_READ_ENHANCED_TX_POWER_LEVEL_CB)");
      }
      else if (WORD1(v13) > v11 && BYTE6(v13) == 2)
      {
        WORD2(v13) = v10 + 3;
        *(_BYTE *)(v12 + v11) = a2;
        return sub_10004C8A0(605, v12, BYTE4(v13), a3, (uint64_t)sub_1001A8488, v7, v8, v9);
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001CB404(__int16 a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v8 = 0;
  v9 = 0;
  result = sub_10004BC7C(&v8);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v9))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5630, "OI_STATUS _BCM_HRBReadAFHChannelMap(uint16_t, BT_VSC_HRB_READ_AFH_CHANNEL_MAP_CB)");
    }
    else if (WORD1(v9) - WORD2(v9) > 1 && BYTE6(v9) == 2)
    {
      *(_WORD *)(v8 + WORD2(v9)) = a1;
      WORD2(v9) += 2;
      return sub_10004C8A0(602, v8, BYTE4(v9), a2, (uint64_t)sub_1001A87E4, v5, v6, v7);
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001CB4EC(char a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v9 = 0;
  v10 = 0;
  result = sub_10004BC7C(&v9);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v10))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5642, "OI_STATUS _BCM_HRBLimitChannelMap(uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v8 = WORD2(v10);
      if (WORD1(v10) > WORD2(v10) && BYTE6(v10) == 2)
      {
        ++WORD2(v10);
        *(_BYTE *)(v9 + v8) = a1;
        return sub_10004C8A0(621, v9, BYTE4(v10), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001CB5B8(unsigned int a1, char *a2, char *a3, char *a4, uint64_t (*a5)())
{
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;

  v22 = 0;
  v23 = 0;
  result = sub_10004BC7C(&v22);
  if ((_DWORD)result)
    return result;
  if (HIBYTE(v23))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5654, "OI_STATUS _BCM_HRBSetBandEdges(uint8_t, uint8_t *, uint8_t *, uint8_t *, BT_VSC_COMPLETE_CB)");
    goto LABEL_26;
  }
  v14 = WORD2(v23);
  if (WORD1(v23) <= WORD2(v23) || BYTE6(v23) != 2)
LABEL_26:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  ++WORD2(v23);
  *(_BYTE *)(v22 + v14) = a1;
  if (a1)
  {
    v15 = a1;
    while (!HIBYTE(v23))
    {
      v16 = WORD2(v23);
      if (WORD1(v23) <= WORD2(v23) || BYTE6(v23) != 2)
        goto LABEL_20;
      v17 = *a2;
      ++WORD2(v23);
      *(_BYTE *)(v22 + v16) = v17;
      if (HIBYTE(v23))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5657, "OI_STATUS _BCM_HRBSetBandEdges(uint8_t, uint8_t *, uint8_t *, uint8_t *, BT_VSC_COMPLETE_CB)");
LABEL_22:
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      v18 = WORD2(v23);
      if (WORD1(v23) <= WORD2(v23) || BYTE6(v23) != 2)
        goto LABEL_22;
      v19 = *a3;
      ++WORD2(v23);
      *(_BYTE *)(v22 + v18) = v19;
      if (HIBYTE(v23))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5658, "OI_STATUS _BCM_HRBSetBandEdges(uint8_t, uint8_t *, uint8_t *, uint8_t *, BT_VSC_COMPLETE_CB)");
LABEL_24:
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      v20 = WORD2(v23);
      if (WORD1(v23) <= WORD2(v23) || BYTE6(v23) != 2)
        goto LABEL_24;
      v21 = *a4++;
      ++WORD2(v23);
      *(_BYTE *)(v22 + v20) = v21;
      ++a3;
      ++a2;
      if (!--v15)
        return sub_10004C8A0(637, v22, BYTE4(v23), a5, (uint64_t)sub_10004AE9C, v11, v12, v13);
    }
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5656, "OI_STATUS _BCM_HRBSetBandEdges(uint8_t, uint8_t *, uint8_t *, uint8_t *, BT_VSC_COMPLETE_CB)");
LABEL_20:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return sub_10004C8A0(637, v22, BYTE4(v23), a5, (uint64_t)sub_10004AE9C, v11, v12, v13);
}

uint64_t sub_1001CB82C(uint64_t a1, int a2, char a3, char a4, char a5, uint64_t *a6, char a7, char a8, char a9, char a10, __int16 a11, char a12, char a13, uint64_t (*a14)())
{
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;
  unsigned __int16 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int16 v32;
  unsigned __int16 v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int16 v38;
  unsigned __int16 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int16 v44;
  unsigned __int16 v45;
  uint64_t v46;
  uint64_t v47;
  __int16 v48;
  unsigned __int16 v49;
  uint64_t v50;
  uint64_t v51;
  __int16 v52;
  unsigned __int16 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int16 v60;
  unsigned __int16 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int16 v67;
  unsigned __int16 v68;
  uint64_t v69;
  uint64_t v70;

  v69 = 0;
  v70 = 0;
  result = sub_10004BC7C(&v69);
  if ((_DWORD)result)
    return result;
  if (HIBYTE(v70))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5681, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
    goto LABEL_152;
  }
  if (WORD1(v70) - WORD2(v70) <= 5 || BYTE6(v70) != 2)
LABEL_152:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  sub_10004C878(v69 + WORD2(v70), a1, 6uLL);
  v26 = WORD2(v70);
  v27 = WORD2(v70) + 6;
  WORD2(v70) += 6;
  if (HIBYTE(v70))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5682, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
    goto LABEL_154;
  }
  if (WORD1(v70) <= v27 || BYTE6(v70) != 2)
LABEL_154:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  WORD2(v70) = v26 + 7;
  *(_BYTE *)(v69 + v27) = a2;
  switch(a2)
  {
    case 0:
      if (HIBYTE(v70))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5686, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
      }
      else
      {
        v35 = WORD2(v70);
        if (WORD1(v70) > WORD2(v70) && BYTE6(v70) == 2)
        {
          ++WORD2(v70);
          *(_BYTE *)(v69 + v35) = a8;
          if (HIBYTE(v70))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5687, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
          }
          else
          {
            v36 = WORD2(v70);
            if (WORD1(v70) > WORD2(v70) && BYTE6(v70) == 2)
            {
              ++WORD2(v70);
              *(_BYTE *)(v69 + v36) = a9;
              if (HIBYTE(v70))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5688, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
              }
              else
              {
                v37 = WORD2(v70);
                if (WORD1(v70) > WORD2(v70) && BYTE6(v70) == 2)
                {
                  ++WORD2(v70);
                  *(_BYTE *)(v69 + v37) = a10;
                  if (HIBYTE(v70))
                  {
                    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5689, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                  }
                  else if (WORD1(v70) - WORD2(v70) > 1 && BYTE6(v70) == 2)
                  {
                    *(_WORD *)(v69 + WORD2(v70)) = a11;
                    v38 = WORD2(v70);
                    v39 = WORD2(v70) + 2;
                    WORD2(v70) += 2;
                    if (HIBYTE(v70))
                    {
                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5690, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                    }
                    else if (WORD1(v70) > v39 && BYTE6(v70) == 2)
                    {
                      WORD2(v70) = v38 + 3;
                      *(_BYTE *)(v69 + v39) = a12;
                      if (HIBYTE(v70))
                      {
                        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5691, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                        goto LABEL_180;
                      }
                      v34 = WORD2(v70);
                      if (WORD1(v70) <= WORD2(v70) || BYTE6(v70) != 2)
LABEL_180:
                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      goto LABEL_148;
                    }
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    case 1:
      if (HIBYTE(v70))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5695, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
        goto LABEL_182;
      }
      v40 = WORD2(v70);
      if (WORD1(v70) <= WORD2(v70) || BYTE6(v70) != 2)
LABEL_182:
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      ++WORD2(v70);
      *(_BYTE *)(v69 + v40) = a3;
      if (HIBYTE(v70))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5696, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
        goto LABEL_184;
      }
      v41 = WORD2(v70);
      if (WORD1(v70) <= WORD2(v70) || BYTE6(v70) != 2)
LABEL_184:
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      ++WORD2(v70);
      *(_BYTE *)(v69 + v41) = a8;
      if (HIBYTE(v70))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5697, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
        goto LABEL_186;
      }
      v42 = WORD2(v70);
      if (WORD1(v70) <= WORD2(v70) || BYTE6(v70) != 2)
LABEL_186:
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      ++WORD2(v70);
      *(_BYTE *)(v69 + v42) = a9;
      if (HIBYTE(v70))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5698, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
        goto LABEL_188;
      }
      v43 = WORD2(v70);
      if (WORD1(v70) <= WORD2(v70) || BYTE6(v70) != 2)
LABEL_188:
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      ++WORD2(v70);
      *(_BYTE *)(v69 + v43) = a10;
      if (HIBYTE(v70))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5699, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
        goto LABEL_190;
      }
      if (WORD1(v70) - WORD2(v70) <= 1 || BYTE6(v70) != 2)
LABEL_190:
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      *(_WORD *)(v69 + WORD2(v70)) = a11;
      v44 = WORD2(v70);
      v45 = WORD2(v70) + 2;
      WORD2(v70) += 2;
      if (HIBYTE(v70))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5700, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
        goto LABEL_192;
      }
      if (WORD1(v70) <= v45 || BYTE6(v70) != 2)
LABEL_192:
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      WORD2(v70) = v44 + 3;
      *(_BYTE *)(v69 + v45) = a12;
      if (HIBYTE(v70))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5701, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
        goto LABEL_194;
      }
      v34 = WORD2(v70);
      if (WORD1(v70) <= WORD2(v70) || BYTE6(v70) != 2)
LABEL_194:
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
LABEL_148:
      WORD2(v70) = v34 + 1;
      *(_BYTE *)(v69 + v34) = a13;
      return sub_10004C8A0(81, v69, BYTE4(v70), a14, (uint64_t)sub_10004AE9C, v23, v24, v25);
    case 2:
      return sub_10004C8A0(81, v69, BYTE4(v70), a14, (uint64_t)sub_10004AE9C, v23, v24, v25);
    case 3:
      if (HIBYTE(v70))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5705, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v70) - WORD2(v70) > 9 && BYTE6(v70) == 2)
      {
        v46 = v69 + WORD2(v70);
        v47 = *a6;
        *(_WORD *)(v46 + 8) = *((_WORD *)a6 + 4);
        *(_QWORD *)v46 = v47;
        v48 = WORD2(v70);
        v49 = WORD2(v70) + 10;
        WORD2(v70) += 10;
        if (HIBYTE(v70))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5706, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v70) > v49 && BYTE6(v70) == 2)
        {
          WORD2(v70) = v48 + 11;
          *(_BYTE *)(v69 + v49) = a8;
          if (HIBYTE(v70))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5707, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
          }
          else
          {
            v50 = WORD2(v70);
            if (WORD1(v70) > WORD2(v70) && BYTE6(v70) == 2)
            {
              ++WORD2(v70);
              *(_BYTE *)(v69 + v50) = a9;
              if (HIBYTE(v70))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5708, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
              }
              else
              {
                v51 = WORD2(v70);
                if (WORD1(v70) > WORD2(v70) && BYTE6(v70) == 2)
                {
                  ++WORD2(v70);
                  *(_BYTE *)(v69 + v51) = a10;
                  if (HIBYTE(v70))
                  {
                    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5709, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                  }
                  else if (WORD1(v70) - WORD2(v70) > 1 && BYTE6(v70) == 2)
                  {
                    *(_WORD *)(v69 + WORD2(v70)) = a11;
                    v52 = WORD2(v70);
                    v53 = WORD2(v70) + 2;
                    WORD2(v70) += 2;
                    if (HIBYTE(v70))
                    {
                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5710, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                    }
                    else if (WORD1(v70) > v53 && BYTE6(v70) == 2)
                    {
                      WORD2(v70) = v52 + 3;
                      *(_BYTE *)(v69 + v53) = a12;
                      if (HIBYTE(v70))
                      {
                        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5711, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                      }
                      else
                      {
                        v34 = WORD2(v70);
                        if (WORD1(v70) > WORD2(v70) && BYTE6(v70) == 2)
                          goto LABEL_148;
                      }
                      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                    }
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    case 4:
      if (HIBYTE(v70))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5715, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
      }
      else
      {
        v54 = WORD2(v70);
        if (WORD1(v70) > WORD2(v70) && BYTE6(v70) == 2)
        {
          ++WORD2(v70);
          *(_BYTE *)(v69 + v54) = a3;
          if (HIBYTE(v70))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5716, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
          }
          else
          {
            v55 = WORD2(v70);
            if (WORD1(v70) > WORD2(v70) && BYTE6(v70) == 2)
            {
              ++WORD2(v70);
              *(_BYTE *)(v69 + v55) = a4;
              if (HIBYTE(v70))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5717, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
              }
              else
              {
                v56 = WORD2(v70);
                if (WORD1(v70) > WORD2(v70) && BYTE6(v70) == 2)
                {
                  ++WORD2(v70);
                  *(_BYTE *)(v69 + v56) = a5;
                  if (HIBYTE(v70))
                  {
                    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5718, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                  }
                  else
                  {
                    v57 = WORD2(v70);
                    if (WORD1(v70) > WORD2(v70) && BYTE6(v70) == 2)
                    {
                      ++WORD2(v70);
                      *(_BYTE *)(v69 + v57) = a8;
                      if (HIBYTE(v70))
                      {
                        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5719, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                      }
                      else
                      {
                        v58 = WORD2(v70);
                        if (WORD1(v70) > WORD2(v70) && BYTE6(v70) == 2)
                        {
                          ++WORD2(v70);
                          *(_BYTE *)(v69 + v58) = a9;
                          if (HIBYTE(v70))
                          {
                            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5720, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                          }
                          else
                          {
                            v59 = WORD2(v70);
                            if (WORD1(v70) > WORD2(v70) && BYTE6(v70) == 2)
                            {
                              ++WORD2(v70);
                              *(_BYTE *)(v69 + v59) = a10;
                              if (HIBYTE(v70))
                              {
                                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5721, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                              }
                              else if (WORD1(v70) - WORD2(v70) > 1 && BYTE6(v70) == 2)
                              {
                                *(_WORD *)(v69 + WORD2(v70)) = a11;
                                v60 = WORD2(v70);
                                v61 = WORD2(v70) + 2;
                                WORD2(v70) += 2;
                                if (HIBYTE(v70))
                                {
                                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5722, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                                }
                                else if (WORD1(v70) > v61 && BYTE6(v70) == 2)
                                {
                                  WORD2(v70) = v60 + 3;
                                  *(_BYTE *)(v69 + v61) = a12;
                                  if (HIBYTE(v70))
                                  {
                                    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5723, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                                  }
                                  else
                                  {
                                    v34 = WORD2(v70);
                                    if (WORD1(v70) > WORD2(v70) && BYTE6(v70) == 2)
                                      goto LABEL_148;
                                  }
                                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stac"
                                                         "k/vsc/bcm/bcm_vsc.c");
                                }
                                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/bcm/bcm_vsc.c");
                              }
                              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                            }
                          }
                          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                        }
                      }
                      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                    }
                  }
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    default:
      switch(a2)
      {
        case 128:
          if (HIBYTE(v70))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5727, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
          }
          else
          {
            v28 = WORD2(v70);
            if (WORD1(v70) > WORD2(v70) && BYTE6(v70) == 2)
            {
              ++WORD2(v70);
              *(_BYTE *)(v69 + v28) = a7;
              if (HIBYTE(v70))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5728, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
              }
              else
              {
                v29 = WORD2(v70);
                if (WORD1(v70) > WORD2(v70) && BYTE6(v70) == 2)
                {
                  ++WORD2(v70);
                  *(_BYTE *)(v69 + v29) = a8;
                  if (HIBYTE(v70))
                  {
                    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5729, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                  }
                  else
                  {
                    v30 = WORD2(v70);
                    if (WORD1(v70) > WORD2(v70) && BYTE6(v70) == 2)
                    {
                      ++WORD2(v70);
                      *(_BYTE *)(v69 + v30) = a9;
                      if (HIBYTE(v70))
                      {
                        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5730, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                      }
                      else
                      {
                        v31 = WORD2(v70);
                        if (WORD1(v70) > WORD2(v70) && BYTE6(v70) == 2)
                        {
                          ++WORD2(v70);
                          *(_BYTE *)(v69 + v31) = a10;
                          if (HIBYTE(v70))
                          {
                            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5731, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                          }
                          else if (WORD1(v70) - WORD2(v70) > 1 && BYTE6(v70) == 2)
                          {
                            *(_WORD *)(v69 + WORD2(v70)) = a11;
                            v32 = WORD2(v70);
                            v33 = WORD2(v70) + 2;
                            WORD2(v70) += 2;
                            if (HIBYTE(v70))
                            {
                              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5732, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                            }
                            else if (WORD1(v70) > v33 && BYTE6(v70) == 2)
                            {
                              WORD2(v70) = v32 + 3;
                              *(_BYTE *)(v69 + v33) = a12;
                              if (HIBYTE(v70))
                              {
                                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5733, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                              }
                              else
                              {
                                v34 = WORD2(v70);
                                if (WORD1(v70) > WORD2(v70) && BYTE6(v70) == 2)
                                  goto LABEL_148;
                              }
                              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                            }
                            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                          }
                          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                        }
                      }
                      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                    }
                  }
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        case 129:
          if (HIBYTE(v70))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5737, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
          }
          else
          {
            v62 = WORD2(v70);
            if (WORD1(v70) > WORD2(v70) && BYTE6(v70) == 2)
            {
              ++WORD2(v70);
              *(_BYTE *)(v69 + v62) = a7;
              if (HIBYTE(v70))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5738, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
              }
              else
              {
                v63 = WORD2(v70);
                if (WORD1(v70) > WORD2(v70) && BYTE6(v70) == 2)
                {
                  ++WORD2(v70);
                  *(_BYTE *)(v69 + v63) = a3;
                  if (HIBYTE(v70))
                  {
                    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5739, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                  }
                  else
                  {
                    v64 = WORD2(v70);
                    if (WORD1(v70) > WORD2(v70) && BYTE6(v70) == 2)
                    {
                      ++WORD2(v70);
                      *(_BYTE *)(v69 + v64) = a8;
                      if (HIBYTE(v70))
                      {
                        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5740, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                      }
                      else
                      {
                        v65 = WORD2(v70);
                        if (WORD1(v70) > WORD2(v70) && BYTE6(v70) == 2)
                        {
                          ++WORD2(v70);
                          *(_BYTE *)(v69 + v65) = a9;
                          if (HIBYTE(v70))
                          {
                            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5741, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                          }
                          else
                          {
                            v66 = WORD2(v70);
                            if (WORD1(v70) > WORD2(v70) && BYTE6(v70) == 2)
                            {
                              ++WORD2(v70);
                              *(_BYTE *)(v69 + v66) = a10;
                              if (HIBYTE(v70))
                              {
                                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5742, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                              }
                              else if (WORD1(v70) - WORD2(v70) > 1 && BYTE6(v70) == 2)
                              {
                                *(_WORD *)(v69 + WORD2(v70)) = a11;
                                v67 = WORD2(v70);
                                v68 = WORD2(v70) + 2;
                                WORD2(v70) += 2;
                                if (HIBYTE(v70))
                                {
                                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5743, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                                }
                                else if (WORD1(v70) > v68 && BYTE6(v70) == 2)
                                {
                                  WORD2(v70) = v67 + 3;
                                  *(_BYTE *)(v69 + v68) = a12;
                                  if (HIBYTE(v70))
                                  {
                                    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5744, "OI_STATUS _BCM_EnhancedTxTest(OI_BD_ADDR *, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t *, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                                  }
                                  else
                                  {
                                    v34 = WORD2(v70);
                                    if (WORD1(v70) > WORD2(v70) && BYTE6(v70) == 2)
                                      goto LABEL_148;
                                  }
                                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stac"
                                                         "k/vsc/bcm/bcm_vsc.c");
                                }
                                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/bcm/bcm_vsc.c");
                              }
                              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                            }
                          }
                          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                        }
                      }
                      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                    }
                  }
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        default:
          return sub_10004C8A0(81, v69, BYTE4(v70), a14, (uint64_t)sub_10004AE9C, v23, v24, v25);
      }
  }
}

uint64_t sub_1001CD7B8(uint64_t a1, __int16 a2, int a3, char a4, char a5, char a6, char a7, char a8, char a9, __int16 a10, uint64_t (*a11)())
{
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int16 v23;
  __int16 v24;
  unsigned __int16 v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int16 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v32 = 0;
  v33 = 0;
  result = sub_10004BC7C(&v32);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v33))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5782, "OI_STATUS _BCM_EnhancedRxTest(OI_BD_ADDR *, uint16_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v33) - WORD2(v33) > 5 && BYTE6(v33) == 2)
    {
      sub_10004C878(v32 + WORD2(v33), a1, 6uLL);
      v23 = WORD2(v33) + 6;
      WORD2(v33) += 6;
      if (HIBYTE(v33))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5783, "OI_STATUS _BCM_EnhancedRxTest(OI_BD_ADDR *, uint16_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v33) - v23 > 1 && BYTE6(v33) == 2)
      {
        *(_BYTE *)(v32 + v23) = a2;
        *(_BYTE *)(v32 + WORD2(v33) + 1) = HIBYTE(a2);
        v24 = WORD2(v33);
        v25 = WORD2(v33) + 2;
        WORD2(v33) += 2;
        if (a3)
        {
          if (HIBYTE(v33))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5785, "OI_STATUS _BCM_EnhancedRxTest(OI_BD_ADDR *, uint16_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, BT_VSC_COMPLETE_CB)");
          }
          else if (WORD1(v33) > v25 && BYTE6(v33) == 2)
          {
            v26 = a5 | (a4 << 7);
            goto LABEL_17;
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        if (HIBYTE(v33))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5787, "OI_STATUS _BCM_EnhancedRxTest(OI_BD_ADDR *, uint16_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v33) > v25 && BYTE6(v33) == 2)
        {
          v26 = 0;
LABEL_17:
          WORD2(v33) = v24 + 3;
          *(_BYTE *)(v32 + v25) = v26;
          if (HIBYTE(v33))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5789, "OI_STATUS _BCM_EnhancedRxTest(OI_BD_ADDR *, uint16_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, BT_VSC_COMPLETE_CB)");
          }
          else
          {
            v27 = WORD2(v33);
            if (WORD1(v33) > WORD2(v33) && BYTE6(v33) == 2)
            {
              ++WORD2(v33);
              *(_BYTE *)(v32 + v27) = a6;
              if (HIBYTE(v33))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5790, "OI_STATUS _BCM_EnhancedRxTest(OI_BD_ADDR *, uint16_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, BT_VSC_COMPLETE_CB)");
              }
              else
              {
                v28 = WORD2(v33);
                if (WORD1(v33) > WORD2(v33) && BYTE6(v33) == 2)
                {
                  ++WORD2(v33);
                  *(_BYTE *)(v32 + v28) = a7;
                  if (HIBYTE(v33))
                  {
                    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5791, "OI_STATUS _BCM_EnhancedRxTest(OI_BD_ADDR *, uint16_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, BT_VSC_COMPLETE_CB)");
                  }
                  else
                  {
                    v29 = WORD2(v33);
                    if (WORD1(v33) > WORD2(v33) && BYTE6(v33) == 2)
                    {
                      ++WORD2(v33);
                      *(_BYTE *)(v32 + v29) = a9;
                      if (HIBYTE(v33))
                      {
                        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5792, "OI_STATUS _BCM_EnhancedRxTest(OI_BD_ADDR *, uint16_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, BT_VSC_COMPLETE_CB)");
                      }
                      else if (WORD1(v33) - WORD2(v33) > 1 && BYTE6(v33) == 2)
                      {
                        *(_WORD *)(v32 + WORD2(v33)) = a10;
                        v30 = WORD2(v33);
                        LOWORD(v31) = WORD2(v33) + 2;
                        WORD2(v33) += 2;
                        if (!a3)
                        {
                          if (HIBYTE(v33))
                          {
                            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5794, "OI_STATUS _BCM_EnhancedRxTest(OI_BD_ADDR *, uint16_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, BT_VSC_COMPLETE_CB)");
                          }
                          else if (WORD1(v33) > (unsigned __int16)v31 && BYTE6(v33) == 2)
                          {
                            WORD2(v33) = v30 + 3;
                            *(_BYTE *)(v32 + (unsigned __int16)v31) = a8;
                            if (HIBYTE(v33))
                            {
                              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5795, "OI_STATUS _BCM_EnhancedRxTest(OI_BD_ADDR *, uint16_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, BT_VSC_COMPLETE_CB)");
                            }
                            else
                            {
                              v31 = WORD2(v33);
                              if (WORD1(v33) > WORD2(v33) && BYTE6(v33) == 2)
                              {
                                ++WORD2(v33);
                                *(_BYTE *)(v32 + v31) = a5 | (a4 << 7);
                                LOBYTE(v31) = BYTE4(v33);
                                return sub_10004C8A0(82, v32, v31, a11, (uint64_t)sub_10004AE9C, v20, v21, v22);
                              }
                            }
                            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                          }
                          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                        }
                        return sub_10004C8A0(82, v32, v31, a11, (uint64_t)sub_10004AE9C, v20, v21, v22);
                      }
                      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                    }
                  }
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001CDD44(int a1, int a2, char a3, char a4, char a5, char a6, char a7, char a8, char a9, char a10, char a11, char a12, uint64_t (*a13)())
{
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;
  unsigned __int16 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int16 v34;
  unsigned __int16 v35;
  uint64_t v36;
  __int16 v37;
  unsigned __int16 v38;
  uint64_t v39;
  uint64_t v40;
  __int16 v41;
  unsigned __int16 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int16 v51;
  unsigned __int16 v52;
  uint64_t v53;
  uint64_t v54;

  v53 = 0;
  v54 = 0;
  result = sub_10004BC7C(&v53);
  if (!(_DWORD)result)
  {
    if (a1)
    {
      if (HIBYTE(v54))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5809, "OI_STATUS _BCM_EnhancedTxTestCont(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, BT_VSC_COMPLETE_CB)");
      }
      else
      {
        v25 = WORD2(v54);
        if (WORD1(v54) > WORD2(v54) && BYTE6(v54) == 2)
        {
          ++WORD2(v54);
          *(_BYTE *)(v53 + v25) = a2 | 0x80;
          v26 = v53 + WORD2(v54);
          if (a2)
          {
            if (HIBYTE(v54))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5812, "OI_STATUS _BCM_EnhancedTxTestCont(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, BT_VSC_COMPLETE_CB)");
            }
            else if (WORD1(v54) - WORD2(v54) > 5 && BYTE6(v54) == 2)
            {
              *(_WORD *)(v26 + 4) = 0;
              *(_DWORD *)v26 = 0;
              v27 = WORD2(v54);
              v28 = WORD2(v54) + 6;
              WORD2(v54) += 6;
              if (HIBYTE(v54))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5813, "OI_STATUS _BCM_EnhancedTxTestCont(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, BT_VSC_COMPLETE_CB)");
              }
              else if (WORD1(v54) > v28 && BYTE6(v54) == 2)
              {
                WORD2(v54) = v27 + 7;
                *(_BYTE *)(v53 + v28) = a7;
                if (HIBYTE(v54))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5814, "OI_STATUS _BCM_EnhancedTxTestCont(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, BT_VSC_COMPLETE_CB)");
                }
                else
                {
                  v29 = WORD2(v54);
                  if (WORD1(v54) > WORD2(v54) && BYTE6(v54) == 2)
                  {
                    ++WORD2(v54);
                    *(_BYTE *)(v53 + v29) = a8;
                    if (HIBYTE(v54))
                    {
                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5815, "OI_STATUS _BCM_EnhancedTxTestCont(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, BT_VSC_COMPLETE_CB)");
                    }
                    else
                    {
                      v30 = WORD2(v54);
                      if (WORD1(v54) > WORD2(v54) && BYTE6(v54) == 2)
                      {
                        ++WORD2(v54);
                        *(_BYTE *)(v53 + v30) = a9;
                        if (HIBYTE(v54))
                        {
                          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5816, "OI_STATUS _BCM_EnhancedTxTestCont(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, BT_VSC_COMPLETE_CB)");
                          goto LABEL_106;
                        }
                        v31 = WORD2(v54);
                        if (WORD1(v54) - WORD2(v54) <= 1 || BYTE6(v54) != 2)
LABEL_106:
                          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                        goto LABEL_67;
                      }
                    }
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                }
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          if (HIBYTE(v54))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5819, "OI_STATUS _BCM_EnhancedTxTestCont(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, BT_VSC_COMPLETE_CB)");
          }
          else if (WORD1(v54) > WORD2(v54) && BYTE6(v54) == 2)
          {
            *(_BYTE *)v26 = 0;
            v37 = WORD2(v54);
            v38 = ++WORD2(v54);
            if (HIBYTE(v54))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5820, "OI_STATUS _BCM_EnhancedTxTestCont(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, BT_VSC_COMPLETE_CB)");
            }
            else if (WORD1(v54) > v38 && BYTE6(v54) == 2)
            {
              WORD2(v54) = v37 + 2;
              *(_BYTE *)(v53 + v38) = a3;
              if (HIBYTE(v54))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5821, "OI_STATUS _BCM_EnhancedTxTestCont(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, BT_VSC_COMPLETE_CB)");
              }
              else
              {
                v39 = WORD2(v54);
                if (WORD1(v54) > WORD2(v54) && BYTE6(v54) == 2)
                {
                  ++WORD2(v54);
                  *(_BYTE *)(v53 + v39) = a4;
                  if (HIBYTE(v54))
                  {
                    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5822, "OI_STATUS _BCM_EnhancedTxTestCont(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, BT_VSC_COMPLETE_CB)");
                  }
                  else
                  {
                    v40 = WORD2(v54);
                    if (WORD1(v54) > WORD2(v54) && BYTE6(v54) == 2)
                    {
                      ++WORD2(v54);
                      *(_BYTE *)(v53 + v40) = a5;
                      if (HIBYTE(v54))
                      {
                        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5823, "OI_STATUS _BCM_EnhancedTxTestCont(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, BT_VSC_COMPLETE_CB)");
                      }
                      else if (WORD1(v54) > WORD2(v54) && BYTE6(v54) == 2)
                      {
                        *(_BYTE *)(v53 + WORD2(v54)) = 0;
                        v41 = WORD2(v54);
                        v42 = ++WORD2(v54);
                        if (HIBYTE(v54))
                        {
                          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5824, "OI_STATUS _BCM_EnhancedTxTestCont(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, BT_VSC_COMPLETE_CB)");
                        }
                        else if (WORD1(v54) > v42 && BYTE6(v54) == 2)
                        {
                          WORD2(v54) = v41 + 2;
                          *(_BYTE *)(v53 + v42) = a6;
                          if (HIBYTE(v54))
                          {
                            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5825, "OI_STATUS _BCM_EnhancedTxTestCont(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, BT_VSC_COMPLETE_CB)");
                          }
                          else
                          {
                            v43 = WORD2(v54);
                            if (WORD1(v54) > WORD2(v54) && BYTE6(v54) == 2)
                            {
                              ++WORD2(v54);
                              *(_BYTE *)(v53 + v43) = a7;
                              if (HIBYTE(v54))
                              {
                                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5826, "OI_STATUS _BCM_EnhancedTxTestCont(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, BT_VSC_COMPLETE_CB)");
                              }
                              else
                              {
                                v44 = WORD2(v54);
                                if (WORD1(v54) > WORD2(v54) && BYTE6(v54) == 2)
                                {
                                  ++WORD2(v54);
                                  *(_BYTE *)(v53 + v44) = a8;
                                  if (HIBYTE(v54))
                                  {
                                    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5827, "OI_STATUS _BCM_EnhancedTxTestCont(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, BT_VSC_COMPLETE_CB)");
                                  }
                                  else
                                  {
                                    v45 = WORD2(v54);
                                    if (WORD1(v54) > WORD2(v54) && BYTE6(v54) == 2)
                                    {
                                      ++WORD2(v54);
                                      *(_BYTE *)(v53 + v45) = a9;
                                      if (HIBYTE(v54))
                                      {
                                        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5828, "OI_STATUS _BCM_EnhancedTxTestCont(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, BT_VSC_COMPLETE_CB)");
                                      }
                                      else
                                      {
                                        v31 = WORD2(v54);
                                        if (WORD1(v54) - WORD2(v54) > 1 && BYTE6(v54) == 2)
                                        {
LABEL_67:
                                          *(_BYTE *)(v53 + v31) = a11;
                                          *(_BYTE *)(v53 + WORD2(v54) + 1) = a12;
                                          WORD2(v54) += 2;
                                          return sub_10004C8A0(501, v53, BYTE4(v54), a13, (uint64_t)sub_10004AE9C, v22, v23, v24);
                                        }
                                      }
                                      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/"
                                                             "Stack/vsc/bcm/bcm_vsc.c");
                                    }
                                  }
                                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stac"
                                                         "k/vsc/bcm/bcm_vsc.c");
                                }
                              }
                              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                            }
                          }
                          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                        }
                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }
                      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                    }
                  }
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    if (HIBYTE(v54))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5831, "OI_STATUS _BCM_EnhancedTxTestCont(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v32 = WORD2(v54);
      if (WORD1(v54) > WORD2(v54) && BYTE6(v54) == 2)
      {
        ++WORD2(v54);
        *(_BYTE *)(v53 + v32) = a2;
        if (a2)
        {
          if (HIBYTE(v54))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5834, "OI_STATUS _BCM_EnhancedTxTestCont(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, BT_VSC_COMPLETE_CB)");
          }
          else if (WORD1(v54) - WORD2(v54) > 5 && BYTE6(v54) == 2)
          {
            v33 = v53 + WORD2(v54);
            *(_WORD *)(v33 + 4) = 0;
            *(_DWORD *)v33 = 0;
            v34 = WORD2(v54);
            v35 = WORD2(v54) + 6;
            WORD2(v54) += 6;
            if (HIBYTE(v54))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5835, "OI_STATUS _BCM_EnhancedTxTestCont(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, BT_VSC_COMPLETE_CB)");
            }
            else if (WORD1(v54) > v35 && BYTE6(v54) == 2)
            {
              WORD2(v54) = v34 + 7;
              *(_BYTE *)(v53 + v35) = a7;
              if (HIBYTE(v54))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5836, "OI_STATUS _BCM_EnhancedTxTestCont(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, BT_VSC_COMPLETE_CB)");
                goto LABEL_114;
              }
              v36 = WORD2(v54);
              if (WORD1(v54) <= WORD2(v54) || BYTE6(v54) != 2)
LABEL_114:
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
LABEL_92:
              WORD2(v54) = v36 + 1;
              *(_BYTE *)(v53 + v36) = a8;
              return sub_10004C8A0(501, v53, BYTE4(v54), a13, (uint64_t)sub_10004AE9C, v22, v23, v24);
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        if (HIBYTE(v54))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5839, "OI_STATUS _BCM_EnhancedTxTestCont(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, BT_VSC_COMPLETE_CB)");
        }
        else
        {
          v46 = WORD2(v54);
          if (WORD1(v54) > WORD2(v54) && BYTE6(v54) == 2)
          {
            ++WORD2(v54);
            *(_BYTE *)(v53 + v46) = a10;
            if (HIBYTE(v54))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5840, "OI_STATUS _BCM_EnhancedTxTestCont(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, BT_VSC_COMPLETE_CB)");
            }
            else
            {
              v47 = WORD2(v54);
              if (WORD1(v54) > WORD2(v54) && BYTE6(v54) == 2)
              {
                ++WORD2(v54);
                *(_BYTE *)(v53 + v47) = a3;
                if (HIBYTE(v54))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5841, "OI_STATUS _BCM_EnhancedTxTestCont(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, BT_VSC_COMPLETE_CB)");
                }
                else
                {
                  v48 = WORD2(v54);
                  if (WORD1(v54) > WORD2(v54) && BYTE6(v54) == 2)
                  {
                    ++WORD2(v54);
                    *(_BYTE *)(v53 + v48) = a4;
                    if (HIBYTE(v54))
                    {
                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5842, "OI_STATUS _BCM_EnhancedTxTestCont(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, BT_VSC_COMPLETE_CB)");
                    }
                    else
                    {
                      v49 = WORD2(v54);
                      if (WORD1(v54) > WORD2(v54) && BYTE6(v54) == 2)
                      {
                        ++WORD2(v54);
                        *(_BYTE *)(v53 + v49) = a5;
                        if (HIBYTE(v54))
                        {
                          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5843, "OI_STATUS _BCM_EnhancedTxTestCont(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, BT_VSC_COMPLETE_CB)");
                        }
                        else
                        {
                          v50 = WORD2(v54);
                          if (WORD1(v54) > WORD2(v54) && BYTE6(v54) == 2)
                          {
                            ++WORD2(v54);
                            *(_BYTE *)(v53 + v50) = a6;
                            if (HIBYTE(v54))
                            {
                              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5844, "OI_STATUS _BCM_EnhancedTxTestCont(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, BT_VSC_COMPLETE_CB)");
                            }
                            else if (WORD1(v54) > WORD2(v54) && BYTE6(v54) == 2)
                            {
                              *(_BYTE *)(v53 + WORD2(v54)) = 0;
                              v51 = WORD2(v54);
                              v52 = ++WORD2(v54);
                              if (HIBYTE(v54))
                              {
                                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5845, "OI_STATUS _BCM_EnhancedTxTestCont(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, BT_VSC_COMPLETE_CB)");
                              }
                              else if (WORD1(v54) > v52 && BYTE6(v54) == 2)
                              {
                                WORD2(v54) = v51 + 2;
                                *(_BYTE *)(v53 + v52) = a7;
                                if (HIBYTE(v54))
                                {
                                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5846, "OI_STATUS _BCM_EnhancedTxTestCont(uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, BT_VSC_COMPLETE_CB)");
                                }
                                else
                                {
                                  v36 = WORD2(v54);
                                  if (WORD1(v54) > WORD2(v54) && BYTE6(v54) == 2)
                                    goto LABEL_92;
                                }
                                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/bcm/bcm_vsc.c");
                              }
                              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                            }
                            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                          }
                        }
                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }
                    }
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                }
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001CEB24(__int16 a1, __int16 a2, char a3, char a4, char a5, __int16 a6, __int16 a7, __int16 a8, char a9, char a10, char a11, char a12, char a13, char a14, char a15, char a16, uint64_t (*a17)())
{
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int16 v29;
  __int16 v30;
  unsigned __int16 v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int16 v34;
  unsigned __int16 v35;
  unsigned __int16 v36;
  unsigned __int16 v37;
  unsigned __int16 v38;
  __int16 v39;
  unsigned __int16 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v42 = 0;
  v43 = 0;
  result = sub_10004BC7C(&v42);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v43))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5860, "OI_STATUS _BCM_AdvancedSniffMode(uint16_t, uint16_t, uint8_t, uint8_t, uint8_t, uint16_t, uint16_t, uint16_t, uint16_t, uint16_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v43) - WORD2(v43) > 1 && BYTE6(v43) == 2)
    {
      *(_WORD *)(v42 + WORD2(v43)) = a1;
      v29 = WORD2(v43) + 2;
      WORD2(v43) += 2;
      if (HIBYTE(v43))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5861, "OI_STATUS _BCM_AdvancedSniffMode(uint16_t, uint16_t, uint8_t, uint8_t, uint8_t, uint16_t, uint16_t, uint16_t, uint16_t, uint16_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v43) - v29 > 1 && BYTE6(v43) == 2)
      {
        *(_BYTE *)(v42 + v29) = a2;
        *(_BYTE *)(v42 + WORD2(v43) + 1) = HIBYTE(a2);
        v30 = WORD2(v43);
        v31 = WORD2(v43) + 2;
        WORD2(v43) += 2;
        if (HIBYTE(v43))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5862, "OI_STATUS _BCM_AdvancedSniffMode(uint16_t, uint16_t, uint8_t, uint8_t, uint8_t, uint16_t, uint16_t, uint16_t, uint16_t, uint16_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v43) > v31 && BYTE6(v43) == 2)
        {
          WORD2(v43) = v30 + 3;
          *(_BYTE *)(v42 + v31) = a3;
          if (HIBYTE(v43))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5863, "OI_STATUS _BCM_AdvancedSniffMode(uint16_t, uint16_t, uint8_t, uint8_t, uint8_t, uint16_t, uint16_t, uint16_t, uint16_t, uint16_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
          }
          else
          {
            v32 = WORD2(v43);
            if (WORD1(v43) > WORD2(v43) && BYTE6(v43) == 2)
            {
              ++WORD2(v43);
              *(_BYTE *)(v42 + v32) = a4;
              if (HIBYTE(v43))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5864, "OI_STATUS _BCM_AdvancedSniffMode(uint16_t, uint16_t, uint8_t, uint8_t, uint8_t, uint16_t, uint16_t, uint16_t, uint16_t, uint16_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
              }
              else
              {
                v33 = WORD2(v43);
                if (WORD1(v43) > WORD2(v43) && BYTE6(v43) == 2)
                {
                  ++WORD2(v43);
                  *(_BYTE *)(v42 + v33) = a5;
                  if (HIBYTE(v43))
                  {
                    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5865, "OI_STATUS _BCM_AdvancedSniffMode(uint16_t, uint16_t, uint8_t, uint8_t, uint8_t, uint16_t, uint16_t, uint16_t, uint16_t, uint16_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                  }
                  else if (WORD1(v43) - WORD2(v43) > 1 && BYTE6(v43) == 2)
                  {
                    *(_WORD *)(v42 + WORD2(v43)) = a6;
                    v34 = WORD2(v43) + 2;
                    WORD2(v43) += 2;
                    if (HIBYTE(v43))
                    {
                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5866, "OI_STATUS _BCM_AdvancedSniffMode(uint16_t, uint16_t, uint8_t, uint8_t, uint8_t, uint16_t, uint16_t, uint16_t, uint16_t, uint16_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                    }
                    else if (WORD1(v43) - v34 > 1 && BYTE6(v43) == 2)
                    {
                      *(_BYTE *)(v42 + v34) = a7;
                      *(_BYTE *)(v42 + WORD2(v43) + 1) = HIBYTE(a7);
                      v35 = WORD2(v43) + 2;
                      WORD2(v43) += 2;
                      if (HIBYTE(v43))
                      {
                        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5867, "OI_STATUS _BCM_AdvancedSniffMode(uint16_t, uint16_t, uint8_t, uint8_t, uint8_t, uint16_t, uint16_t, uint16_t, uint16_t, uint16_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                      }
                      else if (WORD1(v43) - v35 > 1 && BYTE6(v43) == 2)
                      {
                        *(_BYTE *)(v42 + v35) = a8;
                        *(_BYTE *)(v42 + WORD2(v43) + 1) = HIBYTE(a8);
                        v36 = WORD2(v43) + 2;
                        WORD2(v43) += 2;
                        if (HIBYTE(v43))
                        {
                          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5868, "OI_STATUS _BCM_AdvancedSniffMode(uint16_t, uint16_t, uint8_t, uint8_t, uint8_t, uint16_t, uint16_t, uint16_t, uint16_t, uint16_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                        }
                        else if (WORD1(v43) - v36 > 1 && BYTE6(v43) == 2)
                        {
                          *(_BYTE *)(v42 + v36) = a9;
                          *(_BYTE *)(v42 + WORD2(v43) + 1) = a10;
                          v37 = WORD2(v43) + 2;
                          WORD2(v43) += 2;
                          if (HIBYTE(v43))
                          {
                            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5869, "OI_STATUS _BCM_AdvancedSniffMode(uint16_t, uint16_t, uint8_t, uint8_t, uint8_t, uint16_t, uint16_t, uint16_t, uint16_t, uint16_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                          }
                          else if (WORD1(v43) - v37 > 1 && BYTE6(v43) == 2)
                          {
                            *(_BYTE *)(v42 + v37) = a11;
                            *(_BYTE *)(v42 + WORD2(v43) + 1) = a12;
                            v38 = WORD2(v43) + 2;
                            WORD2(v43) += 2;
                            if (HIBYTE(v43))
                            {
                              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5870, "OI_STATUS _BCM_AdvancedSniffMode(uint16_t, uint16_t, uint8_t, uint8_t, uint8_t, uint16_t, uint16_t, uint16_t, uint16_t, uint16_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                            }
                            else if (WORD1(v43) - v38 > 1 && BYTE6(v43) == 2)
                            {
                              *(_BYTE *)(v42 + v38) = a13;
                              *(_BYTE *)(v42 + WORD2(v43) + 1) = a14;
                              v39 = WORD2(v43);
                              v40 = WORD2(v43) + 2;
                              WORD2(v43) += 2;
                              if (HIBYTE(v43))
                              {
                                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5871, "OI_STATUS _BCM_AdvancedSniffMode(uint16_t, uint16_t, uint8_t, uint8_t, uint8_t, uint16_t, uint16_t, uint16_t, uint16_t, uint16_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                              }
                              else if (WORD1(v43) > v40 && BYTE6(v43) == 2)
                              {
                                WORD2(v43) = v39 + 3;
                                *(_BYTE *)(v42 + v40) = a15;
                                if (HIBYTE(v43))
                                {
                                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5872, "OI_STATUS _BCM_AdvancedSniffMode(uint16_t, uint16_t, uint8_t, uint8_t, uint8_t, uint16_t, uint16_t, uint16_t, uint16_t, uint16_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
                                }
                                else
                                {
                                  v41 = WORD2(v43);
                                  if (WORD1(v43) > WORD2(v43) && BYTE6(v43) == 2)
                                  {
                                    ++WORD2(v43);
                                    *(_BYTE *)(v42 + v41) = a16;
                                    return sub_10004C8A0(48, v42, BYTE4(v43), a17, (uint64_t)sub_10004AE9C, v26, v27, v28);
                                  }
                                }
                                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/bcm/bcm_vsc.c");
                              }
                              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                            }
                            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                          }
                          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                        }
                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }
                      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                    }
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001CF2B4(__int16 a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v8 = 0;
  v9 = 0;
  result = sub_10004BC7C(&v8);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v9))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5885, "OI_STATUS _BCM_ExitAdvancedSniffMode(uint16_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v9) - WORD2(v9) > 1 && BYTE6(v9) == 2)
    {
      *(_WORD *)(v8 + WORD2(v9)) = a1;
      WORD2(v9) += 2;
      return sub_10004C8A0(49, v8, BYTE4(v9), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001CF39C(__int16 a1, __int16 a2, __int16 a3, __int16 a4, char a5, __int16 a6, uint64_t (*a7)())
{
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int16 v18;
  unsigned __int16 v19;
  unsigned __int16 v20;
  __int16 v21;
  unsigned __int16 v22;
  uint64_t v23;
  uint64_t v24;

  v23 = 0;
  v24 = 0;
  result = sub_10004BC7C(&v23);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v24))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5898, "OI_STATUS _BCM_AdvancedSniffReconfig(uint16_t, uint16_t, uint16_t, uint16_t, uint8_t, uint16_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v24) - WORD2(v24) > 1 && BYTE6(v24) == 2)
    {
      *(_WORD *)(v23 + WORD2(v24)) = a1;
      v18 = WORD2(v24) + 2;
      WORD2(v24) += 2;
      if (HIBYTE(v24))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5899, "OI_STATUS _BCM_AdvancedSniffReconfig(uint16_t, uint16_t, uint16_t, uint16_t, uint8_t, uint16_t, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v24) - v18 > 1 && BYTE6(v24) == 2)
      {
        *(_BYTE *)(v23 + v18) = a2;
        *(_BYTE *)(v23 + WORD2(v24) + 1) = HIBYTE(a2);
        v19 = WORD2(v24) + 2;
        WORD2(v24) += 2;
        if (HIBYTE(v24))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5900, "OI_STATUS _BCM_AdvancedSniffReconfig(uint16_t, uint16_t, uint16_t, uint16_t, uint8_t, uint16_t, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v24) - v19 > 1 && BYTE6(v24) == 2)
        {
          *(_BYTE *)(v23 + v19) = a3;
          *(_BYTE *)(v23 + WORD2(v24) + 1) = HIBYTE(a3);
          v20 = WORD2(v24) + 2;
          WORD2(v24) += 2;
          if (HIBYTE(v24))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5901, "OI_STATUS _BCM_AdvancedSniffReconfig(uint16_t, uint16_t, uint16_t, uint16_t, uint8_t, uint16_t, BT_VSC_COMPLETE_CB)");
          }
          else if (WORD1(v24) - v20 > 1 && BYTE6(v24) == 2)
          {
            *(_BYTE *)(v23 + v20) = a4;
            *(_BYTE *)(v23 + WORD2(v24) + 1) = HIBYTE(a4);
            v21 = WORD2(v24);
            v22 = WORD2(v24) + 2;
            WORD2(v24) += 2;
            if (HIBYTE(v24))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5902, "OI_STATUS _BCM_AdvancedSniffReconfig(uint16_t, uint16_t, uint16_t, uint16_t, uint8_t, uint16_t, BT_VSC_COMPLETE_CB)");
            }
            else if (WORD1(v24) > v22 && BYTE6(v24) == 2)
            {
              WORD2(v24) = v21 + 3;
              *(_BYTE *)(v23 + v22) = a5;
              if (HIBYTE(v24))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5903, "OI_STATUS _BCM_AdvancedSniffReconfig(uint16_t, uint16_t, uint16_t, uint16_t, uint8_t, uint16_t, BT_VSC_COMPLETE_CB)");
              }
              else if (WORD1(v24) - WORD2(v24) > 1 && BYTE6(v24) == 2)
              {
                *(_WORD *)(v23 + WORD2(v24)) = a6;
                WORD2(v24) += 2;
                return sub_10004C8A0(50, v23, BYTE4(v24), a7, (uint64_t)sub_10004AE9C, v15, v16, v17);
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001CF778(__int16 a1, char a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int16 v10;
  unsigned __int16 v11;
  uint64_t v12;
  uint64_t v13;

  v12 = 0;
  v13 = 0;
  result = sub_10004BC7C(&v12);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v13))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5916, "OI_STATUS _BCM_SetPeripheralMaxAge(uint16_t, uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v13) - WORD2(v13) > 1 && BYTE6(v13) == 2)
    {
      *(_WORD *)(v12 + WORD2(v13)) = a1;
      v10 = WORD2(v13);
      v11 = WORD2(v13) + 2;
      WORD2(v13) += 2;
      if (HIBYTE(v13))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5917, "OI_STATUS _BCM_SetPeripheralMaxAge(uint16_t, uint8_t, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v13) > v11 && BYTE6(v13) == 2)
      {
        WORD2(v13) = v10 + 3;
        *(_BYTE *)(v12 + v11) = a2;
        return sub_10004C8A0(56, v12, BYTE4(v13), a3, (uint64_t)sub_10004AE9C, v7, v8, v9);
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001CF8E4(__int16 a1, char a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int16 v10;
  unsigned __int16 v11;
  uint64_t v12;
  uint64_t v13;

  v12 = 0;
  v13 = 0;
  result = sub_10004BC7C(&v12);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v13))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5930, "OI_STATUS _BCM_LMPFlow(uint16_t, uint8_t, BT_VSC_LMP_FLOW_CB)");
    }
    else if (WORD1(v13) - WORD2(v13) > 1 && BYTE6(v13) == 2)
    {
      *(_WORD *)(v12 + WORD2(v13)) = a1;
      v10 = WORD2(v13);
      v11 = WORD2(v13) + 2;
      WORD2(v13) += 2;
      if (HIBYTE(v13))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5931, "OI_STATUS _BCM_LMPFlow(uint16_t, uint8_t, BT_VSC_LMP_FLOW_CB)");
      }
      else if (WORD1(v13) > v11 && BYTE6(v13) == 2)
      {
        WORD2(v13) = v10 + 3;
        *(_BYTE *)(v12 + v11) = a2;
        return sub_10004C8A0(53, v12, BYTE4(v13), a3, (uint64_t)sub_1001A7B38, v7, v8, v9);
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001CFA50(__int16 a1, char a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int16 v10;
  unsigned __int16 v11;
  uint64_t v12;
  uint64_t v13;

  v12 = 0;
  v13 = 0;
  result = sub_10004BC7C(&v12);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v13))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5945, "OI_STATUS _BCM_AoSEmptyPacketReport(uint16_t, uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v13) - WORD2(v13) > 1 && BYTE6(v13) == 2)
    {
      *(_WORD *)(v12 + WORD2(v13)) = a1;
      v10 = WORD2(v13);
      v11 = WORD2(v13) + 2;
      WORD2(v13) += 2;
      if (HIBYTE(v13))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5946, "OI_STATUS _BCM_AoSEmptyPacketReport(uint16_t, uint8_t, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v13) > v11 && BYTE6(v13) == 2)
      {
        WORD2(v13) = v10 + 3;
        *(_BYTE *)(v12 + v11) = a2;
        return sub_10004C8A0(51, v12, BYTE4(v13), a3, (uint64_t)sub_10004AE9C, v7, v8, v9);
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001CFBBC(char a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v9 = 0;
  v10 = 0;
  result = sub_10004BC7C(&v9);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v10))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5960, "OI_STATUS _BCM_ControlAoS(uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v8 = WORD2(v10);
      if (WORD1(v10) > WORD2(v10) && BYTE6(v10) == 2)
      {
        ++WORD2(v10);
        *(_BYTE *)(v9 + v8) = a1;
        return sub_10004C8A0(52, v9, BYTE4(v10), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001CFC88(__int16 a1, char a2, char a3, char a4, uint64_t (*a5)())
{
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int16 v15;
  unsigned __int16 v16;
  unsigned __int16 v17;
  uint64_t v18;
  uint64_t v19;

  v18 = 0;
  v19 = 0;
  result = sub_10004BC7C(&v18);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v19))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5973, "OI_STATUS _BCM_SetLEPowerControl(uint16_t, uint8_t, int8_t, int8_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v14 = WORD2(v19);
      if (WORD1(v19) > WORD2(v19) && BYTE6(v19) == 2)
      {
        ++WORD2(v19);
        *(_BYTE *)(v18 + v14) = 93;
        if (HIBYTE(v19))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5974, "OI_STATUS _BCM_SetLEPowerControl(uint16_t, uint8_t, int8_t, int8_t, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v19) - WORD2(v19) > 1 && BYTE6(v19) == 2)
        {
          *(_WORD *)(v18 + WORD2(v19)) = a1;
          v15 = WORD2(v19);
          v16 = WORD2(v19) + 2;
          WORD2(v19) += 2;
          if (HIBYTE(v19))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5975, "OI_STATUS _BCM_SetLEPowerControl(uint16_t, uint8_t, int8_t, int8_t, BT_VSC_COMPLETE_CB)");
          }
          else if (WORD1(v19) > v16 && BYTE6(v19) == 2)
          {
            WORD2(v19) = v15 + 3;
            *(_BYTE *)(v18 + v16) = a2;
            if (HIBYTE(v19))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5976, "OI_STATUS _BCM_SetLEPowerControl(uint16_t, uint8_t, int8_t, int8_t, BT_VSC_COMPLETE_CB)");
            }
            else if (WORD1(v19) > WORD2(v19) && BYTE6(v19) == 2)
            {
              *(_BYTE *)(v18 + WORD2(v19)) = a3;
              v17 = ++WORD2(v19);
              if (HIBYTE(v19))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5977, "OI_STATUS _BCM_SetLEPowerControl(uint16_t, uint8_t, int8_t, int8_t, BT_VSC_COMPLETE_CB)");
              }
              else if (WORD1(v19) > v17 && BYTE6(v19) == 2)
              {
                *(_BYTE *)(v18 + v17) = a4;
                ++WORD2(v19);
                return sub_10004C8A0(233, v18, BYTE4(v19), a5, (uint64_t)sub_10004AE9C, v11, v12, v13);
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001CFF7C(char a1, char a2, char a3, int a4, char a5, uint64_t (*a6)())
{
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int16 v21;
  unsigned __int16 v22;
  uint64_t v23;
  uint64_t v24;

  v23 = 0;
  v24 = 0;
  result = sub_10004BC7C(&v23);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v24))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5992, "OI_STATUS _BCM_GetAdvStats(uint8_t, uint8_t, uint8_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v16 = WORD2(v24);
      if (WORD1(v24) > WORD2(v24) && BYTE6(v24) == 2)
      {
        ++WORD2(v24);
        *(_BYTE *)(v23 + v16) = 94;
        if (HIBYTE(v24))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5993, "OI_STATUS _BCM_GetAdvStats(uint8_t, uint8_t, uint8_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
        }
        else
        {
          v17 = WORD2(v24);
          if (WORD1(v24) > WORD2(v24) && BYTE6(v24) == 2)
          {
            ++WORD2(v24);
            *(_BYTE *)(v23 + v17) = 2;
            if (HIBYTE(v24))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5994, "OI_STATUS _BCM_GetAdvStats(uint8_t, uint8_t, uint8_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
            }
            else
            {
              v18 = WORD2(v24);
              if (WORD1(v24) > WORD2(v24) && BYTE6(v24) == 2)
              {
                ++WORD2(v24);
                *(_BYTE *)(v23 + v18) = a1;
                if (HIBYTE(v24))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5995, "OI_STATUS _BCM_GetAdvStats(uint8_t, uint8_t, uint8_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                }
                else
                {
                  v19 = WORD2(v24);
                  if (WORD1(v24) > WORD2(v24) && BYTE6(v24) == 2)
                  {
                    ++WORD2(v24);
                    *(_BYTE *)(v23 + v19) = a2;
                    if (HIBYTE(v24))
                    {
                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5996, "OI_STATUS _BCM_GetAdvStats(uint8_t, uint8_t, uint8_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                    }
                    else
                    {
                      v20 = WORD2(v24);
                      if (WORD1(v24) > WORD2(v24) && BYTE6(v24) == 2)
                      {
                        ++WORD2(v24);
                        *(_BYTE *)(v23 + v20) = a3;
                        if (HIBYTE(v24))
                        {
                          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5997, "OI_STATUS _BCM_GetAdvStats(uint8_t, uint8_t, uint8_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                        }
                        else if (WORD1(v24) - WORD2(v24) > 3 && BYTE6(v24) == 2)
                        {
                          *(_WORD *)(v23 + WORD2(v24)) = a4;
                          *(_BYTE *)(v23 + WORD2(v24) + 2) = BYTE2(a4);
                          *(_BYTE *)(v23 + WORD2(v24) + 3) = HIBYTE(a4);
                          v21 = WORD2(v24);
                          v22 = WORD2(v24) + 4;
                          WORD2(v24) += 4;
                          if (HIBYTE(v24))
                          {
                            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5998, "OI_STATUS _BCM_GetAdvStats(uint8_t, uint8_t, uint8_t, uint32_t, uint8_t, BT_VSC_COMPLETE_CB)");
                          }
                          else if (WORD1(v24) > v22 && BYTE6(v24) == 2)
                          {
                            WORD2(v24) = v21 + 5;
                            *(_BYTE *)(v23 + v22) = a5;
                            return sub_10004C8A0(233, v23, BYTE4(v24), a6, (uint64_t)sub_10004AE9C, v13, v14, v15);
                          }
                          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                        }
                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }
                    }
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                }
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001D0384(_WORD *a1, __int16 a2, char a3, uint64_t (*a4)())
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int16 v12;
  __int16 v13;
  unsigned __int16 v14;
  uint64_t v15;
  uint64_t v16;

  v15 = 0;
  v16 = 0;
  result = sub_10004BC7C(&v15);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v16))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6012, "OI_STATUS _BCM_PhyStatsEnable(OI_HCI_CONNECTION_HANDLE, uint16_t, uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v16) - WORD2(v16) > 1 && BYTE6(v16) == 2)
    {
      *(_WORD *)(v15 + WORD2(v16)) = *a1;
      v12 = WORD2(v16) + 2;
      WORD2(v16) += 2;
      if (HIBYTE(v16))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6013, "OI_STATUS _BCM_PhyStatsEnable(OI_HCI_CONNECTION_HANDLE, uint16_t, uint8_t, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v16) - v12 > 1 && BYTE6(v16) == 2)
      {
        *(_BYTE *)(v15 + v12) = a2;
        *(_BYTE *)(v15 + WORD2(v16) + 1) = HIBYTE(a2);
        v13 = WORD2(v16);
        v14 = WORD2(v16) + 2;
        WORD2(v16) += 2;
        if (HIBYTE(v16))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6014, "OI_STATUS _BCM_PhyStatsEnable(OI_HCI_CONNECTION_HANDLE, uint16_t, uint8_t, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v16) > v14 && BYTE6(v16) == 2)
        {
          WORD2(v16) = v13 + 3;
          *(_BYTE *)(v15 + v14) = a3;
          return sub_10004C8A0(512, v15, BYTE4(v16), a4, (uint64_t)sub_10004AE9C, v9, v10, v11);
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001D058C(char a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int16 v8;
  unsigned __int16 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v11 = 0;
  v12 = 0;
  result = sub_10004BC7C(&v11);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v12))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6344, "OI_STATUS _BCM_EpaGpioToggleEnable(_Bool, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v12) - WORD2(v12) > 3 && BYTE6(v12) == 2)
    {
      *(_BYTE *)(v11 + WORD2(v12)) = 0;
      *(_WORD *)(v11 + WORD2(v12) + 1) = 0;
      *(_BYTE *)(v11 + WORD2(v12) + 3) = 0;
      v8 = WORD2(v12);
      v9 = WORD2(v12) + 4;
      WORD2(v12) += 4;
      if (HIBYTE(v12))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6345, "OI_STATUS _BCM_EpaGpioToggleEnable(_Bool, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v12) > v9 && BYTE6(v12) == 2)
      {
        WORD2(v12) = v8 + 5;
        *(_BYTE *)(v11 + v9) = a1;
        if (HIBYTE(v12))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6346, "OI_STATUS _BCM_EpaGpioToggleEnable(_Bool, BT_VSC_COMPLETE_CB)");
        }
        else
        {
          v10 = WORD2(v12);
          if (WORD1(v12) > WORD2(v12) && BYTE6(v12) == 2)
          {
            ++WORD2(v12);
            *(_BYTE *)(v11 + v10) = 4;
            return sub_10004C8A0(520, v11, BYTE4(v12), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001D0784(uint64_t (*a1)())
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v6 = 0;
  v7 = 0;
  result = sub_10004BC7C(&v6);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v7))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6360, "OI_STATUS _BCM_EpaGpioReadStatus(BT_VSC_EPA_GPIO_READ_STATUS_CB)");
    }
    else if (WORD1(v7) - WORD2(v7) > 3 && BYTE6(v7) == 2)
    {
      *(_BYTE *)(v6 + WORD2(v7)) = 1;
      *(_WORD *)(v6 + WORD2(v7) + 1) = 0;
      *(_BYTE *)(v6 + WORD2(v7) + 3) = 0;
      WORD2(v7) += 4;
      return sub_10004C8A0(520, v6, BYTE4(v7), a1, (uint64_t)sub_1001A71F8, v3, v4, v5);
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001D0888(__int16 a1, char a2, char a3, char a4, char a5, uint64_t (*a6)())
{
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  unsigned __int16 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v43 = 0;
  v44 = 0;
  result = sub_10004BC7C(&v43);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v44))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5290, "OI_STATUS _BCM_HPEDRHDR(uint16_t, uint8_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v44) - WORD2(v44) > 1 && BYTE6(v44) == 2)
    {
      *(_WORD *)(v43 + WORD2(v44)) = a1;
      v16 = WORD2(v44);
      v17 = WORD2(v44) + 2;
      WORD2(v44) += 2;
      if (HIBYTE(v44))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5291, "OI_STATUS _BCM_HPEDRHDR(uint16_t, uint8_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v44) > v17 && BYTE6(v44) == 2)
      {
        WORD2(v44) = v16 + 3;
        *(_BYTE *)(v43 + v17) = a2;
        if (HIBYTE(v44))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5292, "OI_STATUS _BCM_HPEDRHDR(uint16_t, uint8_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
        }
        else
        {
          v18 = WORD2(v44);
          if (WORD1(v44) > WORD2(v44) && BYTE6(v44) == 2)
          {
            ++WORD2(v44);
            *(_BYTE *)(v43 + v18) = a3;
            if (HIBYTE(v44))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5293, "OI_STATUS _BCM_HPEDRHDR(uint16_t, uint8_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
            }
            else
            {
              v19 = WORD2(v44);
              if (WORD1(v44) > WORD2(v44) && BYTE6(v44) == 2)
              {
                ++WORD2(v44);
                *(_BYTE *)(v43 + v19) = a4;
                if (HIBYTE(v44))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5294, "OI_STATUS _BCM_HPEDRHDR(uint16_t, uint8_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
                }
                else
                {
                  v20 = WORD2(v44);
                  if (WORD1(v44) > WORD2(v44) && BYTE6(v44) == 2)
                  {
                    ++WORD2(v44);
                    *(_BYTE *)(v43 + v20) = a4;
                    if (HIBYTE(v44))
                    {
                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5295, "OI_STATUS _BCM_HPEDRHDR(uint16_t, uint8_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
                    }
                    else
                    {
                      v21 = WORD2(v44);
                      if (WORD1(v44) > WORD2(v44) && BYTE6(v44) == 2)
                      {
                        ++WORD2(v44);
                        *(_BYTE *)(v43 + v21) = a4;
                        if (HIBYTE(v44))
                        {
                          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5296, "OI_STATUS _BCM_HPEDRHDR(uint16_t, uint8_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
                        }
                        else
                        {
                          v22 = WORD2(v44);
                          if (WORD1(v44) > WORD2(v44) && BYTE6(v44) == 2)
                          {
                            ++WORD2(v44);
                            *(_BYTE *)(v43 + v22) = a4;
                            if (HIBYTE(v44))
                            {
                              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5297, "OI_STATUS _BCM_HPEDRHDR(uint16_t, uint8_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
                            }
                            else
                            {
                              v23 = WORD2(v44);
                              if (WORD1(v44) > WORD2(v44) && BYTE6(v44) == 2)
                              {
                                ++WORD2(v44);
                                *(_BYTE *)(v43 + v23) = a4;
                                if (HIBYTE(v44))
                                {
                                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5298, "OI_STATUS _BCM_HPEDRHDR(uint16_t, uint8_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
                                }
                                else
                                {
                                  v24 = WORD2(v44);
                                  if (WORD1(v44) > WORD2(v44) && BYTE6(v44) == 2)
                                  {
                                    ++WORD2(v44);
                                    *(_BYTE *)(v43 + v24) = a4;
                                    if (HIBYTE(v44))
                                    {
                                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5299, "OI_STATUS _BCM_HPEDRHDR(uint16_t, uint8_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
                                    }
                                    else
                                    {
                                      v25 = WORD2(v44);
                                      if (WORD1(v44) > WORD2(v44) && BYTE6(v44) == 2)
                                      {
                                        ++WORD2(v44);
                                        *(_BYTE *)(v43 + v25) = a4;
                                        if (HIBYTE(v44))
                                        {
                                          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5300, "OI_STATUS _BCM_HPEDRHDR(uint16_t, uint8_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
                                        }
                                        else
                                        {
                                          v26 = WORD2(v44);
                                          if (WORD1(v44) > WORD2(v44) && BYTE6(v44) == 2)
                                          {
                                            ++WORD2(v44);
                                            *(_BYTE *)(v43 + v26) = a4;
                                            if (HIBYTE(v44))
                                            {
                                              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5301, "OI_STATUS _BCM_HPEDRHDR(uint16_t, uint8_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
                                            }
                                            else
                                            {
                                              v27 = WORD2(v44);
                                              if (WORD1(v44) > WORD2(v44) && BYTE6(v44) == 2)
                                              {
                                                ++WORD2(v44);
                                                *(_BYTE *)(v43 + v27) = a4;
                                                if (HIBYTE(v44))
                                                {
                                                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5302, "OI_STATUS _BCM_HPEDRHDR(uint16_t, uint8_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
                                                }
                                                else
                                                {
                                                  v28 = WORD2(v44);
                                                  if (WORD1(v44) > WORD2(v44) && BYTE6(v44) == 2)
                                                  {
                                                    ++WORD2(v44);
                                                    *(_BYTE *)(v43 + v28) = a4;
                                                    if (HIBYTE(v44))
                                                    {
                                                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5303, "OI_STATUS _BCM_HPEDRHDR(uint16_t, uint8_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
                                                    }
                                                    else
                                                    {
                                                      v29 = WORD2(v44);
                                                      if (WORD1(v44) > WORD2(v44) && BYTE6(v44) == 2)
                                                      {
                                                        ++WORD2(v44);
                                                        *(_BYTE *)(v43 + v29) = a4;
                                                        if (HIBYTE(v44))
                                                        {
                                                          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5304, "OI_STATUS _BCM_HPEDRHDR(uint16_t, uint8_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
                                                        }
                                                        else
                                                        {
                                                          v30 = WORD2(v44);
                                                          if (WORD1(v44) > WORD2(v44) && BYTE6(v44) == 2)
                                                          {
                                                            ++WORD2(v44);
                                                            *(_BYTE *)(v43 + v30) = a4;
                                                            if (HIBYTE(v44))
                                                            {
                                                              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5305, "OI_STATUS _BCM_HPEDRHDR(uint16_t, uint8_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
                                                            }
                                                            else
                                                            {
                                                              v31 = WORD2(v44);
                                                              if (WORD1(v44) > WORD2(v44)
                                                                && BYTE6(v44) == 2)
                                                              {
                                                                ++WORD2(v44);
                                                                *(_BYTE *)(v43 + v31) = a4;
                                                                if (HIBYTE(v44))
                                                                {
                                                                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5306, "OI_STATUS _BCM_HPEDRHDR(uint16_t, uint8_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
                                                                }
                                                                else
                                                                {
                                                                  v32 = WORD2(v44);
                                                                  if (WORD1(v44) > WORD2(v44)
                                                                    && BYTE6(v44) == 2)
                                                                  {
                                                                    ++WORD2(v44);
                                                                    *(_BYTE *)(v43 + v32) = a4;
                                                                    if (HIBYTE(v44))
                                                                    {
                                                                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5307, "OI_STATUS _BCM_HPEDRHDR(uint16_t, uint8_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
                                                                    }
                                                                    else
                                                                    {
                                                                      v33 = WORD2(v44);
                                                                      if (WORD1(v44) > WORD2(v44)
                                                                        && BYTE6(v44) == 2)
                                                                      {
                                                                        ++WORD2(v44);
                                                                        *(_BYTE *)(v43 + v33) = a4;
                                                                        if (HIBYTE(v44))
                                                                        {
                                                                          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5308, "OI_STATUS _BCM_HPEDRHDR(uint16_t, uint8_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
                                                                        }
                                                                        else
                                                                        {
                                                                          v34 = WORD2(v44);
                                                                          if (WORD1(v44) > WORD2(v44)
                                                                            && BYTE6(v44) == 2)
                                                                          {
                                                                            ++WORD2(v44);
                                                                            *(_BYTE *)(v43 + v34) = a4;
                                                                            if (HIBYTE(v44))
                                                                            {
                                                                              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5309, "OI_STATUS _BCM_HPEDRHDR(uint16_t, uint8_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
                                                                            }
                                                                            else
                                                                            {
                                                                              v35 = WORD2(v44);
                                                                              if (WORD1(v44) > WORD2(v44)
                                                                                && BYTE6(v44) == 2)
                                                                              {
                                                                                ++WORD2(v44);
                                                                                *(_BYTE *)(v43 + v35) = a4;
                                                                                if (HIBYTE(v44))
                                                                                {
                                                                                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5310, "OI_STATUS _BCM_HPEDRHDR(uint16_t, uint8_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
                                                                                }
                                                                                else
                                                                                {
                                                                                  v36 = WORD2(v44);
                                                                                  if (WORD1(v44) > WORD2(v44)
                                                                                    && BYTE6(v44) == 2)
                                                                                  {
                                                                                    ++WORD2(v44);
                                                                                    *(_BYTE *)(v43 + v36) = a4;
                                                                                    if (HIBYTE(v44))
                                                                                    {
                                                                                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5311, "OI_STATUS _BCM_HPEDRHDR(uint16_t, uint8_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                      v37 = WORD2(v44);
                                                                                      if (WORD1(v44) > WORD2(v44)
                                                                                        && BYTE6(v44) == 2)
                                                                                      {
                                                                                        ++WORD2(v44);
                                                                                        *(_BYTE *)(v43 + v37) = a4;
                                                                                        if (HIBYTE(v44))
                                                                                        {
                                                                                          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5312, "OI_STATUS _BCM_HPEDRHDR(uint16_t, uint8_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                          v38 = WORD2(v44);
                                                                                          if (WORD1(v44) > WORD2(v44)
                                                                                            && BYTE6(v44) == 2)
                                                                                          {
                                                                                            ++WORD2(v44);
                                                                                            *(_BYTE *)(v43 + v38) = a4;
                                                                                            if (HIBYTE(v44))
                                                                                            {
                                                                                              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5313, "OI_STATUS _BCM_HPEDRHDR(uint16_t, uint8_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
                                                                                            }
                                                                                            else
                                                                                            {
                                                                                              v39 = WORD2(v44);
                                                                                              if (WORD1(v44) > WORD2(v44)
                                                                                                && BYTE6(v44) == 2)
                                                                                              {
                                                                                                ++WORD2(v44);
                                                                                                *(_BYTE *)(v43 + v39) = a4;
                                                                                                if (HIBYTE(v44))
                                                                                                {
                                                                                                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5314, "OI_STATUS _BCM_HPEDRHDR(uint16_t, uint8_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
                                                                                                }
                                                                                                else
                                                                                                {
                                                                                                  v40 = WORD2(v44);
                                                                                                  if (WORD1(v44) > WORD2(v44) && BYTE6(v44) == 2)
                                                                                                  {
                                                                                                    ++WORD2(v44);
                                                                                                    *(_BYTE *)(v43 + v40) = a4;
                                                                                                    if (HIBYTE(v44))
                                                                                                    {
                                                                                                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5315, "OI_STATUS _BCM_HPEDRHDR(uint16_t, uint8_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
                                                                                                    }
                                                                                                    else
                                                                                                    {
                                                                                                      v41 = WORD2(v44);
                                                                                                      if (WORD1(v44) > WORD2(v44) && BYTE6(v44) == 2)
                                                                                                      {
                                                                                                        ++WORD2(v44);
                                                                                                        *(_BYTE *)(v43 + v41) = a4;
                                                                                                        if (HIBYTE(v44))
                                                                                                        {
                                                                                                          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5316, "OI_STATUS _BCM_HPEDRHDR(uint16_t, uint8_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
                                                                                                        }
                                                                                                        else
                                                                                                        {
                                                                                                          v42 = WORD2(v44);
                                                                                                          if (WORD1(v44) > WORD2(v44) && BYTE6(v44) == 2)
                                                                                                          {
                                                                                                            ++WORD2(v44);
                                                                                                            *(_BYTE *)(v43 + v42) = a4;
                                                                                                            if (HIBYTE(v44))
                                                                                                            {
                                                                                                              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5317, "OI_STATUS _BCM_HPEDRHDR(uint16_t, uint8_t, uint8_t, uint8_t, int8_t, BT_VSC_COMPLETE_CB)");
                                                                                                            }
                                                                                                            else if (WORD1(v44) > WORD2(v44) && BYTE6(v44) == 2)
                                                                                                            {
                                                                                                              *(_BYTE *)(v43 + WORD2(v44)) = a5;
                                                                                                              ++WORD2(v44);
                                                                                                              return sub_10004C8A0(508, v43, BYTE4(v44), a6, (uint64_t)sub_10004AE9C, v13, v14, v15);
                                                                                                            }
                                                                                                            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                                          }
                                                                                                        }
                                                                                                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                                      }
                                                                                                    }
                                                                                                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                                  }
                                                                                                }
                                                                                                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                              }
                                                                                            }
                                                                                            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                          }
                                                                                        }
                                                                                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                      }
                                                                                    }
                                                                                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                  }
                                                                                }
                                                                                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                              }
                                                                            }
                                                                            sub_1001494E0((uint64_t)"/Library/Caches/com.a"
                                                                                                   "pple.xbs/Sources/Mobi"
                                                                                                   "leBluetooth_base/Stac"
                                                                                                   "k/vsc/bcm/bcm_vsc.c");
                                                                          }
                                                                        }
                                                                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple"
                                                                                               ".xbs/Sources/MobileBlueto"
                                                                                               "oth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                      }
                                                                    }
                                                                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs"
                                                                                           "/Sources/MobileBluetooth_base"
                                                                                           "/Stack/vsc/bcm/bcm_vsc.c");
                                                                  }
                                                                }
                                                                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sou"
                                                                                       "rces/MobileBluetooth_base/Stack/v"
                                                                                       "sc/bcm/bcm_vsc.c");
                                                              }
                                                            }
                                                            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources"
                                                                                   "/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                          }
                                                        }
                                                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mob"
                                                                               "ileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                      }
                                                    }
                                                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileB"
                                                                           "luetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                  }
                                                }
                                                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluet"
                                                                       "ooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                              }
                                            }
                                            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth"
                                                                   "_base/Stack/vsc/bcm/bcm_vsc.c");
                                          }
                                        }
                                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_bas"
                                                               "e/Stack/vsc/bcm/bcm_vsc.c");
                                      }
                                    }
                                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/St"
                                                           "ack/vsc/bcm/bcm_vsc.c");
                                  }
                                }
                                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/bcm/bcm_vsc.c");
                              }
                            }
                            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                          }
                        }
                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }
                    }
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                }
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001D1640(__int16 a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v8 = 0;
  v9 = 0;
  result = sub_10004BC7C(&v8);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v9))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3062, "OI_STATUS _BCM_ReadPowerCapState(uint16_t, BT_VSC_READ_POWERCAP_STATE_CB)");
    }
    else if (WORD1(v9) - WORD2(v9) > 1 && BYTE6(v9) == 2)
    {
      *(_WORD *)(v8 + WORD2(v9)) = a1;
      WORD2(v9) += 2;
      return sub_10004C8A0(519, v8, BYTE4(v9), a2, (uint64_t)sub_1000723AC, v5, v6, v7);
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001D1728(__int16 a1, char a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v11 = 0;
  v12 = 0;
  result = sub_10004BC7C(&v11);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v12))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3076, "OI_STATUS _BCM_EnhancedReadPowerCapState(uint16_t, uint8_t, BT_VSC_READ_POWERCAP_STATE_CB)");
    }
    else
    {
      v10 = WORD2(v12);
      if (WORD1(v12) > WORD2(v12) && BYTE6(v12) == 2)
      {
        ++WORD2(v12);
        *(_BYTE *)(v11 + v10) = a2;
        if (HIBYTE(v12))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3077, "OI_STATUS _BCM_EnhancedReadPowerCapState(uint16_t, uint8_t, BT_VSC_READ_POWERCAP_STATE_CB)");
        }
        else if (WORD1(v12) - WORD2(v12) > 1 && BYTE6(v12) == 2)
        {
          *(_WORD *)(v11 + WORD2(v12)) = a1;
          WORD2(v12) += 2;
          return sub_10004C8A0(612, v11, BYTE4(v12), a3, (uint64_t)sub_1000723AC, v7, v8, v9);
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001D1894(char a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int16 v8;
  unsigned __int16 v9;
  uint64_t v10;
  uint64_t v11;

  v10 = 0;
  v11 = 0;
  result = sub_10004BC7C(&v10);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v11))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6028, "OI_STATUS _BCM_EnableHostWakeReport(_Bool, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v11) - WORD2(v11) > 3 && BYTE6(v11) == 2)
    {
      *(_BYTE *)(v10 + WORD2(v11)) = 42;
      *(_WORD *)(v10 + WORD2(v11) + 1) = 0;
      *(_BYTE *)(v10 + WORD2(v11) + 3) = 0;
      v8 = WORD2(v11);
      v9 = WORD2(v11) + 4;
      WORD2(v11) += 4;
      if (HIBYTE(v11))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6029, "OI_STATUS _BCM_EnableHostWakeReport(_Bool, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v11) > v9 && BYTE6(v11) == 2)
      {
        WORD2(v11) = v8 + 5;
        *(_BYTE *)(v10 + v9) = a1;
        return sub_10004C8A0(226, v10, BYTE4(v11), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001D1A14(char a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int16 v8;
  unsigned __int16 v9;
  uint64_t v10;
  uint64_t v11;

  v10 = 0;
  v11 = 0;
  result = sub_10004BC7C(&v10);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v11))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6042, "OI_STATUS _BCM_EnablePowerTag(_Bool, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v11) - WORD2(v11) > 3 && BYTE6(v11) == 2)
    {
      *(_BYTE *)(v10 + WORD2(v11)) = 58;
      *(_WORD *)(v10 + WORD2(v11) + 1) = 0;
      *(_BYTE *)(v10 + WORD2(v11) + 3) = 0;
      v8 = WORD2(v11);
      v9 = WORD2(v11) + 4;
      WORD2(v11) += 4;
      if (HIBYTE(v11))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6043, "OI_STATUS _BCM_EnablePowerTag(_Bool, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v11) > v9 && BYTE6(v11) == 2)
      {
        WORD2(v11) = v8 + 5;
        *(_BYTE *)(v10 + v9) = a1;
        return sub_10004C8A0(226, v10, BYTE4(v11), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001D1B94(int a1, int a2, __int16 a3, uint64_t (*a4)())
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int16 v12;
  __int16 v13;
  unsigned __int16 v14;
  uint64_t v15;
  uint64_t v16;

  v15 = 0;
  v16 = 0;
  result = sub_10004BC7C(&v15);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v16))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6056, "OI_STATUS _BCM_EnablePowerTagV2(uint32_t, uint8_t, OI_HCI_LM_HANDLE, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v16) - WORD2(v16) > 3 && BYTE6(v16) == 2)
    {
      *(_BYTE *)(v15 + WORD2(v16)) = 58;
      *(_WORD *)(v15 + WORD2(v16) + 1) = 0;
      *(_BYTE *)(v15 + WORD2(v16) + 3) = 0;
      v12 = WORD2(v16) + 4;
      WORD2(v16) += 4;
      if (HIBYTE(v16))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6057, "OI_STATUS _BCM_EnablePowerTagV2(uint32_t, uint8_t, OI_HCI_LM_HANDLE, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v16) - v12 > 3 && BYTE6(v16) == 2)
      {
        *(_BYTE *)(v15 + v12) = a1;
        *(_BYTE *)(v15 + WORD2(v16) + 1) = BYTE1(a1);
        *(_BYTE *)(v15 + WORD2(v16) + 2) = BYTE2(a1);
        *(_BYTE *)(v15 + WORD2(v16) + 3) = HIBYTE(a1);
        v13 = WORD2(v16);
        v14 = WORD2(v16) + 4;
        WORD2(v16) += 4;
        if (HIBYTE(v16))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6058, "OI_STATUS _BCM_EnablePowerTagV2(uint32_t, uint8_t, OI_HCI_LM_HANDLE, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v16) > v14 && BYTE6(v16) == 2)
        {
          WORD2(v16) = v13 + 5;
          *(_BYTE *)(v15 + v14) = a2 != 0;
          if (HIBYTE(v16))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6059, "OI_STATUS _BCM_EnablePowerTagV2(uint32_t, uint8_t, OI_HCI_LM_HANDLE, BT_VSC_COMPLETE_CB)");
          }
          else if (WORD1(v16) - WORD2(v16) > 1 && BYTE6(v16) == 2)
          {
            *(_WORD *)(v15 + WORD2(v16)) = a3;
            WORD2(v16) += 2;
            return sub_10004C8A0(226, v15, BYTE4(v16), a4, (uint64_t)sub_10004AE9C, v9, v10, v11);
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001D1E7C(char a1, _WORD *a2, _BYTE *a3, __int16 a4, __int16 a5, __int16 a6, __int16 a7, uint64_t (*a8)())
{
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int16 v21;
  unsigned __int16 v22;
  unsigned __int16 v23;
  unsigned __int16 v24;
  unsigned __int16 v25;
  uint64_t v26;
  uint64_t v27;

  v26 = 0;
  v27 = 0;
  result = sub_10004BC7C(&v26);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v27))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3042, "OI_STATUS _BCM_OlympicEnableWirelessSplitter(_Bool, OI_HCI_CONNECTION_HANDLE, OI_HCI_CONNECTION_HANDLE, uint16_t, uint16_t, uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v20 = WORD2(v27);
      if (WORD1(v27) > WORD2(v27) && BYTE6(v27) == 2)
      {
        ++WORD2(v27);
        *(_BYTE *)(v26 + v20) = a1;
        if (HIBYTE(v27))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3043, "OI_STATUS _BCM_OlympicEnableWirelessSplitter(_Bool, OI_HCI_CONNECTION_HANDLE, OI_HCI_CONNECTION_HANDLE, uint16_t, uint16_t, uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v27) - WORD2(v27) > 1 && BYTE6(v27) == 2)
        {
          *(_WORD *)(v26 + WORD2(v27)) = *a2;
          v21 = WORD2(v27) + 2;
          WORD2(v27) += 2;
          if (HIBYTE(v27))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3044, "OI_STATUS _BCM_OlympicEnableWirelessSplitter(_Bool, OI_HCI_CONNECTION_HANDLE, OI_HCI_CONNECTION_HANDLE, uint16_t, uint16_t, uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
          }
          else if (WORD1(v27) - v21 > 1 && BYTE6(v27) == 2)
          {
            *(_BYTE *)(v26 + v21) = *a3;
            *(_BYTE *)(v26 + WORD2(v27) + 1) = a3[1];
            v22 = WORD2(v27) + 2;
            WORD2(v27) += 2;
            if (HIBYTE(v27))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3045, "OI_STATUS _BCM_OlympicEnableWirelessSplitter(_Bool, OI_HCI_CONNECTION_HANDLE, OI_HCI_CONNECTION_HANDLE, uint16_t, uint16_t, uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
            }
            else if (WORD1(v27) - v22 > 1 && BYTE6(v27) == 2)
            {
              *(_BYTE *)(v26 + v22) = a4;
              *(_BYTE *)(v26 + WORD2(v27) + 1) = HIBYTE(a4);
              v23 = WORD2(v27) + 2;
              WORD2(v27) += 2;
              if (HIBYTE(v27))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3046, "OI_STATUS _BCM_OlympicEnableWirelessSplitter(_Bool, OI_HCI_CONNECTION_HANDLE, OI_HCI_CONNECTION_HANDLE, uint16_t, uint16_t, uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
              }
              else if (WORD1(v27) - v23 > 1 && BYTE6(v27) == 2)
              {
                *(_BYTE *)(v26 + v23) = a5;
                *(_BYTE *)(v26 + WORD2(v27) + 1) = HIBYTE(a5);
                v24 = WORD2(v27) + 2;
                WORD2(v27) += 2;
                if (HIBYTE(v27))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3047, "OI_STATUS _BCM_OlympicEnableWirelessSplitter(_Bool, OI_HCI_CONNECTION_HANDLE, OI_HCI_CONNECTION_HANDLE, uint16_t, uint16_t, uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
                }
                else if (WORD1(v27) - v24 > 1 && BYTE6(v27) == 2)
                {
                  *(_BYTE *)(v26 + v24) = a6;
                  *(_BYTE *)(v26 + WORD2(v27) + 1) = HIBYTE(a6);
                  v25 = WORD2(v27) + 2;
                  WORD2(v27) += 2;
                  if (HIBYTE(v27))
                  {
                    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3048, "OI_STATUS _BCM_OlympicEnableWirelessSplitter(_Bool, OI_HCI_CONNECTION_HANDLE, OI_HCI_CONNECTION_HANDLE, uint16_t, uint16_t, uint16_t, uint16_t, BT_VSC_COMPLETE_CB)");
                  }
                  else if (WORD1(v27) - v25 > 1 && BYTE6(v27) == 2)
                  {
                    *(_BYTE *)(v26 + v25) = a7;
                    *(_BYTE *)(v26 + WORD2(v27) + 1) = HIBYTE(a7);
                    WORD2(v27) += 2;
                    return sub_10004C8A0(513, v26, BYTE4(v27), a8, (uint64_t)sub_10004AE9C, v17, v18, v19);
                  }
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001D22F8(__int16 a1, char a2, uint64_t a3, char a4, __int16 a5, char a6, char a7, char a8, uint64_t (*a9)())
{
  uint64_t result;
  uint64_t v18;
  __int16 v19;
  unsigned __int16 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int16 v24;
  unsigned __int16 v25;
  __int16 v26;
  unsigned __int16 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v30 = 0;
  v31 = 0;
  result = sub_10004BC7C(&v30);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v31))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6390, "OI_STATUS _BCM_AdvBufConfig(uint16_t, uint8_t, OI_BD_ADDR *, uint8_t, uint16_t, uint8_t, uint8_t, uint8_t, BT_VSC_ADVBUF_CONFIG_CB)");
    }
    else
    {
      v18 = WORD2(v31);
      if (WORD1(v31) > WORD2(v31) && BYTE6(v31) == 2)
      {
        ++WORD2(v31);
        *(_BYTE *)(v30 + v18) = 1;
        if (HIBYTE(v31))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6391, "OI_STATUS _BCM_AdvBufConfig(uint16_t, uint8_t, OI_BD_ADDR *, uint8_t, uint16_t, uint8_t, uint8_t, uint8_t, BT_VSC_ADVBUF_CONFIG_CB)");
        }
        else if (WORD1(v31) - WORD2(v31) > 1 && BYTE6(v31) == 2)
        {
          *(_WORD *)(v30 + WORD2(v31)) = a1;
          v19 = WORD2(v31);
          v20 = WORD2(v31) + 2;
          WORD2(v31) += 2;
          if (HIBYTE(v31))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6392, "OI_STATUS _BCM_AdvBufConfig(uint16_t, uint8_t, OI_BD_ADDR *, uint8_t, uint16_t, uint8_t, uint8_t, uint8_t, BT_VSC_ADVBUF_CONFIG_CB)");
          }
          else if (WORD1(v31) > v20 && BYTE6(v31) == 2)
          {
            WORD2(v31) = v19 + 3;
            *(_BYTE *)(v30 + v20) = a2;
            if (HIBYTE(v31))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6393, "OI_STATUS _BCM_AdvBufConfig(uint16_t, uint8_t, OI_BD_ADDR *, uint8_t, uint16_t, uint8_t, uint8_t, uint8_t, BT_VSC_ADVBUF_CONFIG_CB)");
            }
            else if (WORD1(v31) - WORD2(v31) > 5 && BYTE6(v31) == 2)
            {
              sub_10004C878(v30 + WORD2(v31), a3, 6uLL);
              v24 = WORD2(v31);
              v25 = WORD2(v31) + 6;
              WORD2(v31) += 6;
              if (HIBYTE(v31))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6394, "OI_STATUS _BCM_AdvBufConfig(uint16_t, uint8_t, OI_BD_ADDR *, uint8_t, uint16_t, uint8_t, uint8_t, uint8_t, BT_VSC_ADVBUF_CONFIG_CB)");
              }
              else if (WORD1(v31) > v25 && BYTE6(v31) == 2)
              {
                WORD2(v31) = v24 + 7;
                *(_BYTE *)(v30 + v25) = a4;
                if (HIBYTE(v31))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6395, "OI_STATUS _BCM_AdvBufConfig(uint16_t, uint8_t, OI_BD_ADDR *, uint8_t, uint16_t, uint8_t, uint8_t, uint8_t, BT_VSC_ADVBUF_CONFIG_CB)");
                }
                else if (WORD1(v31) - WORD2(v31) > 1 && BYTE6(v31) == 2)
                {
                  *(_WORD *)(v30 + WORD2(v31)) = a5;
                  v26 = WORD2(v31);
                  v27 = WORD2(v31) + 2;
                  WORD2(v31) += 2;
                  if (HIBYTE(v31))
                  {
                    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6396, "OI_STATUS _BCM_AdvBufConfig(uint16_t, uint8_t, OI_BD_ADDR *, uint8_t, uint16_t, uint8_t, uint8_t, uint8_t, BT_VSC_ADVBUF_CONFIG_CB)");
                  }
                  else if (WORD1(v31) > v27 && BYTE6(v31) == 2)
                  {
                    WORD2(v31) = v26 + 3;
                    *(_BYTE *)(v30 + v27) = a6;
                    if (HIBYTE(v31))
                    {
                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6397, "OI_STATUS _BCM_AdvBufConfig(uint16_t, uint8_t, OI_BD_ADDR *, uint8_t, uint16_t, uint8_t, uint8_t, uint8_t, BT_VSC_ADVBUF_CONFIG_CB)");
                    }
                    else
                    {
                      v28 = WORD2(v31);
                      if (WORD1(v31) > WORD2(v31) && BYTE6(v31) == 2)
                      {
                        ++WORD2(v31);
                        *(_BYTE *)(v30 + v28) = a7;
                        if (HIBYTE(v31))
                        {
                          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6398, "OI_STATUS _BCM_AdvBufConfig(uint16_t, uint8_t, OI_BD_ADDR *, uint8_t, uint16_t, uint8_t, uint8_t, uint8_t, BT_VSC_ADVBUF_CONFIG_CB)");
                        }
                        else
                        {
                          v29 = WORD2(v31);
                          if (WORD1(v31) > WORD2(v31) && BYTE6(v31) == 2)
                          {
                            ++WORD2(v31);
                            *(_BYTE *)(v30 + v29) = a8;
                            return sub_10004C8A0(556, v30, BYTE4(v31), a9, (uint64_t)sub_1001A7364, v21, v22, v23);
                          }
                        }
                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }
                    }
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001D2804(__int16 a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v9 = 0;
  v10 = 0;
  result = sub_10004BC7C(&v9);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v10))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6411, "OI_STATUS _BCM_AdvBufReadCommand(uint16_t, BT_VSC_ADVBUF_READ_CB)");
    }
    else
    {
      v8 = WORD2(v10);
      if (WORD1(v10) > WORD2(v10) && BYTE6(v10) == 2)
      {
        ++WORD2(v10);
        *(_BYTE *)(v9 + v8) = 2;
        if (HIBYTE(v10))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6412, "OI_STATUS _BCM_AdvBufReadCommand(uint16_t, BT_VSC_ADVBUF_READ_CB)");
        }
        else if (WORD1(v10) - WORD2(v10) > 1 && BYTE6(v10) == 2)
        {
          *(_WORD *)(v9 + WORD2(v10)) = a1;
          WORD2(v10) += 2;
          return sub_10004C8A0(556, v9, BYTE4(v10), a2, (uint64_t)sub_1001A76C8, v5, v6, v7);
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001D2968(__int16 a1, char a2, char a3, __int16 a4, __int16 a5, uint64_t (*a6)())
{
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;
  unsigned __int16 v18;
  unsigned __int16 v19;
  unsigned __int16 v20;
  uint64_t v21;
  uint64_t v22;

  v21 = 0;
  v22 = 0;
  result = sub_10004BC7C(&v21);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v22))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6450, "OI_STATUS _BCM_MatchTableExtFilterConfig(uint16_t, uint8_t, int8_t, uint16_t, uint16_t, BT_VSC_MATCHTABLE_EXT_FILTER_CONFIG_CB)");
    }
    else
    {
      v16 = WORD2(v22);
      if (WORD1(v22) > WORD2(v22) && BYTE6(v22) == 2)
      {
        ++WORD2(v22);
        *(_BYTE *)(v21 + v16) = 12;
        if (HIBYTE(v22))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6451, "OI_STATUS _BCM_MatchTableExtFilterConfig(uint16_t, uint8_t, int8_t, uint16_t, uint16_t, BT_VSC_MATCHTABLE_EXT_FILTER_CONFIG_CB)");
        }
        else if (WORD1(v22) - WORD2(v22) > 1 && BYTE6(v22) == 2)
        {
          *(_WORD *)(v21 + WORD2(v22)) = a1;
          v17 = WORD2(v22);
          v18 = WORD2(v22) + 2;
          WORD2(v22) += 2;
          if (HIBYTE(v22))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6452, "OI_STATUS _BCM_MatchTableExtFilterConfig(uint16_t, uint8_t, int8_t, uint16_t, uint16_t, BT_VSC_MATCHTABLE_EXT_FILTER_CONFIG_CB)");
          }
          else if (WORD1(v22) > v18 && BYTE6(v22) == 2)
          {
            WORD2(v22) = v17 + 3;
            *(_BYTE *)(v21 + v18) = a2;
            if (HIBYTE(v22))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6453, "OI_STATUS _BCM_MatchTableExtFilterConfig(uint16_t, uint8_t, int8_t, uint16_t, uint16_t, BT_VSC_MATCHTABLE_EXT_FILTER_CONFIG_CB)");
            }
            else if (WORD1(v22) > WORD2(v22) && BYTE6(v22) == 2)
            {
              *(_BYTE *)(v21 + WORD2(v22)) = a3;
              v19 = ++WORD2(v22);
              if (HIBYTE(v22))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6454, "OI_STATUS _BCM_MatchTableExtFilterConfig(uint16_t, uint8_t, int8_t, uint16_t, uint16_t, BT_VSC_MATCHTABLE_EXT_FILTER_CONFIG_CB)");
              }
              else if (WORD1(v22) - v19 > 1 && BYTE6(v22) == 2)
              {
                *(_BYTE *)(v21 + v19) = a4;
                *(_BYTE *)(v21 + WORD2(v22) + 1) = HIBYTE(a4);
                v20 = WORD2(v22) + 2;
                WORD2(v22) += 2;
                if (HIBYTE(v22))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6455, "OI_STATUS _BCM_MatchTableExtFilterConfig(uint16_t, uint8_t, int8_t, uint16_t, uint16_t, BT_VSC_MATCHTABLE_EXT_FILTER_CONFIG_CB)");
                }
                else if (WORD1(v22) - v20 > 1 && BYTE6(v22) == 2)
                {
                  *(_BYTE *)(v21 + v20) = a5;
                  *(_BYTE *)(v21 + WORD2(v22) + 1) = HIBYTE(a5);
                  WORD2(v22) += 2;
                  return sub_10004C8A0(556, v21, BYTE4(v22), a6, (uint64_t)sub_1001A78D4, v13, v14, v15);
                }
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001D2D0C(__int16 a1, char a2, char a3, __int16 a4, __int16 a5, uint64_t a6, unsigned int a7, uint64_t a8, uint64_t a9, unsigned __int8 a10, uint64_t (*a11)())
{
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int16 v24;
  unsigned __int16 v25;
  unsigned __int16 v26;
  unsigned __int16 v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;

  v45 = 0;
  v46 = 0;
  result = sub_10004BC7C(&v45);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v46))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6470, "OI_STATUS _BCM_MatchTableExtFilterConfigV2(uint16_t, uint8_t, int8_t, uint16_t, uint16_t, uint8_t *, uint8_t, uint8_t *, uint8_t *, uint8_t, BT_VSC_MATCHTABLE_EXT_FILTER_CONFIG_V2_CB)");
    }
    else
    {
      v23 = WORD2(v46);
      if (WORD1(v46) > WORD2(v46) && BYTE6(v46) == 2)
      {
        ++WORD2(v46);
        *(_BYTE *)(v45 + v23) = 14;
        if (HIBYTE(v46))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6471, "OI_STATUS _BCM_MatchTableExtFilterConfigV2(uint16_t, uint8_t, int8_t, uint16_t, uint16_t, uint8_t *, uint8_t, uint8_t *, uint8_t *, uint8_t, BT_VSC_MATCHTABLE_EXT_FILTER_CONFIG_V2_CB)");
        }
        else if (WORD1(v46) - WORD2(v46) > 1 && BYTE6(v46) == 2)
        {
          *(_WORD *)(v45 + WORD2(v46)) = a1;
          v24 = WORD2(v46);
          v25 = WORD2(v46) + 2;
          WORD2(v46) += 2;
          if (HIBYTE(v46))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6472, "OI_STATUS _BCM_MatchTableExtFilterConfigV2(uint16_t, uint8_t, int8_t, uint16_t, uint16_t, uint8_t *, uint8_t, uint8_t *, uint8_t *, uint8_t, BT_VSC_MATCHTABLE_EXT_FILTER_CONFIG_V2_CB)");
          }
          else if (WORD1(v46) > v25 && BYTE6(v46) == 2)
          {
            WORD2(v46) = v24 + 3;
            *(_BYTE *)(v45 + v25) = a2;
            if (HIBYTE(v46))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6473, "OI_STATUS _BCM_MatchTableExtFilterConfigV2(uint16_t, uint8_t, int8_t, uint16_t, uint16_t, uint8_t *, uint8_t, uint8_t *, uint8_t *, uint8_t, BT_VSC_MATCHTABLE_EXT_FILTER_CONFIG_V2_CB)");
            }
            else if (WORD1(v46) > WORD2(v46) && BYTE6(v46) == 2)
            {
              *(_BYTE *)(v45 + WORD2(v46)) = a3;
              v26 = ++WORD2(v46);
              if (HIBYTE(v46))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6474, "OI_STATUS _BCM_MatchTableExtFilterConfigV2(uint16_t, uint8_t, int8_t, uint16_t, uint16_t, uint8_t *, uint8_t, uint8_t *, uint8_t *, uint8_t, BT_VSC_MATCHTABLE_EXT_FILTER_CONFIG_V2_CB)");
              }
              else if (WORD1(v46) - v26 > 1 && BYTE6(v46) == 2)
              {
                *(_BYTE *)(v45 + v26) = a4;
                *(_BYTE *)(v45 + WORD2(v46) + 1) = HIBYTE(a4);
                v27 = WORD2(v46) + 2;
                WORD2(v46) += 2;
                if (HIBYTE(v46))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6475, "OI_STATUS _BCM_MatchTableExtFilterConfigV2(uint16_t, uint8_t, int8_t, uint16_t, uint16_t, uint8_t *, uint8_t, uint8_t *, uint8_t *, uint8_t, BT_VSC_MATCHTABLE_EXT_FILTER_CONFIG_V2_CB)");
                }
                else if (WORD1(v46) - v27 > 1 && BYTE6(v46) == 2)
                {
                  *(_BYTE *)(v45 + v27) = a5;
                  *(_BYTE *)(v45 + WORD2(v46) + 1) = HIBYTE(a5);
                  WORD2(v46) += 2;
                  if (a7 != 2 && a7 != 16)
                    sub_100253460();
                  if (a6)
                  {
                    if (a7)
                    {
                      v28 = a7;
                      while (!HIBYTE(v46))
                      {
                        v29 = WORD2(v46);
                        if (WORD1(v46) <= WORD2(v46) || BYTE6(v46) != 2)
                          goto LABEL_71;
                        v30 = *(_BYTE *)(a6 - 1 + v28--);
                        ++WORD2(v46);
                        *(_BYTE *)(v45 + v29) = v30;
                        if ((unint64_t)(v28 + 1) <= 1)
                          goto LABEL_37;
                      }
                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6486, "OI_STATUS _BCM_MatchTableExtFilterConfigV2(uint16_t, uint8_t, int8_t, uint16_t, uint16_t, uint8_t *, uint8_t, uint8_t *, uint8_t *, uint8_t, BT_VSC_MATCHTABLE_EXT_FILTER_CONFIG_V2_CB)");
LABEL_71:
                      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                    }
                  }
                  else if (a7)
                  {
                    v31 = a7 + 1;
                    while (!HIBYTE(v46))
                    {
                      v32 = WORD2(v46);
                      if (WORD1(v46) <= WORD2(v46) || BYTE6(v46) != 2)
                        goto LABEL_77;
                      ++WORD2(v46);
                      *(_BYTE *)(v45 + v32) = 0;
                      if (--v31 <= 1)
                        goto LABEL_37;
                    }
                    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6481, "OI_STATUS _BCM_MatchTableExtFilterConfigV2(uint16_t, uint8_t, int8_t, uint16_t, uint16_t, uint8_t *, uint8_t, uint8_t *, uint8_t *, uint8_t, BT_VSC_MATCHTABLE_EXT_FILTER_CONFIG_V2_CB)");
LABEL_77:
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
LABEL_37:
                  v33 = a10;
                  if (a10 >= 0x1Bu)
                    sub_100253460();
                  if (a8)
                  {
                    if (a10)
                    {
                      v34 = a10;
                      do
                      {
                        if (HIBYTE(v46))
                        {
                          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6496, "OI_STATUS _BCM_MatchTableExtFilterConfigV2(uint16_t, uint8_t, int8_t, uint16_t, uint16_t, uint8_t *, uint8_t, uint8_t *, uint8_t *, uint8_t, BT_VSC_MATCHTABLE_EXT_FILTER_CONFIG_V2_CB)");
LABEL_73:
                          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                        }
                        v35 = WORD2(v46);
                        if (WORD1(v46) <= WORD2(v46) || BYTE6(v46) != 2)
                          goto LABEL_73;
                        v36 = *(_BYTE *)(a8 - 1 + v34--);
                        ++WORD2(v46);
                        *(_BYTE *)(v45 + v35) = v36;
                      }
                      while ((unint64_t)(v34 + 1) > 1);
                      if (!a9)
                        goto LABEL_62;
LABEL_56:
                      if (a10)
                      {
                        while (!HIBYTE(v46))
                        {
                          v40 = WORD2(v46);
                          if (WORD1(v46) <= WORD2(v46) || BYTE6(v46) != 2)
                            goto LABEL_75;
                          v41 = *(_BYTE *)(a9 - 1 + v33--);
                          ++WORD2(v46);
                          *(_BYTE *)(v45 + v40) = v41;
                          if ((unint64_t)(v33 + 1) <= 1)
                            return sub_10004C8A0(556, v45, BYTE4(v46), a11, (uint64_t)sub_1001A78D4, v20, v21, v22);
                        }
                        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6504, "OI_STATUS _BCM_MatchTableExtFilterConfigV2(uint16_t, uint8_t, int8_t, uint16_t, uint16_t, uint8_t *, uint8_t, uint8_t *, uint8_t *, uint8_t, BT_VSC_MATCHTABLE_EXT_FILTER_CONFIG_V2_CB)");
LABEL_75:
                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }
                      return sub_10004C8A0(556, v45, BYTE4(v46), a11, (uint64_t)sub_1001A78D4, v20, v21, v22);
                    }
                    if (a9)
                      return sub_10004C8A0(556, v45, BYTE4(v46), a11, (uint64_t)sub_1001A78D4, v20, v21, v22);
                  }
                  else
                  {
                    v37 = v45;
                    v38 = WORD2(v46);
                    if (HIBYTE(v46))
                    {
                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6492, "OI_STATUS _BCM_MatchTableExtFilterConfigV2(uint16_t, uint8_t, int8_t, uint16_t, uint16_t, uint8_t *, uint8_t, uint8_t *, uint8_t *, uint8_t, BT_VSC_MATCHTABLE_EXT_FILTER_CONFIG_V2_CB)");
                      v39 = 0;
                    }
                    else
                    {
                      v39 = WORD1(v46) - WORD2(v46);
                    }
                    if (v39 < a10 || BYTE6(v46) != 2)
                      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                    bzero((void *)(v37 + v38), a10);
                    WORD2(v46) += a10;
                    if (a9)
                      goto LABEL_56;
                  }
LABEL_62:
                  v42 = v45;
                  v43 = WORD2(v46);
                  if (HIBYTE(v46))
                  {
                    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6500, "OI_STATUS _BCM_MatchTableExtFilterConfigV2(uint16_t, uint8_t, int8_t, uint16_t, uint16_t, uint8_t *, uint8_t, uint8_t *, uint8_t *, uint8_t, BT_VSC_MATCHTABLE_EXT_FILTER_CONFIG_V2_CB)");
                    v44 = 0;
                  }
                  else
                  {
                    v44 = WORD1(v46) - WORD2(v46);
                  }
                  if (v44 < a10 || BYTE6(v46) != 2)
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  bzero((void *)(v42 + v43), a10);
                  WORD2(v46) += a10;
                  return sub_10004C8A0(556, v45, BYTE4(v46), a11, (uint64_t)sub_1001A78D4, v20, v21, v22);
                }
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001D347C(__int16 a1, char a2, char a3, char a4, uint64_t (*a5)())
{
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int16 v15;
  unsigned __int16 v16;
  unsigned __int16 v17;
  uint64_t v18;
  uint64_t v19;

  v18 = 0;
  v19 = 0;
  result = sub_10004BC7C(&v18);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v19))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6537, "OI_STATUS _BCM_AdvBufRSSIBinsThreshold(uint16_t, int8_t, int8_t, int8_t, BT_VSC_ADVBUF_RSSI_BINS_THRESHOLD_CB)");
    }
    else
    {
      v14 = WORD2(v19);
      if (WORD1(v19) > WORD2(v19) && BYTE6(v19) == 2)
      {
        ++WORD2(v19);
        *(_BYTE *)(v18 + v14) = 10;
        if (HIBYTE(v19))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6538, "OI_STATUS _BCM_AdvBufRSSIBinsThreshold(uint16_t, int8_t, int8_t, int8_t, BT_VSC_ADVBUF_RSSI_BINS_THRESHOLD_CB)");
        }
        else if (WORD1(v19) - WORD2(v19) > 1 && BYTE6(v19) == 2)
        {
          *(_WORD *)(v18 + WORD2(v19)) = a1;
          v15 = WORD2(v19) + 2;
          WORD2(v19) += 2;
          if (HIBYTE(v19))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6539, "OI_STATUS _BCM_AdvBufRSSIBinsThreshold(uint16_t, int8_t, int8_t, int8_t, BT_VSC_ADVBUF_RSSI_BINS_THRESHOLD_CB)");
          }
          else if (WORD1(v19) > v15 && BYTE6(v19) == 2)
          {
            *(_BYTE *)(v18 + v15) = a2;
            v16 = ++WORD2(v19);
            if (HIBYTE(v19))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6540, "OI_STATUS _BCM_AdvBufRSSIBinsThreshold(uint16_t, int8_t, int8_t, int8_t, BT_VSC_ADVBUF_RSSI_BINS_THRESHOLD_CB)");
            }
            else if (WORD1(v19) > v16 && BYTE6(v19) == 2)
            {
              *(_BYTE *)(v18 + v16) = a3;
              v17 = ++WORD2(v19);
              if (HIBYTE(v19))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6541, "OI_STATUS _BCM_AdvBufRSSIBinsThreshold(uint16_t, int8_t, int8_t, int8_t, BT_VSC_ADVBUF_RSSI_BINS_THRESHOLD_CB)");
              }
              else if (WORD1(v19) > v17 && BYTE6(v19) == 2)
              {
                *(_BYTE *)(v18 + v17) = a4;
                ++WORD2(v19);
                return sub_10004C8A0(556, v18, BYTE4(v19), a5, (uint64_t)sub_1001A7A28, v11, v12, v13);
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001D3770(__int16 a1, char a2, char a3, uint64_t a4, char a5, __int16 a6, char a7, char a8, char a9, char a10, unsigned __int8 a11, const void *a12, const void *a13, uint64_t (*a14)())
{
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;
  unsigned __int16 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int16 v31;
  unsigned __int16 v32;
  __int16 v33;
  unsigned __int16 v34;
  uint64_t v35;
  unsigned __int16 v36;
  unsigned __int16 v37;
  unsigned __int16 v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;

  if (a11)
  {
    if (!a12 || a13 == 0)
      return 101;
  }
  v43 = 0;
  v44 = 0;
  result = sub_10004BC7C(&v43);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v44))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6574, "OI_STATUS _BCM_AdvBufExtFilterConfig(uint16_t, uint8_t, uint8_t, OI_BD_ADDR *, uint8_t, uint16_t, uint8_t, uint8_t, int8_t, int8_t, uint8_t, uint8_t *, uint8_t *, BT_VSC_ADVBUF_EXT_FILTER_CONFIG_CB)");
    }
    else
    {
      v24 = WORD2(v44);
      if (WORD1(v44) > WORD2(v44) && BYTE6(v44) == 2)
      {
        ++WORD2(v44);
        *(_BYTE *)(v43 + v24) = 13;
        if (HIBYTE(v44))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6575, "OI_STATUS _BCM_AdvBufExtFilterConfig(uint16_t, uint8_t, uint8_t, OI_BD_ADDR *, uint8_t, uint16_t, uint8_t, uint8_t, int8_t, int8_t, uint8_t, uint8_t *, uint8_t *, BT_VSC_ADVBUF_EXT_FILTER_CONFIG_CB)");
        }
        else
        {
          v25 = WORD2(v44);
          if (WORD1(v44) > WORD2(v44) && BYTE6(v44) == 2)
          {
            ++WORD2(v44);
            *(_BYTE *)(v43 + v25) = a2;
            if (HIBYTE(v44))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6576, "OI_STATUS _BCM_AdvBufExtFilterConfig(uint16_t, uint8_t, uint8_t, OI_BD_ADDR *, uint8_t, uint16_t, uint8_t, uint8_t, int8_t, int8_t, uint8_t, uint8_t *, uint8_t *, BT_VSC_ADVBUF_EXT_FILTER_CONFIG_CB)");
            }
            else if (WORD1(v44) - WORD2(v44) > 1 && BYTE6(v44) == 2)
            {
              *(_WORD *)(v43 + WORD2(v44)) = a1;
              v26 = WORD2(v44);
              v27 = WORD2(v44) + 2;
              WORD2(v44) += 2;
              if (HIBYTE(v44))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6577, "OI_STATUS _BCM_AdvBufExtFilterConfig(uint16_t, uint8_t, uint8_t, OI_BD_ADDR *, uint8_t, uint16_t, uint8_t, uint8_t, int8_t, int8_t, uint8_t, uint8_t *, uint8_t *, BT_VSC_ADVBUF_EXT_FILTER_CONFIG_CB)");
              }
              else if (WORD1(v44) > v27 && BYTE6(v44) == 2)
              {
                WORD2(v44) = v26 + 3;
                *(_BYTE *)(v43 + v27) = a3;
                if (HIBYTE(v44))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6578, "OI_STATUS _BCM_AdvBufExtFilterConfig(uint16_t, uint8_t, uint8_t, OI_BD_ADDR *, uint8_t, uint16_t, uint8_t, uint8_t, int8_t, int8_t, uint8_t, uint8_t *, uint8_t *, BT_VSC_ADVBUF_EXT_FILTER_CONFIG_CB)");
                }
                else if (WORD1(v44) - WORD2(v44) > 5 && BYTE6(v44) == 2)
                {
                  sub_10004C878(v43 + WORD2(v44), a4, 6uLL);
                  v31 = WORD2(v44);
                  v32 = WORD2(v44) + 6;
                  WORD2(v44) += 6;
                  if (HIBYTE(v44))
                  {
                    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6579, "OI_STATUS _BCM_AdvBufExtFilterConfig(uint16_t, uint8_t, uint8_t, OI_BD_ADDR *, uint8_t, uint16_t, uint8_t, uint8_t, int8_t, int8_t, uint8_t, uint8_t *, uint8_t *, BT_VSC_ADVBUF_EXT_FILTER_CONFIG_CB)");
                  }
                  else if (WORD1(v44) > v32 && BYTE6(v44) == 2)
                  {
                    WORD2(v44) = v31 + 7;
                    *(_BYTE *)(v43 + v32) = a5;
                    if (HIBYTE(v44))
                    {
                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6580, "OI_STATUS _BCM_AdvBufExtFilterConfig(uint16_t, uint8_t, uint8_t, OI_BD_ADDR *, uint8_t, uint16_t, uint8_t, uint8_t, int8_t, int8_t, uint8_t, uint8_t *, uint8_t *, BT_VSC_ADVBUF_EXT_FILTER_CONFIG_CB)");
                    }
                    else if (WORD1(v44) - WORD2(v44) > 1 && BYTE6(v44) == 2)
                    {
                      *(_WORD *)(v43 + WORD2(v44)) = a6;
                      v33 = WORD2(v44);
                      v34 = WORD2(v44) + 2;
                      WORD2(v44) += 2;
                      if (HIBYTE(v44))
                      {
                        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6581, "OI_STATUS _BCM_AdvBufExtFilterConfig(uint16_t, uint8_t, uint8_t, OI_BD_ADDR *, uint8_t, uint16_t, uint8_t, uint8_t, int8_t, int8_t, uint8_t, uint8_t *, uint8_t *, BT_VSC_ADVBUF_EXT_FILTER_CONFIG_CB)");
                      }
                      else if (WORD1(v44) > v34 && BYTE6(v44) == 2)
                      {
                        WORD2(v44) = v33 + 3;
                        *(_BYTE *)(v43 + v34) = a7;
                        if (HIBYTE(v44))
                        {
                          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6582, "OI_STATUS _BCM_AdvBufExtFilterConfig(uint16_t, uint8_t, uint8_t, OI_BD_ADDR *, uint8_t, uint16_t, uint8_t, uint8_t, int8_t, int8_t, uint8_t, uint8_t *, uint8_t *, BT_VSC_ADVBUF_EXT_FILTER_CONFIG_CB)");
                        }
                        else
                        {
                          v35 = WORD2(v44);
                          if (WORD1(v44) > WORD2(v44) && BYTE6(v44) == 2)
                          {
                            ++WORD2(v44);
                            *(_BYTE *)(v43 + v35) = a8;
                            if (HIBYTE(v44))
                            {
                              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6583, "OI_STATUS _BCM_AdvBufExtFilterConfig(uint16_t, uint8_t, uint8_t, OI_BD_ADDR *, uint8_t, uint16_t, uint8_t, uint8_t, int8_t, int8_t, uint8_t, uint8_t *, uint8_t *, BT_VSC_ADVBUF_EXT_FILTER_CONFIG_CB)");
                            }
                            else if (WORD1(v44) > WORD2(v44) && BYTE6(v44) == 2)
                            {
                              *(_BYTE *)(v43 + WORD2(v44)) = a9;
                              v36 = ++WORD2(v44);
                              if (HIBYTE(v44))
                              {
                                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6584, "OI_STATUS _BCM_AdvBufExtFilterConfig(uint16_t, uint8_t, uint8_t, OI_BD_ADDR *, uint8_t, uint16_t, uint8_t, uint8_t, int8_t, int8_t, uint8_t, uint8_t *, uint8_t *, BT_VSC_ADVBUF_EXT_FILTER_CONFIG_CB)");
                              }
                              else if (WORD1(v44) > v36 && BYTE6(v44) == 2)
                              {
                                *(_BYTE *)(v43 + v36) = a10;
                                v37 = ++WORD2(v44);
                                if (HIBYTE(v44))
                                {
                                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6585, "OI_STATUS _BCM_AdvBufExtFilterConfig(uint16_t, uint8_t, uint8_t, OI_BD_ADDR *, uint8_t, uint16_t, uint8_t, uint8_t, int8_t, int8_t, uint8_t, uint8_t *, uint8_t *, BT_VSC_ADVBUF_EXT_FILTER_CONFIG_CB)");
                                }
                                else if (WORD1(v44) - v37 > 1 && BYTE6(v44) == 2)
                                {
                                  *(_BYTE *)(v43 + v37) = a11;
                                  *(_BYTE *)(v43 + WORD2(v44) + 1) = 0;
                                  v38 = WORD2(v44) + 2;
                                  WORD2(v44) += 2;
                                  if (a11)
                                  {
                                    v39 = v43;
                                    if (HIBYTE(v44))
                                    {
                                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6587, "OI_STATUS _BCM_AdvBufExtFilterConfig(uint16_t, uint8_t, uint8_t, OI_BD_ADDR *, uint8_t, uint16_t, uint8_t, uint8_t, int8_t, int8_t, uint8_t, uint8_t *, uint8_t *, BT_VSC_ADVBUF_EXT_FILTER_CONFIG_CB)");
                                      v40 = 0;
                                    }
                                    else
                                    {
                                      v40 = WORD1(v44) - v38;
                                    }
                                    if (v40 < a11 || BYTE6(v44) != 2)
                                      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/"
                                                             "Stack/vsc/bcm/bcm_vsc.c");
                                    memmove((void *)(v39 + v38), a12, a11);
                                    v38 = WORD2(v44) + a11;
                                    WORD2(v44) = v38;
                                    v41 = v43;
                                    if (HIBYTE(v44))
                                    {
                                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6588, "OI_STATUS _BCM_AdvBufExtFilterConfig(uint16_t, uint8_t, uint8_t, OI_BD_ADDR *, uint8_t, uint16_t, uint8_t, uint8_t, int8_t, int8_t, uint8_t, uint8_t *, uint8_t *, BT_VSC_ADVBUF_EXT_FILTER_CONFIG_CB)");
                                      v42 = 0;
                                    }
                                    else
                                    {
                                      v42 = WORD1(v44) - v38;
                                    }
                                    if (v42 < a11 || BYTE6(v44) != 2)
                                      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/"
                                                             "Stack/vsc/bcm/bcm_vsc.c");
                                    memmove((void *)(v41 + v38), a13, a11);
                                    LOBYTE(v38) = BYTE4(v44) + a11;
                                    WORD2(v44) += a11;
                                  }
                                  return sub_10004C8A0(556, v43, v38, a14, (uint64_t)sub_1001A74C0, v28, v29, v30);
                                }
                                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/bcm/bcm_vsc.c");
                              }
                              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                            }
                            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                          }
                        }
                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }
                      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                    }
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001D3F60(__int16 a1, __int16 a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int16 v11;
  uint64_t v12;
  uint64_t v13;

  v12 = 0;
  v13 = 0;
  result = sub_10004BC7C(&v12);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v13))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6555, "OI_STATUS _BCM_AdvBufConfigTimeSlice(uint16_t, uint16_t, BT_VSC_ADVBUF_CFG_TIME_SLICE_CB)");
    }
    else
    {
      v10 = WORD2(v13);
      if (WORD1(v13) > WORD2(v13) && BYTE6(v13) == 2)
      {
        ++WORD2(v13);
        *(_BYTE *)(v12 + v10) = 11;
        if (HIBYTE(v13))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6556, "OI_STATUS _BCM_AdvBufConfigTimeSlice(uint16_t, uint16_t, BT_VSC_ADVBUF_CFG_TIME_SLICE_CB)");
        }
        else if (WORD1(v13) - WORD2(v13) > 1 && BYTE6(v13) == 2)
        {
          *(_WORD *)(v12 + WORD2(v13)) = a1;
          v11 = WORD2(v13) + 2;
          WORD2(v13) += 2;
          if (HIBYTE(v13))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6557, "OI_STATUS _BCM_AdvBufConfigTimeSlice(uint16_t, uint16_t, BT_VSC_ADVBUF_CFG_TIME_SLICE_CB)");
          }
          else if (WORD1(v13) - v11 > 1 && BYTE6(v13) == 2)
          {
            *(_BYTE *)(v12 + v11) = a2;
            *(_BYTE *)(v12 + WORD2(v13) + 1) = HIBYTE(a2);
            WORD2(v13) += 2;
            return sub_10004C8A0(556, v12, BYTE4(v13), a3, (uint64_t)sub_1001A7AB0, v7, v8, v9);
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001D4164(__int16 a1, char a2, char a3, char a4, char a5, uint64_t (*a6)())
{
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;
  unsigned __int16 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v22 = 0;
  v23 = 0;
  result = sub_10004BC7C(&v22);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v23))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6635, "OI_STATUS _BCM_MatchBufferConfig(uint16_t, uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_MATCHBUFFER_CONFIG_CB)");
    }
    else
    {
      v16 = WORD2(v23);
      if (WORD1(v23) > WORD2(v23) && BYTE6(v23) == 2)
      {
        ++WORD2(v23);
        *(_BYTE *)(v22 + v16) = 5;
        if (HIBYTE(v23))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6636, "OI_STATUS _BCM_MatchBufferConfig(uint16_t, uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_MATCHBUFFER_CONFIG_CB)");
        }
        else if (WORD1(v23) - WORD2(v23) > 1 && BYTE6(v23) == 2)
        {
          *(_WORD *)(v22 + WORD2(v23)) = a1;
          v17 = WORD2(v23);
          v18 = WORD2(v23) + 2;
          WORD2(v23) += 2;
          if (HIBYTE(v23))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6637, "OI_STATUS _BCM_MatchBufferConfig(uint16_t, uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_MATCHBUFFER_CONFIG_CB)");
          }
          else if (WORD1(v23) > v18 && BYTE6(v23) == 2)
          {
            WORD2(v23) = v17 + 3;
            *(_BYTE *)(v22 + v18) = a2;
            if (HIBYTE(v23))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6638, "OI_STATUS _BCM_MatchBufferConfig(uint16_t, uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_MATCHBUFFER_CONFIG_CB)");
            }
            else
            {
              v19 = WORD2(v23);
              if (WORD1(v23) > WORD2(v23) && BYTE6(v23) == 2)
              {
                ++WORD2(v23);
                *(_BYTE *)(v22 + v19) = a3;
                if (HIBYTE(v23))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6639, "OI_STATUS _BCM_MatchBufferConfig(uint16_t, uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_MATCHBUFFER_CONFIG_CB)");
                }
                else
                {
                  v20 = WORD2(v23);
                  if (WORD1(v23) > WORD2(v23) && BYTE6(v23) == 2)
                  {
                    ++WORD2(v23);
                    *(_BYTE *)(v22 + v20) = a4;
                    if (HIBYTE(v23))
                    {
                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6640, "OI_STATUS _BCM_MatchBufferConfig(uint16_t, uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_MATCHBUFFER_CONFIG_CB)");
                    }
                    else
                    {
                      v21 = WORD2(v23);
                      if (WORD1(v23) > WORD2(v23) && BYTE6(v23) == 2)
                      {
                        ++WORD2(v23);
                        *(_BYTE *)(v22 + v21) = a5;
                        return sub_10004C8A0(556, v22, BYTE4(v23), a6, (uint64_t)sub_1001A7BC0, v13, v14, v15);
                      }
                    }
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                }
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001D44C8(__int16 a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v9 = 0;
  v10 = 0;
  result = sub_10004BC7C(&v9);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v10))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6654, "OI_STATUS _BCM_MatchBufferRead(uint16_t, BT_VSC_MATCHBUFFER_READ_CB)");
    }
    else
    {
      v8 = WORD2(v10);
      if (WORD1(v10) > WORD2(v10) && BYTE6(v10) == 2)
      {
        ++WORD2(v10);
        *(_BYTE *)(v9 + v8) = 6;
        if (HIBYTE(v10))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6655, "OI_STATUS _BCM_MatchBufferRead(uint16_t, BT_VSC_MATCHBUFFER_READ_CB)");
        }
        else if (WORD1(v10) - WORD2(v10) > 1 && BYTE6(v10) == 2)
        {
          *(_WORD *)(v9 + WORD2(v10)) = a1;
          WORD2(v10) += 2;
          return sub_10004C8A0(556, v9, BYTE4(v10), a2, (uint64_t)sub_1001A7D1C, v5, v6, v7);
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001D462C(char a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v9 = 0;
  v10 = 0;
  result = sub_10004BC7C(&v9);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v10))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6669, "OI_STATUS _BCM_SPMIDiagnostics(uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v8 = WORD2(v10);
      if (WORD1(v10) > WORD2(v10) && BYTE6(v10) == 2)
      {
        ++WORD2(v10);
        *(_BYTE *)(v9 + v8) = a1;
        return sub_10004C8A0(1009, v9, BYTE4(v10), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001D46F8(__int16 a1, char a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  unsigned __int16 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = 0;
  v14 = 0;
  result = sub_10004BC7C(&v13);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v14))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6683, "OI_STATUS _BCM_BTClkSensorCTrigTimeSync(uint16_t, uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v10 = WORD2(v14);
      if (WORD1(v14) > WORD2(v14) && BYTE6(v14) == 2)
      {
        ++WORD2(v14);
        *(_BYTE *)(v13 + v10) = 1;
        if (HIBYTE(v14))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6684, "OI_STATUS _BCM_BTClkSensorCTrigTimeSync(uint16_t, uint8_t, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v14) - WORD2(v14) > 1 && BYTE6(v14) == 2)
        {
          *(_WORD *)(v13 + WORD2(v14)) = a1;
          v11 = WORD2(v14);
          v12 = WORD2(v14) + 2;
          WORD2(v14) += 2;
          if (HIBYTE(v14))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6685, "OI_STATUS _BCM_BTClkSensorCTrigTimeSync(uint16_t, uint8_t, BT_VSC_COMPLETE_CB)");
          }
          else if (WORD1(v14) > v12 && BYTE6(v14) == 2)
          {
            WORD2(v14) = v11 + 3;
            *(_BYTE *)(v13 + v12) = a2;
            return sub_10004C8A0(1010, v13, BYTE4(v14), a3, (uint64_t)sub_10004AE9C, v7, v8, v9);
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001D48E0(char a1, char a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v13 = 0;
  v14 = 0;
  result = sub_10004BC7C(&v13);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v14))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6699, "OI_STATUS _BCM_BTLETxAdvTrigTimeStamp(uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v10 = WORD2(v14);
      if (WORD1(v14) > WORD2(v14) && BYTE6(v14) == 2)
      {
        ++WORD2(v14);
        *(_BYTE *)(v13 + v10) = 2;
        if (HIBYTE(v14))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6700, "OI_STATUS _BCM_BTLETxAdvTrigTimeStamp(uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
        }
        else
        {
          v11 = WORD2(v14);
          if (WORD1(v14) > WORD2(v14) && BYTE6(v14) == 2)
          {
            ++WORD2(v14);
            *(_BYTE *)(v13 + v11) = a1;
            if (HIBYTE(v14))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6701, "OI_STATUS _BCM_BTLETxAdvTrigTimeStamp(uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
            }
            else
            {
              v12 = WORD2(v14);
              if (WORD1(v14) > WORD2(v14) && BYTE6(v14) == 2)
              {
                ++WORD2(v14);
                *(_BYTE *)(v13 + v12) = a2;
                return sub_10004C8A0(1010, v13, BYTE4(v14), a3, (uint64_t)sub_10004AE9C, v7, v8, v9);
              }
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001D4AAC(__int16 a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v9 = 0;
  v10 = 0;
  result = sub_10004BC7C(&v9);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v10))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6715, "OI_STATUS _BCM_BTLEReadConnEventCounter(uint16_t, BT_VSC_READ_CONNEVENTCNT_PARAMS_CB)");
    }
    else
    {
      v8 = WORD2(v10);
      if (WORD1(v10) > WORD2(v10) && BYTE6(v10) == 2)
      {
        ++WORD2(v10);
        *(_BYTE *)(v9 + v8) = 4;
        if (HIBYTE(v10))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6716, "OI_STATUS _BCM_BTLEReadConnEventCounter(uint16_t, BT_VSC_READ_CONNEVENTCNT_PARAMS_CB)");
        }
        else if (WORD1(v10) - WORD2(v10) > 1 && BYTE6(v10) == 2)
        {
          *(_WORD *)(v9 + WORD2(v10)) = a1;
          WORD2(v10) += 2;
          return sub_10004C8A0(1010, v9, BYTE4(v10), a2, (uint64_t)sub_1001A7EB4, v5, v6, v7);
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001D4C10(__int16 a1, __int16 a2, char a3, char a4, uint64_t (*a5)())
{
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int16 v15;
  __int16 v16;
  unsigned __int16 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v19 = 0;
  v20 = 0;
  result = sub_10004BC7C(&v19);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v20))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6730, "OI_STATUS _BCM_BTLEConnEventTrigger(uint16_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v14 = WORD2(v20);
      if (WORD1(v20) > WORD2(v20) && BYTE6(v20) == 2)
      {
        ++WORD2(v20);
        *(_BYTE *)(v19 + v14) = 3;
        if (HIBYTE(v20))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6731, "OI_STATUS _BCM_BTLEConnEventTrigger(uint16_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v20) - WORD2(v20) > 1 && BYTE6(v20) == 2)
        {
          *(_WORD *)(v19 + WORD2(v20)) = a1;
          v15 = WORD2(v20) + 2;
          WORD2(v20) += 2;
          if (HIBYTE(v20))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6732, "OI_STATUS _BCM_BTLEConnEventTrigger(uint16_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
          }
          else if (WORD1(v20) - v15 > 1 && BYTE6(v20) == 2)
          {
            *(_BYTE *)(v19 + v15) = a2;
            *(_BYTE *)(v19 + WORD2(v20) + 1) = HIBYTE(a2);
            v16 = WORD2(v20);
            v17 = WORD2(v20) + 2;
            WORD2(v20) += 2;
            if (HIBYTE(v20))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6733, "OI_STATUS _BCM_BTLEConnEventTrigger(uint16_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
            }
            else if (WORD1(v20) > v17 && BYTE6(v20) == 2)
            {
              WORD2(v20) = v16 + 3;
              *(_BYTE *)(v19 + v17) = a3;
              if (HIBYTE(v20))
              {
                sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6734, "OI_STATUS _BCM_BTLEConnEventTrigger(uint16_t, uint16_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
              }
              else
              {
                v18 = WORD2(v20);
                if (WORD1(v20) > WORD2(v20) && BYTE6(v20) == 2)
                {
                  ++WORD2(v20);
                  *(_BYTE *)(v19 + v18) = a4;
                  return sub_10004C8A0(1010, v19, BYTE4(v20), a5, (uint64_t)sub_10004AE9C, v11, v12, v13);
                }
              }
              sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001D4F14(char a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v10 = 0;
  v11 = 0;
  result = sub_10004BC7C(&v10);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v11))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6748, "OI_STATUS _BCM_SPMIDebugVSEControl(uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v8 = WORD2(v11);
      if (WORD1(v11) > WORD2(v11) && BYTE6(v11) == 2)
      {
        ++WORD2(v11);
        *(_BYTE *)(v10 + v8) = 5;
        if (HIBYTE(v11))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6749, "OI_STATUS _BCM_SPMIDebugVSEControl(uint8_t, BT_VSC_COMPLETE_CB)");
        }
        else
        {
          v9 = WORD2(v11);
          if (WORD1(v11) > WORD2(v11) && BYTE6(v11) == 2)
          {
            ++WORD2(v11);
            *(_BYTE *)(v10 + v9) = a1;
            return sub_10004C8A0(1010, v10, BYTE4(v11), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001D505C(uint64_t (*a1)())
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v7 = 0;
  v8 = 0;
  result = sub_10004BC7C(&v7);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v8))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6763, "OI_STATUS _BCM_SPMICoexGetDebugCounters(BT_VSC_SPMI_COEX_DEBUG_COUNTERS_CB)");
    }
    else
    {
      v6 = WORD2(v8);
      if (WORD1(v8) > WORD2(v8) && BYTE6(v8) == 2)
      {
        ++WORD2(v8);
        *(_BYTE *)(v7 + v6) = 0;
        return sub_10004C8A0(630, v7, BYTE4(v8), a1, (uint64_t)sub_1001A9F5C, v3, v4, v5);
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001D5124(int a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v9 = 0;
  v10 = 0;
  result = sub_10004BC7C(&v9);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v10))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6776, "OI_STATUS _BCM_SPMICoexResetDebugCounters(uint32_t, BT_VSC_SPMI_COEX_DEBUG_COUNTERS_CB)");
    }
    else
    {
      v8 = WORD2(v10);
      if (WORD1(v10) > WORD2(v10) && BYTE6(v10) == 2)
      {
        ++WORD2(v10);
        *(_BYTE *)(v9 + v8) = 1;
        if (HIBYTE(v10))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6777, "OI_STATUS _BCM_SPMICoexResetDebugCounters(uint32_t, BT_VSC_SPMI_COEX_DEBUG_COUNTERS_CB)");
        }
        else if (WORD1(v10) - WORD2(v10) > 3 && BYTE6(v10) == 2)
        {
          *(_WORD *)(v9 + WORD2(v10)) = a1;
          *(_BYTE *)(v9 + WORD2(v10) + 2) = BYTE2(a1);
          *(_BYTE *)(v9 + WORD2(v10) + 3) = HIBYTE(a1);
          WORD2(v10) += 4;
          return sub_10004C8A0(630, v9, BYTE4(v10), a2, (uint64_t)sub_1001A9F5C, v5, v6, v7);
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001D52B0(int a1, _BYTE *a2, char *a3, uint64_t (*a4)())
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;

  v19 = 0;
  v20 = 0;
  result = sub_10004BC7C(&v19);
  if ((_DWORD)result)
    return result;
  if (HIBYTE(v20))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6791, "OI_STATUS _BCM_SPMICoexTestWriteCommand(uint32_t, uint8_t *, uint8_t *, BT_VSC_COMPLETE_CB)");
    goto LABEL_25;
  }
  v12 = WORD2(v20);
  if (WORD1(v20) <= WORD2(v20) || BYTE6(v20) != 2)
LABEL_25:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  ++WORD2(v20);
  *(_BYTE *)(v19 + v12) = 1;
  if (HIBYTE(v20))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6792, "OI_STATUS _BCM_SPMICoexTestWriteCommand(uint32_t, uint8_t *, uint8_t *, BT_VSC_COMPLETE_CB)");
    goto LABEL_27;
  }
  if (WORD1(v20) - WORD2(v20) <= 3 || BYTE6(v20) != 2)
LABEL_27:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v13 = 0;
  *(_WORD *)(v19 + WORD2(v20)) = a1;
  *(_BYTE *)(v19 + WORD2(v20) + 2) = BYTE2(a1);
  *(_BYTE *)(v19 + WORD2(v20) + 3) = HIBYTE(a1);
  WORD2(v20) += 4;
  do
  {
    if (HIBYTE(v20))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6794, "OI_STATUS _BCM_SPMICoexTestWriteCommand(uint32_t, uint8_t *, uint8_t *, BT_VSC_COMPLETE_CB)");
LABEL_21:
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    v14 = WORD2(v20);
    if (WORD1(v20) <= WORD2(v20) || BYTE6(v20) != 2)
      goto LABEL_21;
    v15 = a2[v13];
    ++WORD2(v20);
    *(_BYTE *)(v19 + v14) = v15;
    ++v13;
  }
  while (v13 != 4);
  v16 = *a2 & 0xF;
  if ((*a2 & 0xF) != 0)
  {
    while (!HIBYTE(v20))
    {
      v17 = WORD2(v20);
      if (WORD1(v20) <= WORD2(v20) || BYTE6(v20) != 2)
        goto LABEL_23;
      v18 = *a3++;
      ++WORD2(v20);
      *(_BYTE *)(v19 + v17) = v18;
      if (!--v16)
        return sub_10004C8A0(615, v19, BYTE4(v20), a4, (uint64_t)sub_10004AE9C, v9, v10, v11);
    }
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6798, "OI_STATUS _BCM_SPMICoexTestWriteCommand(uint32_t, uint8_t *, uint8_t *, BT_VSC_COMPLETE_CB)");
LABEL_23:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return sub_10004C8A0(615, v19, BYTE4(v20), a4, (uint64_t)sub_10004AE9C, v9, v10, v11);
}

uint64_t sub_1001D5568(char a1, char a2, char a3, uint64_t (*a4)())
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v15 = 0;
  v16 = 0;
  result = sub_10004BC7C(&v15);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v16))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6811, "OI_STATUS _BCM_SPMICoexTxControl(uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v12 = WORD2(v16);
      if (WORD1(v16) > WORD2(v16) && BYTE6(v16) == 2)
      {
        ++WORD2(v16);
        *(_BYTE *)(v15 + v12) = a1;
        if (HIBYTE(v16))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6812, "OI_STATUS _BCM_SPMICoexTxControl(uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
        }
        else
        {
          v13 = WORD2(v16);
          if (WORD1(v16) > WORD2(v16) && BYTE6(v16) == 2)
          {
            ++WORD2(v16);
            *(_BYTE *)(v15 + v13) = a2;
            if (HIBYTE(v16))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6813, "OI_STATUS _BCM_SPMICoexTxControl(uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
            }
            else
            {
              v14 = WORD2(v16);
              if (WORD1(v16) > WORD2(v16) && BYTE6(v16) == 2)
              {
                ++WORD2(v16);
                *(_BYTE *)(v15 + v14) = a3;
                return sub_10004C8A0(631, v15, BYTE4(v16), a4, (uint64_t)sub_10004AE9C, v9, v10, v11);
              }
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001D5734(char a1, char a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;
  unsigned __int16 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v15 = 0;
  v16 = 0;
  result = sub_10004BC7C(&v15);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v16))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6827, "OI_STATUS _BCM_SPMICoexType53Config(uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v10 = WORD2(v16);
      if (WORD1(v16) > WORD2(v16) && BYTE6(v16) == 2)
      {
        ++WORD2(v16);
        *(_BYTE *)(v15 + v10) = 4;
        if (HIBYTE(v16))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6828, "OI_STATUS _BCM_SPMICoexType53Config(uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v16) - WORD2(v16) > 2 && BYTE6(v16) == 2)
        {
          v11 = v15 + WORD2(v16);
          *(_BYTE *)(v11 + 2) = 0;
          *(_WORD *)v11 = 0;
          v12 = WORD2(v16);
          v13 = WORD2(v16) + 3;
          WORD2(v16) += 3;
          if (HIBYTE(v16))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6829, "OI_STATUS _BCM_SPMICoexType53Config(uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
          }
          else if (WORD1(v16) > v13 && BYTE6(v16) == 2)
          {
            WORD2(v16) = v12 + 4;
            *(_BYTE *)(v15 + v13) = a1;
            if (HIBYTE(v16))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6830, "OI_STATUS _BCM_SPMICoexType53Config(uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
            }
            else
            {
              v14 = WORD2(v16);
              if (WORD1(v16) > WORD2(v16) && BYTE6(v16) == 2)
              {
                ++WORD2(v16);
                *(_BYTE *)(v15 + v14) = a2;
                return sub_10004C8A0(383, v15, BYTE4(v16), a3, (uint64_t)sub_10004AE9C, v7, v8, v9);
              }
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001D5988(char *a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int16 v10;
  unsigned __int16 v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;

  v27 = 0;
  v28 = 0;
  result = sub_10004BC7C(&v27);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v28))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6845, "OI_STATUS _BCM_SPMICoexType60Config(BT_VSCSpmiCoexType60Params_t *, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v8 = WORD2(v28);
      if (WORD1(v28) > WORD2(v28) && BYTE6(v28) == 2)
      {
        ++WORD2(v28);
        *(_BYTE *)(v27 + v8) = 5;
        if (HIBYTE(v28))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6846, "OI_STATUS _BCM_SPMICoexType60Config(BT_VSCSpmiCoexType60Params_t *, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v28) - WORD2(v28) > 2 && BYTE6(v28) == 2)
        {
          v9 = v27 + WORD2(v28);
          *(_BYTE *)(v9 + 2) = 0;
          *(_WORD *)v9 = 0;
          v10 = WORD2(v28);
          v11 = WORD2(v28) + 3;
          WORD2(v28) += 3;
          if (HIBYTE(v28))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6847, "OI_STATUS _BCM_SPMICoexType60Config(BT_VSCSpmiCoexType60Params_t *, BT_VSC_COMPLETE_CB)");
          }
          else if (WORD1(v28) > v11 && BYTE6(v28) == 2)
          {
            v12 = *a1;
            WORD2(v28) = v10 + 4;
            *(_BYTE *)(v27 + v11) = v12;
            if (HIBYTE(v28))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6848, "OI_STATUS _BCM_SPMICoexType60Config(BT_VSCSpmiCoexType60Params_t *, BT_VSC_COMPLETE_CB)");
            }
            else
            {
              v13 = WORD2(v28);
              if (WORD1(v28) > WORD2(v28) && BYTE6(v28) == 2)
              {
                v14 = a1[1];
                ++WORD2(v28);
                *(_BYTE *)(v27 + v13) = v14;
                if (HIBYTE(v28))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6849, "OI_STATUS _BCM_SPMICoexType60Config(BT_VSCSpmiCoexType60Params_t *, BT_VSC_COMPLETE_CB)");
                }
                else
                {
                  v15 = WORD2(v28);
                  if (WORD1(v28) > WORD2(v28) && BYTE6(v28) == 2)
                  {
                    v16 = a1[2];
                    ++WORD2(v28);
                    *(_BYTE *)(v27 + v15) = v16;
                    if (HIBYTE(v28))
                    {
                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6850, "OI_STATUS _BCM_SPMICoexType60Config(BT_VSCSpmiCoexType60Params_t *, BT_VSC_COMPLETE_CB)");
                    }
                    else
                    {
                      v17 = WORD2(v28);
                      if (WORD1(v28) > WORD2(v28) && BYTE6(v28) == 2)
                      {
                        v18 = a1[3];
                        ++WORD2(v28);
                        *(_BYTE *)(v27 + v17) = v18;
                        if (HIBYTE(v28))
                        {
                          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6851, "OI_STATUS _BCM_SPMICoexType60Config(BT_VSCSpmiCoexType60Params_t *, BT_VSC_COMPLETE_CB)");
                        }
                        else
                        {
                          v19 = WORD2(v28);
                          if (WORD1(v28) > WORD2(v28) && BYTE6(v28) == 2)
                          {
                            v20 = a1[4];
                            ++WORD2(v28);
                            *(_BYTE *)(v27 + v19) = v20;
                            if (HIBYTE(v28))
                            {
                              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6852, "OI_STATUS _BCM_SPMICoexType60Config(BT_VSCSpmiCoexType60Params_t *, BT_VSC_COMPLETE_CB)");
                            }
                            else
                            {
                              v21 = WORD2(v28);
                              if (WORD1(v28) > WORD2(v28) && BYTE6(v28) == 2)
                              {
                                v22 = a1[5];
                                ++WORD2(v28);
                                *(_BYTE *)(v27 + v21) = v22;
                                if (HIBYTE(v28))
                                {
                                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6853, "OI_STATUS _BCM_SPMICoexType60Config(BT_VSCSpmiCoexType60Params_t *, BT_VSC_COMPLETE_CB)");
                                }
                                else
                                {
                                  v23 = WORD2(v28);
                                  if (WORD1(v28) > WORD2(v28) && BYTE6(v28) == 2)
                                  {
                                    v24 = a1[6];
                                    ++WORD2(v28);
                                    *(_BYTE *)(v27 + v23) = v24;
                                    if (HIBYTE(v28))
                                    {
                                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6854, "OI_STATUS _BCM_SPMICoexType60Config(BT_VSCSpmiCoexType60Params_t *, BT_VSC_COMPLETE_CB)");
                                    }
                                    else
                                    {
                                      v25 = WORD2(v28);
                                      if (WORD1(v28) > WORD2(v28) && BYTE6(v28) == 2)
                                      {
                                        v26 = a1[7];
                                        ++WORD2(v28);
                                        *(_BYTE *)(v27 + v25) = v26;
                                        return sub_10004C8A0(383, v27, BYTE4(v28), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
                                      }
                                    }
                                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/St"
                                                           "ack/vsc/bcm/bcm_vsc.c");
                                  }
                                }
                                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/bcm/bcm_vsc.c");
                              }
                            }
                            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                          }
                        }
                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }
                    }
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                }
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001D5EC0(int a1, __int16 a2, int a3, char *a4, uint64_t (*a5)())
{
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int16 v15;
  unsigned __int16 v16;
  const void *v17;
  char v18;
  unsigned __int8 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;

  v24 = 0;
  v25 = 0;
  result = sub_10004BC7C(&v24);
  if ((_DWORD)result)
    return result;
  if (HIBYTE(v25))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6884, "OI_STATUS _BCM_HPBF(uint8_t, uint16_t, uint8_t, uint8_t *, BT_VSC_COMPLETE_CB)");
    goto LABEL_21;
  }
  v14 = WORD2(v25);
  if (WORD1(v25) <= WORD2(v25) || BYTE6(v25) != 2)
LABEL_21:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  ++WORD2(v25);
  *(_BYTE *)(v24 + v14) = a1;
  if (HIBYTE(v25))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6885, "OI_STATUS _BCM_HPBF(uint8_t, uint16_t, uint8_t, uint8_t *, BT_VSC_COMPLETE_CB)");
    goto LABEL_23;
  }
  if (WORD1(v25) - WORD2(v25) <= 1 || BYTE6(v25) != 2)
LABEL_23:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  *(_WORD *)(v24 + WORD2(v25)) = a2;
  v15 = WORD2(v25);
  v16 = WORD2(v25) + 2;
  WORD2(v25) += 2;
  if (HIBYTE(v25))
  {
    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6887, "OI_STATUS _BCM_HPBF(uint8_t, uint16_t, uint8_t, uint8_t *, BT_VSC_COMPLETE_CB)");
    goto LABEL_25;
  }
  if (WORD1(v25) <= v16 || BYTE6(v25) != 2)
LABEL_25:
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  v18 = *a4;
  v17 = a4 + 1;
  WORD2(v25) = v15 + 3;
  *(_BYTE *)(v24 + v16) = v18;
  v19 = BYTE4(v25);
  if (a1 != 2)
  {
    v20 = WORD2(v25);
    v21 = v24;
    if (HIBYTE(v25))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6892, "OI_STATUS _BCM_HPBF(uint8_t, uint16_t, uint8_t, uint8_t *, BT_VSC_COMPLETE_CB)");
      v22 = 0;
    }
    else
    {
      v22 = WORD1(v25) - WORD2(v25);
    }
    v23 = a3 - 1;
    if (v22 < v23 || BYTE6(v25) != 2)
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    memmove((void *)(v21 + v20), v17, v23);
    v19 = BYTE4(v25) + v23;
    WORD2(v25) += v23;
  }
  return sub_10004C8A0(557, v24, v19, a5, (uint64_t)sub_10004AE9C, v11, v12, v13);
}

uint64_t sub_1001D615C(char a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v8 = 0;
  v9 = 0;
  result = sub_10004BC7C(&v8);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v9))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6314, "OI_STATUS _BCM_SetEncryptionKeySize(uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v9) - WORD2(v9) > 1 && BYTE6(v9) == 2)
    {
      *(_WORD *)(v8 + WORD2(v9)) = 0xFFFF << (a1 - 1);
      WORD2(v9) += 2;
      return sub_10004C8A0(22, v8, BYTE4(v9), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001D6250(char a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v9 = 0;
  v10 = 0;
  result = sub_10004BC7C(&v9);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v10))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6087, "OI_STATUS _BCM_DupFilterReportEnable(_Bool, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v8 = WORD2(v10);
      if (WORD1(v10) > WORD2(v10) && BYTE6(v10) == 2)
      {
        ++WORD2(v10);
        *(_BYTE *)(v9 + v8) = a1;
        return sub_10004C8A0(572, v9, BYTE4(v10), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001D631C(int a1, uint64_t a2, char a3, uint64_t (*a4)())
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int16 v13;
  unsigned __int16 v14;
  __int16 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v17 = 0;
  v18 = 0;
  result = sub_10004BC7C(&v17);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v18))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6906, "OI_STATUS _BCM_BeamformingMRCEnableVSE(uint8_t, OI_BD_ADDR *, _Bool, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v9 = WORD2(v18);
      if (WORD1(v18) > WORD2(v18) && BYTE6(v18) == 2)
      {
        ++WORD2(v18);
        *(_BYTE *)(v17 + v9) = a1;
        if (HIBYTE(v18))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6907, "OI_STATUS _BCM_BeamformingMRCEnableVSE(uint8_t, OI_BD_ADDR *, _Bool, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v18) - WORD2(v18) > 5 && BYTE6(v18) == 2)
        {
          sub_10004C878(v17 + WORD2(v18), a2, 6uLL);
          v13 = WORD2(v18);
          v14 = WORD2(v18) + 6;
          WORD2(v18) += 6;
          if (a1 != 1)
          {
            if (a1 != 4 && a1 != 2)
              return sub_10004C8A0(498, v17, BYTE4(v18), a4, (uint64_t)sub_10004AE9C, v10, v11, v12);
            if (HIBYTE(v18))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6910, "OI_STATUS _BCM_BeamformingMRCEnableVSE(uint8_t, OI_BD_ADDR *, _Bool, BT_VSC_COMPLETE_CB)");
            }
            else if (WORD1(v18) > v14 && BYTE6(v18) == 2)
            {
              v15 = v13 + 7;
LABEL_25:
              WORD2(v18) = v15;
              *(_BYTE *)(v17 + v14) = a3;
              return sub_10004C8A0(498, v17, BYTE4(v18), a4, (uint64_t)sub_10004AE9C, v10, v11, v12);
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          if (HIBYTE(v18))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6913, "OI_STATUS _BCM_BeamformingMRCEnableVSE(uint8_t, OI_BD_ADDR *, _Bool, BT_VSC_COMPLETE_CB)");
          }
          else if (WORD1(v18) > v14 && BYTE6(v18) == 2)
          {
            WORD2(v18) = v13 + 7;
            *(_BYTE *)(v17 + v14) = 0;
            if (HIBYTE(v18))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6914, "OI_STATUS _BCM_BeamformingMRCEnableVSE(uint8_t, OI_BD_ADDR *, _Bool, BT_VSC_COMPLETE_CB)");
            }
            else
            {
              v16 = WORD2(v18);
              if (WORD1(v18) > WORD2(v18) && BYTE6(v18) == 2)
              {
                ++WORD2(v18);
                *(_BYTE *)(v17 + v16) = a3;
                if (HIBYTE(v18))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6915, "OI_STATUS _BCM_BeamformingMRCEnableVSE(uint8_t, OI_BD_ADDR *, _Bool, BT_VSC_COMPLETE_CB)");
                }
                else
                {
                  v14 = WORD2(v18);
                  if (WORD1(v18) > WORD2(v18) && BYTE6(v18) == 2)
                  {
                    v15 = WORD2(v18) + 1;
                    goto LABEL_25;
                  }
                }
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001D6674(int a1, char a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v12 = 0;
  v13 = 0;
  result = sub_10004BC7C(&v12);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v13))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6930, "OI_STATUS _BCM_SNRMRCVSE(uint8_t, _Bool, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v10 = WORD2(v13);
      if (WORD1(v13) > WORD2(v13) && BYTE6(v13) == 2)
      {
        ++WORD2(v13);
        *(_BYTE *)(v12 + v10) = a1;
        if (a1 == 1)
        {
          if (HIBYTE(v13))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6933, "OI_STATUS _BCM_SNRMRCVSE(uint8_t, _Bool, BT_VSC_COMPLETE_CB)");
          }
          else
          {
            v11 = WORD2(v13);
            if (WORD1(v13) > WORD2(v13) && BYTE6(v13) == 2)
            {
              ++WORD2(v13);
              *(_BYTE *)(v12 + v11) = a2;
              return sub_10004C8A0(603, v12, BYTE4(v13), a3, (uint64_t)sub_10004AE9C, v7, v8, v9);
            }
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        return sub_10004C8A0(603, v12, BYTE4(v13), a3, (uint64_t)sub_10004AE9C, v7, v8, v9);
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001D67CC(char a1, uint64_t a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int16 v10;
  unsigned __int16 v11;
  uint64_t v12;
  uint64_t v13;

  v12 = 0;
  v13 = 0;
  result = sub_10004BC7C(&v12);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v13))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6945, "OI_STATUS _BCM_BTCoreAntennaSwitch(uint8_t, OI_BD_ADDR *, BT_VSC_COMPLETE_CB)");
    }
    else if (WORD1(v13) - WORD2(v13) > 5 && BYTE6(v13) == 2)
    {
      sub_10004C878(v12 + WORD2(v13), a2, 6uLL);
      v10 = WORD2(v13);
      v11 = WORD2(v13) + 6;
      WORD2(v13) += 6;
      if (HIBYTE(v13))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6946, "OI_STATUS _BCM_BTCoreAntennaSwitch(uint8_t, OI_BD_ADDR *, BT_VSC_COMPLETE_CB)");
      }
      else if (WORD1(v13) > v11 && BYTE6(v13) == 2)
      {
        WORD2(v13) = v10 + 7;
        *(_BYTE *)(v12 + v11) = a1;
        return sub_10004C8A0(620, v12, BYTE4(v13), a3, (uint64_t)sub_10004AE9C, v7, v8, v9);
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001D6930(char a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v9 = 0;
  v10 = 0;
  result = sub_10004BC7C(&v9);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v10))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6957, "OI_STATUS _BCM_UseSingleCorePowerDBForAntDiversity(uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v8 = WORD2(v10);
      if (WORD1(v10) > WORD2(v10) && BYTE6(v10) == 2)
      {
        ++WORD2(v10);
        *(_BYTE *)(v9 + v8) = a1;
        return sub_10004C8A0(635, v9, BYTE4(v10), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001D69FC(char a1, uint64_t (*a2)())
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int16 v10;
  unsigned __int16 v11;
  uint64_t v12;
  uint64_t v13;

  v12 = 0;
  v13 = 0;
  result = sub_10004BC7C(&v12);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v13))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6970, "OI_STATUS _BCM_EnableLeScanProtection(uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v8 = WORD2(v13);
      if (WORD1(v13) > WORD2(v13) && BYTE6(v13) == 2)
      {
        ++WORD2(v13);
        *(_BYTE *)(v12 + v8) = 3;
        if (HIBYTE(v13))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6971, "OI_STATUS _BCM_EnableLeScanProtection(uint8_t, BT_VSC_COMPLETE_CB)");
        }
        else if (WORD1(v13) - WORD2(v13) > 2 && BYTE6(v13) == 2)
        {
          v9 = v12 + WORD2(v13);
          *(_BYTE *)(v9 + 2) = 0;
          *(_WORD *)v9 = 0;
          v10 = WORD2(v13);
          v11 = WORD2(v13) + 3;
          WORD2(v13) += 3;
          if (HIBYTE(v13))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6972, "OI_STATUS _BCM_EnableLeScanProtection(uint8_t, BT_VSC_COMPLETE_CB)");
          }
          else if (WORD1(v13) > v11 && BYTE6(v13) == 2)
          {
            WORD2(v13) = v10 + 4;
            *(_BYTE *)(v12 + v11) = a1;
            return sub_10004C8A0(383, v12, BYTE4(v13), a2, (uint64_t)sub_10004AE9C, v5, v6, v7);
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001D6BCC(char a1, char a2, char a3, uint64_t (*a4)())
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v15 = 0;
  v16 = 0;
  result = sub_10004BC7C(&v15);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v16))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6868, "OI_STATUS _BCM_SetGPIOState(uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
    }
    else
    {
      v12 = WORD2(v16);
      if (WORD1(v16) > WORD2(v16) && BYTE6(v16) == 2)
      {
        ++WORD2(v16);
        *(_BYTE *)(v15 + v12) = a1;
        if (HIBYTE(v16))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6869, "OI_STATUS _BCM_SetGPIOState(uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
        }
        else
        {
          v13 = WORD2(v16);
          if (WORD1(v16) > WORD2(v16) && BYTE6(v16) == 2)
          {
            ++WORD2(v16);
            *(_BYTE *)(v15 + v13) = a2;
            if (HIBYTE(v16))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6870, "OI_STATUS _BCM_SetGPIOState(uint8_t, uint8_t, uint8_t, BT_VSC_COMPLETE_CB)");
            }
            else
            {
              v14 = WORD2(v16);
              if (WORD1(v16) > WORD2(v16) && BYTE6(v16) == 2)
              {
                ++WORD2(v16);
                *(_BYTE *)(v15 + v14) = a3;
                return sub_10004C8A0(25, v15, BYTE4(v16), a4, (uint64_t)sub_10004AE9C, v9, v10, v11);
              }
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001D6D98(uint64_t a1, char a2, char a3, char a4, char a5, char a6, char a7, char a8, uint64_t (*a9)())
{
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int16 v22;
  unsigned __int16 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[6];
  uint64_t v32;
  uint64_t v33;

  v32 = 0;
  v33 = 0;
  result = sub_10004BC7C(&v32);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v33))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3493, "OI_STATUS _BCM_LEMetaTrackSensorV2(const BTAddress, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_SENSOR_TRACK_CB)");
    }
    else
    {
      v18 = WORD2(v33);
      if (WORD1(v33) > WORD2(v33) && BYTE6(v33) == 2)
      {
        ++WORD2(v33);
        *(_BYTE *)(v32 + v18) = 78;
        v31[0] = BYTE5(a1);
        v31[1] = BYTE4(a1);
        v31[2] = BYTE3(a1);
        v31[3] = BYTE2(a1);
        v31[4] = BYTE1(a1);
        v31[5] = a1;
        if (HIBYTE(v33))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3496, "OI_STATUS _BCM_LEMetaTrackSensorV2(const BTAddress, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_SENSOR_TRACK_CB)");
        }
        else if (WORD1(v33) - WORD2(v33) > 5 && BYTE6(v33) == 2)
        {
          sub_10004C878(v32 + WORD2(v33), (uint64_t)v31, 6uLL);
          v22 = WORD2(v33);
          v23 = WORD2(v33) + 6;
          WORD2(v33) += 6;
          if (HIBYTE(v33))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3497, "OI_STATUS _BCM_LEMetaTrackSensorV2(const BTAddress, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_SENSOR_TRACK_CB)");
          }
          else if (WORD1(v33) > v23 && BYTE6(v33) == 2)
          {
            WORD2(v33) = v22 + 7;
            *(_BYTE *)(v32 + v23) = BYTE6(a1);
            if (HIBYTE(v33))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3498, "OI_STATUS _BCM_LEMetaTrackSensorV2(const BTAddress, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_SENSOR_TRACK_CB)");
            }
            else
            {
              v24 = WORD2(v33);
              if (WORD1(v33) > WORD2(v33) && BYTE6(v33) == 2)
              {
                ++WORD2(v33);
                *(_BYTE *)(v32 + v24) = a2;
                if (HIBYTE(v33))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3499, "OI_STATUS _BCM_LEMetaTrackSensorV2(const BTAddress, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_SENSOR_TRACK_CB)");
                }
                else
                {
                  v25 = WORD2(v33);
                  if (WORD1(v33) > WORD2(v33) && BYTE6(v33) == 2)
                  {
                    ++WORD2(v33);
                    *(_BYTE *)(v32 + v25) = a3;
                    if (HIBYTE(v33))
                    {
                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3500, "OI_STATUS _BCM_LEMetaTrackSensorV2(const BTAddress, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_SENSOR_TRACK_CB)");
                    }
                    else
                    {
                      v26 = WORD2(v33);
                      if (WORD1(v33) > WORD2(v33) && BYTE6(v33) == 2)
                      {
                        ++WORD2(v33);
                        *(_BYTE *)(v32 + v26) = a4;
                        if (HIBYTE(v33))
                        {
                          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3501, "OI_STATUS _BCM_LEMetaTrackSensorV2(const BTAddress, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_SENSOR_TRACK_CB)");
                        }
                        else
                        {
                          v27 = WORD2(v33);
                          if (WORD1(v33) > WORD2(v33) && BYTE6(v33) == 2)
                          {
                            ++WORD2(v33);
                            *(_BYTE *)(v32 + v27) = a5;
                            if (HIBYTE(v33))
                            {
                              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3502, "OI_STATUS _BCM_LEMetaTrackSensorV2(const BTAddress, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_SENSOR_TRACK_CB)");
                            }
                            else
                            {
                              v28 = WORD2(v33);
                              if (WORD1(v33) > WORD2(v33) && BYTE6(v33) == 2)
                              {
                                ++WORD2(v33);
                                *(_BYTE *)(v32 + v28) = a6;
                                if (HIBYTE(v33))
                                {
                                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3503, "OI_STATUS _BCM_LEMetaTrackSensorV2(const BTAddress, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_SENSOR_TRACK_CB)");
                                }
                                else
                                {
                                  v29 = WORD2(v33);
                                  if (WORD1(v33) > WORD2(v33) && BYTE6(v33) == 2)
                                  {
                                    ++WORD2(v33);
                                    *(_BYTE *)(v32 + v29) = a7;
                                    if (HIBYTE(v33))
                                    {
                                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3504, "OI_STATUS _BCM_LEMetaTrackSensorV2(const BTAddress, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_SENSOR_TRACK_CB)");
                                    }
                                    else
                                    {
                                      v30 = WORD2(v33);
                                      if (WORD1(v33) > WORD2(v33) && BYTE6(v33) == 2)
                                      {
                                        ++WORD2(v33);
                                        *(_BYTE *)(v32 + v30) = a8;
                                        return sub_10004C8A0(233, v32, BYTE4(v33), a9, (uint64_t)sub_1001A8ADC, v19, v20, v21);
                                      }
                                    }
                                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/St"
                                                           "ack/vsc/bcm/bcm_vsc.c");
                                  }
                                }
                                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/bcm/bcm_vsc.c");
                              }
                            }
                            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                          }
                        }
                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }
                    }
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                }
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001D7314(uint64_t a1, char a2, char a3, char a4, char a5, char a6, char a7, char a8, char a9, char a10, uint64_t (*a11)())
{
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int16 v24;
  unsigned __int16 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[6];
  uint64_t v36;
  uint64_t v37;

  v36 = 0;
  v37 = 0;
  result = sub_10004BC7C(&v36);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v37))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3518, "OI_STATUS _BCM_LEMetaTrackSensorV3(const BTAddress, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_SENSOR_TRACK_CB)");
    }
    else
    {
      v20 = WORD2(v37);
      if (WORD1(v37) > WORD2(v37) && BYTE6(v37) == 2)
      {
        ++WORD2(v37);
        *(_BYTE *)(v36 + v20) = 88;
        v35[0] = BYTE5(a1);
        v35[1] = BYTE4(a1);
        v35[2] = BYTE3(a1);
        v35[3] = BYTE2(a1);
        v35[4] = BYTE1(a1);
        v35[5] = a1;
        if (HIBYTE(v37))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3521, "OI_STATUS _BCM_LEMetaTrackSensorV3(const BTAddress, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_SENSOR_TRACK_CB)");
        }
        else if (WORD1(v37) - WORD2(v37) > 5 && BYTE6(v37) == 2)
        {
          sub_10004C878(v36 + WORD2(v37), (uint64_t)v35, 6uLL);
          v24 = WORD2(v37);
          v25 = WORD2(v37) + 6;
          WORD2(v37) += 6;
          if (HIBYTE(v37))
          {
            sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3522, "OI_STATUS _BCM_LEMetaTrackSensorV3(const BTAddress, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_SENSOR_TRACK_CB)");
          }
          else if (WORD1(v37) > v25 && BYTE6(v37) == 2)
          {
            WORD2(v37) = v24 + 7;
            *(_BYTE *)(v36 + v25) = BYTE6(a1);
            if (HIBYTE(v37))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3523, "OI_STATUS _BCM_LEMetaTrackSensorV3(const BTAddress, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_SENSOR_TRACK_CB)");
            }
            else
            {
              v26 = WORD2(v37);
              if (WORD1(v37) > WORD2(v37) && BYTE6(v37) == 2)
              {
                ++WORD2(v37);
                *(_BYTE *)(v36 + v26) = a2;
                if (HIBYTE(v37))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3524, "OI_STATUS _BCM_LEMetaTrackSensorV3(const BTAddress, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_SENSOR_TRACK_CB)");
                }
                else
                {
                  v27 = WORD2(v37);
                  if (WORD1(v37) > WORD2(v37) && BYTE6(v37) == 2)
                  {
                    ++WORD2(v37);
                    *(_BYTE *)(v36 + v27) = a3;
                    if (HIBYTE(v37))
                    {
                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3525, "OI_STATUS _BCM_LEMetaTrackSensorV3(const BTAddress, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_SENSOR_TRACK_CB)");
                    }
                    else
                    {
                      v28 = WORD2(v37);
                      if (WORD1(v37) > WORD2(v37) && BYTE6(v37) == 2)
                      {
                        ++WORD2(v37);
                        *(_BYTE *)(v36 + v28) = a4;
                        if (HIBYTE(v37))
                        {
                          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3526, "OI_STATUS _BCM_LEMetaTrackSensorV3(const BTAddress, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_SENSOR_TRACK_CB)");
                        }
                        else
                        {
                          v29 = WORD2(v37);
                          if (WORD1(v37) > WORD2(v37) && BYTE6(v37) == 2)
                          {
                            ++WORD2(v37);
                            *(_BYTE *)(v36 + v29) = a5;
                            if (HIBYTE(v37))
                            {
                              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3527, "OI_STATUS _BCM_LEMetaTrackSensorV3(const BTAddress, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_SENSOR_TRACK_CB)");
                            }
                            else
                            {
                              v30 = WORD2(v37);
                              if (WORD1(v37) > WORD2(v37) && BYTE6(v37) == 2)
                              {
                                ++WORD2(v37);
                                *(_BYTE *)(v36 + v30) = a6;
                                if (HIBYTE(v37))
                                {
                                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3528, "OI_STATUS _BCM_LEMetaTrackSensorV3(const BTAddress, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_SENSOR_TRACK_CB)");
                                }
                                else
                                {
                                  v31 = WORD2(v37);
                                  if (WORD1(v37) > WORD2(v37) && BYTE6(v37) == 2)
                                  {
                                    ++WORD2(v37);
                                    *(_BYTE *)(v36 + v31) = a7;
                                    if (HIBYTE(v37))
                                    {
                                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3529, "OI_STATUS _BCM_LEMetaTrackSensorV3(const BTAddress, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_SENSOR_TRACK_CB)");
                                    }
                                    else
                                    {
                                      v32 = WORD2(v37);
                                      if (WORD1(v37) > WORD2(v37) && BYTE6(v37) == 2)
                                      {
                                        ++WORD2(v37);
                                        *(_BYTE *)(v36 + v32) = a8;
                                        if (HIBYTE(v37))
                                        {
                                          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3530, "OI_STATUS _BCM_LEMetaTrackSensorV3(const BTAddress, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_SENSOR_TRACK_CB)");
                                        }
                                        else
                                        {
                                          v33 = WORD2(v37);
                                          if (WORD1(v37) > WORD2(v37) && BYTE6(v37) == 2)
                                          {
                                            ++WORD2(v37);
                                            *(_BYTE *)(v36 + v33) = a9;
                                            if (HIBYTE(v37))
                                            {
                                              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3531, "OI_STATUS _BCM_LEMetaTrackSensorV3(const BTAddress, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, BT_VSC_SENSOR_TRACK_CB)");
                                            }
                                            else
                                            {
                                              v34 = WORD2(v37);
                                              if (WORD1(v37) > WORD2(v37) && BYTE6(v37) == 2)
                                              {
                                                ++WORD2(v37);
                                                *(_BYTE *)(v36 + v34) = a10;
                                                return sub_10004C8A0(233, v36, BYTE4(v37), a11, (uint64_t)sub_1001A8ADC, v21, v22, v23);
                                              }
                                            }
                                            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth"
                                                                   "_base/Stack/vsc/bcm/bcm_vsc.c");
                                          }
                                        }
                                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_bas"
                                                               "e/Stack/vsc/bcm/bcm_vsc.c");
                                      }
                                    }
                                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/St"
                                                           "ack/vsc/bcm/bcm_vsc.c");
                                  }
                                }
                                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/bcm/bcm_vsc.c");
                              }
                            }
                            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                          }
                        }
                        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }
                    }
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                }
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001D7988(char a1, char a2, __int16 a3, __int16 a4, __int16 a5, __int16 a6, uint64_t (*a7)())
{
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int16 v21;
  unsigned __int16 v22;
  unsigned __int16 v23;
  uint64_t v24;
  uint64_t v25;

  v24 = 0;
  v25 = 0;
  result = sub_10004BC7C(&v24);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v25))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3544, "OI_STATUS _BCM_LEMetaTrackSensorIncreaseScanParams(uint8_t, uint8_t, uint16_t, uint16_t, uint16_t, uint16_t, BT_VSC_SENSOR_TRACK_INCREASE_SCAN_PARAM_CB)");
    }
    else
    {
      v18 = WORD2(v25);
      if (WORD1(v25) > WORD2(v25) && BYTE6(v25) == 2)
      {
        ++WORD2(v25);
        *(_BYTE *)(v24 + v18) = 81;
        if (HIBYTE(v25))
        {
          sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3545, "OI_STATUS _BCM_LEMetaTrackSensorIncreaseScanParams(uint8_t, uint8_t, uint16_t, uint16_t, uint16_t, uint16_t, BT_VSC_SENSOR_TRACK_INCREASE_SCAN_PARAM_CB)");
        }
        else
        {
          v19 = WORD2(v25);
          if (WORD1(v25) > WORD2(v25) && BYTE6(v25) == 2)
          {
            ++WORD2(v25);
            *(_BYTE *)(v24 + v19) = a1;
            if (HIBYTE(v25))
            {
              sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3546, "OI_STATUS _BCM_LEMetaTrackSensorIncreaseScanParams(uint8_t, uint8_t, uint16_t, uint16_t, uint16_t, uint16_t, BT_VSC_SENSOR_TRACK_INCREASE_SCAN_PARAM_CB)");
            }
            else
            {
              v20 = WORD2(v25);
              if (WORD1(v25) > WORD2(v25) && BYTE6(v25) == 2)
              {
                ++WORD2(v25);
                *(_BYTE *)(v24 + v20) = a2;
                if (HIBYTE(v25))
                {
                  sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3547, "OI_STATUS _BCM_LEMetaTrackSensorIncreaseScanParams(uint8_t, uint8_t, uint16_t, uint16_t, uint16_t, uint16_t, BT_VSC_SENSOR_TRACK_INCREASE_SCAN_PARAM_CB)");
                }
                else if (WORD1(v25) - WORD2(v25) > 1 && BYTE6(v25) == 2)
                {
                  *(_WORD *)(v24 + WORD2(v25)) = a3;
                  v21 = WORD2(v25) + 2;
                  WORD2(v25) += 2;
                  if (HIBYTE(v25))
                  {
                    sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3548, "OI_STATUS _BCM_LEMetaTrackSensorIncreaseScanParams(uint8_t, uint8_t, uint16_t, uint16_t, uint16_t, uint16_t, BT_VSC_SENSOR_TRACK_INCREASE_SCAN_PARAM_CB)");
                  }
                  else if (WORD1(v25) - v21 > 1 && BYTE6(v25) == 2)
                  {
                    *(_BYTE *)(v24 + v21) = a4;
                    *(_BYTE *)(v24 + WORD2(v25) + 1) = HIBYTE(a4);
                    v22 = WORD2(v25) + 2;
                    WORD2(v25) += 2;
                    if (HIBYTE(v25))
                    {
                      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3549, "OI_STATUS _BCM_LEMetaTrackSensorIncreaseScanParams(uint8_t, uint8_t, uint16_t, uint16_t, uint16_t, uint16_t, BT_VSC_SENSOR_TRACK_INCREASE_SCAN_PARAM_CB)");
                    }
                    else if (WORD1(v25) - v22 > 1 && BYTE6(v25) == 2)
                    {
                      *(_BYTE *)(v24 + v22) = a5;
                      *(_BYTE *)(v24 + WORD2(v25) + 1) = HIBYTE(a5);
                      v23 = WORD2(v25) + 2;
                      WORD2(v25) += 2;
                      if (HIBYTE(v25))
                      {
                        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3550, "OI_STATUS _BCM_LEMetaTrackSensorIncreaseScanParams(uint8_t, uint8_t, uint16_t, uint16_t, uint16_t, uint16_t, BT_VSC_SENSOR_TRACK_INCREASE_SCAN_PARAM_CB)");
                      }
                      else if (WORD1(v25) - v23 > 1 && BYTE6(v25) == 2)
                      {
                        *(_BYTE *)(v24 + v23) = a6;
                        *(_BYTE *)(v24 + WORD2(v25) + 1) = HIBYTE(a6);
                        WORD2(v25) += 2;
                        return sub_10004C8A0(233, v24, BYTE4(v25), a7, (uint64_t)sub_1001A8C14, v15, v16, v17);
                      }
                      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                    }
                    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                  sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
                sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
            }
            sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
        }
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001D7DC4(int a1, char a2, uint64_t (*a3)())
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int16 v10;
  unsigned __int16 v11;
  uint64_t v12;
  uint64_t v13;

  v12 = 0;
  v13 = 0;
  result = sub_10004BC7C(&v12);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v13))
    {
      sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3687, "OI_STATUS _BCM_ReadControllerRam(uint32_t, uint8_t, BT_VSC_READ_CONTROLLER_RAM_CB)");
    }
    else if (WORD1(v13) - WORD2(v13) > 3 && BYTE6(v13) == 2)
    {
      *(_WORD *)(v12 + WORD2(v13)) = a1;
      *(_BYTE *)(v12 + WORD2(v13) + 2) = BYTE2(a1);
      *(_BYTE *)(v12 + WORD2(v13) + 3) = HIBYTE(a1);
      v10 = WORD2(v13);
      v11 = WORD2(v13) + 4;
      WORD2(v13) += 4;
      if (HIBYTE(v13))
      {
        sub_10025240C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3688, "OI_STATUS _BCM_ReadControllerRam(uint32_t, uint8_t, BT_VSC_READ_CONTROLLER_RAM_CB)");
      }
      else if (WORD1(v13) > v11 && BYTE6(v13) == 2)
      {
        WORD2(v13) = v10 + 5;
        *(_BYTE *)(v12 + v11) = a2;
        return sub_10004C8A0(77, v12, BYTE4(v13), a3, (uint64_t)sub_1000723AC, v7, v8, v9);
      }
      sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  return result;
}

uint64_t sub_1001D7F58(int *a1)
{
  return *(unsigned __int8 *)(*(_QWORD *)(sub_1001E3CCC(a1) + 112) + 12);
}

uint64_t sub_1001D7F74(int *a1, int a2)
{
  void *v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  char v9;
  uint64_t result;

  if (!*(_QWORD *)(sub_1001E3CCC(a1) + 112))
  {
    v4 = sub_100114588(0x20uLL);
    *(_QWORD *)(sub_1001E3CCC(a1) + 112) = v4;
  }
  v5 = *(_QWORD *)(sub_1001E3CCC(a1) + 112);
  v6 = *(unsigned __int16 *)(sub_1001E3CCC(a1) + 32);
  *(_BYTE *)(v5 + 12) = v6 / *(unsigned __int16 *)(sub_1001E3CCC(a1) + 60);
  v7 = *(unsigned __int16 *)(sub_1001E3CCC(a1) + 32);
  v8 = sub_1001E3CCC(a1);
  v9 = *(_BYTE *)(v5 + 12);
  if (v7 % *(unsigned __int16 *)(v8 + 60))
    *(_BYTE *)(v5 + 12) = ++v9;
  if ((v9 & 0xF0) != 0)
    result = 104;
  else
    result = 0;
  *(_DWORD *)v5 = a2;
  return result;
}

uint64_t sub_1001D802C(int *a1, int a2, __int16 a3)
{
  void *v6;
  uint64_t v7;

  if (!*(_QWORD *)(sub_1001E3CCC(a1) + 112))
  {
    v6 = sub_100114588(0x20uLL);
    *(_QWORD *)(sub_1001E3CCC(a1) + 112) = v6;
  }
  v7 = *(_QWORD *)(sub_1001E3CCC(a1) + 112);
  *(_DWORD *)(v7 + 4) = a2;
  *(_WORD *)(v7 + 10) = a3;
  return 0;
}

uint64_t sub_1001D8094(int *a1)
{
  return *(unsigned __int16 *)(*(_QWORD *)(sub_1001E3CCC(a1) + 112) + 4);
}

uint64_t sub_1001D80B0(int *a1)
{
  uint64_t result;
  _QWORD *v3;
  void *v4;

  result = sub_1001E3CCC(a1);
  v3 = *(_QWORD **)(result + 112);
  if (v3)
  {
    v4 = (void *)v3[2];
    if (v4)
    {
      sub_100053298(v4);
      v3[2] = 0;
    }
    sub_100053298(v3);
    result = sub_1001E3CCC(a1);
    *(_QWORD *)(result + 112) = 0;
  }
  return result;
}

uint64_t sub_1001D80FC(int *a1)
{
  return **(unsigned __int16 **)(sub_1001E3CCC(a1) + 112);
}

uint64_t sub_1001D8118(uint64_t a1, int a2)
{
  uint64_t v4;
  unsigned int *v5;
  unsigned int v6;
  NSObject *v7;
  NSObject *v8;

  v4 = sub_1001E3CCC((int *)a1);
  if (!a2)
  {
    if (!sub_10005549C())
      goto LABEL_9;
    sub_100054530("LE_L2CAP_IncreaseRemoteCredits credits cannot be 0. Disconnecting.\n");
    v8 = sub_1000544A0(0x2Fu);
    if (!os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      goto LABEL_9;
LABEL_8:
    sub_1006CE7A4();
LABEL_9:
    sub_1001DEE88(*(unsigned __int16 *)(a1 + 4));
    return 101;
  }
  v5 = *(unsigned int **)(v4 + 112);
  v6 = *v5 + a2;
  *v5 = v6;
  if (v6 >= 0x10000)
  {
    if (!sub_10005549C())
      goto LABEL_9;
    sub_100054530("LE_L2CAP_IncreaseRemoteCredits credits exceed max allowed. Disconnecting.\n");
    v7 = sub_1000544A0(0x2Fu);
    if (!os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      goto LABEL_9;
    goto LABEL_8;
  }
  sub_1001F0DF4(*(unsigned __int16 *)(a1 + 4));
  return 0;
}

uint64_t sub_1001D81F4(int *a1, unsigned int a2)
{
  unsigned int *v3;
  uint64_t result;

  v3 = *(unsigned int **)(sub_1001E3CCC(a1) + 112);
  if (*v3 < a2)
    return 101;
  result = 0;
  *v3 -= a2;
  return result;
}

uint64_t sub_1001D8234(uint64_t a1, unsigned __int16 *a2, unsigned int a3, char a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  unsigned __int16 v14;
  __int128 *v15;
  char v16;

  v10 = *(_QWORD *)(sub_1001E3CCC((int *)a1) + 112);
  if (*(_DWORD *)(v10 + 4))
  {
    v11 = sub_1001D837C(a1, a2, a3, a4, a5);
    if ((_DWORD)v11)
    {
      v12 = v11;
      if (sub_10005549C())
      {
        sub_100054530("LE_L2CAP_Flow_DataIndication returned %!. Disconnecting L2CAP Channel\n", v12);
        v13 = sub_1000544A0(0x2Fu);
        if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      sub_1001DEE88(*(unsigned __int16 *)(a1 + 4));
    }
    else
    {
      v14 = *(_WORD *)(v10 + 8) + 1;
      *(_WORD *)(v10 + 8) = v14;
      --*(_DWORD *)(v10 + 4);
      if ((unsigned __int16)(*(_WORD *)(v10 + 10) - 1) >= v14)
      {
        return 0;
      }
      else
      {
        v15 = *(__int128 **)sub_1001E3CCC((int *)a1);
        v16 = sub_1001FEFA4();
        sub_10022F270(v15, v16, *(_WORD *)(a1 + 4), *(_WORD *)(v10 + 8));
        v12 = 0;
        *(_DWORD *)(v10 + 4) += *(unsigned __int16 *)(v10 + 8);
        *(_WORD *)(v10 + 8) = 0;
      }
    }
  }
  else
  {
    sub_1001DEE88(*(unsigned __int16 *)(a1 + 4));
    return 408;
  }
  return v12;
}

uint64_t sub_1001D837C(uint64_t a1, unsigned __int16 *a2, unsigned int a3, char a4, uint64_t a5)
{
  uint64_t v10;
  char *v11;
  uint64_t *v12;
  uint64_t v13;
  NSObject *v14;
  unsigned int v15;
  int v16;
  uint64_t v17;
  NSObject *v18;
  int v19;
  int v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  NSObject *v26;

  v10 = *(_QWORD *)(sub_1001E3CCC((int *)a1) + 112);
  v12 = (uint64_t *)(v10 + 16);
  v11 = *(char **)(v10 + 16);
  if (v11)
  {
LABEL_2:
    v13 = *(unsigned int *)(v10 + 24);
    if (v13 + (unsigned __int16)a3 <= *(_DWORD *)(v10 + 28))
    {
      memmove(&v11[v13], a2, (unsigned __int16)a3);
      v19 = *(_DWORD *)(v10 + 28);
      v20 = *(_DWORD *)(v10 + 24) + (unsigned __int16)a3;
      *(_DWORD *)(v10 + 24) = v20;
      v21 = *(_BYTE *)(v10 + 13) | a4;
      *(_BYTE *)(v10 + 13) = v21;
      if (v20 != v19)
        return 0;
      sub_1001DFA10(*(unsigned __int16 *)(a1 + 4), *v12, (unsigned __int16)v20, v21 != 0, a5);
      v22 = 0;
      goto LABEL_17;
    }
    if (!sub_10005549C()
      || (sub_100054530("Too much data received (currentPos=%d, new data size=%d, totalSDU size=%d\n", *(_DWORD *)(v10 + 24), (unsigned __int16)a3, *(_DWORD *)(v10 + 28)), v14 = sub_1000544A0(0x2Fu), !os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)))
    {
LABEL_16:
      v22 = 472;
LABEL_17:
      if (*v12)
        sub_100053298((void *)*v12);
      *(_BYTE *)(v10 + 13) = 0;
      *v12 = 0;
      *(_QWORD *)(v10 + 24) = 0;
      return v22;
    }
LABEL_15:
    sub_1006CE7A4();
    goto LABEL_16;
  }
  v15 = *a2;
  *(_DWORD *)(v10 + 28) = v15;
  if (v15 > *(unsigned __int16 *)(sub_1001E3CCC((int *)a1) + 36))
  {
    if (!sub_10005549C())
      goto LABEL_16;
    v16 = *(_DWORD *)(v10 + 28);
    v17 = sub_1001E3CCC((int *)a1);
    sub_100054530("SDU Size exceeds MTU (SDU Size=%d inMTU=%d\n", v16, *(unsigned __int16 *)(v17 + 36));
    v18 = sub_1000544A0(0x2Fu);
    if (!os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
      goto LABEL_16;
    goto LABEL_15;
  }
  if (*(unsigned __int16 *)(sub_1001E3CCC((int *)a1) + 72) < a3)
  {
    if (!sub_10005549C())
      goto LABEL_16;
    v23 = sub_1001E3CCC((int *)a1);
    sub_100054530("PDU Size exceeds MaxPDUSize (PDU Size=%d maxPDUSize=%d\n", a3, *(unsigned __int16 *)(v23 + 72));
    v24 = sub_1000544A0(0x2Fu);
    if (!os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
      goto LABEL_16;
    goto LABEL_15;
  }
  v11 = (char *)sub_100052DC0(*(unsigned int *)(v10 + 28));
  *(_QWORD *)(v10 + 16) = v11;
  if (v11)
  {
    ++a2;
    LOWORD(a3) = a3 - 2;
    goto LABEL_2;
  }
  if (sub_10005549C())
  {
    sub_100054530("Failed to allocate reassemblyPacket memory.\n");
    v26 = sub_1000544A0(0x2Fu);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
  return 106;
}

uint64_t sub_1001D85EC(unsigned int a1, unsigned int a2)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  __int128 *v8;
  char v9;
  unsigned int v10;
  BOOL v11;
  __int16 v12;
  NSObject *v13;
  int *v15;

  v15 = 0;
  v4 = sub_1001DB044(a1, (uint64_t *)&v15);
  if ((_DWORD)v4)
  {
    v5 = v4;
    if (sub_10005549C())
    {
      sub_100054530("OI_ChanMan_GetChannel failed: %!", v5);
      v6 = sub_1000544A0(0x2Fu);
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
  else if (sub_1001EE9F0(a1))
  {
    v7 = *(_QWORD *)(sub_1001E3CCC(v15) + 112);
    v8 = *(__int128 **)sub_1001E3CCC(v15);
    v9 = sub_1001FEFA4();
    v5 = sub_10022F270(v8, v9, *((_WORD *)v15 + 2), a2);
    if (!(_DWORD)v5)
    {
      *(_DWORD *)(v7 + 4) += a2;
      v10 = *(unsigned __int16 *)(v7 + 8);
      v5 = 0;
      v11 = v10 >= a2;
      v12 = v10 - a2;
      if (v11)
        *(_WORD *)(v7 + 8) = v12;
      else
        *(_WORD *)(v7 + 8) = 0;
    }
  }
  else
  {
    if (sub_10005549C())
    {
      sub_100054530("This channel is not LE Credit based");
      v13 = sub_1000544A0(0x2Fu);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 403;
  }
  return v5;
}

BOOL sub_1001D8730()
{
  BOOL v0;

  if (qword_100984C90)
    v0 = off_100999028 == 0;
  else
    v0 = 1;
  return !v0;
}

const char *sub_1001D8754(int a1)
{
  const char *result;
  const char *v2;

  if (a1 > 4096)
  {
    if (a1 <= 0x2000)
    {
      switch(a1)
      {
        case 5121:
          result = "OI_DHCI_READ_FAILED_CON_CTR_OPCODE";
          break;
        case 5122:
          result = "OI_DHCI_RESET_FAILED_CON_CTR_OPCODE";
          break;
        case 5123:
          result = "OI_DHCI_GET_LINK_QUALITY_OPCODE";
          break;
        case 5124:
LABEL_251:
          v2 = "Unknown";
          if ((a1 & 0xFC00) == 0xF800)
            v2 = "OI_DHCI_BLUETOOTH_LOGO_TEST_OPCODE";
          if (a1 >> 10 <= 0x3E)
            result = v2;
          else
            result = "OI_DHCI_VENDOR_OPCODE";
          break;
        case 5125:
          result = "OI_DHCI_READ_RSSI_OPCODE";
          break;
        case 5126:
          result = "OI_DHCI_READ_AFH_CHAN_MAP_OPCODE";
          break;
        case 5127:
          result = "OI_DHCI_READ_CLOCK_OPCODE";
          break;
        case 5128:
          result = "OI_DHCI_CMD_ID_READ_ENCRYPTION_KEY_SIZE_OPCODE";
          break;
        case 5129:
          result = "OI_DHCI_CMD_ID_READ_LOCAL_AMP_INFO_OPCODE";
          break;
        case 5130:
          result = "OI_DHCI_CMD_ID_READ_LOCAL_AMP_ASSOC_INFO_OPCODE";
          break;
        case 5131:
          result = "OI_DHCI_CMD_ID_WRITE_LOCAL_AMP_ASSOC_INFO_OPCODE";
          break;
        default:
          switch(a1)
          {
            case 4097:
              result = "OI_DHCI_READ_LOCAL_VER_INFO_OPCODE";
              break;
            case 4098:
              result = "OI_DHCI_READ_LOCAL_SUP_CMDS_OPCODE";
              break;
            case 4099:
              result = "OI_DHCI_READ_LOCAL_FEATURES_OPCODE";
              break;
            case 4100:
              result = "OI_DHCI_READ_LOCAL_EXT_FEATURES_OPCODE";
              break;
            case 4101:
              result = "OI_DHCI_READ_BUFFER_SIZE_OPCODE";
              break;
            case 4102:
            case 4104:
              goto LABEL_251;
            case 4103:
              result = "OI_DHCI_READ_COUNTRY_CODE_OPCODE";
              break;
            case 4105:
              result = "OI_DHCI_READ_BD_ADDR_OPCODE";
              break;
            case 4106:
              result = "OI_DHCI_CMD_ID_READ_DATA_BLOCK_SIZE_OPCODE";
              break;
            default:
              switch(a1)
              {
                case 6145:
                  result = "OI_DHCI_READ_LOOPBACK_MODE_OPCODE";
                  break;
                case 6146:
                  result = "OI_DHCI_WRITE_LOOPBACK_MODE_OPCODE";
                  break;
                case 6147:
                  result = "OI_DHCI_ENABLE_DEV_TEST_MODE_OPCODE";
                  break;
                case 6151:
                  result = "OI_DHCI_CMD_ID_ENABLE_AMP_RECEIVER_REPORTS_OPCODE";
                  break;
                case 6152:
                  result = "OI_DHCI_CMD_ID_AMP_TEST_END_OPCODE";
                  break;
                case 6153:
                  result = "OI_DHCI_CMD_ID_AMP_TEST_OPCODE";
                  break;
                default:
                  goto LABEL_251;
              }
              break;
          }
          break;
      }
    }
    else
    {
      switch(a1)
      {
        case 8193:
          result = "OI_DHCI_CMD_ID_LE_SET_EVENT_MASK_OPCODE";
          break;
        case 8194:
          result = "OI_DHCI_CMD_ID_LE_READ_BUFFER_SIZE_OPCODE";
          break;
        case 8195:
          result = "OI_DHCI_CMD_ID_LE_READ_LOCAL_SUPPORTED_FEATURES_OPCODE";
          break;
        case 8197:
          result = "OI_DHCI_CMD_ID_LE_SET_RANDOM_ADDRESS_OPCODE";
          break;
        case 8198:
          result = "OI_DHCI_CMD_ID_LE_SET_ADVERTISING_PARAMETERS_OPCODE";
          break;
        case 8199:
          result = "OI_DHCI_CMD_ID_LE_READ_ADVERTISING_CHANNEL_TX_POWER_OPCODE";
          break;
        case 8200:
          result = "OI_DHCI_CMD_ID_LE_SET_ADVERTISING_DATA_OPCODE";
          break;
        case 8201:
          result = "OI_DHCI_CMD_ID_LE_SET_SCAN_RESPONSE_DATA_OPCODE";
          break;
        case 8202:
          result = "OI_DHCI_CMD_ID_LE_SET_ADVERTISE_ENABLE_OPCODE";
          break;
        case 8203:
          result = "OI_DHCI_CMD_ID_LE_SET_SCAN_PARAMETERS_OPCODE";
          break;
        case 8204:
          result = "OI_DHCI_CMD_ID_LE_SET_SCAN_ENABLE_OPCODE";
          break;
        case 8205:
          result = "OI_DHCI_CMD_ID_LE_CREATE_CONNECTION_OPCODE";
          break;
        case 8206:
          result = "OI_DHCI_CMD_ID_LE_CREATE_CONNECTION_CANCEL_OPCODE";
          break;
        case 8207:
          result = "OI_DHCI_CMD_ID_LE_READ_FILTER_ACCEPT_LIST_SIZE_OPCODE";
          break;
        case 8208:
          result = "OI_DHCI_CMD_ID_LE_CLEAR_FILTER_ACCEPT_LIST_OPCODE";
          break;
        case 8209:
          result = "OI_DHCI_CMD_ID_LE_ADD_DEVICE_TO_FILTER_ACCEPT_LIST_OPCODE";
          break;
        case 8210:
          result = "OI_DHCI_CMD_ID_LE_REMOVE_DEVICE_FROM_FILTER_ACCEPT_LIST_OPCODE";
          break;
        case 8211:
          result = "OI_DHCI_CMD_ID_LE_CONNECTION_UPDATE_OPCODE";
          break;
        case 8212:
          result = "OI_DHCI_CMD_ID_LE_SET_HOST_CHANNEL_CLASSIFICATION_OPCODE";
          break;
        case 8213:
          result = "OI_DHCI_CMD_ID_LE_READ_CHANNEL_MAP_OPCODE";
          break;
        case 8214:
          result = "OI_DHCI_CMD_ID_LE_READ_REMOTE_USED_FEATURES_OPCODE";
          break;
        case 8215:
          result = "OI_DHCI_CMD_ID_LE_ENCRYPT_OPCODE";
          break;
        case 8216:
          result = "OI_DHCI_CMD_ID_LE_RAND_OPCODE";
          break;
        case 8217:
          result = "OI_DHCI_CMD_ID_LE_START_ENCRYPTION_OPCODE";
          break;
        case 8218:
          result = "OI_DHCI_CMD_ID_LE_LONG_TERM_KEY_REQUEST_REPLY_OPCODE";
          break;
        case 8219:
          result = "OI_DHCI_CMD_ID_LE_LONG_TERM_KEY_REQUEST_NEG_REPLY_OPCODE";
          break;
        case 8220:
          result = "OI_DHCI_CMD_ID_LE_READ_SUPPORTED_STATES_OPCODE";
          break;
        case 8221:
          result = "OI_DHCI_CMD_ID_LE_RECEIVER_TEST_OPCODE";
          break;
        case 8222:
          result = "OI_DHCI_CMD_ID_LE_TRANSMITTER_TEST_OPCODE";
          break;
        case 8223:
          result = "OI_DHCI_CMD_ID_LE_TEST_END_OPCODE";
          break;
        case 8224:
          result = "OI_DHCI_CMD_ID_LE_REMOTE_CONNECTION_PARAM_REQ_REPLY_OPCODE";
          break;
        case 8225:
          result = "OI_DHCI_CMD_ID_LE_REMOTE_CONNECTION_PARAM_REQ_NEG_REPLY_OPCODE";
          break;
        case 8226:
          result = "OI_DHCI_CMD_ID_LE_SET_DATA_LENGTH_OPCODE";
          break;
        case 8227:
          result = "OI_DHCI_CMD_ID_LE_READ_SUGGESTED_DEFAULT_DATA_LENGTH_OPCODE";
          break;
        case 8228:
          result = "OI_DHCI_CMD_ID_LE_WRITE_SUGGESTED_DEFAULT_DATA_LENGTH_OPCODE";
          break;
        case 8239:
          result = "OI_DHCI_CMD_ID_LE_READ_MAXIMUM_DATA_LENGTH_OPCODE";
          break;
        case 8240:
          result = "OI_DHCI_CMD_ID_LE_READ_PHY_OPCODE";
          break;
        case 8241:
          result = "OI_DHCI_CMD_ID_LE_SET_DEFAULT_PHY_OPCODE";
          break;
        case 8242:
          result = "OI_DHCI_CMD_ID_LE_SET_PHY_OPCODE";
          break;
        case 8288:
          result = "OI_DHCI_CMD_ID_LE_READ_BUFFER_SIZE_V2_OPCODE";
          break;
        case 8310:
          result = "OI_DHCI_CMD_ID_LE_ENHANCED_READ_TRANSMIT_POWER_LEVEL_OPCODE";
          break;
        case 8311:
          result = "OI_DHCI_CMD_ID_LE_READ_REMOTE_TRANSMIT_POWER_LEVEL_OPCODE";
          break;
        case 8312:
          result = "OI_DHCI_CMD_ID_LE_SET_PATH_LOSS_REPORTING_PARAMETERS_OPCODE";
          break;
        case 8313:
          result = "OI_DHCI_CMD_ID_LE_SET_PATH_LOSS_REPORTING_ENABLE_OPCODE";
          break;
        case 8314:
          result = "OI_DHCI_CMD_ID_LE_SET_TRANSMIT_POWER_REPORTING_ENABLE_OPCODE";
          break;
        case 8317:
          result = "OI_DHCI_CMD_ID_LE_SET_DEFAULT_SUBRATE_OPCODE";
          break;
        case 8318:
          result = "OI_DHCI_CMD_ID_LE_SET_HOST_SUBRATING_OPCODE";
          break;
        case 8329:
          result = "OI_DHCI_CMD_ID_LE_CS_READ_LOCAL_SUPPORTED_CAPABILITIES_OPCODE";
          break;
        case 8330:
          result = "OI_DHCI_CMD_ID_LE_CS_READ_REMOTE_SUPPORTED_CAPABILITIES_OPCODE";
          break;
        case 8331:
          result = "OI_DHCI_CMD_ID_LE_CS_WRITE_CACHED_REMOTE_SUPPORTED_CAPABILITIES_OPCODE";
          break;
        case 8332:
          result = "OI_DHCI_CMD_ID_LE_CS_SET_SECURITY_ENABLE_OPCODE";
          break;
        case 8333:
          result = "OI_DHCI_CMD_ID_LE_CS_SET_DEFAULT_SETTINGS_OPCODE";
          break;
        case 8334:
          result = "OI_DHCI_CMD_ID_LE_CS_READ_REMOTE_FAE_TABLE_OPCODE";
          break;
        case 8335:
          result = "OI_DHCI_CMD_ID_LE_CS_WRITE_REMOTE_FAE_TABLE_OPCODE";
          break;
        case 8336:
          result = "OI_DHCI_CMD_ID_LE_CS_CREATE_CONFIG_OPCODE";
          break;
        case 8337:
          result = "OI_DHCI_CMD_ID_LE_CS_REMOVE_CONFIG_OPCODE";
          break;
        case 8338:
          result = "OI_DHCI_CMD_ID_LE_CS_SET_AFH_OPCODE";
          break;
        case 8339:
          result = "OI_DHCI_CMD_ID_LE_CS_SET_PROCEDURE_PARAMETERS_OPCODE";
          break;
        case 8340:
          result = "OI_DHCI_CMD_ID_LE_CS_SET_PROCEDURE_ENABLE_OPCODE";
          break;
        case 8342:
          result = "OI_DHCI_CMD_ID_LE_CS_READ_LOCAL_FAE_TABLE_OPCODE";
          break;
        default:
          goto LABEL_251;
      }
    }
  }
  else if (a1 <= 3072)
  {
    switch(a1)
    {
      case 1025:
        result = "OI_DHCI_INQUIRY_OPCODE";
        break;
      case 1026:
        result = "OI_DHCI_INQUIRY_CANCEL_OPCODE";
        break;
      case 1027:
        result = "OI_DHCI_PERIODIC_INQ_MODE_OPCODE";
        break;
      case 1028:
        result = "OI_DHCI_EXIT_PERIODIC_INQ_MODE_OPCODE";
        break;
      case 1029:
        result = "OI_DHCI_CREATE_CNCT_OPCODE";
        break;
      case 1030:
        result = "OI_DHCI_DISC_OPCODE";
        break;
      case 1031:
        result = "OI_DHCI_ADD_SCO_CNCT_OPCODE";
        break;
      case 1032:
        result = "OI_DHCI_CANCEL_CREATE_CNCT_OPCODE";
        break;
      case 1033:
        result = "OI_DHCI_ACCEPT_CNCT_REQ_OPCODE";
        break;
      case 1034:
        result = "OI_DHCI_REJ_CNCT_REQ_OPCODE";
        break;
      case 1035:
        result = "OI_DHCI_LINK_KEY_REQ_REPLY_OPCODE";
        break;
      case 1036:
        result = "OI_DHCI_LINK_KEY_REQ_NEG_REPLY_OPCODE";
        break;
      case 1037:
        result = "OI_DHCI_PIN_CODE_REQ_REPLY_OPCODE";
        break;
      case 1038:
        result = "OI_DHCI_PIN_CODE_REQ_NEG_REPLY_OPCODE";
        break;
      case 1039:
        result = "OI_DHCI_CHANGE_CNCT_PKT_TYPE_OPCODE";
        break;
      case 1040:
      case 1042:
      case 1044:
      case 1046:
      case 1048:
      case 1054:
      case 1056:
      case 1057:
      case 1058:
      case 1059:
      case 1060:
      case 1061:
      case 1062:
      case 1063:
      case 1073:
      case 1074:
        goto LABEL_251;
      case 1041:
        result = "OI_DHCI_AUTHENT_REQ_OPCODE";
        break;
      case 1043:
        result = "OI_DHCI_SET_CNCT_ENCRYPTION_OPCODE";
        break;
      case 1045:
        result = "OI_DHCI_CHANGE_CNCT_LINK_KEY_OPCODE";
        break;
      case 1047:
        result = "OI_DHCI_MASTER_LINK_KEY_OPCODE";
        break;
      case 1049:
        result = "OI_DHCI_REMOTE_NAME_REQ_OPCODE";
        break;
      case 1050:
        result = "OI_DHCI_CANCEL_REMOTE_NAME_REQ_OPCODE";
        break;
      case 1051:
        result = "OI_DHCI_READ_REMOTE_FEATURE_OPCODE";
        break;
      case 1052:
        result = "OI_DHCI_READ_REMOTE_EXT_FEATURE_OPCODE";
        break;
      case 1053:
        result = "OI_DHCI_READ_REMOTE_VER_INFO_OPCODE";
        break;
      case 1055:
        result = "OI_DHCI_READ_CLOCK_OFFSET_OPCODE";
        break;
      case 1064:
        result = "OI_DHCI_SETUP_SYNCHRONOUS_CNCT_OPCODE";
        break;
      case 1065:
        result = "OI_DHCI_ACCEPT_SYNCHRONOUS_CNCT_OPCODE";
        break;
      case 1066:
        result = "OI_DHCI_REJ_SYNCHRONOUS_CNCT_OPCODE";
        break;
      case 1067:
        result = "OI_DHCI_IO_CAP_REQ_REPLY_OPCODE";
        break;
      case 1068:
        result = "OI_DHCI_USER_CONFIRM_REQ_REPLY_OPCODE";
        break;
      case 1069:
        result = "OI_DHCI_USER_CONFIRM_REQ_NEG_REPLY_OPCODE";
        break;
      case 1070:
        result = "OI_DHCI_USER_PASSKEY_REQ_REPLY_OPCODE";
        break;
      case 1071:
        result = "OI_DHCI_USER_PASSKEY_REQ_NEG_REPLY_OPCODE";
        break;
      case 1072:
        result = "OI_DHCI_REMOTE_OOB_DATA_REQ_REPLY_OPCODE";
        break;
      case 1075:
        result = "OI_DHCI_REMOTE_OOB_DATA_REQ_NEG_REPLY_OPCODE";
        break;
      case 1076:
        result = "OI_DHCI_IO_CAP_REQ_NEG_REPLY_OPCODE";
        break;
      case 1077:
        result = "OI_DHCI_CMD_ID_CREATE_PHYSICAL_LINK_OPCODE";
        break;
      case 1078:
        result = "OI_DHCI_CMD_ID_ACCEPT_PHYSICAL_LINK_OPCODE";
        break;
      case 1079:
        result = "OI_DHCI_CMD_ID_DISCONNECT_PHYSICAL_LINK_OPCODE";
        break;
      case 1080:
        result = "OI_DHCI_CMD_ID_CREATE_LOGICAL_LINK_OPCODE";
        break;
      case 1081:
        result = "OI_DHCI_CMD_ID_ACCEPT_LOGICAL_LINK_OPCODE";
        break;
      case 1082:
        result = "OI_DHCI_CMD_ID_DISCONNECT_LOGICAL_LINK_OPCODE";
        break;
      case 1083:
        result = "OI_DHCI_CMD_ID_LOGICAL_LINK_CANCEL_OPCODE";
        break;
      case 1084:
        result = "OI_DHCI_CMD_ID_FLOW_SPEC_MODIFY_OPCODE";
        break;
      default:
        switch(a1)
        {
          case 2049:
            result = "OI_DHCI_HOLD_MODE_OPCODE";
            break;
          case 2050:
          case 2056:
          case 2058:
            goto LABEL_251;
          case 2051:
            result = "OI_DHCI_SNIFF_MODE_OPCODE";
            break;
          case 2052:
            result = "OI_DHCI_EXIT_SNIFF_MODE_OPCODE";
            break;
          case 2053:
            result = "OI_DHCI_PARK_MODE_OPCODE";
            break;
          case 2054:
            result = "OI_DHCI_EXIT_PARK_MODE_OPCODE";
            break;
          case 2055:
            result = "OI_DHCI_QOS_SETUP_OPCODE";
            break;
          case 2057:
            result = "OI_DHCI_ROLE_DISCOVERY_OPCODE";
            break;
          case 2059:
            result = "OI_DHCI_SWITCH_ROLE_OPCODE";
            break;
          case 2060:
            result = "OI_DHCI_READ_LINKPOLICY_OPCODE";
            break;
          case 2061:
            result = "OI_DHCI_WRITE_LINKPOLICY_OPCODE";
            break;
          case 2062:
            result = "OI_DHCI_READ_DEFAULT_LINKPOLICY_OPCODE";
            break;
          case 2063:
            result = "OI_DHCI_WRITE_DEFAULT_LINKPOLICY_OPCODE";
            break;
          case 2064:
            result = "OI_DHCI_WRITE_FLOW_SPECIFICATION_OPCODE";
            break;
          case 2065:
            result = "OI_DHCI_SNIFF_SUBRATING_OPCODE";
            break;
          default:
            if (a1)
              goto LABEL_251;
            result = "OI_DHCI_NOP_OPCODE";
            break;
        }
        break;
    }
  }
  else
  {
    switch(a1)
    {
      case 3073:
        result = "OI_DHCI_SET_EVT_MASK_OPCODE";
        break;
      case 3075:
        result = "OI_DHCI_RESET_OPCODE";
        break;
      case 3077:
        result = "OI_DHCI_SET_EVT_FILTER_OPCODE";
        break;
      case 3080:
        result = "OI_DHCI_FLUSH_OPCODE";
        break;
      case 3081:
        result = "OI_DHCI_READ_PIN_TYPE_OPCODE";
        break;
      case 3082:
        result = "OI_DHCI_WRITE_PIN_TYPE_OPCODE";
        break;
      case 3083:
        result = "OI_DHCI_CREATE_NEW_UNIT_KEY_OPCODE";
        break;
      case 3085:
        result = "OI_DHCI_READ_STORED_LINK_KEY_OPCODE";
        break;
      case 3089:
        result = "OI_DHCI_WRITE_STORED_LINK_KEY_OPCODE";
        break;
      case 3090:
        result = "OI_DHCI_DELETE_STORED_LINK_KEY_OPCODE";
        break;
      case 3091:
        result = "OI_DHCI_CHANGE_LOCAL_NAME_OPCODE";
        break;
      case 3092:
        result = "OI_DHCI_READ_LOCAL_NAME_OPCODE";
        break;
      case 3093:
        result = "OI_DHCI_READ_CNCT_ACCEPT_TO_OPCODE";
        break;
      case 3094:
        result = "OI_DHCI_WRITE_CNCT_ACCEPT_TO_OPCODE";
        break;
      case 3095:
        result = "OI_DHCI_READ_PAGE_TIMEOUT_OPCODE";
        break;
      case 3096:
        result = "OI_DHCI_WRITE_PAGE_TIMEOUT_OPCODE";
        break;
      case 3097:
        result = "OI_DHCI_READ_SCAN_ENABLE_OPCODE";
        break;
      case 3098:
        result = "OI_DHCI_WRITE_SCAN_ENABLE_OPCODE";
        break;
      case 3099:
        result = "OI_DHCI_READ_PAGESCAN_ACTIVITY_OPCODE";
        break;
      case 3100:
        result = "OI_DHCI_WRITE_PAGESCAN_ACT_OPCODE";
        break;
      case 3101:
        result = "OI_DHCI_READ_INQUIRYSCAN_ACT_OPCODE";
        break;
      case 3102:
        result = "OI_DHCI_WRITE_INQUIRYSCAN_ACT_OPCODE";
        break;
      case 3103:
        result = "OI_DHCI_READ_AUTHENT_ENABLE_OPCODE";
        break;
      case 3104:
        result = "OI_DHCI_WRITE_AUTHENT_ENABLE_OPCODE";
        break;
      case 3105:
        result = "OI_DHCI_READ_ENCRYPTION_MODE_OPCODE";
        break;
      case 3106:
        result = "OI_DHCI_WRITE_ENCRYPTION_MODE_OPCODE";
        break;
      case 3107:
        result = "OI_DHCI_READ_CLASS_OF_DEVICE_OPCODE";
        break;
      case 3108:
        result = "OI_DHCI_WRITE_CLASS_OF_DEVICE_OPCODE";
        break;
      case 3109:
        result = "OI_DHCI_READ_VOICE_SETTING_OPCODE";
        break;
      case 3110:
        result = "OI_DHCI_WRITE_VOICE_SETTING_OPCODE";
        break;
      case 3111:
        result = "OI_DHCI_READ_AUTO_FLUSH_TO_OPCODE";
        break;
      case 3112:
        result = "OI_DHCI_WRITE_AUTO_FLUSH_TO_OPCODE";
        break;
      case 3113:
        result = "OI_DHCI_READ_NUM_BC_RETRANS_OPCODE";
        break;
      case 3114:
        result = "OI_DHCI_WRITE_NUM_BC_RETRANS_OPCODE";
        break;
      case 3115:
        result = "OI_DHCI_READ_HOLD_MODE_ACT_OPCODE";
        break;
      case 3116:
        result = "OI_DHCI_WRITE_HOLD_MODE_ACT_OPCODE";
        break;
      case 3117:
        result = "OI_DHCI_READ_TX_POWER_LEVEL_OPCODE";
        break;
      case 3118:
        result = "OI_DHCI_READ_SCO_FLOW_CTL_ENA_OPCODE";
        break;
      case 3119:
        result = "OI_DHCI_WRITE_SCO_FLOW_CTL_ENA_OPCODE";
        break;
      case 3121:
        result = "OI_DHCI_SET_CNTR_TO_HOST_FLOW_OPCODE";
        break;
      case 3123:
        result = "OI_DHCI_HOST_BUFFER_SIZE_OPCODE";
        break;
      case 3125:
        result = "OI_DHCI_HOST_NUM_COMPLETED_PKTS_OPCODE";
        break;
      case 3126:
        result = "OI_DHCI_READ_LINK_SVISION_TO_OPCODE";
        break;
      case 3127:
        result = "OI_DHCI_WRITE_LINK_SVISION_TO_OPCODE";
        break;
      case 3128:
        result = "OI_DHCI_READ_NUM_SUPPORTED_IAC_OPCODE";
        break;
      case 3129:
        result = "OI_DHCI_READ_CURRENT_IAC_LAP_OPCODE";
        break;
      case 3130:
        result = "OI_DHCI_WRITE_CURRENT_IAC_LAP_OPCODE";
        break;
      case 3131:
        result = "OI_DHCI_READ_PAGESCAN_PRD_MODE_OPCODE";
        break;
      case 3132:
        result = "OI_DHCI_WRITE_PAGESCAN_PRD_MODE_OPCODE";
        break;
      case 3133:
        result = "OI_DHCI_READ_PAGESCAN_MODE_OPCODE";
        break;
      case 3134:
        result = "OI_DHCI_WRITE_PAGESCAN_MODE_OPCODE";
        break;
      case 3135:
        result = "OI_DHCI_SET_AFH_CHAN_CLASS_OPCODE";
        break;
      case 3138:
        result = "OI_DHCI_READ_INQUIRY_SCAN_TYPE_OPCODE";
        break;
      case 3139:
        result = "OI_DHCI_WRITE_INQUIRY_SCAN_TYPE_OPCODE";
        break;
      case 3140:
        result = "OI_DHCI_READ_INQUIRY_MODE_OPCODE";
        break;
      case 3141:
        result = "OI_DHCI_WRITE_INQUIRY_MODE_OPCODE";
        break;
      case 3142:
        result = "OI_DHCI_READ_PAGESCAN_TYPE_OPCODE";
        break;
      case 3143:
        result = "OI_DHCI_WRITE_PAGESCAN_TYPE_OPCODE";
        break;
      case 3144:
        result = "OI_DHCI_READ_AFH_CHAN_ASSESS_MODE_OPCODE";
        break;
      case 3145:
        result = "OI_DHCI_WRITE_AFH_CHAN_ASSESS_MODE_OPCODE";
        break;
      case 3153:
        result = "OI_DHCI_READ_EXT_INQ_RESP_OPCODE";
        break;
      case 3154:
        result = "OI_DHCI_WRITE_EXT_INQ_RESP_OPCODE";
        break;
      case 3155:
        result = "OI_DHCI_REFRESH_ENCRYPTION_KEY_OPCODE";
        break;
      case 3157:
        result = "OI_DHCI_READ_SIMPLE_PAIRING_MODE_OPCODE";
        break;
      case 3158:
        result = "OI_DHCI_WRITE_SIMPLE_PAIRING_MODE_OPCODE";
        break;
      case 3159:
        result = "OI_DHCI_READ_LOCAL_OOB_DATA_OPCODE";
        break;
      case 3160:
        result = "OI_DHCI_READ_INQ_RESP_TX_PWR_OPCODE";
        break;
      case 3161:
        result = "OI_DHCI_WRITE_INQ_RESP_TX_PWR_OPCODE";
        break;
      case 3162:
        result = "OI_DHCI_READ_DEF_ERR_DATA_REPORT_OPCODE";
        break;
      case 3163:
        result = "OI_DHCI_WRITE_DEF_ERR_DATA_REPORT_OPCODE";
        break;
      case 3167:
        result = "OI_DHCI_ENHANCED_FLUSH_OPCODE";
        break;
      case 3168:
        result = "OI_DHCI_SEND_KEY_PRESS_NOTIFY_OPCODE";
        break;
      case 3169:
        result = "OI_DHCI_CMD_ID_READ_LOGICAL_LINK_ACCEPT_TIMEOUT_OPCODE";
        break;
      case 3170:
        result = "OI_DHCI_CMD_ID_WRITE_LOGICAL_LINK_ACCEPT_TIMEOUT_OPCODE";
        break;
      case 3171:
        result = "OI_DHCI_CMD_ID_SET_EVENT_MASK_PAGE_2_OPCODE";
        break;
      case 3172:
        result = "OI_DHCI_CMD_ID_READ_LOCATION_DATA_OPCODE";
        break;
      case 3173:
        result = "OI_DHCI_CMD_ID_WRITE_LOCATION_DATA_OPCODE";
        break;
      case 3174:
        result = "OI_DHCI_CMD_ID_READ_FLOW_CONTROL_MODE_OPCODE";
        break;
      case 3175:
        result = "OI_DHCI_CMD_ID_WRITE_FLOW_CONTROL_MODE_OPCODE";
        break;
      case 3176:
        result = "OI_DHCI_CMD_ID_READ_ENHANCED_TX_POWER_LEVEL_OPCODE";
        break;
      case 3177:
        result = "OI_DHCI_CMD_ID_READ_BEST_EFFORT_FLUSH_TIMEOUT_OPCODE";
        break;
      case 3178:
        result = "OI_DHCI_CMD_ID_WRITE_BEST_EFFORT_FLUSH_TIMEOUT_OPCODE";
        break;
      case 3179:
        result = "OI_DHCI_CMD_ID_SHORT_RANGE_MODE_OPCODE";
        break;
      case 3180:
        result = "OI_DHCI_CMD_ID_READ_LE_HOST_SUPPORTED_OPCODE";
        break;
      case 3181:
        result = "OI_DHCI_CMD_ID_WRITE_LE_HOST_SUPPORTED_OPCODE";
        break;
      case 3182:
        result = "OI_DHCI_CMD_ID_MWS_SET_CHANNEL_PARAMETERS_OPCODE";
        break;
      case 3183:
        result = "OI_DHCI_CMD_ID_MWS_SET_EXTERNAL_FRAME_CONFIG_OPCODE";
        break;
      case 3184:
        result = "OI_DHCI_CMD_ID_MWS_SIGNALING_OPCODE";
        break;
      case 3185:
        result = "OI_DHCI_CMD_ID_MWS_SET_TRANSPORT_LAYER_OPCODE";
        break;
      case 3186:
        result = "OI_DHCI_CMD_ID_MWS_SET_SCAN_FREQ_TABLE_OPCODE";
        break;
      case 3193:
        result = "OI_DHCI_CMD_ID_READ_SECURE_CONNECTION_HOST_SUPPORT_OPCODE";
        break;
      case 3194:
        result = "OI_DHCI_CMD_ID_WRITE_SECURE_CONNECTION_HOST_SUPPORT_OPCODE";
        break;
      case 3195:
        result = "OI_DHCI_CMD_ID_READ_AUTHENTICATION_PAYLOAD_TIMEOUT_OPCODE";
        break;
      case 3196:
        result = "OI_DHCI_CMD_ID_WRITE_AUTHENTICATION_PAYLOAD_TIMEOUT_OPCODE";
        break;
      case 3204:
        result = "OI_DHCI_CMD_ID_SET_MIN_ENCRYPTION_KEY_SIZE_OPCODE";
        break;
      default:
        goto LABEL_251;
    }
  }
  return result;
}

uint64_t sub_1001D93DC()
{
  uint64_t result;
  unsigned int *v1;
  _DWORD *v2;

  if (DWORD2(xmmword_100999158))
    return 140;
  v1 = (unsigned int *)sub_100252DE8(6u);
  qword_100984C98 = (uint64_t)sub_100114588(0x10uLL);
  *(_QWORD *)qword_100984C98 = sub_100114588(504 * *v1);
  v2 = (_DWORD *)sub_100252DE8(6u);
  result = 0;
  *(_DWORD *)(qword_100984C98 + 8) = *v2;
  DWORD2(xmmword_100999158) = 1;
  return result;
}

uint64_t sub_1001D946C()
{
  unsigned int v0;
  unsigned __int8 v1;
  uint64_t v2;

  if (!DWORD2(xmmword_100999158))
    return 0;
  v0 = *(_DWORD *)(qword_100984C98 + 8);
  if (!v0)
    return 0;
  v1 = 0;
  v2 = *(_QWORD *)qword_100984C98;
  while (*(_DWORD *)(v2 + 504 * v1 + 12))
  {
    if (v0 <= ++v1)
      return 0;
  }
  ++*(_DWORD *)(qword_100984C98 + 12);
  return v2 + 504 * v1;
}

void sub_1001D94D4(uint64_t a1)
{
  void **v2;
  int v3;

  if (!DWORD2(xmmword_100999158))
    sub_100253460();
  *(_QWORD *)(a1 + 496) = 0;
  *(_OWORD *)(a1 + 464) = 0u;
  *(_OWORD *)(a1 + 480) = 0u;
  *(_OWORD *)(a1 + 432) = 0u;
  *(_OWORD *)(a1 + 448) = 0u;
  *(_OWORD *)(a1 + 400) = 0u;
  *(_OWORD *)(a1 + 416) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_DWORD *)(a1 + 12) = 0;
  v2 = (void **)qword_100984C98;
  v3 = *(_DWORD *)(qword_100984C98 + 12) - 1;
  *(_DWORD *)(qword_100984C98 + 12) = v3;
  if (!v3 && DWORD2(xmmword_100999158))
  {
    if (*v2)
    {
      sub_100053298(*v2);
      v2 = (void **)qword_100984C98;
      *(_QWORD *)qword_100984C98 = 0;
    }
    sub_100053298(v2);
    qword_100984C98 = 0;
    DWORD2(xmmword_100999158) = 0;
  }
}

uint64_t sub_1001D9594(_OWORD *a1, unsigned __int16 *a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  NSObject *v12;
  __int128 v14;

  if (DWORD2(xmmword_100999158) || (v11 = sub_1001D93DC(), !(_DWORD)v11))
  {
    if (a1)
    {
      v4 = sub_1001D946C();
      if (*(_DWORD *)(v4 + 12))
        sub_100253460();
      *(_DWORD *)(v4 + 8) = 0;
      *(_OWORD *)(v4 + 32) = *a1;
      v5 = a1[1];
      v6 = a1[2];
      v7 = a1[4];
      *(_OWORD *)(v4 + 80) = a1[3];
      *(_OWORD *)(v4 + 96) = v7;
      *(_OWORD *)(v4 + 48) = v5;
      *(_OWORD *)(v4 + 64) = v6;
      v8 = a1[5];
      v9 = a1[6];
      v10 = a1[8];
      *(_OWORD *)(v4 + 144) = a1[7];
      *(_OWORD *)(v4 + 160) = v10;
      *(_OWORD *)(v4 + 112) = v8;
      *(_OWORD *)(v4 + 128) = v9;
      v14 = unk_10091EBC0;
      v11 = sub_100259A4C((uint64_t)&v14, (uint64_t)off_10091EB98, 0, a2, (uint64_t)&unk_10073AF28, 0);
      if ((_DWORD)v11)
      {
        if (sub_10005549C())
        {
          sub_100054530("OI_OBEXSRV_RegisterL2capServer failed with status %!", v11);
          v12 = sub_1000544A0(6u);
          if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
            sub_1006CE7A4();
        }
        sub_1001D94D4(v4);
      }
      else
      {
        *(_DWORD *)(v4 + 12) = 1;
        *(_WORD *)(v4 + 22) = *a2;
      }
    }
    else
    {
      sub_100253460();
      return 101;
    }
  }
  return v11;
}

uint64_t sub_1001D96D4(int a1)
{
  unsigned int v1;
  unsigned __int8 v2;
  uint64_t v3;

  if (!DWORD2(xmmword_100999158))
    return 0;
  v1 = *(_DWORD *)(qword_100984C98 + 8);
  if (!v1)
    return 0;
  v2 = 0;
  v3 = *(_QWORD *)qword_100984C98;
  while (*(unsigned __int8 *)(v3 + 504 * v2 + 20) != a1)
  {
    if (v1 <= ++v2)
      return 0;
  }
  return v3 + 504 * v2;
}

uint64_t sub_1001D9734(int a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;

  if (!DWORD2(xmmword_100999158))
    return 408;
  v2 = sub_1001D97EC(a1);
  if (!v2)
    return 406;
  v3 = v2;
  v4 = sub_100259DC4(a1);
  if ((_DWORD)v4)
  {
    if (sub_10005549C())
    {
      sub_100054530("OI_BIPSRV_DeregisterAVRCPServer: %!", v4);
      v5 = sub_1000544A0(6u);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
  sub_1001D94D4(v3);
  return v4;
}

uint64_t sub_1001D97EC(int a1)
{
  unsigned int v1;
  unsigned __int8 v2;
  uint64_t v3;

  if (!DWORD2(xmmword_100999158))
    return 0;
  v1 = *(_DWORD *)(qword_100984C98 + 8);
  if (!v1)
    return 0;
  v2 = 0;
  v3 = *(_QWORD *)qword_100984C98;
  while (*(unsigned __int16 *)(v3 + 504 * v2 + 22) != a1)
  {
    if (v1 <= ++v2)
      return 0;
  }
  return v3 + 504 * v2;
}

uint64_t sub_1001D984C(int a1)
{
  uint64_t v1;

  if (!DWORD2(xmmword_100999158))
    return 408;
  v1 = sub_1001D9894(a1);
  if (*(_DWORD *)(v1 + 12) >= 2u)
    return sub_10011BAB0(*(unsigned __int16 *)(v1 + 30));
  else
    return 1709;
}

uint64_t sub_1001D9894(int a1)
{
  unsigned int v1;
  unsigned __int8 v2;
  uint64_t v3;

  if (!DWORD2(xmmword_100999158))
    return 0;
  v1 = *(_DWORD *)(qword_100984C98 + 8);
  if (!v1)
    return 0;
  v2 = 0;
  v3 = *(_QWORD *)qword_100984C98;
  while (*(unsigned __int16 *)(v3 + 504 * v2 + 30) != a1)
  {
    if (v1 <= ++v2)
      return 0;
  }
  return v3 + 504 * v2;
}

uint64_t sub_1001D98F4(unsigned int a1, int a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  NSObject *v10;

  v4 = sub_1001D9894(a1);
  if (v4)
  {
    v5 = v4;
    if (a2)
      v6 = 0;
    else
      v6 = 3390;
    v7 = sub_10011B27C(a1, a2, v6);
    if ((_DWORD)v7)
    {
      v8 = v7;
      if (sub_10005549C())
      {
        sub_100054530("OI_OBEXSRV_AcceptConnect failed %!", v8);
        v9 = sub_1000544A0(6u);
        if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
    }
    else
    {
      v8 = 0;
      if (a2)
        *(_DWORD *)(v5 + 12) = 2;
    }
  }
  else
  {
    if (sub_10005549C())
    {
      sub_100054530("No server registered on OBEX handle %d", a1);
      v10 = sub_1000544A0(6u);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 1709;
  }
  return v8;
}

uint64_t sub_1001D99F8(int a1, uint64_t a2)
{
  uint64_t v3;
  __int16 v4;

  v3 = sub_1001D9894(a1);
  v4 = *(_WORD *)(v3 + 28);
  *(_DWORD *)a2 = *(_DWORD *)(v3 + 24);
  *(_WORD *)(a2 + 4) = v4;
  return 0;
}

uint64_t sub_1001D9A2C(int a1, _OWORD *a2, _OWORD *a3, _DWORD *a4, _OWORD *a5, _OWORD *a6, int a7, int a8)
{
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  void *v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;

  if (!DWORD2(xmmword_100999158))
    return 408;
  v15 = sub_1001D9894(a1);
  v16 = v15;
  if (a8 && a8 != 1701)
  {
    *(_DWORD *)(v15 + 12) = 2;
    v19 = *(void **)(v15 + 232);
    if (v19)
    {
      sub_100053298(v19);
      *(_QWORD *)(v16 + 232) = 0;
    }
    v20 = *(unsigned __int16 *)(v16 + 30);
    v21 = 0;
    return sub_10011AD98(v20, v21, a8);
  }
  if (!*(_DWORD *)(v15 + 16))
  {
    if (a2)
    {
      *(_BYTE *)(v15 + 360) = 48;
      *(_OWORD *)(v15 + 368) = *a2;
      v17 = 1;
      if (!a3)
      {
LABEL_13:
        if (a4)
        {
          v23 = v15 + 24 * v17;
          *(_BYTE *)(v23 + 360) = -61;
          *(_DWORD *)(v23 + 368) = *a4;
          ++v17;
        }
        if (a5)
        {
          v24 = v15 + 24 * v17;
          *(_BYTE *)(v24 + 360) = 76;
          *(_OWORD *)(v24 + 368) = *a5;
          ++v17;
        }
        goto LABEL_17;
      }
    }
    else
    {
      v17 = 0;
      if (!a3)
        goto LABEL_13;
    }
    v22 = v15 + 24 * v17;
    *(_BYTE *)(v22 + 360) = 113;
    *(_OWORD *)(v22 + 368) = *a3;
    ++v17;
    goto LABEL_13;
  }
  v17 = 0;
LABEL_17:
  if (a6)
  {
    if (a7)
      v25 = 73;
    else
      v25 = 72;
    v26 = v15 + 24 * v17;
    *(_BYTE *)(v26 + 360) = v25;
    *(_OWORD *)(v26 + 368) = *a6;
    LOBYTE(v17) = v17 + 1;
  }
  v21 = v15 + 480;
  *(_QWORD *)(v15 + 480) = v15 + 360;
  *(_BYTE *)(v15 + 488) = v17;
  v20 = *(unsigned __int16 *)(v15 + 30);
  return sub_10011AD98(v20, v21, a8);
}

uint64_t sub_1001D9BB0(int a1, uint64_t a2, int a3)
{
  return sub_1001D9A2C(a1, 0, 0, 0, 0, *(_OWORD **)(a2 + 8), *(unsigned __int8 *)(a2 + 16), a3);
}

uint64_t sub_1001D9BD0(int a1, uint64_t a2, int a3)
{
  return sub_1001D9A2C(a1, 0, 0, (_DWORD *)(a2 + 16), 0, *(_OWORD **)(a2 + 24), *(unsigned __int8 *)(a2 + 32), a3);
}

uint64_t sub_1001D9BF0(uint64_t a1, int a2)
{
  NSObject *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t (*v9)(uint64_t);
  unsigned __int16 v10;
  unsigned __int8 v11;
  int v12;
  __int16 v13;
  int v14;

  v14 = 0;
  v13 = 0;
  v12 = 0;
  if (sub_10011BA60(a1, &v14))
    goto LABEL_2;
  if (v14 == 1)
  {
    v10 = 0;
    sub_100259DE8(a1, &v10);
    v6 = sub_1001D97EC(v10);
  }
  else
  {
    if (v14)
      goto LABEL_2;
    v11 = 0;
    sub_10016895C(a1, &v11);
    v6 = sub_1001D96D4(v11);
  }
  v7 = v6;
  if (v6)
  {
    result = sub_10011BA08(a1, (uint64_t)&v12);
    *(_DWORD *)(v7 + 24) = v12;
    *(_WORD *)(v7 + 28) = v13;
    *(_WORD *)(v7 + 30) = a1;
    v8 = *(_DWORD *)(v7 + 8);
    if (a2)
    {
      if (v8 > 2)
        return result;
      v9 = *(uint64_t (**)(uint64_t))(v7 + 48);
      if (!v9)
        return sub_10011B6DC(a1, 0, 0, 0, 0);
    }
    else
    {
      if (v8 > 2)
        return result;
      v9 = *(uint64_t (**)(uint64_t))(v7 + 32);
    }
    return v9(a1);
  }
LABEL_2:
  if ((sub_10005549C() & 1) != 0)
  {
    sub_100054530("Rejecting connection with status %!", 1709);
    v4 = sub_1000544A0(6u);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
  return sub_10011B27C(a1, 0, 1709);
}

void sub_1001D9D5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = sub_1001D9894(a1);
  v3 = v2;
  if (*(_DWORD *)(v2 + 8) <= 2u)
    (*(void (**)(uint64_t))(v2 + 40))(a1);
  v4 = *(void **)(v3 + 232);
  if (v4)
  {
    sub_100053298(v4);
    *(_QWORD *)(v3 + 232) = 0;
  }
  *(_QWORD *)(v3 + 240) = 0;
  *(_DWORD *)(v3 + 12) = 1;
  *(_WORD *)(v3 + 30) = 0;
}

uint64_t sub_1001D9DB8(int a1, uint64_t *a2, uint64_t a3)
{
  return sub_1001D9DD8(a1, a2, a3, &off_10091EBD0, 9);
}

uint64_t sub_1001D9DC8(int a1, uint64_t *a2, uint64_t a3)
{
  return sub_1001D9DD8(a1, a2, a3, &off_10091EC60, 8);
}

uint64_t sub_1001D9DD8(int a1, uint64_t *a2, uint64_t a3, _UNKNOWN **a4, int a5)
{
  uint64_t v5;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  _BOOL4 v15;
  const void **v16;
  size_t v17;
  NSObject *v18;
  void *v19;
  int v20;
  void *v21;
  NSObject *v22;
  int v24;
  int v25;
  _QWORD *v26;
  void *v27;
  NSObject *v28;
  NSObject *v29;

  LODWORD(v5) = a5;
  v9 = sub_1001D9894(a1);
  v10 = *(_DWORD *)(v9 + 12);
  if (v10 <= 1)
  {
    sub_100253460();
    return 408;
  }
  v12 = v9;
  if (!(_DWORD)a3 || (_DWORD)a3 == 1752 || (_DWORD)a3 == 1701)
  {
    v13 = v10 == 2;
    if (a2)
    {
      v15 = (_DWORD)a3 != 1701 && a4 == &off_10091EC60;
LABEL_15:
      sub_1000FFE1C((int *)(v12 + 248), a2);
      if (v10 != 2)
      {
        if (*(_DWORD *)(v12 + 12) != 3)
          sub_100253460();
        v20 = 1;
        goto LABEL_38;
      }
      v16 = *(const void ***)(v12 + 256);
      if (v16)
      {
        *(_QWORD *)(v12 + 240) = 0;
        if ((_DWORD)v5)
        {
          v17 = *(unsigned __int16 *)v16;
          v5 = v5;
          while ((_DWORD)v17 != *(unsigned __int16 *)*a4 || memcmp(v16[1], *((const void **)*a4 + 1), v17))
          {
            a4 += 2;
            if (!--v5)
              goto LABEL_22;
          }
          *(_QWORD *)(v12 + 240) = a4;
          if (*((_DWORD *)a4 + 2) == 2)
          {
            if (v15 && !*(_QWORD *)(v12 + 304))
              a4 = &off_10091EC80;
            else
              a4 = &off_10091EC70;
            *(_QWORD *)(v12 + 240) = a4;
          }
          v24 = *((_DWORD *)a4 + 2);
          v25 = *(_DWORD *)(v12 + 8);
          if (v25 != 2)
          {
            if (v25 == 1)
            {
              switch(v24)
              {
                case 1:
                  goto LABEL_61;
                case 4:
                  goto LABEL_62;
                case 8:
                case 14:
                  goto LABEL_59;
                case 9:
                  goto LABEL_63;
                case 10:
                  goto LABEL_64;
                case 11:
                  goto LABEL_65;
                case 12:
                  goto LABEL_66;
                default:
                  goto LABEL_72;
              }
            }
            if (!v25)
            {
              switch(v24)
              {
                case 1:
                  goto LABEL_61;
                case 3:
                case 14:
                  goto LABEL_59;
                case 4:
                  v26 = (_QWORD *)(v12 + 136);
                  goto LABEL_67;
                case 5:
                  goto LABEL_63;
                case 6:
                  goto LABEL_64;
                case 7:
                  goto LABEL_65;
                case 8:
                  goto LABEL_66;
                case 9:
                  goto LABEL_62;
                case 10:
                  v26 = (_QWORD *)(v12 + 112);
                  goto LABEL_67;
                case 11:
                  v26 = (_QWORD *)(v12 + 120);
                  goto LABEL_67;
                case 12:
                  v26 = (_QWORD *)(v12 + 128);
                  goto LABEL_67;
                case 13:
                  v26 = (_QWORD *)(v12 + 144);
                  goto LABEL_67;
                case 15:
                  v26 = (_QWORD *)(v12 + 152);
                  goto LABEL_67;
                case 16:
                  v26 = (_QWORD *)(v12 + 168);
                  goto LABEL_67;
                case 17:
                  v26 = (_QWORD *)(v12 + 160);
                  goto LABEL_67;
                default:
                  break;
              }
            }
LABEL_72:
            if (sub_10005549C())
            {
              sub_100054530("Unimplemented command requested");
              v28 = sub_1000544A0(6u);
              if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
                sub_1006CE7A4();
            }
            return 1717;
          }
          switch(v24)
          {
            case 1:
LABEL_61:
              v26 = (_QWORD *)(v12 + 56);
              break;
            case 4:
LABEL_62:
              v26 = (_QWORD *)(v12 + 104);
              break;
            case 8:
LABEL_59:
              v26 = (_QWORD *)(v12 + 64);
              break;
            case 9:
LABEL_63:
              v26 = (_QWORD *)(v12 + 72);
              break;
            case 10:
LABEL_64:
              v26 = (_QWORD *)(v12 + 80);
              break;
            case 11:
LABEL_65:
              v26 = (_QWORD *)(v12 + 88);
              break;
            case 12:
LABEL_66:
              v26 = (_QWORD *)(v12 + 96);
              break;
            default:
              goto LABEL_72;
          }
LABEL_67:
          if (!*v26)
            goto LABEL_72;
          if ((*((unsigned __int16 *)a4 + 6) & ~*(_DWORD *)(v12 + 248)) != 0)
          {
            if (sub_10005549C())
            {
              sub_100054530("Incomplete request");
              v29 = sub_1000544A0(6u);
              if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
                sub_1006CE7A4();
            }
            return 1741;
          }
          if (*(_QWORD *)(v12 + 232))
            sub_100253460();
          v27 = sub_100114588(0x30uLL);
          v20 = 0;
          *(_QWORD *)(v12 + 232) = v27;
          *(_DWORD *)(v12 + 12) = 3;
LABEL_38:
          *(_DWORD *)(v12 + 16) = v20;
          v11 = sub_1001DA214(v12, a3);
          if ((_DWORD)v11)
          {
            v21 = *(void **)(v12 + 232);
            if (v21)
            {
              sub_100053298(v21);
              *(_QWORD *)(v12 + 232) = 0;
            }
            *(_DWORD *)(v12 + 12) = 2;
          }
          return v11;
        }
LABEL_22:
        if (!sub_10005549C())
          return 1721;
        sub_100054530("Unknown request type");
        v18 = sub_1000544A0(6u);
        if (!os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
          return 1721;
      }
      else
      {
        if (!sub_10005549C())
          return 1721;
        sub_100054530("Type header missing in request");
        v22 = sub_1000544A0(6u);
        if (!os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
          return 1721;
      }
      sub_1006CE7A4();
      return 1721;
    }
  }
  else
  {
    v13 = v10 == 2;
    if (a2)
    {
      v15 = a4 == &off_10091EC60;
      sub_100253460();
      goto LABEL_15;
    }
  }
  if ((_DWORD)a3 == 1701)
    v11 = 0;
  else
    v11 = a3;
  if ((_DWORD)a3 != 1701 && !v13)
  {
    *(_DWORD *)(v9 + 16) = 2;
    if (*(_QWORD *)(v9 + 240))
    {
      *(_DWORD *)(v9 + 12) = 3;
      sub_1001DA214(v9, a3);
    }
    *(_DWORD *)(v12 + 12) = 2;
    v19 = *(void **)(v12 + 232);
    if (v19)
    {
      sub_100053298(v19);
      *(_QWORD *)(v12 + 232) = 0;
    }
    return a3;
  }
  return v11;
}

uint64_t sub_1001DA214(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int8x16_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t (*v21)(_QWORD, _QWORD, uint64_t, uint64_t);
  int v22;
  uint64_t (*v23)(_QWORD, _QWORD, uint64_t, uint64_t);
  int v24;
  uint64_t (*v25)(_QWORD, _QWORD, uint64_t, uint64_t);
  int v26;
  _QWORD *v27;
  uint64_t v28;
  int v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t, uint64_t);
  int v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  int v37;
  NSObject *v38;
  int v39;
  int v40;
  uint64_t (*v41)(_QWORD, _QWORD, _QWORD, uint64_t);
  int v42;
  int v43;
  uint64_t (*v44)(_QWORD, uint64_t);
  int v45;
  int v46;
  int v47;
  NSObject *v48;
  NSObject *v49;
  NSObject *v50;
  NSObject *v51;
  NSObject *v52;
  NSObject *v53;
  NSObject *v54;
  NSObject *v55;
  NSObject *v56;
  NSObject *v57;
  NSObject *v58;
  NSObject *v59;
  NSObject *v60;
  uint64_t v61;
  __int128 v62;
  NSObject *v63;
  NSObject *v64;
  _QWORD *v65;
  NSObject *v66;
  NSObject *v67;
  NSObject *v68;
  NSObject *v69;
  NSObject *v70;
  NSObject *v71;
  NSObject *v72;
  NSObject *v73;
  _QWORD *v74;

  if (!a1)
    sub_100253460();
  if (*(_DWORD *)(a1 + 12) != 3)
    sub_100253460();
  result = 1743;
  switch(*(_DWORD *)(*(_QWORD *)(a1 + 240) + 8))
  {
    case 1:
      if (*(_DWORD *)(a1 + 8) > 2u)
        return 408;
      v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 56);
      if (!v5)
      {
        sub_100253460();
        v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 56);
      }
      v6 = *(unsigned __int16 *)(a1 + 30);
      v7 = *(_QWORD *)(a1 + 232);
      v8 = *(unsigned int *)(a1 + 16);
      goto LABEL_163;
    case 3:
      v9 = *(unsigned int *)(a1 + 16);
      if ((_DWORD)v9)
      {
        if ((_DWORD)v9 == 2)
          goto LABEL_131;
        if ((_DWORD)v9 != 1)
          goto LABEL_136;
        v10 = *(_QWORD *)(a1 + 232);
      }
      else
      {
        v10 = *(_QWORD *)(a1 + 232);
        *(_OWORD *)v10 = *(_OWORD *)(a1 + 264);
      }
      *(_QWORD *)(v10 + 16) = *(_QWORD *)(a1 + 304);
      *(_BYTE *)(v10 + 24) = *(_BYTE *)(a1 + 312);
LABEL_131:
      v45 = *(_DWORD *)(a1 + 8);
      if (v45 == 2)
      {
        if (!sub_10005549C())
          goto LABEL_233;
        sub_100054530("ARCHIVED_OBJECTS server type does not support PUT_IMAGE command.\n");
        v68 = sub_1000544A0(6u);
        if (!os_log_type_enabled(v68, OS_LOG_TYPE_ERROR))
          goto LABEL_233;
      }
      else
      {
        if (v45 != 1)
        {
          if (v45)
            goto LABEL_136;
          v25 = *(uint64_t (**)(_QWORD, _QWORD, uint64_t, uint64_t))(a1 + 64);
          if (!v25)
          {
            sub_100253460();
            v25 = *(uint64_t (**)(_QWORD, _QWORD, uint64_t, uint64_t))(a1 + 64);
            goto LABEL_186;
          }
          goto LABEL_187;
        }
        if (!sub_10005549C())
          goto LABEL_233;
        sub_100054530("REFERENCED_OBJECTS server type does not support PUT_IMAGE command.\n");
        v69 = sub_1000544A0(6u);
        if (!os_log_type_enabled(v69, OS_LOG_TYPE_ERROR))
          goto LABEL_233;
      }
      goto LABEL_232;
    case 4:
      v8 = *(unsigned int *)(a1 + 16);
      if ((v8 - 1) < 2)
        goto LABEL_17;
      if ((_DWORD)v8)
        return 408;
      **(_QWORD **)(a1 + 232) = *(_QWORD *)(a1 + 280);
LABEL_17:
      v11 = *(_DWORD *)(a1 + 8);
      if (v11 == 2)
      {
        v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 104);
        if (v5)
          goto LABEL_162;
        sub_100253460();
        v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 104);
LABEL_161:
        v8 = *(unsigned int *)(a1 + 16);
LABEL_162:
        v6 = *(unsigned __int16 *)(a1 + 30);
        v7 = *(_QWORD *)(a1 + 232);
LABEL_163:
        LODWORD(result) = v5(v6, v7, v8, a2);
        goto LABEL_253;
      }
      if (v11 != 1)
      {
        if (v11)
          return 408;
        v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 136);
        if (v5)
          goto LABEL_162;
        sub_100253460();
        v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 136);
        goto LABEL_161;
      }
      if (!sub_10005549C())
        return 1743;
      sub_100054530("REFERENCED_OBJECTS server type does not support DELETE_IMAGE command.\n");
      v50 = sub_1000544A0(6u);
      if (!os_log_type_enabled(v50, OS_LOG_TYPE_ERROR))
        return 1743;
LABEL_166:
      sub_1006CE7A4();
      return 1743;
    case 5:
      v12 = *(unsigned int *)(a1 + 16);
      if ((_DWORD)v12)
      {
        if ((_DWORD)v12 == 2)
          goto LABEL_139;
        if ((_DWORD)v12 != 1)
          goto LABEL_144;
        v13 = *(int8x16_t **)(a1 + 232);
      }
      else
      {
        v13 = *(int8x16_t **)(a1 + 232);
        *v13 = vextq_s8(*(int8x16_t *)(a1 + 272), *(int8x16_t *)(a1 + 272), 8uLL);
      }
      v13[1].i64[0] = *(_QWORD *)(a1 + 304);
      v13[1].i8[8] = *(_BYTE *)(a1 + 312);
LABEL_139:
      v46 = *(_DWORD *)(a1 + 8);
      if (v46 == 2)
      {
        if (!sub_10005549C())
          goto LABEL_241;
        sub_100054530("ARCHIVED_OBJECTS server type does not support PUT_LINKED_ATTACHEMENT command.\n");
        v70 = sub_1000544A0(6u);
        if (!os_log_type_enabled(v70, OS_LOG_TYPE_ERROR))
          goto LABEL_241;
      }
      else
      {
        if (v46 != 1)
        {
          if (v46)
            goto LABEL_144;
          v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 72);
          if (!v30)
          {
            sub_100253460();
            v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 72);
            goto LABEL_196;
          }
          goto LABEL_197;
        }
        if (!sub_10005549C())
          goto LABEL_241;
        sub_100054530("REFERENCED_OBJECTS server type does not support PUT_LINKED_ATTACHEMENT command.\n");
        v71 = sub_1000544A0(6u);
        if (!os_log_type_enabled(v71, OS_LOG_TYPE_ERROR))
          goto LABEL_241;
      }
      goto LABEL_240;
    case 6:
      v14 = *(unsigned int *)(a1 + 16);
      if ((_DWORD)v14)
      {
        if ((_DWORD)v14 == 2)
          goto LABEL_147;
        if ((_DWORD)v14 != 1)
          goto LABEL_152;
        v15 = *(_QWORD *)(a1 + 232);
      }
      else
      {
        v15 = *(_QWORD *)(a1 + 232);
        *(_QWORD *)v15 = *(_QWORD *)(a1 + 280);
      }
      *(_QWORD *)(v15 + 8) = *(_QWORD *)(a1 + 304);
      *(_BYTE *)(v15 + 16) = *(_BYTE *)(a1 + 312);
LABEL_147:
      v47 = *(_DWORD *)(a1 + 8);
      if (v47 == 2)
      {
        if (!sub_10005549C())
          goto LABEL_251;
        sub_100054530("ARCHIVED_OBJECTS server type does not support PUT_LINKED_THUMBNAIL command.\n");
        v72 = sub_1000544A0(6u);
        if (!os_log_type_enabled(v72, OS_LOG_TYPE_ERROR))
          goto LABEL_251;
      }
      else
      {
        if (v47 != 1)
        {
          if (v47)
            goto LABEL_152;
          v23 = *(uint64_t (**)(_QWORD, _QWORD, uint64_t, uint64_t))(a1 + 80);
          if (!v23)
          {
            sub_100253460();
            v23 = *(uint64_t (**)(_QWORD, _QWORD, uint64_t, uint64_t))(a1 + 80);
            goto LABEL_179;
          }
          goto LABEL_180;
        }
        if (!sub_10005549C())
          goto LABEL_251;
        sub_100054530("REFERENCED_OBJECTS server type does not support PUT_LINKED_THUMBNAIL command.\n");
        v73 = sub_1000544A0(6u);
        if (!os_log_type_enabled(v73, OS_LOG_TYPE_ERROR))
          goto LABEL_251;
      }
      goto LABEL_250;
    case 7:
      v14 = *(unsigned int *)(a1 + 16);
      if ((v14 - 1) < 2)
        goto LABEL_33;
      if ((_DWORD)v14)
        goto LABEL_152;
      v16 = *(_QWORD *)(a1 + 232);
      *(_QWORD *)v16 = *(_QWORD *)(a1 + 280);
      *(_BYTE *)(v16 + 8) = *(_BYTE *)(a1 + 333);
LABEL_33:
      v17 = *(_DWORD *)(a1 + 8);
      if (v17 == 2)
      {
        if (!sub_10005549C())
          goto LABEL_251;
        sub_100054530("ARCHIVED_OBJECTS server type does not support REMOTE_DISPLAY command.\n");
        v51 = sub_1000544A0(6u);
        if (!os_log_type_enabled(v51, OS_LOG_TYPE_ERROR))
          goto LABEL_251;
      }
      else
      {
        if (v17 != 1)
        {
          if (v17)
            goto LABEL_152;
LABEL_123:
          v23 = *(uint64_t (**)(_QWORD, _QWORD, uint64_t, uint64_t))(a1 + 88);
          if (!v23)
          {
            sub_100253460();
            v23 = *(uint64_t (**)(_QWORD, _QWORD, uint64_t, uint64_t))(a1 + 88);
            goto LABEL_179;
          }
          goto LABEL_180;
        }
        if (!sub_10005549C())
          goto LABEL_251;
        sub_100054530("REFERENCED_OBJECTS server type does not support REMOTE_DISPLAY command.\n");
        v52 = sub_1000544A0(6u);
        if (!os_log_type_enabled(v52, OS_LOG_TYPE_ERROR))
          goto LABEL_251;
      }
      goto LABEL_250;
    case 8:
      v18 = *(unsigned int *)(a1 + 16);
      if ((v18 - 1) < 2)
        goto LABEL_40;
      if ((_DWORD)v18)
        goto LABEL_121;
      v19 = *(_QWORD *)(a1 + 232);
      *(_DWORD *)v19 = *(_DWORD *)(a1 + 314);
      *(_BYTE *)(v19 + 4) = *(_BYTE *)(a1 + 318);
      *(_QWORD *)(v19 + 8) = *(_QWORD *)(a1 + 272);
LABEL_40:
      v20 = *(_DWORD *)(a1 + 8);
      if (v20 == 2)
        goto LABEL_125;
      if (v20 != 1)
      {
        if (v20)
          goto LABEL_121;
        v21 = *(uint64_t (**)(_QWORD, _QWORD, uint64_t, uint64_t))(a1 + 96);
        if (!v21)
        {
          sub_100253460();
          v21 = *(uint64_t (**)(_QWORD, _QWORD, uint64_t, uint64_t))(a1 + 96);
          goto LABEL_127;
        }
        goto LABEL_128;
      }
      if (!sub_10005549C())
        goto LABEL_211;
      sub_100054530("REFERENCED_OBJECTS server type does not support GET_IMAGES_LIST command.\n");
      v53 = sub_1000544A0(6u);
      if (!os_log_type_enabled(v53, OS_LOG_TYPE_ERROR))
        goto LABEL_211;
      goto LABEL_210;
    case 9:
      v14 = *(unsigned int *)(a1 + 16);
      if ((v14 - 1) < 2)
        goto LABEL_48;
      if ((_DWORD)v14)
        goto LABEL_152;
      **(_QWORD **)(a1 + 232) = *(_QWORD *)(a1 + 280);
LABEL_48:
      v22 = *(_DWORD *)(a1 + 8);
      if (v22 == 2)
      {
        v23 = *(uint64_t (**)(_QWORD, _QWORD, uint64_t, uint64_t))(a1 + 72);
        if (v23)
          goto LABEL_180;
        sub_100253460();
        v23 = *(uint64_t (**)(_QWORD, _QWORD, uint64_t, uint64_t))(a1 + 72);
        goto LABEL_179;
      }
      if (v22 != 1)
      {
        if (v22)
          goto LABEL_152;
        v23 = *(uint64_t (**)(_QWORD, _QWORD, uint64_t, uint64_t))(a1 + 104);
        if (!v23)
        {
          sub_100253460();
          v23 = *(uint64_t (**)(_QWORD, _QWORD, uint64_t, uint64_t))(a1 + 104);
          goto LABEL_179;
        }
        goto LABEL_180;
      }
      if (!sub_10005549C())
        goto LABEL_251;
      sub_100054530("REFERENCED_OBJECTS server type does not support GET_IMAGE_PROPERTIES command.\n");
      v54 = sub_1000544A0(6u);
      if (!os_log_type_enabled(v54, OS_LOG_TYPE_ERROR))
        goto LABEL_251;
      goto LABEL_250;
    case 0xA:
      v9 = *(unsigned int *)(a1 + 16);
      if ((v9 - 1) < 2)
        goto LABEL_56;
      if ((_DWORD)v9)
        goto LABEL_136;
      *(int8x16_t *)*(_QWORD *)(a1 + 232) = vextq_s8(*(int8x16_t *)(a1 + 272), *(int8x16_t *)(a1 + 272), 8uLL);
LABEL_56:
      v24 = *(_DWORD *)(a1 + 8);
      if (v24 == 2)
      {
        v25 = *(uint64_t (**)(_QWORD, _QWORD, uint64_t, uint64_t))(a1 + 80);
        if (v25)
        {
LABEL_187:
          LODWORD(result) = v25(*(unsigned __int16 *)(a1 + 30), *(_QWORD *)(a1 + 232), v9, a2);
          goto LABEL_234;
        }
        sub_100253460();
        v25 = *(uint64_t (**)(_QWORD, _QWORD, uint64_t, uint64_t))(a1 + 80);
LABEL_186:
        v9 = *(unsigned int *)(a1 + 16);
        goto LABEL_187;
      }
      if (v24 != 1)
      {
        if (v24)
        {
LABEL_136:
          LODWORD(result) = 408;
          goto LABEL_234;
        }
        v25 = *(uint64_t (**)(_QWORD, _QWORD, uint64_t, uint64_t))(a1 + 112);
        if (v25)
          goto LABEL_187;
        sub_100253460();
        v25 = *(uint64_t (**)(_QWORD, _QWORD, uint64_t, uint64_t))(a1 + 112);
        goto LABEL_186;
      }
      if (sub_10005549C())
      {
        sub_100054530("REFERENCED_OBJECTS server type does not support GET_IMAGE command.\n");
        v55 = sub_1000544A0(6u);
        if (os_log_type_enabled(v55, OS_LOG_TYPE_ERROR))
LABEL_232:
          sub_1006CE7A4();
      }
LABEL_233:
      LODWORD(result) = 1743;
LABEL_234:
      v61 = *(_QWORD *)(a1 + 232);
      *(_QWORD *)(v61 + 32) = 0;
      goto LABEL_243;
    case 0xB:
      v14 = *(unsigned int *)(a1 + 16);
      if ((v14 - 1) < 2)
        goto LABEL_64;
      if ((_DWORD)v14)
        goto LABEL_152;
      **(_QWORD **)(a1 + 232) = *(_QWORD *)(a1 + 280);
LABEL_64:
      v26 = *(_DWORD *)(a1 + 8);
      if (v26 == 2)
        goto LABEL_123;
      if (v26 == 1)
      {
        if (sub_10005549C())
        {
          sub_100054530("REFERENCED_OBJECTS server type does not support GET_LINKED_THUMBNAIL command.\n");
          v56 = sub_1000544A0(6u);
          if (os_log_type_enabled(v56, OS_LOG_TYPE_ERROR))
LABEL_250:
            sub_1006CE7A4();
        }
LABEL_251:
        LODWORD(result) = 1743;
      }
      else if (v26)
      {
LABEL_152:
        LODWORD(result) = 408;
      }
      else
      {
        v23 = *(uint64_t (**)(_QWORD, _QWORD, uint64_t, uint64_t))(a1 + 120);
        if (!v23)
        {
          sub_100253460();
          v23 = *(uint64_t (**)(_QWORD, _QWORD, uint64_t, uint64_t))(a1 + 120);
LABEL_179:
          v14 = *(unsigned int *)(a1 + 16);
        }
LABEL_180:
        LODWORD(result) = v23(*(unsigned __int16 *)(a1 + 30), *(_QWORD *)(a1 + 232), v14, a2);
      }
      v74 = *(_QWORD **)(a1 + 232);
      *v74 = 0;
      v74[1] = 0;
      v74[2] = 0;
      goto LABEL_253;
    case 0xC:
      v12 = *(unsigned int *)(a1 + 16);
      if ((v12 - 1) < 2)
        goto LABEL_72;
      if ((_DWORD)v12)
        goto LABEL_144;
      v27 = *(_QWORD **)(a1 + 232);
      v28 = *(_QWORD *)(a1 + 264);
      *v27 = *(_QWORD *)(a1 + 280);
      v27[1] = v28;
LABEL_72:
      v29 = *(_DWORD *)(a1 + 8);
      if (v29 == 2)
      {
        v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 96);
        if (v30)
          goto LABEL_197;
        sub_100253460();
        v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 96);
        goto LABEL_196;
      }
      if (v29 != 1)
      {
        if (v29)
          goto LABEL_144;
        v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 128);
        if (!v30)
        {
          sub_100253460();
          v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 128);
          goto LABEL_196;
        }
        goto LABEL_197;
      }
      if (!sub_10005549C())
        goto LABEL_241;
      sub_100054530("REFERENCED_OBJECTS server type does not support LINKED_ATTACHMENT command.\n");
      v57 = sub_1000544A0(6u);
      if (!os_log_type_enabled(v57, OS_LOG_TYPE_ERROR))
        goto LABEL_241;
      goto LABEL_240;
    case 0xD:
      v31 = *(_DWORD *)(a1 + 16);
      if (v31 == 2)
        goto LABEL_82;
      if (v31 == 1)
        goto LABEL_81;
      if (v31)
        goto LABEL_144;
      *(_OWORD *)*(_QWORD *)(a1 + 232) = *(_OWORD *)(a1 + 336);
LABEL_81:
      v32 = *(_QWORD *)(a1 + 232);
      *(_QWORD *)(v32 + 16) = *(_QWORD *)(a1 + 304);
      *(_BYTE *)(v32 + 24) = *(_BYTE *)(a1 + 312);
LABEL_82:
      v33 = *(_DWORD *)(a1 + 8);
      if (v33 == 2)
      {
        if (!sub_10005549C())
          goto LABEL_241;
        sub_100054530("ARCHIVED_OBJECTS server type does not support START_PRINT command.\n");
        v58 = sub_1000544A0(6u);
        if (!os_log_type_enabled(v58, OS_LOG_TYPE_ERROR))
          goto LABEL_241;
      }
      else
      {
        if (v33 != 1)
        {
          if (v33)
            goto LABEL_144;
          v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 144);
          if (!v30)
          {
            sub_100253460();
            v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 144);
          }
          v34 = *(unsigned __int16 *)(a1 + 30);
          v35 = *(_QWORD *)(a1 + 232);
          v12 = *(unsigned int *)(a1 + 16);
          goto LABEL_198;
        }
        if (!sub_10005549C())
          goto LABEL_241;
        sub_100054530("REFERENCED_OBJECTS server type does not support START_PRINT command.\n");
        v59 = sub_1000544A0(6u);
        if (!os_log_type_enabled(v59, OS_LOG_TYPE_ERROR))
          goto LABEL_241;
      }
      goto LABEL_240;
    case 0xE:
      v18 = *(unsigned int *)(a1 + 16);
      if ((v18 - 1) < 2)
        goto LABEL_91;
      if ((_DWORD)v18)
        goto LABEL_121;
      v36 = *(_QWORD **)(a1 + 232);
      *v36 = *(_QWORD *)(a1 + 264);
      v36[1] = *(_QWORD *)(a1 + 320);
LABEL_91:
      v37 = *(_DWORD *)(a1 + 8);
      if (v37 == 2)
      {
        if (!sub_10005549C())
          goto LABEL_211;
        sub_100054530("ARCHIVED_OBJECTS server type does not support GET_PARTIAL_IMAGE command.\n");
        v60 = sub_1000544A0(6u);
        if (!os_log_type_enabled(v60, OS_LOG_TYPE_ERROR))
          goto LABEL_211;
        goto LABEL_210;
      }
      if (v37 != 1)
      {
        if (v37)
        {
LABEL_121:
          LODWORD(result) = 408;
          goto LABEL_212;
        }
        if (!sub_10005549C())
          goto LABEL_211;
        sub_100054530("IMAGE_REPONDER server type does not support GET_PARTIAL_IMAGE command.\n");
        v38 = sub_1000544A0(6u);
        if (!os_log_type_enabled(v38, OS_LOG_TYPE_ERROR))
          goto LABEL_211;
LABEL_210:
        sub_1006CE7A4();
LABEL_211:
        LODWORD(result) = 1743;
        goto LABEL_212;
      }
LABEL_125:
      v21 = *(uint64_t (**)(_QWORD, _QWORD, uint64_t, uint64_t))(a1 + 64);
      if (!v21)
      {
        sub_100253460();
        v21 = *(uint64_t (**)(_QWORD, _QWORD, uint64_t, uint64_t))(a1 + 64);
LABEL_127:
        v18 = *(unsigned int *)(a1 + 16);
      }
LABEL_128:
      LODWORD(result) = v21(*(unsigned __int16 *)(a1 + 30), *(_QWORD *)(a1 + 232), v18, a2);
LABEL_212:
      v61 = *(_QWORD *)(a1 + 232);
      v62 = 0uLL;
      *(_OWORD *)(v61 + 32) = 0u;
      goto LABEL_244;
    case 0xF:
      v39 = *(_DWORD *)(a1 + 16);
      if ((v39 - 1) < 2)
        goto LABEL_100;
      if (v39)
        goto LABEL_122;
      *(_OWORD *)*(_QWORD *)(a1 + 232) = *(_OWORD *)(a1 + 336);
LABEL_100:
      v40 = *(_DWORD *)(a1 + 8);
      if (v40 == 2)
      {
        if (!sub_10005549C())
          goto LABEL_219;
        sub_100054530("ARCHIVED_OBJECTS server type does not support START_ARCHIVE command.\n");
        v63 = sub_1000544A0(6u);
        if (!os_log_type_enabled(v63, OS_LOG_TYPE_ERROR))
          goto LABEL_219;
      }
      else
      {
        if (v40 != 1)
        {
          if (v40)
          {
LABEL_122:
            LODWORD(result) = 408;
          }
          else
          {
            v41 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD, uint64_t))(a1 + 152);
            if (!v41)
            {
              sub_100253460();
              v41 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD, uint64_t))(a1 + 152);
            }
            LODWORD(result) = v41(*(unsigned __int16 *)(a1 + 30), *(_QWORD *)(a1 + 232), *(unsigned int *)(a1 + 16), a2);
          }
LABEL_220:
          v65 = *(_QWORD **)(a1 + 232);
          *v65 = 0;
          v65[1] = 0;
          goto LABEL_253;
        }
        if (!sub_10005549C()
          || (sub_100054530("REFERENCED_OBJECTS server type does not support START_ARCHIVE command.\n"),
              v64 = sub_1000544A0(6u),
              !os_log_type_enabled(v64, OS_LOG_TYPE_ERROR)))
        {
LABEL_219:
          LODWORD(result) = 1743;
          goto LABEL_220;
        }
      }
      sub_1006CE7A4();
      goto LABEL_219;
    case 0x10:
      v12 = *(unsigned int *)(a1 + 16);
      if ((v12 - 1) < 2)
        goto LABEL_109;
      if ((_DWORD)v12)
        goto LABEL_144;
      **(_BYTE **)(a1 + 232) = *(_BYTE *)(a1 + 352) != 0;
LABEL_109:
      v42 = *(_DWORD *)(a1 + 8);
      if (v42 == 2)
      {
        if (!sub_10005549C())
          goto LABEL_241;
        sub_100054530("ARCHIVED_OBJECTS server type does not support GET_MONITORING_IMAGE command.\n");
        v66 = sub_1000544A0(6u);
        if (!os_log_type_enabled(v66, OS_LOG_TYPE_ERROR))
          goto LABEL_241;
LABEL_240:
        sub_1006CE7A4();
LABEL_241:
        LODWORD(result) = 1743;
        goto LABEL_242;
      }
      if (v42 == 1)
      {
        if (!sub_10005549C())
          goto LABEL_241;
        sub_100054530("REFERENCED_OBJECTS server type does not support GET_MONITORING_IMAGE command.\n");
        v67 = sub_1000544A0(6u);
        if (!os_log_type_enabled(v67, OS_LOG_TYPE_ERROR))
          goto LABEL_241;
        goto LABEL_240;
      }
      if (v42)
      {
LABEL_144:
        LODWORD(result) = 408;
      }
      else
      {
        v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 168);
        if (!v30)
        {
          sub_100253460();
          v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 168);
LABEL_196:
          v12 = *(unsigned int *)(a1 + 16);
        }
LABEL_197:
        v34 = *(unsigned __int16 *)(a1 + 30);
        v35 = *(_QWORD *)(a1 + 232);
LABEL_198:
        LODWORD(result) = v30(v34, v35, v12, a2);
      }
LABEL_242:
      v61 = *(_QWORD *)(a1 + 232);
LABEL_243:
      v62 = 0uLL;
LABEL_244:
      *(_OWORD *)v61 = v62;
      *(_OWORD *)(v61 + 16) = v62;
LABEL_253:
      if ((_DWORD)result == 1701)
        return 0;
      else
        return result;
    case 0x11:
      v43 = *(_DWORD *)(a1 + 8);
      if (v43 == 2)
      {
        if (!sub_10005549C())
          return 1743;
        sub_100054530("ARCHIVED_OBJECTS server type does not support GET_STATUS command.\n");
        v48 = sub_1000544A0(6u);
        if (!os_log_type_enabled(v48, OS_LOG_TYPE_ERROR))
          return 1743;
      }
      else
      {
        if (v43 != 1)
        {
          if (v43)
            return 408;
          v44 = *(uint64_t (**)(_QWORD, uint64_t))(a1 + 160);
          if (!v44)
          {
            sub_100253460();
            v44 = *(uint64_t (**)(_QWORD, uint64_t))(a1 + 160);
          }
          LODWORD(result) = v44(*(unsigned __int16 *)(a1 + 30), a2);
          goto LABEL_253;
        }
        if (!sub_10005549C())
          return 1743;
        sub_100054530("REFERENCED_OBJECTS server type does not support GET_STATUS command.\n");
        v49 = sub_1000544A0(6u);
        if (!os_log_type_enabled(v49, OS_LOG_TYPE_ERROR))
          return 1743;
      }
      goto LABEL_166;
    default:
      return result;
  }
}

uint64_t sub_1001DAF2C()
{
  return qword_100984CA0;
}

uint64_t sub_1001DAF38()
{
  unsigned int v0;
  uint64_t result;

  word_100984CA8 = *(_WORD *)(sub_100252DE8(0x2Fu) + 2);
  v0 = (unsigned __int16)word_100984CA8;
  if ((unsigned __int16)word_100984CA8 >= 0x101u)
  {
    sub_100253460();
    v0 = (unsigned __int16)word_100984CA8;
  }
  qword_100984CA0 = (uint64_t)sub_100114588(144 * v0);
  if (!qword_100984CA0)
    return 106;
  result = 0;
  word_100984CAA = 1;
  return result;
}

uint64_t sub_1001DAFA4(unsigned int a1, uint64_t a2)
{
  NSObject *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  v7 = 0;
  if (sub_1001DB044(a1, &v7))
  {
    if (sub_10005549C())
    {
      sub_100054530("Invalid CID %d", a1);
      v4 = sub_1000544A0(0x2Fu);
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
        sub_1006CEE54();
    }
    return 403;
  }
  else
  {
    v6 = v7;
    if (*(_QWORD *)(v7 + 136))
      sub_100253460();
    result = 0;
    *(_QWORD *)(v6 + 136) = a2;
  }
  return result;
}

uint64_t sub_1001DB044(unsigned int a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t i;
  unsigned __int16 v4;
  unsigned int v5;
  uint64_t result;

  if (a1 > 0x3F)
  {
    v4 = a1;
    if (a1 <= 0xFF)
      v4 = a1 - 64;
    if ((unsigned __int16)word_100984CA8 > v4)
    {
      v5 = v4;
      i = qword_100984CA0 + 144 * v4;
      if (*(_DWORD *)i)
      {
        if (*(unsigned __int16 *)(qword_100984CA0 + 144 * v5 + 4) == a1)
        {
LABEL_13:
          result = 0;
          *a2 = i;
          return result;
        }
      }
    }
  }
  else
  {
    v2 = (unsigned __int16)word_100984CA8;
    if (word_100984CA8)
    {
      for (i = qword_100984CA0; !*(_DWORD *)i || *(unsigned __int16 *)(i + 4) != a1; i += 144)
      {
        if (!--v2)
          return 404;
      }
      goto LABEL_13;
    }
  }
  return 404;
}

BOOL sub_1001DB0E8(int *a1)
{
  return *(_WORD *)(sub_1001E3CCC(a1) + 38) && *(__int16 *)(sub_1001E3CCC(a1) + 38) != -1;
}

void sub_1001DB12C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  unsigned __int16 v18;
  unint64_t v19;
  int *v20;
  int v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unsigned __int16 *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;

  if (HIDWORD(xmmword_1009991F8))
  {
    sub_100253320((uint64_t)"L2CAP data dump:\n", a2, a3, a4, a5, a6, a7, a8, v143);
    v15 = qword_100984CA0;
    if (word_100984CA8)
      v16 = qword_100984CA0 == 0;
    else
      v16 = 1;
    if (v16)
    {
      v18 = 0;
    }
    else
    {
      v17 = 0;
      v18 = 0;
      v19 = 1;
      do
      {
        v20 = (int *)(v15 + v17);
        v21 = *(_DWORD *)(v15 + v17);
        switch(v21)
        {
          case 1:
            sub_100253320((uint64_t)"CL ", v8, v9, v10, v11, v12, v13, v14, v144);
            v100 = v15 + v17;
            sub_100253320((uint64_t)"cid=0x%x ", v101, v102, v103, v104, v105, v106, v107, *(unsigned __int16 *)(v100 + 4));
            sub_100253320((uint64_t)"psm=0x%x ", v108, v109, v110, v111, v112, v113, v114, *(unsigned __int16 *)(v100 + 6));
            goto LABEL_16;
          case 2:
          case 4:
            v16 = v21 == 2;
            v22 = "MAG";
            if (v16)
              v22 = "CO ";
            sub_100253320((uint64_t)"%s", v8, v9, v10, v11, v12, v13, v14, (uint64_t)v22);
            v23 = v15 + v17;
            sub_100253320((uint64_t)"localCID=0x%x ", v24, v25, v26, v27, v28, v29, v30, *(unsigned __int16 *)(v23 + 4));
            v31 = sub_1001E3CCC(v20);
            sub_100253320((uint64_t)"remoteCID=0x%x ", v32, v33, v34, v35, v36, v37, v38, *(unsigned __int16 *)(v31 + 8));
            sub_100253320((uint64_t)"psm=0x%x ", v39, v40, v41, v42, v43, v44, v45, *(unsigned __int16 *)(v23 + 6));
            v46 = sub_1001E3CCC(v20);
            sub_100253320((uint64_t)"addr=%: ", v47, v48, v49, v50, v51, v52, v53, v46 + 10);
            v54 = sub_1001E3CCC(v20);
            sub_100253320((uint64_t)"inMTU=%d ", v55, v56, v57, v58, v59, v60, v61, *(unsigned __int16 *)(v54 + 36));
            v62 = sub_1001E3CCC(v20);
            sub_100253320((uint64_t)"outMTU=%d ", v63, v64, v65, v66, v67, v68, v69, *(unsigned __int16 *)(v62 + 32));
            v70 = sub_1001E3CCC(v20);
            sub_100253320((uint64_t)"outFlushTO=%d ", v71, v72, v73, v74, v75, v76, v77, *(unsigned __int16 *)(v70 + 38));
            v78 = sub_1001E3CCC(v20);
            sub_100253320((uint64_t)"linkTO=%d ", v79, v80, v81, v82, v83, v84, v85, *(unsigned __int16 *)(v78 + 40));
            sub_100253320((uint64_t)"\n", v86, v87, v88, v89, v90, v91, v92, v145);
            sub_1001EFAA4(v20);
            goto LABEL_16;
          case 3:
            sub_100253320((uint64_t)"FX ", v8, v9, v10, v11, v12, v13, v14, v144);
            sub_100253320((uint64_t)"cid=0x%x ", v115, v116, v117, v118, v119, v120, v121, *(unsigned __int16 *)(v15 + v17 + 4));
            v122 = (unsigned __int16 *)sub_1001E40C4(v15 + v17);
            sub_100253320((uint64_t)"mtu=%d ", v123, v124, v125, v126, v127, v128, v129, *v122);
            v130 = sub_1001E40C4(v15 + v17);
            sub_100253320((uint64_t)"flushTO=%d ", v131, v132, v133, v134, v135, v136, v137, *(unsigned __int16 *)(v130 + 2));
            v138 = *(char *)(sub_1001E40C4(v15 + v17) + 5);
            if (v138 <= 4)
              sub_100253320((uint64_t)off_10091ECE0[v138], v93, v94, v95, v96, v97, v98, v99, v146);
LABEL_16:
            ++v18;
            sub_100253320((uint64_t)"\n", v93, v94, v95, v96, v97, v98, v99, v146);
            break;
          default:
            break;
        }
        v15 = qword_100984CA0;
        v17 += 144;
      }
      while (v19++ < (unsigned __int16)word_100984CA8 && qword_100984CA0 != 0);
    }
    sub_100253320((uint64_t)"%d channels in use\n", v8, v9, v10, v11, v12, v13, v14, v18);
    nullsub_90(v141, v142);
  }
}

uint64_t sub_1001DB410(int a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t result;

  if (!sub_10019AC00(a2))
  {
    if (sub_10005549C())
    {
      sub_100054530("Invalid HCI handle provided - cannot retrieve channel");
      v9 = sub_1000544A0(0x2Fu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 406;
  }
  if (!word_100984CA8)
    return 406;
  v6 = 0;
  v7 = 0;
  while (1)
  {
    v8 = qword_100984CA0;
    if (*(_DWORD *)(qword_100984CA0 + v6) == 2
      && *(unsigned __int16 *)(sub_1001E3CCC((int *)(qword_100984CA0 + v6)) + 8) == a1
      && *(_QWORD *)sub_1001E3CCC((int *)(v8 + v6)) == a2)
    {
      break;
    }
    ++v7;
    v6 += 144;
    if (v7 >= (unsigned __int16)word_100984CA8)
      return 406;
  }
  result = 0;
  *a3 = v8 + v6;
  return result;
}

uint64_t sub_1001DB520(unsigned int a1, _QWORD *a2)
{
  uint64_t v3;
  int *v4;
  int *v6;

  v6 = 0;
  v3 = sub_1001DB044(a1, (uint64_t *)&v6);
  if (!(_DWORD)v3)
  {
    v4 = v6;
    if (sub_1001E3CCC(v6))
      *a2 = *(_QWORD *)sub_1001E3CCC(v4);
  }
  return v3;
}

uint64_t sub_1001DB584(uint64_t a1, int a2, _QWORD *a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  BOOL v10;
  uint64_t v11;
  NSObject *v13;
  uint64_t result;

  if (!sub_10019AB28(a1))
  {
    if (sub_10005549C())
    {
      sub_100054530("Invalid HCI handle provided - cannot retrieve channel");
      v13 = sub_1000544A0(0x2Fu);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 406;
  }
  if (!word_100984CA8)
    return 406;
  v6 = 0;
  v7 = 0;
  while (1)
  {
    v8 = qword_100984CA0;
    v9 = *(_DWORD *)(qword_100984CA0 + v6);
    v10 = v9 == 4 || v9 == 2;
    if (v10 && *(unsigned __int8 *)(sub_1001E3CCC((int *)(qword_100984CA0 + v6)) + 28) == a2)
    {
      v11 = sub_1001E3CCC((int *)(v8 + v6));
      if (*(_DWORD *)(a1 + 48) == *(_DWORD *)(v11 + 10)
        && *(unsigned __int16 *)(a1 + 52) == *(unsigned __int16 *)(v11 + 14))
      {
        break;
      }
    }
    ++v7;
    v6 += 144;
    if (v7 >= (unsigned __int16)word_100984CA8)
      return 406;
  }
  result = 0;
  *a3 = v8 + v6;
  return result;
}

uint64_t sub_1001DB6A4(uint64_t a1, int a2, _QWORD *a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  BOOL v10;
  uint64_t v11;
  NSObject *v13;
  uint64_t result;

  if (!sub_10019AC00(a1))
  {
    if (sub_10005549C())
    {
      sub_100054530("Invalid HCI handle provided - cannot retrieve channel");
      v13 = sub_1000544A0(0x2Fu);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 406;
  }
  if (!word_100984CA8)
    return 406;
  v6 = 0;
  v7 = 0;
  while (1)
  {
    v8 = qword_100984CA0;
    v9 = *(_DWORD *)(qword_100984CA0 + v6);
    v10 = v9 == 4 || v9 == 2;
    if (v10 && *(unsigned __int8 *)(sub_1001E3CCC((int *)(qword_100984CA0 + v6)) + 28) == a2)
    {
      v11 = sub_1001E3CCC((int *)(v8 + v6));
      if (*(_DWORD *)(a1 + 49) == *(_DWORD *)(v11 + 10)
        && *(unsigned __int16 *)(a1 + 53) == *(unsigned __int16 *)(v11 + 14))
      {
        break;
      }
    }
    ++v7;
    v6 += 144;
    if (v7 >= (unsigned __int16)word_100984CA8)
      return 406;
  }
  result = 0;
  *a3 = v8 + v6;
  return result;
}

uint64_t sub_1001DB7C4(uint64_t a1, int a2)
{
  unint64_t v4;
  uint64_t v5;
  unsigned int v6;
  int *v7;
  int v8;
  uint64_t v9;

  if (a1 && word_100984CA8)
  {
    v4 = (unsigned __int16)word_100984CA8 + 1;
    v5 = 144 * (unsigned __int16)word_100984CA8 - 144;
    v6 = 48;
    while (1)
    {
      v7 = (int *)(qword_100984CA0 + v5);
      v8 = *(_DWORD *)(qword_100984CA0 + v5);
      switch(v8)
      {
        case 4:
          goto LABEL_9;
        case 3:
          if (v6 < *(unsigned __int16 *)sub_1001E40C4(qword_100984CA0 + v5))
            v6 = *(unsigned __int16 *)sub_1001E40C4((uint64_t)v7);
          break;
        case 2:
LABEL_9:
          if (*(unsigned __int8 *)(sub_1001E3CCC((int *)(qword_100984CA0 + v5)) + 16) >= 3u
            && !*(_BYTE *)(sub_1001E3CCC(v7) + 17)
            && *(_QWORD *)sub_1001E3CCC(v7) == a1)
          {
            v9 = sub_1001E3CCC(v7);
            if (a2)
            {
              if (v6 < *(unsigned __int16 *)(v9 + 36))
                v6 = *(unsigned __int16 *)(sub_1001E3CCC(v7) + 36);
            }
            else if (v6 < *(unsigned __int16 *)(v9 + 32))
            {
              v6 = *(unsigned __int16 *)(sub_1001E3CCC(v7) + 32);
            }
          }
          break;
      }
      --v4;
      v5 -= 144;
      if (v4 <= 1)
        return (unsigned __int16)v6;
    }
  }
  LOWORD(v6) = 48;
  return (unsigned __int16)v6;
}

uint64_t sub_1001DB900(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t v5;
  int v6;
  uint64_t v8;
  BOOL v9;
  uint64_t result;

  if (!word_100984CA8)
    return 406;
  v4 = 0;
  v5 = 0;
  while (1)
  {
    v6 = *(_DWORD *)(qword_100984CA0 + v4);
    if (v6 == 4 || v6 == 2)
    {
      v8 = sub_1001E3CCC((int *)(qword_100984CA0 + v4));
      v9 = *(_DWORD *)a1 == *(_DWORD *)(v8 + 10) && *(unsigned __int16 *)(a1 + 4) == *(unsigned __int16 *)(v8 + 14);
      if (v9
        && !*(_BYTE *)(sub_1001E3CCC((int *)(qword_100984CA0 + v4)) + 16)
        && *(_BYTE *)(sub_1001E3CCC((int *)(qword_100984CA0 + v4)) + 25) == 1)
      {
        break;
      }
    }
    ++v5;
    v4 += 144;
    if (v5 >= (unsigned __int16)word_100984CA8)
      return 406;
  }
  result = 0;
  *a2 = qword_100984CA0 + v4;
  return result;
}

uint64_t sub_1001DB9D8()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  int *v3;
  int v4;

  v0 = (unsigned __int16)word_100984CA8;
  if (!word_100984CA8)
    return 0;
  result = 0;
  v2 = qword_100984CA0;
  v3 = (int *)qword_100984CA0;
  do
  {
    v4 = *v3;
    v3 += 36;
    if (v4 == 4)
      result = (*(_DWORD *)(v2 + 84) + result);
    v2 = (uint64_t)v3;
    --v0;
  }
  while (v0);
  return result;
}

uint64_t sub_1001DBA20()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  int *v3;
  int v4;

  v0 = (unsigned __int16)word_100984CA8;
  if (!word_100984CA8)
    return 0;
  result = 0;
  v2 = qword_100984CA0;
  v3 = (int *)qword_100984CA0;
  do
  {
    v4 = *v3;
    v3 += 36;
    if (v4 == 4)
      result = (*(_DWORD *)(v2 + 80) + result);
    v2 = (uint64_t)v3;
    --v0;
  }
  while (v0);
  return result;
}

_DWORD *sub_1001DBA68(int a1)
{
  uint64_t v1;
  _DWORD *i;

  if (!a1)
    return 0;
  v1 = (unsigned __int16)word_100984CA8;
  if (!word_100984CA8)
    return 0;
  for (i = (_DWORD *)qword_100984CA0; !qword_100984CA0 || !*i || i[18] != a1; i += 36)
  {
    if (!--v1)
      return 0;
  }
  return i;
}

uint64_t sub_1001DBAB4(_QWORD *a1)
{
  uint64_t v1;
  unsigned __int16 *v2;
  unint64_t v3;

  *a1 = 0;
  *(_BYTE *)a1 = 6;
  v1 = (unsigned __int16)word_100984CA8;
  if (word_100984CA8)
  {
    v2 = (unsigned __int16 *)(qword_100984CA0 + 4);
    do
    {
      if (*((_DWORD *)v2 - 1) == 3)
      {
        v3 = *v2;
        if (v3 <= 0x3F)
          *((_BYTE *)a1 + (v3 >> 3)) |= 1 << (v3 & 7);
      }
      v2 += 72;
      --v1;
    }
    while (v1);
  }
  return 0;
}

uint64_t sub_1001DBB20(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  int v6;
  uint64_t v7;

  v7 = 0;
  result = sub_1001DB044(a1, &v7);
  if (!(_DWORD)result)
  {
    v3 = v7;
    v5 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
    v4 = *(_QWORD *)(v7 + 16);
    v6 = *(unsigned __int16 *)(v7 + 24);
    *(_QWORD *)(v7 + 8) = 0;
    *(_QWORD *)(v3 + 16) = 0;
    *(_WORD *)(v3 + 24) = 0;
    *(_DWORD *)(v3 + 80) += v6;
    if (v5)
      return v5(a1, v4);
  }
  return result;
}

void sub_1001DBB90(unsigned int a1)
{
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;

  v4 = 0;
  if (sub_1001DB044(a1, &v4))
  {
    if (sub_10005549C())
    {
      sub_100054530("Invalid CID %d", a1);
      v2 = sub_1000544A0(0x2Fu);
      if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
        sub_1006CEE54();
    }
  }
  else
  {
    v3 = v4;
    *(_QWORD *)(v4 + 8) = 0;
    *(_QWORD *)(v3 + 16) = 0;
    *(_WORD *)(v3 + 24) = 0;
  }
}

uint64_t sub_1001DBC18(uint64_t a1, unsigned int a2, __int128 *a3, uint64_t a4, char a5)
{
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  int v14;
  BOOL v15;
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t v21;
  const void *v22[2];
  uint64_t v23;
  __int16 v24;

  v24 = a2;
  v23 = 0;
  v10 = sub_1001DB044(a2, &v23);
  if ((_DWORD)v10)
  {
    v11 = v10;
    if (sub_10005549C())
    {
      sub_100054530("OI_ChanMan_GetChannel failed: %!", v11);
      v12 = sub_1000544A0(0x2Fu);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return v11;
  }
  v13 = v23;
  if (!v23)
    sub_100253460();
  v14 = *(_DWORD *)v13;
  if ((*(_DWORD *)v13 - 1) >= 4)
  {
    sub_100253460();
    v14 = *(_DWORD *)v13;
  }
  v15 = v14 == 4 || v14 == 2;
  if (!v15
    || *(_BYTE *)(sub_1001E3CCC((int *)v13) + 16) == 4
    || *(_BYTE *)(sub_1001E3CCC((int *)v13) + 16) == 3
    || *(_BYTE *)(sub_1001E3CCC((int *)v13) + 16) == 5)
  {
    if (*(_QWORD *)(v13 + 8))
    {
      if (sub_10005549C())
      {
        sub_100054530("Write in progress");
        v16 = sub_1000544A0(0x2Fu);
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      return 410;
    }
    switch(*(_DWORD *)v13)
    {
      case 1:
        v17 = sub_1001E3278(v13, a3, a4);
        goto LABEL_34;
      case 2:
      case 4:
        if (sub_1001EE99C(a2))
        {
          v17 = sub_1001DF3FC(v13, a4);
        }
        else if (sub_1001EE9F0(a2))
        {
          v17 = sub_1001DF034(v13, a4);
        }
        else
        {
          v17 = sub_1001DF7F8(v13, a4);
        }
        goto LABEL_34;
      case 3:
        *(_QWORD *)(a4 + 8) = 0;
        v17 = sub_1001E2CD0(a3, a2, a4);
LABEL_34:
        v11 = v17;
        if ((a5 & 1) == 0 && (_DWORD)v17 == 412)
        {
          v22[0] = 0;
          if (a1)
          {
            *(_QWORD *)(v13 + 8) = a1;
            *(_QWORD *)(v13 + 16) = a4;
            *(_WORD *)(v13 + 24) = *(_WORD *)(a4 + 4);
          }
          v22[1] = &v24;
          LOWORD(v22[0]) = 2;
          sub_10004A9EC((uint64_t)sub_1001DBF0C, v22, 0, 0);
          return 0;
        }
        if ((_DWORD)v17)
        {
          *(_QWORD *)(v13 + 8) = 0;
          *(_QWORD *)(v13 + 16) = 0;
          *(_WORD *)(v13 + 24) = 0;
        }
        else
        {
          if (!a1)
            return 0;
          v11 = 0;
          *(_QWORD *)(v13 + 8) = a1;
          *(_QWORD *)(v13 + 16) = a4;
          *(_WORD *)(v13 + 24) = *(_WORD *)(a4 + 4);
        }
        break;
      default:
        v21 = sub_100112D60(105);
        return sub_1001DBF0C(v21);
    }
  }
  else
  {
    if (sub_10005549C())
    {
      v18 = sub_1001E3CCC((int *)v13);
      sub_100054530("OI_L2CAP_WriteMBUF, channel is not OPEN (%d)", *(unsigned __int8 *)(v18 + 16));
      v19 = sub_1000544A0(0x2Fu);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 404;
  }
  return v11;
}

uint64_t sub_1001DBF0C(uint64_t result)
{
  if (result)
    return sub_1001DBB20(**(unsigned __int16 **)(result + 8));
  return result;
}

uint64_t sub_1001DBF20(uint64_t a1, unsigned int a2, __int128 *a3, char *a4, size_t a5)
{
  uint64_t result;
  uint64_t v11;
  NSObject *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  if (a1 && a4 && (_DWORD)a5)
  {
    v20 = 0;
    v13 = 0u;
    v14 = 0u;
    v15 = 0u;
    v16 = 0u;
    v17 = 0u;
    v18 = 0u;
    v19 = 0u;
    result = sub_1001DB044(a2, &v20);
    if (!(_DWORD)result)
    {
      if (a3 && (a3 = (__int128 *)sub_10019AEA4((uint64_t)a3)) == 0)
      {
        if (sub_10005549C())
        {
          sub_100054530("Invalid address.", v13, v14, v15, v16, v17, v18, v19);
          v12 = sub_1000544A0(0x2Fu);
          if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
            sub_1006CE7A4();
        }
        return 122;
      }
      else
      {
        sub_1000532A8((uint64_t)&v13, 1u);
        sub_10005336C((unsigned __int8 *)&v13, a4, a5, 2u);
        v11 = v20;
        *((_QWORD *)&v13 + 1) = v20;
        result = sub_1001DBC18(0, a2, a3, (uint64_t)&v13, 0);
        if (!(_DWORD)result)
        {
          *(_QWORD *)(v11 + 8) = a1;
          *(_QWORD *)(v11 + 16) = a4;
          *(_WORD *)(v11 + 24) = a5;
        }
      }
    }
  }
  else
  {
    sub_100253460();
    return 101;
  }
  return result;
}

uint64_t sub_1001DC04C(unsigned int a1, uint64_t *a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t result;
  int v10;
  __int16 v11;
  _OWORD *v12;
  _QWORD *v13;
  _OWORD *v14;

  if (a1 > 4 || ((1 << a1) & 0x16) == 0)
    sub_100253460();
  if (word_100984CA8)
  {
    v6 = 0;
    v7 = qword_100984CA0;
    while (*(_DWORD *)v7)
    {
      ++v6;
      v7 += 144;
      if ((unsigned __int16)word_100984CA8 == v6)
        goto LABEL_8;
    }
    if (*(_QWORD *)(v7 + 112))
      sub_100253460();
    if (*(_QWORD *)(v7 + 104))
      sub_100253460();
    if (*(_QWORD *)(v7 + 120))
      sub_100253460();
    *(_OWORD *)(v7 + 112) = 0u;
    *(_OWORD *)(v7 + 128) = 0u;
    *(_OWORD *)(v7 + 80) = 0u;
    *(_OWORD *)(v7 + 96) = 0u;
    *(_OWORD *)(v7 + 48) = 0u;
    *(_OWORD *)(v7 + 64) = 0u;
    *(_OWORD *)(v7 + 16) = 0u;
    *(_OWORD *)(v7 + 32) = 0u;
    *(_OWORD *)v7 = 0u;
    if ((a3 & 1) != 0)
    {
      if ((unsigned __int16)word_100984CA8 >= 0x41u)
        sub_100253460();
      *(_WORD *)(v7 + 4) = v6 + 64;
    }
    else
    {
      if (!word_100984CAA)
        sub_100253460();
      if ((unsigned __int16)word_100984CA8 <= (unsigned __int16)v6)
        sub_1001494E0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/chanman.c");
      v10 = (unsigned __int16)word_100984CAA;
      *(_WORD *)(v7 + 4) = v6 | (word_100984CAA << 8);
      if (v10 == 255)
        v11 = 1;
      else
        v11 = v10 + 1;
      word_100984CAA = v11;
      if (!v11)
        sub_100253460();
    }
    *(_DWORD *)v7 = a1;
    switch(a1)
    {
      case 1u:
        v13 = sub_100052DC0(0x18uLL);
        *(_QWORD *)(v7 + 104) = v13;
        v13[1] = 0;
        v13[2] = 0;
        *v13 = 0;
        break;
      case 2u:
        v14 = sub_100052DC0(0x78uLL);
        *(_QWORD *)(v7 + 112) = v14;
        *v14 = 0u;
        v14[1] = 0u;
        v14[2] = 0u;
        v14[3] = 0u;
        v14[4] = 0u;
        v14[5] = 0u;
        v14[6] = 0u;
        *((_QWORD *)v14 + 14) = 0;
        *(_BYTE *)(sub_1001E3CCC((int *)v7) + 16) = 0;
        *(_WORD *)(sub_1001E3CCC((int *)v7) + 36) = 1024;
        *(_WORD *)(sub_1001E3CCC((int *)v7) + 32) = 672;
        *(_WORD *)(sub_1001E3CCC((int *)v7) + 34) = -1;
        *(_WORD *)(sub_1001E3CCC((int *)v7) + 38) = -1;
        *(_WORD *)(sub_1001E3CCC((int *)v7) + 40) = 5000;
        *(_DWORD *)(v7 + 72) = 0;
        *(_BYTE *)(sub_1001E3CCC((int *)v7) + 30) = 0;
        *(_BYTE *)(sub_1001E3CCC((int *)v7) + 17) = 0;
        *(_BYTE *)(sub_1001E3CCC((int *)v7) + 77) = 0;
        break;
      case 4u:
        v12 = sub_100052DC0(0x78uLL);
        *(_QWORD *)(v7 + 112) = v12;
        *v12 = 0u;
        v12[1] = 0u;
        v12[2] = 0u;
        v12[3] = 0u;
        v12[4] = 0u;
        v12[5] = 0u;
        v12[6] = 0u;
        *((_QWORD *)v12 + 14) = 0;
        break;
    }
    result = 0;
    *(_QWORD *)(v7 + 128) = 0;
    *(_DWORD *)(v7 + 76) = -1;
    *a2 = v7;
  }
  else
  {
LABEL_8:
    if (sub_10005549C())
    {
      sub_100054530("No free channels found\n");
      v8 = sub_1000544A0(0x2Fu);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 104;
  }
  return result;
}

uint64_t sub_1001DC2E4(uint64_t a1, _DWORD *a2)
{
  uint64_t v4;
  unint64_t v5;
  int v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  NSObject *v11;
  uint8_t v13[4];
  uint64_t v14;

  if (!a1)
    sub_100253460();
  if (word_100984CA8)
  {
    v4 = 0;
    v5 = 0;
    v6 = 0;
    v7 = 0;
    do
    {
      v8 = qword_100984CA0 + v4;
      if (*(_DWORD *)(qword_100984CA0 + v4))
      {
        v9 = *(_QWORD *)(v8 + 96);
        if (v9)
        {
          if (*(unsigned __int8 *)(v9 + 27) >= 0xBu)
          {
            v10 = (_QWORD *)sub_1001E3CCC((int *)(qword_100984CA0 + v4));
            if (a1 && *v10)
            {
              if (*(unsigned __int8 *)(*(_QWORD *)sub_1001E3CCC((int *)v8) + 2) == *(unsigned __int8 *)(a1 + 2))
                ++v6;
              if (*(_QWORD *)sub_1001E3CCC((int *)v8) == a1)
                ++v7;
            }
            else if (sub_10005549C())
            {
              sub_100054530("L2CAP reserved priority channel does not contain valid ACL");
              v11 = sub_1000544A0(0x2Fu);
              if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
                sub_1006CEDF0(v13, &v14, v11);
            }
          }
        }
      }
      ++v5;
      v4 += 144;
    }
    while (v5 < (unsigned __int16)word_100984CA8);
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v6;
  return v7;
}

uint64_t sub_1001DC46C(int a1, int a2, char a3, unsigned int a4, uint64_t *a5, uint64_t a6)
{
  char v10;
  unsigned __int16 *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;

  if (a2)
  {
    if (word_100984CA8)
    {
      v10 = a2;
      v12 = (unsigned __int16 *)(qword_100984CA0 + 4);
      v13 = (unsigned __int16)word_100984CA8;
      do
      {
        if (*((_DWORD *)v12 - 1) && *v12 == a1)
        {
          if (sub_10005549C())
          {
            sub_100054530("CID %d already regitered", a1);
            v17 = sub_1000544A0(0x2Fu);
            if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
              sub_1006CE7A4();
          }
          return 402;
        }
        v12 += 72;
        --v13;
      }
      while (v13);
      v14 = 0;
      v15 = qword_100984CA0;
      while (*(_DWORD *)(qword_100984CA0 + v14))
      {
        v14 += 144;
        if (144 * (unsigned __int16)word_100984CA8 == v14)
          return 104;
      }
      v18 = qword_100984CA0 + v14;
      if (*(_QWORD *)(qword_100984CA0 + v14 + 112))
        sub_100253460();
      if (*(_QWORD *)(v18 + 104))
        sub_100253460();
      v19 = v15 + v14;
      if (*(_QWORD *)(v19 + 120))
        sub_100253460();
      *(_OWORD *)(v18 + 112) = 0u;
      *(_OWORD *)(v18 + 128) = 0u;
      *(_OWORD *)(v18 + 80) = 0u;
      *(_OWORD *)(v18 + 96) = 0u;
      *(_OWORD *)(v18 + 48) = 0u;
      *(_OWORD *)(v18 + 64) = 0u;
      *(_OWORD *)(v18 + 16) = 0u;
      *(_OWORD *)(v18 + 32) = 0u;
      *(_OWORD *)v18 = 0u;
      v20 = sub_100052DC0(0x20uLL);
      *(_QWORD *)(v19 + 120) = v20;
      *v20 = 0u;
      v20[1] = 0u;
      *(_QWORD *)(v19 + 128) = 0;
      *(_WORD *)(v19 + 4) = a1;
      *(_DWORD *)v19 = 3;
      *(_DWORD *)(v19 + 76) = -1;
      *(_QWORD *)(sub_1001E40C4(v18) + 24) = a6;
      *(_WORD *)sub_1001E40C4(v18) = 672;
      *(_WORD *)(sub_1001E40C4(v18) + 2) = -1;
      *(_BYTE *)(sub_1001E40C4(v18) + 4) = v10;
      *a5 = v18;
      sub_1001F0E30(*(unsigned __int16 *)(v19 + 4), a3, a4, 0, (uint64_t *)(v19 + 96), *(_DWORD *)(v19 + 76));
      return 0;
    }
    else
    {
      return 104;
    }
  }
  else
  {
    sub_100253460();
    return 718;
  }
}

uint64_t sub_1001DC658(uint64_t a1)
{
  void *v3;
  int v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;

  if (!a1)
    sub_100253460();
  if (*(_DWORD *)a1 == 4 || *(_DWORD *)a1 == 2)
  {
    sub_1001EF7A4((int *)a1);
    if (!*(_QWORD *)(a1 + 112))
      sub_100253460();
    sub_1001FF1F4((int *)a1);
  }
  sub_1001F153C((void *)*(unsigned __int16 *)(a1 + 4));
  v3 = *(void **)(a1 + 48);
  if (v3)
    sub_100053298(v3);
  *(_QWORD *)(a1 + 48) = 0;
  v4 = *(_DWORD *)a1;
  *(_DWORD *)a1 = 0;
  if (v4 == 1)
  {
    v11 = *(_QWORD **)(a1 + 104);
    v7 = a1 + 104;
    v10 = v11;
    if (!v11)
    {
      sub_100253460();
      v10 = *(_QWORD **)v7;
    }
    if (*v10)
    {
      sub_100253460();
      v10 = *(_QWORD **)v7;
    }
    sub_100053298(v10);
    v5 = 0;
    goto LABEL_31;
  }
  if (v4 == 4 || (v5 = 0, v4 == 2))
  {
    sub_100049F6C(*(unsigned int *)(*(_QWORD *)(a1 + 112) + 80));
    sub_100049F6C(*(unsigned int *)(*(_QWORD *)(a1 + 112) + 84));
    if (sub_10019AB28(**(_QWORD **)(a1 + 112)))
      v5 = sub_1001F37D8(**(_QWORD **)(a1 + 112));
    else
      v5 = 0;
  }
  switch(v4)
  {
    case 2:
      goto LABEL_22;
    case 3:
      v12 = *(_QWORD **)(a1 + 120);
      v7 = a1 + 120;
      v6 = v12;
LABEL_30:
      sub_100053298(v6);
LABEL_31:
      *(_QWORD *)v7 = 0;
      return v5;
    case 4:
LABEL_22:
      v8 = *(_QWORD **)(a1 + 112);
      v7 = a1 + 112;
      v6 = v8;
      v9 = (void *)v8[14];
      if (v9)
      {
        sub_100053298(v9);
        v6 = *(_QWORD **)v7;
        *(_QWORD *)(*(_QWORD *)v7 + 112) = 0;
      }
      goto LABEL_30;
  }
  return v5;
}

void *sub_1001DC7B0(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int *v7;
  int v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  int v17;
  __int16 v18;

  if (a2)
    v3 = a2;
  else
    v3 = 430;
  if (word_100984CA8)
  {
    v4 = 0;
    v5 = 0;
    do
    {
      v6 = qword_100984CA0;
      v7 = (int *)(qword_100984CA0 + v4);
      v8 = *(_DWORD *)(qword_100984CA0 + v4);
      if (v8 == 4 || v8 == 2)
      {
        if (*(_QWORD *)sub_1001E3CCC((int *)(qword_100984CA0 + v4)) == a1)
        {
          sub_1001F3A20(*(unsigned __int16 *)(v6 + v4 + 4));
          if (*(_BYTE *)(sub_1001E3CCC((int *)(v6 + v4)) + 16) != 1
            || *(_BYTE *)(sub_1001E3CCC((int *)(v6 + v4)) + 30)
            || sub_10019AC00(a1))
          {
            goto LABEL_18;
          }
          v10 = sub_1001E3CCC((int *)(v6 + v4));
          ++*(_BYTE *)(v10 + 30);
          v11 = sub_1001E3CCC((int *)(v6 + v4));
          sub_100049F6C(*(unsigned int *)(v11 + 80));
          v12 = sub_1001E3CCC((int *)(v6 + v4));
          sub_100049F6C(*(unsigned int *)(v12 + 84));
          v13 = *(_DWORD *)(v6 + v4 + 72);
          if (v13)
          {
            sub_100254F2C(v13);
            *(_DWORD *)(v6 + v4 + 72) = 0;
          }
          *(_BYTE *)(sub_1001E3CCC((int *)(v6 + v4)) + 16) = 0;
          *(_BYTE *)(sub_1001E3CCC((int *)(v6 + v4)) + 25) = 1;
          *(_QWORD *)sub_1001E3CCC((int *)(v6 + v4)) = 0;
          v14 = sub_1001E3CCC((int *)(v6 + v4));
          if (sub_10017FDB8((uint64_t)sub_1001DD4F8, v14 + 10))
LABEL_18:
            sub_1001DCE10(v6 + v4, v3);
          else
            sub_10018014C(a1, 0x13u);
        }
        v8 = *v7;
      }
      if (v8 == 3)
      {
        sub_1001EFE38(v6 + v4, a1);
        v8 = *v7;
      }
      if (v8 == 1)
      {
        v17 = *(_DWORD *)(a1 + 48);
        v18 = *(_WORD *)(a1 + 52);
        if (sub_1001E319C(*(unsigned __int16 *)(v6 + v4 + 4), (uint64_t)&v17) != 434)
        {
          v15 = sub_1001E4020(v6 + v4);
          (*(void (**)(int *))(v15 + 16))(&v17);
        }
      }
      ++v5;
      v4 += 144;
    }
    while (v5 < (unsigned __int16)word_100984CA8);
  }
  sub_1001F00E4(a1);
  return sub_1001F00F4(a1);
}

uint64_t sub_1001DC9B8(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _WORD *a7, uint64_t a8)
{
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  int *v19;
  uint64_t v20;
  __int16 v21;
  __int16 v22;
  uint64_t v23;
  int v25;
  char v26;
  char v27;
  uint64_t *v28;
  NSObject *v29;
  uint64_t v30;
  int *v31;

  v31 = 0;
  v16 = sub_1001DC04C(2u, (uint64_t *)&v31, 0);
  if (!(_DWORD)v16)
  {
    v30 = a8;
    v17 = sub_10019AEA4(a3);
    if (!v17)
    {
      if (sub_10005549C())
      {
        sub_100054530("OI_L2CAP_createChannelForFastConnect NULL Handle");
        v18 = sub_1000544A0(0x2Fu);
        if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
    }
    v19 = v31;
    v20 = sub_1001E3CCC(v31);
    v21 = *(_WORD *)(a3 + 4);
    *(_DWORD *)(v20 + 10) = *(_DWORD *)a3;
    *(_WORD *)(v20 + 14) = v21;
    *(_QWORD *)sub_1001E3CCC(v19) = v17;
    *(_BYTE *)(sub_1001E3CCC(v19) + 25) = 0;
    *(_BYTE *)(sub_1001E3CCC(v19) + 28) = 0;
    v22 = *(_WORD *)a2;
    *(_WORD *)(sub_1001E3CCC(v19) + 36) = v22;
    *((_WORD *)v19 + 3) = a1;
    *(_BYTE *)(sub_1001E3CCC(v19) + 16) = 0;
    *(_BYTE *)(sub_1001E3CCC(v19) + 24) = 1;
    *(_BYTE *)(sub_1001E3CCC(v19) + 27) = 3;
    *(_BYTE *)(sub_1001E3CCC(v19) + 26) = 3;
    *(_BYTE *)(sub_1001E3CCC(v19) + 28) = 0;
    *(_BYTE *)(sub_1001E3CCC(v19) + 52) = 0;
    *(_QWORD *)(sub_1001E3CCC(v19) + 88) = a5;
    *(_QWORD *)(sub_1001E3CCC(v19) + 96) = a4;
    *((_QWORD *)v19 + 4) = a6;
    *(_WORD *)(sub_1001E3CCC(v19) + 48) = 0;
    *(_BYTE *)(sub_1001E3CCC(v19) + 78) = 0;
    v23 = sub_1001EF3B0(v19, 0, 0);
    if ((_DWORD)v23)
    {
      v16 = v23;
      sub_1001DC658((uint64_t)v19);
    }
    else
    {
      v25 = *(_DWORD *)(a2 + 8);
      if (!v25)
        v25 = -1;
      v19[19] = v25;
      v26 = *(_BYTE *)(a2 + 6);
      if (!v26)
        v26 = 4;
      *(_BYTE *)(a2 + 6) = v26;
      v27 = *(_BYTE *)(a2 + 7);
      if (!v27)
        v27 = 5;
      *(_BYTE *)(a2 + 7) = v27;
      sub_10018007C(v17);
      sub_1001F0E30(*((unsigned __int16 *)v19 + 2), *(_BYTE *)(a2 + 6), *(unsigned __int8 *)(a2 + 7), 0, (uint64_t *)v19 + 12, v19[19]);
      v28 = (uint64_t *)sub_1001E3CCC(v19);
      sub_1001F37D8(*v28);
      *a7 = *((_WORD *)v19 + 2);
      *((_QWORD *)v19 + 8) = v30;
      v16 = sub_1001DCFE8(v19, (__int16 *)a2);
      if ((_DWORD)v16)
      {
        sub_1001DC658((uint64_t)v19);
        if (sub_10005549C())
        {
          sub_100054530("OI_L2CAP_createChannelForFastConnect Failed to set channel params");
          v29 = sub_1000544A0(0x2Fu);
          if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
            sub_1006CE7A4();
        }
      }
    }
  }
  return v16;
}

uint64_t sub_1001DCC5C(unsigned int a1, _WORD *a2, _WORD *a3, _BYTE *a4)
{
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v11;

  v11 = 0;
  v7 = sub_1001DB044(a1, &v11);
  if ((_DWORD)v7)
  {
    if (sub_10005549C())
    {
      sub_100054530("OI_L2CAP_getL2CAPChannelInfo Get Channel failed");
      v8 = sub_1000544A0(0x2Fu);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
  else
  {
    v9 = v11;
    *a2 = *(_WORD *)(v11 + 6);
    *a3 = *(_WORD *)(*(_QWORD *)(v9 + 112) + 36);
    *a4 = *(_BYTE *)(sub_1001E3CCC((int *)v9) + 52);
  }
  return v7;
}

uint64_t sub_1001DCD0C(uint64_t a1)
{
  int *v2;
  unsigned int v3;
  unsigned int v4;
  BOOL v5;
  unsigned int v6;
  unsigned __int16 v7;

  v2 = (int *)sub_1001DAF2C();
  if (*(_WORD *)(sub_100252DE8(0x2Fu) + 2))
  {
    v3 = 0;
    v4 = 0xFFFF;
    do
    {
      v5 = *v2 == 4 || *v2 == 2;
      if (v5 && *(_QWORD *)sub_1001E3CCC(v2) == a1 && *(unsigned __int16 *)(sub_1001E3CCC(v2) + 40) < v4)
        v4 = *(unsigned __int16 *)(sub_1001E3CCC(v2) + 40);
      ++v3;
      v2 += 36;
    }
    while (v3 < *(unsigned __int16 *)(sub_100252DE8(0x2Fu) + 2));
    v6 = 8 * v4 / 5;
    if (v4 == 65534)
      LOWORD(v6) = 0;
    if (v4 == 0xFFFF)
      v7 = 32000;
    else
      v7 = v6;
  }
  else
  {
    v7 = 32000;
  }
  if (*(unsigned __int16 *)(a1 + 140) == v7)
    return 0;
  else
    return sub_10018C1B8(a1, v7);
}

void sub_1001DCE10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  int v6;
  uint64_t v7;
  NSObject *v8;
  unsigned int v9;
  _BOOL4 v11;
  BOOL v12;
  int v13;
  void (*v14)(_QWORD, _QWORD, _QWORD, uint64_t);
  void (*v15)(uint64_t, uint64_t);

  if (!a1)
    sub_100253460();
  v15 = *(void (**)(uint64_t, uint64_t))(sub_1001E3CCC((int *)a1) + 88);
  v4 = *(unsigned __int16 *)(a1 + 4);
  v5 = *(unsigned __int8 *)(sub_1001E3CCC((int *)a1) + 16);
  sub_1001E3CCC((int *)a1);
  v14 = *(void (**)(_QWORD, _QWORD, _QWORD, uint64_t))(sub_1001E3CCC((int *)a1) + 96);
  v6 = *(unsigned __int8 *)(sub_1001E3CCC((int *)a1) + 24);
  v7 = *(_QWORD *)sub_1001E3CCC((int *)a1);
  if (*(_BYTE *)(sub_1001E3CCC((int *)a1) + 17))
  {
    if (sub_10005549C())
    {
      sub_100054530("Disconnect notification for PSM: %x already pending on dispatcher", *(unsigned __int16 *)(a1 + 6));
      v8 = sub_1000544A0(0x2Fu);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
  else
  {
    *(_DWORD *)(sub_1001E3CCC((int *)a1) + 20) = a2;
    *(_BYTE *)(sub_1001E3CCC((int *)a1) + 17) = 1;
    *(_BYTE *)(sub_1001E3CCC((int *)a1) + 16) = 0;
    sub_1001F3A20(v4);
    sub_1001DC658(a1);
    if (sub_10019AB28(v7))
    {
      sub_10018014C(v7, 0x13u);
      if (sub_10019AB28(v7))
        sub_1001DCD0C(v7);
    }
    v9 = *(_DWORD *)(a1 + 72);
    if (v9)
      sub_100254F2C(v9);
    v11 = (_DWORD)a2 != 464 && v5 > 3;
    if (v5 == 2 || v11)
    {
      if (v15)
        v15(v4, a2);
    }
    else
    {
      if (v6)
        v12 = v5 == 3;
      else
        v12 = 1;
      v13 = v12;
      if (v14 && v13)
        v14(*(unsigned __int16 *)(a1 + 4), 0, 0, a2);
    }
  }
}

uint64_t sub_1001DCFE8(int *a1, __int16 *a2)
{
  int *v4;
  unsigned int v5;
  uint64_t v7;
  uint64_t v8;
  int v10;
  NSObject *v11;
  uint64_t result;
  __int16 v13;
  __int16 v14;
  __int16 v15;
  uint64_t v16;

  if (a1)
  {
    if (a2)
      goto LABEL_3;
  }
  else
  {
    sub_100253460();
    if (a2)
      goto LABEL_3;
  }
  sub_100253460();
LABEL_3:
  if (!a2[1]
    || (unsigned __int16)a2[1] == 0xFFFF && (byte_100998F6A & 0x40) != 0
    || (v4 = (int *)sub_1001DAF2C(), !*(_WORD *)(sub_100252DE8(0x2Fu) + 2)))
  {
LABEL_26:
    if (a2[2])
      v13 = a2[2];
    else
      v13 = -2;
    *(_WORD *)(sub_1001E3CCC(a1) + 40) = v13;
    v14 = *a2;
    *(_WORD *)(sub_1001E3CCC(a1) + 36) = v14;
    v15 = a2[1];
    v16 = sub_1001E3CCC(a1);
    result = 0;
    *(_WORD *)(v16 + 38) = v15;
  }
  else
  {
    v5 = 0;
    while (1)
    {
      if (v4 != a1 && *v4 && *v4 != 3)
      {
        v7 = sub_1001E3CCC(a1);
        v8 = sub_1001E3CCC(v4);
        if (*(_DWORD *)(v7 + 10) == *(_DWORD *)(v8 + 10)
          && *(unsigned __int16 *)(v7 + 14) == *(unsigned __int16 *)(v8 + 14))
        {
          if (*(_WORD *)(sub_1001E3CCC(v4) + 38))
          {
            if (*(__int16 *)(sub_1001E3CCC(v4) + 38) != -1)
            {
              v10 = (unsigned __int16)a2[1];
              if (v10 != *(unsigned __int16 *)(sub_1001E3CCC(v4) + 38))
                break;
            }
          }
        }
      }
      ++v5;
      v4 += 36;
      if (v5 >= *(unsigned __int16 *)(sub_100252DE8(0x2Fu) + 2))
        goto LABEL_26;
    }
    if (sub_10005549C())
    {
      sub_100054530("OI_L2CAP_Accept: conflicting flush timeout, cannot accept connection");
      v11 = sub_1000544A0(0x2Fu);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
        sub_1006D2F2C();
    }
    sub_1001DC658((uint64_t)a1);
    return 101;
  }
  return result;
}

uint64_t sub_1001DD1A8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, _WORD *a7, uint64_t a8)
{
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  __int16 v19;
  int *v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int *v27;
  unsigned int v28;
  unsigned int v29;
  char v30;
  char v31;
  int *v32;
  uint64_t v33;
  unsigned int v34;
  __int16 *v35;
  __int16 v36;
  int *v37;
  uint8_t buf[4];
  void *v39;

  v37 = 0;
  if (sub_10005549C())
  {
    sub_100054530("OI_L2CAP_Connect %: PSM = 0x%x, Cb 0x%x", a5, a4, sub_1001DD4F8);
    v16 = sub_1000544A0(0x2Fu);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      v39 = sub_100054494();
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (a1 && a8 && a2 && a3 && (a4 & 0x1010101) == 1 && a7)
  {
    v17 = sub_1001DD688((unsigned __int16 *)a6);
    if (!(_DWORD)v17)
    {
      v17 = sub_1001DC04C(2u, (uint64_t *)&v37, 0);
      if (!(_DWORD)v17)
      {
        *(_BYTE *)(sub_1001E3CCC(v37) + 24) = 0;
        v18 = sub_1001E3CCC(v37);
        v19 = *(_WORD *)(a5 + 4);
        *(_DWORD *)(v18 + 10) = *(_DWORD *)a5;
        *(_WORD *)(v18 + 14) = v19;
        v20 = v37;
        *((_WORD *)v37 + 3) = a4;
        *(_BYTE *)(sub_1001E3CCC(v20) + 16) = 0;
        *(_QWORD *)(sub_1001E3CCC(v37) + 88) = a2;
        *(_QWORD *)(sub_1001E3CCC(v37) + 96) = a1;
        v21 = v37;
        *((_QWORD *)v37 + 4) = a3;
        *((_QWORD *)v21 + 8) = a8;
        if (a6)
        {
          v22 = *(_QWORD *)(a6 + 16);
          v23 = sub_1001E3CCC(v21);
          if (v22)
          {
            v24 = *(uint64_t **)(a6 + 16);
            v25 = *v24;
            *(_WORD *)(v23 + 50) = *((_WORD *)v24 + 4);
            *(_QWORD *)(v23 + 42) = v25;
          }
          else
          {
            *(_WORD *)(v23 + 48) = 0;
          }
          v31 = *(_BYTE *)(a6 + 24);
          *(_BYTE *)(sub_1001E3CCC(v37) + 78) = v31;
          v17 = sub_1001EF3B0(v37, *(unsigned __int8 *)(a6 + 12), *(_BYTE *)(a6 + 13));
          if ((_DWORD)v17)
            goto LABEL_21;
          if (*(_DWORD *)(a6 + 8))
            v28 = *(_DWORD *)(a6 + 8);
          else
            v28 = -1;
          v27 = v37;
          v37[19] = v28;
          if (*(_BYTE *)(a6 + 6))
            v30 = *(_BYTE *)(a6 + 6);
          else
            v30 = 4;
          if (*(_BYTE *)(a6 + 7))
            v29 = *(unsigned __int8 *)(a6 + 7);
          else
            v29 = 5;
        }
        else
        {
          *(_WORD *)(sub_1001E3CCC(v21) + 48) = 0;
          *(_BYTE *)(sub_1001E3CCC(v37) + 78) = 0;
          v17 = sub_1001EF3B0(v37, 0, 0);
          if ((_DWORD)v17)
            goto LABEL_21;
          v27 = v37;
          v28 = -1;
          v37[19] = -1;
          v29 = 5;
          v30 = 4;
        }
        v17 = sub_1001F0E30(*((unsigned __int16 *)v27 + 2), v30, v29, 0, (uint64_t *)v27 + 12, v28);
        v32 = v37;
        if ((_DWORD)v17)
          goto LABEL_32;
        *a7 = *((_WORD *)v37 + 2);
        if (!a6 || (v33 = sub_1001DCFE8(v32, (__int16 *)a6), !(_DWORD)v33))
        {
          v34 = *(unsigned __int16 *)(sub_100252DE8(0x28u) + 8);
          if (v34 <= *(unsigned __int16 *)(sub_1001E3CCC(v37) + 36))
            v35 = (__int16 *)(sub_100252DE8(0x28u) + 8);
          else
            v35 = (__int16 *)(sub_1001E3CCC(v37) + 36);
          v36 = *v35;
          *(_WORD *)(sub_1001E3CCC(v37) + 36) = v36;
          v17 = sub_10017FDB8((uint64_t)sub_1001DD4F8, a5);
          v32 = v37;
          if (!(_DWORD)v17)
          {
            *(_BYTE *)(sub_1001E3CCC(v37) + 25) = 1;
            return v17;
          }
          goto LABEL_32;
        }
        v17 = v33;
LABEL_21:
        v32 = v37;
LABEL_32:
        sub_1001DC658((uint64_t)v32);
      }
    }
  }
  else
  {
    sub_100253460();
    return 101;
  }
  return v17;
}

void sub_1001DD4F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  int *v13;

  v13 = 0;
  v6 = sub_1001DB900(a2, &v13);
  if (!(_DWORD)v6)
  {
    if (*(_BYTE *)(sub_1001E3CCC(v13) + 16) || *(_BYTE *)(sub_1001E3CCC(v13) + 25) != 1)
      sub_100253460();
    if (!(_DWORD)a1)
    {
      *(_QWORD *)sub_1001E3CCC(v13) = a3;
      if (!a3)
        sub_100253460();
      if (*(_BYTE *)(a3 + 228))
      {
        *(_BYTE *)(sub_1001E3CCC(v13) + 25) = 2;
        v9 = sub_1001E3CCC(v13);
        if (!sub_10025495C((uint64_t)sub_1001DE4A8, v9 + 10, *((__int128 **)v13 + 8), v13 + 18, 0))
          return;
      }
      else
      {
        *(_BYTE *)(a3 + 228) = 1;
        v10 = sub_1002011BC((uint64_t)sub_1001DFD3C, 1, a2, 2);
        if (!(_DWORD)v10)
          return;
        v11 = v10;
        if (sub_10005549C())
        {
          sub_100054530("Could not ask device for extended features, result is %!", v11);
          v12 = sub_1000544A0(0x2Fu);
          if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
            sub_1006CE7A4();
        }
      }
    }
    sub_1001DFF68((uint64_t)v13, a1);
    return;
  }
  v7 = v6;
  if (sub_10005549C())
  {
    sub_100054530("no waiting channel found for completed ACL link %: with %!", a2, v7);
    v8 = sub_1000544A0(0x2Fu);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
}

uint64_t sub_1001DD688(unsigned __int16 *a1)
{
  unsigned int v2;
  uint64_t v4;
  NSObject *v5;

  if (!a1)
    return 0;
  v2 = *a1;
  if (v2 < 0x80)
    return 483;
  if (v2 <= *(unsigned __int16 *)(sub_100252DE8(0x28u) + 8))
  {
    if (a1[1] - 1280 < 0xFAFF)
      return 484;
    return 0;
  }
  if (sub_10005549C())
  {
    v4 = sub_100252DE8(0x28u);
    sub_100054530("Could not validate connect parameters: no resources, max %d, in %d", *(unsigned __int16 *)(v4 + 8), *a1);
    v5 = sub_1000544A0(0x2Fu);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
  return 104;
}

void sub_1001DD754(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int16 *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  char v10;
  __int16 v11;
  __int16 v12;
  __int16 v13;
  __int16 v14;
  __int16 v15;
  int *v16;

  if (sub_10019AC00(a1))
  {
    v4 = *(_QWORD *)(a1 + 224);
    if (v4)
    {
      v5 = sub_100251574(v4, 0);
      if (v5)
      {
        v6 = (unsigned __int16 *)v5;
        do
        {
          v16 = 0;
          if (!sub_1001DB044(*v6, (uint64_t *)&v16))
          {
            v7 = sub_1001E3CCC(v16);
            if ((_DWORD)a2)
            {
              if (*(_QWORD *)(v7 + 96))
              {
                v8 = sub_1001E3CCC(v16);
                (*(void (**)(_QWORD, _QWORD, _QWORD, uint64_t))(v8 + 96))(*((unsigned __int16 *)v16 + 2), 0, 0, a2);
              }
              sub_1001DC658((uint64_t)v16);
            }
            else
            {
              v9 = *(__int128 **)v7;
              v10 = *(_BYTE *)(sub_1001E3CCC(v16) + 28);
              v11 = *((_WORD *)v16 + 3);
              v12 = *((_WORD *)v16 + 2);
              v13 = *(_WORD *)(sub_1001E3CCC(v16) + 36);
              v14 = *(_WORD *)(sub_1001E3CCC(v16) + 72);
              v15 = sub_1001D8094(v16);
              sub_10022F0A8(v9, v10, v11, v12, v13, v14, v15);
            }
          }
          sub_100053298(v6);
          v6 = (unsigned __int16 *)sub_100251574(*(_QWORD *)(a1 + 224), 0);
        }
        while (v6);
      }
      sub_1002512C0(*(_QWORD **)(a1 + 224));
      *(_QWORD *)(a1 + 224) = 0;
    }
  }
}

void sub_1001DD894(uint64_t a1, uint64_t a2)
{
  if ((sub_100230754(a1) & 1) == 0)
    sub_1001DD754(a1, a2);
}

void sub_1001DD8D0(_DWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = sub_10019AFA0(a1);
  sub_1001DD754(v4, a3);
}

double sub_1001DD8F4()
{
  double result;

  *(_QWORD *)&result = sub_10022D270((__n128 *)off_10097A7F0).n128_u64[0];
  return result;
}

uint64_t sub_1001DD900()
{
  return sub_10022D328(off_10097A7F0);
}

uint64_t sub_1001DD90C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, __int16 *a6, _WORD *a7)
{
  __int16 v12;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  __int16 v17;
  int *v18;
  int *v19;
  char v20;
  __int16 v21;
  unsigned int v22;
  __int16 *v23;
  __int16 v25;
  __int16 v26;
  uint64_t v27;
  NSObject *v28;
  __int128 *v29;
  char v30;
  __int16 v31;
  __int16 v32;
  __int16 v33;
  __int16 v34;
  __int16 v35;
  int *v36;

  if (a1 && a2 && a3 && ((v12 = a4, (a4 - 1) < 0x7F) || (a4 & 0xFF80) == 0x80) && a7)
  {
    if (sub_10019AC00(a5))
    {
      v14 = sub_1001DDBBC((uint64_t)a6);
      if (!(_DWORD)v14)
      {
        v36 = 0;
        v14 = sub_1001DC04C(2u, (uint64_t *)&v36, 1);
        if (!(_DWORD)v14)
        {
          v15 = v36;
          *a7 = *((_WORD *)v36 + 2);
          *(_BYTE *)(sub_1001E3CCC(v15) + 24) = 0;
          *(_QWORD *)sub_1001E3CCC(v36) = a5;
          v16 = sub_1001E3CCC(v36);
          v17 = *(_WORD *)(a5 + 53);
          *(_DWORD *)(v16 + 10) = *(_DWORD *)(a5 + 49);
          *(_WORD *)(v16 + 14) = v17;
          v18 = v36;
          *((_WORD *)v36 + 3) = v12;
          *(_BYTE *)(sub_1001E3CCC(v18) + 16) = 1;
          *(_QWORD *)(sub_1001E3CCC(v36) + 88) = a2;
          *(_QWORD *)(sub_1001E3CCC(v36) + 96) = a1;
          v19 = v36;
          *((_QWORD *)v36 + 4) = a3;
          *(_WORD *)(sub_1001E3CCC(v19) + 48) = 0;
          *(_BYTE *)(sub_1001E3CCC(v36) + 78) = 0;
          v20 = sub_1001FEFA4();
          *(_BYTE *)(sub_1001E3CCC(v36) + 28) = v20;
          v21 = *a6;
          *(_WORD *)(sub_1001E3CCC(v36) + 36) = v21;
          v22 = *(unsigned __int16 *)(sub_100252DE8(0x28u) + 8);
          if (v22 <= *(unsigned __int16 *)(sub_1001E3CCC(v36) + 36))
            v23 = (__int16 *)(sub_100252DE8(0x28u) + 8);
          else
            v23 = (__int16 *)(sub_1001E3CCC(v36) + 36);
          v25 = *v23;
          *(_WORD *)(sub_1001E3CCC(v36) + 36) = v25;
          v26 = a6[1];
          *(_WORD *)(sub_1001E3CCC(v36) + 72) = v26;
          v27 = sub_1001D802C(v36, (unsigned __int16)a6[4], a6[3]);
          if ((_DWORD)v27)
          {
            v14 = v27;
            if (sub_10005549C())
            {
              sub_100054530("LE_L2CAP_InitLocalParams returned %!. Failed to initiate parameters. Aborting.\n", v14);
              v28 = sub_1000544A0(0x2Fu);
              if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
                sub_1006CE7A4();
            }
            sub_1001DC658((uint64_t)v36);
          }
          else
          {
            *(_BYTE *)(sub_1001E3CCC(v36) + 25) = 1;
            v29 = *(__int128 **)sub_1001E3CCC(v36);
            v30 = *(_BYTE *)(sub_1001E3CCC(v36) + 28);
            v31 = *((_WORD *)v36 + 3);
            v32 = *((_WORD *)v36 + 2);
            v33 = *(_WORD *)(sub_1001E3CCC(v36) + 36);
            v34 = *(_WORD *)(sub_1001E3CCC(v36) + 72);
            v35 = sub_1001D8094(v36);
            sub_10022F0A8(v29, v30, v31, v32, v33, v34, v35);
            return 0;
          }
        }
      }
    }
    else
    {
      return 414;
    }
  }
  else
  {
    sub_100253460();
    return 101;
  }
  return v14;
}

uint64_t sub_1001DDBBC(uint64_t result)
{
  unsigned __int16 *v1;
  unsigned int v2;
  NSObject *v3;
  NSObject *v4;

  if (result)
  {
    v1 = (unsigned __int16 *)result;
    v2 = *(unsigned __int16 *)result;
    if (v2 <= *(unsigned __int16 *)(sub_100252DE8(0x28u) + 8))
    {
      if (v1[1] <= *v1)
      {
        return 0;
      }
      else
      {
        if (sub_10005549C())
        {
          sub_100054530("MTU must be equal or greater than MPS (MPS=%d, MTU=%d)\n", v1[1], *v1);
          v4 = sub_1000544A0(0x2Fu);
          if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
            sub_1006CE7A4();
        }
        return 101;
      }
    }
    else
    {
      if (sub_10005549C())
      {
        sub_100054530("Could not validate connect parameters: no resources");
        v3 = sub_1000544A0(0x2Fu);
        if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      return 104;
    }
  }
  return result;
}

uint64_t sub_1001DDCAC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, int a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  NSObject *v19;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int *v26;
  char v27;
  NSObject *v28;
  unsigned int v29;
  int *v30;
  char v31;
  unsigned int v32;
  NSObject *v33;
  uint64_t v34;
  NSObject *v35;
  unsigned int v36;
  __int16 *v37;
  __int16 v38;
  int *v39;
  uint64_t *v40;
  uint8x8_t v41;
  int v42;
  _BYTE *v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  uint64_t v51;
  NSObject *v52;
  uint64_t v53;
  int *v54;

  v54 = 0;
  v13 = sub_1001DB044(a4, (uint64_t *)&v54);
  if (!(_DWORD)v13)
  {
    if (*(_BYTE *)(sub_1001E3CCC(v54) + 16) != 2)
    {
      if (sub_10005549C())
      {
        v18 = sub_1001E3CCC(v54);
        sub_100054530("Invalid State: %d", *(unsigned __int8 *)(v18 + 16));
        v19 = sub_1000544A0(0x2Fu);
        if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      return 408;
    }
    if (!a6)
    {
      sub_1001DE224((uint64_t)v54, 530, 0);
      return 0;
    }
    if (!a1 || !a2 || !a3 || !a7)
    {
      sub_100253460();
      return 101;
    }
    v16 = sub_1001DD688((unsigned __int16 *)a5);
    if ((_DWORD)v16)
    {
      v14 = v16;
      if (sub_10005549C())
      {
        sub_100054530("Invalid Connect Params: %!", v14);
        v17 = sub_1000544A0(0x2Fu);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
          goto LABEL_50;
      }
      return v14;
    }
    *(_QWORD *)(sub_1001E3CCC(v54) + 96) = a1;
    *(_QWORD *)(sub_1001E3CCC(v54) + 88) = a2;
    v21 = v54;
    *((_QWORD *)v54 + 4) = a3;
    *((_QWORD *)v21 + 8) = a7;
    if (a5)
    {
      v22 = *(_QWORD *)(a5 + 16);
      v23 = sub_1001E3CCC(v21);
      if (v22)
      {
        v24 = *(uint64_t **)(a5 + 16);
        v25 = *v24;
        *(_WORD *)(v23 + 50) = *((_WORD *)v24 + 4);
        *(_QWORD *)(v23 + 42) = v25;
      }
      else
      {
        *(_WORD *)(v23 + 48) = 0;
      }
      v27 = *(_BYTE *)(a5 + 24);
      *(_BYTE *)(sub_1001E3CCC(v54) + 78) = v27;
      v14 = sub_1001EF3B0(v54, *(unsigned __int8 *)(a5 + 12), *(_BYTE *)(a5 + 13));
      if ((_DWORD)v14)
      {
LABEL_30:
        if (!sub_10005549C())
          goto LABEL_46;
        sub_100054530("Flow init failed with %!, rejecting connection", v14);
        v28 = sub_1000544A0(0x2Fu);
        if (!os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
          goto LABEL_46;
        goto LABEL_45;
      }
      if (*(_DWORD *)(a5 + 8))
        v29 = *(_DWORD *)(a5 + 8);
      else
        v29 = -1;
      v30 = v54;
      v54[19] = v29;
      if (*(_BYTE *)(a5 + 6))
        v31 = *(_BYTE *)(a5 + 6);
      else
        v31 = 4;
      if (*(_BYTE *)(a5 + 7))
        v32 = *(unsigned __int8 *)(a5 + 7);
      else
        v32 = 5;
      v14 = sub_1001F0E30(*((unsigned __int16 *)v30 + 2), v31, v32, 0, (uint64_t *)v30 + 12, v29);
      if ((_DWORD)v14)
        goto LABEL_43;
      v34 = sub_1001DCFE8(v54, (__int16 *)a5);
      if ((_DWORD)v34)
      {
        v14 = v34;
        sub_1001DC658((uint64_t)v54);
        if (sub_10005549C())
        {
          sub_100054530("OI_ConnectMan_handleChannelParamConflicts failed: %!", v14);
          v35 = sub_1000544A0(0x2Fu);
          if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR))
            goto LABEL_50;
        }
        return v14;
      }
    }
    else
    {
      *(_WORD *)(sub_1001E3CCC(v21) + 48) = 0;
      *(_BYTE *)(sub_1001E3CCC(v54) + 78) = 0;
      v14 = sub_1001EF3B0(v54, 0, 0);
      if ((_DWORD)v14)
        goto LABEL_30;
      v26 = v54;
      v54[19] = -1;
      v14 = sub_1001F0E30(*((unsigned __int16 *)v26 + 2), 4, 5u, 0, (uint64_t *)v26 + 12, 0xFFFFFFFF);
      if ((_DWORD)v14)
      {
LABEL_43:
        if (!sub_10005549C())
          goto LABEL_46;
        sub_100054530("Queue register failed with %!, rejecting connection", v14);
        v33 = sub_1000544A0(0x2Fu);
        if (!os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
          goto LABEL_46;
        goto LABEL_45;
      }
    }
    v36 = *(unsigned __int16 *)(sub_100252DE8(0x28u) + 8);
    if (v36 <= *(unsigned __int16 *)(sub_1001E3CCC(v54) + 36))
      v37 = (__int16 *)(sub_100252DE8(0x28u) + 8);
    else
      v37 = (__int16 *)(sub_1001E3CCC(v54) + 36);
    v38 = *v37;
    *(_WORD *)(sub_1001E3CCC(v54) + 36) = v38;
    v39 = v54;
    if (*((_QWORD *)v54 + 8))
    {
      v40 = (uint64_t *)sub_1001E3CCC(v54);
      v42 = sub_10024B924(*v40, **((_QWORD **)v54 + 8), *(_QWORD *)(*((_QWORD *)v54 + 8) + 8), v41);
      v39 = v54;
      if (v42)
      {
        v43 = *(_BYTE **)sub_1001E3CCC(v54);
        v44 = *(_BYTE *)(sub_1001E3CCC(v54) + 29);
        v45 = *((unsigned __int16 *)v54 + 2);
        v53 = *(unsigned __int16 *)(sub_1001E3CCC(v54) + 8);
        v49 = sub_1001FF230("aaaa", 3u, 0, v43, v44, v46, v47, v48, v45);
        if ((_DWORD)v49)
        {
          v14 = v49;
          if (!sub_10005549C())
            goto LABEL_46;
          sub_100054530("Sending Pending response failed %!", v14, v53, 1, 1);
          v50 = sub_1000544A0(0x2Fu);
          if (!os_log_type_enabled(v50, OS_LOG_TYPE_ERROR))
            goto LABEL_46;
          goto LABEL_45;
        }
        v39 = v54;
      }
    }
    v51 = sub_1001E3CCC(v39);
    v14 = sub_10025495C((uint64_t)sub_1001DE4A8, v51 + 10, *((__int128 **)v54 + 8), v54 + 18, 1);
    if (!(_DWORD)v14)
    {
      *(_BYTE *)(sub_1001E3CCC(v54) + 25) = 2;
      return v14;
    }
    if (!sub_10005549C())
      goto LABEL_46;
    sub_100054530("Policy Mgr for new connection failed %!", v14);
    v52 = sub_1000544A0(0x2Fu);
    if (!os_log_type_enabled(v52, OS_LOG_TYPE_ERROR))
      goto LABEL_46;
LABEL_45:
    sub_1006CE7A4();
LABEL_46:
    sub_1001DE224((uint64_t)v54, v14, 0);
    return v14;
  }
  v14 = v13;
  if (sub_10005549C())
  {
    sub_100054530("OI_ChanMan_GetChannel failed: %!", v14);
    v15 = sub_1000544A0(0x2Fu);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
LABEL_50:
      sub_1006CE7A4();
  }
  return v14;
}

void sub_1001DE224(uint64_t a1, uint64_t a2, int a3)
{
  _BYTE *v6;
  char v7;
  int v8;
  NSObject *v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  uint64_t v30;
  uint64_t v31;

  if (!a1)
    sub_100253460();
  v6 = *(_BYTE **)sub_1001E3CCC((int *)a1);
  v7 = *(_BYTE *)(sub_1001E3CCC((int *)a1) + 29);
  if ((_DWORD)a2)
    goto LABEL_4;
  if (*(_BYTE *)(sub_1001E3CCC((int *)a1) + 16) != 2)
    sub_100253460();
  *(_BYTE *)(sub_1001E3CCC((int *)a1) + 25) = 3;
  v19 = *(unsigned __int16 *)(a1 + 4);
  v31 = *(unsigned __int16 *)(sub_1001E3CCC((int *)a1) + 8);
  v23 = sub_1001FF230("aaaa", 3u, 0, v6, v7, v20, v21, v22, v19);
  if ((_DWORD)v23)
  {
    v24 = v23;
    if (sub_10005549C())
    {
      sub_100054530("Failed to complete incoming connection %!", v24, v31, 0, 0);
      v25 = sub_1000544A0(0x2Fu);
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
LABEL_4:
    v8 = sub_10005549C();
    if (a3)
    {
      if (v8)
      {
        sub_100054530("Incoming connection security failed");
        v9 = sub_1000544A0(0x2Fu);
        if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      v10 = 3;
    }
    else
    {
      if (v8)
      {
        sub_100054530("Incoming connection refused: %!", a2);
        v11 = sub_1000544A0(0x2Fu);
        if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      v10 = 4;
    }
    v12 = *(unsigned __int16 *)(a1 + 4);
    v30 = *(unsigned __int16 *)(sub_1001E3CCC((int *)a1) + 8);
    v16 = sub_1001FF230("aaaa", 3u, 0, v6, v7, v13, v14, v15, v12);
    if ((_DWORD)v16)
    {
      v17 = v16;
      if (sub_10005549C())
      {
        sub_100054530("SignalMan_ConnectRsp failed %!", v17, v30, v10, 0);
        v18 = sub_1000544A0(0x2Fu);
        if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
    }
    sub_1001DCE10(a1, (v10 + 450));
    return;
  }
  sub_1001E07CC((int *)a1);
  v26 = sub_1001E3CCC((int *)a1);
  v27 = sub_1002537E8(*(_DWORD *)(v26 + 80), 1);
  if ((_DWORD)v27)
  {
    v28 = v27;
    if (sub_10005549C())
    {
      sub_100054530("OI_Dispatch_SetFuncTimeout failed %!", v28, v31, 0, 0);
      v29 = sub_1000544A0(0x2Fu);
      if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
}

void sub_1001DE4A8(uint64_t a1, uint64_t a2, unsigned int a3)
{
  int *v6;
  uint64_t v7;
  NSObject *v8;
  NSObject *v9;

  v6 = sub_1001DBA68(a1);
  if (v6)
  {
    v7 = (uint64_t)v6;
    if ((_DWORD)a2)
    {
      if (sub_10005549C())
      {
        sub_100054530("Policy enforcement failed %! - cid 0x%x, handle %d securityFailed %d", a2, *(unsigned __int16 *)(v7 + 4), a1, a3);
        v8 = sub_1000544A0(0x2Fu);
        if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      if (!*(_BYTE *)(sub_1001E3CCC((int *)v7) + 24))
      {
        sub_1001DCE10(v7, a2);
        return;
      }
    }
    else if (!*(_BYTE *)(sub_1001E3CCC(v6) + 24))
    {
      sub_1001DFF68(v7, 0);
      return;
    }
    sub_1001DE224(v7, a2, a3);
  }
  else if (sub_10005549C())
  {
    sub_100054530("Channel not found in PolicyCB!");
    v9 = sub_1000544A0(0x2Fu);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
}

uint64_t sub_1001DE5D8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, int a6)
{
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  int v14;
  int v15;
  char v16;
  int v17;
  uint64_t v18;
  NSObject *v19;
  int v20;
  uint64_t v21;
  NSObject *v22;
  int *v23;
  __int128 *v24;
  char v25;
  __int16 v26;
  __int16 v27;
  __int16 v28;
  __int16 v29;
  NSObject *v30;
  int *v31;
  __int16 v32;
  uint64_t v33;
  unsigned int v34;
  int *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  void (*v41)(uint64_t, uint64_t, _QWORD, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int16 v46;
  unsigned int v47;
  __int16 *v48;
  __int16 v49;
  unsigned __int8 v50;
  int *v51;

  v51 = 0;
  v11 = sub_1001DB044(a4, (uint64_t *)&v51);
  if ((_DWORD)v11 || !sub_1001E3CCC(v51))
  {
    if (sub_10005549C())
    {
      sub_100054530("OI_ChanMan_GetChannel failed: %!", v11);
      v12 = sub_1000544A0(0x2Fu);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return v11;
  }
  v13 = *(_QWORD *)sub_1001E3CCC(v51);
  if (*(_BYTE *)(sub_1001E3CCC(v51) + 16) != 2)
  {
    if (sub_10005549C())
    {
      v18 = sub_1001E3CCC(v51);
      sub_100054530("Invalid State: %d", *(unsigned __int8 *)(v18 + 16));
      v19 = sub_1000544A0(0x2Fu);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 408;
  }
  v14 = sub_10022D980(v13);
  v15 = sub_10022DAE0(v13);
  v50 = 0;
  if (v15)
    sub_10022DB64(v13, &v50);
  if (!*(_BYTE *)(a5 + 4))
  {
    if (*(_BYTE *)(a5 + 5))
    {
      v20 = sub_10022DA04(v13);
      if (v20)
        v17 = 4;
      else
        v17 = 6;
      if (!v20 || (a6 & 1) == 0)
        goto LABEL_40;
      goto LABEL_30;
    }
LABEL_29:
    if (!a6)
    {
      v17 = 4;
      goto LABEL_40;
    }
LABEL_30:
    if (!a1 || !a2 || !a3)
    {
      sub_100253460();
      return 101;
    }
    v21 = sub_1001DDBBC(a5);
    if ((_DWORD)v21)
    {
      v11 = v21;
      if (sub_10005549C())
      {
        sub_100054530("Invalid Connect Params: %!", v11);
        v22 = sub_1000544A0(0x2Fu);
        if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      return v11;
    }
    *(_QWORD *)(sub_1001E3CCC(v51) + 96) = a1;
    *(_QWORD *)(sub_1001E3CCC(v51) + 88) = a2;
    v31 = v51;
    *((_QWORD *)v51 + 4) = a3;
    *(_WORD *)(sub_1001E3CCC(v31) + 48) = 0;
    *(_BYTE *)(sub_1001E3CCC(v51) + 78) = 0;
    v32 = *(_WORD *)a5;
    *(_WORD *)(sub_1001E3CCC(v51) + 36) = v32;
    v33 = sub_1001EF3B0(v51, 5, 0);
    if ((_DWORD)v33
      || (!*(_DWORD *)(a5 + 12) ? (v34 = -1) : (v34 = *(_DWORD *)(a5 + 12)),
          v35 = v51,
          v51[19] = v34,
          v33 = sub_1001F0E30(*((unsigned __int16 *)v35 + 2), 15, 5u, 0, (uint64_t *)v35 + 12, v34),
          (_DWORD)v33))
    {
      v11 = v33;
      sub_1001DC658((uint64_t)v51);
      return v11;
    }
    v46 = *(_WORD *)(a5 + 2);
    *(_WORD *)(sub_1001E3CCC(v51) + 72) = v46;
    sub_1001D802C(v51, *(unsigned __int16 *)(a5 + 8), *(_WORD *)(a5 + 6));
    v47 = *(unsigned __int16 *)(sub_100252DE8(0x28u) + 8);
    if (v47 <= *(unsigned __int16 *)(sub_1001E3CCC(v51) + 36))
      v48 = (__int16 *)(sub_100252DE8(0x28u) + 8);
    else
      v48 = (__int16 *)(sub_1001E3CCC(v51) + 36);
    v49 = *v48;
    v17 = 0;
    *(_WORD *)(sub_1001E3CCC(v51) + 36) = v49;
    goto LABEL_40;
  }
  if (!v14)
  {
    v17 = 8;
    goto LABEL_40;
  }
  if (v50 < 0x10u)
    v16 = v15;
  else
    v16 = 0;
  if ((v16 & 1) == 0)
  {
    if ((*(unsigned __int8 *)(v13 + 168) | 2) != 3)
    {
      v17 = 5;
      goto LABEL_40;
    }
    goto LABEL_29;
  }
  v17 = 7;
LABEL_40:
  v23 = v51;
  if (!v51)
    sub_100253460();
  v24 = *(__int128 **)sub_1001E3CCC(v23);
  v25 = *(_BYTE *)(sub_1001E3CCC(v23) + 29);
  if (!v17 && *(_BYTE *)(sub_1001E3CCC(v23) + 16) != 2)
    sub_100253460();
  v26 = *((_WORD *)v23 + 2);
  v27 = *(_WORD *)(sub_1001E3CCC(v23) + 36);
  v28 = *(_WORD *)(sub_1001E3CCC(v23) + 72);
  v29 = sub_1001D8094(v23);
  v11 = sub_10022EEE0(v24, v25, v26, v27, v28, v29, v17);
  *(_BYTE *)(sub_1001E3CCC(v23) + 16) = 4;
  if ((_DWORD)v11
    && sub_10005549C()
    && (sub_100054530("SignalMan_LeChannelConnectionRsp failed %!", v11),
        v30 = sub_1000544A0(0x2Fu),
        os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)))
  {
    sub_1006CE7A4();
    if (v17)
      goto LABEL_49;
  }
  else if (v17)
  {
LABEL_49:
    sub_1001DCE10((uint64_t)v23, (v17 + 580));
    return v11;
  }
  v36 = (uint64_t *)sub_1001E3CCC(v23);
  v37 = sub_1001F37D8(*v36);
  if ((_DWORD)v11)
  {
    if (sub_10005549C())
    {
      v38 = *(_QWORD *)sub_1001E3CCC(v23);
      v39 = sub_1001E3CCC(v23);
      sub_100054530("OI_Sar_SetMTU(%d, %d) failed %!", v38, *(unsigned __int16 *)(v39 + 36), v11);
      v40 = sub_1000544A0(0x2Fu);
      if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
  v41 = *(void (**)(uint64_t, uint64_t, _QWORD, uint64_t))(sub_1001E3CCC(v23) + 96);
  v42 = *((unsigned __int16 *)v23 + 2);
  v43 = *(unsigned __int16 *)(sub_1001E3CCC(v23) + 36);
  v44 = sub_1001E3CCC(v23);
  v41(v42, v43, *(unsigned __int16 *)(v44 + 32), v37);
  return v11;
}

uint64_t sub_1001DEAD4(unsigned int a1, uint64_t a2)
{
  uint64_t v4;
  NSObject *v5;
  int *v6;
  int *v8;

  v8 = 0;
  v4 = sub_1001DB044(a1, (uint64_t *)&v8);
  if ((_DWORD)v4)
  {
    if (sub_10005549C())
    {
      sub_100054530("GetChannel with cid %d failed with status %!", a1, v4);
      v5 = sub_1000544A0(0x2Fu);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
  }
  else
  {
    v6 = v8;
    if (!v8)
    {
      sub_100253460();
      v6 = v8;
    }
    *(_QWORD *)(sub_1001E3CCC(v6) + 88) = a2;
  }
  return v4;
}

uint64_t sub_1001DEB7C(unsigned int a1, uint64_t a2)
{
  NSObject *v4;
  int *v6;
  int v7;
  NSObject *v8;
  NSObject *v9;
  unsigned __int16 **v10;
  int *v11;
  uint8_t buf[4];
  void *v13;

  v11 = 0;
  if (sub_10005549C())
  {
    sub_100054530("L2CAP Disconnect cid=%d(0x%x) , reason=%!", a1, a1, a2);
    v4 = sub_1000544A0(0x2Fu);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      v13 = sub_100054494();
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (sub_1001DB044(a1, (uint64_t *)&v11))
    return 404;
  if (*(_BYTE *)(sub_1001E3CCC(v11) + 17))
    return 0;
  if (*(_BYTE *)(sub_1001E3CCC(v11) + 16) != 4 && *(_BYTE *)(sub_1001E3CCC(v11) + 16) != 5)
    return 408;
  v6 = v11;
  v7 = *v11;
  if (*v11 == 2)
  {
    sub_1001F2690(a1);
    v6 = v11;
    return sub_1001DED8C(v6, a2);
  }
  if (v7 != 4)
  {
    if (v7 == 3)
    {
      if (sub_10005549C())
      {
        sub_100054530("Can't disconnect fixed of Magnet channels using the signal manager.");
        v8 = sub_1000544A0(0x2Fu);
        if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
      return 403;
    }
    return sub_1001DED8C(v6, a2);
  }
  if (sub_10005549C())
  {
    sub_100054530("Magnet got messed up");
    v9 = sub_1000544A0(0x2Fu);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      sub_1006CE7A4();
  }
  sub_100253508(5006);
  v10 = (unsigned __int16 **)sub_1001E3CCC(v11);
  return sub_1001741B4(*v10);
}

uint64_t sub_1001DED8C(int *a1, uint64_t a2)
{
  _BYTE *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;

  if (!*(_QWORD *)sub_1001E3CCC(a1))
    sub_100253460();
  *(_BYTE *)(sub_1001E3CCC(a1) + 16) = 6;
  *(_DWORD *)(sub_1001E3CCC(a1) + 20) = a2;
  v4 = *(_BYTE **)sub_1001E3CCC(a1);
  v5 = sub_1001FEFA4();
  v6 = sub_1001E3CCC(a1);
  v10 = sub_1001FF230("aa", 6u, a1, v4, v5, v7, v8, v9, *(unsigned __int16 *)(v6 + 8));
  if ((_DWORD)v10)
  {
    if (sub_10005549C())
    {
      sub_100054530("Failed to send disconnect, closing channel");
      v11 = sub_1000544A0(0x2Fu);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
        sub_1006D2728();
    }
    sub_1001DCE10((uint64_t)a1, a2);
  }
  return v10;
}

uint64_t sub_1001DEE88(unsigned int a1)
{
  uint64_t v1;
  NSObject *v2;
  int *v3;
  char v4;
  __int128 *v5;
  char v6;
  __int16 v7;
  uint64_t v8;
  NSObject *v9;
  int *v11;

  v11 = 0;
  if (sub_1001DB044(a1, (uint64_t *)&v11))
    return 404;
  if ((*v11 - 3) > 1)
  {
    if (*(_BYTE *)(sub_1001E3CCC(v11) + 17))
    {
      return 0;
    }
    else if (*(_BYTE *)(sub_1001E3CCC(v11) + 16) == 4)
    {
      v3 = v11;
      if (!*(_QWORD *)sub_1001E3CCC(v11))
        sub_100253460();
      *(_BYTE *)(sub_1001E3CCC(v3) + 16) = 6;
      *(_DWORD *)(sub_1001E3CCC(v3) + 20) = 436;
      v4 = sub_1001FEFA4();
      *(_BYTE *)(sub_1001E3CCC(v3) + 28) = v4;
      v5 = *(__int128 **)sub_1001E3CCC(v3);
      v6 = *(_BYTE *)(sub_1001E3CCC(v3) + 28);
      v7 = *((_WORD *)v3 + 2);
      v8 = sub_1001E3CCC(v3);
      v1 = sub_10022F604(v5, v6, v7, *(_WORD *)(v8 + 8));
      if ((_DWORD)v1)
      {
        if (sub_10005549C())
        {
          sub_100054530("Failed to send disconnect, closing channel");
          v9 = sub_1000544A0(0x2Fu);
          if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
            sub_1006D2728();
        }
        sub_1001DCE10((uint64_t)v3, 436);
      }
    }
    else
    {
      return 408;
    }
  }
  else
  {
    if (sub_10005549C())
    {
      sub_100054530("Can't disconnect fixed of Magnet channels using the signal manager.");
      v2 = sub_1000544A0(0x2Fu);
      if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 403;
  }
  return v1;
}

uint64_t sub_1001DF034(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  uint64_t v5;
  char *v6;
  size_t v7;
  __int128 v8;
  NSObject *v9;
  uint64_t v10;
  int v11;
  __int16 v12;
  __int16 v13;
  unsigned __int16 v14;
  unsigned __int16 v15;
  int v16;
  int v17;
  NSObject *v18;
  char *v19;
  size_t v20;
  uint64_t v21;
  _BYTE **v22;
  uint64_t v23;
  void *v24;
  NSObject *v25;
  __int128 v27;
  __int128 *v28;
  __int16 v29;
  int v30;
  _BYTE v31[32];
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  int buf;
  void *v41;
  __int16 v42;
  int v43;

  v4 = *(unsigned __int16 *)(a2 + 4);
  sub_1001E3CCC((int *)a1);
  v28 = &v27;
  v39 = 0;
  v38 = 0u;
  v36 = 0u;
  v37 = 0u;
  v34 = 0u;
  v35 = 0u;
  v32 = 0u;
  v33 = 0u;
  memset(v31, 0, sizeof(v31));
  v30 = 0;
  v29 = 0;
  __chkstk_darwin();
  v6 = (char *)&v27 - v5;
  bzero((char *)&v27 - v5, v7);
  if (v4 <= *(unsigned __int16 *)(sub_1001E3CCC((int *)a1) + 32))
  {
    if (v4)
    {
      v11 = 0;
      *(_QWORD *)&v8 = 136446466;
      v27 = v8;
      while (1)
      {
        v12 = *(_WORD *)(sub_1001E3CCC((int *)a1) + 60);
        if (v11)
          v13 = -4;
        else
          v13 = -6;
        v14 = v13 + v12;
        if ((int)(v4 - v11) >= v14)
          v15 = v14;
        else
          v15 = v4 - v11;
        v16 = sub_100053900(v6, a2, v15);
        if (v15 != v16)
        {
          v17 = v16;
          if (sub_10005549C())
          {
            sub_100054530("Failed to get the full payload size (%d), only got %d bytes", v15, v17);
            v18 = sub_1000544A0(0x2Fu);
            if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
            {
              v24 = sub_100054494();
              buf = v27;
              v41 = v24;
              v42 = 1024;
              v43 = 0xFFFF;
              _os_log_error_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", (uint8_t *)&buf, 0x12u);
            }
          }
          v15 = v17;
        }
        LOWORD(v30) = 2 * (v11 == 0) + v15;
        HIWORD(v30) = *(_WORD *)(sub_1001E3CCC((int *)a1) + 8);
        if (v11)
        {
          sub_1000532A8((uint64_t)&v32 + 8, 2u);
          v19 = (char *)&v30;
          v20 = 4;
        }
        else
        {
          v29 = v4;
          sub_1000532A8((uint64_t)&v32 + 8, 3u);
          sub_10005336C((unsigned __int8 *)&v32 + 8, (char *)&v30, 4uLL, 0);
          v19 = (char *)&v29;
          v20 = 2;
        }
        sub_10005336C((unsigned __int8 *)&v32 + 8, v19, v20, 0);
        sub_10005336C((unsigned __int8 *)&v32 + 8, v6, v15, 2u);
        v31[0] = *(__int16 *)(sub_1001E3CCC((int *)a1) + 38) == -1;
        v21 = *(_QWORD *)(a1 + 128);
        *(_QWORD *)&v33 = a1;
        *(_QWORD *)&v32 = v21;
        *(_QWORD *)(a1 + 128) = 0;
        v22 = (_BYTE **)sub_1001E3CCC((int *)a1);
        v23 = sub_1001F3A24((uint64_t)v31, *v22, 0, *(_WORD *)(a1 + 4));
        v10 = v23;
        if ((_DWORD)v23 != 412)
        {
          if ((_DWORD)v23)
            break;
        }
        v11 = (unsigned __int16)(v15 + v11);
        if (v11 == v4)
          return v10;
      }
      if (sub_10005549C())
      {
        sub_100054530("LE_L2CAP_FragmentWriteMBUF %!", v10);
        v25 = sub_1000544A0(0x2Fu);
        if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
          sub_1006CE7A4();
      }
    }
    else
    {
      return 531;
    }
  }
  else
  {
    if (sub_10005549C())
    {
      sub_100054530("Error, packet too large");
      v9 = sub_1000544A0(0x2Fu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        sub_1006CE7A4();
    }
    return 472;
  }
  return v10;
}

